// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getPropagations(args: GetPropagationsArgs, opts?: pulumi.InvokeOptions): Promise<GetPropagationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Er/getPropagations:getPropagations", {
        "attachmentId": args.attachmentId,
        "attachmentType": args.attachmentType,
        "instanceId": args.instanceId,
        "region": args.region,
        "routeTableId": args.routeTableId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getPropagations.
 */
export interface GetPropagationsArgs {
    attachmentId?: string;
    attachmentType?: string;
    instanceId: string;
    region?: string;
    routeTableId: string;
    status?: string;
}

/**
 * A collection of values returned by getPropagations.
 */
export interface GetPropagationsResult {
    readonly attachmentId?: string;
    readonly attachmentType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly propagations: outputs.Er.GetPropagationsPropagation[];
    readonly region?: string;
    readonly routeTableId: string;
    readonly status?: string;
}
export function getPropagationsOutput(args: GetPropagationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPropagationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Er/getPropagations:getPropagations", {
        "attachmentId": args.attachmentId,
        "attachmentType": args.attachmentType,
        "instanceId": args.instanceId,
        "region": args.region,
        "routeTableId": args.routeTableId,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getPropagations.
 */
export interface GetPropagationsOutputArgs {
    attachmentId?: pulumi.Input<string>;
    attachmentType?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    routeTableId: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
