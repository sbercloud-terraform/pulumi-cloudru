// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class KafkaInstance extends pulumi.CustomResource {
    /**
     * Get an existing KafkaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaInstanceState, opts?: pulumi.CustomResourceOptions): KafkaInstance {
        return new KafkaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Dms/kafkaInstance:KafkaInstance';

    /**
     * Returns true if the given object is an instance of KafkaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KafkaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KafkaInstance.__pulumiType;
    }

    declare public readonly accessUser: pulumi.Output<string | undefined>;
    declare public readonly archType: pulumi.Output<string | undefined>;
    declare public readonly autoRenew: pulumi.Output<string | undefined>;
    /**
     * schema: Required
     */
    declare public readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availabilityZones" instead.
     */
    declare public readonly availableZones: pulumi.Output<string[]>;
    /**
     * @deprecated The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
     */
    declare public readonly bandwidth: pulumi.Output<string>;
    declare public readonly brokerNum: pulumi.Output<number>;
    declare public /*out*/ readonly certReplaced: pulumi.Output<boolean>;
    declare public readonly chargingMode: pulumi.Output<string>;
    declare public /*out*/ readonly connectAddress: pulumi.Output<string>;
    declare public /*out*/ readonly connectorId: pulumi.Output<string>;
    declare public /*out*/ readonly connectorNodeNum: pulumi.Output<number>;
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    declare public readonly crossVpcAccesses: pulumi.Output<outputs.Dms.KafkaInstanceCrossVpcAccess[]>;
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly dumping: pulumi.Output<boolean>;
    declare public readonly enableAutoTopic: pulumi.Output<boolean>;
    declare public /*out*/ readonly enablePublicIp: pulumi.Output<boolean>;
    declare public readonly enabledMechanisms: pulumi.Output<string[] | undefined>;
    declare public /*out*/ readonly engine: pulumi.Output<string>;
    declare public readonly engineVersion: pulumi.Output<string>;
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    declare public /*out*/ readonly extendTimes: pulumi.Output<number>;
    declare public readonly flavorId: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly ipv6ConnectAddresses: pulumi.Output<string[]>;
    declare public readonly ipv6Enable: pulumi.Output<boolean>;
    declare public /*out*/ readonly isLogicalVolume: pulumi.Output<boolean>;
    /**
     * schema: Internal
     */
    declare public readonly kmsEncryptedPassword: pulumi.Output<string | undefined>;
    declare public readonly maintainBegin: pulumi.Output<string>;
    declare public readonly maintainEnd: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    declare public /*out*/ readonly managementConnectAddress: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    declare public readonly managerPassword: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    declare public readonly managerUser: pulumi.Output<string | undefined>;
    /**
     * @deprecated typo in manegement_connect_address, please use "managementConnectAddress" instead.
     */
    declare public /*out*/ readonly manegementConnectAddress: pulumi.Output<string>;
    declare public /*out*/ readonly messageQueryInstEnable: pulumi.Output<boolean>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly networkId: pulumi.Output<string>;
    declare public readonly newTenantIps: pulumi.Output<string[] | undefined>;
    declare public /*out*/ readonly nodeNum: pulumi.Output<number>;
    declare public readonly parameters: pulumi.Output<outputs.Dms.KafkaInstanceParameter[]>;
    declare public /*out*/ readonly partitionNum: pulumi.Output<number>;
    declare public readonly password: pulumi.Output<string | undefined>;
    declare public readonly period: pulumi.Output<number | undefined>;
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly podConnectAddress: pulumi.Output<string>;
    declare public /*out*/ readonly port: pulumi.Output<number>;
    declare public /*out*/ readonly portProtocols: pulumi.Output<outputs.Dms.KafkaInstancePortProtocol[]>;
    declare public readonly productId: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly publicBandwidth: pulumi.Output<number>;
    declare public /*out*/ readonly publicIpAddresses: pulumi.Output<string[]>;
    declare public readonly publicIpIds: pulumi.Output<string[] | undefined>;
    declare public readonly region: pulumi.Output<string>;
    declare public /*out*/ readonly resourceSpecCode: pulumi.Output<string>;
    declare public readonly retentionPolicy: pulumi.Output<string>;
    declare public readonly securityGroupId: pulumi.Output<string>;
    declare public readonly securityProtocol: pulumi.Output<string | undefined>;
    declare public readonly sslEnable: pulumi.Output<boolean>;
    declare public /*out*/ readonly sslTwoWayEnable: pulumi.Output<boolean>;
    declare public /*out*/ readonly status: pulumi.Output<string>;
    declare public /*out*/ readonly storageResourceId: pulumi.Output<string>;
    declare public readonly storageSpace: pulumi.Output<number>;
    declare public readonly storageSpecCode: pulumi.Output<string>;
    declare public /*out*/ readonly storageType: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly type: pulumi.Output<string>;
    declare public /*out*/ readonly usedStorageSpace: pulumi.Output<number>;
    declare public /*out*/ readonly userId: pulumi.Output<string>;
    declare public /*out*/ readonly userName: pulumi.Output<string>;
    declare public readonly vpcClientPlain: pulumi.Output<boolean>;
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a KafkaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KafkaInstanceArgs | KafkaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KafkaInstanceState | undefined;
            resourceInputs["accessUser"] = state?.accessUser;
            resourceInputs["archType"] = state?.archType;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["availabilityZones"] = state?.availabilityZones;
            resourceInputs["availableZones"] = state?.availableZones;
            resourceInputs["bandwidth"] = state?.bandwidth;
            resourceInputs["brokerNum"] = state?.brokerNum;
            resourceInputs["certReplaced"] = state?.certReplaced;
            resourceInputs["chargingMode"] = state?.chargingMode;
            resourceInputs["connectAddress"] = state?.connectAddress;
            resourceInputs["connectorId"] = state?.connectorId;
            resourceInputs["connectorNodeNum"] = state?.connectorNodeNum;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["crossVpcAccesses"] = state?.crossVpcAccesses;
            resourceInputs["description"] = state?.description;
            resourceInputs["dumping"] = state?.dumping;
            resourceInputs["enableAutoTopic"] = state?.enableAutoTopic;
            resourceInputs["enablePublicIp"] = state?.enablePublicIp;
            resourceInputs["enabledMechanisms"] = state?.enabledMechanisms;
            resourceInputs["engine"] = state?.engine;
            resourceInputs["engineVersion"] = state?.engineVersion;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["extendTimes"] = state?.extendTimes;
            resourceInputs["flavorId"] = state?.flavorId;
            resourceInputs["ipv6ConnectAddresses"] = state?.ipv6ConnectAddresses;
            resourceInputs["ipv6Enable"] = state?.ipv6Enable;
            resourceInputs["isLogicalVolume"] = state?.isLogicalVolume;
            resourceInputs["kmsEncryptedPassword"] = state?.kmsEncryptedPassword;
            resourceInputs["maintainBegin"] = state?.maintainBegin;
            resourceInputs["maintainEnd"] = state?.maintainEnd;
            resourceInputs["managementConnectAddress"] = state?.managementConnectAddress;
            resourceInputs["managerPassword"] = state?.managerPassword;
            resourceInputs["managerUser"] = state?.managerUser;
            resourceInputs["manegementConnectAddress"] = state?.manegementConnectAddress;
            resourceInputs["messageQueryInstEnable"] = state?.messageQueryInstEnable;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["newTenantIps"] = state?.newTenantIps;
            resourceInputs["nodeNum"] = state?.nodeNum;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["partitionNum"] = state?.partitionNum;
            resourceInputs["password"] = state?.password;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["podConnectAddress"] = state?.podConnectAddress;
            resourceInputs["port"] = state?.port;
            resourceInputs["portProtocols"] = state?.portProtocols;
            resourceInputs["productId"] = state?.productId;
            resourceInputs["publicBandwidth"] = state?.publicBandwidth;
            resourceInputs["publicIpAddresses"] = state?.publicIpAddresses;
            resourceInputs["publicIpIds"] = state?.publicIpIds;
            resourceInputs["region"] = state?.region;
            resourceInputs["resourceSpecCode"] = state?.resourceSpecCode;
            resourceInputs["retentionPolicy"] = state?.retentionPolicy;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["securityProtocol"] = state?.securityProtocol;
            resourceInputs["sslEnable"] = state?.sslEnable;
            resourceInputs["sslTwoWayEnable"] = state?.sslTwoWayEnable;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageResourceId"] = state?.storageResourceId;
            resourceInputs["storageSpace"] = state?.storageSpace;
            resourceInputs["storageSpecCode"] = state?.storageSpecCode;
            resourceInputs["storageType"] = state?.storageType;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["type"] = state?.type;
            resourceInputs["usedStorageSpace"] = state?.usedStorageSpace;
            resourceInputs["userId"] = state?.userId;
            resourceInputs["userName"] = state?.userName;
            resourceInputs["vpcClientPlain"] = state?.vpcClientPlain;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as KafkaInstanceArgs | undefined;
            if (args?.engineVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.storageSpecCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageSpecCode'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accessUser"] = args?.accessUser;
            resourceInputs["archType"] = args?.archType;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["availabilityZones"] = args?.availabilityZones;
            resourceInputs["availableZones"] = args?.availableZones;
            resourceInputs["bandwidth"] = args?.bandwidth;
            resourceInputs["brokerNum"] = args?.brokerNum;
            resourceInputs["chargingMode"] = args?.chargingMode;
            resourceInputs["crossVpcAccesses"] = args?.crossVpcAccesses;
            resourceInputs["description"] = args?.description;
            resourceInputs["dumping"] = args?.dumping;
            resourceInputs["enableAutoTopic"] = args?.enableAutoTopic;
            resourceInputs["enabledMechanisms"] = args?.enabledMechanisms;
            resourceInputs["engineVersion"] = args?.engineVersion;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["flavorId"] = args?.flavorId;
            resourceInputs["ipv6Enable"] = args?.ipv6Enable;
            resourceInputs["kmsEncryptedPassword"] = args?.kmsEncryptedPassword ? pulumi.secret(args.kmsEncryptedPassword) : undefined;
            resourceInputs["maintainBegin"] = args?.maintainBegin;
            resourceInputs["maintainEnd"] = args?.maintainEnd;
            resourceInputs["managerPassword"] = args?.managerPassword ? pulumi.secret(args.managerPassword) : undefined;
            resourceInputs["managerUser"] = args?.managerUser;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["newTenantIps"] = args?.newTenantIps;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["productId"] = args?.productId;
            resourceInputs["publicIpIds"] = args?.publicIpIds;
            resourceInputs["region"] = args?.region;
            resourceInputs["retentionPolicy"] = args?.retentionPolicy;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["securityProtocol"] = args?.securityProtocol;
            resourceInputs["sslEnable"] = args?.sslEnable;
            resourceInputs["storageSpace"] = args?.storageSpace;
            resourceInputs["storageSpecCode"] = args?.storageSpecCode;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcClientPlain"] = args?.vpcClientPlain;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["certReplaced"] = undefined /*out*/;
            resourceInputs["connectAddress"] = undefined /*out*/;
            resourceInputs["connectorId"] = undefined /*out*/;
            resourceInputs["connectorNodeNum"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enablePublicIp"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["extendTimes"] = undefined /*out*/;
            resourceInputs["ipv6ConnectAddresses"] = undefined /*out*/;
            resourceInputs["isLogicalVolume"] = undefined /*out*/;
            resourceInputs["managementConnectAddress"] = undefined /*out*/;
            resourceInputs["manegementConnectAddress"] = undefined /*out*/;
            resourceInputs["messageQueryInstEnable"] = undefined /*out*/;
            resourceInputs["nodeNum"] = undefined /*out*/;
            resourceInputs["partitionNum"] = undefined /*out*/;
            resourceInputs["podConnectAddress"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["portProtocols"] = undefined /*out*/;
            resourceInputs["publicBandwidth"] = undefined /*out*/;
            resourceInputs["publicIpAddresses"] = undefined /*out*/;
            resourceInputs["resourceSpecCode"] = undefined /*out*/;
            resourceInputs["sslTwoWayEnable"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storageResourceId"] = undefined /*out*/;
            resourceInputs["storageType"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["usedStorageSpace"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["kmsEncryptedPassword", "managerPassword", "password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(KafkaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KafkaInstance resources.
 */
export interface KafkaInstanceState {
    accessUser?: pulumi.Input<string>;
    archType?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availabilityZones" instead.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
     */
    bandwidth?: pulumi.Input<string>;
    brokerNum?: pulumi.Input<number>;
    certReplaced?: pulumi.Input<boolean>;
    chargingMode?: pulumi.Input<string>;
    connectAddress?: pulumi.Input<string>;
    connectorId?: pulumi.Input<string>;
    connectorNodeNum?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    crossVpcAccesses?: pulumi.Input<pulumi.Input<inputs.Dms.KafkaInstanceCrossVpcAccess>[]>;
    description?: pulumi.Input<string>;
    dumping?: pulumi.Input<boolean>;
    enableAutoTopic?: pulumi.Input<boolean>;
    enablePublicIp?: pulumi.Input<boolean>;
    enabledMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    extendTimes?: pulumi.Input<number>;
    flavorId?: pulumi.Input<string>;
    ipv6ConnectAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6Enable?: pulumi.Input<boolean>;
    isLogicalVolume?: pulumi.Input<boolean>;
    /**
     * schema: Internal
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    managementConnectAddress?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    managerPassword?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    managerUser?: pulumi.Input<string>;
    /**
     * @deprecated typo in manegement_connect_address, please use "managementConnectAddress" instead.
     */
    manegementConnectAddress?: pulumi.Input<string>;
    messageQueryInstEnable?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    newTenantIps?: pulumi.Input<pulumi.Input<string>[]>;
    nodeNum?: pulumi.Input<number>;
    parameters?: pulumi.Input<pulumi.Input<inputs.Dms.KafkaInstanceParameter>[]>;
    partitionNum?: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    podConnectAddress?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    portProtocols?: pulumi.Input<pulumi.Input<inputs.Dms.KafkaInstancePortProtocol>[]>;
    productId?: pulumi.Input<string>;
    publicBandwidth?: pulumi.Input<number>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    publicIpIds?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    resourceSpecCode?: pulumi.Input<string>;
    retentionPolicy?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityProtocol?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    sslTwoWayEnable?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    storageResourceId?: pulumi.Input<string>;
    storageSpace?: pulumi.Input<number>;
    storageSpecCode?: pulumi.Input<string>;
    storageType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
    usedStorageSpace?: pulumi.Input<number>;
    userId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
    vpcClientPlain?: pulumi.Input<boolean>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KafkaInstance resource.
 */
export interface KafkaInstanceArgs {
    accessUser?: pulumi.Input<string>;
    archType?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availabilityZones" instead.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
     */
    bandwidth?: pulumi.Input<string>;
    brokerNum?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    crossVpcAccesses?: pulumi.Input<pulumi.Input<inputs.Dms.KafkaInstanceCrossVpcAccess>[]>;
    description?: pulumi.Input<string>;
    dumping?: pulumi.Input<boolean>;
    enableAutoTopic?: pulumi.Input<boolean>;
    enabledMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    engineVersion: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    flavorId?: pulumi.Input<string>;
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * schema: Internal
     */
    kmsEncryptedPassword?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    managerPassword?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    managerUser?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    newTenantIps?: pulumi.Input<pulumi.Input<string>[]>;
    parameters?: pulumi.Input<pulumi.Input<inputs.Dms.KafkaInstanceParameter>[]>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    publicIpIds?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    retentionPolicy?: pulumi.Input<string>;
    securityGroupId: pulumi.Input<string>;
    securityProtocol?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    storageSpace?: pulumi.Input<number>;
    storageSpecCode: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcClientPlain?: pulumi.Input<boolean>;
    vpcId: pulumi.Input<string>;
}
