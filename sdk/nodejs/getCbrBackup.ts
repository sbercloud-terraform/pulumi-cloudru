// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to query the backup detail using its ID within Sbercloud.
 *
 * ## Example Usage
 *
 * ### Using backup ID to query the backup detail
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const backupId = config.requireObject<any>("backupId");
 * const test = sbercloud.getCbrBackup({
 *     id: "backup_id",
 * });
 * ```
 */
export function getCbrBackup(args: GetCbrBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetCbrBackupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getCbrBackup:getCbrBackup", {
        "id": args.id,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCbrBackup.
 */
export interface GetCbrBackupArgs {
    /**
     * Specifies the backup ID.
     */
    id: string;
    /**
     * Specifies the region in which to query the backup detail.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getCbrBackup.
 */
export interface GetCbrBackupResult {
    /**
     * The restore point ID of the sub-backup resource.
     */
    readonly checkpointId: string;
    /**
     * The backup list of the sub-backup resources.
     * The object structure is documented below.
     */
    readonly childrens: outputs.GetCbrBackupChildren[];
    /**
     * The creation time of the sub-backup.
     */
    readonly createdAt: string;
    /**
     * The sub-backup description.
     */
    readonly description: string;
    /**
     * The enterprise project to which the backup sub-backup resource belongs.
     */
    readonly enterpriseProjectId: string;
    /**
     * The expiration time of the sub-backup.
     */
    readonly expiredAt: string;
    /**
     * The extended information.
     */
    readonly extendInfos: outputs.GetCbrBackupExtendInfo[];
    /**
     * The sub-backup ID.
     */
    readonly id: string;
    /**
     * The sub-backup name.
     */
    readonly name: string;
    /**
     * The parent backup ID.
     */
    readonly parentId: string;
    readonly region?: string;
    /**
     * The replication records.
     */
    readonly replicationRecords: outputs.GetCbrBackupReplicationRecord[];
    /**
     * The availability zone where the backup sub-backup resource is located.
     */
    readonly resourceAz: string;
    /**
     * The sub-backup resource ID.
     */
    readonly resourceId: string;
    /**
     * The sub-backup resource name.
     */
    readonly resourceName: string;
    /**
     * The sub-backup resource size, in GB.
     */
    readonly resourceSize: number;
    /**
     * The sub-backup resource type.
     */
    readonly resourceType: string;
    /**
     * The sub-backup status.
     */
    readonly status: string;
    /**
     * The sub-backup type.
     */
    readonly type: string;
    /**
     * The latest update time of the sub-backup.
     */
    readonly updatedAt: string;
    /**
     * The vault to which the backup resource belongs.
     */
    readonly vaultId: string;
}
/**
 * Use this data source to query the backup detail using its ID within Sbercloud.
 *
 * ## Example Usage
 *
 * ### Using backup ID to query the backup detail
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const backupId = config.requireObject<any>("backupId");
 * const test = sbercloud.getCbrBackup({
 *     id: "backup_id",
 * });
 * ```
 */
export function getCbrBackupOutput(args: GetCbrBackupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCbrBackupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getCbrBackup:getCbrBackup", {
        "id": args.id,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCbrBackup.
 */
export interface GetCbrBackupOutputArgs {
    /**
     * Specifies the backup ID.
     */
    id: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the backup detail.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
