// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigPluginAssociate struct {
	pulumi.CustomResourceState

	// The APIs bound by the plugin.
	ApiIds pulumi.StringArrayOutput `pulumi:"apiIds"`
	// The environment ID where the API was published.
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The plugin ID.
	PluginId pulumi.StringOutput `pulumi:"pluginId"`
	// The region where the plugin is located.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewApigPluginAssociate registers a new resource with the given unique name, arguments, and options.
func NewApigPluginAssociate(ctx *pulumi.Context,
	name string, args *ApigPluginAssociateArgs, opts ...pulumi.ResourceOption) (*ApigPluginAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiIds == nil {
		return nil, errors.New("invalid value for required argument 'ApiIds'")
	}
	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PluginId == nil {
		return nil, errors.New("invalid value for required argument 'PluginId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigPluginAssociate
	err := ctx.RegisterResource("cloudru:index/apigPluginAssociate:ApigPluginAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigPluginAssociate gets an existing ApigPluginAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigPluginAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigPluginAssociateState, opts ...pulumi.ResourceOption) (*ApigPluginAssociate, error) {
	var resource ApigPluginAssociate
	err := ctx.ReadResource("cloudru:index/apigPluginAssociate:ApigPluginAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigPluginAssociate resources.
type apigPluginAssociateState struct {
	// The APIs bound by the plugin.
	ApiIds []string `pulumi:"apiIds"`
	// The environment ID where the API was published.
	EnvId *string `pulumi:"envId"`
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The plugin ID.
	PluginId *string `pulumi:"pluginId"`
	// The region where the plugin is located.
	Region *string `pulumi:"region"`
}

type ApigPluginAssociateState struct {
	// The APIs bound by the plugin.
	ApiIds pulumi.StringArrayInput
	// The environment ID where the API was published.
	EnvId pulumi.StringPtrInput
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId pulumi.StringPtrInput
	// The plugin ID.
	PluginId pulumi.StringPtrInput
	// The region where the plugin is located.
	Region pulumi.StringPtrInput
}

func (ApigPluginAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigPluginAssociateState)(nil)).Elem()
}

type apigPluginAssociateArgs struct {
	// The APIs bound by the plugin.
	ApiIds []string `pulumi:"apiIds"`
	// The environment ID where the API was published.
	EnvId string `pulumi:"envId"`
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId string `pulumi:"instanceId"`
	// The plugin ID.
	PluginId string `pulumi:"pluginId"`
	// The region where the plugin is located.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ApigPluginAssociate resource.
type ApigPluginAssociateArgs struct {
	// The APIs bound by the plugin.
	ApiIds pulumi.StringArrayInput
	// The environment ID where the API was published.
	EnvId pulumi.StringInput
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId pulumi.StringInput
	// The plugin ID.
	PluginId pulumi.StringInput
	// The region where the plugin is located.
	Region pulumi.StringPtrInput
}

func (ApigPluginAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigPluginAssociateArgs)(nil)).Elem()
}

type ApigPluginAssociateInput interface {
	pulumi.Input

	ToApigPluginAssociateOutput() ApigPluginAssociateOutput
	ToApigPluginAssociateOutputWithContext(ctx context.Context) ApigPluginAssociateOutput
}

func (*ApigPluginAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigPluginAssociate)(nil)).Elem()
}

func (i *ApigPluginAssociate) ToApigPluginAssociateOutput() ApigPluginAssociateOutput {
	return i.ToApigPluginAssociateOutputWithContext(context.Background())
}

func (i *ApigPluginAssociate) ToApigPluginAssociateOutputWithContext(ctx context.Context) ApigPluginAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigPluginAssociateOutput)
}

// ApigPluginAssociateArrayInput is an input type that accepts ApigPluginAssociateArray and ApigPluginAssociateArrayOutput values.
// You can construct a concrete instance of `ApigPluginAssociateArrayInput` via:
//
//	ApigPluginAssociateArray{ ApigPluginAssociateArgs{...} }
type ApigPluginAssociateArrayInput interface {
	pulumi.Input

	ToApigPluginAssociateArrayOutput() ApigPluginAssociateArrayOutput
	ToApigPluginAssociateArrayOutputWithContext(context.Context) ApigPluginAssociateArrayOutput
}

type ApigPluginAssociateArray []ApigPluginAssociateInput

func (ApigPluginAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigPluginAssociate)(nil)).Elem()
}

func (i ApigPluginAssociateArray) ToApigPluginAssociateArrayOutput() ApigPluginAssociateArrayOutput {
	return i.ToApigPluginAssociateArrayOutputWithContext(context.Background())
}

func (i ApigPluginAssociateArray) ToApigPluginAssociateArrayOutputWithContext(ctx context.Context) ApigPluginAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigPluginAssociateArrayOutput)
}

// ApigPluginAssociateMapInput is an input type that accepts ApigPluginAssociateMap and ApigPluginAssociateMapOutput values.
// You can construct a concrete instance of `ApigPluginAssociateMapInput` via:
//
//	ApigPluginAssociateMap{ "key": ApigPluginAssociateArgs{...} }
type ApigPluginAssociateMapInput interface {
	pulumi.Input

	ToApigPluginAssociateMapOutput() ApigPluginAssociateMapOutput
	ToApigPluginAssociateMapOutputWithContext(context.Context) ApigPluginAssociateMapOutput
}

type ApigPluginAssociateMap map[string]ApigPluginAssociateInput

func (ApigPluginAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigPluginAssociate)(nil)).Elem()
}

func (i ApigPluginAssociateMap) ToApigPluginAssociateMapOutput() ApigPluginAssociateMapOutput {
	return i.ToApigPluginAssociateMapOutputWithContext(context.Background())
}

func (i ApigPluginAssociateMap) ToApigPluginAssociateMapOutputWithContext(ctx context.Context) ApigPluginAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigPluginAssociateMapOutput)
}

type ApigPluginAssociateOutput struct{ *pulumi.OutputState }

func (ApigPluginAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigPluginAssociate)(nil)).Elem()
}

func (o ApigPluginAssociateOutput) ToApigPluginAssociateOutput() ApigPluginAssociateOutput {
	return o
}

func (o ApigPluginAssociateOutput) ToApigPluginAssociateOutputWithContext(ctx context.Context) ApigPluginAssociateOutput {
	return o
}

// The APIs bound by the plugin.
func (o ApigPluginAssociateOutput) ApiIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigPluginAssociate) pulumi.StringArrayOutput { return v.ApiIds }).(pulumi.StringArrayOutput)
}

// The environment ID where the API was published.
func (o ApigPluginAssociateOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginAssociate) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// The ID of the dedicated instance to which the plugin belongs.
func (o ApigPluginAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The plugin ID.
func (o ApigPluginAssociateOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginAssociate) pulumi.StringOutput { return v.PluginId }).(pulumi.StringOutput)
}

// The region where the plugin is located.
func (o ApigPluginAssociateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginAssociate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type ApigPluginAssociateArrayOutput struct{ *pulumi.OutputState }

func (ApigPluginAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigPluginAssociate)(nil)).Elem()
}

func (o ApigPluginAssociateArrayOutput) ToApigPluginAssociateArrayOutput() ApigPluginAssociateArrayOutput {
	return o
}

func (o ApigPluginAssociateArrayOutput) ToApigPluginAssociateArrayOutputWithContext(ctx context.Context) ApigPluginAssociateArrayOutput {
	return o
}

func (o ApigPluginAssociateArrayOutput) Index(i pulumi.IntInput) ApigPluginAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigPluginAssociate {
		return vs[0].([]*ApigPluginAssociate)[vs[1].(int)]
	}).(ApigPluginAssociateOutput)
}

type ApigPluginAssociateMapOutput struct{ *pulumi.OutputState }

func (ApigPluginAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigPluginAssociate)(nil)).Elem()
}

func (o ApigPluginAssociateMapOutput) ToApigPluginAssociateMapOutput() ApigPluginAssociateMapOutput {
	return o
}

func (o ApigPluginAssociateMapOutput) ToApigPluginAssociateMapOutputWithContext(ctx context.Context) ApigPluginAssociateMapOutput {
	return o
}

func (o ApigPluginAssociateMapOutput) MapIndex(k pulumi.StringInput) ApigPluginAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigPluginAssociate {
		return vs[0].(map[string]*ApigPluginAssociate)[vs[1].(string)]
	}).(ApigPluginAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigPluginAssociateInput)(nil)).Elem(), &ApigPluginAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigPluginAssociateArrayInput)(nil)).Elem(), ApigPluginAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigPluginAssociateMapInput)(nil)).Elem(), ApigPluginAssociateMap{})
	pulumi.RegisterOutputType(ApigPluginAssociateOutput{})
	pulumi.RegisterOutputType(ApigPluginAssociateArrayOutput{})
	pulumi.RegisterOutputType(ApigPluginAssociateMapOutput{})
}
