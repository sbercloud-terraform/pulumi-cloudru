// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a CFW capture task resource within SberCloud.
 *
 * > **NOTE:** For the Cloud Firewall service, you can only initiate up to 20 packet capture tasks per day.
 * Beyond this limit, no additional packet capture tasks can be initiated. Furthermore, only one packet capture task can be
 * in progress at any given time.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const fwInstanceId = config.requireObject<any>("fwInstanceId");
 * const name = config.requireObject<any>("name");
 * const duration = config.requireObject<any>("duration");
 * const maxPackets = config.requireObject<any>("maxPackets");
 * const test = new sbercloud.cfw.CaptureTask("test", {
 *     fwInstanceId: fwInstanceId,
 *     name: name,
 *     duration: duration,
 *     maxPackets: maxPackets,
 *     destination: {
 *         address: "1.1.1.1",
 *         addressType: 0,
 *     },
 *     source: {
 *         address: "2.2.2.2",
 *         addressType: 0,
 *     },
 *     service: {
 *         protocol: -1,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The capture task can be imported using `fw_instance_id`, `name`, separated by a slash, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Cfw/captureTask:CaptureTask test <fw_instance_id>/<name>
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason.
 *
 * The missing attributes is `stop_capture`. It is generally recommended running `pulumi preview` after importing the resource.
 *
 * You can then decide if changes should be applied to the capture task, or the resource definition should be updated to
 *
 * align with the capture task. Also you can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_cfw_capture_task" "test" {
 *
 *     ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       stop_capture,
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class CaptureTask extends pulumi.CustomResource {
    /**
     * Get an existing CaptureTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CaptureTaskState, opts?: pulumi.CustomResourceOptions): CaptureTask {
        return new CaptureTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/captureTask:CaptureTask';

    /**
     * Returns true if the given object is an instance of CaptureTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CaptureTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CaptureTask.__pulumiType;
    }

    /**
     * The creation time of the capture task.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the destination configuration.
     * The destination structure is documented below.
     */
    public readonly destination!: pulumi.Output<outputs.Cfw.CaptureTaskDestination>;
    /**
     * Specifies the capture task duration.
     */
    public readonly duration!: pulumi.Output<number>;
    public readonly enableForceNew!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the firewall instance.
     */
    public readonly fwInstanceId!: pulumi.Output<string>;
    /**
     * Specifies the maximum number of packets captured.
     * The Maximum value is `1,000,000`.
     */
    public readonly maxPackets!: pulumi.Output<number>;
    /**
     * Specifies the capture task name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the service configuration.
     * The service structure is documented below.
     */
    public readonly service!: pulumi.Output<outputs.Cfw.CaptureTaskService>;
    /**
     * Specifies the source configuration.
     * The source structure is documented below.
     */
    public readonly source!: pulumi.Output<outputs.Cfw.CaptureTaskSource>;
    /**
     * The status of the capture task.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Specifies whether to stop the capture task.
     *
     * <a name="Address"></a>
     * The `destination` or `source` block supports:
     */
    public readonly stopCapture!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the capture task.
     */
    public /*out*/ readonly taskId!: pulumi.Output<string>;
    /**
     * The update time of the capture task.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a CaptureTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CaptureTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CaptureTaskArgs | CaptureTaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CaptureTaskState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["enableForceNew"] = state ? state.enableForceNew : undefined;
            resourceInputs["fwInstanceId"] = state ? state.fwInstanceId : undefined;
            resourceInputs["maxPackets"] = state ? state.maxPackets : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["stopCapture"] = state ? state.stopCapture : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as CaptureTaskArgs | undefined;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.duration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'duration'");
            }
            if ((!args || args.fwInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fwInstanceId'");
            }
            if ((!args || args.maxPackets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxPackets'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["enableForceNew"] = args ? args.enableForceNew : undefined;
            resourceInputs["fwInstanceId"] = args ? args.fwInstanceId : undefined;
            resourceInputs["maxPackets"] = args ? args.maxPackets : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["stopCapture"] = args ? args.stopCapture : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["taskId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CaptureTask.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CaptureTask resources.
 */
export interface CaptureTaskState {
    /**
     * The creation time of the capture task.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the destination configuration.
     * The destination structure is documented below.
     */
    destination?: pulumi.Input<inputs.Cfw.CaptureTaskDestination>;
    /**
     * Specifies the capture task duration.
     */
    duration?: pulumi.Input<number>;
    enableForceNew?: pulumi.Input<string>;
    /**
     * Specifies the ID of the firewall instance.
     */
    fwInstanceId?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of packets captured.
     * The Maximum value is `1,000,000`.
     */
    maxPackets?: pulumi.Input<number>;
    /**
     * Specifies the capture task name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the service configuration.
     * The service structure is documented below.
     */
    service?: pulumi.Input<inputs.Cfw.CaptureTaskService>;
    /**
     * Specifies the source configuration.
     * The source structure is documented below.
     */
    source?: pulumi.Input<inputs.Cfw.CaptureTaskSource>;
    /**
     * The status of the capture task.
     */
    status?: pulumi.Input<number>;
    /**
     * Specifies whether to stop the capture task.
     *
     * <a name="Address"></a>
     * The `destination` or `source` block supports:
     */
    stopCapture?: pulumi.Input<boolean>;
    /**
     * The ID of the capture task.
     */
    taskId?: pulumi.Input<string>;
    /**
     * The update time of the capture task.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CaptureTask resource.
 */
export interface CaptureTaskArgs {
    /**
     * Specifies the destination configuration.
     * The destination structure is documented below.
     */
    destination: pulumi.Input<inputs.Cfw.CaptureTaskDestination>;
    /**
     * Specifies the capture task duration.
     */
    duration: pulumi.Input<number>;
    enableForceNew?: pulumi.Input<string>;
    /**
     * Specifies the ID of the firewall instance.
     */
    fwInstanceId: pulumi.Input<string>;
    /**
     * Specifies the maximum number of packets captured.
     * The Maximum value is `1,000,000`.
     */
    maxPackets: pulumi.Input<number>;
    /**
     * Specifies the capture task name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the service configuration.
     * The service structure is documented below.
     */
    service: pulumi.Input<inputs.Cfw.CaptureTaskService>;
    /**
     * Specifies the source configuration.
     * The source structure is documented below.
     */
    source: pulumi.Input<inputs.Cfw.CaptureTaskSource>;
    /**
     * Specifies whether to stop the capture task.
     *
     * <a name="Address"></a>
     * The `destination` or `source` block supports:
     */
    stopCapture?: pulumi.Input<boolean>;
}
