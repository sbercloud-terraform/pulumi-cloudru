// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a CFW service group member resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const groupId = config.requireObject<any>("groupId");
 * const protocol = config.requireObject<any>("protocol");
 * const sourcePort = config.requireObject<any>("sourcePort");
 * const destPort = config.requireObject<any>("destPort");
 * const test = new sbercloud.cfw.ServiceGroupMember("test", {
 *     groupId: groupId,
 *     protocol: protocol,
 *     sourcePort: sourcePort,
 *     destPort: destPort,
 * });
 * ```
 *
 * ## Import
 *
 * The service group member can be imported using service group ID and member ID, separated by a slash, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Cfw/serviceGroupMember:ServiceGroupMember test <group_id>/<member_id>
 * ```
 */
export class ServiceGroupMember extends pulumi.CustomResource {
    /**
     * Get an existing ServiceGroupMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceGroupMemberState, opts?: pulumi.CustomResourceOptions): ServiceGroupMember {
        return new ServiceGroupMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/serviceGroupMember:ServiceGroupMember';

    /**
     * Returns true if the given object is an instance of ServiceGroupMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceGroupMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceGroupMember.__pulumiType;
    }

    /**
     * Specifies the service group member description.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies the destination port.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly destPort!: pulumi.Output<string>;
    /**
     * Specifies the ID of the service group.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * Specifies the service group member name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the protocol type.
     * The valid values are:
     * + **6**: indicates TCP;
     * + **17**: indicates UDP;
     * + **1**: indicates ICMP;
     * + **58**: indicates ICMPv6;
     * + **-1**: indicates any protocol.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly protocol!: pulumi.Output<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the source port.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly sourcePort!: pulumi.Output<string>;

    /**
     * Create a ServiceGroupMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceGroupMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceGroupMemberArgs | ServiceGroupMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceGroupMemberState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destPort"] = state ? state.destPort : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["sourcePort"] = state ? state.sourcePort : undefined;
        } else {
            const args = argsOrState as ServiceGroupMemberArgs | undefined;
            if ((!args || args.destPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destPort'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.sourcePort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourcePort'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destPort"] = args ? args.destPort : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["sourcePort"] = args ? args.sourcePort : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceGroupMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceGroupMember resources.
 */
export interface ServiceGroupMemberState {
    /**
     * Specifies the service group member description.
     *
     * Changing this parameter will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     *
     * Changing this parameter will create a new resource.
     */
    destPort?: pulumi.Input<string>;
    /**
     * Specifies the ID of the service group.
     *
     * Changing this parameter will create a new resource.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Specifies the service group member name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protocol type.
     * The valid values are:
     * + **6**: indicates TCP;
     * + **17**: indicates UDP;
     * + **1**: indicates ICMP;
     * + **58**: indicates ICMPv6;
     * + **-1**: indicates any protocol.
     *
     * Changing this parameter will create a new resource.
     */
    protocol?: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the source port.
     *
     * Changing this parameter will create a new resource.
     */
    sourcePort?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceGroupMember resource.
 */
export interface ServiceGroupMemberArgs {
    /**
     * Specifies the service group member description.
     *
     * Changing this parameter will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     *
     * Changing this parameter will create a new resource.
     */
    destPort: pulumi.Input<string>;
    /**
     * Specifies the ID of the service group.
     *
     * Changing this parameter will create a new resource.
     */
    groupId: pulumi.Input<string>;
    /**
     * Specifies the service group member name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protocol type.
     * The valid values are:
     * + **6**: indicates TCP;
     * + **17**: indicates UDP;
     * + **1**: indicates ICMP;
     * + **58**: indicates ICMPv6;
     * + **-1**: indicates any protocol.
     *
     * Changing this parameter will create a new resource.
     */
    protocol: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the source port.
     *
     * Changing this parameter will create a new resource.
     */
    sourcePort: pulumi.Input<string>;
}
