// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetFlavorsArgs, GetFlavorsResult, GetFlavorsOutputArgs } from "./getFlavors";
export const getFlavors: typeof import("./getFlavors").getFlavors = null as any;
export const getFlavorsOutput: typeof import("./getFlavors").getFlavorsOutput = null as any;
utilities.lazyLoad(exports, ["getFlavors","getFlavorsOutput"], () => require("./getFlavors"));

export { GetMaintainwindowArgs, GetMaintainwindowResult, GetMaintainwindowOutputArgs } from "./getMaintainwindow";
export const getMaintainwindow: typeof import("./getMaintainwindow").getMaintainwindow = null as any;
export const getMaintainwindowOutput: typeof import("./getMaintainwindow").getMaintainwindowOutput = null as any;
utilities.lazyLoad(exports, ["getMaintainwindow","getMaintainwindowOutput"], () => require("./getMaintainwindow"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sbercloud:Dcs/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sbercloud", "Dcs/instance", _module)
