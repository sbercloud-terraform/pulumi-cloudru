// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DmsRocketmqInstance extends pulumi.CustomResource {
    /**
     * Get an existing DmsRocketmqInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsRocketmqInstanceState, opts?: pulumi.CustomResourceOptions): DmsRocketmqInstance {
        return new DmsRocketmqInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/dmsRocketmqInstance:DmsRocketmqInstance';

    /**
     * Returns true if the given object is an instance of DmsRocketmqInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsRocketmqInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsRocketmqInstance.__pulumiType;
    }

    declare public readonly autoRenew: pulumi.Output<string | undefined>;
    /**
     * Specifies the list of availability zone names
     */
    declare public readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * Indicates the service data address.
     */
    declare public /*out*/ readonly brokerAddress: pulumi.Output<string>;
    /**
     * Specifies the broker numbers.
     */
    declare public readonly brokerNum: pulumi.Output<number | undefined>;
    declare public readonly chargingMode: pulumi.Output<string>;
    /**
     * Specifies the instance configs.
     */
    declare public readonly configs: pulumi.Output<outputs.DmsRocketmqInstanceConfig[]>;
    declare public /*out*/ readonly crossVpcAccesses: pulumi.Output<outputs.DmsRocketmqInstanceCrossVpcAccess[]>;
    /**
     * Specifies the description of the DMS RocketMQ instance.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Specifies whether access control is enabled.
     */
    declare public readonly enableAcl: pulumi.Output<boolean>;
    /**
     * Specifies whether to enable public access.
     */
    declare public readonly enablePublicip: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the version of the RocketMQ engine.
     */
    declare public readonly engineVersion: pulumi.Output<string>;
    /**
     * Specifies the enterprise project id of the instance.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * Specifies a product ID
     */
    declare public readonly flavorId: pulumi.Output<string>;
    /**
     * Specifies whether to support IPv6
     */
    declare public readonly ipv6Enable: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
     */
    declare public /*out*/ readonly maintainBegin: pulumi.Output<string>;
    /**
     * Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
     */
    declare public /*out*/ readonly maintainEnd: pulumi.Output<string>;
    /**
     * Specifies the name of the DMS RocketMQ instance
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Indicates the metadata address.
     */
    declare public /*out*/ readonly namesrvAddress: pulumi.Output<string>;
    /**
     * Indicates whether billing based on new specifications is enabled.
     */
    declare public /*out*/ readonly newSpecBillingEnable: pulumi.Output<boolean>;
    /**
     * Indicates the node quantity.
     */
    declare public /*out*/ readonly nodeNum: pulumi.Output<number>;
    declare public readonly period: pulumi.Output<number | undefined>;
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    /**
     * Indicates the public network service data address.
     */
    declare public /*out*/ readonly publicBrokerAddress: pulumi.Output<string>;
    /**
     * Indicates the public network metadata address.
     */
    declare public /*out*/ readonly publicNamesrvAddress: pulumi.Output<string>;
    /**
     * Indicates the public IP address.
     */
    declare public /*out*/ readonly publicipAddress: pulumi.Output<string>;
    /**
     * Specifies the ID of the EIP bound to the instance.
     */
    declare public readonly publicipId: pulumi.Output<string | undefined>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * Indicates the resource specifications.
     */
    declare public /*out*/ readonly resourceSpecCode: pulumi.Output<string>;
    /**
     * Specifies whether access control is enabled.
     *
     * @deprecated Use 'enable_acl' instead
     */
    declare public readonly retentionPolicy: pulumi.Output<boolean>;
    /**
     * Specifies the ID of a security group
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
     *   and the number of nodes are returned.
     */
    declare public /*out*/ readonly specification: pulumi.Output<string>;
    /**
     * Specifies whether the RocketMQ SASL_SSL is enabled.
     */
    declare public readonly sslEnable: pulumi.Output<boolean>;
    /**
     * Indicates the status of the DMS RocketMQ instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Specifies the message storage capacity, Unit: GB.
     */
    declare public readonly storageSpace: pulumi.Output<number>;
    /**
     * Specifies the storage I/O specification
     */
    declare public readonly storageSpecCode: pulumi.Output<string>;
    /**
     * Specifies the ID of a subnet
     */
    declare public readonly subnetId: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Indicates the DMS RocketMQ instance type. Value: cluster.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;
    /**
     * Indicates the used message storage space. Unit: GB.
     */
    declare public /*out*/ readonly usedStorageSpace: pulumi.Output<number>;
    /**
     * Specifies the ID of a VPC
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a DmsRocketmqInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsRocketmqInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsRocketmqInstanceArgs | DmsRocketmqInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsRocketmqInstanceState | undefined;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["availabilityZones"] = state?.availabilityZones;
            resourceInputs["brokerAddress"] = state?.brokerAddress;
            resourceInputs["brokerNum"] = state?.brokerNum;
            resourceInputs["chargingMode"] = state?.chargingMode;
            resourceInputs["configs"] = state?.configs;
            resourceInputs["crossVpcAccesses"] = state?.crossVpcAccesses;
            resourceInputs["description"] = state?.description;
            resourceInputs["enableAcl"] = state?.enableAcl;
            resourceInputs["enablePublicip"] = state?.enablePublicip;
            resourceInputs["engineVersion"] = state?.engineVersion;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["flavorId"] = state?.flavorId;
            resourceInputs["ipv6Enable"] = state?.ipv6Enable;
            resourceInputs["maintainBegin"] = state?.maintainBegin;
            resourceInputs["maintainEnd"] = state?.maintainEnd;
            resourceInputs["name"] = state?.name;
            resourceInputs["namesrvAddress"] = state?.namesrvAddress;
            resourceInputs["newSpecBillingEnable"] = state?.newSpecBillingEnable;
            resourceInputs["nodeNum"] = state?.nodeNum;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["publicBrokerAddress"] = state?.publicBrokerAddress;
            resourceInputs["publicNamesrvAddress"] = state?.publicNamesrvAddress;
            resourceInputs["publicipAddress"] = state?.publicipAddress;
            resourceInputs["publicipId"] = state?.publicipId;
            resourceInputs["region"] = state?.region;
            resourceInputs["resourceSpecCode"] = state?.resourceSpecCode;
            resourceInputs["retentionPolicy"] = state?.retentionPolicy;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["specification"] = state?.specification;
            resourceInputs["sslEnable"] = state?.sslEnable;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageSpace"] = state?.storageSpace;
            resourceInputs["storageSpecCode"] = state?.storageSpecCode;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["type"] = state?.type;
            resourceInputs["usedStorageSpace"] = state?.usedStorageSpace;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as DmsRocketmqInstanceArgs | undefined;
            if (args?.availabilityZones === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityZones'");
            }
            if (args?.engineVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if (args?.flavorId === undefined && !opts.urn) {
                throw new Error("Missing required property 'flavorId'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.storageSpace === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageSpace'");
            }
            if (args?.storageSpecCode === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageSpecCode'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["availabilityZones"] = args?.availabilityZones;
            resourceInputs["brokerNum"] = args?.brokerNum;
            resourceInputs["chargingMode"] = args?.chargingMode;
            resourceInputs["configs"] = args?.configs;
            resourceInputs["description"] = args?.description;
            resourceInputs["enableAcl"] = args?.enableAcl;
            resourceInputs["enablePublicip"] = args?.enablePublicip;
            resourceInputs["engineVersion"] = args?.engineVersion;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["flavorId"] = args?.flavorId;
            resourceInputs["ipv6Enable"] = args?.ipv6Enable;
            resourceInputs["name"] = args?.name;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["publicipId"] = args?.publicipId;
            resourceInputs["region"] = args?.region;
            resourceInputs["retentionPolicy"] = args?.retentionPolicy;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["sslEnable"] = args?.sslEnable;
            resourceInputs["storageSpace"] = args?.storageSpace;
            resourceInputs["storageSpecCode"] = args?.storageSpecCode;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["brokerAddress"] = undefined /*out*/;
            resourceInputs["crossVpcAccesses"] = undefined /*out*/;
            resourceInputs["maintainBegin"] = undefined /*out*/;
            resourceInputs["maintainEnd"] = undefined /*out*/;
            resourceInputs["namesrvAddress"] = undefined /*out*/;
            resourceInputs["newSpecBillingEnable"] = undefined /*out*/;
            resourceInputs["nodeNum"] = undefined /*out*/;
            resourceInputs["publicBrokerAddress"] = undefined /*out*/;
            resourceInputs["publicNamesrvAddress"] = undefined /*out*/;
            resourceInputs["publicipAddress"] = undefined /*out*/;
            resourceInputs["resourceSpecCode"] = undefined /*out*/;
            resourceInputs["specification"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["usedStorageSpace"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsRocketmqInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DmsRocketmqInstance resources.
 */
export interface DmsRocketmqInstanceState {
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the list of availability zone names
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the service data address.
     */
    brokerAddress?: pulumi.Input<string>;
    /**
     * Specifies the broker numbers.
     */
    brokerNum?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the instance configs.
     */
    configs?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqInstanceConfig>[]>;
    crossVpcAccesses?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqInstanceCrossVpcAccess>[]>;
    /**
     * Specifies the description of the DMS RocketMQ instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     */
    enableAcl?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable public access.
     */
    enablePublicip?: pulumi.Input<boolean>;
    /**
     * Specifies the version of the RocketMQ engine.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies a product ID
     */
    flavorId?: pulumi.Input<string>;
    /**
     * Specifies whether to support IPv6
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * Specifies the name of the DMS RocketMQ instance
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the metadata address.
     */
    namesrvAddress?: pulumi.Input<string>;
    /**
     * Indicates whether billing based on new specifications is enabled.
     */
    newSpecBillingEnable?: pulumi.Input<boolean>;
    /**
     * Indicates the node quantity.
     */
    nodeNum?: pulumi.Input<number>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    /**
     * Indicates the public network service data address.
     */
    publicBrokerAddress?: pulumi.Input<string>;
    /**
     * Indicates the public network metadata address.
     */
    publicNamesrvAddress?: pulumi.Input<string>;
    /**
     * Indicates the public IP address.
     */
    publicipAddress?: pulumi.Input<string>;
    /**
     * Specifies the ID of the EIP bound to the instance.
     */
    publicipId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Indicates the resource specifications.
     */
    resourceSpecCode?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     *
     * @deprecated Use 'enable_acl' instead
     */
    retentionPolicy?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of a security group
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
     *   and the number of nodes are returned.
     */
    specification?: pulumi.Input<string>;
    /**
     * Specifies whether the RocketMQ SASL_SSL is enabled.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Indicates the status of the DMS RocketMQ instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the message storage capacity, Unit: GB.
     */
    storageSpace?: pulumi.Input<number>;
    /**
     * Specifies the storage I/O specification
     */
    storageSpecCode?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet
     */
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the DMS RocketMQ instance type. Value: cluster.
     */
    type?: pulumi.Input<string>;
    /**
     * Indicates the used message storage space. Unit: GB.
     */
    usedStorageSpace?: pulumi.Input<number>;
    /**
     * Specifies the ID of a VPC
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmsRocketmqInstance resource.
 */
export interface DmsRocketmqInstanceArgs {
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the list of availability zone names
     */
    availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the broker numbers.
     */
    brokerNum?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the instance configs.
     */
    configs?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqInstanceConfig>[]>;
    /**
     * Specifies the description of the DMS RocketMQ instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     */
    enableAcl?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable public access.
     */
    enablePublicip?: pulumi.Input<boolean>;
    /**
     * Specifies the version of the RocketMQ engine.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies a product ID
     */
    flavorId: pulumi.Input<string>;
    /**
     * Specifies whether to support IPv6
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the DMS RocketMQ instance
     */
    name?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the ID of the EIP bound to the instance.
     */
    publicipId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     *
     * @deprecated Use 'enable_acl' instead
     */
    retentionPolicy?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of a security group
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies whether the RocketMQ SASL_SSL is enabled.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Specifies the message storage capacity, Unit: GB.
     */
    storageSpace: pulumi.Input<number>;
    /**
     * Specifies the storage I/O specification
     */
    storageSpecCode: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet
     */
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of a VPC
     */
    vpcId: pulumi.Input<string>;
}
