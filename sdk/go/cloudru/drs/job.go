// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package drs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type Job struct {
	pulumi.CustomResourceState

	CreatedAt             pulumi.StringOutput      `pulumi:"createdAt"`
	Description           pulumi.StringPtrOutput   `pulumi:"description"`
	DestinationDb         JobDestinationDbOutput   `pulumi:"destinationDb"`
	DestinationDbReadnoly pulumi.BoolPtrOutput     `pulumi:"destinationDbReadnoly"`
	Direction             pulumi.StringOutput      `pulumi:"direction"`
	EngineType            pulumi.StringOutput      `pulumi:"engineType"`
	EnterpriseProjectId   pulumi.StringPtrOutput   `pulumi:"enterpriseProjectId"`
	ExpiredDays           pulumi.IntPtrOutput      `pulumi:"expiredDays"`
	ForceDestroy          pulumi.BoolPtrOutput     `pulumi:"forceDestroy"`
	LimitSpeeds           JobLimitSpeedArrayOutput `pulumi:"limitSpeeds"`
	MigrateDefiner        pulumi.BoolPtrOutput     `pulumi:"migrateDefiner"`
	MigrationType         pulumi.StringPtrOutput   `pulumi:"migrationType"`
	MultiWrite            pulumi.BoolPtrOutput     `pulumi:"multiWrite"`
	Name                  pulumi.StringOutput      `pulumi:"name"`
	NetType               pulumi.StringPtrOutput   `pulumi:"netType"`
	PrivateIp             pulumi.StringOutput      `pulumi:"privateIp"`
	PublicIp              pulumi.StringOutput      `pulumi:"publicIp"`
	Region                pulumi.StringOutput      `pulumi:"region"`
	SourceDb              JobSourceDbOutput        `pulumi:"sourceDb"`
	StartTime             pulumi.StringPtrOutput   `pulumi:"startTime"`
	Status                pulumi.StringOutput      `pulumi:"status"`
	Tags                  pulumi.StringMapOutput   `pulumi:"tags"`
	Type                  pulumi.StringOutput      `pulumi:"type"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationDb == nil {
		return nil, errors.New("invalid value for required argument 'DestinationDb'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.EngineType == nil {
		return nil, errors.New("invalid value for required argument 'EngineType'")
	}
	if args.SourceDb == nil {
		return nil, errors.New("invalid value for required argument 'SourceDb'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Job
	err := ctx.RegisterResource("cloudru:Drs/job:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("cloudru:Drs/job:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
	CreatedAt             *string           `pulumi:"createdAt"`
	Description           *string           `pulumi:"description"`
	DestinationDb         *JobDestinationDb `pulumi:"destinationDb"`
	DestinationDbReadnoly *bool             `pulumi:"destinationDbReadnoly"`
	Direction             *string           `pulumi:"direction"`
	EngineType            *string           `pulumi:"engineType"`
	EnterpriseProjectId   *string           `pulumi:"enterpriseProjectId"`
	ExpiredDays           *int              `pulumi:"expiredDays"`
	ForceDestroy          *bool             `pulumi:"forceDestroy"`
	LimitSpeeds           []JobLimitSpeed   `pulumi:"limitSpeeds"`
	MigrateDefiner        *bool             `pulumi:"migrateDefiner"`
	MigrationType         *string           `pulumi:"migrationType"`
	MultiWrite            *bool             `pulumi:"multiWrite"`
	Name                  *string           `pulumi:"name"`
	NetType               *string           `pulumi:"netType"`
	PrivateIp             *string           `pulumi:"privateIp"`
	PublicIp              *string           `pulumi:"publicIp"`
	Region                *string           `pulumi:"region"`
	SourceDb              *JobSourceDb      `pulumi:"sourceDb"`
	StartTime             *string           `pulumi:"startTime"`
	Status                *string           `pulumi:"status"`
	Tags                  map[string]string `pulumi:"tags"`
	Type                  *string           `pulumi:"type"`
}

type JobState struct {
	CreatedAt             pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	DestinationDb         JobDestinationDbPtrInput
	DestinationDbReadnoly pulumi.BoolPtrInput
	Direction             pulumi.StringPtrInput
	EngineType            pulumi.StringPtrInput
	EnterpriseProjectId   pulumi.StringPtrInput
	ExpiredDays           pulumi.IntPtrInput
	ForceDestroy          pulumi.BoolPtrInput
	LimitSpeeds           JobLimitSpeedArrayInput
	MigrateDefiner        pulumi.BoolPtrInput
	MigrationType         pulumi.StringPtrInput
	MultiWrite            pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	NetType               pulumi.StringPtrInput
	PrivateIp             pulumi.StringPtrInput
	PublicIp              pulumi.StringPtrInput
	Region                pulumi.StringPtrInput
	SourceDb              JobSourceDbPtrInput
	StartTime             pulumi.StringPtrInput
	Status                pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Type                  pulumi.StringPtrInput
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	Description           *string           `pulumi:"description"`
	DestinationDb         JobDestinationDb  `pulumi:"destinationDb"`
	DestinationDbReadnoly *bool             `pulumi:"destinationDbReadnoly"`
	Direction             string            `pulumi:"direction"`
	EngineType            string            `pulumi:"engineType"`
	EnterpriseProjectId   *string           `pulumi:"enterpriseProjectId"`
	ExpiredDays           *int              `pulumi:"expiredDays"`
	ForceDestroy          *bool             `pulumi:"forceDestroy"`
	LimitSpeeds           []JobLimitSpeed   `pulumi:"limitSpeeds"`
	MigrateDefiner        *bool             `pulumi:"migrateDefiner"`
	MigrationType         *string           `pulumi:"migrationType"`
	MultiWrite            *bool             `pulumi:"multiWrite"`
	Name                  *string           `pulumi:"name"`
	NetType               *string           `pulumi:"netType"`
	Region                *string           `pulumi:"region"`
	SourceDb              JobSourceDb       `pulumi:"sourceDb"`
	StartTime             *string           `pulumi:"startTime"`
	Tags                  map[string]string `pulumi:"tags"`
	Type                  string            `pulumi:"type"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	Description           pulumi.StringPtrInput
	DestinationDb         JobDestinationDbInput
	DestinationDbReadnoly pulumi.BoolPtrInput
	Direction             pulumi.StringInput
	EngineType            pulumi.StringInput
	EnterpriseProjectId   pulumi.StringPtrInput
	ExpiredDays           pulumi.IntPtrInput
	ForceDestroy          pulumi.BoolPtrInput
	LimitSpeeds           JobLimitSpeedArrayInput
	MigrateDefiner        pulumi.BoolPtrInput
	MigrationType         pulumi.StringPtrInput
	MultiWrite            pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	NetType               pulumi.StringPtrInput
	Region                pulumi.StringPtrInput
	SourceDb              JobSourceDbInput
	StartTime             pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Type                  pulumi.StringInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

// JobArrayInput is an input type that accepts JobArray and JobArrayOutput values.
// You can construct a concrete instance of `JobArrayInput` via:
//
//	JobArray{ JobArgs{...} }
type JobArrayInput interface {
	pulumi.Input

	ToJobArrayOutput() JobArrayOutput
	ToJobArrayOutputWithContext(context.Context) JobArrayOutput
}

type JobArray []JobInput

func (JobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Job)(nil)).Elem()
}

func (i JobArray) ToJobArrayOutput() JobArrayOutput {
	return i.ToJobArrayOutputWithContext(context.Background())
}

func (i JobArray) ToJobArrayOutputWithContext(ctx context.Context) JobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobArrayOutput)
}

// JobMapInput is an input type that accepts JobMap and JobMapOutput values.
// You can construct a concrete instance of `JobMapInput` via:
//
//	JobMap{ "key": JobArgs{...} }
type JobMapInput interface {
	pulumi.Input

	ToJobMapOutput() JobMapOutput
	ToJobMapOutputWithContext(context.Context) JobMapOutput
}

type JobMap map[string]JobInput

func (JobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Job)(nil)).Elem()
}

func (i JobMap) ToJobMapOutput() JobMapOutput {
	return i.ToJobMapOutputWithContext(context.Background())
}

func (i JobMap) ToJobMapOutputWithContext(ctx context.Context) JobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobMapOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

func (o JobOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o JobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JobOutput) DestinationDb() JobDestinationDbOutput {
	return o.ApplyT(func(v *Job) JobDestinationDbOutput { return v.DestinationDb }).(JobDestinationDbOutput)
}

func (o JobOutput) DestinationDbReadnoly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.DestinationDbReadnoly }).(pulumi.BoolPtrOutput)
}

func (o JobOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

func (o JobOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.EngineType }).(pulumi.StringOutput)
}

func (o JobOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o JobOutput) ExpiredDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.ExpiredDays }).(pulumi.IntPtrOutput)
}

func (o JobOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o JobOutput) LimitSpeeds() JobLimitSpeedArrayOutput {
	return o.ApplyT(func(v *Job) JobLimitSpeedArrayOutput { return v.LimitSpeeds }).(JobLimitSpeedArrayOutput)
}

func (o JobOutput) MigrateDefiner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.MigrateDefiner }).(pulumi.BoolPtrOutput)
}

func (o JobOutput) MigrationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.MigrationType }).(pulumi.StringPtrOutput)
}

func (o JobOutput) MultiWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.MultiWrite }).(pulumi.BoolPtrOutput)
}

func (o JobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o JobOutput) NetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.NetType }).(pulumi.StringPtrOutput)
}

func (o JobOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o JobOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o JobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o JobOutput) SourceDb() JobSourceDbOutput {
	return o.ApplyT(func(v *Job) JobSourceDbOutput { return v.SourceDb }).(JobSourceDbOutput)
}

func (o JobOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.StartTime }).(pulumi.StringPtrOutput)
}

func (o JobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o JobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Job) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o JobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type JobArrayOutput struct{ *pulumi.OutputState }

func (JobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Job)(nil)).Elem()
}

func (o JobArrayOutput) ToJobArrayOutput() JobArrayOutput {
	return o
}

func (o JobArrayOutput) ToJobArrayOutputWithContext(ctx context.Context) JobArrayOutput {
	return o
}

func (o JobArrayOutput) Index(i pulumi.IntInput) JobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Job {
		return vs[0].([]*Job)[vs[1].(int)]
	}).(JobOutput)
}

type JobMapOutput struct{ *pulumi.OutputState }

func (JobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Job)(nil)).Elem()
}

func (o JobMapOutput) ToJobMapOutput() JobMapOutput {
	return o
}

func (o JobMapOutput) ToJobMapOutputWithContext(ctx context.Context) JobMapOutput {
	return o
}

func (o JobMapOutput) MapIndex(k pulumi.StringInput) JobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Job {
		return vs[0].(map[string]*Job)[vs[1].(string)]
	}).(JobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobArrayInput)(nil)).Elem(), JobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobMapInput)(nil)).Elem(), JobMap{})
	pulumi.RegisterOutputType(JobOutput{})
	pulumi.RegisterOutputType(JobArrayOutput{})
	pulumi.RegisterOutputType(JobMapOutput{})
}
