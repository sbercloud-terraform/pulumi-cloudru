// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getRouteTables(args: GetRouteTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteTablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Er/getRouteTables:getRouteTables", {
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "routeTableId": args.routeTableId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteTables.
 */
export interface GetRouteTablesArgs {
    instanceId: string;
    name?: string;
    region?: string;
    routeTableId?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getRouteTables.
 */
export interface GetRouteTablesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly name?: string;
    readonly region: string;
    readonly routeTableId?: string;
    readonly routeTables: outputs.Er.GetRouteTablesRouteTable[];
    readonly tags: {[key: string]: string};
}
export function getRouteTablesOutput(args: GetRouteTablesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRouteTablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Er/getRouteTables:getRouteTables", {
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "routeTableId": args.routeTableId,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteTables.
 */
export interface GetRouteTablesOutputArgs {
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    routeTableId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
