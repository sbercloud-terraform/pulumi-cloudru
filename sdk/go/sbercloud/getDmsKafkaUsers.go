// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Use this data source to get the list of Kafka instance users.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := sbercloud.GetDmsKafkaUsers(ctx, &sbercloud.GetDmsKafkaUsersArgs{
//				InstanceId: instanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDmsKafkaUsers(ctx *pulumi.Context, args *GetDmsKafkaUsersArgs, opts ...pulumi.InvokeOption) (*GetDmsKafkaUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsKafkaUsersResult
	err := ctx.Invoke("sbercloud:index/getDmsKafkaUsers:getDmsKafkaUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsKafkaUsers.
type GetDmsKafkaUsersArgs struct {
	// Specifies the user description.
	Description *string `pulumi:"description"`
	// Specifies the instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the user name.
	Name *string `pulumi:"name"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getDmsKafkaUsers.
type GetDmsKafkaUsersResult struct {
	// Indicates the description.
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Indicates the username.
	Name   *string `pulumi:"name"`
	Region string  `pulumi:"region"`
	// Indicates the user list.
	Users []GetDmsKafkaUsersUser `pulumi:"users"`
}

func GetDmsKafkaUsersOutput(ctx *pulumi.Context, args GetDmsKafkaUsersOutputArgs, opts ...pulumi.InvokeOption) GetDmsKafkaUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsKafkaUsersResultOutput, error) {
			args := v.(GetDmsKafkaUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDmsKafkaUsers:getDmsKafkaUsers", args, GetDmsKafkaUsersResultOutput{}, options).(GetDmsKafkaUsersResultOutput), nil
		}).(GetDmsKafkaUsersResultOutput)
}

// A collection of arguments for invoking getDmsKafkaUsers.
type GetDmsKafkaUsersOutputArgs struct {
	// Specifies the user description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the user name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetDmsKafkaUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaUsersArgs)(nil)).Elem()
}

// A collection of values returned by getDmsKafkaUsers.
type GetDmsKafkaUsersResultOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaUsersResult)(nil)).Elem()
}

func (o GetDmsKafkaUsersResultOutput) ToGetDmsKafkaUsersResultOutput() GetDmsKafkaUsersResultOutput {
	return o
}

func (o GetDmsKafkaUsersResultOutput) ToGetDmsKafkaUsersResultOutputWithContext(ctx context.Context) GetDmsKafkaUsersResultOutput {
	return o
}

// Indicates the description.
func (o GetDmsKafkaUsersResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsKafkaUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsKafkaUsersResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates the username.
func (o GetDmsKafkaUsersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaUsersResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the user list.
func (o GetDmsKafkaUsersResultOutput) Users() GetDmsKafkaUsersUserArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaUsersResult) []GetDmsKafkaUsersUser { return v.Users }).(GetDmsKafkaUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsKafkaUsersResultOutput{})
}
