// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedapig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type CustomAuthorizer struct {
	pulumi.CustomResourceState

	// The maximum cache age.
	CacheAge pulumi.IntPtrOutput `pulumi:"cacheAge"`
	// The creation time of the custom authorizer.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringOutput `pulumi:"functionAliasUri"`
	// The URN of the FGS function.
	FunctionUrn pulumi.StringOutput `pulumi:"functionUrn"`
	// The version of the FGS function.
	FunctionVersion pulumi.StringOutput `pulumi:"functionVersion"`
	// The array of one or more parameter identities of the custom authorizer.
	Identities CustomAuthorizerIdentityArrayOutput `pulumi:"identities"`
	// The ID of the dedicated instance to which the custom authorizer belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Whether to send the body.
	IsBodySend pulumi.BoolPtrOutput `pulumi:"isBodySend"`
	// The name of the custom authorizer.
	Name pulumi.StringOutput `pulumi:"name"`
	// The framework type of the function.
	NetworkType pulumi.StringOutput `pulumi:"networkType"`
	// The region where the custom authorizer is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The custom authorization type
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The user data for custom authorizer function.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
}

// NewCustomAuthorizer registers a new resource with the given unique name, arguments, and options.
func NewCustomAuthorizer(ctx *pulumi.Context,
	name string, args *CustomAuthorizerArgs, opts ...pulumi.ResourceOption) (*CustomAuthorizer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionUrn == nil {
		return nil, errors.New("invalid value for required argument 'FunctionUrn'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomAuthorizer
	err := ctx.RegisterResource("sbercloud:DedicatedApig/customAuthorizer:CustomAuthorizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomAuthorizer gets an existing CustomAuthorizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomAuthorizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomAuthorizerState, opts ...pulumi.ResourceOption) (*CustomAuthorizer, error) {
	var resource CustomAuthorizer
	err := ctx.ReadResource("sbercloud:DedicatedApig/customAuthorizer:CustomAuthorizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomAuthorizer resources.
type customAuthorizerState struct {
	// The maximum cache age.
	CacheAge *int `pulumi:"cacheAge"`
	// The creation time of the custom authorizer.
	CreatedAt *string `pulumi:"createdAt"`
	// The version alias URI of the FGS function.
	FunctionAliasUri *string `pulumi:"functionAliasUri"`
	// The URN of the FGS function.
	FunctionUrn *string `pulumi:"functionUrn"`
	// The version of the FGS function.
	FunctionVersion *string `pulumi:"functionVersion"`
	// The array of one or more parameter identities of the custom authorizer.
	Identities []CustomAuthorizerIdentity `pulumi:"identities"`
	// The ID of the dedicated instance to which the custom authorizer belongs.
	InstanceId *string `pulumi:"instanceId"`
	// Whether to send the body.
	IsBodySend *bool `pulumi:"isBodySend"`
	// The name of the custom authorizer.
	Name *string `pulumi:"name"`
	// The framework type of the function.
	NetworkType *string `pulumi:"networkType"`
	// The region where the custom authorizer is located.
	Region *string `pulumi:"region"`
	// The custom authorization type
	Type *string `pulumi:"type"`
	// The user data for custom authorizer function.
	UserData *string `pulumi:"userData"`
}

type CustomAuthorizerState struct {
	// The maximum cache age.
	CacheAge pulumi.IntPtrInput
	// The creation time of the custom authorizer.
	CreatedAt pulumi.StringPtrInput
	// The version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringPtrInput
	// The URN of the FGS function.
	FunctionUrn pulumi.StringPtrInput
	// The version of the FGS function.
	FunctionVersion pulumi.StringPtrInput
	// The array of one or more parameter identities of the custom authorizer.
	Identities CustomAuthorizerIdentityArrayInput
	// The ID of the dedicated instance to which the custom authorizer belongs.
	InstanceId pulumi.StringPtrInput
	// Whether to send the body.
	IsBodySend pulumi.BoolPtrInput
	// The name of the custom authorizer.
	Name pulumi.StringPtrInput
	// The framework type of the function.
	NetworkType pulumi.StringPtrInput
	// The region where the custom authorizer is located.
	Region pulumi.StringPtrInput
	// The custom authorization type
	Type pulumi.StringPtrInput
	// The user data for custom authorizer function.
	UserData pulumi.StringPtrInput
}

func (CustomAuthorizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*customAuthorizerState)(nil)).Elem()
}

type customAuthorizerArgs struct {
	// The maximum cache age.
	CacheAge *int `pulumi:"cacheAge"`
	// The version alias URI of the FGS function.
	FunctionAliasUri *string `pulumi:"functionAliasUri"`
	// The URN of the FGS function.
	FunctionUrn string `pulumi:"functionUrn"`
	// The version of the FGS function.
	FunctionVersion *string `pulumi:"functionVersion"`
	// The array of one or more parameter identities of the custom authorizer.
	Identities []CustomAuthorizerIdentity `pulumi:"identities"`
	// The ID of the dedicated instance to which the custom authorizer belongs.
	InstanceId string `pulumi:"instanceId"`
	// Whether to send the body.
	IsBodySend *bool `pulumi:"isBodySend"`
	// The name of the custom authorizer.
	Name *string `pulumi:"name"`
	// The framework type of the function.
	NetworkType *string `pulumi:"networkType"`
	// The region where the custom authorizer is located.
	Region *string `pulumi:"region"`
	// The custom authorization type
	Type *string `pulumi:"type"`
	// The user data for custom authorizer function.
	UserData *string `pulumi:"userData"`
}

// The set of arguments for constructing a CustomAuthorizer resource.
type CustomAuthorizerArgs struct {
	// The maximum cache age.
	CacheAge pulumi.IntPtrInput
	// The version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringPtrInput
	// The URN of the FGS function.
	FunctionUrn pulumi.StringInput
	// The version of the FGS function.
	FunctionVersion pulumi.StringPtrInput
	// The array of one or more parameter identities of the custom authorizer.
	Identities CustomAuthorizerIdentityArrayInput
	// The ID of the dedicated instance to which the custom authorizer belongs.
	InstanceId pulumi.StringInput
	// Whether to send the body.
	IsBodySend pulumi.BoolPtrInput
	// The name of the custom authorizer.
	Name pulumi.StringPtrInput
	// The framework type of the function.
	NetworkType pulumi.StringPtrInput
	// The region where the custom authorizer is located.
	Region pulumi.StringPtrInput
	// The custom authorization type
	Type pulumi.StringPtrInput
	// The user data for custom authorizer function.
	UserData pulumi.StringPtrInput
}

func (CustomAuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customAuthorizerArgs)(nil)).Elem()
}

type CustomAuthorizerInput interface {
	pulumi.Input

	ToCustomAuthorizerOutput() CustomAuthorizerOutput
	ToCustomAuthorizerOutputWithContext(ctx context.Context) CustomAuthorizerOutput
}

func (*CustomAuthorizer) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAuthorizer)(nil)).Elem()
}

func (i *CustomAuthorizer) ToCustomAuthorizerOutput() CustomAuthorizerOutput {
	return i.ToCustomAuthorizerOutputWithContext(context.Background())
}

func (i *CustomAuthorizer) ToCustomAuthorizerOutputWithContext(ctx context.Context) CustomAuthorizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAuthorizerOutput)
}

// CustomAuthorizerArrayInput is an input type that accepts CustomAuthorizerArray and CustomAuthorizerArrayOutput values.
// You can construct a concrete instance of `CustomAuthorizerArrayInput` via:
//
//	CustomAuthorizerArray{ CustomAuthorizerArgs{...} }
type CustomAuthorizerArrayInput interface {
	pulumi.Input

	ToCustomAuthorizerArrayOutput() CustomAuthorizerArrayOutput
	ToCustomAuthorizerArrayOutputWithContext(context.Context) CustomAuthorizerArrayOutput
}

type CustomAuthorizerArray []CustomAuthorizerInput

func (CustomAuthorizerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAuthorizer)(nil)).Elem()
}

func (i CustomAuthorizerArray) ToCustomAuthorizerArrayOutput() CustomAuthorizerArrayOutput {
	return i.ToCustomAuthorizerArrayOutputWithContext(context.Background())
}

func (i CustomAuthorizerArray) ToCustomAuthorizerArrayOutputWithContext(ctx context.Context) CustomAuthorizerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAuthorizerArrayOutput)
}

// CustomAuthorizerMapInput is an input type that accepts CustomAuthorizerMap and CustomAuthorizerMapOutput values.
// You can construct a concrete instance of `CustomAuthorizerMapInput` via:
//
//	CustomAuthorizerMap{ "key": CustomAuthorizerArgs{...} }
type CustomAuthorizerMapInput interface {
	pulumi.Input

	ToCustomAuthorizerMapOutput() CustomAuthorizerMapOutput
	ToCustomAuthorizerMapOutputWithContext(context.Context) CustomAuthorizerMapOutput
}

type CustomAuthorizerMap map[string]CustomAuthorizerInput

func (CustomAuthorizerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAuthorizer)(nil)).Elem()
}

func (i CustomAuthorizerMap) ToCustomAuthorizerMapOutput() CustomAuthorizerMapOutput {
	return i.ToCustomAuthorizerMapOutputWithContext(context.Background())
}

func (i CustomAuthorizerMap) ToCustomAuthorizerMapOutputWithContext(ctx context.Context) CustomAuthorizerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAuthorizerMapOutput)
}

type CustomAuthorizerOutput struct{ *pulumi.OutputState }

func (CustomAuthorizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAuthorizer)(nil)).Elem()
}

func (o CustomAuthorizerOutput) ToCustomAuthorizerOutput() CustomAuthorizerOutput {
	return o
}

func (o CustomAuthorizerOutput) ToCustomAuthorizerOutputWithContext(ctx context.Context) CustomAuthorizerOutput {
	return o
}

// The maximum cache age.
func (o CustomAuthorizerOutput) CacheAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.IntPtrOutput { return v.CacheAge }).(pulumi.IntPtrOutput)
}

// The creation time of the custom authorizer.
func (o CustomAuthorizerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The version alias URI of the FGS function.
func (o CustomAuthorizerOutput) FunctionAliasUri() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.FunctionAliasUri }).(pulumi.StringOutput)
}

// The URN of the FGS function.
func (o CustomAuthorizerOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.FunctionUrn }).(pulumi.StringOutput)
}

// The version of the FGS function.
func (o CustomAuthorizerOutput) FunctionVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.FunctionVersion }).(pulumi.StringOutput)
}

// The array of one or more parameter identities of the custom authorizer.
func (o CustomAuthorizerOutput) Identities() CustomAuthorizerIdentityArrayOutput {
	return o.ApplyT(func(v *CustomAuthorizer) CustomAuthorizerIdentityArrayOutput { return v.Identities }).(CustomAuthorizerIdentityArrayOutput)
}

// The ID of the dedicated instance to which the custom authorizer belongs.
func (o CustomAuthorizerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Whether to send the body.
func (o CustomAuthorizerOutput) IsBodySend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.BoolPtrOutput { return v.IsBodySend }).(pulumi.BoolPtrOutput)
}

// The name of the custom authorizer.
func (o CustomAuthorizerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The framework type of the function.
func (o CustomAuthorizerOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.NetworkType }).(pulumi.StringOutput)
}

// The region where the custom authorizer is located.
func (o CustomAuthorizerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The custom authorization type
func (o CustomAuthorizerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The user data for custom authorizer function.
func (o CustomAuthorizerOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

type CustomAuthorizerArrayOutput struct{ *pulumi.OutputState }

func (CustomAuthorizerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAuthorizer)(nil)).Elem()
}

func (o CustomAuthorizerArrayOutput) ToCustomAuthorizerArrayOutput() CustomAuthorizerArrayOutput {
	return o
}

func (o CustomAuthorizerArrayOutput) ToCustomAuthorizerArrayOutputWithContext(ctx context.Context) CustomAuthorizerArrayOutput {
	return o
}

func (o CustomAuthorizerArrayOutput) Index(i pulumi.IntInput) CustomAuthorizerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomAuthorizer {
		return vs[0].([]*CustomAuthorizer)[vs[1].(int)]
	}).(CustomAuthorizerOutput)
}

type CustomAuthorizerMapOutput struct{ *pulumi.OutputState }

func (CustomAuthorizerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAuthorizer)(nil)).Elem()
}

func (o CustomAuthorizerMapOutput) ToCustomAuthorizerMapOutput() CustomAuthorizerMapOutput {
	return o
}

func (o CustomAuthorizerMapOutput) ToCustomAuthorizerMapOutputWithContext(ctx context.Context) CustomAuthorizerMapOutput {
	return o
}

func (o CustomAuthorizerMapOutput) MapIndex(k pulumi.StringInput) CustomAuthorizerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomAuthorizer {
		return vs[0].(map[string]*CustomAuthorizer)[vs[1].(string)]
	}).(CustomAuthorizerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAuthorizerInput)(nil)).Elem(), &CustomAuthorizer{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAuthorizerArrayInput)(nil)).Elem(), CustomAuthorizerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAuthorizerMapInput)(nil)).Elem(), CustomAuthorizerMap{})
	pulumi.RegisterOutputType(CustomAuthorizerOutput{})
	pulumi.RegisterOutputType(CustomAuthorizerArrayOutput{})
	pulumi.RegisterOutputType(CustomAuthorizerMapOutput{})
}
