// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get the list of VPN gateway availability zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const flavor = config.requireObject<any>("flavor");
 * const test = sbercloud.getVpnGatewayAvailabilityZones({
 *     flavor: flavor,
 * });
 * ```
 */
export function getVpnGatewayAvailabilityZones(args: GetVpnGatewayAvailabilityZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnGatewayAvailabilityZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones", {
        "attachmentType": args.attachmentType,
        "flavor": args.flavor,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnGatewayAvailabilityZones.
 */
export interface GetVpnGatewayAvailabilityZonesArgs {
    /**
     * Specifies the attachment type.
     * The value can be **vpc** and **er**. Defaults to **vpc**.
     */
    attachmentType?: string;
    /**
     * Specifies the flavor name.
     * The value can be **Basic**, **Professional1**, **Professional2** and **GM**.
     */
    flavor: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getVpnGatewayAvailabilityZones.
 */
export interface GetVpnGatewayAvailabilityZonesResult {
    readonly attachmentType?: string;
    readonly flavor: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The names of the availability zones.
     */
    readonly names: string[];
    readonly region: string;
}
/**
 * Use this data source to get the list of VPN gateway availability zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const flavor = config.requireObject<any>("flavor");
 * const test = sbercloud.getVpnGatewayAvailabilityZones({
 *     flavor: flavor,
 * });
 * ```
 */
export function getVpnGatewayAvailabilityZonesOutput(args: GetVpnGatewayAvailabilityZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpnGatewayAvailabilityZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones", {
        "attachmentType": args.attachmentType,
        "flavor": args.flavor,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnGatewayAvailabilityZones.
 */
export interface GetVpnGatewayAvailabilityZonesOutputArgs {
    /**
     * Specifies the attachment type.
     * The value can be **vpc** and **er**. Defaults to **vpc**.
     */
    attachmentType?: pulumi.Input<string>;
    /**
     * Specifies the flavor name.
     * The value can be **Basic**, **Professional1**, **Professional2** and **GM**.
     */
    flavor: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
