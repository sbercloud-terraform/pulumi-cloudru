// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages DMS RocketMQ consumer group resources within SberCloud.
 *
 * ## Example Usage
 *
 * ### Create consumer group for 4.8.0 version instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = new sbercloud.DmsRocketmqConsumerGroup("test", {
 *     instanceId: instanceId,
 *     name: "consumer_group_test",
 *     enabled: true,
 *     broadcast: true,
 *     brokers: [
 *         "broker-0",
 *         "broker-1",
 *     ],
 *     retryMaxTimes: 3,
 *     description: "the description of the consumer group",
 * });
 * ```
 *
 * ### Create consumer group for 5.x version instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = new sbercloud.DmsRocketmqConsumerGroup("test", {
 *     instanceId: instanceId,
 *     name: "consumer_group_test",
 *     enabled: true,
 *     broadcast: true,
 *     retryMaxTimes: 3,
 *     description: "the description of the consumer group",
 *     consumeOrderly: true,
 * });
 * ```
 *
 * ## Import
 *
 * The rocketmq consumer group can be imported using the rocketMQ instance ID and group name separated by a slash, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/dmsRocketmqConsumerGroup:DmsRocketmqConsumerGroup test 8d3c7938-dc47-4937-a30f-c80de381c5e3/group_1
 * ```
 */
export class DmsRocketmqConsumerGroup extends pulumi.CustomResource {
    /**
     * Get an existing DmsRocketmqConsumerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsRocketmqConsumerGroupState, opts?: pulumi.CustomResourceOptions): DmsRocketmqConsumerGroup {
        return new DmsRocketmqConsumerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/dmsRocketmqConsumerGroup:DmsRocketmqConsumerGroup';

    /**
     * Returns true if the given object is an instance of DmsRocketmqConsumerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsRocketmqConsumerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsRocketmqConsumerGroup.__pulumiType;
    }

    /**
     * Specifies whether to broadcast of the consumer group.
     */
    declare public readonly broadcast: pulumi.Output<boolean>;
    /**
     * Specifies the list of associated brokers of the consumer group.
     * It's only valid when RocketMQ instance version is **4.8.0**.
     * Changing this parameter will create a new resource.
     */
    declare public readonly brokers: pulumi.Output<string[]>;
    /**
     * Specifies whether to consume orderly.
     * It's only valid when RocketMQ instance version is **5.x**.
     */
    declare public readonly consumeOrderly: pulumi.Output<boolean>;
    /**
     * Specifies the description of the consumer group.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the consumer group is enabled or not. Defaults to true.
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the ID of the rocketMQ instance.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * Specifies the name of the consumer group.  
     * The valid length is limited from `3` to `64`, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
     * and underscores (_) are allowed.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the maximum number of retry times.  
     * The valid value is range from `1` to `16`.
     */
    declare public readonly retryMaxTimes: pulumi.Output<number>;

    /**
     * Create a DmsRocketmqConsumerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsRocketmqConsumerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsRocketmqConsumerGroupArgs | DmsRocketmqConsumerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsRocketmqConsumerGroupState | undefined;
            resourceInputs["broadcast"] = state?.broadcast;
            resourceInputs["brokers"] = state?.brokers;
            resourceInputs["consumeOrderly"] = state?.consumeOrderly;
            resourceInputs["description"] = state?.description;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["retryMaxTimes"] = state?.retryMaxTimes;
        } else {
            const args = argsOrState as DmsRocketmqConsumerGroupArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.retryMaxTimes === undefined && !opts.urn) {
                throw new Error("Missing required property 'retryMaxTimes'");
            }
            resourceInputs["broadcast"] = args?.broadcast;
            resourceInputs["brokers"] = args?.brokers;
            resourceInputs["consumeOrderly"] = args?.consumeOrderly;
            resourceInputs["description"] = args?.description;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["retryMaxTimes"] = args?.retryMaxTimes;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsRocketmqConsumerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DmsRocketmqConsumerGroup resources.
 */
export interface DmsRocketmqConsumerGroupState {
    /**
     * Specifies whether to broadcast of the consumer group.
     */
    broadcast?: pulumi.Input<boolean>;
    /**
     * Specifies the list of associated brokers of the consumer group.
     * It's only valid when RocketMQ instance version is **4.8.0**.
     * Changing this parameter will create a new resource.
     */
    brokers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to consume orderly.
     * It's only valid when RocketMQ instance version is **5.x**.
     */
    consumeOrderly?: pulumi.Input<boolean>;
    /**
     * Specifies the description of the consumer group.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the consumer group is enabled or not. Defaults to true.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the rocketMQ instance.
     *
     * Changing this parameter will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the name of the consumer group.  
     * The valid length is limited from `3` to `64`, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
     * and underscores (_) are allowed.
     *
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of retry times.  
     * The valid value is range from `1` to `16`.
     */
    retryMaxTimes?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DmsRocketmqConsumerGroup resource.
 */
export interface DmsRocketmqConsumerGroupArgs {
    /**
     * Specifies whether to broadcast of the consumer group.
     */
    broadcast?: pulumi.Input<boolean>;
    /**
     * Specifies the list of associated brokers of the consumer group.
     * It's only valid when RocketMQ instance version is **4.8.0**.
     * Changing this parameter will create a new resource.
     */
    brokers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to consume orderly.
     * It's only valid when RocketMQ instance version is **5.x**.
     */
    consumeOrderly?: pulumi.Input<boolean>;
    /**
     * Specifies the description of the consumer group.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the consumer group is enabled or not. Defaults to true.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the rocketMQ instance.
     *
     * Changing this parameter will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the name of the consumer group.  
     * The valid length is limited from `3` to `64`, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
     * and underscores (_) are allowed.
     *
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of retry times.  
     * The valid value is range from `1` to `16`.
     */
    retryMaxTimes: pulumi.Input<number>;
}
