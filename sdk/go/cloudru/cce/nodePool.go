// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type NodePool struct {
	pulumi.CustomResourceState

	AutoRenew           pulumi.StringOutput           `pulumi:"autoRenew"`
	AvailabilityZone    pulumi.StringPtrOutput        `pulumi:"availabilityZone"`
	BillingMode         pulumi.IntOutput              `pulumi:"billingMode"`
	ChargingMode        pulumi.StringOutput           `pulumi:"chargingMode"`
	ClusterId           pulumi.StringOutput           `pulumi:"clusterId"`
	CurrentNodeCount    pulumi.IntOutput              `pulumi:"currentNodeCount"`
	DataVolumes         NodePoolDataVolumeArrayOutput `pulumi:"dataVolumes"`
	EcsGroupId          pulumi.StringPtrOutput        `pulumi:"ecsGroupId"`
	EnableForceNew      pulumi.StringPtrOutput        `pulumi:"enableForceNew"`
	EnterpriseProjectId pulumi.StringOutput           `pulumi:"enterpriseProjectId"`
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                pulumi.StringMapOutput                 `pulumi:"extendParam"`
	ExtendParams               NodePoolExtendParamsOutput             `pulumi:"extendParams"`
	ExtensionScaleGroups       NodePoolExtensionScaleGroupArrayOutput `pulumi:"extensionScaleGroups"`
	FlavorId                   pulumi.StringOutput                    `pulumi:"flavorId"`
	HostnameConfig             NodePoolHostnameConfigOutput           `pulumi:"hostnameConfig"`
	IgnoreInitialNodeCount     pulumi.BoolPtrOutput                   `pulumi:"ignoreInitialNodeCount"`
	InitialNodeCount           pulumi.IntOutput                       `pulumi:"initialNodeCount"`
	InitializedConditions      pulumi.StringArrayOutput               `pulumi:"initializedConditions"`
	KeyPair                    pulumi.StringPtrOutput                 `pulumi:"keyPair"`
	LabelPolicyOnExistingNodes pulumi.StringOutput                    `pulumi:"labelPolicyOnExistingNodes"`
	Labels                     pulumi.StringMapOutput                 `pulumi:"labels"`
	MaxNodeCount               pulumi.IntPtrOutput                    `pulumi:"maxNodeCount"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           pulumi.IntOutput         `pulumi:"maxPods"`
	MinNodeCount      pulumi.IntPtrOutput      `pulumi:"minNodeCount"`
	Name              pulumi.StringOutput      `pulumi:"name"`
	Os                pulumi.StringOutput      `pulumi:"os"`
	Partition         pulumi.StringPtrOutput   `pulumi:"partition"`
	Password          pulumi.StringPtrOutput   `pulumi:"password"`
	Period            pulumi.IntPtrOutput      `pulumi:"period"`
	PeriodUnit        pulumi.StringPtrOutput   `pulumi:"periodUnit"`
	PodSecurityGroups pulumi.StringArrayOutput `pulumi:"podSecurityGroups"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall pulumi.StringPtrOutput `pulumi:"postinstall"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 pulumi.StringPtrOutput   `pulumi:"preinstall"`
	Priority                   pulumi.IntPtrOutput      `pulumi:"priority"`
	Region                     pulumi.StringOutput      `pulumi:"region"`
	RootVolume                 NodePoolRootVolumeOutput `pulumi:"rootVolume"`
	Runtime                    pulumi.StringOutput      `pulumi:"runtime"`
	ScaleDownCooldownTime      pulumi.IntPtrOutput      `pulumi:"scaleDownCooldownTime"`
	ScallEnable                pulumi.BoolPtrOutput     `pulumi:"scallEnable"`
	SecurityGroups             pulumi.StringArrayOutput `pulumi:"securityGroups"`
	Status                     pulumi.StringOutput      `pulumi:"status"`
	Storage                    NodePoolStoragePtrOutput `pulumi:"storage"`
	SubnetId                   pulumi.StringOutput      `pulumi:"subnetId"`
	SubnetLists                pulumi.StringArrayOutput `pulumi:"subnetLists"`
	TagPolicyOnExistingNodes   pulumi.StringOutput      `pulumi:"tagPolicyOnExistingNodes"`
	Tags                       pulumi.StringMapOutput   `pulumi:"tags"`
	TaintPolicyOnExistingNodes pulumi.StringOutput      `pulumi:"taintPolicyOnExistingNodes"`
	Taints                     NodePoolTaintArrayOutput `pulumi:"taints"`
	Type                       pulumi.StringOutput      `pulumi:"type"`
}

// NewNodePool registers a new resource with the given unique name, arguments, and options.
func NewNodePool(ctx *pulumi.Context,
	name string, args *NodePoolArgs, opts ...pulumi.ResourceOption) (*NodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.InitialNodeCount == nil {
		return nil, errors.New("invalid value for required argument 'InitialNodeCount'")
	}
	if args.RootVolume == nil {
		return nil, errors.New("invalid value for required argument 'RootVolume'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NodePool
	err := ctx.RegisterResource("sbercloud:Cce/nodePool:NodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodePool gets an existing NodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodePoolState, opts ...pulumi.ResourceOption) (*NodePool, error) {
	var resource NodePool
	err := ctx.ReadResource("sbercloud:Cce/nodePool:NodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodePool resources.
type nodePoolState struct {
	AutoRenew           *string              `pulumi:"autoRenew"`
	AvailabilityZone    *string              `pulumi:"availabilityZone"`
	BillingMode         *int                 `pulumi:"billingMode"`
	ChargingMode        *string              `pulumi:"chargingMode"`
	ClusterId           *string              `pulumi:"clusterId"`
	CurrentNodeCount    *int                 `pulumi:"currentNodeCount"`
	DataVolumes         []NodePoolDataVolume `pulumi:"dataVolumes"`
	EcsGroupId          *string              `pulumi:"ecsGroupId"`
	EnableForceNew      *string              `pulumi:"enableForceNew"`
	EnterpriseProjectId *string              `pulumi:"enterpriseProjectId"`
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                map[string]string             `pulumi:"extendParam"`
	ExtendParams               *NodePoolExtendParams         `pulumi:"extendParams"`
	ExtensionScaleGroups       []NodePoolExtensionScaleGroup `pulumi:"extensionScaleGroups"`
	FlavorId                   *string                       `pulumi:"flavorId"`
	HostnameConfig             *NodePoolHostnameConfig       `pulumi:"hostnameConfig"`
	IgnoreInitialNodeCount     *bool                         `pulumi:"ignoreInitialNodeCount"`
	InitialNodeCount           *int                          `pulumi:"initialNodeCount"`
	InitializedConditions      []string                      `pulumi:"initializedConditions"`
	KeyPair                    *string                       `pulumi:"keyPair"`
	LabelPolicyOnExistingNodes *string                       `pulumi:"labelPolicyOnExistingNodes"`
	Labels                     map[string]string             `pulumi:"labels"`
	MaxNodeCount               *int                          `pulumi:"maxNodeCount"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           *int     `pulumi:"maxPods"`
	MinNodeCount      *int     `pulumi:"minNodeCount"`
	Name              *string  `pulumi:"name"`
	Os                *string  `pulumi:"os"`
	Partition         *string  `pulumi:"partition"`
	Password          *string  `pulumi:"password"`
	Period            *int     `pulumi:"period"`
	PeriodUnit        *string  `pulumi:"periodUnit"`
	PodSecurityGroups []string `pulumi:"podSecurityGroups"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 *string             `pulumi:"preinstall"`
	Priority                   *int                `pulumi:"priority"`
	Region                     *string             `pulumi:"region"`
	RootVolume                 *NodePoolRootVolume `pulumi:"rootVolume"`
	Runtime                    *string             `pulumi:"runtime"`
	ScaleDownCooldownTime      *int                `pulumi:"scaleDownCooldownTime"`
	ScallEnable                *bool               `pulumi:"scallEnable"`
	SecurityGroups             []string            `pulumi:"securityGroups"`
	Status                     *string             `pulumi:"status"`
	Storage                    *NodePoolStorage    `pulumi:"storage"`
	SubnetId                   *string             `pulumi:"subnetId"`
	SubnetLists                []string            `pulumi:"subnetLists"`
	TagPolicyOnExistingNodes   *string             `pulumi:"tagPolicyOnExistingNodes"`
	Tags                       map[string]string   `pulumi:"tags"`
	TaintPolicyOnExistingNodes *string             `pulumi:"taintPolicyOnExistingNodes"`
	Taints                     []NodePoolTaint     `pulumi:"taints"`
	Type                       *string             `pulumi:"type"`
}

type NodePoolState struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	BillingMode         pulumi.IntPtrInput
	ChargingMode        pulumi.StringPtrInput
	ClusterId           pulumi.StringPtrInput
	CurrentNodeCount    pulumi.IntPtrInput
	DataVolumes         NodePoolDataVolumeArrayInput
	EcsGroupId          pulumi.StringPtrInput
	EnableForceNew      pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                pulumi.StringMapInput
	ExtendParams               NodePoolExtendParamsPtrInput
	ExtensionScaleGroups       NodePoolExtensionScaleGroupArrayInput
	FlavorId                   pulumi.StringPtrInput
	HostnameConfig             NodePoolHostnameConfigPtrInput
	IgnoreInitialNodeCount     pulumi.BoolPtrInput
	InitialNodeCount           pulumi.IntPtrInput
	InitializedConditions      pulumi.StringArrayInput
	KeyPair                    pulumi.StringPtrInput
	LabelPolicyOnExistingNodes pulumi.StringPtrInput
	Labels                     pulumi.StringMapInput
	MaxNodeCount               pulumi.IntPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           pulumi.IntPtrInput
	MinNodeCount      pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	Os                pulumi.StringPtrInput
	Partition         pulumi.StringPtrInput
	Password          pulumi.StringPtrInput
	Period            pulumi.IntPtrInput
	PeriodUnit        pulumi.StringPtrInput
	PodSecurityGroups pulumi.StringArrayInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 pulumi.StringPtrInput
	Priority                   pulumi.IntPtrInput
	Region                     pulumi.StringPtrInput
	RootVolume                 NodePoolRootVolumePtrInput
	Runtime                    pulumi.StringPtrInput
	ScaleDownCooldownTime      pulumi.IntPtrInput
	ScallEnable                pulumi.BoolPtrInput
	SecurityGroups             pulumi.StringArrayInput
	Status                     pulumi.StringPtrInput
	Storage                    NodePoolStoragePtrInput
	SubnetId                   pulumi.StringPtrInput
	SubnetLists                pulumi.StringArrayInput
	TagPolicyOnExistingNodes   pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TaintPolicyOnExistingNodes pulumi.StringPtrInput
	Taints                     NodePoolTaintArrayInput
	Type                       pulumi.StringPtrInput
}

func (NodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolState)(nil)).Elem()
}

type nodePoolArgs struct {
	AutoRenew           *string              `pulumi:"autoRenew"`
	AvailabilityZone    *string              `pulumi:"availabilityZone"`
	ChargingMode        *string              `pulumi:"chargingMode"`
	ClusterId           string               `pulumi:"clusterId"`
	DataVolumes         []NodePoolDataVolume `pulumi:"dataVolumes"`
	EcsGroupId          *string              `pulumi:"ecsGroupId"`
	EnableForceNew      *string              `pulumi:"enableForceNew"`
	EnterpriseProjectId *string              `pulumi:"enterpriseProjectId"`
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                map[string]string             `pulumi:"extendParam"`
	ExtendParams               *NodePoolExtendParams         `pulumi:"extendParams"`
	ExtensionScaleGroups       []NodePoolExtensionScaleGroup `pulumi:"extensionScaleGroups"`
	FlavorId                   string                        `pulumi:"flavorId"`
	HostnameConfig             *NodePoolHostnameConfig       `pulumi:"hostnameConfig"`
	IgnoreInitialNodeCount     *bool                         `pulumi:"ignoreInitialNodeCount"`
	InitialNodeCount           int                           `pulumi:"initialNodeCount"`
	InitializedConditions      []string                      `pulumi:"initializedConditions"`
	KeyPair                    *string                       `pulumi:"keyPair"`
	LabelPolicyOnExistingNodes *string                       `pulumi:"labelPolicyOnExistingNodes"`
	Labels                     map[string]string             `pulumi:"labels"`
	MaxNodeCount               *int                          `pulumi:"maxNodeCount"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           *int     `pulumi:"maxPods"`
	MinNodeCount      *int     `pulumi:"minNodeCount"`
	Name              *string  `pulumi:"name"`
	Os                *string  `pulumi:"os"`
	Partition         *string  `pulumi:"partition"`
	Password          *string  `pulumi:"password"`
	Period            *int     `pulumi:"period"`
	PeriodUnit        *string  `pulumi:"periodUnit"`
	PodSecurityGroups []string `pulumi:"podSecurityGroups"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 *string            `pulumi:"preinstall"`
	Priority                   *int               `pulumi:"priority"`
	Region                     *string            `pulumi:"region"`
	RootVolume                 NodePoolRootVolume `pulumi:"rootVolume"`
	Runtime                    *string            `pulumi:"runtime"`
	ScaleDownCooldownTime      *int               `pulumi:"scaleDownCooldownTime"`
	ScallEnable                *bool              `pulumi:"scallEnable"`
	SecurityGroups             []string           `pulumi:"securityGroups"`
	Storage                    *NodePoolStorage   `pulumi:"storage"`
	SubnetId                   *string            `pulumi:"subnetId"`
	SubnetLists                []string           `pulumi:"subnetLists"`
	TagPolicyOnExistingNodes   *string            `pulumi:"tagPolicyOnExistingNodes"`
	Tags                       map[string]string  `pulumi:"tags"`
	TaintPolicyOnExistingNodes *string            `pulumi:"taintPolicyOnExistingNodes"`
	Taints                     []NodePoolTaint    `pulumi:"taints"`
	Type                       *string            `pulumi:"type"`
}

// The set of arguments for constructing a NodePool resource.
type NodePoolArgs struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	ClusterId           pulumi.StringInput
	DataVolumes         NodePoolDataVolumeArrayInput
	EcsGroupId          pulumi.StringPtrInput
	EnableForceNew      pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
	ExtendParam                pulumi.StringMapInput
	ExtendParams               NodePoolExtendParamsPtrInput
	ExtensionScaleGroups       NodePoolExtensionScaleGroupArrayInput
	FlavorId                   pulumi.StringInput
	HostnameConfig             NodePoolHostnameConfigPtrInput
	IgnoreInitialNodeCount     pulumi.BoolPtrInput
	InitialNodeCount           pulumi.IntInput
	InitializedConditions      pulumi.StringArrayInput
	KeyPair                    pulumi.StringPtrInput
	LabelPolicyOnExistingNodes pulumi.StringPtrInput
	Labels                     pulumi.StringMapInput
	MaxNodeCount               pulumi.IntPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	MaxPods           pulumi.IntPtrInput
	MinNodeCount      pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	Os                pulumi.StringPtrInput
	Partition         pulumi.StringPtrInput
	Password          pulumi.StringPtrInput
	Period            pulumi.IntPtrInput
	PeriodUnit        pulumi.StringPtrInput
	PodSecurityGroups pulumi.StringArrayInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
	Preinstall                 pulumi.StringPtrInput
	Priority                   pulumi.IntPtrInput
	Region                     pulumi.StringPtrInput
	RootVolume                 NodePoolRootVolumeInput
	Runtime                    pulumi.StringPtrInput
	ScaleDownCooldownTime      pulumi.IntPtrInput
	ScallEnable                pulumi.BoolPtrInput
	SecurityGroups             pulumi.StringArrayInput
	Storage                    NodePoolStoragePtrInput
	SubnetId                   pulumi.StringPtrInput
	SubnetLists                pulumi.StringArrayInput
	TagPolicyOnExistingNodes   pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TaintPolicyOnExistingNodes pulumi.StringPtrInput
	Taints                     NodePoolTaintArrayInput
	Type                       pulumi.StringPtrInput
}

func (NodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolArgs)(nil)).Elem()
}

type NodePoolInput interface {
	pulumi.Input

	ToNodePoolOutput() NodePoolOutput
	ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput
}

func (*NodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (i *NodePool) ToNodePoolOutput() NodePoolOutput {
	return i.ToNodePoolOutputWithContext(context.Background())
}

func (i *NodePool) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolOutput)
}

// NodePoolArrayInput is an input type that accepts NodePoolArray and NodePoolArrayOutput values.
// You can construct a concrete instance of `NodePoolArrayInput` via:
//
//	NodePoolArray{ NodePoolArgs{...} }
type NodePoolArrayInput interface {
	pulumi.Input

	ToNodePoolArrayOutput() NodePoolArrayOutput
	ToNodePoolArrayOutputWithContext(context.Context) NodePoolArrayOutput
}

type NodePoolArray []NodePoolInput

func (NodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (i NodePoolArray) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return i.ToNodePoolArrayOutputWithContext(context.Background())
}

func (i NodePoolArray) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolArrayOutput)
}

// NodePoolMapInput is an input type that accepts NodePoolMap and NodePoolMapOutput values.
// You can construct a concrete instance of `NodePoolMapInput` via:
//
//	NodePoolMap{ "key": NodePoolArgs{...} }
type NodePoolMapInput interface {
	pulumi.Input

	ToNodePoolMapOutput() NodePoolMapOutput
	ToNodePoolMapOutputWithContext(context.Context) NodePoolMapOutput
}

type NodePoolMap map[string]NodePoolInput

func (NodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (i NodePoolMap) ToNodePoolMapOutput() NodePoolMapOutput {
	return i.ToNodePoolMapOutputWithContext(context.Background())
}

func (i NodePoolMap) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMapOutput)
}

type NodePoolOutput struct{ *pulumi.OutputState }

func (NodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (o NodePoolOutput) ToNodePoolOutput() NodePoolOutput {
	return o
}

func (o NodePoolOutput) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return o
}

func (o NodePoolOutput) AutoRenew() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.AutoRenew }).(pulumi.StringOutput)
}

func (o NodePoolOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.BillingMode }).(pulumi.IntOutput)
}

func (o NodePoolOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o NodePoolOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o NodePoolOutput) CurrentNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.CurrentNodeCount }).(pulumi.IntOutput)
}

func (o NodePoolOutput) DataVolumes() NodePoolDataVolumeArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolDataVolumeArrayOutput { return v.DataVolumes }).(NodePoolDataVolumeArrayOutput)
}

func (o NodePoolOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.EcsGroupId }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter.
func (o NodePoolOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.ExtendParam }).(pulumi.StringMapOutput)
}

func (o NodePoolOutput) ExtendParams() NodePoolExtendParamsOutput {
	return o.ApplyT(func(v *NodePool) NodePoolExtendParamsOutput { return v.ExtendParams }).(NodePoolExtendParamsOutput)
}

func (o NodePoolOutput) ExtensionScaleGroups() NodePoolExtensionScaleGroupArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolExtensionScaleGroupArrayOutput { return v.ExtensionScaleGroups }).(NodePoolExtensionScaleGroupArrayOutput)
}

func (o NodePoolOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

func (o NodePoolOutput) HostnameConfig() NodePoolHostnameConfigOutput {
	return o.ApplyT(func(v *NodePool) NodePoolHostnameConfigOutput { return v.HostnameConfig }).(NodePoolHostnameConfigOutput)
}

func (o NodePoolOutput) IgnoreInitialNodeCount() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.BoolPtrOutput { return v.IgnoreInitialNodeCount }).(pulumi.BoolPtrOutput)
}

func (o NodePoolOutput) InitialNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.InitialNodeCount }).(pulumi.IntOutput)
}

func (o NodePoolOutput) InitializedConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.InitializedConditions }).(pulumi.StringArrayOutput)
}

func (o NodePoolOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.KeyPair }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) LabelPolicyOnExistingNodes() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.LabelPolicyOnExistingNodes }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodePoolOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntPtrOutput { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
func (o NodePoolOutput) MaxPods() pulumi.IntOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntOutput { return v.MaxPods }).(pulumi.IntOutput)
}

func (o NodePoolOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntPtrOutput { return v.MinNodeCount }).(pulumi.IntPtrOutput)
}

func (o NodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.Partition }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o NodePoolOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) PodSecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.PodSecurityGroups }).(pulumi.StringArrayOutput)
}

// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
func (o NodePoolOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.Postinstall }).(pulumi.StringPtrOutput)
}

// schema: Deprecated; This parameter can be configured in the 'extend_params' parameter.
func (o NodePoolOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.Preinstall }).(pulumi.StringPtrOutput)
}

func (o NodePoolOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o NodePoolOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o NodePoolOutput) RootVolume() NodePoolRootVolumeOutput {
	return o.ApplyT(func(v *NodePool) NodePoolRootVolumeOutput { return v.RootVolume }).(NodePoolRootVolumeOutput)
}

func (o NodePoolOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o NodePoolOutput) ScaleDownCooldownTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.IntPtrOutput { return v.ScaleDownCooldownTime }).(pulumi.IntPtrOutput)
}

func (o NodePoolOutput) ScallEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.BoolPtrOutput { return v.ScallEnable }).(pulumi.BoolPtrOutput)
}

func (o NodePoolOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o NodePoolOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Storage() NodePoolStoragePtrOutput {
	return o.ApplyT(func(v *NodePool) NodePoolStoragePtrOutput { return v.Storage }).(NodePoolStoragePtrOutput)
}

func (o NodePoolOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o NodePoolOutput) SubnetLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.SubnetLists }).(pulumi.StringArrayOutput)
}

func (o NodePoolOutput) TagPolicyOnExistingNodes() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.TagPolicyOnExistingNodes }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NodePoolOutput) TaintPolicyOnExistingNodes() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.TaintPolicyOnExistingNodes }).(pulumi.StringOutput)
}

func (o NodePoolOutput) Taints() NodePoolTaintArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolTaintArrayOutput { return v.Taints }).(NodePoolTaintArrayOutput)
}

func (o NodePoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type NodePoolArrayOutput struct{ *pulumi.OutputState }

func (NodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) Index(i pulumi.IntInput) NodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].([]*NodePool)[vs[1].(int)]
	}).(NodePoolOutput)
}

type NodePoolMapOutput struct{ *pulumi.OutputState }

func (NodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (o NodePoolMapOutput) ToNodePoolMapOutput() NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) MapIndex(k pulumi.StringInput) NodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].(map[string]*NodePool)[vs[1].(string)]
	}).(NodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolInput)(nil)).Elem(), &NodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolArrayInput)(nil)).Elem(), NodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMapInput)(nil)).Elem(), NodePoolMap{})
	pulumi.RegisterOutputType(NodePoolOutput{})
	pulumi.RegisterOutputType(NodePoolArrayOutput{})
	pulumi.RegisterOutputType(NodePoolMapOutput{})
}
