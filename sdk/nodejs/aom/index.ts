// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ServiceDiscoveryRuleArgs, ServiceDiscoveryRuleState } from "./serviceDiscoveryRule";
export type ServiceDiscoveryRule = import("./serviceDiscoveryRule").ServiceDiscoveryRule;
export const ServiceDiscoveryRule: typeof import("./serviceDiscoveryRule").ServiceDiscoveryRule = null as any;
utilities.lazyLoad(exports, ["ServiceDiscoveryRule"], () => require("./serviceDiscoveryRule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sbercloud:Aom/serviceDiscoveryRule:ServiceDiscoveryRule":
                return new ServiceDiscoveryRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sbercloud", "Aom/serviceDiscoveryRule", _module)
