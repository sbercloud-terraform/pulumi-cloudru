// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a DDS parameter template resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const name = config.requireObject<any>("name");
 * const parameterValues = config.requireObject<any>("parameterValues");
 * const nodeType = config.requireObject<any>("nodeType");
 * const nodeVersion = config.requireObject<any>("nodeVersion");
 * const test = new sbercloud.DdsParameterTemplate("test", {
 *     name: name,
 *     parameterValues: parameterValues,
 *     nodeType: nodeType,
 *     nodeVersion: nodeVersion,
 * });
 * ```
 *
 * ## Import
 *
 * The DDS parameter template can be imported using the `id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/ddsParameterTemplate:DdsParameterTemplate test <tempalate_id>
 * ```
 */
export class DdsParameterTemplate extends pulumi.CustomResource {
    /**
     * Get an existing DdsParameterTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdsParameterTemplateState, opts?: pulumi.CustomResourceOptions): DdsParameterTemplate {
        return new DdsParameterTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/ddsParameterTemplate:DdsParameterTemplate';

    /**
     * Returns true if the given object is an instance of DdsParameterTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdsParameterTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdsParameterTemplate.__pulumiType;
    }

    /**
     * The create time of the parameter template.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the parameter template description.
     * The description must consist of a maximum of 256 characters and cannot contain the carriage
     * return character or the following special characters: >!<"&'=.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the parameter template name.
     * The value must be 1 to 64 characters, which can contain only letters, digits, hyphens (-),
     * underscores (_), and periods (.).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the node type of parameter template. Valid value:
     * + **mongos**: the mongos node type.
     * + **shard**: the shard node type.
     * + **config**: the config node type.
     * + **replica**: the replica node type.
     * + **single**: the single node type.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly nodeType!: pulumi.Output<string>;
    /**
     * Specifies the database version.
     * The value can be **4.4**, **4.2**, **4.0**, **3.4** or **3.2**.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly nodeVersion!: pulumi.Output<string>;
    /**
     * Specifies the mapping between parameter names and parameter values.
     * You can customize parameter values based on the parameters in the default parameter template.
     */
    public readonly parameterValues!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Indicates the parameters defined by users based on the default parameter templates.
     * The Parameter structure is documented below.
     */
    public /*out*/ readonly parameters!: pulumi.Output<outputs.DdsParameterTemplateParameter[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The update time of the parameter template.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a DdsParameterTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdsParameterTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdsParameterTemplateArgs | DdsParameterTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdsParameterTemplateState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeType"] = state ? state.nodeType : undefined;
            resourceInputs["nodeVersion"] = state ? state.nodeVersion : undefined;
            resourceInputs["parameterValues"] = state ? state.parameterValues : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as DdsParameterTemplateArgs | undefined;
            if ((!args || args.nodeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeType'");
            }
            if ((!args || args.nodeVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeVersion'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeType"] = args ? args.nodeType : undefined;
            resourceInputs["nodeVersion"] = args ? args.nodeVersion : undefined;
            resourceInputs["parameterValues"] = args ? args.parameterValues : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdsParameterTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DdsParameterTemplate resources.
 */
export interface DdsParameterTemplateState {
    /**
     * The create time of the parameter template.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the parameter template description.
     * The description must consist of a maximum of 256 characters and cannot contain the carriage
     * return character or the following special characters: >!<"&'=.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the parameter template name.
     * The value must be 1 to 64 characters, which can contain only letters, digits, hyphens (-),
     * underscores (_), and periods (.).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the node type of parameter template. Valid value:
     * + **mongos**: the mongos node type.
     * + **shard**: the shard node type.
     * + **config**: the config node type.
     * + **replica**: the replica node type.
     * + **single**: the single node type.
     *
     * Changing this parameter will create a new resource.
     */
    nodeType?: pulumi.Input<string>;
    /**
     * Specifies the database version.
     * The value can be **4.4**, **4.2**, **4.0**, **3.4** or **3.2**.
     *
     * Changing this parameter will create a new resource.
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * Specifies the mapping between parameter names and parameter values.
     * You can customize parameter values based on the parameters in the default parameter template.
     */
    parameterValues?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the parameters defined by users based on the default parameter templates.
     * The Parameter structure is documented below.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.DdsParameterTemplateParameter>[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The update time of the parameter template.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdsParameterTemplate resource.
 */
export interface DdsParameterTemplateArgs {
    /**
     * Specifies the parameter template description.
     * The description must consist of a maximum of 256 characters and cannot contain the carriage
     * return character or the following special characters: >!<"&'=.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the parameter template name.
     * The value must be 1 to 64 characters, which can contain only letters, digits, hyphens (-),
     * underscores (_), and periods (.).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the node type of parameter template. Valid value:
     * + **mongos**: the mongos node type.
     * + **shard**: the shard node type.
     * + **config**: the config node type.
     * + **replica**: the replica node type.
     * + **single**: the single node type.
     *
     * Changing this parameter will create a new resource.
     */
    nodeType: pulumi.Input<string>;
    /**
     * Specifies the database version.
     * The value can be **4.4**, **4.2**, **4.0**, **3.4** or **3.2**.
     *
     * Changing this parameter will create a new resource.
     */
    nodeVersion: pulumi.Input<string>;
    /**
     * Specifies the mapping between parameter names and parameter values.
     * You can customize parameter values based on the parameters in the default parameter template.
     */
    parameterValues?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}
