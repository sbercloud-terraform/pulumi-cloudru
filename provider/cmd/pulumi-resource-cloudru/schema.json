{
    "name": "cloudru",
    "displayName": "Cloudru",
    "description": "A Pulumi package for creating and managing cloud.ru cloud resources.",
    "keywords": [
        "cloudru",
        "cloud",
        "cloud.ru",
        "cloud-ru",
        "sbercloud",
        "category/cloud"
    ],
    "homepage": "https://cloud.ru/advanced",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cloudru` Terraform Provider](https://github.com/sbercloud-terraform/terraform-provider-cloudru).",
    "repository": "https://github.com/sbercloud-terraform/pulumi-cloudru",
    "publisher": "Cloud.ru",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "pulumi-cloudru",
            "packageDescription": "A Pulumi package for creating and managing cloud.ru cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/sbercloud-terraform/terraform-provider-cloudru)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cloudru` repo](https://github.com/sbercloud-terraform/pulumi-cloudru/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cloudru` repo](https://github.com/sbercloud-terraform/terraform-provider-cloudru/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "packageName": "pulumi_cloudru",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/sbercloud-terraform/terraform-provider-cloudru)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-cloudru` repo](https://github.com/sbercloud-terraform/pulumi-cloudru/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-cloudru` repo](https://github.com/sbercloud-terraform/terraform-provider-cloudru/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "accessKey": {
                "type": "string",
                "description": "The access key of the SberCloud to use."
            },
            "accountName": {
                "type": "string",
                "description": "The name of the Account to login with."
            },
            "assumeRole": {
                "$ref": "#/types/cloudru:config/assumeRole:assumeRole"
            },
            "authUrl": {
                "type": "string",
                "description": "The Identity authentication URL."
            },
            "domainId": {
                "type": "string"
            },
            "domainName": {
                "type": "string"
            },
            "endpoints": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "The custom endpoints used to override the default endpoint URL."
            },
            "enterpriseProjectId": {
                "type": "string"
            },
            "insecure": {
                "type": "boolean",
                "description": "Trust self-signed certificates."
            },
            "maxRetries": {
                "type": "integer"
            },
            "password": {
                "type": "string",
                "description": "Password to login with.",
                "secret": true
            },
            "projectName": {
                "type": "string",
                "description": "The name of the Project to login with."
            },
            "region": {
                "type": "string",
                "description": "The SberCloud region to connect to."
            },
            "secretKey": {
                "type": "string",
                "description": "The secret key of the SberCloud to use."
            },
            "securityToken": {
                "type": "string",
                "description": "The security token to authenticate with a temporary security credential."
            },
            "userName": {
                "type": "string",
                "description": "Username to login with."
            }
        },
        "defaults": [
            "region"
        ]
    },
    "types": {
        "cloudru:Aom/ServiceDiscoveryRuleDiscoveryRule:ServiceDiscoveryRuleDiscoveryRule": {
            "properties": {
                "checkContents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "checkMode": {
                    "type": "string"
                },
                "checkType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "checkContents",
                "checkMode",
                "checkType"
            ]
        },
        "cloudru:Aom/ServiceDiscoveryRuleLogPathRule:ServiceDiscoveryRuleLogPathRule": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameType": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "args",
                "nameType",
                "values"
            ]
        },
        "cloudru:Aom/ServiceDiscoveryRuleNameRules:ServiceDiscoveryRuleNameRules": {
            "properties": {
                "applicationNameRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleNameRulesApplicationNameRule:ServiceDiscoveryRuleNameRulesApplicationNameRule"
                    }
                },
                "serviceNameRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleNameRulesServiceNameRule:ServiceDiscoveryRuleNameRulesServiceNameRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationNameRules",
                "serviceNameRules"
            ]
        },
        "cloudru:Aom/ServiceDiscoveryRuleNameRulesApplicationNameRule:ServiceDiscoveryRuleNameRulesApplicationNameRule": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameType": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "args",
                "nameType"
            ]
        },
        "cloudru:Aom/ServiceDiscoveryRuleNameRulesServiceNameRule:ServiceDiscoveryRuleNameRulesServiceNameRule": {
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameType": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "args",
                "nameType"
            ]
        },
        "cloudru:As/BandwidthPolicyIntervalAlarmAction:BandwidthPolicyIntervalAlarmAction": {
            "properties": {
                "limits": {
                    "type": "integer",
                    "description": "Specifies the operation restrictions.\n"
                },
                "lowerBound": {
                    "type": "string",
                    "description": "Specifies the lower limit of the value range.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "Specifies the operation to be performed.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Specifies the operation size.\n"
                },
                "upperBound": {
                    "type": "string",
                    "description": "Specifies the upper limit of the value range.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "limits",
                        "lowerBound",
                        "operation",
                        "size",
                        "upperBound"
                    ]
                }
            }
        },
        "cloudru:As/BandwidthPolicyMetaData:BandwidthPolicyMetaData": {
            "properties": {
                "metadataBandwidthShareType": {
                    "type": "string",
                    "description": "The bandwidth sharing type in the bandwidth policy.\n"
                },
                "metadataEipAddress": {
                    "type": "string",
                    "description": "The EIP IP address for the bandwidth in the bandwidth policy.\n"
                },
                "metadataEipId": {
                    "type": "string",
                    "description": "The EIP ID for the bandwidth in the bandwidth policy.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "metadataBandwidthShareType",
                        "metadataEipAddress",
                        "metadataEipId"
                    ]
                }
            }
        },
        "cloudru:As/BandwidthPolicyScalingPolicyAction:BandwidthPolicyScalingPolicyAction": {
            "properties": {
                "limits": {
                    "type": "integer",
                    "description": "Specifies the operation restrictions.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "Specifies the operation to be performed. The default operation is ADD.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Specifies the bandwidth (Mbit/s).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "limits",
                        "operation",
                        "size"
                    ]
                }
            }
        },
        "cloudru:As/BandwidthPolicyScheduledPolicy:BandwidthPolicyScheduledPolicy": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "description": "Specifies the end time of the scaling action triggered periodically.\n"
                },
                "launchTime": {
                    "type": "string",
                    "description": "Specifies the time when the scaling action is triggered. The time format complies with UTC.\n"
                },
                "recurrenceType": {
                    "type": "string",
                    "description": "Specifies the periodic triggering type.\n"
                },
                "recurrenceValue": {
                    "type": "string",
                    "description": "Specifies the day when a periodic scaling action is triggered.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Specifies the start time of the scaling action triggered periodically.\n"
                }
            },
            "type": "object",
            "required": [
                "launchTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endTime",
                        "launchTime",
                        "recurrenceType",
                        "recurrenceValue",
                        "startTime"
                    ]
                }
            }
        },
        "cloudru:As/ConfigurationInstanceConfig:ConfigurationInstanceConfig": {
            "properties": {
                "adminPass": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedHostId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/ConfigurationInstanceConfigDisk:ConfigurationInstanceConfigDisk"
                    },
                    "willReplaceOnChanges": true
                },
                "ecsGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavorPriorityPolicy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "image": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyFingerprint": {
                    "type": "string"
                },
                "keyName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "personalities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/ConfigurationInstanceConfigPersonality:ConfigurationInstanceConfigPersonality"
                    },
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "$ref": "#/types/cloudru:As/ConfigurationInstanceConfigPublicIp:ConfigurationInstanceConfigPublicIp",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required\n",
                    "willReplaceOnChanges": true
                },
                "tenancy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dedicatedHostId",
                        "disks",
                        "ecsGroupId",
                        "flavor",
                        "flavorPriorityPolicy",
                        "image",
                        "instanceId",
                        "keyFingerprint",
                        "keyName",
                        "personalities",
                        "publicIp",
                        "securityGroupIds",
                        "tenancy"
                    ]
                }
            }
        },
        "cloudru:As/ConfigurationInstanceConfigDisk:ConfigurationInstanceConfigDisk": {
            "properties": {
                "dataDiskImageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedStorageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "diskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "snapshotId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "volumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "diskType",
                "size",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataDiskImageId",
                        "dedicatedStorageId",
                        "diskType",
                        "iops",
                        "kmsId",
                        "size",
                        "snapshotId",
                        "throughput",
                        "volumeType"
                    ]
                }
            }
        },
        "cloudru:As/ConfigurationInstanceConfigPersonality:ConfigurationInstanceConfigPersonality": {
            "properties": {
                "content": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "path": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "content",
                "path"
            ]
        },
        "cloudru:As/ConfigurationInstanceConfigPublicIp:ConfigurationInstanceConfigPublicIp": {
            "properties": {
                "eip": {
                    "$ref": "#/types/cloudru:As/ConfigurationInstanceConfigPublicIpEip:ConfigurationInstanceConfigPublicIpEip",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "eip"
            ]
        },
        "cloudru:As/ConfigurationInstanceConfigPublicIpEip:ConfigurationInstanceConfigPublicIpEip": {
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/cloudru:As/ConfigurationInstanceConfigPublicIpEipBandwidth:ConfigurationInstanceConfigPublicIpEipBandwidth",
                    "willReplaceOnChanges": true
                },
                "ipType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "ipType"
            ]
        },
        "cloudru:As/ConfigurationInstanceConfigPublicIpEipBandwidth:ConfigurationInstanceConfigPublicIpEipBandwidth": {
            "properties": {
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "shareType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargingMode",
                        "id",
                        "shareType",
                        "size"
                    ]
                }
            }
        },
        "cloudru:As/GroupLbaasListener:GroupLbaasListener": {
            "properties": {
                "listenerId": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "protocolVersion": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "poolId",
                "protocolPort"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "listenerId",
                        "poolId",
                        "protocolPort",
                        "protocolVersion"
                    ]
                }
            }
        },
        "cloudru:As/GroupNetwork:GroupNetwork": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "sourceDestCheck": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudru:As/GroupSecurityGroup:GroupSecurityGroup": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudru:As/PolicyScalingPolicyAction:PolicyScalingPolicyAction": {
            "properties": {
                "instanceNumber": {
                    "type": "integer"
                },
                "instancePercentage": {
                    "type": "integer"
                },
                "operation": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "instanceNumber",
                        "operation"
                    ]
                }
            }
        },
        "cloudru:As/PolicyScheduledPolicy:PolicyScheduledPolicy": {
            "properties": {
                "endTime": {
                    "type": "string"
                },
                "launchTime": {
                    "type": "string"
                },
                "recurrenceType": {
                    "type": "string"
                },
                "recurrenceValue": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "launchTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endTime",
                        "launchTime",
                        "recurrenceType",
                        "recurrenceValue",
                        "startTime"
                    ]
                }
            }
        },
        "cloudru:Cbr/PolicyBackupCycle:PolicyBackupCycle": {
            "properties": {
                "days": {
                    "type": "string",
                    "description": "The weekly backup time.\n"
                },
                "executionTimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The execution time of the policy.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The number of days between each backup.\n"
                }
            },
            "type": "object",
            "required": [
                "executionTimes"
            ]
        },
        "cloudru:Cbr/PolicyLongTermRetention:PolicyLongTermRetention": {
            "properties": {
                "daily": {
                    "type": "integer",
                    "description": "The latest backup of each day is saved in the long term.\n"
                },
                "fullBackupInterval": {
                    "type": "integer",
                    "description": "How often (after how many incremental backups) a full backup is performed.\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "The latest backup of each month is saved in the long term.\n"
                },
                "weekly": {
                    "type": "integer",
                    "description": "The latest backup of each week is saved in the long term.\n"
                },
                "yearly": {
                    "type": "integer",
                    "description": "The latest backup of each year is saved in the long term.\n"
                }
            },
            "type": "object"
        },
        "cloudru:Cbr/VaultPolicy:VaultPolicy": {
            "properties": {
                "destinationVaultId": {
                    "type": "string",
                    "description": "The ID of destination vault to which the replication policy will associated.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The policy ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudru:Cbr/VaultResource:VaultResource": {
            "properties": {
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk IDs which will be excluded in the backup.\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk or SFS file systems which will be included in the backup.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the ECS instance to be backed up.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "excludes",
                        "includes"
                    ]
                }
            }
        },
        "cloudru:Cbr/getVaultsVault:getVaultsVault": {
            "properties": {
                "allocated": {
                    "type": "number",
                    "description": "The allocated capacity of the vault, in GB.\n"
                },
                "autoBind": {
                    "type": "boolean",
                    "description": "Whether automatic association is supported.\n"
                },
                "autoExpandEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable automatic expansion of the backup protection type vault.\n"
                },
                "bindRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The rules for automatic association.\n"
                },
                "consistentLevel": {
                    "type": "string",
                    "description": "The consistent level (specification) of the vault.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The vault ID in UUID format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The vault name.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the policy associated with the vault.\n"
                },
                "protectionType": {
                    "type": "string",
                    "description": "The protection type of the vault.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cbr/getVaultsVaultResource:getVaultsVaultResource"
                    },
                    "description": "The array of one or more resources to attach to the vault.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The vault capacity, in GB.\n"
                },
                "specCode": {
                    "type": "string",
                    "description": "The specification code.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The vault status.\n"
                },
                "storage": {
                    "type": "string",
                    "description": "The name of the bucket for the vault.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the vault.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The object type of the vault.\n"
                },
                "used": {
                    "type": "number",
                    "description": "The used capacity, in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "allocated",
                "autoBind",
                "autoExpandEnabled",
                "bindRules",
                "consistentLevel",
                "enterpriseProjectId",
                "id",
                "name",
                "policyId",
                "protectionType",
                "resources",
                "size",
                "specCode",
                "status",
                "storage",
                "tags",
                "type",
                "used"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cbr/getVaultsVaultResource:getVaultsVaultResource": {
            "properties": {
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk IDs which will be excluded in the backup.\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of disk or SFS file system IDs which will be included in the backup.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the ECS instance to be backed up.\n"
                }
            },
            "type": "object",
            "required": [
                "excludes",
                "includes",
                "serverId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/AddonValues:AddonValues": {
            "properties": {
                "basic": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "basicJson": {
                    "type": "string"
                },
                "custom": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "customJson": {
                    "type": "string"
                },
                "flavor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "flavorJson": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudru:Cce/ClusterCertificateCluster:ClusterCertificateCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateAuthorityData",
                        "name",
                        "server"
                    ]
                }
            }
        },
        "cloudru:Cce/ClusterCertificateUser:ClusterCertificateUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientCertificateData",
                        "clientKeyData",
                        "name"
                    ]
                }
            }
        },
        "cloudru:Cce/ClusterComponentConfiguration:ClusterComponentConfiguration": {
            "properties": {
                "configurations": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:Cce/ClusterEncryptionConfig:ClusterEncryptionConfig": {
            "properties": {
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "kmsKeyId",
                        "mode"
                    ]
                }
            }
        },
        "cloudru:Cce/ClusterExtendParam:ClusterExtendParam": {
            "properties": {
                "clusterAz": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cpuManagerPolicy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "decMasterFlavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dockerUmaskMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dssMasterVolumes": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "fixPoolMask": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "cloudru:Cce/ClusterMaster:ClusterMaster": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone"
                    ]
                }
            }
        },
        "cloudru:Cce/NodeAttachDataVolume:NodeAttachDataVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParam",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "cloudru:Cce/NodeAttachExtensionNic:NodeAttachExtensionNic": {
            "properties": {
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "subnetId"
                    ]
                }
            }
        },
        "cloudru:Cce/NodeAttachHostnameConfig:NodeAttachHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cloudru:Cce/NodeAttachRootVolume:NodeAttachRootVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParam",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "cloudru:Cce/NodeAttachStorage:NodeAttachStorage": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachStorageGroup:NodeAttachStorageGroup"
                    }
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachStorageSelector:NodeAttachStorageSelector"
                    }
                }
            },
            "type": "object",
            "required": [
                "groups",
                "selectors"
            ]
        },
        "cloudru:Cce/NodeAttachStorageGroup:NodeAttachStorageGroup": {
            "properties": {
                "cceManaged": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "selectorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualSpaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachStorageGroupVirtualSpace:NodeAttachStorageGroupVirtualSpace"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "selectorNames",
                "virtualSpaces"
            ]
        },
        "cloudru:Cce/NodeAttachStorageGroupVirtualSpace:NodeAttachStorageGroupVirtualSpace": {
            "properties": {
                "lvmLvType": {
                    "type": "string"
                },
                "lvmPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "runtimeLvType": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ]
        },
        "cloudru:Cce/NodeAttachStorageSelector:NodeAttachStorageSelector": {
            "properties": {
                "matchLabelCount": {
                    "type": "string"
                },
                "matchLabelMetadataCmkid": {
                    "type": "string"
                },
                "matchLabelMetadataEncrypted": {
                    "type": "string"
                },
                "matchLabelSize": {
                    "type": "string"
                },
                "matchLabelVolumeType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:Cce/NodeAttachTaint:NodeAttachTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "cloudru:Cce/NodeDataVolume:NodeDataVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "cloudru:Cce/NodeExtendParams:NodeExtendParams": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "dockerBaseSize": {
                    "type": "integer"
                },
                "kubeReservedMem": {
                    "type": "integer"
                },
                "marketType": {
                    "type": "string"
                },
                "maxPods": {
                    "type": "integer"
                },
                "nicThreshold": {
                    "type": "string"
                },
                "nodeImageId": {
                    "type": "string"
                },
                "nodeMultiQueue": {
                    "type": "string"
                },
                "postinstall": {
                    "type": "string"
                },
                "preinstall": {
                    "type": "string"
                },
                "securityReinforcementType": {
                    "type": "string"
                },
                "spotPrice": {
                    "type": "string"
                },
                "systemReservedMem": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cloudru:Cce/NodeExtensionNic:NodeExtensionNic": {
            "properties": {
                "subnetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "subnetId"
            ]
        },
        "cloudru:Cce/NodeHostnameConfig:NodeHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cloudru:Cce/NodePoolDataVolume:NodePoolDataVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolExtendParams:NodePoolExtendParams": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "dockerBaseSize": {
                    "type": "integer"
                },
                "kubeReservedMem": {
                    "type": "integer"
                },
                "marketType": {
                    "type": "string"
                },
                "maxPods": {
                    "type": "integer"
                },
                "nicThreshold": {
                    "type": "string"
                },
                "nodeImageId": {
                    "type": "string"
                },
                "nodeMultiQueue": {
                    "type": "string"
                },
                "postinstall": {
                    "type": "string"
                },
                "preinstall": {
                    "type": "string"
                },
                "securityReinforcementType": {
                    "type": "string"
                },
                "spotPrice": {
                    "type": "string"
                },
                "systemReservedMem": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agencyName",
                        "dockerBaseSize",
                        "kubeReservedMem",
                        "marketType",
                        "maxPods",
                        "nicThreshold",
                        "nodeImageId",
                        "nodeMultiQueue",
                        "postinstall",
                        "preinstall",
                        "securityReinforcementType",
                        "spotPrice",
                        "systemReservedMem"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolExtensionScaleGroup:NodePoolExtensionScaleGroup": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroupMetadata:NodePoolExtensionScaleGroupMetadata"
                },
                "spec": {
                    "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroupSpec:NodePoolExtensionScaleGroupSpec"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "metadata",
                        "spec"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolExtensionScaleGroupMetadata:NodePoolExtensionScaleGroupMetadata": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "uid"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolExtensionScaleGroupSpec:NodePoolExtensionScaleGroupSpec": {
            "properties": {
                "autoscaling": {
                    "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroupSpecAutoscaling:NodePoolExtensionScaleGroupSpecAutoscaling"
                },
                "az": {
                    "type": "string"
                },
                "capacityReservationSpecification": {
                    "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroupSpecCapacityReservationSpecification:NodePoolExtensionScaleGroupSpecCapacityReservationSpecification"
                },
                "flavor": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autoscaling",
                        "az",
                        "capacityReservationSpecification",
                        "flavor"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolExtensionScaleGroupSpecAutoscaling:NodePoolExtensionScaleGroupSpecAutoscaling": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "extensionPriority": {
                    "type": "integer"
                },
                "maxNodeCount": {
                    "type": "integer"
                },
                "minNodeCount": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enable",
                        "extensionPriority",
                        "maxNodeCount",
                        "minNodeCount"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolExtensionScaleGroupSpecCapacityReservationSpecification:NodePoolExtensionScaleGroupSpecCapacityReservationSpecification": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "preference": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "preference"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolHostnameConfig:NodePoolHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cloudru:Cce/NodePoolRootVolume:NodePoolRootVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "cloudru:Cce/NodePoolStorage:NodePoolStorage": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolStorageGroup:NodePoolStorageGroup"
                    }
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolStorageSelector:NodePoolStorageSelector"
                    }
                }
            },
            "type": "object",
            "required": [
                "groups",
                "selectors"
            ]
        },
        "cloudru:Cce/NodePoolStorageGroup:NodePoolStorageGroup": {
            "properties": {
                "cceManaged": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "selectorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualSpaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolStorageGroupVirtualSpace:NodePoolStorageGroupVirtualSpace"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "selectorNames",
                "virtualSpaces"
            ]
        },
        "cloudru:Cce/NodePoolStorageGroupVirtualSpace:NodePoolStorageGroupVirtualSpace": {
            "properties": {
                "lvmLvType": {
                    "type": "string"
                },
                "lvmPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "runtimeLvType": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ]
        },
        "cloudru:Cce/NodePoolStorageSelector:NodePoolStorageSelector": {
            "properties": {
                "matchLabelCount": {
                    "type": "string"
                },
                "matchLabelMetadataCmkid": {
                    "type": "string"
                },
                "matchLabelMetadataEncrypted": {
                    "type": "string"
                },
                "matchLabelSize": {
                    "type": "string"
                },
                "matchLabelVolumeType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:Cce/NodePoolTaint:NodePoolTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key",
                "value"
            ]
        },
        "cloudru:Cce/NodeRootVolume:NodeRootVolume": {
            "properties": {
                "dssPoolId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "string",
                    "deprecationMessage": "use extend_params instead"
                },
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "hwPassthrough": {
                    "type": "boolean",
                    "description": "schema: Internal\n"
                },
                "iops": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dssPoolId",
                        "extendParams",
                        "hwPassthrough",
                        "iops",
                        "kmsKeyId",
                        "size",
                        "throughput",
                        "volumetype"
                    ]
                }
            }
        },
        "cloudru:Cce/NodeStorage:NodeStorage": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeStorageGroup:NodeStorageGroup"
                    }
                },
                "selectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeStorageSelector:NodeStorageSelector"
                    }
                }
            },
            "type": "object",
            "required": [
                "groups",
                "selectors"
            ]
        },
        "cloudru:Cce/NodeStorageGroup:NodeStorageGroup": {
            "properties": {
                "cceManaged": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "selectorNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualSpaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeStorageGroupVirtualSpace:NodeStorageGroupVirtualSpace"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "selectorNames",
                "virtualSpaces"
            ]
        },
        "cloudru:Cce/NodeStorageGroupVirtualSpace:NodeStorageGroupVirtualSpace": {
            "properties": {
                "lvmLvType": {
                    "type": "string"
                },
                "lvmPath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "runtimeLvType": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ]
        },
        "cloudru:Cce/NodeStorageSelector:NodeStorageSelector": {
            "properties": {
                "matchLabelCount": {
                    "type": "string"
                },
                "matchLabelMetadataCmkid": {
                    "type": "string"
                },
                "matchLabelMetadataEncrypted": {
                    "type": "string"
                },
                "matchLabelSize": {
                    "type": "string"
                },
                "matchLabelVolumeType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:Cce/NodeTaint:NodeTaint": {
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "effect",
                "key"
            ]
        },
        "cloudru:Cce/getAddonTemplateSupportVersion:getAddonTemplateSupportVersion": {
            "properties": {
                "bareMetals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "virtualMachines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "bareMetals",
                "virtualMachines"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterCertificateCluster:getClusterCertificateCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateAuthorityData",
                "name",
                "server"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterCertificateUser:getClusterCertificateUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientCertificateData",
                "clientKeyData",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterCertificatesCluster:getClusterCertificatesCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "insecureSkipTlsVerify": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateAuthorityData",
                "insecureSkipTlsVerify",
                "name",
                "server"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterCertificatesContext:getClusterCertificatesContext": {
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cluster",
                "name",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterCertificatesUser:getClusterCertificatesUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientCertificateData",
                "clientKeyData",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterEndpoint:getClusterEndpoint": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClusterMaster:getClusterMaster": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClustersCluster:getClustersCluster": {
            "properties": {
                "authenticationMode": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer"
                },
                "certificateClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getClustersClusterCertificateCluster:getClustersClusterCertificateCluster"
                    }
                },
                "certificateUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getClustersClusterCertificateUser:getClustersClusterCertificateUser"
                    }
                },
                "clusterType": {
                    "type": "string"
                },
                "clusterVersion": {
                    "type": "string"
                },
                "containerNetworkCidr": {
                    "type": "string"
                },
                "containerNetworkType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getClustersClusterEndpoint:getClustersClusterEndpoint"
                    }
                },
                "eniSubnetCidr": {
                    "type": "string"
                },
                "eniSubnetId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "kubeConfigRaw": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getClustersClusterMaster:getClustersClusterMaster"
                    }
                },
                "name": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "serviceNetworkCidr": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticationMode",
                "billingMode",
                "certificateClusters",
                "certificateUsers",
                "clusterType",
                "clusterVersion",
                "containerNetworkCidr",
                "containerNetworkType",
                "description",
                "endpoints",
                "eniSubnetCidr",
                "eniSubnetId",
                "enterpriseProjectId",
                "flavorId",
                "id",
                "kubeConfigRaw",
                "masters",
                "name",
                "securityGroupId",
                "serviceNetworkCidr",
                "status",
                "subnetId",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClustersClusterCertificateCluster:getClustersClusterCertificateCluster": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateAuthorityData",
                "name",
                "server"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClustersClusterCertificateUser:getClustersClusterCertificateUser": {
            "properties": {
                "clientCertificateData": {
                    "type": "string"
                },
                "clientKeyData": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientCertificateData",
                "clientKeyData",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClustersClusterEndpoint:getClustersClusterEndpoint": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getClustersClusterMaster:getClustersClusterMaster": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodeDataVolume:getNodeDataVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodeHostnameConfig:getNodeHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodePoolDataVolume:getNodePoolDataVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodePoolHostnameConfig:getNodePoolHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodePoolRootVolume:getNodePoolRootVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodeRootVolume:getNodeRootVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodesNode:getNodesNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getNodesNodeDataVolume:getNodesNodeDataVolume"
                    }
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getNodesNodeHostnameConfig:getNodesNodeHostnameConfig"
                    }
                },
                "id": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "rootVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/getNodesNodeRootVolume:getNodesNodeRootVolume"
                    }
                },
                "serverId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "billingMode",
                "dataVolumes",
                "ecsGroupId",
                "enterpriseProjectId",
                "flavorId",
                "hostnameConfigs",
                "id",
                "keyPair",
                "name",
                "os",
                "privateIp",
                "publicIp",
                "rootVolumes",
                "serverId",
                "status",
                "subnetId",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodesNodeDataVolume:getNodesNodeDataVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodesNodeHostnameConfig:getNodesNodeHostnameConfig": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cce/getNodesNodeRootVolume:getNodesNodeRootVolume": {
            "properties": {
                "extendParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "volumetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "extendParams",
                "size",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cdm/ClusterInstance:ClusterInstance": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "manageIp": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "trafficIp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "manageIp",
                        "name",
                        "privateIp",
                        "publicIp",
                        "role",
                        "trafficIp",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Ces/AlarmruleAlarmAction:AlarmruleAlarmAction": {
            "properties": {
                "notificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "notificationLists",
                "type"
            ]
        },
        "cloudru:Ces/AlarmruleCondition:AlarmruleCondition": {
            "properties": {
                "comparisonOperator": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "filter": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "suppressDuration": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "unit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "comparisonOperator",
                "count",
                "filter",
                "period",
                "value"
            ]
        },
        "cloudru:Ces/AlarmruleInsufficientdataAction:AlarmruleInsufficientdataAction": {
            "properties": {
                "notificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "notificationLists",
                "type"
            ]
        },
        "cloudru:Ces/AlarmruleMetric:AlarmruleMetric": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleMetricDimension:AlarmruleMetricDimension"
                    },
                    "willReplaceOnChanges": true
                },
                "metricName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "namespace": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "metricName",
                "namespace"
            ]
        },
        "cloudru:Ces/AlarmruleMetricDimension:AlarmruleMetricDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:Ces/AlarmruleOkAction:AlarmruleOkAction": {
            "properties": {
                "notificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "notificationLists",
                "type"
            ]
        },
        "cloudru:Cfw/AclRuleCustomService:AclRuleCustomService": {
            "properties": {
                "destPort": {
                    "type": "string",
                    "description": "The destination port.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "The source port.\n"
                }
            },
            "type": "object",
            "required": [
                "destPort",
                "protocol",
                "sourcePort"
            ]
        },
        "cloudru:Cfw/AclRuleCustomServiceGroups:AclRuleCustomServiceGroups": {
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the service groups.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The protocols used in the service groups.\n"
                }
            },
            "type": "object",
            "required": [
                "groupIds",
                "protocols"
            ]
        },
        "cloudru:Cfw/AclRuleDestinationRegionList:AclRuleDestinationRegionList": {
            "properties": {
                "descriptionCn": {
                    "type": "string",
                    "description": "The Chinese description of the region.\n"
                },
                "descriptionEn": {
                    "type": "string",
                    "description": "The English description of the region.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "The region ID.\n"
                },
                "regionType": {
                    "type": "integer",
                    "description": "The region type.\n"
                }
            },
            "type": "object",
            "required": [
                "regionId",
                "regionType"
            ]
        },
        "cloudru:Cfw/AclRulePredefinedServiceGroups:AclRulePredefinedServiceGroups": {
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of the service groups.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The protocols used in the service groups.\n"
                }
            },
            "type": "object",
            "required": [
                "groupIds",
                "protocols"
            ]
        },
        "cloudru:Cfw/AclRuleSequence:AclRuleSequence": {
            "properties": {
                "bottom": {
                    "type": "integer",
                    "description": "Whether to pin on bottom.\n"
                },
                "destRuleId": {
                    "type": "string",
                    "description": "The ID of the rule that the added rule will follow.\n"
                },
                "top": {
                    "type": "integer",
                    "description": "Whether to pin on top.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destRuleId"
                    ]
                }
            }
        },
        "cloudru:Cfw/AclRuleSourceRegionList:AclRuleSourceRegionList": {
            "properties": {
                "descriptionCn": {
                    "type": "string",
                    "description": "The Chinese description of the region.\n"
                },
                "descriptionEn": {
                    "type": "string",
                    "description": "The English description of the region.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "The region ID.\n"
                },
                "regionType": {
                    "type": "integer",
                    "description": "The region type.\n"
                }
            },
            "type": "object",
            "required": [
                "regionId",
                "regionType"
            ]
        },
        "cloudru:Cfw/AntiVirusScanProtocolConfig:AntiVirusScanProtocolConfig": {
            "properties": {
                "action": {
                    "type": "integer",
                    "description": "The antivirus action.\n"
                },
                "protocolType": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "protocolType"
            ]
        },
        "cloudru:Cfw/CaptureTaskDestination:CaptureTaskDestination": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address.\n"
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressType"
            ]
        },
        "cloudru:Cfw/CaptureTaskService:CaptureTaskService": {
            "properties": {
                "destPort": {
                    "type": "string",
                    "description": "The destination port.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "The source port.\n"
                }
            },
            "type": "object",
            "required": [
                "protocol"
            ]
        },
        "cloudru:Cfw/CaptureTaskSource:CaptureTaskSource": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address.\n"
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressType"
            ]
        },
        "cloudru:Cfw/DomainNameGroupDomainName:DomainNameGroupDomainName": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the description.\n"
                },
                "dnsIps": {
                    "type": "string",
                    "description": "The DNS IP list.\n"
                },
                "domainAddressId": {
                    "type": "string",
                    "description": "The domain address ID.\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Specifies the domain name.\n"
                }
            },
            "type": "object",
            "required": [
                "domainName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "dnsIps",
                        "domainAddressId",
                        "domainName"
                    ]
                }
            }
        },
        "cloudru:Cfw/EipProtectionProtectedEip:EipProtectionProtectedEip": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the protected EIP.\n"
                },
                "publicIpv4": {
                    "type": "string",
                    "description": "The IPv4 address of the protected EIP.\n"
                },
                "publicIpv6": {
                    "type": "string",
                    "description": "The IPv6 address of the protected EIP.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "publicIpv4",
                        "publicIpv6"
                    ]
                }
            }
        },
        "cloudru:Cfw/FirewallFlavor:FirewallFlavor": {
            "properties": {
                "bandwidth": {
                    "type": "integer",
                    "description": "Specifies the bandwidth of the firewall.\n"
                },
                "defaultBandwidth": {
                    "type": "integer",
                    "description": "Specifies the default bandwidth of the firewall.\n"
                },
                "defaultEipCount": {
                    "type": "integer",
                    "description": "Specifies the default EIP number of the firewall.\n"
                },
                "defaultLogStorage": {
                    "type": "integer",
                    "description": "Specifies the default log storage of the firewall.\n"
                },
                "defaultVpcCount": {
                    "type": "integer",
                    "description": "Specifies the default VPC number of the firewall.\n"
                },
                "eipCount": {
                    "type": "integer",
                    "description": "Specifies the EIP number of the firewall.\n"
                },
                "extendBandwidth": {
                    "type": "integer",
                    "description": "Specifies the extend bandwidth of the firewall.\n",
                    "willReplaceOnChanges": true
                },
                "extendEipCount": {
                    "type": "integer",
                    "description": "Specifies the extend EIP number of the firewall.\n",
                    "willReplaceOnChanges": true
                },
                "extendVpcCount": {
                    "type": "integer",
                    "description": "Specifies the extend VPC number of the firewall.\n",
                    "willReplaceOnChanges": true
                },
                "logStorage": {
                    "type": "integer",
                    "description": "Specifies the log storage of the firewall.\n"
                },
                "totalRuleCount": {
                    "type": "integer",
                    "description": "Specifies the total rule count of the firewall.\n"
                },
                "usedRuleCount": {
                    "type": "integer",
                    "description": "Specifies the used rule count of the firewall.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Specifies the version of the firewall.\n",
                    "willReplaceOnChanges": true
                },
                "vpcBandwidth": {
                    "type": "integer",
                    "description": "Specifies the VPC bandwidth of the firewall.\n"
                },
                "vpcCount": {
                    "type": "integer",
                    "description": "Specifies the VPC number of the firewall.\n"
                }
            },
            "type": "object",
            "required": [
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidth",
                        "defaultBandwidth",
                        "defaultEipCount",
                        "defaultLogStorage",
                        "defaultVpcCount",
                        "eipCount",
                        "logStorage",
                        "totalRuleCount",
                        "usedRuleCount",
                        "version",
                        "vpcBandwidth",
                        "vpcCount"
                    ]
                }
            }
        },
        "cloudru:Cfw/FirewallProtectObject:FirewallProtectObject": {
            "properties": {
                "objectId": {
                    "type": "string",
                    "description": "Protected object ID\n"
                },
                "objectName": {
                    "type": "string",
                    "description": "Protected object name\n"
                },
                "type": {
                    "type": "integer",
                    "description": "Project type. The options are as follows: 0: north-south; 1: east-west.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "objectId",
                        "objectName",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Cfw/getAccessControlLogsRecord:getAccessControlLogsRecord": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action.\n"
                },
                "app": {
                    "type": "string",
                    "description": "The application protocol.\n"
                },
                "dstCityId": {
                    "type": "string",
                    "description": "The distination city ID.\n"
                },
                "dstCityName": {
                    "type": "string",
                    "description": "The distination city name.\n"
                },
                "dstHost": {
                    "type": "string",
                    "description": "The destination host.\n"
                },
                "dstIp": {
                    "type": "string",
                    "description": "The destination IP address.\n"
                },
                "dstPort": {
                    "type": "integer",
                    "description": "The destination port.\n"
                },
                "dstProvinceId": {
                    "type": "string",
                    "description": "The distination province ID.\n"
                },
                "dstProvinceName": {
                    "type": "string",
                    "description": "The distination province name.\n"
                },
                "dstRegionId": {
                    "type": "string",
                    "description": "The destination region ID.\n"
                },
                "dstRegionName": {
                    "type": "string",
                    "description": "The destination region name.\n"
                },
                "hitTime": {
                    "type": "string",
                    "description": "The hit time.\n"
                },
                "logId": {
                    "type": "string",
                    "description": "The document ID.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol type.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "The rule ID.\n"
                },
                "ruleName": {
                    "type": "string",
                    "description": "The rule name.\n"
                },
                "srcCityId": {
                    "type": "string",
                    "description": "The source city ID.\n"
                },
                "srcCityName": {
                    "type": "string",
                    "description": "The source city name.\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "The source IP address.\n"
                },
                "srcPort": {
                    "type": "integer",
                    "description": "The source port.\n"
                },
                "srcProvinceId": {
                    "type": "string",
                    "description": "The source province ID.\n"
                },
                "srcProvinceName": {
                    "type": "string",
                    "description": "The source province name.\n"
                },
                "srcRegionId": {
                    "type": "string",
                    "description": "The source region ID.\n"
                },
                "srcRegionName": {
                    "type": "string",
                    "description": "The source region name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "app",
                "dstCityId",
                "dstCityName",
                "dstHost",
                "dstIp",
                "dstPort",
                "dstProvinceId",
                "dstProvinceName",
                "dstRegionId",
                "dstRegionName",
                "hitTime",
                "logId",
                "protocol",
                "ruleId",
                "ruleName",
                "srcCityId",
                "srcCityName",
                "srcIp",
                "srcPort",
                "srcProvinceId",
                "srcProvinceName",
                "srcRegionId",
                "srcRegionName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getAddressGroupMembersRecord:getAddressGroupMembersRecord": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The IP address.\n"
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The address group member description.\n"
                },
                "itemId": {
                    "type": "string",
                    "description": "The ID of an address group member.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressType",
                "description",
                "itemId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getAddressGroupsAddressGroup:getAddressGroupsAddressGroup": {
            "properties": {
                "addressType": {
                    "type": "integer",
                    "description": "The address type.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The address groups description.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the IP address group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The IP address group name.\n"
                },
                "objectId": {
                    "type": "string",
                    "description": "The protected object ID.\n"
                },
                "refCount": {
                    "type": "integer",
                    "description": "The number of times this address group has been referenced.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The address group type.\n"
                }
            },
            "type": "object",
            "required": [
                "addressType",
                "description",
                "id",
                "name",
                "objectId",
                "refCount",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getAttackLogsRecord:getAttackLogsRecord": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Then action.\n"
                },
                "app": {
                    "type": "string",
                    "description": "The application protocol.\n"
                },
                "attackRule": {
                    "type": "string",
                    "description": "The attack rule.\n"
                },
                "attackRuleId": {
                    "type": "string",
                    "description": "The attack rule ID.\n"
                },
                "attackType": {
                    "type": "string",
                    "description": "The attack type.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "The direction.\n"
                },
                "dstCityId": {
                    "type": "string",
                    "description": "The distination city ID.\n"
                },
                "dstCityName": {
                    "type": "string",
                    "description": "The distination city name.\n"
                },
                "dstIp": {
                    "type": "string",
                    "description": "The destination IP address.\n"
                },
                "dstPort": {
                    "type": "integer",
                    "description": "The destination port.\n"
                },
                "dstProvinceId": {
                    "type": "string",
                    "description": "The distination province ID.\n"
                },
                "dstProvinceName": {
                    "type": "string",
                    "description": "The distination province name.\n"
                },
                "dstRegionId": {
                    "type": "string",
                    "description": "The destination region ID.\n"
                },
                "dstRegionName": {
                    "type": "string",
                    "description": "The destination region name.\n"
                },
                "eventTime": {
                    "type": "string",
                    "description": "The event time.\n"
                },
                "level": {
                    "type": "string",
                    "description": "The threat level.\n"
                },
                "logId": {
                    "type": "string",
                    "description": "The log ID.\n"
                },
                "packet": {
                    "type": "string",
                    "description": "The attack log packet.\n"
                },
                "packetLength": {
                    "type": "integer",
                    "description": "The packet length.\n"
                },
                "packetMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getAttackLogsRecordPacketMessage:getAttackLogsRecordPacketMessage"
                    },
                    "description": "The packet messages.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source.\n"
                },
                "srcCityId": {
                    "type": "string",
                    "description": "The source city ID.\n"
                },
                "srcCityName": {
                    "type": "string",
                    "description": "The source city name.\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "The source IP address.\n"
                },
                "srcPort": {
                    "type": "integer",
                    "description": "The source port.\n"
                },
                "srcProvinceId": {
                    "type": "string",
                    "description": "The source province ID.\n"
                },
                "srcProvinceName": {
                    "type": "string",
                    "description": "The source province name.\n"
                },
                "srcRegionId": {
                    "type": "string",
                    "description": "The source region ID.\n"
                },
                "srcRegionName": {
                    "type": "string",
                    "description": "The source region name.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "app",
                "attackRule",
                "attackRuleId",
                "attackType",
                "direction",
                "dstCityId",
                "dstCityName",
                "dstIp",
                "dstPort",
                "dstProvinceId",
                "dstProvinceName",
                "dstRegionId",
                "dstRegionName",
                "eventTime",
                "level",
                "logId",
                "packet",
                "packetLength",
                "packetMessages",
                "protocol",
                "source",
                "srcCityId",
                "srcCityName",
                "srcIp",
                "srcPort",
                "srcProvinceId",
                "srcProvinceName",
                "srcRegionId",
                "srcRegionName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getAttackLogsRecordPacketMessage:getAttackLogsRecordPacketMessage": {
            "properties": {
                "hexIndex": {
                    "type": "string",
                    "description": "The hexadecimal index.\n"
                },
                "hexs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hexadecimal series.\n"
                },
                "utf8String": {
                    "type": "string",
                    "description": "The utf-8 string.\n"
                }
            },
            "type": "object",
            "required": [
                "hexIndex",
                "hexs",
                "utf8String"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getBlackWhiteListsRecord:getBlackWhiteListsRecord": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The IP address.\n"
                },
                "addressType": {
                    "type": "string",
                    "description": "The IP address type.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "The direction of a black or white address.\n"
                },
                "listId": {
                    "type": "string",
                    "description": "The blacklist/whitelist ID.\n"
                },
                "port": {
                    "type": "string",
                    "description": "The port.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressType",
                "description",
                "direction",
                "listId",
                "port",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getCaptureTaskResultsFileList:getCaptureTaskResultsFileList": {
            "properties": {
                "fileName": {
                    "type": "string",
                    "description": "The file name.\n"
                },
                "filePath": {
                    "type": "string",
                    "description": "The file path.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The download link.\n"
                }
            },
            "type": "object",
            "required": [
                "fileName",
                "filePath",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getCaptureTaskResultsRequestHeader:getCaptureTaskResultsRequestHeader": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The host header information.\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getCaptureTasksRecord:getCaptureTasksRecord": {
            "properties": {
                "captureSize": {
                    "type": "string",
                    "description": "The capture task size.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the capture task.\n"
                },
                "destAddress": {
                    "type": "string",
                    "description": "The destination address.\n"
                },
                "destAddressType": {
                    "type": "integer",
                    "description": "The destination address type.\n"
                },
                "destPort": {
                    "type": "string",
                    "description": "The destination port.\n"
                },
                "duration": {
                    "type": "integer",
                    "description": "The capture task duration.\n"
                },
                "isDeleted": {
                    "type": "integer",
                    "description": "Whether is deleted.\n"
                },
                "maxPackets": {
                    "type": "integer",
                    "description": "The max packets.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The capture task name.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                },
                "remainingDays": {
                    "type": "integer",
                    "description": "The remaining days.\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "The source address.\n"
                },
                "sourceAddressType": {
                    "type": "integer",
                    "description": "The source address type.\n"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "The source port.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The capture task status.\n"
                },
                "taskId": {
                    "type": "string",
                    "description": "The capture task ID.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time of the capture task.\n"
                }
            },
            "type": "object",
            "required": [
                "captureSize",
                "createdAt",
                "destAddress",
                "destAddressType",
                "destPort",
                "duration",
                "isDeleted",
                "maxPackets",
                "name",
                "protocol",
                "remainingDays",
                "sourceAddress",
                "sourceAddressType",
                "sourcePort",
                "status",
                "taskId",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getDomainNameGroupsRecord:getDomainNameGroupsRecord": {
            "properties": {
                "configStatus": {
                    "type": "string",
                    "description": "The configuration status.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The domain name group description.\n"
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getDomainNameGroupsRecordDomainName:getDomainNameGroupsRecordDomainName"
                    },
                    "description": "The list of domain names.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The domain name group ID.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The configuration message.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The domain name group name.\n"
                },
                "refCount": {
                    "type": "string",
                    "description": "The domain name group reference count.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getDomainNameGroupsRecordRule:getDomainNameGroupsRecordRule"
                    },
                    "description": "The used rule list.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The domain name group type.\n"
                }
            },
            "type": "object",
            "required": [
                "configStatus",
                "description",
                "domainNames",
                "groupId",
                "message",
                "name",
                "refCount",
                "rules",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getDomainNameGroupsRecordDomainName:getDomainNameGroupsRecordDomainName": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description.\n"
                },
                "domainAddressId": {
                    "type": "string",
                    "description": "The domain address ID.\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "The domain name.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "domainAddressId",
                "domainName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getDomainNameGroupsRecordRule:getDomainNameGroupsRecordRule": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The rule ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The rule name.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getFirewallsRecord:getFirewallsRecord": {
            "properties": {
                "chargeMode": {
                    "type": "integer",
                    "description": "Billing mode. The value can be 0 (yearly/monthly) or 1 (pay-per-use).\n"
                },
                "engineType": {
                    "type": "integer",
                    "description": "Engine type\n"
                },
                "featureToggle": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "Whether to enable the feature. The options are true (yes) and false (no).\n"
                },
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getFirewallsRecordFlavor:getFirewallsRecordFlavor"
                    },
                    "description": "The flavor of the firewall.\n"
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "Firewall ID\n"
                },
                "haType": {
                    "type": "integer",
                    "description": "Cluster type\n"
                },
                "isOldFirewallInstance": {
                    "type": "boolean",
                    "description": "Whether the engine is an old engine. The options are true (yes) and false (no).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Firewall name\n"
                },
                "protectObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getFirewallsRecordProtectObject:getFirewallsRecordProtectObject"
                    },
                    "description": "Project list\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getFirewallsRecordResource:getFirewallsRecordResource"
                    },
                    "description": "Firewall instance resources\n"
                },
                "serviceType": {
                    "type": "integer",
                    "description": "Service type\n"
                },
                "status": {
                    "type": "integer",
                    "description": "Firewall status list. The options are as follows: -1: waiting for payment; 0: creating; 1: deleting; 2: running; 3: upgrading; 4: deletion completed; 5: freezing; 6: creation failed; 7: deletion failed; 8: freezing failed; 9: storage in progress; 10: storage failed; 11: upgrade failed\n"
                },
                "supportIpv6": {
                    "type": "boolean",
                    "description": "Whether IPv6 is supported. The options are true (yes) and false (no).\n"
                }
            },
            "type": "object",
            "required": [
                "chargeMode",
                "engineType",
                "featureToggle",
                "flavors",
                "fwInstanceId",
                "haType",
                "isOldFirewallInstance",
                "name",
                "protectObjects",
                "resources",
                "serviceType",
                "status",
                "supportIpv6"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getFirewallsRecordFlavor:getFirewallsRecordFlavor": {
            "properties": {
                "bandwidth": {
                    "type": "integer",
                    "description": "Bandwidth\n"
                },
                "eipCount": {
                    "type": "integer",
                    "description": "Number of EIPs\n"
                },
                "logStorage": {
                    "type": "integer",
                    "description": "Log storage\n"
                },
                "version": {
                    "type": "integer",
                    "description": "Firewall version. The value can be 0 (standard edition), 1 (professional edition), 2 (platinum edition), or 3 (basic edition).\n"
                },
                "vpcCount": {
                    "type": "integer",
                    "description": "Number of VPCs\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "eipCount",
                "logStorage",
                "version",
                "vpcCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getFirewallsRecordProtectObject:getFirewallsRecordProtectObject": {
            "properties": {
                "objectId": {
                    "type": "string",
                    "description": "Protected object ID\n"
                },
                "objectName": {
                    "type": "string",
                    "description": "Protected object name\n"
                },
                "type": {
                    "type": "integer",
                    "description": "Project type. The options are as follows: 0: north-south; 1: east-west.\n"
                }
            },
            "type": "object",
            "required": [
                "objectId",
                "objectName",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getFirewallsRecordResource:getFirewallsRecordResource": {
            "properties": {
                "cloudServiceType": {
                    "type": "string",
                    "description": "Service type, which is used by CBC. The value is hws.service.type.cfw.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Resource ID\n"
                },
                "resourceSize": {
                    "type": "integer",
                    "description": "Resource quantity\n"
                },
                "resourceSizeMeasureId": {
                    "type": "integer",
                    "description": "Resource unit name\n"
                },
                "resourceSpecCode": {
                    "type": "string",
                    "description": "Inventory unit code\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type. The options are as follows:1. CFW: hws.resource.type.cfw 2. EIP:hws.resource.type.cfw.exp.eip 3. Bandwidth: hws.resource.type.cfw.exp.bandwidth 4. VPC: hws.resource.type.cfw.exp.vpc 5. Log storage: hws.resource.type.cfw.exp.logaudit\n"
                }
            },
            "type": "object",
            "required": [
                "cloudServiceType",
                "resourceId",
                "resourceSize",
                "resourceSizeMeasureId",
                "resourceSpecCode",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getFlowLogsRecord:getFlowLogsRecord": {
            "properties": {
                "app": {
                    "type": "string",
                    "description": "The application protocol.\n"
                },
                "bytes": {
                    "type": "number",
                    "description": "The flow log bytes.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "The direction, which can be inbound or outbound.\n"
                },
                "dstCityId": {
                    "type": "string",
                    "description": "The distination city ID.\n"
                },
                "dstCityName": {
                    "type": "string",
                    "description": "The distination city name.\n"
                },
                "dstHost": {
                    "type": "string",
                    "description": "The destination host.\n"
                },
                "dstIp": {
                    "type": "string",
                    "description": "The destination IP address.\n"
                },
                "dstPort": {
                    "type": "integer",
                    "description": "The destination port.\n"
                },
                "dstProvinceId": {
                    "type": "string",
                    "description": "The distination province ID.\n"
                },
                "dstProvinceName": {
                    "type": "string",
                    "description": "The distination province name.\n"
                },
                "dstRegionId": {
                    "type": "string",
                    "description": "The destination region id.\n"
                },
                "dstRegionName": {
                    "type": "string",
                    "description": "The destination region name.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time.\n"
                },
                "logId": {
                    "type": "string",
                    "description": "The document ID.\n"
                },
                "packets": {
                    "type": "integer",
                    "description": "The number of packets.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol type.\n"
                },
                "srcCityId": {
                    "type": "string",
                    "description": "The source city ID.\n"
                },
                "srcCityName": {
                    "type": "string",
                    "description": "The source city name.\n"
                },
                "srcIp": {
                    "type": "string",
                    "description": "The source IP address.\n"
                },
                "srcPort": {
                    "type": "integer",
                    "description": "The source port.\n"
                },
                "srcProvinceId": {
                    "type": "string",
                    "description": "The source province ID.\n"
                },
                "srcProvinceName": {
                    "type": "string",
                    "description": "The source province name.\n"
                },
                "srcRegionId": {
                    "type": "string",
                    "description": "The source region id.\n"
                },
                "srcRegionName": {
                    "type": "string",
                    "description": "The source region name.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time.\n"
                }
            },
            "type": "object",
            "required": [
                "app",
                "bytes",
                "direction",
                "dstCityId",
                "dstCityName",
                "dstHost",
                "dstIp",
                "dstPort",
                "dstProvinceId",
                "dstProvinceName",
                "dstRegionId",
                "dstRegionName",
                "endTime",
                "logId",
                "packets",
                "protocol",
                "srcCityId",
                "srcCityName",
                "srcIp",
                "srcPort",
                "srcProvinceId",
                "srcProvinceName",
                "srcRegionId",
                "srcRegionName",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getIpsCustomRulesRecord:getIpsCustomRulesRecord": {
            "properties": {
                "action": {
                    "type": "integer",
                    "description": "The action.\n"
                },
                "affectedOs": {
                    "type": "integer",
                    "description": "The affected OS.\n"
                },
                "attackType": {
                    "type": "integer",
                    "description": "The attack type.\n"
                },
                "configStatus": {
                    "type": "integer",
                    "description": "The rule status.\n"
                },
                "content": {
                    "type": "string",
                    "description": "The content storage in JSON format.\n"
                },
                "dstPortType": {
                    "type": "integer",
                    "description": "The destination port type.\n"
                },
                "dstPorts": {
                    "type": "string",
                    "description": "The destination port.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The firewall cluster ID.\n"
                },
                "ipsCfwId": {
                    "type": "string",
                    "description": "The ID of a custom IPS rule in CFW.\n"
                },
                "ipsId": {
                    "type": "string",
                    "description": "The ID of a rule in Hillstone.\n"
                },
                "ipsName": {
                    "type": "string",
                    "description": "The IPS rule name.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol.\n"
                },
                "severity": {
                    "type": "integer",
                    "description": "The severity.\n"
                },
                "software": {
                    "type": "integer",
                    "description": "The affected software.\n"
                },
                "srcPortType": {
                    "type": "integer",
                    "description": "The source port type.\n"
                },
                "srcPorts": {
                    "type": "string",
                    "description": "The source port.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "affectedOs",
                "attackType",
                "configStatus",
                "content",
                "dstPortType",
                "dstPorts",
                "groupId",
                "ipsCfwId",
                "ipsId",
                "ipsName",
                "protocol",
                "severity",
                "software",
                "srcPortType",
                "srcPorts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getIpsRuleDetailsData:getIpsRuleDetailsData": {
            "properties": {
                "ipsType": {
                    "type": "integer",
                    "description": "The IPS type.\n"
                },
                "ipsVersion": {
                    "type": "string",
                    "description": "The IPS version.\n"
                },
                "updateTime": {
                    "type": "string",
                    "description": "The update time.\n"
                }
            },
            "type": "object",
            "required": [
                "ipsType",
                "ipsVersion",
                "updateTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getIpsRulesRecord:getIpsRulesRecord": {
            "properties": {
                "affectedApplication": {
                    "type": "string",
                    "description": "The application affected by the rule.\n"
                },
                "createTime": {
                    "type": "string",
                    "description": "The creation time.\n"
                },
                "defaultStatus": {
                    "type": "string",
                    "description": "The default status of the IPS rule.\n"
                },
                "ipsCve": {
                    "type": "string",
                    "description": "The CVE.\n"
                },
                "ipsGroup": {
                    "type": "string",
                    "description": "The IPS rule group.\n"
                },
                "ipsId": {
                    "type": "string",
                    "description": "The IPS rule ID.\n"
                },
                "ipsLevel": {
                    "type": "string",
                    "description": "The risk level.\n"
                },
                "ipsName": {
                    "type": "string",
                    "description": "The IPS rule name.\n"
                },
                "ipsRulesType": {
                    "type": "string",
                    "description": "The IPS rule type.\n"
                },
                "ipsStatus": {
                    "type": "string",
                    "description": "The current status of the IPS rule.\n"
                }
            },
            "type": "object",
            "required": [
                "affectedApplication",
                "createTime",
                "defaultStatus",
                "ipsCve",
                "ipsGroup",
                "ipsId",
                "ipsLevel",
                "ipsName",
                "ipsRulesType",
                "ipsStatus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecord:getProtectionRulesRecord": {
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "The rule action type.\n"
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The created time of a rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The rule description.\n"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecordDestination:getProtectionRulesRecordDestination"
                    },
                    "description": "The destination configuration.\n"
                },
                "direction": {
                    "type": "string",
                    "description": "The direction of a rule.\n"
                },
                "lastOpenTime": {
                    "type": "string",
                    "description": "The last open time.\n"
                },
                "longConnectEnable": {
                    "type": "integer",
                    "description": "Whether to support persistent connections.\n"
                },
                "longConnectTime": {
                    "type": "integer",
                    "description": "The persistent connection duration.\n"
                },
                "longConnectTimeHour": {
                    "type": "integer",
                    "description": "The persistent connection duration (hour).\n"
                },
                "longConnectTimeMinute": {
                    "type": "integer",
                    "description": "The persistent connection duration (minute).\n"
                },
                "longConnectTimeSecond": {
                    "type": "integer",
                    "description": "The persistent connection duration (second).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The rule name.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "The rule ID.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecordService:getProtectionRulesRecordService"
                    },
                    "description": "The service.\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecordSource:getProtectionRulesRecordSource"
                    },
                    "description": "The source configuration.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The rule status.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The tag of a rule.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The rule type.\n"
                }
            },
            "type": "object",
            "required": [
                "actionType",
                "addressType",
                "createdDate",
                "description",
                "destinations",
                "direction",
                "lastOpenTime",
                "longConnectEnable",
                "longConnectTime",
                "longConnectTimeHour",
                "longConnectTimeMinute",
                "longConnectTimeSecond",
                "name",
                "ruleId",
                "services",
                "sources",
                "status",
                "tags",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecordDestination:getProtectionRulesRecordDestination": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The destination IP address.\n"
                },
                "addressGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The address group.\n"
                },
                "addressSetId": {
                    "type": "string",
                    "description": "The ID of the associated IP address group.\n"
                },
                "addressSetName": {
                    "type": "string",
                    "description": "The IP address group name.\n"
                },
                "addressSetType": {
                    "type": "integer",
                    "description": "The destination address set type.\n"
                },
                "addressType": {
                    "type": "integer",
                    "description": "The destination address type.\n"
                },
                "domainAddressName": {
                    "type": "string",
                    "description": "The name of the domain name address.\n"
                },
                "domainSetId": {
                    "type": "string",
                    "description": "The ID of the domain group.\n"
                },
                "domainSetName": {
                    "type": "string",
                    "description": "The name of domain group.\n"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IP address list.\n"
                },
                "regionLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecordDestinationRegionList:getProtectionRulesRecordDestinationRegionList"
                    },
                    "description": "The region list of a rule.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The destination type.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressGroups",
                "addressSetId",
                "addressSetName",
                "addressSetType",
                "addressType",
                "domainAddressName",
                "domainSetId",
                "domainSetName",
                "ipAddresses",
                "regionLists",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecordDestinationRegionList:getProtectionRulesRecordDestinationRegionList": {
            "properties": {
                "descriptionCn": {
                    "type": "string",
                    "description": "The Chinese description of a region.\n"
                },
                "descriptionEn": {
                    "type": "string",
                    "description": "The English description of a region.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "The region ID of the destination.\n"
                },
                "regionType": {
                    "type": "integer",
                    "description": "The region type.\n"
                }
            },
            "type": "object",
            "required": [
                "descriptionCn",
                "descriptionEn",
                "regionId",
                "regionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecordService:getProtectionRulesRecordService": {
            "properties": {
                "customServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecordServiceCustomService:getProtectionRulesRecordServiceCustomService"
                    },
                    "description": "The custom service.\n"
                },
                "destPort": {
                    "type": "string",
                    "description": "The destination port of the service.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The protocols.\n"
                },
                "serviceGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The service group list.\n"
                },
                "serviceSetId": {
                    "type": "string",
                    "description": "The service group ID.\n"
                },
                "serviceSetName": {
                    "type": "string",
                    "description": "The service group name.\n"
                },
                "serviceSetType": {
                    "type": "integer",
                    "description": "The service set type.\n"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "The source port.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The service input type.\n"
                }
            },
            "type": "object",
            "required": [
                "customServices",
                "destPort",
                "protocol",
                "protocols",
                "serviceGroups",
                "serviceSetId",
                "serviceSetName",
                "serviceSetType",
                "sourcePort",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecordServiceCustomService:getProtectionRulesRecordServiceCustomService": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The custom service description.\n"
                },
                "destPort": {
                    "type": "string",
                    "description": "The destination port.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The custom service name.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type of the custom service.\n"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "The source port of the custom service.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "destPort",
                "name",
                "protocol",
                "sourcePort"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecordSource:getProtectionRulesRecordSource": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The source IP address.\n"
                },
                "addressGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The address group.\n"
                },
                "addressSetId": {
                    "type": "string",
                    "description": "The ID of the associated IP address group.\n"
                },
                "addressSetName": {
                    "type": "string",
                    "description": "The IP address group name.\n"
                },
                "addressSetType": {
                    "type": "integer",
                    "description": "The address set type.\n"
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type.\n"
                },
                "domainAddressName": {
                    "type": "string",
                    "description": "The name of the domain address.\n"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IP address list.\n"
                },
                "regionLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecordSourceRegionList:getProtectionRulesRecordSourceRegionList"
                    },
                    "description": "The region list of a rule.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The source type.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "addressGroups",
                "addressSetId",
                "addressSetName",
                "addressSetType",
                "addressType",
                "domainAddressName",
                "ipAddresses",
                "regionLists",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getProtectionRulesRecordSourceRegionList:getProtectionRulesRecordSourceRegionList": {
            "properties": {
                "descriptionCn": {
                    "type": "string",
                    "description": "The Chinese description of a region.\n"
                },
                "descriptionEn": {
                    "type": "string",
                    "description": "The English description of a region.\n"
                },
                "regionId": {
                    "type": "string",
                    "description": "The region ID.\n"
                },
                "regionType": {
                    "type": "integer",
                    "description": "The region type.\n"
                }
            },
            "type": "object",
            "required": [
                "descriptionCn",
                "descriptionEn",
                "regionId",
                "regionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getResourceTagsTag:getResourceTagsTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The tag value.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getServiceGroupMembersRecord:getServiceGroupMembersRecord": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The service group member description.\n"
                },
                "destPort": {
                    "type": "string",
                    "description": "The destination port.\n"
                },
                "itemId": {
                    "type": "string",
                    "description": "The service group member ID.\n"
                },
                "protocol": {
                    "type": "integer",
                    "description": "The protocol type.\n"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "The source port.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "destPort",
                "itemId",
                "protocol",
                "sourcePort"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getServiceGroupsServiceGroup:getServiceGroupsServiceGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the service group.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The service group ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service group.\n"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The protocols of the service group.\n"
                },
                "refCount": {
                    "type": "integer",
                    "description": "The number of times this service group has been referenced.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The type of the Service group.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "protocols",
                "refCount",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cfw/getTagsTag:getTagsTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The tag key.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tag values.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Css/ClusterBackupStrategy:ClusterBackupStrategy": {
            "properties": {
                "agency": {
                    "type": "string"
                },
                "backupPath": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "keepDays": {
                    "type": "integer"
                },
                "prefix": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agency",
                        "backupPath",
                        "bucket",
                        "startTime"
                    ]
                }
            }
        },
        "cloudru:Css/ClusterClientNodeConfig:ClusterClientNodeConfig": {
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "instanceNumber": {
                    "type": "integer"
                },
                "shrinkNodeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volume": {
                    "$ref": "#/types/cloudru:Css/ClusterClientNodeConfigVolume:ClusterClientNodeConfigVolume"
                }
            },
            "type": "object",
            "required": [
                "flavor",
                "instanceNumber",
                "volume"
            ]
        },
        "cloudru:Css/ClusterClientNodeConfigVolume:ClusterClientNodeConfigVolume": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumeType"
            ]
        },
        "cloudru:Css/ClusterColdNodeConfig:ClusterColdNodeConfig": {
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "instanceNumber": {
                    "type": "integer"
                },
                "shrinkNodeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volume": {
                    "$ref": "#/types/cloudru:Css/ClusterColdNodeConfigVolume:ClusterColdNodeConfigVolume",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "flavor",
                "instanceNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flavor",
                        "instanceNumber",
                        "volume"
                    ]
                }
            }
        },
        "cloudru:Css/ClusterColdNodeConfigVolume:ClusterColdNodeConfigVolume": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumeType"
            ]
        },
        "cloudru:Css/ClusterEssNodeConfig:ClusterEssNodeConfig": {
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "instanceNumber": {
                    "type": "integer"
                },
                "shrinkNodeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volume": {
                    "$ref": "#/types/cloudru:Css/ClusterEssNodeConfigVolume:ClusterEssNodeConfigVolume",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "flavor",
                "instanceNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "flavor",
                        "instanceNumber",
                        "volume"
                    ]
                }
            }
        },
        "cloudru:Css/ClusterEssNodeConfigVolume:ClusterEssNodeConfigVolume": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumeType"
            ]
        },
        "cloudru:Css/ClusterKibanaPublicAccess:ClusterKibanaPublicAccess": {
            "properties": {
                "bandwidth": {
                    "type": "integer"
                },
                "publicIp": {
                    "type": "string"
                },
                "whitelist": {
                    "type": "string"
                },
                "whitelistEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "whitelistEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidth",
                        "publicIp",
                        "whitelistEnabled"
                    ]
                }
            }
        },
        "cloudru:Css/ClusterMasterNodeConfig:ClusterMasterNodeConfig": {
            "properties": {
                "flavor": {
                    "type": "string"
                },
                "instanceNumber": {
                    "type": "integer"
                },
                "shrinkNodeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volume": {
                    "$ref": "#/types/cloudru:Css/ClusterMasterNodeConfigVolume:ClusterMasterNodeConfigVolume"
                }
            },
            "type": "object",
            "required": [
                "flavor",
                "instanceNumber",
                "volume"
            ]
        },
        "cloudru:Css/ClusterMasterNodeConfigVolume:ClusterMasterNodeConfigVolume": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumeType"
            ]
        },
        "cloudru:Css/ClusterNode:ClusterNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "specCode": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "id",
                        "ip",
                        "name",
                        "resourceId",
                        "specCode",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Css/ClusterNodeConfig:ClusterNodeConfig": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkInfo": {
                    "$ref": "#/types/cloudru:Css/ClusterNodeConfigNetworkInfo:ClusterNodeConfigNetworkInfo",
                    "willReplaceOnChanges": true
                },
                "volume": {
                    "$ref": "#/types/cloudru:Css/ClusterNodeConfigVolume:ClusterNodeConfigVolume",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "flavor",
                "networkInfo",
                "volume"
            ]
        },
        "cloudru:Css/ClusterNodeConfigNetworkInfo:ClusterNodeConfigNetworkInfo": {
            "properties": {
                "securityGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "securityGroupId",
                "subnetId",
                "vpcId"
            ]
        },
        "cloudru:Css/ClusterNodeConfigVolume:ClusterNodeConfigVolume": {
            "properties": {
                "size": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "volumeType"
            ]
        },
        "cloudru:Css/ClusterPublicAccess:ClusterPublicAccess": {
            "properties": {
                "bandwidth": {
                    "type": "integer"
                },
                "publicIp": {
                    "type": "string"
                },
                "whitelist": {
                    "type": "string"
                },
                "whitelistEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "whitelistEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidth",
                        "publicIp",
                        "whitelistEnabled"
                    ]
                }
            }
        },
        "cloudru:Css/ClusterVpcepEndpoint:ClusterVpcepEndpoint": {
            "properties": {
                "endpointWithDnsName": {
                    "type": "boolean"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "endpointWithDnsName"
            ]
        },
        "cloudru:Css/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "availabilityZones": {
                    "type": "string"
                },
                "diskRange": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "diskRange",
                "id",
                "memory",
                "name",
                "region",
                "type",
                "vcpus",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Cts/NotificationFilter:NotificationFilter": {
            "properties": {
                "condition": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "condition",
                "rules"
            ]
        },
        "cloudru:Cts/NotificationOperation:NotificationOperation": {
            "properties": {
                "resource": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "traceNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "resource",
                "service",
                "traceNames"
            ]
        },
        "cloudru:Cts/NotificationOperationUser:NotificationOperationUser": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "group",
                "users"
            ]
        },
        "cloudru:Dcs/InstanceBackupPolicy:InstanceBackupPolicy": {
            "properties": {
                "backupAts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "backupType": {
                    "type": "string"
                },
                "beginAt": {
                    "type": "string"
                },
                "periodType": {
                    "type": "string"
                },
                "saveDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "backupAts",
                "beginAt"
            ]
        },
        "cloudru:Dcs/InstanceBandwidthInfo:InstanceBandwidthInfo": {
            "properties": {
                "bandwidth": {
                    "type": "integer"
                },
                "beginTime": {
                    "type": "string"
                },
                "currentTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "expandCount": {
                    "type": "integer"
                },
                "expandEffectTime": {
                    "type": "integer"
                },
                "expandIntervalTime": {
                    "type": "integer"
                },
                "maxExpandCount": {
                    "type": "integer"
                },
                "nextExpandTime": {
                    "type": "string"
                },
                "taskRunning": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidth",
                        "beginTime",
                        "currentTime",
                        "endTime",
                        "expandCount",
                        "expandEffectTime",
                        "expandIntervalTime",
                        "maxExpandCount",
                        "nextExpandTime",
                        "taskRunning"
                    ]
                }
            }
        },
        "cloudru:Dcs/InstanceParameter:InstanceParameter": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "value"
            ]
        },
        "cloudru:Dcs/InstanceWhitelist:InstanceWhitelist": {
            "properties": {
                "groupName": {
                    "type": "string"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "groupName",
                "ipAddresses"
            ]
        },
        "cloudru:Dcs/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cacheMode": {
                    "type": "string"
                },
                "capacity": {
                    "type": "number"
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cpuArchitecture": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersions": {
                    "type": "string"
                },
                "ipCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availableZones",
                "cacheMode",
                "capacity",
                "chargingModes",
                "cpuArchitecture",
                "engine",
                "engineVersions",
                "ipCount",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dds/InstanceBackupStrategy:InstanceBackupStrategy": {
            "properties": {
                "keepDays": {
                    "type": "integer"
                },
                "period": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "keepDays",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepDays",
                        "period",
                        "startTime"
                    ]
                }
            }
        },
        "cloudru:Dds/InstanceConfiguration:InstanceConfiguration": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ]
        },
        "cloudru:Dds/InstanceDatastore:InstanceDatastore": {
            "properties": {
                "storageEngine": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ]
        },
        "cloudru:Dds/InstanceFlavor:InstanceFlavor": {
            "properties": {
                "num": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "specCode": {
                    "type": "string"
                },
                "storage": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "num",
                "specCode",
                "type"
            ]
        },
        "cloudru:Dds/InstanceGroup:InstanceGroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceGroupNode:InstanceGroupNode"
                    }
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "used": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "nodes",
                        "size",
                        "status",
                        "type",
                        "used"
                    ]
                }
            }
        },
        "cloudru:Dds/InstanceGroupNode:InstanceGroupNode": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the node ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the node name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP address of a node.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Indicates the EIP that has been bound on a node.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the node role.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the node status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the node type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "privateIp",
                        "publicIp",
                        "role",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Dds/InstanceNode:InstanceNode": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the node ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the node name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP address of a node.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Indicates the EIP that has been bound on a node.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the node role.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the node status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the node type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "privateIp",
                        "publicIp",
                        "role",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Dds/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "memory": {
                    "type": "string"
                },
                "specCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "memory",
                "specCode",
                "type",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:DedicatedApig/ApiBackendParam:ApiBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:DedicatedApig/ApiFuncGraph:ApiFuncGraph": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation type.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "functionUrn"
            ]
        },
        "cloudru:DedicatedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraphPolicyBackendParam:ApiFuncGraphPolicyBackendParam"
                    },
                    "description": "The configaiton list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraphPolicyCondition:ApiFuncGraphPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationMode": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend policy.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "functionUrn",
                "name"
            ]
        },
        "cloudru:DedicatedApig/ApiFuncGraphPolicyBackendParam:ApiFuncGraphPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:DedicatedApig/ApiFuncGraphPolicyCondition:ApiFuncGraphPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:DedicatedApig/ApiMock:ApiMock": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ApiMockPolicy:ApiMockPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiMockPolicyBackendParam:ApiMockPolicyBackendParam"
                    },
                    "description": "The configuration list of backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiMockPolicyCondition:ApiMockPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The backend policy name.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditions",
                        "name",
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ApiMockPolicyBackendParam:ApiMockPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:DedicatedApig/ApiMockPolicyCondition:ApiMockPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:DedicatedApig/ApiPublishmentHistory:ApiPublishmentHistory": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The version description of the API publishment.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the API publishment.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "versionId"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ApiRequestParam:ApiRequestParam": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value of the parameter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The parameter description.\n"
                },
                "enumeration": {
                    "type": "string",
                    "description": "The enumerated value.\n"
                },
                "example": {
                    "type": "string",
                    "description": "The parameter example.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where this parameter is located.\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum value or length (string parameter) for parameter.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum value or length (string parameter) for parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request parameter.\n"
                },
                "orchestrations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of orchestration rules that parameter used.\n"
                },
                "passthrough": {
                    "type": "boolean",
                    "description": "Whether to transparently transfer the parameter.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether this parameter is required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "validEnable": {
                    "type": "integer",
                    "description": "Whether to enable the parameter validation.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "default",
                        "description",
                        "enumeration",
                        "example",
                        "maximum",
                        "minimum",
                        "name",
                        "passthrough",
                        "required",
                        "validEnable"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ApiWeb:ApiWeb": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address, which consists of a domain name or IP address, and a port number.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request path.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The web protocol type of the API request.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "cloudru:DedicatedApig/ApiWebPolicy:ApiWebPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiWebPolicyBackendParam:ApiWebPolicyBackendParam"
                    },
                    "description": "The configuration list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiWebPolicyCondition:ApiWebPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web policy.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request address.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The backend request protocol.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name",
                "path",
                "requestMethod"
            ]
        },
        "cloudru:DedicatedApig/ApiWebPolicyBackendParam:ApiWebPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:DedicatedApig/ApiWebPolicyCondition:ApiWebPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:DedicatedApig/CustomAuthorizerIdentity:CustomAuthorizerIdentity": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The parameter location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the parameter to be verified.\n"
                },
                "validation": {
                    "type": "string",
                    "description": "The parameter verification expression.\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name"
            ]
        },
        "cloudru:DedicatedApig/GroupEnvironment:GroupEnvironment": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment to which the variables belongs.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/GroupEnvironmentVariable:GroupEnvironmentVariable"
                    },
                    "description": "The array of one or more environment variables.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "variables"
            ]
        },
        "cloudru:DedicatedApig/GroupEnvironmentVariable:GroupEnvironmentVariable": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the variable that the group has.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The variable name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The variable value.\n"
                },
                "variableId": {
                    "type": "string",
                    "description": "schema: Deprecated; The ID of the variable that the group has.\n",
                    "deprecationMessage": "Use 'id' instead"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "value",
                        "variableId"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/GroupUrlDomain:GroupUrlDomain": {
            "properties": {
                "isHttpRedirectToHttps": {
                    "type": "boolean",
                    "description": "Whether to enable redirection from HTTP to HTTPS.\n"
                },
                "minSslVersion": {
                    "type": "string",
                    "description": "The minimum SSL protocol version.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The associated domain name.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isHttpRedirectToHttps",
                        "minSslVersion",
                        "name"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/InstanceCustomIngressPort:InstanceCustomIngressPort": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the custom ingress port.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Specified port of the custom ingress port.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Specified protocol of the custom ingress port.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the custom ingress port.\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "port",
                        "protocol",
                        "status"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ResponseRule:ResponseRule": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body template of the API custom response rule.\n"
                },
                "errorType": {
                    "type": "string",
                    "description": "The error type of the API custom response rule.\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ResponseRuleHeader:ResponseRuleHeader"
                    },
                    "description": "The configuration of the custom response headers.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The HTTP status code of the API custom response rule.\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "errorType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "body",
                        "errorType",
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ResponseRuleHeader:ResponseRuleHeader": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name of the response header.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value for the specified response header key.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "cloudru:DedicatedApig/ThrottlingPolicyAppThrottle:ThrottlingPolicyAppThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "maxApiRequests",
                "throttlingObjectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "maxApiRequests",
                        "throttlingObjectId",
                        "throttlingObjectName"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/ThrottlingPolicyUserThrottle:ThrottlingPolicyUserThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "maxApiRequests",
                "throttlingObjectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "maxApiRequests",
                        "throttlingObjectId",
                        "throttlingObjectName"
                    ]
                }
            }
        },
        "cloudru:DedicatedApig/getEnvironmentsEnvironment:getEnvironmentsEnvironment": {
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createTime",
                "description",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dew/getKeypairsKeypair:getKeypairsKeypair": {
            "properties": {
                "fingerprint": {
                    "type": "string"
                },
                "isManaged": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fingerprint",
                "isManaged",
                "name",
                "publicKey",
                "scope"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dis/StreamPartition:StreamPartition": {
            "properties": {
                "hashRange": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sequenceNumberRange": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hashRange",
                        "id",
                        "sequenceNumberRange",
                        "status"
                    ]
                }
            }
        },
        "cloudru:Dli/QueueScalingPolicy:QueueScalingPolicy": {
            "properties": {
                "impactStartTime": {
                    "type": "string"
                },
                "impactStopTime": {
                    "type": "string"
                },
                "maxCu": {
                    "type": "integer"
                },
                "minCu": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "impactStartTime",
                "impactStopTime",
                "maxCu",
                "minCu",
                "priority"
            ]
        },
        "cloudru:Dli/QueueSparkDriver:QueueSparkDriver": {
            "properties": {
                "maxConcurrent": {
                    "type": "integer"
                },
                "maxInstance": {
                    "type": "integer"
                },
                "maxPrefetchInstance": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudru:Dli/SparkJobDependentPackage:SparkJobDependentPackage": {
            "properties": {
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dli/SparkJobDependentPackagePackage:SparkJobDependentPackagePackage"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "groupName",
                "packages"
            ]
        },
        "cloudru:Dli/SparkJobDependentPackagePackage:SparkJobDependentPackagePackage": {
            "properties": {
                "packageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "packageName",
                "type"
            ]
        },
        "cloudru:Dms/KafkaInstanceCrossVpcAccess:KafkaInstanceCrossVpcAccess": {
            "properties": {
                "advertisedIp": {
                    "type": "string"
                },
                "lisenterIp": {
                    "type": "string",
                    "deprecationMessage": "typo in lisenter_ip, please use \"listener_ip\" instead."
                },
                "listenerIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "advertisedIp",
                        "lisenterIp",
                        "listenerIp",
                        "port",
                        "portId"
                    ]
                }
            }
        },
        "cloudru:Dms/KafkaInstanceParameter:KafkaInstanceParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:Dms/KafkaInstancePortProtocol:KafkaInstancePortProtocol": {
            "properties": {
                "privatePlainAddress": {
                    "type": "string"
                },
                "privatePlainDomainName": {
                    "type": "string"
                },
                "privatePlainEnable": {
                    "type": "boolean"
                },
                "privateSaslPlaintextAddress": {
                    "type": "string"
                },
                "privateSaslPlaintextDomainName": {
                    "type": "string"
                },
                "privateSaslPlaintextEnable": {
                    "type": "boolean"
                },
                "privateSaslSslAddress": {
                    "type": "string"
                },
                "privateSaslSslDomainName": {
                    "type": "string"
                },
                "privateSaslSslEnable": {
                    "type": "boolean"
                },
                "publicPlainAddress": {
                    "type": "string"
                },
                "publicPlainDomainName": {
                    "type": "string"
                },
                "publicPlainEnable": {
                    "type": "boolean"
                },
                "publicSaslPlaintextAddress": {
                    "type": "string"
                },
                "publicSaslPlaintextDomainName": {
                    "type": "string"
                },
                "publicSaslPlaintextEnable": {
                    "type": "boolean"
                },
                "publicSaslSslAddress": {
                    "type": "string"
                },
                "publicSaslSslDomainName": {
                    "type": "string"
                },
                "publicSaslSslEnable": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "privatePlainAddress",
                        "privatePlainDomainName",
                        "privatePlainEnable",
                        "privateSaslPlaintextAddress",
                        "privateSaslPlaintextDomainName",
                        "privateSaslPlaintextEnable",
                        "privateSaslSslAddress",
                        "privateSaslSslDomainName",
                        "privateSaslSslEnable",
                        "publicPlainAddress",
                        "publicPlainDomainName",
                        "publicPlainEnable",
                        "publicSaslPlaintextAddress",
                        "publicSaslPlaintextDomainName",
                        "publicSaslPlaintextEnable",
                        "publicSaslSslAddress",
                        "publicSaslSslDomainName",
                        "publicSaslSslEnable"
                    ]
                }
            }
        },
        "cloudru:Dms/KafkaPermissionsPolicy:KafkaPermissionsPolicy": {
            "properties": {
                "accessPolicy": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessPolicy",
                "userName"
            ]
        },
        "cloudru:Dms/KafkaTopicConfig:KafkaTopicConfig": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:Dms/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "archTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/getFlavorsFlavorIo:getFlavorsFlavorIo"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/getFlavorsFlavorProperty:getFlavorsFlavorProperty"
                    }
                },
                "supportFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/getFlavorsFlavorSupportFeature:getFlavorsFlavorSupportFeature"
                    }
                },
                "type": {
                    "type": "string"
                },
                "vmSpecification": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "archTypes",
                "chargingModes",
                "id",
                "ios",
                "properties",
                "supportFeatures",
                "type",
                "vmSpecification"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dms/getFlavorsFlavorIo:getFlavorsFlavorIo": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unavailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "storageSpecCode",
                "type",
                "unavailabilityZones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dms/getFlavorsFlavorProperty:getFlavorsFlavorProperty": {
            "properties": {
                "flavorAlias": {
                    "type": "string"
                },
                "maxBandwidthPerBroker": {
                    "type": "integer"
                },
                "maxBroker": {
                    "type": "integer"
                },
                "maxConsumerPerBroker": {
                    "type": "integer"
                },
                "maxPartitionPerBroker": {
                    "type": "integer"
                },
                "maxStoragePerNode": {
                    "type": "integer"
                },
                "maxTpsPerBroker": {
                    "type": "integer"
                },
                "minBroker": {
                    "type": "integer"
                },
                "minStoragePerNode": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "flavorAlias",
                "maxBandwidthPerBroker",
                "maxBroker",
                "maxConsumerPerBroker",
                "maxPartitionPerBroker",
                "maxStoragePerNode",
                "maxTpsPerBroker",
                "minBroker",
                "minStoragePerNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dms/getFlavorsFlavorSupportFeature:getFlavorsFlavorSupportFeature": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/getFlavorsFlavorSupportFeatureProperty:getFlavorsFlavorSupportFeatureProperty"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dms/getFlavorsFlavorSupportFeatureProperty:getFlavorsFlavorSupportFeatureProperty": {
            "properties": {
                "maxNode": {
                    "type": "integer"
                },
                "maxTask": {
                    "type": "integer"
                },
                "minNode": {
                    "type": "integer"
                },
                "minTask": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxNode",
                "maxTask",
                "minNode",
                "minTask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dms/getInstancesInstance:getInstancesInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectAddress": {
                    "type": "string"
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/getInstancesInstanceCrossVpcAccess:getInstancesInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dumping": {
                    "type": "boolean"
                },
                "enableAutoTopic": {
                    "type": "boolean"
                },
                "enablePublicIp": {
                    "type": "boolean"
                },
                "enabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managementConnectAddress": {
                    "type": "string"
                },
                "managerUser": {
                    "type": "string"
                },
                "manegementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "partitionNum": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string"
                },
                "publicConnAddresses": {
                    "type": "string"
                },
                "publicIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityProtocol": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessUser",
                "availabilityZones",
                "connectAddress",
                "crossVpcAccesses",
                "description",
                "dumping",
                "enableAutoTopic",
                "enablePublicIp",
                "enabledMechanisms",
                "engineVersion",
                "enterpriseProjectId",
                "id",
                "maintainBegin",
                "maintainEnd",
                "managementConnectAddress",
                "managerUser",
                "manegementConnectAddress",
                "name",
                "networkId",
                "partitionNum",
                "port",
                "productId",
                "publicConnAddresses",
                "publicIpIds",
                "resourceSpecCode",
                "retentionPolicy",
                "securityGroupId",
                "securityProtocol",
                "sslEnable",
                "status",
                "storageSpace",
                "storageSpecCode",
                "tags",
                "type",
                "usedStorageSpace",
                "userId",
                "userName",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dms/getInstancesInstanceCrossVpcAccess:getInstancesInstanceCrossVpcAccess": {
            "properties": {
                "advertisedIp": {
                    "type": "string"
                },
                "lisenterIp": {
                    "type": "string",
                    "deprecationMessage": "typo in lisenter_ip, please use \"listener_ip\" instead."
                },
                "listenerIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "advertisedIp",
                "lisenterIp",
                "listenerIp",
                "port",
                "portId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dns/ZoneDnssecInfo:ZoneDnssecInfo": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Indicates the creation time. Format is **yyyy-MM-dd'T'HH:mm:ss.SSS**.\n"
                },
                "digest": {
                    "type": "string",
                    "description": "Indicates the digest.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Indicates the digest algorithm.\n"
                },
                "digestType": {
                    "type": "integer",
                    "description": "Indicates the digest type.\n"
                },
                "dsRecord": {
                    "type": "string",
                    "description": "Indicates the DS record.\n"
                },
                "flag": {
                    "type": "integer",
                    "description": "Indicates the flag.\n"
                },
                "keyTag": {
                    "type": "integer",
                    "description": "Indicates the key tag.\n"
                },
                "kskPublicKey": {
                    "type": "string",
                    "description": "Indicates the public key.\n"
                },
                "signature": {
                    "type": "string",
                    "description": "Indicates the signature algorithm.\n"
                },
                "signatureType": {
                    "type": "integer",
                    "description": "Indicates the signature type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Indicates the update time. Format is **yyyy-MM-dd'T'HH:mm:ss.SSS**.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "digest",
                        "digestAlgorithm",
                        "digestType",
                        "dsRecord",
                        "flag",
                        "keyTag",
                        "kskPublicKey",
                        "signature",
                        "signatureType",
                        "updatedAt"
                    ]
                }
            }
        },
        "cloudru:Dns/ZoneRouter:ZoneRouter": {
            "properties": {
                "routerId": {
                    "type": "string",
                    "description": "The ID of the associated VPC.\n"
                },
                "routerRegion": {
                    "type": "string",
                    "description": "The region of the VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "routerId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "routerId",
                        "routerRegion"
                    ]
                }
            }
        },
        "cloudru:Drs/JobDestinationDb:JobDestinationDb": {
            "properties": {
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertCheckSum": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertPassword": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslEnabled": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "engineType",
                "ip",
                "password",
                "port",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "engineType",
                        "ip",
                        "name",
                        "password",
                        "port",
                        "region",
                        "user"
                    ]
                }
            }
        },
        "cloudru:Drs/JobLimitSpeed:JobLimitSpeed": {
            "properties": {
                "endTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "speed": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "startTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "endTime",
                "speed",
                "startTime"
            ]
        },
        "cloudru:Drs/JobSourceDb:JobSourceDb": {
            "properties": {
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertCheckSum": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslCertPassword": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslEnabled": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "user": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "engineType",
                "ip",
                "password",
                "port",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "engineType",
                        "ip",
                        "name",
                        "password",
                        "port",
                        "region",
                        "user"
                    ]
                }
            }
        },
        "cloudru:Dws/ClusterElb:ClusterElb": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the ELB load balancer.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ELB load balancer.\n"
                },
                "privateEndpoint": {
                    "type": "string",
                    "description": "The private endpoint of the ELB load balancer.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP address of the ELB load balancer.\n"
                },
                "privateIpV6": {
                    "type": "string",
                    "description": "The IPv6 address of the ELB load balancer.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "The public IP address of the ELB load balancer.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of VPC to which the ELB load balancer belongs.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "privateEndpoint",
                        "privateIp",
                        "privateIpV6",
                        "publicIp",
                        "vpcId"
                    ]
                }
            }
        },
        "cloudru:Dws/ClusterEndpoint:ClusterEndpoint": {
            "properties": {
                "connectInfo": {
                    "type": "string",
                    "description": "Private network connection information.\n"
                },
                "jdbcUrl": {
                    "type": "string",
                    "description": "JDBC URL. Format: jdbc:postgresql://\u003cconnect_info\u003e/\u003cYOUR_DATABASE_NAME\u003e\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "connectInfo",
                        "jdbcUrl"
                    ]
                }
            }
        },
        "cloudru:Dws/ClusterMaintainWindow:ClusterMaintainWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "Maintenance time in each week in the unit of day.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "Maintenance end time in HH:mm format. The time zone is GMT+0.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "Maintenance start time in HH:mm format. The time zone is GMT+0.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "day",
                        "endTime",
                        "startTime"
                    ]
                }
            }
        },
        "cloudru:Dws/ClusterPublicEndpoint:ClusterPublicEndpoint": {
            "properties": {
                "jdbcUrl": {
                    "type": "string",
                    "description": "JDBC URL. Format: jdbc:postgresql://\u003cpublic_connect_info\u003e/\u003cYOUR_DATABASE_NAME\u003e\n"
                },
                "publicConnectInfo": {
                    "type": "string",
                    "description": "Public network connection information.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "jdbcUrl",
                        "publicConnectInfo"
                    ]
                }
            }
        },
        "cloudru:Dws/ClusterPublicIp:ClusterPublicIp": {
            "properties": {
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID.\n"
                },
                "publicBindType": {
                    "type": "string",
                    "description": "The bind type of public IP.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "publicBindType"
                    ]
                }
            }
        },
        "cloudru:Dws/ClusterVolume:ClusterVolume": {
            "properties": {
                "capacity": {
                    "type": "string",
                    "description": "The capacity size, in GB.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The volume type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "capacity",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Dws/getFlaovrsFlavor:getFlaovrsFlavor": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of availability zones.\n"
                },
                "datastoreType": {
                    "type": "string",
                    "description": "The type of datastore.\n"
                },
                "datastoreVersion": {
                    "type": "string",
                    "description": "The version of datastore.\n"
                },
                "elasticVolumeSpecs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dws/getFlaovrsFlavorElasticVolumeSpec:getFlaovrsFlavorElasticVolumeSpec"
                    },
                    "description": "The typical specification, If the volume specification is elastic.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "The name of the dws node flavor.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "The ram of the dws node flavor in GB.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The default disk size in GB.\n"
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The vcpus of the dws node flavor.\n"
                },
                "volumetype": {
                    "type": "string",
                    "description": "Disk type.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "datastoreType",
                "datastoreVersion",
                "elasticVolumeSpecs",
                "flavorId",
                "memory",
                "size",
                "vcpus",
                "volumetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Dws/getFlaovrsFlavorElasticVolumeSpec:getFlaovrsFlavorElasticVolumeSpec": {
            "properties": {
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum disk size.\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "Minimum disk size.\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Disk size increment step.\n"
                }
            },
            "type": "object",
            "required": [
                "maxSize",
                "minSize",
                "step"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/InstanceBandwidth:InstanceBandwidth": {
            "properties": {
                "chargeMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "shareType"
            ]
        },
        "cloudru:Ecs/InstanceDataDisk:InstanceDataDisk": {
            "properties": {
                "dssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "snapshotId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "throughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "type"
            ]
        },
        "cloudru:Ecs/InstanceEnclaveOptions:InstanceEnclaveOptions": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "cloudru:Ecs/InstanceNetwork:InstanceNetwork": {
            "properties": {
                "accessNetwork": {
                    "type": "boolean"
                },
                "fixedIpV4": {
                    "type": "string"
                },
                "fixedIpV6": {
                    "type": "string",
                    "description": "schema: Computed\n",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "mac": {
                    "type": "string"
                },
                "port": {
                    "type": "string",
                    "description": "schema: Computed\n",
                    "willReplaceOnChanges": true
                },
                "sourceDestCheck": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string",
                    "description": "schema: Required\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fixedIpV4",
                        "fixedIpV6",
                        "mac",
                        "port",
                        "uuid"
                    ]
                }
            }
        },
        "cloudru:Ecs/InstanceSchedulerHint:InstanceSchedulerHint": {
            "properties": {
                "dehId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "faultDomain": {
                    "type": "string",
                    "description": "schema: Internal\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenancy": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "group"
                    ]
                }
            }
        },
        "cloudru:Ecs/InstanceVolumeAttached:InstanceVolumeAttached": {
            "properties": {
                "bootIndex": {
                    "type": "integer"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "pciAddress": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootIndex",
                        "kmsKeyId",
                        "pciAddress",
                        "size",
                        "type",
                        "volumeId"
                    ]
                }
            }
        },
        "cloudru:Ecs/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "cpuCoreCount": {
                    "type": "integer"
                },
                "generation": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memorySize": {
                    "type": "integer"
                },
                "performanceType": {
                    "type": "string"
                },
                "storageType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cpuCoreCount",
                "generation",
                "id",
                "memorySize",
                "performanceType",
                "storageType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstanceNetwork:getInstanceNetwork": {
            "properties": {
                "fixedIpV4": {
                    "type": "string"
                },
                "fixedIpV6": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fixedIpV4",
                "fixedIpV6",
                "mac",
                "port",
                "uuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstanceSchedulerHint:getInstanceSchedulerHint": {
            "properties": {
                "group": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "group"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstanceVolumeAttached:getInstanceVolumeAttached": {
            "properties": {
                "bootIndex": {
                    "type": "integer"
                },
                "isSysVolume": {
                    "type": "boolean"
                },
                "pciAddress": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bootIndex",
                "isSysVolume",
                "pciAddress",
                "size",
                "type",
                "volumeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstancesInstance:getInstancesInstance": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expiredTime": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "flavorName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/getInstancesInstanceNetwork:getInstancesInstanceNetwork"
                    }
                },
                "publicIp": {
                    "type": "string"
                },
                "schedulerHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/getInstancesInstanceSchedulerHint:getInstancesInstanceSchedulerHint"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "systemDiskId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "volumeAttacheds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/getInstancesInstanceVolumeAttached:getInstancesInstanceVolumeAttached"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "chargingMode",
                "enterpriseProjectId",
                "expiredTime",
                "flavorId",
                "flavorName",
                "id",
                "imageId",
                "imageName",
                "keyPair",
                "name",
                "networks",
                "publicIp",
                "schedulerHints",
                "securityGroupIds",
                "status",
                "systemDiskId",
                "tags",
                "userData",
                "volumeAttacheds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstancesInstanceNetwork:getInstancesInstanceNetwork": {
            "properties": {
                "fixedIpV4": {
                    "type": "string"
                },
                "fixedIpV6": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fixedIpV4",
                "fixedIpV6",
                "mac",
                "port",
                "uuid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstancesInstanceSchedulerHint:getInstancesInstanceSchedulerHint": {
            "properties": {
                "group": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "group"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getInstancesInstanceVolumeAttached:getInstancesInstanceVolumeAttached": {
            "properties": {
                "bootIndex": {
                    "type": "integer"
                },
                "isSysVolume": {
                    "type": "boolean"
                },
                "pciAddress": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bootIndex",
                "isSysVolume",
                "pciAddress",
                "size",
                "type",
                "volumeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ecs/getServergroupsServergroup:getServergroupsServergroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "members",
                "name",
                "policies"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Eip/getBandwidthPublicip:getBandwidthPublicip": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ipAddress",
                "ipVersion",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Eip/getEipsEip:getEipsEip": {
            "properties": {
                "bandwidthId": {
                    "type": "string"
                },
                "bandwidthName": {
                    "type": "string"
                },
                "bandwidthShareType": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicIpv6": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bandwidthId",
                "bandwidthName",
                "bandwidthShareType",
                "bandwidthSize",
                "createdAt",
                "enterpriseProjectId",
                "id",
                "ipVersion",
                "name",
                "portId",
                "privateIp",
                "publicIp",
                "publicIpv6",
                "status",
                "tags",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/ListenerInsertHeaders:ListenerInsertHeaders": {
            "properties": {
                "xForwardedElbIp": {
                    "type": "string"
                },
                "xForwardedHost": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "xForwardedElbIp",
                        "xForwardedHost"
                    ]
                }
            }
        },
        "cloudru:Elb/PoolPersistence:PoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "timeout",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Elb/getListenersListener:getListenersListener": {
            "properties": {
                "clientCaTlsContainerRef": {
                    "type": "string"
                },
                "connectionLimit": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "defaultTlsContainerRef": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "insertHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/getListenersListenerInsertHeader:getListenersListenerInsertHeader"
                    }
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/getListenersListenerLoadbalancer:getListenersListenerLoadbalancer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "sniContainerRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientCaTlsContainerRef",
                "connectionLimit",
                "createdAt",
                "defaultPoolId",
                "defaultTlsContainerRef",
                "description",
                "http2Enable",
                "id",
                "insertHeaders",
                "loadbalancers",
                "name",
                "protectionReason",
                "protectionStatus",
                "protocol",
                "protocolPort",
                "sniContainerRefs",
                "tags",
                "tlsCiphersPolicy",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getListenersListenerInsertHeader:getListenersListenerInsertHeader": {
            "properties": {
                "xForwardedElbIp": {
                    "type": "string"
                },
                "xForwardedHost": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "xForwardedElbIp",
                "xForwardedHost"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getListenersListenerLoadbalancer:getListenersListenerLoadbalancer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The loadbalancer ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getPoolsPool:getPoolsPool": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "healthmonitorId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/getPoolsPoolListener:getPoolsPoolListener"
                    }
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/getPoolsPoolLoadbalancer:getPoolsPoolLoadbalancer"
                    }
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/getPoolsPoolMember:getPoolsPoolMember"
                    }
                },
                "name": {
                    "type": "string"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/getPoolsPoolPersistence:getPoolsPoolPersistence"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "healthmonitorId",
                "id",
                "lbMethod",
                "listeners",
                "loadbalancers",
                "members",
                "name",
                "persistences",
                "protectionReason",
                "protectionStatus",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getPoolsPoolListener:getPoolsPoolListener": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getPoolsPoolLoadbalancer:getPoolsPoolLoadbalancer": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getPoolsPoolMember:getPoolsPoolMember": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Elb/getPoolsPoolPersistence:getPoolsPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "timeout",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getAssociationsAssociation:getAssociationsAssociation": {
            "properties": {
                "attachmentId": {
                    "type": "string"
                },
                "attachmentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "routePolicyId": {
                    "type": "string"
                },
                "routeTableId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachmentId",
                "attachmentType",
                "createdAt",
                "id",
                "resourceId",
                "routePolicyId",
                "routeTableId",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getAttachmentsAttachment:getAttachmentsAttachment": {
            "properties": {
                "associated": {
                    "type": "boolean",
                    "description": "Whether this attachment has been associated.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the attachment.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the attachment.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The attachment ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The attachment name.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The associated resource ID.\n"
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The associated route table ID.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the attachment.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the attachment.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The attachment type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the attachment.\n"
                }
            },
            "type": "object",
            "required": [
                "associated",
                "createdAt",
                "description",
                "id",
                "name",
                "resourceId",
                "routeTableId",
                "status",
                "tags",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getAvailableRoutesRoute:getAvailableRoutesRoute": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The destination address of the route.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The route ID.\n"
                },
                "isBlackhole": {
                    "type": "boolean",
                    "description": "Whether the route is a blackhole route.\n"
                },
                "nextHops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Er/getAvailableRoutesRouteNextHop:getAvailableRoutesRouteNextHop"
                    },
                    "description": "The next hops of the route.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The route type.\n"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "id",
                "isBlackhole",
                "nextHops",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getAvailableRoutesRouteNextHop:getAvailableRoutesRouteNextHop": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The attachment ID.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The attached resource ID.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The attachment type.\n"
                }
            },
            "type": "object",
            "required": [
                "attachmentId",
                "resourceId",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getFlowLogsFlowLog:getFlowLogsFlowLog": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the flow log.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the flow log.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "The switch of the flow log.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the flow log.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "The ID of the log group to which the flow log belongs.\n"
                },
                "logStoreType": {
                    "type": "string",
                    "description": "The storage type of the flow log.\n"
                },
                "logStreamId": {
                    "type": "string",
                    "description": "The ID of the log stream to which the flow log belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the flow log.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the attachment to which the flow log belongs.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of the flow log.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the flow log.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the flow log.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "enabled",
                "id",
                "logGroupId",
                "logStoreType",
                "logStreamId",
                "name",
                "resourceId",
                "resourceType",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getInstancesInstance:getInstancesInstance": {
            "properties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP AS number of the ER instance.\n"
                },
                "autoAcceptSharedAttachments": {
                    "type": "boolean",
                    "description": "Whether to automatically accept the creation of shared attachment.\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone list where the ER instance is located.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the instance.\n"
                },
                "defaultAssociationRouteTableId": {
                    "type": "string",
                    "description": "The ID of the default association route table.\n"
                },
                "defaultPropagationRouteTableId": {
                    "type": "string",
                    "description": "The ID of the default propagation route table.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the instance.\n"
                },
                "enableDefaultAssociation": {
                    "type": "boolean",
                    "description": "Whether to enable the association of the default route table.\n"
                },
                "enableDefaultPropagation": {
                    "type": "boolean",
                    "description": "Whether to enable the propagation of the default route table.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The ID of enterprise project to which the instance belongs.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the instance.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the instance.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the instance.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update time of the instance.\n"
                }
            },
            "type": "object",
            "required": [
                "asn",
                "autoAcceptSharedAttachments",
                "availabilityZones",
                "createdAt",
                "defaultAssociationRouteTableId",
                "defaultPropagationRouteTableId",
                "description",
                "enableDefaultAssociation",
                "enableDefaultPropagation",
                "enterpriseProjectId",
                "id",
                "name",
                "status",
                "tags",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getPropagationsPropagation:getPropagationsPropagation": {
            "properties": {
                "attachmentId": {
                    "type": "string"
                },
                "attachmentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "routePolicyId": {
                    "type": "string"
                },
                "routeTableId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachmentId",
                "attachmentType",
                "createdAt",
                "id",
                "instanceId",
                "resourceId",
                "routePolicyId",
                "routeTableId",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getQuotasQuota:getQuotasQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "description": "The number of available quotas, `-1` means unlimited.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The quota type.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of usage.\n"
                },
                "used": {
                    "type": "integer",
                    "description": "The number of quota used.\n"
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type",
                "unit",
                "used"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getRouteTablesRouteTable:getRouteTablesRouteTable": {
            "properties": {
                "associations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Er/getRouteTablesRouteTableAssociation:getRouteTablesRouteTableAssociation"
                    },
                    "description": "The association configuration of the route table.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the route table.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The route table ID.\n"
                },
                "isDefaultAssociation": {
                    "type": "boolean",
                    "description": "Whether this route table is the default association route table.\n"
                },
                "isDefaultPropagation": {
                    "type": "boolean",
                    "description": "Whether this route table is the default propagation route table.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the route table.\n"
                },
                "propagations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Er/getRouteTablesRouteTablePropagation:getRouteTablesRouteTablePropagation"
                    },
                    "description": "The propagation configuration of the route table.\n"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Er/getRouteTablesRouteTableRoute:getRouteTablesRouteTableRoute"
                    },
                    "description": "The route details of the route table.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the route table.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The tags configuration of the route table.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time.\n"
                }
            },
            "type": "object",
            "required": [
                "associations",
                "createdAt",
                "description",
                "id",
                "isDefaultAssociation",
                "isDefaultPropagation",
                "name",
                "propagations",
                "routes",
                "status",
                "tags",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getRouteTablesRouteTableAssociation:getRouteTablesRouteTableAssociation": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The attachment ID corresponding to the routing association/propagation.\n"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type corresponding to the routing association/propagation.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the association/propagation.\n"
                }
            },
            "type": "object",
            "required": [
                "attachmentId",
                "attachmentType",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getRouteTablesRouteTablePropagation:getRouteTablesRouteTablePropagation": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The attachment ID corresponding to the routing association/propagation.\n"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type corresponding to the routing association/propagation.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the association/propagation.\n"
                }
            },
            "type": "object",
            "required": [
                "attachmentId",
                "attachmentType",
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getRouteTablesRouteTableRoute:getRouteTablesRouteTableRoute": {
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Er/getRouteTablesRouteTableRouteAttachment:getRouteTablesRouteTableRouteAttachment"
                    },
                    "description": "The details of the attachment corresponding to the route.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "The destination address (CIDR) of the route.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The route ID.\n"
                },
                "isBlackhole": {
                    "type": "boolean",
                    "description": "Whether route is the black hole route.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the route.\n"
                }
            },
            "type": "object",
            "required": [
                "attachments",
                "destination",
                "id",
                "isBlackhole",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getRouteTablesRouteTableRouteAttachment:getRouteTablesRouteTableRouteAttachment": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the nexthop attachment.\n"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The type of the nexthop attachment.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource associated with the attachment.\n"
                }
            },
            "type": "object",
            "required": [
                "attachmentId",
                "attachmentType",
                "resourceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Er/getTagsTag:getTagsTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key of the resource tag.\n"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "All values corresponding to the key.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Evs/VolumeAttachment:VolumeAttachment": {
            "properties": {
                "attachedAt": {
                    "type": "string"
                },
                "attachedVolumeId": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attachedAt",
                        "attachedVolumeId",
                        "device",
                        "hostName",
                        "id",
                        "instanceId",
                        "volumeId"
                    ]
                }
            }
        },
        "cloudru:Evs/VolumeIopsAttribute:VolumeIopsAttribute": {
            "properties": {
                "frozened": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "totalVal": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "frozened",
                        "id",
                        "totalVal"
                    ]
                }
            }
        },
        "cloudru:Evs/VolumeLink:VolumeLink": {
            "properties": {
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "href",
                        "rel"
                    ]
                }
            }
        },
        "cloudru:Evs/VolumeThroughputAttribute:VolumeThroughputAttribute": {
            "properties": {
                "frozened": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "totalVal": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "frozened",
                        "id",
                        "totalVal"
                    ]
                }
            }
        },
        "cloudru:Evs/getVolumesVolume:getVolumesVolume": {
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/getVolumesVolumeAttachment:getVolumesVolumeAttachment"
                    }
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bootable": {
                    "type": "boolean"
                },
                "createAt": {
                    "type": "string"
                },
                "dedicatedStorageId": {
                    "type": "string"
                },
                "dedicatedStorageName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "iops": {
                    "type": "integer"
                },
                "iopsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/getVolumesVolumeIopsAttribute:getVolumesVolumeIopsAttribute"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/getVolumesVolumeLink:getVolumesVolumeLink"
                    }
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "shareable": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "throughput": {
                    "type": "integer"
                },
                "throughputAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/getVolumesVolumeThroughputAttribute:getVolumesVolumeThroughputAttribute"
                    }
                },
                "updateAt": {
                    "type": "string"
                },
                "volumeImageMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "volumeType": {
                    "type": "string"
                },
                "wwn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachments",
                "availabilityZone",
                "bootable",
                "createAt",
                "dedicatedStorageId",
                "dedicatedStorageName",
                "description",
                "enterpriseProjectId",
                "id",
                "iops",
                "iopsAttributes",
                "links",
                "metadata",
                "name",
                "serialNumber",
                "serviceType",
                "shareable",
                "size",
                "snapshotId",
                "status",
                "tags",
                "throughput",
                "throughputAttributes",
                "updateAt",
                "volumeImageMetadata",
                "volumeType",
                "wwn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Evs/getVolumesVolumeAttachment:getVolumesVolumeAttachment": {
            "properties": {
                "attachedAt": {
                    "type": "string"
                },
                "attachedMode": {
                    "type": "string"
                },
                "attachedVolumeId": {
                    "type": "string"
                },
                "deviceName": {
                    "type": "string"
                },
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attachedAt",
                "attachedMode",
                "attachedVolumeId",
                "deviceName",
                "hostName",
                "id",
                "serverId",
                "volumeId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Evs/getVolumesVolumeIopsAttribute:getVolumesVolumeIopsAttribute": {
            "properties": {
                "frozened": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "totalVal": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "frozened",
                "id",
                "totalVal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Evs/getVolumesVolumeLink:getVolumesVolumeLink": {
            "properties": {
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "href",
                "rel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Evs/getVolumesVolumeThroughputAttribute:getVolumesVolumeThroughputAttribute": {
            "properties": {
                "frozened": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "totalVal": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "frozened",
                "id",
                "totalVal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:FunctionGraph/FunctionCustomImage:FunctionCustomImage": {
            "properties": {
                "args": {
                    "type": "string",
                    "description": "The command line arguments used to start the SWR image.\n"
                },
                "command": {
                    "type": "string",
                    "description": "The startup commands of the SWR image.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of SWR image.\n"
                },
                "userGroupId": {
                    "type": "string",
                    "description": "The user group ID that used to run SWR image.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID that used to run SWR image.\n"
                },
                "workingDir": {
                    "type": "string",
                    "description": "The working directory of the SWR image.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "url",
                        "workingDir"
                    ]
                }
            }
        },
        "cloudru:FunctionGraph/FunctionFuncMount:FunctionFuncMount": {
            "properties": {
                "localMountPath": {
                    "type": "string",
                    "description": "The function access path.\n"
                },
                "mountResource": {
                    "type": "string",
                    "description": "The ID of the mounted resource (corresponding cloud service).\n"
                },
                "mountSharePath": {
                    "type": "string",
                    "description": "The remote mount path.\n"
                },
                "mountType": {
                    "type": "string",
                    "description": "The mount type.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The mount status.\n"
                }
            },
            "type": "object",
            "required": [
                "localMountPath",
                "mountResource",
                "mountSharePath",
                "mountType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "localMountPath",
                        "mountResource",
                        "mountSharePath",
                        "mountType",
                        "status"
                    ]
                }
            }
        },
        "cloudru:FunctionGraph/FunctionNetworkController:FunctionNetworkController": {
            "properties": {
                "disablePublicNetwork": {
                    "type": "boolean",
                    "description": "Whether to disable the public network access.\n"
                },
                "triggerAccessVpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionNetworkControllerTriggerAccessVpc:FunctionNetworkControllerTriggerAccessVpc"
                    },
                    "description": "The configuration of the VPCs that can trigger the function.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "triggerAccessVpcs"
                    ]
                }
            }
        },
        "cloudru:FunctionGraph/FunctionNetworkControllerTriggerAccessVpc:FunctionNetworkControllerTriggerAccessVpc": {
            "properties": {
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC that can trigger the function.\n"
                },
                "vpcName": {
                    "type": "string",
                    "description": "The ID of the VPC that can trigger the function.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "vpcId",
                        "vpcName"
                    ]
                }
            }
        },
        "cloudru:FunctionGraph/FunctionReservedInstance:FunctionReservedInstance": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of reserved instance.\n"
                },
                "idleMode": {
                    "type": "boolean",
                    "description": "Whether to enable the idle mode.\n"
                },
                "qualifierName": {
                    "type": "string",
                    "description": "The version name or alias name.\n"
                },
                "qualifierType": {
                    "type": "string",
                    "description": "The qualifier type of reserved instance.\n"
                },
                "tacticsConfig": {
                    "$ref": "#/types/cloudru:FunctionGraph/FunctionReservedInstanceTacticsConfig:FunctionReservedInstanceTacticsConfig",
                    "description": "The auto scaling policies for reserved instance.\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "qualifierName",
                "qualifierType"
            ]
        },
        "cloudru:FunctionGraph/FunctionReservedInstanceTacticsConfig:FunctionReservedInstanceTacticsConfig": {
            "properties": {
                "cronConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionReservedInstanceTacticsConfigCronConfig:FunctionReservedInstanceTacticsConfigCronConfig"
                    },
                    "description": "The list of scheduled policy configurations.\n"
                },
                "metricConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionReservedInstanceTacticsConfigMetricConfig:FunctionReservedInstanceTacticsConfigMetricConfig"
                    },
                    "description": "The list of metric policy configurations.\n"
                }
            },
            "type": "object"
        },
        "cloudru:FunctionGraph/FunctionReservedInstanceTacticsConfigCronConfig:FunctionReservedInstanceTacticsConfigCronConfig": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of reserved instance to which the policy belongs.\n"
                },
                "cron": {
                    "type": "string",
                    "description": "The cron expression.\n"
                },
                "expiredTime": {
                    "type": "integer",
                    "description": "The expiration timestamp of the policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of scheduled policy configuration.\n"
                },
                "startTime": {
                    "type": "integer",
                    "description": "The effective timestamp of policy.\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "cron",
                "expiredTime",
                "name",
                "startTime"
            ]
        },
        "cloudru:FunctionGraph/FunctionReservedInstanceTacticsConfigMetricConfig:FunctionReservedInstanceTacticsConfigMetricConfig": {
            "properties": {
                "min": {
                    "type": "integer",
                    "description": "The minimun of traffic.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of metric policy.\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The metric policy threshold.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of metric policy.\n"
                }
            },
            "type": "object",
            "required": [
                "min",
                "name",
                "threshold",
                "type"
            ]
        },
        "cloudru:FunctionGraph/FunctionVersion:FunctionVersion": {
            "properties": {
                "aliases": {
                    "$ref": "#/types/cloudru:FunctionGraph/FunctionVersionAliases:FunctionVersionAliases",
                    "description": "The aliases management for specified version.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the version.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The version name.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:FunctionGraph/FunctionVersionAliases:FunctionVersionAliases": {
            "properties": {
                "additionalVersionStrategy": {
                    "type": "string",
                    "description": "The description of the version alias.\n"
                },
                "additionalVersionWeights": {
                    "type": "string",
                    "description": "The percentage grayscale configuration of the version alias.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the version alias.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the version alias.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:FunctionGraph/getDependenciesPackage:getDependenciesPackage": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "The unique ID of the dependency package.\n"
                },
                "fileName": {
                    "type": "string",
                    "description": "The file name of the stored dependency package.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the dependency package.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The OBS bucket path where the dependency package is located (FunctionGraph serivce side).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dependency package.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the dependency package.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The runtime of the dependency package.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the dependency package.\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/getDependenciesPackageVersion:getDependenciesPackageVersion"
                    },
                    "description": "The list of the versions for the dependency package.\n"
                }
            },
            "type": "object",
            "required": [
                "etag",
                "fileName",
                "id",
                "link",
                "name",
                "owner",
                "runtime",
                "size",
                "versions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:FunctionGraph/getDependenciesPackageVersion:getDependenciesPackageVersion": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the dependency package version.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The dependency package version.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Iam/AclIpCidr:AclIpCidr": {
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cidr"
            ]
        },
        "cloudru:Iam/AclIpRange:AclIpRange": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "range": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "range"
            ]
        },
        "cloudru:Iam/AgencyProjectRole:AgencyProjectRole": {
            "properties": {
                "project": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "project",
                "roles"
            ]
        },
        "cloudru:Iam/ProviderAccessConfig:ProviderAccessConfig": {
            "properties": {
                "accessType": {
                    "type": "string"
                },
                "authorizationEndpoint": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "providerUrl": {
                    "type": "string"
                },
                "responseMode": {
                    "type": "string"
                },
                "responseType": {
                    "type": "string"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessType",
                "clientId",
                "providerUrl",
                "signingKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessType",
                        "authorizationEndpoint",
                        "clientId",
                        "providerUrl",
                        "responseMode",
                        "responseType",
                        "scopes",
                        "signingKey"
                    ]
                }
            }
        },
        "cloudru:Iam/ProviderConversionConversionRule:ProviderConversionConversionRule": {
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionConversionRuleLocal:ProviderConversionConversionRuleLocal"
                    }
                },
                "remotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionConversionRuleRemote:ProviderConversionConversionRuleRemote"
                    }
                }
            },
            "type": "object",
            "required": [
                "locals",
                "remotes"
            ]
        },
        "cloudru:Iam/ProviderConversionConversionRuleLocal:ProviderConversionConversionRuleLocal": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudru:Iam/ProviderConversionConversionRuleRemote:ProviderConversionConversionRuleRemote": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "attribute"
            ]
        },
        "cloudru:Iam/ProviderConversionRule:ProviderConversionRule": {
            "properties": {
                "locals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionRuleLocal:ProviderConversionRuleLocal"
                    }
                },
                "remotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionRuleRemote:ProviderConversionRuleRemote"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "locals",
                        "remotes"
                    ]
                }
            }
        },
        "cloudru:Iam/ProviderConversionRuleLocal:ProviderConversionRuleLocal": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "group",
                        "username"
                    ]
                }
            }
        },
        "cloudru:Iam/ProviderConversionRuleRemote:ProviderConversionRuleRemote": {
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "attribute",
                        "condition",
                        "values"
                    ]
                }
            }
        },
        "cloudru:Iam/getGroupUser:getGroupUser": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordExpiresAt": {
                    "type": "string"
                },
                "passwordStatus": {
                    "type": "boolean"
                },
                "passwordStrength": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "id",
                "name",
                "passwordExpiresAt",
                "passwordStatus",
                "passwordStrength"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Iam/getProjectsProject:getProjectsProject": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Iam/getUsersUser:getUsersUser": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passwordExpiresAt": {
                    "type": "string"
                },
                "passwordStatus": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "description",
                "enabled",
                "groups",
                "id",
                "name",
                "passwordExpiresAt",
                "passwordStatus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Ims/getImagesImage:getImagesImage": {
            "properties": {
                "__supportAgentList": {
                    "type": "string"
                },
                "activeAt": {
                    "type": "string"
                },
                "architecture": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "containerFormat": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dataOrigin": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskFormat": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageType": {
                    "type": "string"
                },
                "maxRamMb": {
                    "type": "integer"
                },
                "minDiskGb": {
                    "type": "integer"
                },
                "minRamMb": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "protected": {
                    "type": "boolean"
                },
                "schema": {
                    "type": "string"
                },
                "sizeBytes": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "__supportAgentList",
                "activeAt",
                "architecture",
                "backupId",
                "containerFormat",
                "createdAt",
                "dataOrigin",
                "description",
                "diskFormat",
                "enterpriseProjectId",
                "file",
                "id",
                "imageType",
                "maxRamMb",
                "minDiskGb",
                "minRamMb",
                "name",
                "os",
                "osVersion",
                "owner",
                "protected",
                "schema",
                "sizeBytes",
                "status",
                "updatedAt",
                "visibility"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Mrs/clusterAnalysisCoreNodes:clusterAnalysisCoreNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargingMode",
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "cloudru:Mrs/clusterAnalysisTaskNodes:clusterAnalysisTaskNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "cloudru:Mrs/clusterBootstrapScript:clusterBootstrapScript": {
            "properties": {
                "activeMaster": {
                    "type": "boolean",
                    "description": "Whether the bootstrap action script runs only on active master nodes.\n",
                    "willReplaceOnChanges": true
                },
                "beforeComponentStart": {
                    "type": "boolean",
                    "description": "Whether the bootstrap action script is executed before component start.\n",
                    "willReplaceOnChanges": true
                },
                "executeNeedSudoRoot": {
                    "type": "boolean",
                    "description": "Whether the bootstrap action script involves root user operations.\n",
                    "willReplaceOnChanges": true
                },
                "failAction": {
                    "type": "string",
                    "description": "The action after the bootstrap action script fails to be executed.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of a bootstrap action script.\n",
                    "willReplaceOnChanges": true
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name of the node group where the bootstrap action script is executed.\n",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "string",
                    "description": "Bootstrap action script parameters.\n",
                    "willReplaceOnChanges": true
                },
                "startTime": {
                    "type": "string",
                    "description": "The execution time of one bootstrap action script, in RFC-3339 format.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The status of one bootstrap action script.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "failAction",
                "name",
                "nodes",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "activeMaster",
                        "beforeComponentStart",
                        "executeNeedSudoRoot",
                        "failAction",
                        "name",
                        "nodes",
                        "startTime",
                        "state",
                        "uri"
                    ]
                }
            }
        },
        "cloudru:Mrs/clusterComponentConfig:clusterComponentConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterComponentConfigConfig:clusterComponentConfigConfig"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "configs",
                "name"
            ]
        },
        "cloudru:Mrs/clusterComponentConfigConfig:clusterComponentConfigConfig": {
            "properties": {
                "configFileName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "configFileName",
                "key",
                "value"
            ]
        },
        "cloudru:Mrs/clusterCustomNode:clusterCustomNode": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "groupName",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargingMode",
                        "dataVolumeCount",
                        "flavor",
                        "groupName",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "cloudru:Mrs/clusterExternalDatasource:clusterExternalDatasource": {
            "properties": {
                "componentName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataConnectionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "componentName",
                "roleType",
                "sourceType"
            ]
        },
        "cloudru:Mrs/clusterMasterNodes:clusterMasterNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargingMode",
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "cloudru:Mrs/clusterSmnNotify:clusterSmnNotify": {
            "properties": {
                "subscriptionName": {
                    "type": "string",
                    "description": "The subscription rule name.\n",
                    "willReplaceOnChanges": true
                },
                "topicUrn": {
                    "type": "string",
                    "description": "The Uniform Resource Name (URN) of the topic.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "subscriptionName",
                "topicUrn"
            ]
        },
        "cloudru:Mrs/clusterStreamingCoreNodes:clusterStreamingCoreNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargingMode",
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "cloudru:Mrs/clusterStreamingTaskNodes:clusterStreamingTaskNodes": {
            "properties": {
                "assignedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dataVolumeCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "dataVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hostIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNumber": {
                    "type": "integer"
                },
                "rootVolumeSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "rootVolumeType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "dataVolumeCount",
                "flavor",
                "nodeNumber",
                "rootVolumeSize",
                "rootVolumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dataVolumeCount",
                        "flavor",
                        "hostIps",
                        "nodeNumber",
                        "rootVolumeSize",
                        "rootVolumeType"
                    ]
                }
            }
        },
        "cloudru:Nat/GatewaySessionConf:GatewaySessionConf": {
            "properties": {
                "icmpSessionExpireTime": {
                    "type": "integer",
                    "description": "The ICMP session expiration time.\n"
                },
                "tcpSessionExpireTime": {
                    "type": "integer",
                    "description": "The TCP session expiration time.\n"
                },
                "tcpTimeWaitTime": {
                    "type": "integer",
                    "description": "The duration of TIME_WAIT state when TCP connection is closed.\n"
                },
                "udpSessionExpireTime": {
                    "type": "integer",
                    "description": "The UDP session expiration time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "icmpSessionExpireTime",
                        "tcpSessionExpireTime",
                        "tcpTimeWaitTime",
                        "udpSessionExpireTime"
                    ]
                }
            }
        },
        "cloudru:Obs/BucketCorsRule:BucketCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "maxAgeSeconds": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ]
        },
        "cloudru:Obs/BucketLifecycleRule:BucketLifecycleRule": {
            "properties": {
                "abortIncompleteMultipartUploads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRuleAbortIncompleteMultipartUpload:BucketLifecycleRuleAbortIncompleteMultipartUpload"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "expirations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRuleExpiration:BucketLifecycleRuleExpiration"
                    }
                },
                "name": {
                    "type": "string"
                },
                "noncurrentVersionExpirations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRuleNoncurrentVersionExpiration:BucketLifecycleRuleNoncurrentVersionExpiration"
                    }
                },
                "noncurrentVersionTransitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRuleNoncurrentVersionTransition:BucketLifecycleRuleNoncurrentVersionTransition"
                    }
                },
                "prefix": {
                    "type": "string"
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRuleTransition:BucketLifecycleRuleTransition"
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "name"
            ]
        },
        "cloudru:Obs/BucketLifecycleRuleAbortIncompleteMultipartUpload:BucketLifecycleRuleAbortIncompleteMultipartUpload": {
            "properties": {
                "days": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "cloudru:Obs/BucketLifecycleRuleExpiration:BucketLifecycleRuleExpiration": {
            "properties": {
                "days": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "cloudru:Obs/BucketLifecycleRuleNoncurrentVersionExpiration:BucketLifecycleRuleNoncurrentVersionExpiration": {
            "properties": {
                "days": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "cloudru:Obs/BucketLifecycleRuleNoncurrentVersionTransition:BucketLifecycleRuleNoncurrentVersionTransition": {
            "properties": {
                "days": {
                    "type": "integer"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "days",
                "storageClass"
            ]
        },
        "cloudru:Obs/BucketLifecycleRuleTransition:BucketLifecycleRuleTransition": {
            "properties": {
                "days": {
                    "type": "integer"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "days",
                "storageClass"
            ]
        },
        "cloudru:Obs/BucketLogging:BucketLogging": {
            "properties": {
                "agency": {
                    "type": "string",
                    "description": "schema: Required\n"
                },
                "targetBucket": {
                    "type": "string"
                },
                "targetPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "targetBucket"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agency",
                        "targetBucket"
                    ]
                }
            }
        },
        "cloudru:Obs/BucketStorageInfo:BucketStorageInfo": {
            "properties": {
                "objectNumber": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "objectNumber",
                        "size"
                    ]
                }
            }
        },
        "cloudru:Obs/BucketWebsite:BucketWebsite": {
            "properties": {
                "errorDocument": {
                    "type": "string"
                },
                "indexDocument": {
                    "type": "string"
                },
                "redirectAllRequestsTo": {
                    "type": "string"
                },
                "routingRules": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudru:Obs/getBucketsBucket:getBucketsBucket": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "createdAt",
                "enterpriseProjectId",
                "region",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/BackupDatabase:BackupDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Database to be backed up for Microsoft SQL Server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudru:Rds/InstanceBackupStrategy:InstanceBackupStrategy": {
            "properties": {
                "keepDays": {
                    "type": "integer",
                    "description": "schema: Required\n"
                },
                "period": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keepDays",
                        "period",
                        "startTime"
                    ]
                }
            }
        },
        "cloudru:Rds/InstanceDb:InstanceDb": {
            "properties": {
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "port",
                        "type",
                        "userName",
                        "version"
                    ]
                }
            }
        },
        "cloudru:Rds/InstanceMsdtcHost:InstanceMsdtcHost": {
            "properties": {
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostName",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostName",
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "cloudru:Rds/InstanceNode:InstanceNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "id",
                        "name",
                        "role",
                        "status"
                    ]
                }
            }
        },
        "cloudru:Rds/InstanceParameter:InstanceParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:Rds/InstanceRestore:InstanceRestore": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "databaseName": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "backupId",
                "instanceId"
            ]
        },
        "cloudru:Rds/InstanceVolume:InstanceVolume": {
            "properties": {
                "diskEncryptionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "limitSize": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "triggerThreshold": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskEncryptionId",
                        "size",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Rds/MysqlDatabasePrivilegeUser:MysqlDatabasePrivilegeUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the database account.\n"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Specifies the read-only permission.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "readonly"
                    ]
                }
            }
        },
        "cloudru:Rds/MysqlDatabaseTableRestoreDatabase:MysqlDatabaseTableRestoreDatabase": {
            "properties": {
                "newName": {
                    "type": "string",
                    "description": "Specifies the name of the database after restoration.\n",
                    "willReplaceOnChanges": true
                },
                "oldName": {
                    "type": "string",
                    "description": "Specifies the name of the database before restoration.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "newName",
                "oldName"
            ]
        },
        "cloudru:Rds/MysqlDatabaseTableRestoreRestoreTable:MysqlDatabaseTableRestoreRestoreTable": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Specifies the database name.\n",
                    "willReplaceOnChanges": true
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreRestoreTableTable:MysqlDatabaseTableRestoreRestoreTableTable"
                    },
                    "description": "Specifies the tables.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "database",
                "tables"
            ]
        },
        "cloudru:Rds/MysqlDatabaseTableRestoreRestoreTableTable:MysqlDatabaseTableRestoreRestoreTableTable": {
            "properties": {
                "newName": {
                    "type": "string",
                    "description": "Specifies the name of the table after restoration.\n",
                    "willReplaceOnChanges": true
                },
                "oldName": {
                    "type": "string",
                    "description": "Specifies the name of the table before restoration.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "newName",
                "oldName"
            ]
        },
        "cloudru:Rds/ParametergroupConfigurationParameter:ParametergroupConfigurationParameter": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                },
                "restartRequired": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueRange": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "name",
                        "readonly",
                        "restartRequired",
                        "type",
                        "value",
                        "valueRange"
                    ]
                }
            }
        },
        "cloudru:Rds/ParametergroupDatastore:ParametergroupDatastore": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ]
        },
        "cloudru:Rds/PgAccountAttribute:PgAccountAttribute": {
            "properties": {
                "rolBypassRls": {
                    "type": "boolean",
                    "description": "Indicates whether a user bypasses each row-level security policy.\n"
                },
                "rolCanLogin": {
                    "type": "boolean",
                    "description": "Indicates whether a user can log in to the database.\n"
                },
                "rolConnLimit": {
                    "type": "integer",
                    "description": "Indicates the maximum number of concurrent connections to a DB instance.\n"
                },
                "rolCreateDb": {
                    "type": "boolean",
                    "description": "Indicates whether a user can create a database.\n"
                },
                "rolCreateRole": {
                    "type": "boolean",
                    "description": "Indicates whether a user can create other sub-users.\n"
                },
                "rolInherit": {
                    "type": "boolean",
                    "description": "Indicates whether a user automatically inherits the permissions of the role to which the\nuser belongs.\n"
                },
                "rolReplication": {
                    "type": "boolean",
                    "description": "Indicates whether the user is a replication role.\n"
                },
                "rolSuper": {
                    "type": "boolean",
                    "description": "Indicates whether a user has the super-user permission.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "rolBypassRls",
                        "rolCanLogin",
                        "rolConnLimit",
                        "rolCreateDb",
                        "rolCreateRole",
                        "rolInherit",
                        "rolReplication",
                        "rolSuper"
                    ]
                }
            }
        },
        "cloudru:Rds/PgHbaHostBasedAuthentication:PgHbaHostBasedAuthentication": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Specifies the client IP address.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Specifies the database name.\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Specifies the subnet mask.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Specifies the authentication mode.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the connection type.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Specifies the Name of a user.\n"
                }
            },
            "type": "object",
            "required": [
                "address",
                "database",
                "method",
                "type",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "database",
                        "mask",
                        "method",
                        "type",
                        "user"
                    ]
                }
            }
        },
        "cloudru:Rds/ReadReplicaInstanceDb:ReadReplicaInstanceDb": {
            "properties": {
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "port",
                        "type",
                        "userName",
                        "version"
                    ]
                }
            }
        },
        "cloudru:Rds/ReadReplicaInstanceParameter:ReadReplicaInstanceParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:Rds/ReadReplicaInstanceVolume:ReadReplicaInstanceVolume": {
            "properties": {
                "diskEncryptionId": {
                    "type": "string",
                    "description": "schema: Computed\n"
                },
                "limitSize": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "triggerThreshold": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "diskEncryptionId",
                        "size",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Rds/SqlserverDatabasePrivilegeUser:SqlserverDatabasePrivilegeUser": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the database account.\n"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Specifies the read-only permission.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "readonly"
                    ]
                }
            }
        },
        "cloudru:Rds/getBackupsBackup:getBackupsBackup": {
            "properties": {
                "associatedWithDdm": {
                    "type": "boolean",
                    "description": "Whether a DDM instance has been associated.\n"
                },
                "beginTime": {
                    "type": "string",
                    "description": "Backup start time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getBackupsBackupDatabase:getBackupsBackupDatabase"
                    },
                    "description": "Database been backed up.\n"
                },
                "datastores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getBackupsBackupDatastore:getBackupsBackupDatastore"
                    }
                },
                "endTime": {
                    "type": "string",
                    "description": "Backup end time in the \"yyyy-mm-ddThh:mm:ssZ\" format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Backup ID.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "RDS instance ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Backup name.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Backup size in KB.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Backup type.\n"
                }
            },
            "type": "object",
            "required": [
                "associatedWithDdm",
                "beginTime",
                "databases",
                "datastores",
                "endTime",
                "id",
                "instanceId",
                "name",
                "size",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getBackupsBackupDatabase:getBackupsBackupDatabase": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Database to be backed up for Microsoft SQL Server.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getBackupsBackupDatastore:getBackupsBackupDatastore": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "DB engine.\n"
                },
                "version": {
                    "type": "string",
                    "description": "DB engine version.\n"
                }
            },
            "type": "object",
            "required": [
                "type",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getEngineVersionsVersion:getEngineVersionsVersion": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dbVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceMode": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string",
                    "deprecationMessage": "use instance_mode instead"
                },
                "name": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "dbVersions",
                "groupType",
                "id",
                "instanceMode",
                "memory",
                "mode",
                "name",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getInstancesInstance:getInstancesInstance": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backupStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getInstancesInstanceBackupStrategy:getInstancesInstanceBackupStrategy"
                    }
                },
                "created": {
                    "type": "string"
                },
                "dbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getInstancesInstanceDb:getInstancesInstanceDb"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "haReplicationMode": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getInstancesInstanceNode:getInstancesInstanceNode"
                    }
                },
                "paramGroupId": {
                    "type": "string"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timeZone": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getInstancesInstanceVolume:getInstancesInstanceVolume"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "backupStrategies",
                "created",
                "dbs",
                "enterpriseProjectId",
                "fixedIp",
                "flavor",
                "haReplicationMode",
                "id",
                "name",
                "nodes",
                "paramGroupId",
                "privateIps",
                "publicIps",
                "region",
                "securityGroupId",
                "sslEnable",
                "status",
                "subnetId",
                "tags",
                "timeZone",
                "volumes",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getInstancesInstanceBackupStrategy:getInstancesInstanceBackupStrategy": {
            "properties": {
                "keepDays": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "keepDays",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getInstancesInstanceDb:getInstancesInstanceDb": {
            "properties": {
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "port",
                "type",
                "userName",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getInstancesInstanceNode:getInstancesInstanceNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "id",
                "name",
                "role",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getInstancesInstanceVolume:getInstancesInstanceVolume": {
            "properties": {
                "diskEncryptionId": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "diskEncryptionId",
                "size",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getPgAccountsUser:getPgAccountsUser": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/getPgAccountsUserAttribute:getPgAccountsUserAttribute"
                    }
                },
                "description": {
                    "type": "string"
                },
                "memberofs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "description",
                "memberofs",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getPgAccountsUserAttribute:getPgAccountsUserAttribute": {
            "properties": {
                "rolbypassrls": {
                    "type": "boolean"
                },
                "rolcanlogin": {
                    "type": "boolean"
                },
                "rolconnlimit": {
                    "type": "integer"
                },
                "rolcreatedb": {
                    "type": "boolean"
                },
                "rolcreaterole": {
                    "type": "boolean"
                },
                "rolinherit": {
                    "type": "boolean"
                },
                "rolreplication": {
                    "type": "boolean"
                },
                "rolsuper": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "rolbypassrls",
                "rolcanlogin",
                "rolconnlimit",
                "rolcreatedb",
                "rolcreaterole",
                "rolinherit",
                "rolreplication",
                "rolsuper"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getPgDatabasesDatabase:getPgDatabasesDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lcCollate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "characterSet",
                "description",
                "lcCollate",
                "name",
                "owner",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getPgPluginsPlugin:getPgPluginsPlugin": {
            "properties": {
                "created": {
                    "type": "boolean",
                    "description": "Indicates whether the plugin has been created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Indicates the plugin description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the plugin name.\n"
                },
                "sharedPreloadLibraries": {
                    "type": "string",
                    "description": "Indicates the dependent preloaded library.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the plugin version.\n"
                }
            },
            "type": "object",
            "required": [
                "created",
                "description",
                "name",
                "sharedPreloadLibraries",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getPgSqlLimitsSqlLimit:getPgSqlLimitsSqlLimit": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of SQL limit.\n"
                },
                "isEffective": {
                    "type": "boolean",
                    "description": "Indicates whether the SQL limit is effective.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "Indicates the number of SQL statements executed simultaneously.\n"
                },
                "maxWaiting": {
                    "type": "integer",
                    "description": "Indicates the max waiting time in seconds.\n"
                },
                "queryId": {
                    "type": "string",
                    "description": "Indicates the query ID.\n"
                },
                "queryString": {
                    "type": "string",
                    "description": "Indicates the text form of SQL statement.\n"
                },
                "searchPath": {
                    "type": "string",
                    "description": "Indicates the query order for names that are not schema qualified.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isEffective",
                "maxConcurrency",
                "maxWaiting",
                "queryId",
                "queryString",
                "searchPath"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Rds/getStorageTypesStorageType:getStorageTypesStorageType": {
            "properties": {
                "azStatus": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The status details of the AZs to which the specification belongs.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Storage type.\n"
                },
                "supportComputeGroupTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Performance specifications.\n"
                }
            },
            "type": "object",
            "required": [
                "azStatus",
                "name",
                "supportComputeGroupTypes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Sfs/FileSystemAccessRule:FileSystemAccessRule": {
            "properties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessRuleId": {
                    "type": "string"
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "accessLevel",
                        "accessRuleId",
                        "accessTo",
                        "accessType",
                        "status"
                    ]
                }
            }
        },
        "cloudru:Sfs/getTurbosTurbo:getTurbosTurbo": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "availableCapacity": {
                    "type": "string"
                },
                "cryptKeyId": {
                    "type": "string"
                },
                "enhanced": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "exportLocation": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string"
                },
                "shareType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "subnetId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "availableCapacity",
                "cryptKeyId",
                "enhanced",
                "enterpriseProjectId",
                "exportLocation",
                "id",
                "name",
                "securityGroupId",
                "shareProto",
                "shareType",
                "size",
                "subnetId",
                "version",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:SharedApig/ApiBackendParam:ApiBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:SharedApig/ApiFuncGraph:ApiFuncGraph": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation type.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "functionUrn"
            ]
        },
        "cloudru:SharedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiFuncGraphPolicyBackendParam:ApiFuncGraphPolicyBackendParam"
                    },
                    "description": "The configaiton list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiFuncGraphPolicyCondition:ApiFuncGraphPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "invocationMode": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend policy.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "functionUrn",
                "name"
            ]
        },
        "cloudru:SharedApig/ApiFuncGraphPolicyBackendParam:ApiFuncGraphPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:SharedApig/ApiFuncGraphPolicyCondition:ApiFuncGraphPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:SharedApig/ApiMock:ApiMock": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:SharedApig/ApiMockPolicy:ApiMockPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiMockPolicyBackendParam:ApiMockPolicyBackendParam"
                    },
                    "description": "The configuration list of backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiMockPolicyCondition:ApiMockPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The backend policy name.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response content of the mock.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "conditions",
                        "name",
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:SharedApig/ApiMockPolicyBackendParam:ApiMockPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:SharedApig/ApiMockPolicyCondition:ApiMockPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:SharedApig/ApiRequestParam:ApiRequestParam": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value of the parameter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The parameter description.\n"
                },
                "enumeration": {
                    "type": "string",
                    "description": "The enumerated value.\n"
                },
                "example": {
                    "type": "string",
                    "description": "The parameter example.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where this parameter is located.\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum value or length (string parameter) for parameter.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum value or length (string parameter) for parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request parameter.\n"
                },
                "orchestrations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of orchestration rules that parameter used.\n"
                },
                "passthrough": {
                    "type": "boolean",
                    "description": "Whether to transparently transfer the parameter.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether this parameter is required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "validEnable": {
                    "type": "integer",
                    "description": "Whether to enable the parameter validation.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "default",
                        "description",
                        "enumeration",
                        "example",
                        "maximum",
                        "minimum",
                        "name",
                        "passthrough",
                        "required",
                        "validEnable"
                    ]
                }
            }
        },
        "cloudru:SharedApig/ApiWeb:ApiWeb": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address, which consists of a domain name or IP address, and a port number.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request path.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The web protocol type of the API request.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "cloudru:SharedApig/ApiWebPolicy:ApiWebPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiWebPolicyBackendParam:ApiWebPolicyBackendParam"
                    },
                    "description": "The configuration list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiWebPolicyCondition:ApiWebPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web policy.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request address.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The backend request protocol.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "conditions",
                "name",
                "path",
                "requestMethod"
            ]
        },
        "cloudru:SharedApig/ApiWebPolicyBackendParam:ApiWebPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The parameter name.\n"
                },
                "systemParamType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "type",
                "value"
            ]
        },
        "cloudru:SharedApig/ApiWebPolicyCondition:ApiWebPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "mappedParamLocation": {
                    "type": "string",
                    "description": "The location of a parameter generated after orchestration.\n"
                },
                "mappedParamName": {
                    "type": "string",
                    "description": "The name of a parameter generated after orchestration.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the backend policy.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:SharedApig/GroupEnvironment:GroupEnvironment": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment to which the variables belongs.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/GroupEnvironmentVariable:GroupEnvironmentVariable"
                    },
                    "description": "The array of one or more environment variables.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "variables"
            ]
        },
        "cloudru:SharedApig/GroupEnvironmentVariable:GroupEnvironmentVariable": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the variable that the group has.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The variable name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The variable value.\n"
                },
                "variableId": {
                    "type": "string",
                    "description": "schema: Deprecated; The ID of the variable that the group has.\n",
                    "deprecationMessage": "Use 'id' instead"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "value",
                        "variableId"
                    ]
                }
            }
        },
        "cloudru:SharedApig/GroupUrlDomain:GroupUrlDomain": {
            "properties": {
                "isHttpRedirectToHttps": {
                    "type": "boolean",
                    "description": "Whether to enable redirection from HTTP to HTTPS.\n"
                },
                "minSslVersion": {
                    "type": "string",
                    "description": "The minimum SSL protocol version.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The associated domain name.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "isHttpRedirectToHttps",
                        "minSslVersion",
                        "name"
                    ]
                }
            }
        },
        "cloudru:Vpc/AddressGroupIpExtraSet:AddressGroupIpExtraSet": {
            "properties": {
                "ip": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "cloudru:Vpc/BandwidthPublicip:BandwidthPublicip": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "cloudru:Vpc/EipBandwidth:EipBandwidth": {
            "properties": {
                "chargeMode": {
                    "type": "string",
                    "description": "Whether the bandwidth is billed by traffic or by bandwidth size.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The shared bandwidth ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The dedicated bandwidth name.\n"
                },
                "shareType": {
                    "type": "string",
                    "description": "Whether the bandwidth is dedicated or shared.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "The dedicated bandwidth size.\n"
                }
            },
            "type": "object",
            "required": [
                "shareType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "chargeMode",
                        "id",
                        "name",
                        "shareType",
                        "size"
                    ]
                }
            }
        },
        "cloudru:Vpc/EipPublicip:EipPublicip": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "The EIP address to be assigned.\n",
                    "willReplaceOnChanges": true
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The IP version.\n"
                },
                "portId": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipAddress",
                        "ipVersion",
                        "portId"
                    ]
                }
            }
        },
        "cloudru:Vpc/RouteTableRoute:RouteTableRoute": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "nexthop",
                "type"
            ]
        },
        "cloudru:Vpc/SecgroupRule:SecgroupRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "portRangeMax": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "portRangeMin": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "ports": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "remoteAddressGroupId": {
                    "type": "string"
                },
                "remoteGroupId": {
                    "type": "string"
                },
                "remoteIpPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "description",
                        "direction",
                        "ethertype",
                        "id",
                        "portRangeMax",
                        "portRangeMin",
                        "ports",
                        "priority",
                        "protocol",
                        "remoteAddressGroupId",
                        "remoteGroupId",
                        "remoteIpPrefix"
                    ]
                }
            }
        },
        "cloudru:Vpc/VpcRoute:VpcRoute": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destination",
                        "nexthop"
                    ]
                }
            }
        },
        "cloudru:Vpc/getAddressGroupsAddressGroup:getAddressGroupsAddressGroup": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP address sets in an IP address group.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time when the IP address group is created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The supplementary information about the IP address group.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Enterprise project ID.\n"
                },
                "id": {
                    "type": "string",
                    "description": "IP address group ID, which uniquely identifies the IP address group.\n"
                },
                "ipExtraSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/getAddressGroupsAddressGroupIpExtraSet:getAddressGroupsAddressGroupIpExtraSet"
                    },
                    "description": "IP addresses and their remarks in an IP address group.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "Whether it is an IPv4 or IPv6 address group.\n"
                },
                "maxCapacity": {
                    "type": "integer",
                    "description": "Maximum number of entries in an address group,\n"
                },
                "name": {
                    "type": "string",
                    "description": "IP address group name.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of IP address group.\n"
                },
                "statusMessage": {
                    "type": "string",
                    "description": "The status details of IP address group.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Time when the IP address group was last updated.\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "id",
                "ipExtraSets",
                "ipVersion",
                "maxCapacity",
                "name",
                "status",
                "statusMessage",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getAddressGroupsAddressGroupIpExtraSet:getAddressGroupsAddressGroupIpExtraSet": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "An IP address, IP address range, or CIDR block.\n"
                },
                "remarks": {
                    "type": "string",
                    "description": "Provides supplementary information about the IP address, IP address range, or CIDR block.\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "remarks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getRouteTableRoute:getRouteTableRoute": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "destination",
                "nexthop",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getRoutesRoute:getRoutesRoute": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The route destination.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The route ID.\n"
                },
                "nexthop": {
                    "type": "string",
                    "description": "The next hop of the route.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The route type.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the route belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "id",
                "nexthop",
                "type",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getSecgroupRule:getSecgroupRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "portRangeMax": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "portRangeMin": {
                    "type": "integer",
                    "description": "schema: Deprecated\n"
                },
                "ports": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "remoteAddressGroupId": {
                    "type": "string"
                },
                "remoteGroupId": {
                    "type": "string"
                },
                "remoteIpPrefix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "action",
                "description",
                "direction",
                "ethertype",
                "id",
                "portRangeMax",
                "portRangeMin",
                "ports",
                "priority",
                "protocol",
                "remoteAddressGroupId",
                "remoteGroupId",
                "remoteIpPrefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getSecgroupsSecurityGroup:getSecgroupsSecurityGroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "enterpriseProjectId",
                "id",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getSubnetsSubnet:getSubnetsSubnet": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dhcpEnable": {
                    "type": "boolean"
                },
                "dnsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gatewayIp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipv4SubnetId": {
                    "type": "string"
                },
                "ipv6Cidr": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "ipv6Gateway": {
                    "type": "string"
                },
                "ipv6SubnetId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primaryDns": {
                    "type": "string"
                },
                "secondaryDns": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "schema: Deprecated\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "cidr",
                "description",
                "dhcpEnable",
                "dnsLists",
                "gatewayIp",
                "id",
                "ipv4SubnetId",
                "ipv6Cidr",
                "ipv6Enable",
                "ipv6Gateway",
                "ipv6SubnetId",
                "name",
                "primaryDns",
                "secondaryDns",
                "status",
                "subnetId",
                "tags",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getVpcRoute:getVpcRoute": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "nexthop"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpc/getVpcsVpc:getVpcsVpc": {
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secondaryCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "description",
                "enterpriseProjectId",
                "id",
                "name",
                "secondaryCidrs",
                "status",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:Vpcep/ServiceConnection:ServiceConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "endpointId": {
                    "type": "string"
                },
                "packetId": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domainId",
                        "endpointId",
                        "packetId",
                        "status"
                    ]
                }
            }
        },
        "cloudru:Vpcep/ServicePortMapping:ServicePortMapping": {
            "properties": {
                "protocol": {
                    "type": "string"
                },
                "servicePort": {
                    "type": "integer",
                    "description": "schema: Required\n"
                },
                "terminalPort": {
                    "type": "integer",
                    "description": "schema: Required\n"
                }
            },
            "type": "object"
        },
        "cloudru:Vpcep/getPublicServicesService:getPublicServicesService": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "isCharge": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isCharge",
                "owner",
                "serviceName",
                "serviceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:config/assumeRole:assumeRole": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agencyName",
                "domainName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication": {
            "properties": {
                "bindTime": {
                    "type": "string",
                    "description": "The binding time, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The application ID bound to the application quota.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bindTime",
                        "id"
                    ]
                }
            }
        },
        "cloudru:index/ApigChannelHealthCheck:ApigChannelHealthCheck": {
            "properties": {
                "enableClientSsl": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "httpCodes": {
                    "type": "string",
                    "description": "The response codes for determining a successful HTTP response.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between consecutive check, in second.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The request method for health check.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The destination path for health check.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The destination host port for health check.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The rotocol for performing health check on backend servers.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of health check.\n"
                },
                "thresholdAbnormal": {
                    "type": "integer",
                    "description": "The unhealthy threshold, which refers to the number of consecutive failed check required for a backend server to be considered unhealthy.\n"
                },
                "thresholdNormal": {
                    "type": "integer",
                    "description": "The the healthy threshold, which refers to the number of consecutive successful checks required for a backend server to be considered healthy.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for determining whether a health check fails, in second.\n"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "protocol",
                "thresholdAbnormal",
                "thresholdNormal",
                "timeout"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enableClientSsl",
                        "httpCodes",
                        "interval",
                        "method",
                        "path",
                        "port",
                        "protocol",
                        "status",
                        "thresholdAbnormal",
                        "thresholdNormal",
                        "timeout"
                    ]
                }
            }
        },
        "cloudru:index/ApigChannelMember:ApigChannelMember": {
            "properties": {
                "groupName": {
                    "type": "string",
                    "description": "The group name of the backend server.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The IP address of the backend server.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend server.\n"
                },
                "isBackup": {
                    "type": "boolean",
                    "description": "Whether this member is the backup member.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend server.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the backend server.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the backend server.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of current backend server.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "groupName",
                        "host",
                        "id",
                        "isBackup",
                        "name",
                        "port",
                        "status",
                        "weight"
                    ]
                }
            }
        },
        "cloudru:index/ApigChannelMemberGroup:ApigChannelMemberGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the member group.\n"
                },
                "microserviceLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The microservice tags of the backend server group.\n"
                },
                "microservicePort": {
                    "type": "integer",
                    "description": "The microservice port of the backend server group.\n"
                },
                "microserviceVersion": {
                    "type": "string",
                    "description": "The microservice version of the backend server group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the member group.\n"
                },
                "referenceVpcChannelId": {
                    "type": "string",
                    "description": "The ID of the reference load balance channel.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the current member group.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "microserviceLabels",
                        "microservicePort",
                        "microserviceVersion",
                        "name",
                        "referenceVpcChannelId",
                        "weight"
                    ]
                }
            }
        },
        "cloudru:index/ApigChannelMicroservice:ApigChannelMicroservice": {
            "properties": {
                "cceConfig": {
                    "$ref": "#/types/cloudru:index/ApigChannelMicroserviceCceConfig:ApigChannelMicroserviceCceConfig",
                    "description": "The CCE microservice details.\n"
                },
                "cseConfig": {
                    "$ref": "#/types/cloudru:index/ApigChannelMicroserviceCseConfig:ApigChannelMicroserviceCseConfig",
                    "description": "schema:Internal; The CSE microservice details.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cceConfig",
                        "cseConfig"
                    ]
                }
            }
        },
        "cloudru:index/ApigChannelMicroserviceCceConfig:ApigChannelMicroserviceCceConfig": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the CCE cluster.\n"
                },
                "labelKey": {
                    "type": "string",
                    "description": "The service label key.\n"
                },
                "labelValue": {
                    "type": "string",
                    "description": "The service label value.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The name of the CCE namespace.\n"
                },
                "workloadName": {
                    "type": "string",
                    "description": "The workload name.\n"
                },
                "workloadType": {
                    "type": "string",
                    "description": "The workload type.\n"
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "namespace",
                "workloadType"
            ]
        },
        "cloudru:index/ApigChannelMicroserviceCseConfig:ApigChannelMicroserviceCseConfig": {
            "properties": {
                "engineId": {
                    "type": "string",
                    "description": "schema:Internal; The microservice engine ID.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "schema:Internal; The microservice ID.\n"
                }
            },
            "type": "object",
            "required": [
                "engineId",
                "serviceId"
            ]
        },
        "cloudru:index/CbrBackupShareMember:CbrBackupShareMember": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the backup shared member.\n"
                },
                "destProjectId": {
                    "type": "string",
                    "description": "The ID of the project with which the backup is shared.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backup shared member record.\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "The ID of the image registered with the shared backup copy.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The backup shared status.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the backup shared member.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the shared backup is stored.\n"
                }
            },
            "type": "object",
            "required": [
                "destProjectId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "destProjectId",
                        "id",
                        "imageId",
                        "status",
                        "updatedAt",
                        "vaultId"
                    ]
                }
            }
        },
        "cloudru:index/CbrCheckpointBackup:CbrCheckpointBackup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The backup ID.\n"
                },
                "protectedAt": {
                    "type": "string",
                    "description": "The backup time.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The ID of backup resource.\n",
                    "willReplaceOnChanges": true
                },
                "resourceSize": {
                    "type": "integer",
                    "description": "The backup resource size.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the backup resource.\n",
                    "willReplaceOnChanges": true
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the backup.\n"
                }
            },
            "type": "object",
            "required": [
                "resourceId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "protectedAt",
                        "resourceId",
                        "resourceSize",
                        "status",
                        "type",
                        "updatedAt"
                    ]
                }
            }
        },
        "cloudru:index/CceClusterUpgradeAddon:CceClusterUpgradeAddon": {
            "properties": {
                "addonTemplateName": {
                    "type": "string"
                },
                "operation": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/types/cloudru:index/CceClusterUpgradeAddonValues:CceClusterUpgradeAddonValues"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "addonTemplateName",
                "operation",
                "version"
            ]
        },
        "cloudru:index/CceClusterUpgradeAddonValues:CceClusterUpgradeAddonValues": {
            "properties": {
                "basicJson": {
                    "type": "string"
                },
                "customJson": {
                    "type": "string"
                },
                "flavorJson": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "cloudru:index/CceClusterUpgradeStrategy:CceClusterUpgradeStrategy": {
            "properties": {
                "inPlaceRollingUpdate": {
                    "$ref": "#/types/cloudru:index/CceClusterUpgradeStrategyInPlaceRollingUpdate:CceClusterUpgradeStrategyInPlaceRollingUpdate"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "cloudru:index/CceClusterUpgradeStrategyInPlaceRollingUpdate:CceClusterUpgradeStrategyInPlaceRollingUpdate": {
            "properties": {
                "userDefinedStep": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cloudru:index/CceNodesRemoveNode:CceNodesRemoveNode": {
            "properties": {
                "uid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "uid"
            ]
        },
        "cloudru:index/DcsParametersConfigurationParameter:DcsParametersConfigurationParameter": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "needRestart": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "userPermission": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "needRestart",
                        "type",
                        "userPermission",
                        "value"
                    ]
                }
            }
        },
        "cloudru:index/DcsRestoreRestoreRecord:DcsRestoreRestoreRecord": {
            "properties": {
                "backupId": {
                    "type": "string"
                },
                "backupName": {
                    "type": "string"
                },
                "backupRemark": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "restoreId": {
                    "type": "string"
                },
                "restoreName": {
                    "type": "string"
                },
                "restoreRemark": {
                    "type": "string"
                },
                "sourceInstanceId": {
                    "type": "string"
                },
                "sourceInstanceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "backupId",
                        "backupName",
                        "backupRemark",
                        "createdAt",
                        "errorCode",
                        "progress",
                        "restoreId",
                        "restoreName",
                        "restoreRemark",
                        "sourceInstanceId",
                        "sourceInstanceName",
                        "status",
                        "updatedAt"
                    ]
                }
            }
        },
        "cloudru:index/DdsParameterTemplateCompareDifference:DdsParameterTemplateCompareDifference": {
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "sourceValue": {
                    "type": "string"
                },
                "targetValue": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "parameterName",
                        "sourceValue",
                        "targetValue"
                    ]
                }
            }
        },
        "cloudru:index/DdsParameterTemplateCopyParameter:DdsParameterTemplateCopyParameter": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Indicates the parameter description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the parameter name.\n"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Indicates whether the parameter is read-only.\n"
                },
                "restartRequired": {
                    "type": "boolean",
                    "description": "Indicates whether the instance needs to be restarted.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Indicates the parameter value.\n"
                },
                "valueRange": {
                    "type": "string",
                    "description": "Indicates the value range.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "name",
                        "readonly",
                        "restartRequired",
                        "type",
                        "value",
                        "valueRange"
                    ]
                }
            }
        },
        "cloudru:index/DdsParameterTemplateParameter:DdsParameterTemplateParameter": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Indicates the parameter description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the parameter name.\n"
                },
                "readonly": {
                    "type": "boolean",
                    "description": "Indicates whether the parameter is read-only.\n"
                },
                "restartRequired": {
                    "type": "boolean",
                    "description": "Indicates whether the instance needs to be restarted.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the parameter type.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Indicates the parameter value.\n"
                },
                "valueRange": {
                    "type": "string",
                    "description": "Indicates the value range.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "name",
                        "readonly",
                        "restartRequired",
                        "type",
                        "value",
                        "valueRange"
                    ]
                }
            }
        },
        "cloudru:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList": {
            "properties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:index/DmsRocketmqConsumptionVerifyResendResult:DmsRocketmqConsumptionVerifyResendResult": {
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "Indicates the error code.\n"
                },
                "errorMessage": {
                    "type": "string",
                    "description": "Indicates the error message.\n"
                },
                "messageId": {
                    "type": "string",
                    "description": "Indicates the message ID.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "errorCode",
                        "errorMessage",
                        "messageId"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqDeadLetterResendResendResult:DmsRocketmqDeadLetterResendResendResult": {
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "Indicates the error code.\n"
                },
                "errorMessage": {
                    "type": "string",
                    "description": "Indicates the error message.\n"
                },
                "messageId": {
                    "type": "string",
                    "description": "Indicates the message ID.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "errorCode",
                        "errorMessage",
                        "messageId"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqInstanceConfig:DmsRocketmqInstanceConfig": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "cloudru:index/DmsRocketmqInstanceCrossVpcAccess:DmsRocketmqInstanceCrossVpcAccess": {
            "properties": {
                "advertisedIp": {
                    "type": "string"
                },
                "lisenterIp": {
                    "type": "string",
                    "deprecationMessage": "typo in lisenter_ip, please use \"listener_ip\" instead."
                },
                "listenerIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portId": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "advertisedIp",
                        "lisenterIp",
                        "listenerIp",
                        "port",
                        "portId"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqMigrationTaskBinding:DmsRocketmqMigrationTaskBinding": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Specifies the message target.\n",
                    "willReplaceOnChanges": true
                },
                "destinationType": {
                    "type": "string",
                    "description": "Specifies the message target type.\n",
                    "willReplaceOnChanges": true
                },
                "routingKey": {
                    "type": "string",
                    "description": "Specifies the routing key.\n",
                    "willReplaceOnChanges": true
                },
                "source": {
                    "type": "string",
                    "description": "Specifies the message source.\n",
                    "willReplaceOnChanges": true
                },
                "vhost": {
                    "type": "string",
                    "description": "Specifies the virtual host name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destinationType",
                        "routingKey",
                        "source",
                        "vhost"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqMigrationTaskExchange:DmsRocketmqMigrationTaskExchange": {
            "properties": {
                "durable": {
                    "type": "boolean",
                    "description": "Specifies whether to enable data persistence.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the switch name.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the exchange type.\n",
                    "willReplaceOnChanges": true
                },
                "vhost": {
                    "type": "string",
                    "description": "Specifies the virtual host name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "durable",
                        "name",
                        "type",
                        "vhost"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqMigrationTaskQueue:DmsRocketmqMigrationTaskQueue": {
            "properties": {
                "durable": {
                    "type": "boolean",
                    "description": "Specifies whether to enable data persistence.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the queue name.\n",
                    "willReplaceOnChanges": true
                },
                "vhost": {
                    "type": "string",
                    "description": "Specifies the virtual host name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "durable",
                        "name",
                        "vhost"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqMigrationTaskSubscriptionGroup:DmsRocketmqMigrationTaskSubscriptionGroup": {
            "properties": {
                "consumeBroadcastEnable": {
                    "type": "boolean",
                    "description": "Specifies whether to enable broadcast.\n",
                    "willReplaceOnChanges": true
                },
                "consumeEnable": {
                    "type": "boolean",
                    "description": "Specifies whether to enable consumption.\n",
                    "willReplaceOnChanges": true
                },
                "consumeFromMinEnable": {
                    "type": "boolean",
                    "description": "Specifies whether to enable consumption from the earliest offset.\n",
                    "willReplaceOnChanges": true
                },
                "groupName": {
                    "type": "string",
                    "description": "Specifies the name of a consumer group.\n",
                    "willReplaceOnChanges": true
                },
                "notifyConsumeridsChangedEnable": {
                    "type": "boolean",
                    "description": "Specifies whether to notify changes of consumer IDs.\n",
                    "willReplaceOnChanges": true
                },
                "retryMaxTimes": {
                    "type": "integer",
                    "description": "Specifies the maximum number of consumption retries.\n",
                    "willReplaceOnChanges": true
                },
                "retryQueueNum": {
                    "type": "integer",
                    "description": "Specifies the number of retry queues.\n",
                    "willReplaceOnChanges": true
                },
                "whichBrokerWhenConsumeSlow": {
                    "type": "integer",
                    "description": "Specifies the ID of the broker selected for slow consumption.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "groupName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "consumeBroadcastEnable",
                        "consumeEnable",
                        "consumeFromMinEnable",
                        "groupName",
                        "notifyConsumeridsChangedEnable",
                        "retryMaxTimes",
                        "retryQueueNum",
                        "whichBrokerWhenConsumeSlow"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqMigrationTaskTopicConfig:DmsRocketmqMigrationTaskTopicConfig": {
            "properties": {
                "order": {
                    "type": "boolean",
                    "description": "Specifies whether a message is an ordered message.\n",
                    "willReplaceOnChanges": true
                },
                "perm": {
                    "type": "integer",
                    "description": "Specifies the number of permission.\n",
                    "willReplaceOnChanges": true
                },
                "readQueueNum": {
                    "type": "integer",
                    "description": "Specifies the number of read queues.\n",
                    "willReplaceOnChanges": true
                },
                "topicFilterType": {
                    "type": "string",
                    "description": "Specifies the filter type of a topic.\n",
                    "willReplaceOnChanges": true
                },
                "topicName": {
                    "type": "string",
                    "description": "Specifies the topic name.\n",
                    "willReplaceOnChanges": true
                },
                "topicSysFlag": {
                    "type": "integer",
                    "description": "Specifies the system flag of a topic.\n",
                    "willReplaceOnChanges": true
                },
                "writeQueueNum": {
                    "type": "integer",
                    "description": "Specifies the number of write queues.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "topicName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "order",
                        "perm",
                        "readQueueNum",
                        "topicFilterType",
                        "topicName",
                        "topicSysFlag",
                        "writeQueueNum"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqMigrationTaskVhost:DmsRocketmqMigrationTaskVhost": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the virtual host name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqTopicBroker:DmsRocketmqTopicBroker": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Indicates the name of the broker.\n"
                },
                "readQueueNum": {
                    "type": "integer",
                    "description": "Indicates the read queues number of the broker.\n"
                },
                "writeQueueNum": {
                    "type": "integer",
                    "description": "Indicates the read queues number of the broker.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "readQueueNum",
                        "writeQueueNum"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqTopicQueue:DmsRocketmqTopicQueue": {
            "properties": {
                "broker": {
                    "type": "string",
                    "description": "Specifies the associated broker.\n"
                },
                "queueNum": {
                    "type": "integer",
                    "description": "Specifies the number of the queues.\n"
                }
            },
            "type": "object"
        },
        "cloudru:index/DmsRocketmqUserGroupPerm:DmsRocketmqUserGroupPerm": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Indicates the name of a topic or consumer group.\n"
                },
                "perm": {
                    "type": "string",
                    "description": "Indicates the permissions of the topic or consumer group.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "perm"
                    ]
                }
            }
        },
        "cloudru:index/DmsRocketmqUserTopicPerm:DmsRocketmqUserTopicPerm": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Indicates the name of a topic or consumer group.\n"
                },
                "perm": {
                    "type": "string",
                    "description": "Indicates the permissions of the topic or consumer group.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "perm"
                    ]
                }
            }
        },
        "cloudru:index/ElbIpgroupIpList:ElbIpgroupIpList": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "ip"
            ]
        },
        "cloudru:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig": {
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "insertHeadersConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfigInsertHeadersConfig:ElbL7policyFixedResponseConfigInsertHeadersConfig"
                },
                "messageBody": {
                    "type": "string"
                },
                "removeHeadersConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfigRemoveHeadersConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfig"
                },
                "statusCode": {
                    "type": "string"
                },
                "trafficLimitConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfigTrafficLimitConfig:ElbL7policyFixedResponseConfigTrafficLimitConfig"
                }
            },
            "type": "object",
            "required": [
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "contentType",
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:index/ElbL7policyFixedResponseConfigInsertHeadersConfig:ElbL7policyFixedResponseConfigInsertHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfigInsertHeadersConfigConfig:ElbL7policyFixedResponseConfigInsertHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "cloudru:index/ElbL7policyFixedResponseConfigInsertHeadersConfigConfig:ElbL7policyFixedResponseConfigInsertHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value",
                "valueType"
            ]
        },
        "cloudru:index/ElbL7policyFixedResponseConfigRemoveHeadersConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "cloudru:index/ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig:ElbL7policyFixedResponseConfigRemoveHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "cloudru:index/ElbL7policyFixedResponseConfigTrafficLimitConfig:ElbL7policyFixedResponseConfigTrafficLimitConfig": {
            "properties": {
                "burst": {
                    "type": "integer"
                },
                "perSourceIpQps": {
                    "type": "integer"
                },
                "qps": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cloudru:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig": {
            "properties": {
                "poolId": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "poolId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "poolId",
                        "weight"
                    ]
                }
            }
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig": {
            "properties": {
                "insertHeadersConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig"
                },
                "removeHeadersConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig"
                },
                "rewriteUrlConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig:ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig"
                },
                "rewriteUrlEnabled": {
                    "type": "boolean"
                },
                "trafficLimitConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig:ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "rewriteUrlConfig",
                        "rewriteUrlEnabled"
                    ]
                }
            }
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigInsertHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value",
                "valueType"
            ]
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig:ElbL7policyRedirectPoolsExtendConfigRemoveHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig:ElbL7policyRedirectPoolsExtendConfigRewriteUrlConfig": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "path"
                    ]
                }
            }
        },
        "cloudru:index/ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig:ElbL7policyRedirectPoolsExtendConfigTrafficLimitConfig": {
            "properties": {
                "burst": {
                    "type": "integer"
                },
                "perSourceIpQps": {
                    "type": "integer"
                },
                "qps": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "cloudru:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "timeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enable",
                        "timeout"
                    ]
                }
            }
        },
        "cloudru:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "insertHeadersConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfigInsertHeadersConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfig"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "removeHeadersConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfig"
                },
                "statusCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "path",
                        "port",
                        "protocol",
                        "statusCode"
                    ]
                }
            }
        },
        "cloudru:index/ElbL7policyRedirectUrlConfigInsertHeadersConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "cloudru:index/ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig:ElbL7policyRedirectUrlConfigInsertHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value",
                "valueType"
            ]
        },
        "cloudru:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfig": {
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig"
                    }
                }
            },
            "type": "object",
            "required": [
                "configs"
            ]
        },
        "cloudru:index/ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig:ElbL7policyRedirectUrlConfigRemoveHeadersConfigConfig": {
            "properties": {
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "cloudru:index/ElbL7ruleCondition:ElbL7ruleCondition": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudru:index/ElbListenerPortRange:ElbListenerPortRange": {
            "properties": {
                "endPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "startPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "endPort",
                "startPort"
            ]
        },
        "cloudru:index/ElbMemberReason:ElbMemberReason": {
            "properties": {
                "expectedResponse": {
                    "type": "string"
                },
                "healthcheckResponse": {
                    "type": "string"
                },
                "reasonCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expectedResponse",
                        "healthcheckResponse",
                        "reasonCode"
                    ]
                }
            }
        },
        "cloudru:index/ElbMemberStatus:ElbMemberStatus": {
            "properties": {
                "listenerId": {
                    "type": "string"
                },
                "operatingStatus": {
                    "type": "string"
                },
                "reasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbMemberStatusReason:ElbMemberStatusReason"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "listenerId",
                        "operatingStatus",
                        "reasons"
                    ]
                }
            }
        },
        "cloudru:index/ElbMemberStatusReason:ElbMemberStatusReason": {
            "properties": {
                "expectedResponse": {
                    "type": "string"
                },
                "healthcheckResponse": {
                    "type": "string"
                },
                "reasonCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expectedResponse",
                        "healthcheckResponse",
                        "reasonCode"
                    ]
                }
            }
        },
        "cloudru:index/ElbPoolPersistence:ElbPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "timeout",
                        "type"
                    ]
                }
            }
        },
        "cloudru:index/ElbSecurityPolicyListener:ElbSecurityPolicyListener": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "cloudru:index/FgsApplicationRepository:FgsApplicationRepository": {
            "properties": {
                "httpsUrl": {
                    "type": "string",
                    "description": "The HTTP address of the repository.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID of the repository.\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "The repository status.\n"
                },
                "webUrl": {
                    "type": "string",
                    "description": "The repository link.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpsUrl",
                        "projectId",
                        "status",
                        "webUrl"
                    ]
                }
            }
        },
        "cloudru:index/FgsApplicationStackResource:FgsApplicationStackResource": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The cloud service name.\n"
                },
                "href": {
                    "type": "string",
                    "description": "The hyperlink.\n"
                },
                "logicalResourceName": {
                    "type": "string",
                    "description": "The logical resource name.\n"
                },
                "logicalResourceType": {
                    "type": "string",
                    "description": "The logical resource type.\n"
                },
                "physicalResourceId": {
                    "type": "string",
                    "description": "The physical resource ID.\n"
                },
                "physicalResourceName": {
                    "type": "string",
                    "description": "The physical resource name.\n"
                },
                "resourceStatus": {
                    "type": "string",
                    "description": "The status of resource.\n"
                },
                "statusMessage": {
                    "type": "string",
                    "description": "The status information.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "href",
                        "logicalResourceName",
                        "logicalResourceType",
                        "physicalResourceId",
                        "physicalResourceName",
                        "resourceStatus",
                        "statusMessage"
                    ]
                }
            }
        },
        "cloudru:index/FgsAsyncInvokeConfigurationOnFailure:FgsAsyncInvokeConfigurationOnFailure": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The object type.\n"
                },
                "param": {
                    "type": "string",
                    "description": "The parameters (in JSON format) corresponding to the target service.\n"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "param"
            ]
        },
        "cloudru:index/FgsAsyncInvokeConfigurationOnSuccess:FgsAsyncInvokeConfigurationOnSuccess": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The object type.\n"
                },
                "param": {
                    "type": "string",
                    "description": "The parameters (in JSON format) corresponding to the target service.\n"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "param"
            ]
        },
        "cloudru:index/GesGraphEncryption:GesGraphEncryption": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Whether to enable data encryption The value can be true or false. The default value is false.\n"
                },
                "masterKeyId": {
                    "type": "string",
                    "description": "ID of the customer master key created by DEW in the project corresponding to the graph creation.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enable",
                        "masterKeyId"
                    ]
                }
            }
        },
        "cloudru:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace": {
            "properties": {
                "auditLogGroupName": {
                    "type": "string",
                    "description": "LTS log group name.\n"
                },
                "enableAudit": {
                    "type": "boolean",
                    "description": "Whether to enable graph audit. The default value is false.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auditLogGroupName",
                        "enableAudit"
                    ]
                }
            }
        },
        "cloudru:index/GesGraphPublicIp:GesGraphPublicIp": {
            "properties": {
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID.\n"
                },
                "publicBindType": {
                    "type": "string",
                    "description": "The bind type of public IP.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "eipId",
                        "publicBindType"
                    ]
                }
            }
        },
        "cloudru:index/GesGraphVertexIdType:GesGraphVertexIdType": {
            "properties": {
                "idLength": {
                    "type": "integer",
                    "description": "The length of ID.\n"
                },
                "idType": {
                    "type": "string",
                    "description": "Vertex ID type.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "idLength",
                        "idType"
                    ]
                }
            }
        },
        "cloudru:index/KpsKeypairAssociateServer:KpsKeypairAssociateServer": {
            "properties": {
                "auth": {
                    "$ref": "#/types/cloudru:index/KpsKeypairAssociateServerAuth:KpsKeypairAssociateServerAuth",
                    "description": "Specifies the authentication information.\n"
                },
                "disablePassword": {
                    "type": "boolean",
                    "description": "Specifies whether the password is disabled.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Specifies ID of the ECS.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Specifies the SSH listening port.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudru:index/KpsKeypairAssociateServerAuth:KpsKeypairAssociateServerAuth": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Specifies the value of the key.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the value of the authentication type.\n"
                }
            },
            "type": "object"
        },
        "cloudru:index/KpsKeypairDisassociateServer:KpsKeypairDisassociateServer": {
            "properties": {
                "auth": {
                    "$ref": "#/types/cloudru:index/KpsKeypairDisassociateServerAuth:KpsKeypairDisassociateServerAuth",
                    "description": "Specifies the authentication type.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Specifies ID of the ECS.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Specifies the SSH listening port.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudru:index/KpsKeypairDisassociateServerAuth:KpsKeypairDisassociateServerAuth": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Specifies the value of the key.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the value of an enumeration type.\n"
                }
            },
            "type": "object"
        },
        "cloudru:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                },
                "accountId": {
                    "type": "string",
                    "description": "Specifies the account id to authorize. The account id cannot be the bucket owner, \nand must be unique.\n"
                }
            },
            "type": "object",
            "required": [
                "accountId"
            ]
        },
        "cloudru:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                }
            },
            "type": "object"
        },
        "cloudru:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                }
            },
            "type": "object"
        },
        "cloudru:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission": {
            "properties": {
                "accessToAcls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to acl. Valid values are **READ_ACP** and **WRITE_ACP**.\n"
                },
                "accessToBuckets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the access to bucket. Valid values are **READ** and **WRITE**.\n"
                }
            },
            "type": "object"
        },
        "cloudru:index/ProviderAssumeRole:ProviderAssumeRole": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "agencyName",
                "domainName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": []
                }
            }
        },
        "cloudru:index/SfsTurboDuTaskDirUsage:SfsTurboDuTaskDirUsage": {
            "properties": {
                "fileCounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/SfsTurboDuTaskDirUsageFileCount:SfsTurboDuTaskDirUsageFileCount"
                    }
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "usedCapacity": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "fileCounts",
                        "message",
                        "path",
                        "usedCapacity"
                    ]
                }
            }
        },
        "cloudru:index/SfsTurboDuTaskDirUsageFileCount:SfsTurboDuTaskDirUsageFileCount": {
            "properties": {
                "block": {
                    "type": "integer"
                },
                "char": {
                    "type": "integer"
                },
                "dir": {
                    "type": "integer"
                },
                "pipe": {
                    "type": "integer"
                },
                "regular": {
                    "type": "integer"
                },
                "socket": {
                    "type": "integer"
                },
                "symlink": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "block",
                        "char",
                        "dir",
                        "pipe",
                        "regular",
                        "socket",
                        "symlink"
                    ]
                }
            }
        },
        "cloudru:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs": {
            "properties": {
                "attributes": {
                    "$ref": "#/types/cloudru:index/SfsTurboObsTargetObsAttributes:SfsTurboObsTargetObsAttributes"
                },
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "endpoint": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policy": {
                    "$ref": "#/types/cloudru:index/SfsTurboObsTargetObsPolicy:SfsTurboObsTargetObsPolicy"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "endpoint"
            ]
        },
        "cloudru:index/SfsTurboObsTargetObsAttributes:SfsTurboObsTargetObsAttributes": {
            "properties": {
                "dirMode": {
                    "type": "string"
                },
                "fileMode": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "uid": {
                    "type": "integer"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dirMode",
                        "fileMode",
                        "gid",
                        "uid"
                    ]
                }
            }
        },
        "cloudru:index/SfsTurboObsTargetObsPolicy:SfsTurboObsTargetObsPolicy": {
            "properties": {
                "autoExportPolicy": {
                    "$ref": "#/types/cloudru:index/SfsTurboObsTargetObsPolicyAutoExportPolicy:SfsTurboObsTargetObsPolicyAutoExportPolicy"
                }
            },
            "type": "object"
        },
        "cloudru:index/SfsTurboObsTargetObsPolicyAutoExportPolicy:SfsTurboObsTargetObsPolicyAutoExportPolicy": {
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "events",
                        "prefix",
                        "suffix"
                    ]
                }
            }
        },
        "cloudru:index/SmnSubscriptionExtension:SmnSubscriptionExtension": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clientSecret": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "header": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "keyword": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "signSecret": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "cloudru:index/SmnSubscriptionFilterPolicy:SmnSubscriptionFilterPolicy": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The filter policy name. The policy name must be unique.\n"
                },
                "stringEquals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The string array for exact match.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "stringEquals"
                    ]
                }
            }
        },
        "cloudru:index/SwrOrganizationPermissionsSelfPermission:SwrOrganizationPermissionsSelfPermission": {
            "properties": {
                "permission": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "permission",
                        "userId",
                        "userName"
                    ]
                }
            }
        },
        "cloudru:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser": {
            "properties": {
                "permission": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "permission",
                "userId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "permission",
                        "userId",
                        "userName"
                    ]
                }
            }
        },
        "cloudru:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string",
                    "description": "The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.\n"
                },
                "authenticationMethod": {
                    "type": "string",
                    "description": "The authentication method during IKE negotiation.\n",
                    "willReplaceOnChanges": true
                },
                "dhGroup": {
                    "type": "string",
                    "description": "Specifies the DH group used for key exchange in phase 1.\n"
                },
                "dpd": {
                    "$ref": "#/types/cloudru:index/VpnConnectionIkepolicyDpd:VpnConnectionIkepolicyDpd",
                    "description": "Specifies the dead peer detection (DPD) object.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm, 3DES is less secure, please use them with caution.\n"
                },
                "ikeVersion": {
                    "type": "string",
                    "description": "The IKE negotiation version.\n"
                },
                "lifetimeSeconds": {
                    "type": "integer",
                    "description": "The life cycle of SA in seconds, when the life cycle expires, IKE SA will be automatically updated.\n"
                },
                "localId": {
                    "type": "string",
                    "description": "The local ID.\n"
                },
                "localIdType": {
                    "type": "string",
                    "description": "The local ID type.\n"
                },
                "peerId": {
                    "type": "string",
                    "description": "The peer ID.\n"
                },
                "peerIdType": {
                    "type": "string",
                    "description": "The peer ID type.\n"
                },
                "pfs": {
                    "type": "string",
                    "description": "The DH key group used by PFS.\n"
                },
                "phase1NegotiationMode": {
                    "type": "string",
                    "description": "The negotiation mode, only works when the ike_version is v1.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authenticationAlgorithm",
                        "authenticationMethod",
                        "dhGroup",
                        "dpd",
                        "encryptionAlgorithm",
                        "ikeVersion",
                        "lifetimeSeconds",
                        "localId",
                        "localIdType",
                        "peerId",
                        "peerIdType",
                        "pfs",
                        "phase1NegotiationMode"
                    ]
                }
            }
        },
        "cloudru:index/VpnConnectionIkepolicyDpd:VpnConnectionIkepolicyDpd": {
            "properties": {
                "interval": {
                    "type": "integer",
                    "description": "Specifies the DPD idle timeout period.\n"
                },
                "msg": {
                    "type": "string",
                    "description": "Specifies the format of DPD packets.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Specifies the interval for retransmitting DPD packets.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "interval",
                        "msg",
                        "timeout"
                    ]
                }
            }
        },
        "cloudru:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string",
                    "description": "The authentication algorithm, SHA1 and MD5 are less secure, please use them with caution.\n"
                },
                "encapsulationMode": {
                    "type": "string",
                    "description": "The encapsulation mode, only **tunnel** supported for now.\n"
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm, 3DES is less secure, please use them with caution.\n"
                },
                "lifetimeSeconds": {
                    "type": "integer",
                    "description": "The lifecycle time of Ipsec tunnel in seconds.\n"
                },
                "pfs": {
                    "type": "string",
                    "description": "The DH key group used by PFS.\n"
                },
                "transformProtocol": {
                    "type": "string",
                    "description": "The transform protocol. Only **esp** supported for now.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "authenticationAlgorithm",
                        "encapsulationMode",
                        "encryptionAlgorithm",
                        "lifetimeSeconds",
                        "pfs",
                        "transformProtocol"
                    ]
                }
            }
        },
        "cloudru:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of destination CIDRs.\n"
                },
                "ruleIndex": {
                    "type": "integer",
                    "description": "The rule index.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The source CIDR.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "destinations",
                        "ruleIndex",
                        "source"
                    ]
                }
            }
        },
        "cloudru:index/VpnGatewayCertificate:VpnGatewayCertificate": {
            "properties": {
                "certificateChain": {
                    "type": "string"
                },
                "certificateChainExpireTime": {
                    "type": "string"
                },
                "certificateChainSerialNumber": {
                    "type": "string"
                },
                "certificateChainSubject": {
                    "type": "string"
                },
                "certificateExpireTime": {
                    "type": "string"
                },
                "certificateId": {
                    "type": "string"
                },
                "certificateSerialNumber": {
                    "type": "string"
                },
                "certificateSubject": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "encCertificate": {
                    "type": "string"
                },
                "encCertificateExpireTime": {
                    "type": "string"
                },
                "encCertificateSerialNumber": {
                    "type": "string"
                },
                "encCertificateSubject": {
                    "type": "string"
                },
                "encPrivateKey": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "certificateChain",
                "content",
                "encCertificate",
                "encPrivateKey",
                "name",
                "privateKey"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateChain",
                        "certificateChainExpireTime",
                        "certificateChainSerialNumber",
                        "certificateChainSubject",
                        "certificateExpireTime",
                        "certificateId",
                        "certificateSerialNumber",
                        "certificateSubject",
                        "content",
                        "createdAt",
                        "encCertificate",
                        "encCertificateExpireTime",
                        "encCertificateSerialNumber",
                        "encCertificateSubject",
                        "encPrivateKey",
                        "issuer",
                        "name",
                        "privateKey",
                        "signatureAlgorithm",
                        "status",
                        "updatedAt"
                    ]
                }
            }
        },
        "cloudru:index/VpnGatewayEip1:VpnGatewayEip1": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "cloudru:index/VpnGatewayEip2:VpnGatewayEip2": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "cloudru:index/VpnGatewayMasterEip:VpnGatewayMasterEip": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "cloudru:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip": {
            "properties": {
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s. When the flavor is **V300**, the value cannot be greater than **300**.\n",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n",
                    "willReplaceOnChanges": true
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bandwidthId",
                        "bandwidthName",
                        "bandwidthSize",
                        "chargeMode",
                        "id",
                        "ipAddress",
                        "ipVersion",
                        "type"
                    ]
                }
            }
        },
        "cloudru:index/getApigAclPoliciesPolicy:getApigAclPoliciesPolicy": {
            "properties": {
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APIs.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the ACL policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the ACL policy.\n"
                }
            },
            "type": "object",
            "required": [
                "bindNum",
                "entityType",
                "id",
                "name",
                "type",
                "updatedAt",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedAclPoliciesPolicy:getApigApiAssociatedAclPoliciesPolicy": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the ACL policy is bound to the API.\n"
                },
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the ACL policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "One or more objects from which the access will be controlled.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "entityType",
                "envId",
                "envName",
                "id",
                "name",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedApplicationsApplication:getApigApiAssociatedApplicationsApplication": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the application is bound to the API.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the application.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "description",
                "envId",
                "envName",
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedPluginsPlugin:getApigApiAssociatedPluginsPlugin": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the plugin is bound to the API.\n"
                },
                "content": {
                    "type": "string",
                    "description": "The configuration details for the plugin.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the plugin.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the plugin.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the plugin.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the plugin.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "content",
                "description",
                "envId",
                "envName",
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedSignaturesSignature:getApigApiAssociatedSignaturesSignature": {
            "properties": {
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the signature is bound to the API.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the signature.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The signature key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the signature.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The signature secret.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the signature.\n"
                }
            },
            "type": "object",
            "required": [
                "bindId",
                "bindTime",
                "envId",
                "envName",
                "id",
                "key",
                "name",
                "secret",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedThrottlingPoliciesPolicy:getApigApiAssociatedThrottlingPoliciesPolicy": {
            "properties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle:getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit.\n"
                },
                "bindId": {
                    "type": "string",
                    "description": "The bind ID.\n"
                },
                "bindTime": {
                    "type": "string",
                    "description": "The time that the throttling policy is bound to the API, in RFC3339 format.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the throttling policy, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the throttling policy.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the throttling policy.\n"
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle:getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit.\n"
                }
            },
            "type": "object",
            "required": [
                "appThrottles",
                "bindId",
                "bindTime",
                "createdAt",
                "description",
                "envName",
                "id",
                "maxApiRequests",
                "maxAppRequests",
                "maxIpRequests",
                "maxUserRequests",
                "name",
                "period",
                "periodUnit",
                "type",
                "userThrottles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle:getApigApiAssociatedThrottlingPoliciesPolicyAppThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle:getApigApiAssociatedThrottlingPoliciesPolicyUserThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiBackendParam:getApigApiBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiBasicConfigurationsConfiguration:getApigApiBasicConfigurationsConfiguration": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used.\n"
                },
                "backendType": {
                    "type": "string",
                    "description": "The backend type of the API.\n"
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the API.\n"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the API is published.\n"
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment where the API is published.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of group corresponding to the API.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of group corresponding to the API.\n"
                },
                "groupVersion": {
                    "type": "string",
                    "description": "The version of group corresponding to the API.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the API.\n"
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API.\n"
                },
                "publishId": {
                    "type": "string",
                    "description": "The ID of publish corresponding to the API.\n"
                },
                "publishedAt": {
                    "type": "string",
                    "description": "The published time of the API, in RFC3339 format.\n"
                },
                "registeredAt": {
                    "type": "string",
                    "description": "The registered time of the API, in RFC3339 format.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API.\n"
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API.\n"
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request.\n"
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the API.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendType",
                "cors",
                "description",
                "envId",
                "envName",
                "groupId",
                "groupName",
                "groupVersion",
                "id",
                "matching",
                "name",
                "publishId",
                "publishedAt",
                "registeredAt",
                "requestMethod",
                "requestPath",
                "requestProtocol",
                "securityAuthentication",
                "simpleAuthentication",
                "tags",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiFuncGraph:getApigApiFuncGraph": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the FunctionGraph backend configuration.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation type.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "functionAliasUrn",
                "functionUrn",
                "id",
                "invocationType",
                "networkType",
                "requestProtocol",
                "timeout",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiFuncGraphPolicy:getApigApiFuncGraphPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiFuncGraphPolicyBackendParam:getApigApiFuncGraphPolicyBackendParam"
                    },
                    "description": "The configaiton list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiFuncGraphPolicyCondition:getApigApiFuncGraphPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "functionAliasUrn": {
                    "type": "string",
                    "description": "The alias URN of the FunctionGraph function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FunctionGraph function.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the FunctionGraph backend policy.\n"
                },
                "invocationType": {
                    "type": "string",
                    "description": "The invocation mode of the FunctionGraph function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend policy.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network (framework) type of the FunctionGraph function.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the FunctionGraph function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the FunctionGraph function.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendParams",
                "conditions",
                "effectiveMode",
                "functionAliasUrn",
                "functionUrn",
                "id",
                "invocationType",
                "name",
                "networkType",
                "requestProtocol",
                "timeout",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiFuncGraphPolicyBackendParam:getApigApiFuncGraphPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiFuncGraphPolicyCondition:getApigApiFuncGraphPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend policy condition.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "requestLocation": {
                    "type": "string",
                    "description": "The location of the corresponding request parameter.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type of the backend policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value corresponding to the parameter name.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "frontendAuthorizerName",
                "id",
                "paramName",
                "requestId",
                "requestLocation",
                "source",
                "sysName",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiMock:getApigApiMock": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the mock backend configuration.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response of the mock backend configuration.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "id",
                "response",
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiMockPolicy:getApigApiMockPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiMockPolicyBackendParam:getApigApiMockPolicyBackendParam"
                    },
                    "description": "The configuration list of backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiMockPolicyCondition:getApigApiMockPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the mock backend policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The backend policy name.\n"
                },
                "response": {
                    "type": "string",
                    "description": "The response of the backend policy.\n"
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The custom status code of the mock response.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendParams",
                "conditions",
                "effectiveMode",
                "id",
                "name",
                "response",
                "statusCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiMockPolicyBackendParam:getApigApiMockPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiMockPolicyCondition:getApigApiMockPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend policy condition.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "requestLocation": {
                    "type": "string",
                    "description": "The location of the corresponding request parameter.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type of the backend policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value corresponding to the parameter name.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "frontendAuthorizerName",
                "id",
                "paramName",
                "requestId",
                "requestLocation",
                "source",
                "sysName",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiRequestParam:getApigApiRequestParam": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value of the parameter.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The parameter description.\n"
                },
                "enumeration": {
                    "type": "string",
                    "description": "The enumerated value.\n"
                },
                "example": {
                    "type": "string",
                    "description": "The parameter example.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the request parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where this parameter is located.\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum value or length (string parameter) for parameter.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum value or length (string parameter) for parameter.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the request parameter.\n"
                },
                "passthrough": {
                    "type": "boolean",
                    "description": "Whether to transparently transfer the parameter.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether this parameter is required.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type.\n"
                },
                "validEnable": {
                    "type": "integer",
                    "description": "Whether to enable the parameter validation.\n"
                }
            },
            "type": "object",
            "required": [
                "default",
                "description",
                "enumeration",
                "example",
                "id",
                "location",
                "maximum",
                "minimum",
                "name",
                "passthrough",
                "required",
                "type",
                "validEnable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiWeb:getApigApiWeb": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend configuration.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request path.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The web protocol type of the API request.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Whether to enable two-way authentication.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendAddress",
                "hostHeader",
                "id",
                "path",
                "requestMethod",
                "requestProtocol",
                "retryCount",
                "sslEnable",
                "timeout",
                "vpcChannelId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiWebPolicy:getApigApiWebPolicy": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the backend custom authorization.\n"
                },
                "backendAddress": {
                    "type": "string",
                    "description": "The backend service address\n"
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiWebPolicyBackendParam:getApigApiWebPolicyBackendParam"
                    },
                    "description": "The configuration list of the backend parameters.\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigApiWebPolicyCondition:getApigApiWebPolicyCondition"
                    },
                    "description": "The policy conditions.\n"
                },
                "effectiveMode": {
                    "type": "string",
                    "description": "The effective mode of the backend policy.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The proxy host header.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the web policy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the web policy.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The backend request address.\n"
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The backend request method of the API.\n"
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The backend request protocol.\n"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "The number of retry attempts to request the backend service.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout for API requests to backend service.\n"
                },
                "vpcChannelId": {
                    "type": "string",
                    "description": "The VPC channel ID.\n"
                }
            },
            "type": "object",
            "required": [
                "authorizerId",
                "backendAddress",
                "backendParams",
                "conditions",
                "effectiveMode",
                "hostHeader",
                "id",
                "name",
                "path",
                "requestMethod",
                "requestProtocol",
                "retryCount",
                "timeout",
                "vpcChannelId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiWebPolicyBackendParam:getApigApiWebPolicyBackendParam": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the constant or system parameter.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend parameter.\n"
                },
                "location": {
                    "type": "string",
                    "description": "Where the parameter is located.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "systemParamType": {
                    "type": "string",
                    "description": "The type of the system parameter.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The name of parameter.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the parameter.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "location",
                "name",
                "requestId",
                "systemParamType",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApiWebPolicyCondition:getApigApiWebPolicyCondition": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The cookie parameter name.\n"
                },
                "frontendAuthorizerName": {
                    "type": "string",
                    "description": "The frontend authentication parameter name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the backend policy condition.\n"
                },
                "paramName": {
                    "type": "string",
                    "description": "The request parameter name.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "The ID of the corresponding request parameter.\n"
                },
                "requestLocation": {
                    "type": "string",
                    "description": "The location of the corresponding request parameter.\n"
                },
                "source": {
                    "type": "string",
                    "description": "The type of the backend policy.\n"
                },
                "sysName": {
                    "type": "string",
                    "description": "The gateway built-in parameter name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The condition type of the backend policy.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value corresponding to the parameter name.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "frontendAuthorizerName",
                "id",
                "paramName",
                "requestId",
                "requestLocation",
                "source",
                "sysName",
                "type",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigAppcodesAppcode:getApigAppcodesAppcode": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the APPCODE, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the APPCODE.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The APPCODE value (content).\n"
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "createdAt",
                "id",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApplicationQuotasQuota:getApigApplicationQuotasQuota": {
            "properties": {
                "boundAppNum": {
                    "type": "integer",
                    "description": "The number of applications bound to the quota policy.\n"
                },
                "callLimits": {
                    "type": "integer",
                    "description": "The maximum number of times a application quota can be called.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the application quota, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application quota.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the application quota.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application quota.\n"
                },
                "timeInterval": {
                    "type": "integer",
                    "description": "The time limit of a quota.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "The time unit.\n"
                }
            },
            "type": "object",
            "required": [
                "boundAppNum",
                "callLimits",
                "createdAt",
                "description",
                "id",
                "name",
                "timeInterval",
                "timeUnit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigApplicationsApplication:getApigApplicationsApplication": {
            "properties": {
                "appKey": {
                    "type": "string",
                    "description": "The key of the application.\n"
                },
                "appSecret": {
                    "type": "string",
                    "description": "The secret of the application.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "The type of the application.\n"
                },
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APIs.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the application.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the application.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the application.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the application.\n"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the application.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the application.\n"
                }
            },
            "type": "object",
            "required": [
                "appKey",
                "appSecret",
                "appType",
                "bindNum",
                "createdAt",
                "createdBy",
                "description",
                "id",
                "name",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigChannelsVpcChannel:getApigChannelsVpcChannel": {
            "properties": {
                "balanceStrategy": {
                    "type": "integer",
                    "description": "The distribution algorithm.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of channel, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the VPC channel.\n"
                },
                "memberGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigChannelsVpcChannelMemberGroup:getApigChannelsVpcChannelMemberGroup"
                    },
                    "description": "The parameter member groups of the VPC channels.\n"
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type of the VPC channel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC channel.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port of the backend server.\n"
                },
                "type": {
                    "type": "integer",
                    "description": "The type of the VPC channel.\n"
                }
            },
            "type": "object",
            "required": [
                "balanceStrategy",
                "createdAt",
                "id",
                "memberGroups",
                "memberType",
                "name",
                "port",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigChannelsVpcChannelMemberGroup:getApigChannelsVpcChannelMemberGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the member group.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the member group.\n"
                },
                "microserviceLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigChannelsVpcChannelMemberGroupMicroserviceLabel:getApigChannelsVpcChannelMemberGroupMicroserviceLabel"
                    },
                    "description": "The microservice tags of the backend server group.\n"
                },
                "microservicePort": {
                    "type": "integer",
                    "description": "The microservice port of the backend server group.\n"
                },
                "microserviceVersion": {
                    "type": "string",
                    "description": "The microservice version of the backend server group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the member group.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the current member group.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "microserviceLabels",
                "microservicePort",
                "microserviceVersion",
                "name",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigChannelsVpcChannelMemberGroupMicroserviceLabel:getApigChannelsVpcChannelMemberGroupMicroserviceLabel": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the microservice label.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the microservice label.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigCustomAuthorizersAuthorizer:getApigCustomAuthorizersAuthorizer": {
            "properties": {
                "cacheAge": {
                    "type": "integer",
                    "description": "The maximum cache age of custom authorizer.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of custom authorizer.\n"
                },
                "functionAliasUri": {
                    "type": "string",
                    "description": "The version alias URI of the FGS function.\n"
                },
                "functionType": {
                    "type": "string",
                    "description": "The type of the FGS function.\n"
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FGS function.\n"
                },
                "functionVersion": {
                    "type": "string",
                    "description": "The version of the FGS function.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the custom authorizer.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigCustomAuthorizersAuthorizerIdentity:getApigCustomAuthorizersAuthorizerIdentity"
                    },
                    "description": "The parameter identities of the custom authorizer.\n"
                },
                "isBodySend": {
                    "type": "boolean",
                    "description": "Whether to send the body of custom authorizer.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom authorizer.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network architecture types of function.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the custom authorizer.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data of custom authorizer.\n"
                }
            },
            "type": "object",
            "required": [
                "cacheAge",
                "createdAt",
                "functionAliasUri",
                "functionType",
                "functionUrn",
                "functionVersion",
                "id",
                "identities",
                "isBodySend",
                "name",
                "networkType",
                "type",
                "userData"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigCustomAuthorizersAuthorizerIdentity:getApigCustomAuthorizersAuthorizerIdentity": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The parameter location of identity.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the parameter to be verified.\n"
                },
                "validation": {
                    "type": "string",
                    "description": "The parameter verification expression of identity.\n"
                }
            },
            "type": "object",
            "required": [
                "location",
                "name",
                "validation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigEndpointConnectionsConnection:getApigEndpointConnectionsConnection": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the endpoint connection, in RFC3339 format.\n"
                },
                "domainId": {
                    "type": "string",
                    "description": "The IAM account ID of the endpoint connection creator.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the endpoint connection.\n"
                },
                "packetId": {
                    "type": "integer",
                    "description": "The packet ID of the endpoint connection.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the endpoint connection.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest time of the endpoint connection, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "domainId",
                "id",
                "packetId",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigEnvironmentVariablesVariable:getApigEnvironmentVariablesVariable": {
            "properties": {
                "envId": {
                    "type": "string",
                    "description": "The environment ID corresponding to the environment variable.\n"
                },
                "groupId": {
                    "type": "string",
                    "description": "The group ID corresponding to the environment variable.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the environment variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the environment variable.\n"
                }
            },
            "type": "object",
            "required": [
                "envId",
                "groupId",
                "id",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigGroupsGroup:getApigGroupsGroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigGroupsGroupEnvironment:getApigGroupsGroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group.\n"
                },
                "id": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "onSellStatus": {
                    "type": "integer"
                },
                "slDomain": {
                    "type": "string"
                },
                "slDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigGroupsGroupUrlDomain:getApigGroupsGroupUrlDomain"
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "environments",
                "id",
                "isDefault",
                "name",
                "onSellStatus",
                "slDomain",
                "slDomains",
                "status",
                "updatedAt",
                "urlDomains"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigGroupsGroupEnvironment:getApigGroupsGroupEnvironment": {
            "properties": {
                "environmentId": {
                    "type": "string",
                    "description": "The ID of the environment to which the variables belongs.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigGroupsGroupEnvironmentVariable:getApigGroupsGroupEnvironmentVariable"
                    },
                    "description": "The array of one or more environment variables.\n"
                }
            },
            "type": "object",
            "required": [
                "environmentId",
                "variables"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigGroupsGroupEnvironmentVariable:getApigGroupsGroupEnvironmentVariable": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the variable that the group has.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The variable name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The variable value.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigGroupsGroupUrlDomain:getApigGroupsGroupUrlDomain": {
            "properties": {
                "cnameStatus": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "isHasTrustedRootCa": {
                    "type": "boolean"
                },
                "minSslVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sslId": {
                    "type": "string"
                },
                "sslName": {
                    "type": "string"
                },
                "verifiedClientCertificateEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "cnameStatus",
                "id",
                "isHasTrustedRootCa",
                "minSslVersion",
                "name",
                "sslId",
                "sslName",
                "verifiedClientCertificateEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigInstanceFeaturesFeature:getApigInstanceFeaturesFeature": {
            "properties": {
                "config": {
                    "type": "string",
                    "description": "The detailed configuration of the instance feature.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the feature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the feature.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the feature, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "config",
                "enabled",
                "id",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigInstancesInstance:getApigInstancesInstance": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the instance, in RFC3339 format.\n"
                },
                "edition": {
                    "type": "string",
                    "description": "The edition of instance.\n"
                },
                "eipAddress": {
                    "type": "string",
                    "description": "The elastic IP address of instance binding.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the instance.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of instance.\n"
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "The type of load balancer used by the instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of instance.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of instance.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of instance.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "edition",
                "eipAddress",
                "enterpriseProjectId",
                "id",
                "loadbalancerProvider",
                "name",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigSignaturesSignature:getApigSignaturesSignature": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The algorithm of the signature.\n"
                },
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APIs.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the signature.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the signature.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the signature.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the signature.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret of the signature.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the signature.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the signature.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "bindNum",
                "createdAt",
                "id",
                "key",
                "name",
                "secret",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigThrottlingPoliciesPolicy:getApigThrottlingPoliciesPolicy": {
            "properties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigThrottlingPoliciesPolicyAppThrottle:getApigThrottlingPoliciesPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit.\n"
                },
                "bindNum": {
                    "type": "integer",
                    "description": "The number of APIs bound to the throttling policy.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the throttling policy, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of throttling policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period.\n"
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period.\n"
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls.\n"
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the throttling policy.\n"
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getApigThrottlingPoliciesPolicyUserThrottle:getApigThrottlingPoliciesPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit.\n"
                }
            },
            "type": "object",
            "required": [
                "appThrottles",
                "bindNum",
                "createdAt",
                "description",
                "id",
                "maxApiRequests",
                "maxAppRequests",
                "maxIpRequests",
                "maxUserRequests",
                "name",
                "period",
                "periodUnit",
                "type",
                "userThrottles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigThrottlingPoliciesPolicyAppThrottle:getApigThrottlingPoliciesPolicyAppThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getApigThrottlingPoliciesPolicyUserThrottle:getApigThrottlingPoliciesPolicyUserThrottle": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the special user/application throttling policy.\n"
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.\n"
                },
                "throttlingObjectId": {
                    "type": "string",
                    "description": "The object ID which the special user/application throttling policy belongs.\n"
                },
                "throttlingObjectName": {
                    "type": "string",
                    "description": "The object name which the special user/application throttling policy belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "maxApiRequests",
                "throttlingObjectId",
                "throttlingObjectName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbhAvailabilityZonesAvailabilityZone:getCbhAvailabilityZonesAvailabilityZone": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "regionId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "name",
                "regionId",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbhFlavorsFlavor:getCbhFlavorsFlavor": {
            "properties": {
                "asset": {
                    "type": "integer"
                },
                "dataDiskSize": {
                    "type": "number"
                },
                "ecsSystemDataSize": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "maxConnection": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vcpus": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "asset",
                "dataDiskSize",
                "ecsSystemDataSize",
                "id",
                "maxConnection",
                "memory",
                "type",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbhInstancesInstance:getCbhInstancesInstance": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "Indicates the availability zone name.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Indicates the specification of the instance.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of the instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the instance name.\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP address of the instance.\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "Indicates the elastic IP address.\n"
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Indicates the ID of the elastic IP.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Indicates the ID of a security group.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the instance.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Indicates the ID of a subnet.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the current version of the instance image.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "Indicates the ID of a VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "flavorId",
                "id",
                "name",
                "privateIp",
                "publicIp",
                "publicIpId",
                "securityGroupId",
                "status",
                "subnetId",
                "version",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupChildren:getCbrBackupChildren": {
            "properties": {
                "checkpointId": {
                    "type": "string",
                    "description": "The restore point ID of the sub-backup resource.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the sub-backup.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The sub-backup description.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project to which the backup sub-backup resource belongs.\n"
                },
                "expiredAt": {
                    "type": "string",
                    "description": "The expiration time of the sub-backup.\n"
                },
                "extendInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrBackupChildrenExtendInfo:getCbrBackupChildrenExtendInfo"
                    },
                    "description": "The extended information.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The sub-backup ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The sub-backup name.\n"
                },
                "replicationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrBackupChildrenReplicationRecord:getCbrBackupChildrenReplicationRecord"
                    },
                    "description": "The replication records.\n"
                },
                "resourceAz": {
                    "type": "string",
                    "description": "The availability zone where the backup sub-backup resource is located.\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "The sub-backup resource ID.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "The sub-backup resource name.\n"
                },
                "resourceSize": {
                    "type": "integer",
                    "description": "The sub-backup resource size, in GB.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The sub-backup resource type.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The sub-backup status.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The sub-backup type.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the sub-backup.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The vault to which the backup sub-backup resource belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "checkpointId",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "expiredAt",
                "extendInfos",
                "id",
                "name",
                "replicationRecords",
                "resourceAz",
                "resourceId",
                "resourceName",
                "resourceSize",
                "resourceType",
                "status",
                "type",
                "updatedAt",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupChildrenExtendInfo:getCbrBackupChildrenExtendInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether the backup is automatically generated.\n"
                },
                "bootable": {
                    "type": "boolean",
                    "description": "Whether the backup is a system disk backup.\n"
                },
                "containSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the VM backup data contains system disk data.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Whether the backup is encrypted.\n"
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backup is an incremental backup.\n"
                },
                "isSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the disk is a system disk.\n"
                },
                "osRegistryImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of images created using backups.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID of the disk backup.\n"
                },
                "supportLld": {
                    "type": "boolean",
                    "description": "Whether to allow lazyloading for fast restoration.\n"
                },
                "supportedRestoreMode": {
                    "type": "string",
                    "description": "The restoration mode.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "bootable",
                "containSystemDisk",
                "encrypted",
                "incremental",
                "isSystemDisk",
                "osRegistryImages",
                "snapshotId",
                "supportLld",
                "supportedRestoreMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupChildrenReplicationRecord:getCbrBackupChildrenReplicationRecord": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the replication.\n"
                },
                "destinationBackupId": {
                    "type": "string",
                    "description": "The ID of the destination backup used for replication.\n"
                },
                "destinationCheckpointId": {
                    "type": "string",
                    "description": "The record ID of the destination backup used for replication.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The replication destination region.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "extraInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrBackupChildrenReplicationRecordExtraInfo:getCbrBackupChildrenReplicationRecordExtraInfo"
                    },
                    "description": "The additional information of the replication.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The replication record ID.\n"
                },
                "sourceBackupId": {
                    "type": "string",
                    "description": "The ID of the source backup used for replication.\n"
                },
                "sourceCheckpointId": {
                    "type": "string",
                    "description": "The ID of the source backup record used for replication.\n"
                },
                "sourceProjectId": {
                    "type": "string",
                    "description": "The ID of the replication source project.\n"
                },
                "sourceRegion": {
                    "type": "string",
                    "description": "The replication source region.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The replication status.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the backup resides.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "destinationBackupId",
                "destinationCheckpointId",
                "destinationProjectId",
                "destinationRegion",
                "destinationVaultId",
                "extraInfos",
                "id",
                "sourceBackupId",
                "sourceCheckpointId",
                "sourceProjectId",
                "sourceRegion",
                "status",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupChildrenReplicationRecordExtraInfo:getCbrBackupChildrenReplicationRecordExtraInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether replication is automatically scheduled.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "failCode": {
                    "type": "string",
                    "description": "The error code.\n"
                },
                "failReason": {
                    "type": "string",
                    "description": "The error cause.\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "The replication progress.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "destinationVaultId",
                "failCode",
                "failReason",
                "progress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupExtendInfo:getCbrBackupExtendInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether the backup is automatically generated.\n"
                },
                "bootable": {
                    "type": "boolean",
                    "description": "Whether the backup is a system disk backup.\n"
                },
                "containSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the VM backup data contains system disk data.\n"
                },
                "encrypted": {
                    "type": "boolean",
                    "description": "Whether the backup is encrypted.\n"
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backup is an incremental backup.\n"
                },
                "isSystemDisk": {
                    "type": "boolean",
                    "description": "Whether the disk is a system disk.\n"
                },
                "osRegistryImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of images created using backups.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID of the disk backup.\n"
                },
                "supportLld": {
                    "type": "boolean",
                    "description": "Whether to allow lazyloading for fast restoration.\n"
                },
                "supportedRestoreMode": {
                    "type": "string",
                    "description": "The restoration mode.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "bootable",
                "containSystemDisk",
                "encrypted",
                "incremental",
                "isSystemDisk",
                "osRegistryImages",
                "snapshotId",
                "supportLld",
                "supportedRestoreMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupReplicationRecord:getCbrBackupReplicationRecord": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the replication.\n"
                },
                "destinationBackupId": {
                    "type": "string",
                    "description": "The ID of the destination backup used for replication.\n"
                },
                "destinationCheckpointId": {
                    "type": "string",
                    "description": "The record ID of the destination backup used for replication.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The replication destination region.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "extraInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrBackupReplicationRecordExtraInfo:getCbrBackupReplicationRecordExtraInfo"
                    },
                    "description": "The additional information of the replication.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The replication record ID.\n"
                },
                "sourceBackupId": {
                    "type": "string",
                    "description": "The ID of the source backup used for replication.\n"
                },
                "sourceCheckpointId": {
                    "type": "string",
                    "description": "The ID of the source backup record used for replication.\n"
                },
                "sourceProjectId": {
                    "type": "string",
                    "description": "The ID of the replication source project.\n"
                },
                "sourceRegion": {
                    "type": "string",
                    "description": "The replication source region.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The replication status.\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the backup resides.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "destinationBackupId",
                "destinationCheckpointId",
                "destinationProjectId",
                "destinationRegion",
                "destinationVaultId",
                "extraInfos",
                "id",
                "sourceBackupId",
                "sourceCheckpointId",
                "sourceProjectId",
                "sourceRegion",
                "status",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrBackupReplicationRecordExtraInfo:getCbrBackupReplicationRecordExtraInfo": {
            "properties": {
                "autoTrigger": {
                    "type": "boolean",
                    "description": "Whether replication is automatically scheduled.\n"
                },
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID.\n"
                },
                "failCode": {
                    "type": "string",
                    "description": "The error code.\n"
                },
                "failReason": {
                    "type": "string",
                    "description": "The error cause.\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "The replication progress.\n"
                }
            },
            "type": "object",
            "required": [
                "autoTrigger",
                "destinationVaultId",
                "failCode",
                "failReason",
                "progress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrPoliciesPolicy:getCbrPoliciesPolicy": {
            "properties": {
                "associatedVaults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrPoliciesPolicyAssociatedVault:getCbrPoliciesPolicyAssociatedVault"
                    },
                    "description": "The vault associated with the CBR policy\n"
                },
                "backupCycles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrPoliciesPolicyBackupCycle:getCbrPoliciesPolicyBackupCycle"
                    },
                    "description": "The scheduling rule for the CBR policy backup execution.\n"
                },
                "backupQuantity": {
                    "type": "integer",
                    "description": "The maximum number of retained backups.\n"
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project.\n"
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The name of the replication destination region.\n"
                },
                "enableAcceleration": {
                    "type": "boolean",
                    "description": "Whether to enable the acceleration function to shorten the replication time for cross-region\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the CBR policy.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The policy ID.\n"
                },
                "longTermRetentions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getCbrPoliciesPolicyLongTermRetention:getCbrPoliciesPolicyLongTermRetention"
                    },
                    "description": "The long-term retention rules.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The policy name.\n"
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "The duration (in days) for retained backups.\n"
                },
                "timeZone": {
                    "type": "string",
                    "description": "The UTC time zone.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protection type of the CBR policy.\n"
                }
            },
            "type": "object",
            "required": [
                "associatedVaults",
                "backupCycles",
                "backupQuantity",
                "destinationProjectId",
                "destinationRegion",
                "enableAcceleration",
                "enabled",
                "id",
                "longTermRetentions",
                "name",
                "timePeriod",
                "timeZone",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrPoliciesPolicyAssociatedVault:getCbrPoliciesPolicyAssociatedVault": {
            "properties": {
                "destinationVaultId": {
                    "type": "string",
                    "description": "The destination vault ID associated with CBR policy\n"
                },
                "vaultId": {
                    "type": "string",
                    "description": "The vault ID of the associated CBR policy\n"
                }
            },
            "type": "object",
            "required": [
                "destinationVaultId",
                "vaultId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrPoliciesPolicyBackupCycle:getCbrPoliciesPolicyBackupCycle": {
            "properties": {
                "days": {
                    "type": "string",
                    "description": "The weekly backup time.\n"
                },
                "executionTimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The execution time of the policy.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The number of days between each backup.\n"
                }
            },
            "type": "object",
            "required": [
                "days",
                "executionTimes",
                "interval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCbrPoliciesPolicyLongTermRetention:getCbrPoliciesPolicyLongTermRetention": {
            "properties": {
                "daily": {
                    "type": "integer",
                    "description": "The latest backup of each day is saved in the long term.\n"
                },
                "fullBackupInterval": {
                    "type": "integer",
                    "description": "How often (after how many incremental backups) a full backup is performed.\n"
                },
                "monthly": {
                    "type": "integer",
                    "description": "The latest backup of each month is saved in the long term.\n"
                },
                "weekly": {
                    "type": "integer",
                    "description": "The latest backup of each week is saved in the long term.\n"
                },
                "yearly": {
                    "type": "integer",
                    "description": "The latest backup of each year is saved in the long term.\n"
                }
            },
            "type": "object",
            "required": [
                "daily",
                "fullBackupInterval",
                "monthly",
                "weekly",
                "yearly"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getCdmFlavorsFlavor:getCdmFlavorsFlavor": {
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cpu",
                "id",
                "memory",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDcsAccountsAccount:getDcsAccountsAccount": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Account name.\n"
                },
                "accountRole": {
                    "type": "string",
                    "description": "Account permissions.\n"
                },
                "accountType": {
                    "type": "string",
                    "description": "Account type.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Account description.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Account ID.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Account status.\n"
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "accountRole",
                "accountType",
                "description",
                "id",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsKafkaConsumerGroupsGroup:getDmsKafkaConsumerGroupsGroup": {
            "properties": {
                "assignmentStrategy": {
                    "type": "string",
                    "description": "Indicates the partition assignment strategy.\n"
                },
                "coordinatorId": {
                    "type": "integer",
                    "description": "Indicates the coordinator ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Indicates the create time.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Indicates the consumer group description.\n"
                },
                "groupMessageOffsets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsKafkaConsumerGroupsGroupGroupMessageOffset:getDmsKafkaConsumerGroupsGroupGroupMessageOffset"
                    },
                    "description": "Indicates the group message offsets.\n"
                },
                "lag": {
                    "type": "integer",
                    "description": "Indicates the number of accumulated messages.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsKafkaConsumerGroupsGroupMember:getDmsKafkaConsumerGroupsGroupMember"
                    },
                    "description": "Indicates the consumer group members.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the consumer group name.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates the consumer group status.\n"
                }
            },
            "type": "object",
            "required": [
                "assignmentStrategy",
                "coordinatorId",
                "createdAt",
                "description",
                "groupMessageOffsets",
                "lag",
                "members",
                "name",
                "state"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsKafkaConsumerGroupsGroupGroupMessageOffset:getDmsKafkaConsumerGroupsGroupGroupMessageOffset": {
            "properties": {
                "lag": {
                    "type": "integer",
                    "description": "Indicates the number of accumulated messages.\n"
                },
                "messageCurrentOffset": {
                    "type": "integer",
                    "description": "Indicates the message current offset.\n"
                },
                "messageLogEndOffset": {
                    "type": "integer",
                    "description": "Indicates the message log end offset.\n"
                },
                "partition": {
                    "type": "integer",
                    "description": "Indicates the partition.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Indicates the topic name.\n"
                }
            },
            "type": "object",
            "required": [
                "lag",
                "messageCurrentOffset",
                "messageLogEndOffset",
                "partition",
                "topic"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsKafkaConsumerGroupsGroupMember:getDmsKafkaConsumerGroupsGroupMember": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsKafkaConsumerGroupsGroupMemberAssignment:getDmsKafkaConsumerGroupsGroupMemberAssignment"
                    },
                    "description": "Indicates the details about the partition assigned to the consumer.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Indicates the client ID.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Indicates the consumer address.\n"
                },
                "memberId": {
                    "type": "string",
                    "description": "Indicates the member ID.\n"
                }
            },
            "type": "object",
            "required": [
                "assignments",
                "clientId",
                "host",
                "memberId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsKafkaConsumerGroupsGroupMemberAssignment:getDmsKafkaConsumerGroupsGroupMemberAssignment": {
            "properties": {
                "partitions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Indicates the partitions.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Indicates the topic name.\n"
                }
            },
            "type": "object",
            "required": [
                "partitions",
                "topic"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsKafkaMessagesMessage:getDmsKafkaMessagesMessage": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "Indicates the application ID.\n"
                },
                "hugeMessage": {
                    "type": "boolean",
                    "description": "Indicates the big data flag.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Indicates the message key.\n"
                },
                "messageId": {
                    "type": "string",
                    "description": "Indicates the message ID.\n"
                },
                "messageOffset": {
                    "type": "integer",
                    "description": "Indicates the message offset.\n"
                },
                "partition": {
                    "type": "integer",
                    "description": "Indicates the partition where the message is located.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the message size.\n"
                },
                "tag": {
                    "type": "string",
                    "description": "Indicates the message label.\n"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Indicates the message production time.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Indicates the message content.\n"
                }
            },
            "type": "object",
            "required": [
                "appId",
                "hugeMessage",
                "key",
                "messageId",
                "messageOffset",
                "partition",
                "size",
                "tag",
                "timestamp",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsKafkaUsersUser:getDmsKafkaUsersUser": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Indicates the create time.\n"
                },
                "defaultApp": {
                    "type": "boolean",
                    "description": "Indicates whether the application is the default application.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Indicates the description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the username.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the user role.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "defaultApp",
                "description",
                "name",
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRabbitmqFlavorsFlavor:getDmsRabbitmqFlavorsFlavor": {
            "properties": {
                "archTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRabbitmqFlavorsFlavorIo:getDmsRabbitmqFlavorsFlavorIo"
                    }
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRabbitmqFlavorsFlavorProperty:getDmsRabbitmqFlavorsFlavorProperty"
                    }
                },
                "supportFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRabbitmqFlavorsFlavorSupportFeature:getDmsRabbitmqFlavorsFlavorSupportFeature"
                    }
                },
                "type": {
                    "type": "string"
                },
                "vmSpecification": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "archTypes",
                "chargingModes",
                "id",
                "ios",
                "properties",
                "supportFeatures",
                "type",
                "vmSpecification"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRabbitmqFlavorsFlavorIo:getDmsRabbitmqFlavorsFlavorIo": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unavailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "storageSpecCode",
                "type",
                "unavailabilityZones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRabbitmqFlavorsFlavorProperty:getDmsRabbitmqFlavorsFlavorProperty": {
            "properties": {
                "flavorAlias": {
                    "type": "string"
                },
                "maxBandwidthPerBroker": {
                    "type": "integer"
                },
                "maxBroker": {
                    "type": "integer"
                },
                "maxConsumerPerBroker": {
                    "type": "integer"
                },
                "maxPartitionPerBroker": {
                    "type": "integer"
                },
                "maxStoragePerNode": {
                    "type": "integer"
                },
                "maxTpsPerBroker": {
                    "type": "integer"
                },
                "minBroker": {
                    "type": "integer"
                },
                "minStoragePerNode": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "flavorAlias",
                "maxBandwidthPerBroker",
                "maxBroker",
                "maxConsumerPerBroker",
                "maxPartitionPerBroker",
                "maxStoragePerNode",
                "maxTpsPerBroker",
                "minBroker",
                "minStoragePerNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRabbitmqFlavorsFlavorSupportFeature:getDmsRabbitmqFlavorsFlavorSupportFeature": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRabbitmqFlavorsFlavorSupportFeatureProperty:getDmsRabbitmqFlavorsFlavorSupportFeatureProperty"
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRabbitmqFlavorsFlavorSupportFeatureProperty:getDmsRabbitmqFlavorsFlavorSupportFeatureProperty": {
            "properties": {
                "maxNode": {
                    "type": "integer"
                },
                "maxTask": {
                    "type": "integer"
                },
                "minNode": {
                    "type": "integer"
                },
                "minTask": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "maxNode",
                "maxTask",
                "minNode",
                "minTask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqConsumerGroupAccessUsersPolicy:getDmsRocketmqConsumerGroupAccessUsersPolicy": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Indicates the user name.\n"
                },
                "admin": {
                    "type": "boolean",
                    "description": "Indicates whether the user is an administrator.\n"
                },
                "perm": {
                    "type": "string",
                    "description": "Indicates the permissions.\n"
                },
                "whiteRemoteAddress": {
                    "type": "string",
                    "description": "Indicates the IP address whitelist.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "admin",
                "perm",
                "whiteRemoteAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqConsumerGroupsGroup:getDmsRocketmqConsumerGroupsGroup": {
            "properties": {
                "broadcast": {
                    "type": "boolean"
                },
                "brokers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "retryMaxTimes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "broadcast",
                "brokers",
                "description",
                "enabled",
                "name",
                "retryMaxTimes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqConsumersClient:getDmsRocketmqConsumersClient": {
            "properties": {
                "clientAddress": {
                    "type": "string",
                    "description": "Indicates the client address.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Indicates the client ID.\n"
                },
                "language": {
                    "type": "string",
                    "description": "Indicates the client language.\n"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqConsumersClientSubscription:getDmsRocketmqConsumersClientSubscription"
                    },
                    "description": "Indicates the subscription list.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the client version.\n"
                }
            },
            "type": "object",
            "required": [
                "clientAddress",
                "clientId",
                "language",
                "subscriptions",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqConsumersClientSubscription:getDmsRocketmqConsumersClientSubscription": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Indicates the subscription tag.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Indicates the name of the subscribed topic.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the subscription type.\n"
                }
            },
            "type": "object",
            "required": [
                "expression",
                "topic",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqExtendFlavorsFlavor:getDmsRocketmqExtendFlavorsFlavor": {
            "properties": {
                "archTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of supported CPU architectures.\n"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the AZs where there are available resources.\n"
                },
                "billingCode": {
                    "type": "string",
                    "description": "Indicates the billing code.\n"
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of supported billing modes.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Indicates the flavor ID.\n"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqExtendFlavorsFlavorIo:getDmsRocketmqExtendFlavorsFlavorIo"
                    },
                    "description": "Indicates the list of supported disk IO types.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqExtendFlavorsFlavorProperty:getDmsRocketmqExtendFlavorsFlavorProperty"
                    },
                    "description": "Indicates the properties of the current specification.\n"
                },
                "supportFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqExtendFlavorsFlavorSupportFeature:getDmsRocketmqExtendFlavorsFlavorSupportFeature"
                    },
                    "description": "Indicates the supported features.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the flavor type.\n"
                },
                "unavailableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the AZs where resources are unavailable.\n"
                },
                "vmSpecification": {
                    "type": "string",
                    "description": "Indicates the underlying VM specification.\n"
                }
            },
            "type": "object",
            "required": [
                "archTypes",
                "availableZones",
                "billingCode",
                "chargingModes",
                "id",
                "ios",
                "properties",
                "supportFeatures",
                "type",
                "unavailableZones",
                "vmSpecification"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqExtendFlavorsFlavorIo:getDmsRocketmqExtendFlavorsFlavorIo": {
            "properties": {
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of availability zones with available resources.\n"
                },
                "storageSpecCode": {
                    "type": "string",
                    "description": "Indicates the disk IO encoding.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the disk type.\n"
                },
                "unavailableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of unavailability zones with available resources.\n"
                }
            },
            "type": "object",
            "required": [
                "availableZones",
                "storageSpecCode",
                "type",
                "unavailableZones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqExtendFlavorsFlavorProperty:getDmsRocketmqExtendFlavorsFlavorProperty": {
            "properties": {
                "engineVersions": {
                    "type": "string",
                    "description": "Indicates the version of the message engine.\n"
                },
                "flavorAlias": {
                    "type": "string",
                    "description": "Indicates the alias of **flavor_id**.\n"
                },
                "maxBroker": {
                    "type": "string",
                    "description": "Indicates the maximum number of brokers.\n"
                },
                "maxConsumerPerBroker": {
                    "type": "string",
                    "description": "Indicates the maximum number of consumers of each broker.\n"
                },
                "maxStoragePerNode": {
                    "type": "string",
                    "description": "Indicates the maximum storage space of each broker. Unit: GB.\n"
                },
                "maxTopicPerBroker": {
                    "type": "string",
                    "description": "Indicates the maximum number of topics that can be created on each broker.\n"
                },
                "minBroker": {
                    "type": "string",
                    "description": "Indicates the minimum number of brokers.\n"
                },
                "minStoragePerNode": {
                    "type": "string",
                    "description": "Indicates the minimum storage space of each broker. Unit: GB.\n"
                }
            },
            "type": "object",
            "required": [
                "engineVersions",
                "flavorAlias",
                "maxBroker",
                "maxConsumerPerBroker",
                "maxStoragePerNode",
                "maxTopicPerBroker",
                "minBroker",
                "minStoragePerNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqExtendFlavorsFlavorSupportFeature:getDmsRocketmqExtendFlavorsFlavorSupportFeature": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Indicates the feature name.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Indicates the key-value pair of a feature.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqFlavorsFlavor:getDmsRocketmqFlavorsFlavor": {
            "properties": {
                "archTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of the types of CPU architecture.\n"
                },
                "chargingModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of the billing modes.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of the flavor.\n"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqFlavorsFlavorIo:getDmsRocketmqFlavorsFlavorIo"
                    },
                    "description": "Indicates the list of disk IO types.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqFlavorsFlavorProperty:getDmsRocketmqFlavorsFlavorProperty"
                    },
                    "description": "Indicates the list of the properties of the current specification.\n"
                },
                "supportFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqFlavorsFlavorSupportFeature:getDmsRocketmqFlavorsFlavorSupportFeature"
                    },
                    "description": "Indicates the list of features supported by the current specification.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the type of the flavor.\n"
                },
                "vmSpecification": {
                    "type": "string",
                    "description": "Indicates the underlying VM specification.\n"
                }
            },
            "type": "object",
            "required": [
                "archTypes",
                "chargingModes",
                "id",
                "ios",
                "properties",
                "supportFeatures",
                "type",
                "vmSpecification"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqFlavorsFlavorIo:getDmsRocketmqFlavorsFlavorIo": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of availability zone names.\n"
                },
                "storageSpecCode": {
                    "type": "string",
                    "description": "Indicates the disk IO encoding.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the disk type.\n"
                },
                "unavailabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of unavailability zone names.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "storageSpecCode",
                "type",
                "unavailabilityZones"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqFlavorsFlavorProperty:getDmsRocketmqFlavorsFlavorProperty": {
            "properties": {
                "flavorAlias": {
                    "type": "string",
                    "description": "Indicates the alias of the flavor.\n"
                },
                "maxBandwidthPerBroker": {
                    "type": "integer",
                    "description": "Indicates the maximum bandwidth per broker.\n"
                },
                "maxBroker": {
                    "type": "integer",
                    "description": "Indicates the maximum number of brokers.\n"
                },
                "maxConsumerPerBroker": {
                    "type": "integer",
                    "description": "Indicates the maximum number of consumers per broker.\n"
                },
                "maxPartitionPerBroker": {
                    "type": "integer",
                    "description": "Indicates the maximum number of partitions per broker.\n"
                },
                "maxStoragePerNode": {
                    "type": "integer",
                    "description": "Indicates the maximum storage per node. The unit is GB.\n"
                },
                "maxTpsPerBroker": {
                    "type": "integer",
                    "description": "Indicates the maximum TPS per broker.\n"
                },
                "minBroker": {
                    "type": "integer",
                    "description": "Indicates the minimum number of brokers.\n"
                },
                "minStoragePerNode": {
                    "type": "integer",
                    "description": "Indicates the minimum storage per node. The unit is GB.\n"
                }
            },
            "type": "object",
            "required": [
                "flavorAlias",
                "maxBandwidthPerBroker",
                "maxBroker",
                "maxConsumerPerBroker",
                "maxPartitionPerBroker",
                "maxStoragePerNode",
                "maxTpsPerBroker",
                "minBroker",
                "minStoragePerNode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqFlavorsFlavorSupportFeature:getDmsRocketmqFlavorsFlavorSupportFeature": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Indicates the function name.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqFlavorsFlavorSupportFeatureProperty:getDmsRocketmqFlavorsFlavorSupportFeatureProperty"
                    },
                    "description": "Indicates the list of the function property details.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "properties"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqFlavorsFlavorSupportFeatureProperty:getDmsRocketmqFlavorsFlavorSupportFeatureProperty": {
            "properties": {
                "maxNode": {
                    "type": "integer",
                    "description": "Indicates the maximum number of nodes for the dump function.\n"
                },
                "maxTask": {
                    "type": "integer",
                    "description": "Indicates the maximum number of tasks for the dump function.\n"
                },
                "minNode": {
                    "type": "integer",
                    "description": "Indicates the minimum number of nodes for the dump function.\n"
                },
                "minTask": {
                    "type": "integer",
                    "description": "Indicates the minimum number of tasks for the dump function.\n"
                }
            },
            "type": "object",
            "required": [
                "maxNode",
                "maxTask",
                "minNode",
                "minTask"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqInstancesInstance:getDmsRocketmqInstancesInstance": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the list of availability zone names.\n"
                },
                "brokerAddress": {
                    "type": "string",
                    "description": "Indicates the service data address.\n"
                },
                "brokerNum": {
                    "type": "integer",
                    "description": "Indicates the broker numbers.\n"
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqInstancesInstanceCrossVpcAccess:getDmsRocketmqInstancesInstanceCrossVpcAccess"
                    },
                    "description": "Indicates the Cross-VPC access information.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Indicates the description of the DMS RocketMQ instance.\n"
                },
                "enableAcl": {
                    "type": "boolean",
                    "description": "Indicates whether access control is enabled.\n"
                },
                "enablePublicip": {
                    "type": "boolean",
                    "description": "Indicates whether to enable public access.\n"
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Indicates the version of the RocketMQ engine.\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Indicates a product ID.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of the DMS RocketMQ instance.\n"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Indicates whether to support IPv6.\n"
                },
                "maintainBegin": {
                    "type": "string",
                    "description": "Indicates the time at which the maintenance window starts. The format is HH:mm:ss.\n"
                },
                "maintainEnd": {
                    "type": "string",
                    "description": "Indicates the time at which the maintenance window ends. The format is HH:mm:ss.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the name of the DMS RocketMQ instance.\n"
                },
                "namesrvAddress": {
                    "type": "string",
                    "description": "Indicates the metadata address.\n"
                },
                "newSpecBillingEnable": {
                    "type": "boolean",
                    "description": "Indicates whether billing based on new specifications is enabled.\n"
                },
                "nodeNum": {
                    "type": "integer",
                    "description": "Indicates the node quantity.\n"
                },
                "publicBrokerAddress": {
                    "type": "string",
                    "description": "Indicates the public network service data address.\n"
                },
                "publicNamesrvAddress": {
                    "type": "string",
                    "description": "Indicates the public network metadata address.\n"
                },
                "publicipAddress": {
                    "type": "string",
                    "description": "Indicates the public IP address.\n"
                },
                "publicipId": {
                    "type": "string",
                    "description": "Indicates the ID of the EIP bound to the instance.\n"
                },
                "resourceSpecCode": {
                    "type": "string",
                    "description": "Indicates the resource specifications.\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Indicates the ID of a security group.\n"
                },
                "specification": {
                    "type": "string",
                    "description": "Indicates the instance specification.\n"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Indicates whether the RocketMQ SASL_SSL is enabled.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the DMS RocketMQ instance.\n"
                },
                "storageSpace": {
                    "type": "integer",
                    "description": "Indicates the message storage capacity. Unit: GB.\n"
                },
                "storageSpecCode": {
                    "type": "string",
                    "description": "Indicates the storage I/O specification.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Indicates the ID of a subnet.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the DMS RocketMQ instance type. Value: cluster.\n"
                },
                "usedStorageSpace": {
                    "type": "integer",
                    "description": "Indicates the used message storage space. Unit: GB.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "Indicates the ID of a VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "brokerAddress",
                "brokerNum",
                "crossVpcAccesses",
                "description",
                "enableAcl",
                "enablePublicip",
                "engineVersion",
                "flavorId",
                "id",
                "ipv6Enable",
                "maintainBegin",
                "maintainEnd",
                "name",
                "namesrvAddress",
                "newSpecBillingEnable",
                "nodeNum",
                "publicBrokerAddress",
                "publicNamesrvAddress",
                "publicipAddress",
                "publicipId",
                "resourceSpecCode",
                "securityGroupId",
                "specification",
                "sslEnable",
                "status",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "type",
                "usedStorageSpace",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqInstancesInstanceCrossVpcAccess:getDmsRocketmqInstancesInstanceCrossVpcAccess": {
            "properties": {
                "advertisedIp": {
                    "type": "string"
                },
                "lisenterIp": {
                    "type": "string",
                    "deprecationMessage": "typo in lisenter_ip, please use \"listener_ip\" instead."
                },
                "listenerIp": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "advertisedIp",
                "lisenterIp",
                "listenerIp",
                "port",
                "portId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqMessageTracesTrace:getDmsRocketmqMessageTracesTrace": {
            "properties": {
                "bodyLength": {
                    "type": "number",
                    "description": "Specifies the message body length.\n"
                },
                "clientHost": {
                    "type": "string",
                    "description": "Specifies the IP address of the host that generates the message.\n"
                },
                "consumeStatus": {
                    "type": "number",
                    "description": "Specifies the consumption status.\n"
                },
                "costTime": {
                    "type": "number",
                    "description": "Specifies the time spent.\n"
                },
                "fromTransactionCheck": {
                    "type": "boolean",
                    "description": "Specifies whether the response is a transaction check response.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "Specifies the producer group or consumer group.\n"
                },
                "keys": {
                    "type": "string",
                    "description": "Specifies the message keys.\n"
                },
                "messageId": {
                    "type": "string",
                    "description": "Specifies the message ID.\n"
                },
                "messageType": {
                    "type": "string",
                    "description": "Specifies the message type.\n"
                },
                "offsetMessageId": {
                    "type": "string",
                    "description": "Specifies the offset message ID.\n"
                },
                "requestId": {
                    "type": "string",
                    "description": "Specifies the request ID.\n"
                },
                "retryTimes": {
                    "type": "integer",
                    "description": "Specifies the number of retry times.\n"
                },
                "storeHost": {
                    "type": "string",
                    "description": "Specifies the IP address of the host that stores the message.\n"
                },
                "success": {
                    "type": "boolean",
                    "description": "Specifies whether the request is successful.\n"
                },
                "tags": {
                    "type": "string",
                    "description": "Specifies the message tag.\n"
                },
                "time": {
                    "type": "string",
                    "description": "Specifies the time.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Specifies the topic name.\n"
                },
                "traceType": {
                    "type": "string",
                    "description": "Specifies the trace type.\n"
                },
                "transactionId": {
                    "type": "string",
                    "description": "Specifies the transaction ID.\n"
                },
                "transactionState": {
                    "type": "string",
                    "description": "Specifies the transaction status.\n"
                }
            },
            "type": "object",
            "required": [
                "bodyLength",
                "clientHost",
                "consumeStatus",
                "costTime",
                "fromTransactionCheck",
                "groupName",
                "keys",
                "messageId",
                "messageType",
                "offsetMessageId",
                "requestId",
                "retryTimes",
                "storeHost",
                "success",
                "tags",
                "time",
                "topic",
                "traceType",
                "transactionId",
                "transactionState"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqMessagesMessage:getDmsRocketmqMessagesMessage": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Indicates the message body.\n"
                },
                "bodyCrc": {
                    "type": "integer",
                    "description": "Indicates the message body checksum.\n"
                },
                "bornHost": {
                    "type": "string",
                    "description": "Indicates the IP address of the host that generates the message.\n"
                },
                "bornTime": {
                    "type": "string",
                    "description": "Indicates the message generated time.\n"
                },
                "messageId": {
                    "type": "string",
                    "description": "Indicates the message ID.\n"
                },
                "propertyLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqMessagesMessagePropertyList:getDmsRocketmqMessagesMessagePropertyList"
                    },
                    "description": "Indicates the property list.\n"
                },
                "queueId": {
                    "type": "integer",
                    "description": "Indicates the queue ID.\n"
                },
                "queueOffset": {
                    "type": "integer",
                    "description": "Indicates the offset in the queue.\n"
                },
                "reconsumeTimes": {
                    "type": "integer",
                    "description": "Indicates the number of retry times.\n"
                },
                "storeHost": {
                    "type": "string",
                    "description": "Indicates the IP address of the host that stores the message.\n"
                },
                "storeSize": {
                    "type": "integer",
                    "description": "Indicates the storage size.\n"
                },
                "storeTime": {
                    "type": "string",
                    "description": "Indicates the message stored time.\n"
                }
            },
            "type": "object",
            "required": [
                "body",
                "bodyCrc",
                "bornHost",
                "bornTime",
                "messageId",
                "propertyLists",
                "queueId",
                "queueOffset",
                "reconsumeTimes",
                "storeHost",
                "storeSize",
                "storeTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqMessagesMessagePropertyList:getDmsRocketmqMessagesMessagePropertyList": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Indicates the property name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Indicates the property value.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqMigrationTasksTask:getDmsRocketmqMigrationTasksTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Indicates the ID of a metadata migration task.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the name of a metadata migration task.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Indicates the start time of a metadata migration task.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of a metadata migration task.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the metadata migration task type.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "startDate",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqTopicAccessUsersPolicy:getDmsRocketmqTopicAccessUsersPolicy": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Indicates the user name.\n"
                },
                "admin": {
                    "type": "boolean",
                    "description": "Indicates whether the user is an administrator.\n"
                },
                "perm": {
                    "type": "string",
                    "description": "Indicates the permissions.\n"
                },
                "whiteRemoteAddress": {
                    "type": "string",
                    "description": "Indicates the IP address whitelist.\n"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "admin",
                "perm",
                "whiteRemoteAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqTopicsTopic:getDmsRocketmqTopicsTopic": {
            "properties": {
                "brokers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqTopicsTopicBroker:getDmsRocketmqTopicsTopicBroker"
                    }
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "totalReadQueueNum": {
                    "type": "integer"
                },
                "totalWriteQueueNum": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "brokers",
                "name",
                "permission",
                "totalReadQueueNum",
                "totalWriteQueueNum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqTopicsTopicBroker:getDmsRocketmqTopicsTopicBroker": {
            "properties": {
                "brokerName": {
                    "type": "string"
                },
                "readQueueNum": {
                    "type": "integer"
                },
                "writeQueueNum": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "brokerName",
                "readQueueNum",
                "writeQueueNum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqUsersUser:getDmsRocketmqUsersUser": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "admin": {
                    "type": "boolean"
                },
                "defaultGroupPerm": {
                    "type": "string"
                },
                "defaultTopicPerm": {
                    "type": "string"
                },
                "groupPerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqUsersUserGroupPerm:getDmsRocketmqUsersUserGroupPerm"
                    }
                },
                "topicPerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDmsRocketmqUsersUserTopicPerm:getDmsRocketmqUsersUserTopicPerm"
                    }
                },
                "whiteRemoteAddress": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "admin",
                "defaultGroupPerm",
                "defaultTopicPerm",
                "groupPerms",
                "topicPerms",
                "whiteRemoteAddress"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqUsersUserGroupPerm:getDmsRocketmqUsersUserGroupPerm": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "perm": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "perm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDmsRocketmqUsersUserTopicPerm:getDmsRocketmqUsersUserTopicPerm": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "perm": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "perm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDnsZonesZone:getDnsZonesZone": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the zone, in RFC3339 format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The zone description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the administrator managing the zone.\n"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The zone ID.\n"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The master DNS servers, from which the slave servers get DNS information.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The zone name.\n"
                },
                "poolId": {
                    "type": "string",
                    "description": "The creation time of the zone, in RFC3339 format.\n"
                },
                "proxyPattern": {
                    "type": "string",
                    "description": "The recursive resolution proxy mode for subdomains of the private zone.\n"
                },
                "recordNum": {
                    "type": "integer",
                    "description": "The number of record sets in the zone.\n"
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getDnsZonesZoneRouter:getDnsZonesZoneRouter"
                    },
                    "description": "The list of VPCs associated with the zone.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The zone status.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live (TTL) of the zone.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the zone, in RFC3339 format.\n"
                },
                "zoneType": {
                    "type": "string",
                    "description": "The zone type.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "description",
                "email",
                "enterpriseProjectId",
                "id",
                "masters",
                "name",
                "poolId",
                "proxyPattern",
                "recordNum",
                "routers",
                "status",
                "tags",
                "ttl",
                "updatedAt",
                "zoneType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getDnsZonesZoneRouter:getDnsZonesZoneRouter": {
            "properties": {
                "routerId": {
                    "type": "string",
                    "description": "The ID of the VPC associated with the zone.\n"
                },
                "routerRegion": {
                    "type": "string",
                    "description": "The region of the VPC.\n"
                }
            },
            "type": "object",
            "required": [
                "routerId",
                "routerRegion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbFlavorsFlavor:getElbFlavorsFlavor": {
            "properties": {
                "bandwidth": {
                    "type": "integer"
                },
                "category": {
                    "type": "integer"
                },
                "cps": {
                    "type": "integer"
                },
                "flavorSoldOut": {
                    "type": "boolean"
                },
                "httpsCps": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "lcu": {
                    "type": "integer"
                },
                "maxConnections": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "qps": {
                    "type": "integer"
                },
                "shared": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "category",
                "cps",
                "flavorSoldOut",
                "httpsCps",
                "id",
                "lcu",
                "maxConnections",
                "name",
                "publicBorderGroup",
                "qps",
                "shared",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbPoolsPool:getElbPoolsPool": {
            "properties": {
                "anyPortEnable": {
                    "type": "boolean"
                },
                "connectionDrainEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable delayed logout.\n"
                },
                "connectionDrainTimeout": {
                    "type": "integer",
                    "description": "The timeout of the delayed logout in seconds.\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "The description of pool.\n"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "healthmonitorId": {
                    "type": "string",
                    "description": "The health monitor ID of the ELB pool.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The pool ID.\n"
                },
                "ipVersion": {
                    "type": "string",
                    "description": "The IP version of pool.\n"
                },
                "lbMethod": {
                    "type": "string",
                    "description": "The method of the ELB pool.\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getElbPoolsPoolListener:getElbPoolsPoolListener"
                    },
                    "description": "Listener list. For details, see Data structure of the listener field.\n"
                },
                "loadbalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getElbPoolsPoolLoadbalancer:getElbPoolsPoolLoadbalancer"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the loadbalancer field.\n"
                },
                "memberDeletionProtectionEnable": {
                    "type": "boolean"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getElbPoolsPoolMember:getElbPoolsPoolMember"
                    },
                    "description": "Loadbalancer list. For details, see Data structure of the members field.\n"
                },
                "minimumHealthyMemberCount": {
                    "type": "integer",
                    "description": "The timeout of the delayed logout in seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The pool name.\n"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getElbPoolsPoolPersistence:getElbPoolsPoolPersistence"
                    },
                    "description": "Whether connections in the same session will be processed by the same pool member or not.\n"
                },
                "protectionReason": {
                    "type": "string",
                    "description": "The reason for update protection.\n"
                },
                "protectionStatus": {
                    "type": "string",
                    "description": "The protection status for update.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol of pool.\n"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "quicCidHashStrategies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getElbPoolsPoolQuicCidHashStrategy:getElbPoolsPoolQuicCidHashStrategy"
                    }
                },
                "slowStartDuration": {
                    "type": "integer",
                    "description": "The slow start duration, in seconds.\n"
                },
                "slowStartEnabled": {
                    "type": "boolean",
                    "description": "Whether to enable slow start.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the backend server group.\n"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC where the backend server group works.\n"
                }
            },
            "type": "object",
            "required": [
                "anyPortEnable",
                "connectionDrainEnabled",
                "connectionDrainTimeout",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "healthmonitorId",
                "id",
                "ipVersion",
                "lbMethod",
                "listeners",
                "loadbalancers",
                "memberDeletionProtectionEnable",
                "members",
                "minimumHealthyMemberCount",
                "name",
                "persistences",
                "protectionReason",
                "protectionStatus",
                "protocol",
                "publicBorderGroup",
                "quicCidHashStrategies",
                "slowStartDuration",
                "slowStartEnabled",
                "type",
                "updatedAt",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbPoolsPoolListener:getElbPoolsPoolListener": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The listener ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbPoolsPoolLoadbalancer:getElbPoolsPoolLoadbalancer": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The loadbalancer ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbPoolsPoolMember:getElbPoolsPoolMember": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The member ID.\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbPoolsPoolPersistence:getElbPoolsPoolPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The name of the cookie if persistence mode is set appropriately.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The stickiness duration, in minutes.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of persistence mode.\n"
                }
            },
            "type": "object",
            "required": [
                "cookieName",
                "timeout",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getElbPoolsPoolQuicCidHashStrategy:getElbPoolsPoolQuicCidHashStrategy": {
            "properties": {
                "len": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "len",
                "offset"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsApplicationTemplatesTemplate:getFgsApplicationTemplatesTemplate": {
            "properties": {
                "category": {
                    "type": "string",
                    "description": "The template category.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of template.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The template ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The template name.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The template runtime.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the function application.\n"
                }
            },
            "type": "object",
            "required": [
                "category",
                "description",
                "id",
                "name",
                "runtime",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsApplicationsApplication:getFgsApplicationsApplication": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The latest update time of the application, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of application.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of application.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of application.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The description of application.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsDependencyVersionsVersion:getFgsDependencyVersionsVersion": {
            "properties": {
                "dependencyId": {
                    "type": "string",
                    "description": "The ID of the dependency package corresponding to the version.\n"
                },
                "dependencyName": {
                    "type": "string",
                    "description": "The name of the dependency package corresponding to the version.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dependency package version.\n"
                },
                "etag": {
                    "type": "string",
                    "description": "The unique ID of the dependency.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the dependency package version.\n"
                },
                "link": {
                    "type": "string",
                    "description": "The OBS bucket path where the dependency package version is located.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "The dependency owner, public indicates a public dependency.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The runtime of the dependency package version.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the ZIP file used by the dependency package version, in bytes.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The dependency package version.\n"
                }
            },
            "type": "object",
            "required": [
                "dependencyId",
                "dependencyName",
                "description",
                "etag",
                "id",
                "link",
                "owner",
                "runtime",
                "size",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsFunctionEventsEvent:getFgsFunctionEventsEvent": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The event ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The event name.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the function event, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsFunctionTriggersTrigger:getFgsFunctionTriggersTrigger": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the function trigger, in RFC3339 format.\n"
                },
                "eventData": {
                    "type": "string",
                    "description": "The detailed configuration of the function trigger.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the function trigger.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the function trigger.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the function trigger.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the function trigger, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "eventData",
                "id",
                "status",
                "type",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsFunctionsFunction:getFgsFunctionsFunction": {
            "properties": {
                "agency": {
                    "type": "string",
                    "description": "The IAM agency name for the function configuration.\n"
                },
                "appAgency": {
                    "type": "string",
                    "description": "The IAM agency name for the function execution.\n"
                },
                "codeFilename": {
                    "type": "string",
                    "description": "The name of the function file.\n"
                },
                "codeType": {
                    "type": "string",
                    "description": "The function code type.\n"
                },
                "codeUrl": {
                    "type": "string",
                    "description": "The code URL.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function.\n"
                },
                "encryptedUserData": {
                    "type": "string",
                    "description": "The custom user data (key/value pairs) defined to be encrypted for the function.\n",
                    "secret": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the function belongs.\n"
                },
                "functiongraphVersion": {
                    "type": "string",
                    "description": "The functionGraph version.\n"
                },
                "handler": {
                    "type": "string",
                    "description": "The entry point of the function.\n"
                },
                "initializerHandler": {
                    "type": "string",
                    "description": "The initializer of the function.\n"
                },
                "initializerTimeout": {
                    "type": "integer",
                    "description": "The maximum duration the function can be initialized.\n"
                },
                "logGroupId": {
                    "type": "string",
                    "description": "The LTS log group ID.\n"
                },
                "logStreamId": {
                    "type": "string",
                    "description": "The LTS log stream ID.\n"
                },
                "maxInstanceNum": {
                    "type": "string",
                    "description": "The maximum number of instances for a single function.\n"
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The memory size(MB) allocated to the function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The function name.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The network ID of subnet to which the function belongs.\n"
                },
                "package": {
                    "type": "string",
                    "description": "The package name that function used.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The dependency package runtime of the function.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout interval of the function.\n"
                },
                "urn": {
                    "type": "string",
                    "description": "The function URN.\n"
                },
                "userData": {
                    "type": "string",
                    "description": "The custom user data (key/value pairs) defined for the function.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The function version.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID to which the function belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "agency",
                "appAgency",
                "codeFilename",
                "codeType",
                "codeUrl",
                "description",
                "encryptedUserData",
                "enterpriseProjectId",
                "functiongraphVersion",
                "handler",
                "initializerHandler",
                "initializerTimeout",
                "logGroupId",
                "logStreamId",
                "maxInstanceNum",
                "memorySize",
                "name",
                "networkId",
                "package",
                "runtime",
                "timeout",
                "urn",
                "userData",
                "version",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getFgsQuotasQuota:getFgsQuotasQuota": {
            "properties": {
                "limit": {
                    "type": "integer",
                    "description": "The number of available quota.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type corresponding to quota.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of usage.\n"
                },
                "used": {
                    "type": "integer",
                    "description": "The number of quota used.\n"
                }
            },
            "type": "object",
            "required": [
                "limit",
                "type",
                "unit",
                "used"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getKpsFailedTasksTask:getKpsFailedTasksTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the task.\n"
                },
                "keypairName": {
                    "type": "string",
                    "description": "The name of the keypair associated with the task.\n"
                },
                "operateType": {
                    "type": "string",
                    "description": "The operation type of the task.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the instance associated with the task.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "The name of the instance associated with the task.\n"
                },
                "taskErrorCode": {
                    "type": "string",
                    "description": "The error code of the task execution failure.\n"
                },
                "taskErrorMsg": {
                    "type": "string",
                    "description": "The error information of the task execution failure.\n"
                },
                "taskTime": {
                    "type": "string",
                    "description": "The start time of the task, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "keypairName",
                "operateType",
                "serverId",
                "serverName",
                "taskErrorCode",
                "taskErrorMsg",
                "taskTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getKpsRunningTasksTask:getKpsRunningTasksTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the task.\n"
                },
                "keypairName": {
                    "type": "string",
                    "description": "The name of the keypair associated with the task.\n"
                },
                "operateType": {
                    "type": "string",
                    "description": "The operation type of the task.\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The ID of the instance associated with the task.\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "The name of the instance associated with the task.\n"
                },
                "taskTime": {
                    "type": "string",
                    "description": "The start time of the task, in RFC3339 format.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "keypairName",
                "operateType",
                "serverId",
                "serverName",
                "taskTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboDataTasksTask:getSfsTurboDataTasksTask": {
            "properties": {
                "destPrefix": {
                    "type": "string",
                    "description": "The destination path prefix of the data task.\n"
                },
                "destTarget": {
                    "type": "string",
                    "description": "The target end information of the data task.\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time of the data task, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the data task.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The data task execution result information.\n"
                },
                "srcPrefix": {
                    "type": "string",
                    "description": "The source path prefix of the data task.\n"
                },
                "srcTarget": {
                    "type": "string",
                    "description": "The linkage directory name.\n"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the data task, in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the data task.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the data task.\n"
                }
            },
            "type": "object",
            "required": [
                "destPrefix",
                "destTarget",
                "endTime",
                "id",
                "message",
                "srcPrefix",
                "srcTarget",
                "startTime",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboDuTasksTask:getSfsTurboDuTasksTask": {
            "properties": {
                "beginTime": {
                    "type": "string",
                    "description": "The start time of the DU task, in RFC3339 format.\n"
                },
                "dirUsages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getSfsTurboDuTasksTaskDirUsage:getSfsTurboDuTasksTaskDirUsage"
                    },
                    "description": "The resource usages of a directory (including subdirectories).\n"
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time of the DU task, in RFC3339 format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the DU task.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the DU task.\n"
                }
            },
            "type": "object",
            "required": [
                "beginTime",
                "dirUsages",
                "endTime",
                "id",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboDuTasksTaskDirUsage:getSfsTurboDuTasksTaskDirUsage": {
            "properties": {
                "fileCounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getSfsTurboDuTasksTaskDirUsageFileCount:getSfsTurboDuTasksTaskDirUsageFileCount"
                    },
                    "description": "The total number of files in the directory.\n"
                },
                "message": {
                    "type": "string",
                    "description": "The error message.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The full path to a legal directory in the file system.\n"
                },
                "usedCapacity": {
                    "type": "integer",
                    "description": "The used capacity, in byte.\n"
                }
            },
            "type": "object",
            "required": [
                "fileCounts",
                "message",
                "path",
                "usedCapacity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboDuTasksTaskDirUsageFileCount:getSfsTurboDuTasksTaskDirUsageFileCount": {
            "properties": {
                "block": {
                    "type": "integer",
                    "description": "The number of block devices.\n"
                },
                "char": {
                    "type": "integer",
                    "description": "The number of character devices.\n"
                },
                "dir": {
                    "type": "integer",
                    "description": "The number of directories.\n"
                },
                "pipe": {
                    "type": "integer",
                    "description": "The number of pipe files.\n"
                },
                "regular": {
                    "type": "integer",
                    "description": "The number of common files.\n"
                },
                "socket": {
                    "type": "integer",
                    "description": "The number of sockets.\n"
                },
                "symlink": {
                    "type": "integer",
                    "description": "The number of symbolic links.\n"
                }
            },
            "type": "object",
            "required": [
                "block",
                "char",
                "dir",
                "pipe",
                "regular",
                "socket",
                "symlink"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboObsTargetsTarget:getSfsTurboObsTargetsTarget": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the OBS target.\n"
                },
                "fileSystemPath": {
                    "type": "string",
                    "description": "The linkage directory name of the OBS target.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the OBS target.\n"
                },
                "obs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getSfsTurboObsTargetsTargetOb:getSfsTurboObsTargetsTargetOb"
                    },
                    "description": "The detail of the OBS bucket.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the OBS target.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "fileSystemPath",
                "id",
                "obs",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboObsTargetsTargetOb:getSfsTurboObsTargetsTargetOb": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "The name of the OBS bucket associated with the OBS target.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The domain name of the region where the OBS bucket belongs.\n"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getSfsTurboPermRulesRule:getSfsTurboPermRulesRule": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the permission rule.\n"
                },
                "ipCidr": {
                    "type": "string",
                    "description": "The IP address or IP address range of the authorized object.\n"
                },
                "rwType": {
                    "type": "string",
                    "description": "The read and write permission of the authorized object.\n"
                },
                "userType": {
                    "type": "string",
                    "description": "The file system access permission granted to the user of the authorized object.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ipCidr",
                "rwType",
                "userType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnConnectionHealthChecksConnectionHealthCheck:getVpnConnectionHealthChecksConnectionHealthCheck": {
            "properties": {
                "connectionId": {
                    "type": "string"
                },
                "destinationIp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "protoType": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionId",
                "destinationIp",
                "id",
                "protoType",
                "sourceIp",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnConnectionsConnection:getVpnConnectionsConnection": {
            "properties": {
                "connectionMonitorId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "customerGatewayId": {
                    "type": "string"
                },
                "enableNqa": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "string"
                },
                "gatewayIp": {
                    "type": "string"
                },
                "haRole": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ikepolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getVpnConnectionsConnectionIkepolicy:getVpnConnectionsConnectionIkepolicy"
                    }
                },
                "ipsecpolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getVpnConnectionsConnectionIpsecpolicy:getVpnConnectionsConnectionIpsecpolicy"
                    }
                },
                "name": {
                    "type": "string"
                },
                "peerSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getVpnConnectionsConnectionPolicyRule:getVpnConnectionsConnectionPolicyRule"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tunnelLocalAddress": {
                    "type": "string"
                },
                "tunnelPeerAddress": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpnType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionMonitorId",
                "createdAt",
                "customerGatewayId",
                "enableNqa",
                "enterpriseProjectId",
                "gatewayId",
                "gatewayIp",
                "haRole",
                "id",
                "ikepolicies",
                "ipsecpolicies",
                "name",
                "peerSubnets",
                "policyRules",
                "status",
                "tunnelLocalAddress",
                "tunnelPeerAddress",
                "updatedAt",
                "vpnType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnConnectionsConnectionIkepolicy:getVpnConnectionsConnectionIkepolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string"
                },
                "authenticationMethod": {
                    "type": "string"
                },
                "dhGroup": {
                    "type": "string"
                },
                "dpds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getVpnConnectionsConnectionIkepolicyDpd:getVpnConnectionsConnectionIkepolicyDpd"
                    }
                },
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "ikeVersion": {
                    "type": "string"
                },
                "lifetimeSeconds": {
                    "type": "integer"
                },
                "localId": {
                    "type": "string"
                },
                "localIdType": {
                    "type": "string"
                },
                "peerId": {
                    "type": "string"
                },
                "peerIdType": {
                    "type": "string"
                },
                "phase1NegotiationMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticationAlgorithm",
                "authenticationMethod",
                "dhGroup",
                "dpds",
                "encryptionAlgorithm",
                "ikeVersion",
                "lifetimeSeconds",
                "localId",
                "localIdType",
                "peerId",
                "peerIdType",
                "phase1NegotiationMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnConnectionsConnectionIkepolicyDpd:getVpnConnectionsConnectionIkepolicyDpd": {
            "properties": {
                "interval": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "interval",
                "msg",
                "timeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnConnectionsConnectionIpsecpolicy:getVpnConnectionsConnectionIpsecpolicy": {
            "properties": {
                "authenticationAlgorithm": {
                    "type": "string"
                },
                "encapsulationMode": {
                    "type": "string"
                },
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "lifetimeSeconds": {
                    "type": "integer"
                },
                "pfs": {
                    "type": "string"
                },
                "transformProtocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authenticationAlgorithm",
                "encapsulationMode",
                "encryptionAlgorithm",
                "lifetimeSeconds",
                "pfs",
                "transformProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnConnectionsConnectionPolicyRule:getVpnConnectionsConnectionPolicyRule": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ruleIndex": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinations",
                "ruleIndex",
                "source"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnCustomerGatewaysCustomerGateway:getVpnCustomerGatewaysCustomerGateway": {
            "properties": {
                "asn": {
                    "type": "integer"
                },
                "caCertificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getVpnCustomerGatewaysCustomerGatewayCaCertificate:getVpnCustomerGatewaysCustomerGatewayCaCertificate"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idType": {
                    "type": "string"
                },
                "idValue": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "routeMode": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "asn",
                "caCertificates",
                "createdAt",
                "id",
                "idType",
                "idValue",
                "ip",
                "name",
                "routeMode",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnCustomerGatewaysCustomerGatewayCaCertificate:getVpnCustomerGatewaysCustomerGatewayCaCertificate": {
            "properties": {
                "expireTime": {
                    "type": "string"
                },
                "isUpdatable": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "expireTime",
                "isUpdatable",
                "issuer",
                "serialNumber",
                "signatureAlgorithm",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnGatewaysGateway:getVpnGatewaysGateway": {
            "properties": {
                "accessPrivateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of private access IPs.\n"
                },
                "accessSubnetId": {
                    "type": "string",
                    "description": "The ID of the access subnet.\n"
                },
                "accessVpcId": {
                    "type": "string",
                    "description": "The ID of the access VPC.\n"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type.\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone IDs.\n"
                },
                "bgpAsn": {
                    "type": "integer",
                    "description": "The ASN number of BGP\n"
                },
                "connectSubnet": {
                    "type": "string",
                    "description": "The VPC network segment used by the VPN gateway\n"
                },
                "connectionNumber": {
                    "type": "integer",
                    "description": "The max number of connections.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The create time.\n"
                },
                "eips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/getVpnGatewaysGatewayEip:getVpnGatewaysGatewayEip"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID\n"
                },
                "erAttachmentId": {
                    "type": "string",
                    "description": "The ER attachment ID.\n"
                },
                "erId": {
                    "type": "string",
                    "description": "The ID of the ER to which the VPN gateway is connected.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "The flavor of the VPN gateway.\n"
                },
                "haMode": {
                    "type": "string",
                    "description": "The HA mode.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the gateway\n"
                },
                "localSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The local subnets.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the gateway.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "The network type of the gateway.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the gateway.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time.\n"
                },
                "usedConnectionGroup": {
                    "type": "integer",
                    "description": "The number of used connection groups.\n"
                },
                "usedConnectionNumber": {
                    "type": "integer",
                    "description": "The number of used connections.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPN gateway is connected.\n"
                }
            },
            "type": "object",
            "required": [
                "accessPrivateIps",
                "accessSubnetId",
                "accessVpcId",
                "attachmentType",
                "availabilityZones",
                "bgpAsn",
                "connectSubnet",
                "connectionNumber",
                "createdAt",
                "eips",
                "enterpriseProjectId",
                "erAttachmentId",
                "erId",
                "flavor",
                "haMode",
                "id",
                "localSubnets",
                "name",
                "networkType",
                "status",
                "updatedAt",
                "usedConnectionGroup",
                "usedConnectionNumber",
                "vpcId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "cloudru:index/getVpnGatewaysGatewayEip:getVpnGatewaysGatewayEip": {
            "properties": {
                "bandwidthBillingInfo": {
                    "type": "string",
                    "description": "The bandwidth billing info.\n"
                },
                "bandwidthId": {
                    "type": "string",
                    "description": "The bandwidth ID.\n"
                },
                "bandwidthName": {
                    "type": "string",
                    "description": "The bandwidth name.\n"
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "Bandwidth size in Mbit/s.\n"
                },
                "billingInfo": {
                    "type": "string",
                    "description": "The billing info.\n"
                },
                "chargeMode": {
                    "type": "string",
                    "description": "The charge mode of the bandwidth. The value can be **bandwidth** and **traffic**.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The public IP ID.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The public IP address.\n"
                },
                "ipVersion": {
                    "type": "integer",
                    "description": "The public IP version.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The EIP type. The value can be **5_bgp** and **5_sbgp**.\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidthBillingInfo",
                "bandwidthId",
                "bandwidthName",
                "bandwidthSize",
                "billingInfo",
                "chargeMode",
                "id",
                "ipAddress",
                "ipVersion",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the cloudru package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessKey": {
                "type": "string",
                "description": "The access key of the SberCloud to use."
            },
            "accountName": {
                "type": "string",
                "description": "The name of the Account to login with."
            },
            "assumeRole": {
                "$ref": "#/types/cloudru:index/ProviderAssumeRole:ProviderAssumeRole"
            },
            "authUrl": {
                "type": "string",
                "description": "The Identity authentication URL."
            },
            "domainId": {
                "type": "string"
            },
            "domainName": {
                "type": "string"
            },
            "endpoints": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "The custom endpoints used to override the default endpoint URL."
            },
            "enterpriseProjectId": {
                "type": "string"
            },
            "insecure": {
                "type": "boolean",
                "description": "Trust self-signed certificates."
            },
            "maxRetries": {
                "type": "integer"
            },
            "password": {
                "type": "string",
                "description": "Password to login with.",
                "secret": true
            },
            "projectName": {
                "type": "string",
                "description": "The name of the Project to login with."
            },
            "region": {
                "type": "string",
                "description": "The SberCloud region to connect to."
            },
            "secretKey": {
                "type": "string",
                "description": "The secret key of the SberCloud to use."
            },
            "securityToken": {
                "type": "string",
                "description": "The security token to authenticate with a temporary security credential."
            },
            "userName": {
                "type": "string",
                "description": "Username to login with."
            }
        },
        "inputProperties": {
            "accessKey": {
                "type": "string",
                "description": "The access key of the SberCloud to use."
            },
            "accountName": {
                "type": "string",
                "description": "The name of the Account to login with."
            },
            "assumeRole": {
                "$ref": "#/types/cloudru:index/ProviderAssumeRole:ProviderAssumeRole"
            },
            "authUrl": {
                "type": "string",
                "description": "The Identity authentication URL."
            },
            "domainId": {
                "type": "string"
            },
            "domainName": {
                "type": "string"
            },
            "endpoints": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "The custom endpoints used to override the default endpoint URL."
            },
            "enterpriseProjectId": {
                "type": "string"
            },
            "insecure": {
                "type": "boolean",
                "description": "Trust self-signed certificates."
            },
            "maxRetries": {
                "type": "integer"
            },
            "password": {
                "type": "string",
                "description": "Password to login with.",
                "secret": true
            },
            "projectName": {
                "type": "string",
                "description": "The name of the Project to login with."
            },
            "region": {
                "type": "string",
                "description": "The SberCloud region to connect to."
            },
            "secretKey": {
                "type": "string",
                "description": "The secret key of the SberCloud to use."
            },
            "securityToken": {
                "type": "string",
                "description": "The security token to authenticate with a temporary security credential."
            },
            "userName": {
                "type": "string",
                "description": "Username to login with."
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:cloudru/terraformConfig"
        }
    },
    "resources": {
        "cloudru:Aom/serviceDiscoveryRule:ServiceDiscoveryRule": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "detectLogEnabled": {
                    "type": "boolean"
                },
                "discoveryRuleEnabled": {
                    "type": "boolean"
                },
                "discoveryRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleDiscoveryRule:ServiceDiscoveryRuleDiscoveryRule"
                    }
                },
                "isDefaultRule": {
                    "type": "boolean"
                },
                "logFileSuffixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logPathRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleLogPathRule:ServiceDiscoveryRuleLogPathRule"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nameRules": {
                    "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleNameRules:ServiceDiscoveryRuleNameRules"
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "ruleId": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "discoveryRules",
                "logFileSuffixes",
                "name",
                "nameRules",
                "region",
                "ruleId",
                "serviceType"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "detectLogEnabled": {
                    "type": "boolean"
                },
                "discoveryRuleEnabled": {
                    "type": "boolean"
                },
                "discoveryRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleDiscoveryRule:ServiceDiscoveryRuleDiscoveryRule"
                    }
                },
                "isDefaultRule": {
                    "type": "boolean"
                },
                "logFileSuffixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logPathRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleLogPathRule:ServiceDiscoveryRuleLogPathRule"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nameRules": {
                    "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleNameRules:ServiceDiscoveryRuleNameRules"
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "discoveryRules",
                "logFileSuffixes",
                "nameRules",
                "serviceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceDiscoveryRule resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "detectLogEnabled": {
                        "type": "boolean"
                    },
                    "discoveryRuleEnabled": {
                        "type": "boolean"
                    },
                    "discoveryRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleDiscoveryRule:ServiceDiscoveryRuleDiscoveryRule"
                        }
                    },
                    "isDefaultRule": {
                        "type": "boolean"
                    },
                    "logFileSuffixes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logPathRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleLogPathRule:ServiceDiscoveryRuleLogPathRule"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRules": {
                        "$ref": "#/types/cloudru:Aom/ServiceDiscoveryRuleNameRules:ServiceDiscoveryRuleNameRules"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:As/bandwidthPolicy:BandwidthPolicy": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies identification of operation the AS bandwidth policy."
                },
                "alarmId": {
                    "type": "string",
                    "description": "Specifies the alarm rule ID."
                },
                "bandwidthId": {
                    "type": "string",
                    "description": "Specifies the scaling bandwidth ID."
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "Specifies the cooldown period (in seconds)."
                },
                "createTime": {
                    "type": "string",
                    "description": "The creation time of the bandwidth policy."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the AS policy."
                },
                "intervalAlarmActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/BandwidthPolicyIntervalAlarmAction:BandwidthPolicyIntervalAlarmAction"
                    },
                    "description": "Specifies the alarm interval of the bandwidth policy."
                },
                "metaDatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/BandwidthPolicyMetaData:BandwidthPolicyMetaData"
                    },
                    "description": "The bandwidth policy additional information."
                },
                "region": {
                    "type": "string"
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/cloudru:As/BandwidthPolicyScalingPolicyAction:BandwidthPolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string",
                    "description": "Specifies the AS policy name."
                },
                "scalingPolicyType": {
                    "type": "string",
                    "description": "Specifies the AS policy type."
                },
                "scalingResourceType": {
                    "type": "string",
                    "description": "the scaling resource type."
                },
                "scheduledPolicy": {
                    "$ref": "#/types/cloudru:As/BandwidthPolicyScheduledPolicy:BandwidthPolicyScheduledPolicy"
                },
                "status": {
                    "type": "string",
                    "description": "the AS policy status."
                }
            },
            "required": [
                "alarmId",
                "bandwidthId",
                "coolDownTime",
                "createTime",
                "description",
                "intervalAlarmActions",
                "metaDatas",
                "region",
                "scalingPolicyAction",
                "scalingPolicyName",
                "scalingPolicyType",
                "scalingResourceType",
                "scheduledPolicy",
                "status"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Specifies identification of operation the AS bandwidth policy."
                },
                "alarmId": {
                    "type": "string",
                    "description": "Specifies the alarm rule ID."
                },
                "bandwidthId": {
                    "type": "string",
                    "description": "Specifies the scaling bandwidth ID."
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "Specifies the cooldown period (in seconds)."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the AS policy."
                },
                "intervalAlarmActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/BandwidthPolicyIntervalAlarmAction:BandwidthPolicyIntervalAlarmAction"
                    },
                    "description": "Specifies the alarm interval of the bandwidth policy."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/cloudru:As/BandwidthPolicyScalingPolicyAction:BandwidthPolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string",
                    "description": "Specifies the AS policy name."
                },
                "scalingPolicyType": {
                    "type": "string",
                    "description": "Specifies the AS policy type."
                },
                "scheduledPolicy": {
                    "$ref": "#/types/cloudru:As/BandwidthPolicyScheduledPolicy:BandwidthPolicyScheduledPolicy"
                }
            },
            "requiredInputs": [
                "bandwidthId",
                "scalingPolicyName",
                "scalingPolicyType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BandwidthPolicy resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Specifies identification of operation the AS bandwidth policy."
                    },
                    "alarmId": {
                        "type": "string",
                        "description": "Specifies the alarm rule ID."
                    },
                    "bandwidthId": {
                        "type": "string",
                        "description": "Specifies the scaling bandwidth ID."
                    },
                    "coolDownTime": {
                        "type": "integer",
                        "description": "Specifies the cooldown period (in seconds)."
                    },
                    "createTime": {
                        "type": "string",
                        "description": "The creation time of the bandwidth policy."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the AS policy."
                    },
                    "intervalAlarmActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:As/BandwidthPolicyIntervalAlarmAction:BandwidthPolicyIntervalAlarmAction"
                        },
                        "description": "Specifies the alarm interval of the bandwidth policy."
                    },
                    "metaDatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:As/BandwidthPolicyMetaData:BandwidthPolicyMetaData"
                        },
                        "description": "The bandwidth policy additional information."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingPolicyAction": {
                        "$ref": "#/types/cloudru:As/BandwidthPolicyScalingPolicyAction:BandwidthPolicyScalingPolicyAction"
                    },
                    "scalingPolicyName": {
                        "type": "string",
                        "description": "Specifies the AS policy name."
                    },
                    "scalingPolicyType": {
                        "type": "string",
                        "description": "Specifies the AS policy type."
                    },
                    "scalingResourceType": {
                        "type": "string",
                        "description": "the scaling resource type."
                    },
                    "scheduledPolicy": {
                        "$ref": "#/types/cloudru:As/BandwidthPolicyScheduledPolicy:BandwidthPolicyScheduledPolicy"
                    },
                    "status": {
                        "type": "string",
                        "description": "the AS policy status."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:As/configuration:Configuration": {
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "instanceConfig": {
                    "$ref": "#/types/cloudru:As/ConfigurationInstanceConfig:ConfigurationInstanceConfig"
                },
                "region": {
                    "type": "string"
                },
                "scalingConfigurationName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "createTime",
                "instanceConfig",
                "region",
                "scalingConfigurationName",
                "status"
            ],
            "inputProperties": {
                "instanceConfig": {
                    "$ref": "#/types/cloudru:As/ConfigurationInstanceConfig:ConfigurationInstanceConfig",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingConfigurationName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceConfig",
                "scalingConfigurationName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Configuration resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string"
                    },
                    "instanceConfig": {
                        "$ref": "#/types/cloudru:As/ConfigurationInstanceConfig:ConfigurationInstanceConfig",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingConfigurationName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:As/group:Group": {
            "properties": {
                "activityType": {
                    "type": "string"
                },
                "agencyName": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; use availability_zones instead"
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "The cooling duration, in seconds."
                },
                "createTime": {
                    "type": "string"
                },
                "currentInstanceNumber": {
                    "type": "integer"
                },
                "deleteInstances": {
                    "type": "string",
                    "description": "Whether to delete instances when they are removed from the AS group."
                },
                "deletePublicip": {
                    "type": "boolean"
                },
                "deleteVolume": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "desireInstanceNumber": {
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "healthPeriodicAuditGracePeriod": {
                    "type": "integer",
                    "description": "The health check grace period for instances, in seconds."
                },
                "healthPeriodicAuditMethod": {
                    "type": "string"
                },
                "healthPeriodicAuditTime": {
                    "type": "integer",
                    "description": "The health check period for instances, in minutes."
                },
                "instanceTerminatePolicy": {
                    "type": "string"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The instances id list in the as group."
                },
                "isScaling": {
                    "type": "boolean"
                },
                "lbListenerId": {
                    "type": "string",
                    "description": "The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.",
                    "deprecationMessage": "use lbaas_listeners instead"
                },
                "lbaasListeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/GroupLbaasListener:GroupLbaasListener"
                    }
                },
                "maxInstanceNumber": {
                    "type": "integer"
                },
                "minInstanceNumber": {
                    "type": "integer"
                },
                "multiAzScalingPolicy": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/GroupNetwork:GroupNetwork"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The notification mode has been canceled"
                },
                "region": {
                    "type": "string"
                },
                "scalingConfigurationId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "scalingConfigurationName": {
                    "type": "string"
                },
                "scalingGroupName": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/GroupSecurityGroup:GroupSecurityGroup"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "activityType",
                "agencyName",
                "availabilityZones",
                "createTime",
                "currentInstanceNumber",
                "deleteVolume",
                "description",
                "desireInstanceNumber",
                "detail",
                "enterpriseProjectId",
                "healthPeriodicAuditGracePeriod",
                "instances",
                "isScaling",
                "lbaasListeners",
                "multiAzScalingPolicy",
                "networks",
                "region",
                "scalingConfigurationId",
                "scalingConfigurationName",
                "scalingGroupName",
                "securityGroups",
                "status",
                "tags",
                "vpcId"
            ],
            "inputProperties": {
                "agencyName": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; use availability_zones instead"
                },
                "coolDownTime": {
                    "type": "integer",
                    "description": "The cooling duration, in seconds."
                },
                "deleteInstances": {
                    "type": "string",
                    "description": "Whether to delete instances when they are removed from the AS group."
                },
                "deletePublicip": {
                    "type": "boolean"
                },
                "deleteVolume": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "desireInstanceNumber": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "healthPeriodicAuditGracePeriod": {
                    "type": "integer",
                    "description": "The health check grace period for instances, in seconds."
                },
                "healthPeriodicAuditMethod": {
                    "type": "string"
                },
                "healthPeriodicAuditTime": {
                    "type": "integer",
                    "description": "The health check period for instances, in minutes."
                },
                "instanceTerminatePolicy": {
                    "type": "string"
                },
                "lbListenerId": {
                    "type": "string",
                    "description": "The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.",
                    "deprecationMessage": "use lbaas_listeners instead"
                },
                "lbaasListeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/GroupLbaasListener:GroupLbaasListener"
                    }
                },
                "maxInstanceNumber": {
                    "type": "integer"
                },
                "minInstanceNumber": {
                    "type": "integer"
                },
                "multiAzScalingPolicy": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/GroupNetwork:GroupNetwork"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The notification mode has been canceled"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingConfigurationId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "scalingGroupName": {
                    "type": "string"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:As/GroupSecurityGroup:GroupSecurityGroup"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networks",
                "scalingGroupName",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "activityType": {
                        "type": "string"
                    },
                    "agencyName": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; use availability_zones instead"
                    },
                    "coolDownTime": {
                        "type": "integer",
                        "description": "The cooling duration, in seconds."
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "currentInstanceNumber": {
                        "type": "integer"
                    },
                    "deleteInstances": {
                        "type": "string",
                        "description": "Whether to delete instances when they are removed from the AS group."
                    },
                    "deletePublicip": {
                        "type": "boolean"
                    },
                    "deleteVolume": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "desireInstanceNumber": {
                        "type": "integer"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDelete": {
                        "type": "boolean"
                    },
                    "healthPeriodicAuditGracePeriod": {
                        "type": "integer",
                        "description": "The health check grace period for instances, in seconds."
                    },
                    "healthPeriodicAuditMethod": {
                        "type": "string"
                    },
                    "healthPeriodicAuditTime": {
                        "type": "integer",
                        "description": "The health check period for instances, in minutes."
                    },
                    "instanceTerminatePolicy": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The instances id list in the as group."
                    },
                    "isScaling": {
                        "type": "boolean"
                    },
                    "lbListenerId": {
                        "type": "string",
                        "description": "The system supports the binding of up to six ELB listeners, the IDs of which are separated using a comma.",
                        "deprecationMessage": "use lbaas_listeners instead"
                    },
                    "lbaasListeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:As/GroupLbaasListener:GroupLbaasListener"
                        }
                    },
                    "maxInstanceNumber": {
                        "type": "integer"
                    },
                    "minInstanceNumber": {
                        "type": "integer"
                    },
                    "multiAzScalingPolicy": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:As/GroupNetwork:GroupNetwork"
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; The notification mode has been canceled"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingConfigurationId": {
                        "type": "string",
                        "description": "schema: Required"
                    },
                    "scalingConfigurationName": {
                        "type": "string"
                    },
                    "scalingGroupName": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:As/GroupSecurityGroup:GroupSecurityGroup"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:As/policy:Policy": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "alarmId": {
                    "type": "string"
                },
                "coolDownTime": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scalingGroupId": {
                    "type": "string"
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/cloudru:As/PolicyScalingPolicyAction:PolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string"
                },
                "scalingPolicyType": {
                    "type": "string"
                },
                "scheduledPolicy": {
                    "$ref": "#/types/cloudru:As/PolicyScheduledPolicy:PolicyScheduledPolicy"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "coolDownTime",
                "createTime",
                "region",
                "scalingGroupId",
                "scalingPolicyAction",
                "scalingPolicyName",
                "scalingPolicyType",
                "scheduledPolicy",
                "status"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "alarmId": {
                    "type": "string"
                },
                "coolDownTime": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scalingPolicyAction": {
                    "$ref": "#/types/cloudru:As/PolicyScalingPolicyAction:PolicyScalingPolicyAction"
                },
                "scalingPolicyName": {
                    "type": "string"
                },
                "scalingPolicyType": {
                    "type": "string"
                },
                "scheduledPolicy": {
                    "$ref": "#/types/cloudru:As/PolicyScheduledPolicy:PolicyScheduledPolicy"
                }
            },
            "requiredInputs": [
                "scalingGroupId",
                "scalingPolicyName",
                "scalingPolicyType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "alarmId": {
                        "type": "string"
                    },
                    "coolDownTime": {
                        "type": "integer"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scalingPolicyAction": {
                        "$ref": "#/types/cloudru:As/PolicyScalingPolicyAction:PolicyScalingPolicyAction"
                    },
                    "scalingPolicyName": {
                        "type": "string"
                    },
                    "scalingPolicyType": {
                        "type": "string"
                    },
                    "scheduledPolicy": {
                        "$ref": "#/types/cloudru:As/PolicyScheduledPolicy:PolicyScheduledPolicy"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cbr/policy:Policy": {
            "properties": {
                "backupCycle": {
                    "$ref": "#/types/cloudru:Cbr/PolicyBackupCycle:PolicyBackupCycle",
                    "description": "The scheduling rule for the CBR policy backup execution."
                },
                "backupQuantity": {
                    "type": "integer",
                    "description": "The maximum number of retained backups."
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project."
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The name of the replication destination region."
                },
                "enableAcceleration": {
                    "type": "boolean",
                    "description": "Whether to enable the acceleration function to shorten the replication time for cross-region"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the CBR policy."
                },
                "longTermRetention": {
                    "$ref": "#/types/cloudru:Cbr/PolicyLongTermRetention:PolicyLongTermRetention",
                    "description": "The long-term retention rules."
                },
                "name": {
                    "type": "string",
                    "description": "The policy name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the policy is located."
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "The duration (in days) for retained backups."
                },
                "timeZone": {
                    "type": "string",
                    "description": "The UTC time zone."
                },
                "type": {
                    "type": "string",
                    "description": "The protection type of the CBR policy."
                }
            },
            "required": [
                "backupCycle",
                "name",
                "region",
                "timeZone",
                "type"
            ],
            "inputProperties": {
                "backupCycle": {
                    "$ref": "#/types/cloudru:Cbr/PolicyBackupCycle:PolicyBackupCycle",
                    "description": "The scheduling rule for the CBR policy backup execution."
                },
                "backupQuantity": {
                    "type": "integer",
                    "description": "The maximum number of retained backups."
                },
                "destinationProjectId": {
                    "type": "string",
                    "description": "The ID of the replication destination project."
                },
                "destinationRegion": {
                    "type": "string",
                    "description": "The name of the replication destination region."
                },
                "enableAcceleration": {
                    "type": "boolean",
                    "description": "Whether to enable the acceleration function to shorten the replication time for cross-region",
                    "willReplaceOnChanges": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the CBR policy."
                },
                "longTermRetention": {
                    "$ref": "#/types/cloudru:Cbr/PolicyLongTermRetention:PolicyLongTermRetention",
                    "description": "The long-term retention rules."
                },
                "name": {
                    "type": "string",
                    "description": "The policy name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the policy is located.",
                    "willReplaceOnChanges": true
                },
                "timePeriod": {
                    "type": "integer",
                    "description": "The duration (in days) for retained backups."
                },
                "timeZone": {
                    "type": "string",
                    "description": "The UTC time zone."
                },
                "type": {
                    "type": "string",
                    "description": "The protection type of the CBR policy.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupCycle",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "backupCycle": {
                        "$ref": "#/types/cloudru:Cbr/PolicyBackupCycle:PolicyBackupCycle",
                        "description": "The scheduling rule for the CBR policy backup execution."
                    },
                    "backupQuantity": {
                        "type": "integer",
                        "description": "The maximum number of retained backups."
                    },
                    "destinationProjectId": {
                        "type": "string",
                        "description": "The ID of the replication destination project."
                    },
                    "destinationRegion": {
                        "type": "string",
                        "description": "The name of the replication destination region."
                    },
                    "enableAcceleration": {
                        "type": "boolean",
                        "description": "Whether to enable the acceleration function to shorten the replication time for cross-region",
                        "willReplaceOnChanges": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable the CBR policy."
                    },
                    "longTermRetention": {
                        "$ref": "#/types/cloudru:Cbr/PolicyLongTermRetention:PolicyLongTermRetention",
                        "description": "The long-term retention rules."
                    },
                    "name": {
                        "type": "string",
                        "description": "The policy name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the policy is located.",
                        "willReplaceOnChanges": true
                    },
                    "timePeriod": {
                        "type": "integer",
                        "description": "The duration (in days) for retained backups."
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "The UTC time zone."
                    },
                    "type": {
                        "type": "string",
                        "description": "The protection type of the CBR policy.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cbr/vault:Vault": {
            "properties": {
                "allocated": {
                    "type": "number",
                    "description": "The allocated capacity, in GB."
                },
                "autoBind": {
                    "type": "boolean",
                    "description": "Whether automatic association is supported."
                },
                "autoExpand": {
                    "type": "boolean",
                    "description": "Whether to enable auto capacity expansion for the vault."
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "backupNamePrefix": {
                    "type": "string",
                    "description": "The backup name prefix."
                },
                "bindRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The rules for automatic association."
                },
                "chargingMode": {
                    "type": "string"
                },
                "cloudType": {
                    "type": "string",
                    "description": "The cloud type of the vault."
                },
                "consistentLevel": {
                    "type": "string",
                    "description": "The consistent level (specification) of the vault."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the vault belongs."
                },
                "isMultiAz": {
                    "type": "boolean",
                    "description": "Whether multiple availability zones are used for backing up."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the vault."
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cbr/VaultPolicy:VaultPolicy"
                    },
                    "description": "The policy details to associate with the CBR vault."
                },
                "policyId": {
                    "type": "string",
                    "description": "schema:Deprecated; Using parameter 'policy' instead."
                },
                "protectionType": {
                    "type": "string",
                    "description": "The protection type of the vault."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault is located."
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cbr/VaultResource:VaultResource"
                    },
                    "description": "The array of one or more resources to attach to the CBR vault."
                },
                "size": {
                    "type": "integer",
                    "description": "The capacity of the vault, in GB."
                },
                "specCode": {
                    "type": "string",
                    "description": "The specification code."
                },
                "status": {
                    "type": "string",
                    "description": "The vault status."
                },
                "storage": {
                    "type": "string",
                    "description": "The name of the bucket for the vault."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the vault."
                },
                "used": {
                    "type": "number",
                    "description": "The used capacity, in GB."
                }
            },
            "required": [
                "allocated",
                "autoBind",
                "autoExpand",
                "backupNamePrefix",
                "chargingMode",
                "cloudType",
                "enterpriseProjectId",
                "isMultiAz",
                "name",
                "policies",
                "protectionType",
                "region",
                "resources",
                "size",
                "specCode",
                "status",
                "storage",
                "tags",
                "type",
                "used"
            ],
            "inputProperties": {
                "autoBind": {
                    "type": "boolean",
                    "description": "Whether automatic association is supported."
                },
                "autoExpand": {
                    "type": "boolean",
                    "description": "Whether to enable auto capacity expansion for the vault."
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "backupNamePrefix": {
                    "type": "string",
                    "description": "The backup name prefix.",
                    "willReplaceOnChanges": true
                },
                "bindRules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The rules for automatic association."
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cloudType": {
                    "type": "string",
                    "description": "The cloud type of the vault.",
                    "willReplaceOnChanges": true
                },
                "consistentLevel": {
                    "type": "string",
                    "description": "The consistent level (specification) of the vault."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the vault belongs."
                },
                "isMultiAz": {
                    "type": "boolean",
                    "description": "Whether multiple availability zones are used for backing up.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the vault."
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cbr/VaultPolicy:VaultPolicy"
                    },
                    "description": "The policy details to associate with the CBR vault."
                },
                "policyId": {
                    "type": "string",
                    "description": "schema:Deprecated; Using parameter 'policy' instead."
                },
                "protectionType": {
                    "type": "string",
                    "description": "The protection type of the vault.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault is located.",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cbr/VaultResource:VaultResource"
                    },
                    "description": "The array of one or more resources to attach to the CBR vault."
                },
                "size": {
                    "type": "integer",
                    "description": "The capacity of the vault, in GB."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the vault.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "protectionType",
                "size",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vault resources.\n",
                "properties": {
                    "allocated": {
                        "type": "number",
                        "description": "The allocated capacity, in GB."
                    },
                    "autoBind": {
                        "type": "boolean",
                        "description": "Whether automatic association is supported."
                    },
                    "autoExpand": {
                        "type": "boolean",
                        "description": "Whether to enable auto capacity expansion for the vault."
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "backupNamePrefix": {
                        "type": "string",
                        "description": "The backup name prefix.",
                        "willReplaceOnChanges": true
                    },
                    "bindRules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The rules for automatic association."
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cloudType": {
                        "type": "string",
                        "description": "The cloud type of the vault.",
                        "willReplaceOnChanges": true
                    },
                    "consistentLevel": {
                        "type": "string",
                        "description": "The consistent level (specification) of the vault."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the vault belongs."
                    },
                    "isMultiAz": {
                        "type": "boolean",
                        "description": "Whether multiple availability zones are used for backing up.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the vault."
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cbr/VaultPolicy:VaultPolicy"
                        },
                        "description": "The policy details to associate with the CBR vault."
                    },
                    "policyId": {
                        "type": "string",
                        "description": "schema:Deprecated; Using parameter 'policy' instead."
                    },
                    "protectionType": {
                        "type": "string",
                        "description": "The protection type of the vault.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the vault is located.",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cbr/VaultResource:VaultResource"
                        },
                        "description": "The array of one or more resources to attach to the CBR vault."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The capacity of the vault, in GB."
                    },
                    "specCode": {
                        "type": "string",
                        "description": "The specification code."
                    },
                    "status": {
                        "type": "string",
                        "description": "The vault status."
                    },
                    "storage": {
                        "type": "string",
                        "description": "The name of the bucket for the vault."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the vault.",
                        "willReplaceOnChanges": true
                    },
                    "used": {
                        "type": "number",
                        "description": "The used capacity, in GB."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/addon:Addon": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                },
                "values": {
                    "$ref": "#/types/cloudru:Cce/AddonValues:AddonValues"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "description",
                "region",
                "status",
                "templateName",
                "version"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "templateName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "values": {
                    "$ref": "#/types/cloudru:Cce/AddonValues:AddonValues"
                },
                "version": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clusterId",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Addon resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "values": {
                        "$ref": "#/types/cloudru:Cce/AddonValues:AddonValues"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/cluster:Cluster": {
            "properties": {
                "alias": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal"
                },
                "authenticatingProxyCa": {
                    "type": "string"
                },
                "authenticatingProxyCert": {
                    "type": "string"
                },
                "authenticatingProxyPrivateKey": {
                    "type": "string"
                },
                "authenticationMode": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "category": {
                    "type": "string"
                },
                "certificateClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterCertificateCluster:ClusterCertificateCluster"
                    }
                },
                "certificateUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterCertificateUser:ClusterCertificateUser"
                    }
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterType": {
                    "type": "string"
                },
                "clusterVersion": {
                    "type": "string"
                },
                "componentConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterComponentConfiguration:ClusterComponentConfiguration"
                    }
                },
                "containerNetworkCidr": {
                    "type": "string"
                },
                "containerNetworkType": {
                    "type": "string"
                },
                "customSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deleteAll": {
                    "type": "string"
                },
                "deleteEfs": {
                    "type": "string"
                },
                "deleteEni": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "deleteEvs": {
                    "type": "string"
                },
                "deleteNet": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "deleteObs": {
                    "type": "string"
                },
                "deleteSfs": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "eip": {
                    "type": "string"
                },
                "enableDistributeManagement": {
                    "type": "boolean"
                },
                "encryptionConfig": {
                    "$ref": "#/types/cloudru:Cce/ClusterEncryptionConfig:ClusterEncryptionConfig"
                },
                "eniSubnetCidr": {
                    "type": "string",
                    "description": "schema: Computed"
                },
                "eniSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the ENI resides"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal"
                },
                "extendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterExtendParam:ClusterExtendParam"
                    }
                },
                "flavorId": {
                    "type": "string"
                },
                "hibernate": {
                    "type": "boolean"
                },
                "highwaySubnetId": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "kubeConfigRaw": {
                    "type": "string"
                },
                "kubeProxyMode": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal"
                },
                "ltsReclaimPolicy": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterMaster:ClusterMaster"
                    }
                },
                "multiAz": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "serviceNetworkCidr": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "supportIstio": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "alias",
                "billingMode",
                "category",
                "certificateClusters",
                "certificateUsers",
                "chargingMode",
                "clusterVersion",
                "containerNetworkCidr",
                "containerNetworkType",
                "customSans",
                "description",
                "enableDistributeManagement",
                "encryptionConfig",
                "eniSubnetCidr",
                "eniSubnetId",
                "enterpriseProjectId",
                "flavorId",
                "highwaySubnetId",
                "ipv6Enable",
                "kubeConfigRaw",
                "kubeProxyMode",
                "masters",
                "name",
                "region",
                "securityGroupId",
                "serviceNetworkCidr",
                "status",
                "subnetId",
                "supportIstio",
                "tags",
                "timezone",
                "vpcId"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string"
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal",
                    "willReplaceOnChanges": true
                },
                "authenticatingProxyCa": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "authenticatingProxyCert": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "authenticatingProxyPrivateKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "authenticationMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clusterType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clusterVersion": {
                    "type": "string"
                },
                "componentConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterComponentConfiguration:ClusterComponentConfiguration"
                    }
                },
                "containerNetworkCidr": {
                    "type": "string"
                },
                "containerNetworkType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "customSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deleteAll": {
                    "type": "string"
                },
                "deleteEfs": {
                    "type": "string"
                },
                "deleteEni": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "deleteEvs": {
                    "type": "string"
                },
                "deleteNet": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "deleteObs": {
                    "type": "string"
                },
                "deleteSfs": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "eip": {
                    "type": "string"
                },
                "enableDistributeManagement": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "encryptionConfig": {
                    "$ref": "#/types/cloudru:Cce/ClusterEncryptionConfig:ClusterEncryptionConfig",
                    "willReplaceOnChanges": true
                },
                "eniSubnetCidr": {
                    "type": "string",
                    "description": "schema: Computed"
                },
                "eniSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the ENI resides"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal",
                    "willReplaceOnChanges": true
                },
                "extendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterExtendParam:ClusterExtendParam"
                    },
                    "willReplaceOnChanges": true
                },
                "flavorId": {
                    "type": "string"
                },
                "hibernate": {
                    "type": "boolean"
                },
                "highwaySubnetId": {
                    "type": "string",
                    "description": "schema: Internal",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "kubeProxyMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal",
                    "willReplaceOnChanges": true
                },
                "ltsReclaimPolicy": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/ClusterMaster:ClusterMaster"
                    },
                    "willReplaceOnChanges": true
                },
                "multiAz": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "serviceNetworkCidr": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "supportIstio": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timezone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "containerNetworkType",
                "flavorId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal",
                        "willReplaceOnChanges": true
                    },
                    "authenticatingProxyCa": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "authenticatingProxyCert": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "authenticatingProxyPrivateKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "authenticationMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer",
                        "deprecationMessage": "use charging_mode instead",
                        "willReplaceOnChanges": true
                    },
                    "category": {
                        "type": "string"
                    },
                    "certificateClusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/ClusterCertificateCluster:ClusterCertificateCluster"
                        }
                    },
                    "certificateUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/ClusterCertificateUser:ClusterCertificateUser"
                        }
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clusterType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clusterVersion": {
                        "type": "string"
                    },
                    "componentConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/ClusterComponentConfiguration:ClusterComponentConfiguration"
                        }
                    },
                    "containerNetworkCidr": {
                        "type": "string"
                    },
                    "containerNetworkType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "customSans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deleteAll": {
                        "type": "string"
                    },
                    "deleteEfs": {
                        "type": "string"
                    },
                    "deleteEni": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "deleteEvs": {
                        "type": "string"
                    },
                    "deleteNet": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "deleteObs": {
                        "type": "string"
                    },
                    "deleteSfs": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "eip": {
                        "type": "string"
                    },
                    "enableDistributeManagement": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "encryptionConfig": {
                        "$ref": "#/types/cloudru:Cce/ClusterEncryptionConfig:ClusterEncryptionConfig",
                        "willReplaceOnChanges": true
                    },
                    "eniSubnetCidr": {
                        "type": "string",
                        "description": "schema: Computed"
                    },
                    "eniSubnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet where the ENI resides"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal",
                        "willReplaceOnChanges": true
                    },
                    "extendParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/ClusterExtendParam:ClusterExtendParam"
                        },
                        "willReplaceOnChanges": true
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hibernate": {
                        "type": "boolean"
                    },
                    "highwaySubnetId": {
                        "type": "string",
                        "description": "schema: Internal",
                        "willReplaceOnChanges": true
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "kubeConfigRaw": {
                        "type": "string"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal",
                        "willReplaceOnChanges": true
                    },
                    "ltsReclaimPolicy": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/ClusterMaster:ClusterMaster"
                        },
                        "willReplaceOnChanges": true
                    },
                    "multiAz": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "serviceNetworkCidr": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "supportIstio": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/namespace:Namespace": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "creationTimestamp": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "annotations",
                "clusterId",
                "creationTimestamp",
                "labels",
                "name",
                "region",
                "status"
            ],
            "inputProperties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "prefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Namespace resources.\n",
                "properties": {
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "prefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/node:Node": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bandwidthChargeMode": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeDataVolume:NodeDataVolume"
                    }
                },
                "dedicatedHostId": {
                    "type": "string"
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "ecsPerformanceType": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "eipId": {
                    "type": "string"
                },
                "eipIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "use eip_id instead"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated"
                },
                "extendParamChargingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "extendParams": {
                    "$ref": "#/types/cloudru:Cce/NodeExtendParams:NodeExtendParams"
                },
                "extensionNics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeExtensionNic:NodeExtensionNic"
                    }
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/cloudru:Cce/NodeHostnameConfig:NodeHostnameConfig"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "iptype": {
                    "type": "string"
                },
                "keepEcs": {
                    "type": "boolean",
                    "description": "schema: Internal"
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string",
                    "deprecationMessage": "will be removed after v1.26.0"
                },
                "os": {
                    "type": "string"
                },
                "partition": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "privateIp": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "productId": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "region": {
                    "type": "string"
                },
                "rootVolume": {
                    "$ref": "#/types/cloudru:Cce/NodeRootVolume:NodeRootVolume"
                },
                "runtime": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "sharetype": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/cloudru:Cce/NodeStorage:NodeStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeTaint:NodeTaint"
                    }
                }
            },
            "required": [
                "availabilityZone",
                "billingMode",
                "chargingMode",
                "clusterId",
                "dataVolumes",
                "enterpriseProjectId",
                "flavorId",
                "hostnameConfig",
                "initializedConditions",
                "name",
                "os",
                "privateIp",
                "publicIp",
                "region",
                "rootVolume",
                "runtime",
                "serverId",
                "status",
                "subnetId",
                "tags"
            ],
            "inputProperties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Internal"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bandwidthChargeMode": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "billingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeDataVolume:NodeDataVolume"
                    }
                },
                "dedicatedHostId": {
                    "type": "string"
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "ecsPerformanceType": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "eipId": {
                    "type": "string"
                },
                "eipIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "use eip_id instead"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated"
                },
                "extendParamChargingMode": {
                    "type": "integer",
                    "deprecationMessage": "use charging_mode instead"
                },
                "extendParams": {
                    "$ref": "#/types/cloudru:Cce/NodeExtendParams:NodeExtendParams"
                },
                "extensionNics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeExtensionNic:NodeExtensionNic"
                    }
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/cloudru:Cce/NodeHostnameConfig:NodeHostnameConfig"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "iptype": {
                    "type": "string"
                },
                "keepEcs": {
                    "type": "boolean",
                    "description": "schema: Internal"
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string",
                    "deprecationMessage": "will be removed after v1.26.0"
                },
                "os": {
                    "type": "string"
                },
                "partition": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "productId": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "publicKey": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolume": {
                    "$ref": "#/types/cloudru:Cce/NodeRootVolume:NodeRootVolume"
                },
                "runtime": {
                    "type": "string"
                },
                "sharetype": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/cloudru:Cce/NodeStorage:NodeStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeTaint:NodeTaint"
                    }
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "clusterId",
                "flavorId",
                "rootVolume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Node resources.\n",
                "properties": {
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Internal"
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "bandwidthChargeMode": {
                        "type": "string"
                    },
                    "bandwidthSize": {
                        "type": "integer"
                    },
                    "billingMode": {
                        "type": "integer",
                        "deprecationMessage": "use charging_mode instead"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "dataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeDataVolume:NodeDataVolume"
                        }
                    },
                    "dedicatedHostId": {
                        "type": "string"
                    },
                    "ecsGroupId": {
                        "type": "string"
                    },
                    "ecsPerformanceType": {
                        "type": "string",
                        "description": "schema: Deprecated"
                    },
                    "eipId": {
                        "type": "string"
                    },
                    "eipIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "use eip_id instead"
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated"
                    },
                    "extendParamChargingMode": {
                        "type": "integer",
                        "deprecationMessage": "use charging_mode instead"
                    },
                    "extendParams": {
                        "$ref": "#/types/cloudru:Cce/NodeExtendParams:NodeExtendParams"
                    },
                    "extensionNics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeExtensionNic:NodeExtensionNic"
                        }
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfig": {
                        "$ref": "#/types/cloudru:Cce/NodeHostnameConfig:NodeHostnameConfig"
                    },
                    "initializedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iptype": {
                        "type": "string"
                    },
                    "keepEcs": {
                        "type": "boolean",
                        "description": "schema: Internal"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maxPods": {
                        "type": "integer",
                        "description": "schema: Deprecated"
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string",
                        "deprecationMessage": "will be removed after v1.26.0"
                    },
                    "os": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "postinstall": {
                        "type": "string",
                        "description": "schema: Deprecated"
                    },
                    "preinstall": {
                        "type": "string",
                        "description": "schema: Deprecated"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "productId": {
                        "type": "string",
                        "description": "schema: Deprecated"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "schema: Deprecated"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rootVolume": {
                        "$ref": "#/types/cloudru:Cce/NodeRootVolume:NodeRootVolume"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "sharetype": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "$ref": "#/types/cloudru:Cce/NodeStorage:NodeStorage"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeTaint:NodeTaint"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/nodeAttach:NodeAttach": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachDataVolume:NodeAttachDataVolume"
                    }
                },
                "dockerBaseSize": {
                    "type": "integer"
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extensionNics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachExtensionNic:NodeAttachExtensionNic"
                    }
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/cloudru:Cce/NodeAttachHostnameConfig:NodeAttachHostnameConfig"
                },
                "imageId": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lvmConfig": {
                    "type": "string"
                },
                "maxPods": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nicMultiQueue": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "nicThreshold": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "os": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "postinstall": {
                    "type": "string"
                },
                "preinstall": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rootVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachRootVolume:NodeAttachRootVolume"
                    }
                },
                "runtime": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/cloudru:Cce/NodeAttachStorage:NodeAttachStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "systemDiskKmsKeyId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachTaint:NodeAttachTaint"
                    }
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "clusterId",
                "dataVolumes",
                "ecsGroupId",
                "enterpriseProjectId",
                "extensionNics",
                "flavorId",
                "hostnameConfig",
                "initializedConditions",
                "name",
                "os",
                "privateIp",
                "publicIp",
                "region",
                "rootVolumes",
                "runtime",
                "serverId",
                "status",
                "subnetId",
                "tags"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dockerBaseSize": {
                    "type": "integer"
                },
                "hostnameConfig": {
                    "$ref": "#/types/cloudru:Cce/NodeAttachHostnameConfig:NodeAttachHostnameConfig",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "lvmConfig": {
                    "type": "string"
                },
                "maxPods": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nicMultiQueue": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "nicThreshold": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "os": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "postinstall": {
                    "type": "string"
                },
                "preinstall": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "runtime": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storage": {
                    "$ref": "#/types/cloudru:Cce/NodeAttachStorage:NodeAttachStorage"
                },
                "systemDiskKmsKeyId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachTaint:NodeAttachTaint"
                    }
                }
            },
            "requiredInputs": [
                "clusterId",
                "os",
                "serverId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodeAttach resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeAttachDataVolume:NodeAttachDataVolume"
                        }
                    },
                    "dockerBaseSize": {
                        "type": "integer"
                    },
                    "ecsGroupId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extensionNics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeAttachExtensionNic:NodeAttachExtensionNic"
                        }
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfig": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachHostnameConfig:NodeAttachHostnameConfig",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "initializedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "lvmConfig": {
                        "type": "string"
                    },
                    "maxPods": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nicMultiQueue": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "nicThreshold": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "os": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "postinstall": {
                        "type": "string"
                    },
                    "preinstall": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rootVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeAttachRootVolume:NodeAttachRootVolume"
                        }
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "$ref": "#/types/cloudru:Cce/NodeAttachStorage:NodeAttachStorage"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "systemDiskKmsKeyId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodeAttachTaint:NodeAttachTaint"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/nodePool:NodePool": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "billingMode": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "currentNodeCount": {
                    "type": "integer"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolDataVolume:NodePoolDataVolume"
                    }
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter."
                },
                "extendParams": {
                    "$ref": "#/types/cloudru:Cce/NodePoolExtendParams:NodePoolExtendParams"
                },
                "extensionScaleGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroup:NodePoolExtensionScaleGroup"
                    }
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/cloudru:Cce/NodePoolHostnameConfig:NodePoolHostnameConfig"
                },
                "ignoreInitialNodeCount": {
                    "type": "boolean"
                },
                "initialNodeCount": {
                    "type": "integer"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labelPolicyOnExistingNodes": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxNodeCount": {
                    "type": "integer"
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                },
                "minNodeCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "partition": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "podSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "rootVolume": {
                    "$ref": "#/types/cloudru:Cce/NodePoolRootVolume:NodePoolRootVolume"
                },
                "runtime": {
                    "type": "string"
                },
                "scaleDownCooldownTime": {
                    "type": "integer"
                },
                "scallEnable": {
                    "type": "boolean"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/types/cloudru:Cce/NodePoolStorage:NodePoolStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPolicyOnExistingNodes": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taintPolicyOnExistingNodes": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolTaint:NodePoolTaint"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "autoRenew",
                "billingMode",
                "chargingMode",
                "clusterId",
                "currentNodeCount",
                "dataVolumes",
                "enterpriseProjectId",
                "extendParams",
                "extensionScaleGroups",
                "flavorId",
                "hostnameConfig",
                "initialNodeCount",
                "initializedConditions",
                "labelPolicyOnExistingNodes",
                "maxPods",
                "name",
                "os",
                "region",
                "rootVolume",
                "runtime",
                "securityGroups",
                "status",
                "subnetId",
                "tagPolicyOnExistingNodes",
                "tags",
                "taintPolicyOnExistingNodes",
                "type"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clusterId": {
                    "type": "string"
                },
                "dataVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolDataVolume:NodePoolDataVolume"
                    }
                },
                "ecsGroupId": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendParam": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter."
                },
                "extendParams": {
                    "$ref": "#/types/cloudru:Cce/NodePoolExtendParams:NodePoolExtendParams"
                },
                "extensionScaleGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroup:NodePoolExtensionScaleGroup"
                    }
                },
                "flavorId": {
                    "type": "string"
                },
                "hostnameConfig": {
                    "$ref": "#/types/cloudru:Cce/NodePoolHostnameConfig:NodePoolHostnameConfig"
                },
                "ignoreInitialNodeCount": {
                    "type": "boolean"
                },
                "initialNodeCount": {
                    "type": "integer"
                },
                "initializedConditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyPair": {
                    "type": "string"
                },
                "labelPolicyOnExistingNodes": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxNodeCount": {
                    "type": "integer"
                },
                "maxPods": {
                    "type": "integer",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                },
                "minNodeCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "partition": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "podSecurityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "postinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                },
                "preinstall": {
                    "type": "string",
                    "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                },
                "priority": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rootVolume": {
                    "$ref": "#/types/cloudru:Cce/NodePoolRootVolume:NodePoolRootVolume"
                },
                "runtime": {
                    "type": "string"
                },
                "scaleDownCooldownTime": {
                    "type": "integer"
                },
                "scallEnable": {
                    "type": "boolean"
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "storage": {
                    "$ref": "#/types/cloudru:Cce/NodePoolStorage:NodePoolStorage"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPolicyOnExistingNodes": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taintPolicyOnExistingNodes": {
                    "type": "string"
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cce/NodePoolTaint:NodePoolTaint"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clusterId",
                "flavorId",
                "initialNodeCount",
                "rootVolume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NodePool resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "currentNodeCount": {
                        "type": "integer"
                    },
                    "dataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodePoolDataVolume:NodePoolDataVolume"
                        }
                    },
                    "ecsGroupId": {
                        "type": "string"
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; This parameter has been replaced by the 'extend_params' parameter."
                    },
                    "extendParams": {
                        "$ref": "#/types/cloudru:Cce/NodePoolExtendParams:NodePoolExtendParams"
                    },
                    "extensionScaleGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodePoolExtensionScaleGroup:NodePoolExtensionScaleGroup"
                        }
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfig": {
                        "$ref": "#/types/cloudru:Cce/NodePoolHostnameConfig:NodePoolHostnameConfig"
                    },
                    "ignoreInitialNodeCount": {
                        "type": "boolean"
                    },
                    "initialNodeCount": {
                        "type": "integer"
                    },
                    "initializedConditions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labelPolicyOnExistingNodes": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maxNodeCount": {
                        "type": "integer"
                    },
                    "maxPods": {
                        "type": "integer",
                        "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                    },
                    "minNodeCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "podSecurityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "postinstall": {
                        "type": "string",
                        "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                    },
                    "preinstall": {
                        "type": "string",
                        "description": "schema: Deprecated; This parameter can be configured in the 'extend_params' parameter."
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rootVolume": {
                        "$ref": "#/types/cloudru:Cce/NodePoolRootVolume:NodePoolRootVolume"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "scaleDownCooldownTime": {
                        "type": "integer"
                    },
                    "scallEnable": {
                        "type": "boolean"
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "$ref": "#/types/cloudru:Cce/NodePoolStorage:NodePoolStorage"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "subnetLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tagPolicyOnExistingNodes": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taintPolicyOnExistingNodes": {
                        "type": "string"
                    },
                    "taints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cce/NodePoolTaint:NodePoolTaint"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cce/pvc:Pvc": {
            "properties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "creationTimestamp": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "storageClassName": {
                    "type": "string"
                }
            },
            "required": [
                "accessModes",
                "clusterId",
                "creationTimestamp",
                "name",
                "namespace",
                "region",
                "status",
                "storage",
                "storageClassName"
            ],
            "inputProperties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "namespace": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storage": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "storageClassName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accessModes",
                "clusterId",
                "namespace",
                "storage",
                "storageClassName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pvc resources.\n",
                "properties": {
                    "accessModes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "creationTimestamp": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "namespace": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storage": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "storageClassName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cdm/cluster:Cluster": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "flavorName": {
                    "type": "string"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cdm/ClusterInstance:ClusterInstance"
                    }
                },
                "isAutoOff": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phoneNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicEndpoint": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scheduleBootTime": {
                    "type": "string"
                },
                "scheduleOffTime": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "created",
                "enterpriseProjectId",
                "flavorId",
                "flavorName",
                "instances",
                "isAutoOff",
                "name",
                "publicEndpoint",
                "publicIp",
                "region",
                "scheduleBootTime",
                "scheduleOffTime",
                "securityGroupId",
                "status",
                "subnetId",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isAutoOff": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "phoneNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scheduleBootTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scheduleOffTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "flavorId",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "string"
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cdm/ClusterInstance:ClusterInstance"
                        }
                    },
                    "isAutoOff": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "phoneNums": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicEndpoint": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scheduleBootTime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scheduleOffTime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "version": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ces/alarmrule:Alarmrule": {
            "properties": {
                "alarmActionEnabled": {
                    "type": "boolean"
                },
                "alarmActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleAlarmAction:AlarmruleAlarmAction"
                    }
                },
                "alarmDescription": {
                    "type": "string"
                },
                "alarmEnabled": {
                    "type": "boolean"
                },
                "alarmLevel": {
                    "type": "integer"
                },
                "alarmName": {
                    "type": "string"
                },
                "alarmState": {
                    "type": "string"
                },
                "alarmType": {
                    "type": "string"
                },
                "condition": {
                    "$ref": "#/types/cloudru:Ces/AlarmruleCondition:AlarmruleCondition"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "insufficientdataActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleInsufficientdataAction:AlarmruleInsufficientdataAction"
                    },
                    "deprecationMessage": "insufficientdata_actions is deprecated"
                },
                "metric": {
                    "$ref": "#/types/cloudru:Ces/AlarmruleMetric:AlarmruleMetric"
                },
                "okActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleOkAction:AlarmruleOkAction"
                    }
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "integer"
                }
            },
            "required": [
                "alarmName",
                "alarmState",
                "alarmType",
                "condition",
                "enterpriseProjectId",
                "metric",
                "region",
                "updateTime"
            ],
            "inputProperties": {
                "alarmActionEnabled": {
                    "type": "boolean"
                },
                "alarmActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleAlarmAction:AlarmruleAlarmAction"
                    },
                    "willReplaceOnChanges": true
                },
                "alarmDescription": {
                    "type": "string"
                },
                "alarmEnabled": {
                    "type": "boolean"
                },
                "alarmLevel": {
                    "type": "integer"
                },
                "alarmName": {
                    "type": "string"
                },
                "alarmType": {
                    "type": "string"
                },
                "condition": {
                    "$ref": "#/types/cloudru:Ces/AlarmruleCondition:AlarmruleCondition"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "insufficientdataActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleInsufficientdataAction:AlarmruleInsufficientdataAction"
                    },
                    "deprecationMessage": "insufficientdata_actions is deprecated"
                },
                "metric": {
                    "$ref": "#/types/cloudru:Ces/AlarmruleMetric:AlarmruleMetric",
                    "willReplaceOnChanges": true
                },
                "okActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleOkAction:AlarmruleOkAction"
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "alarmName",
                "condition",
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alarmrule resources.\n",
                "properties": {
                    "alarmActionEnabled": {
                        "type": "boolean"
                    },
                    "alarmActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ces/AlarmruleAlarmAction:AlarmruleAlarmAction"
                        },
                        "willReplaceOnChanges": true
                    },
                    "alarmDescription": {
                        "type": "string"
                    },
                    "alarmEnabled": {
                        "type": "boolean"
                    },
                    "alarmLevel": {
                        "type": "integer"
                    },
                    "alarmName": {
                        "type": "string"
                    },
                    "alarmState": {
                        "type": "string"
                    },
                    "alarmType": {
                        "type": "string"
                    },
                    "condition": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleCondition:AlarmruleCondition"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "insufficientdataActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ces/AlarmruleInsufficientdataAction:AlarmruleInsufficientdataAction"
                        },
                        "deprecationMessage": "insufficientdata_actions is deprecated"
                    },
                    "metric": {
                        "$ref": "#/types/cloudru:Ces/AlarmruleMetric:AlarmruleMetric",
                        "willReplaceOnChanges": true
                    },
                    "okActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ces/AlarmruleOkAction:AlarmruleOkAction"
                        },
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/aclRule:AclRule": {
            "properties": {
                "actionType": {
                    "type": "integer",
                    "description": "The action type."
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type."
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The application list."
                },
                "customServiceGroups": {
                    "$ref": "#/types/cloudru:Cfw/AclRuleCustomServiceGroups:AclRuleCustomServiceGroups",
                    "description": "The custom service group list."
                },
                "customServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleCustomService:AclRuleCustomService"
                    },
                    "description": "The custom service configuration."
                },
                "description": {
                    "type": "string",
                    "description": "The rule description."
                },
                "destinationAddressGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The destination address group list."
                },
                "destinationAddressType": {
                    "type": "integer",
                    "description": "The destination address type."
                },
                "destinationAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The destination IP address list."
                },
                "destinationDomainAddressName": {
                    "type": "string",
                    "description": "The destination domain address name."
                },
                "destinationDomainGroupId": {
                    "type": "string",
                    "description": "The destination domain group ID."
                },
                "destinationDomainGroupName": {
                    "type": "string",
                    "description": "The destination domain group name."
                },
                "destinationDomainGroupType": {
                    "type": "integer",
                    "description": "The destination domain group type."
                },
                "destinationRegionLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleDestinationRegionList:AclRuleDestinationRegionList"
                    },
                    "description": "The destination region list."
                },
                "direction": {
                    "type": "integer",
                    "description": "The rule direction."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "longConnectEnable": {
                    "type": "integer",
                    "description": "Whether to support persistent connections."
                },
                "longConnectTimeHour": {
                    "type": "integer",
                    "description": "The persistent connection duration (hour)."
                },
                "longConnectTimeMinute": {
                    "type": "integer",
                    "description": "The persistent connection duration (minute)."
                },
                "longConnectTimeSecond": {
                    "type": "integer",
                    "description": "The persistent Connection Duration (second)."
                },
                "name": {
                    "type": "string",
                    "description": "The rule name."
                },
                "objectId": {
                    "type": "string",
                    "description": "The protected object ID."
                },
                "predefinedServiceGroups": {
                    "$ref": "#/types/cloudru:Cfw/AclRulePredefinedServiceGroups:AclRulePredefinedServiceGroups",
                    "description": "The predefined service group list."
                },
                "region": {
                    "type": "string"
                },
                "ruleHitCount": {
                    "type": "string",
                    "description": "The number of times the ACL rule is hit."
                },
                "sequence": {
                    "$ref": "#/types/cloudru:Cfw/AclRuleSequence:AclRuleSequence",
                    "description": "The sequence configuration."
                },
                "sourceAddressGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source address group list."
                },
                "sourceAddressType": {
                    "type": "integer",
                    "description": "The source address type."
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source IP address list."
                },
                "sourcePredefinedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source predefined address group list."
                },
                "sourceRegionLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleSourceRegionList:AclRuleSourceRegionList"
                    },
                    "description": "The source region list."
                },
                "status": {
                    "type": "integer",
                    "description": "The rule status."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "integer",
                    "description": "The rule type."
                }
            },
            "required": [
                "actionType",
                "addressType",
                "description",
                "direction",
                "longConnectEnable",
                "longConnectTimeHour",
                "longConnectTimeMinute",
                "longConnectTimeSecond",
                "name",
                "objectId",
                "region",
                "ruleHitCount",
                "sequence",
                "status",
                "tags",
                "type"
            ],
            "inputProperties": {
                "actionType": {
                    "type": "integer",
                    "description": "The action type."
                },
                "addressType": {
                    "type": "integer",
                    "description": "The address type."
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The application list."
                },
                "customServiceGroups": {
                    "$ref": "#/types/cloudru:Cfw/AclRuleCustomServiceGroups:AclRuleCustomServiceGroups",
                    "description": "The custom service group list."
                },
                "customServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleCustomService:AclRuleCustomService"
                    },
                    "description": "The custom service configuration."
                },
                "description": {
                    "type": "string",
                    "description": "The rule description."
                },
                "destinationAddressGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The destination address group list."
                },
                "destinationAddressType": {
                    "type": "integer",
                    "description": "The destination address type."
                },
                "destinationAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The destination IP address list."
                },
                "destinationDomainAddressName": {
                    "type": "string",
                    "description": "The destination domain address name."
                },
                "destinationDomainGroupId": {
                    "type": "string",
                    "description": "The destination domain group ID."
                },
                "destinationDomainGroupName": {
                    "type": "string",
                    "description": "The destination domain group name."
                },
                "destinationDomainGroupType": {
                    "type": "integer",
                    "description": "The destination domain group type."
                },
                "destinationRegionLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleDestinationRegionList:AclRuleDestinationRegionList"
                    },
                    "description": "The destination region list."
                },
                "direction": {
                    "type": "integer",
                    "description": "The rule direction."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "longConnectEnable": {
                    "type": "integer",
                    "description": "Whether to support persistent connections."
                },
                "longConnectTimeHour": {
                    "type": "integer",
                    "description": "The persistent connection duration (hour)."
                },
                "longConnectTimeMinute": {
                    "type": "integer",
                    "description": "The persistent connection duration (minute)."
                },
                "longConnectTimeSecond": {
                    "type": "integer",
                    "description": "The persistent Connection Duration (second)."
                },
                "name": {
                    "type": "string",
                    "description": "The rule name."
                },
                "objectId": {
                    "type": "string",
                    "description": "The protected object ID."
                },
                "predefinedServiceGroups": {
                    "$ref": "#/types/cloudru:Cfw/AclRulePredefinedServiceGroups:AclRulePredefinedServiceGroups",
                    "description": "The predefined service group list."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ruleHitCount": {
                    "type": "string",
                    "description": "The number of times the ACL rule is hit."
                },
                "sequence": {
                    "$ref": "#/types/cloudru:Cfw/AclRuleSequence:AclRuleSequence",
                    "description": "The sequence configuration."
                },
                "sourceAddressGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source address group list."
                },
                "sourceAddressType": {
                    "type": "integer",
                    "description": "The source address type."
                },
                "sourceAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source IP address list."
                },
                "sourcePredefinedGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The source predefined address group list."
                },
                "sourceRegionLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleSourceRegionList:AclRuleSourceRegionList"
                    },
                    "description": "The source region list."
                },
                "status": {
                    "type": "integer",
                    "description": "The rule status."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "integer",
                    "description": "The rule type."
                }
            },
            "requiredInputs": [
                "actionType",
                "addressType",
                "longConnectEnable",
                "objectId",
                "sequence",
                "status",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AclRule resources.\n",
                "properties": {
                    "actionType": {
                        "type": "integer",
                        "description": "The action type."
                    },
                    "addressType": {
                        "type": "integer",
                        "description": "The address type."
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The application list."
                    },
                    "customServiceGroups": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleCustomServiceGroups:AclRuleCustomServiceGroups",
                        "description": "The custom service group list."
                    },
                    "customServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/AclRuleCustomService:AclRuleCustomService"
                        },
                        "description": "The custom service configuration."
                    },
                    "description": {
                        "type": "string",
                        "description": "The rule description."
                    },
                    "destinationAddressGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The destination address group list."
                    },
                    "destinationAddressType": {
                        "type": "integer",
                        "description": "The destination address type."
                    },
                    "destinationAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The destination IP address list."
                    },
                    "destinationDomainAddressName": {
                        "type": "string",
                        "description": "The destination domain address name."
                    },
                    "destinationDomainGroupId": {
                        "type": "string",
                        "description": "The destination domain group ID."
                    },
                    "destinationDomainGroupName": {
                        "type": "string",
                        "description": "The destination domain group name."
                    },
                    "destinationDomainGroupType": {
                        "type": "integer",
                        "description": "The destination domain group type."
                    },
                    "destinationRegionLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/AclRuleDestinationRegionList:AclRuleDestinationRegionList"
                        },
                        "description": "The destination region list."
                    },
                    "direction": {
                        "type": "integer",
                        "description": "The rule direction."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "longConnectEnable": {
                        "type": "integer",
                        "description": "Whether to support persistent connections."
                    },
                    "longConnectTimeHour": {
                        "type": "integer",
                        "description": "The persistent connection duration (hour)."
                    },
                    "longConnectTimeMinute": {
                        "type": "integer",
                        "description": "The persistent connection duration (minute)."
                    },
                    "longConnectTimeSecond": {
                        "type": "integer",
                        "description": "The persistent Connection Duration (second)."
                    },
                    "name": {
                        "type": "string",
                        "description": "The rule name."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "The protected object ID."
                    },
                    "predefinedServiceGroups": {
                        "$ref": "#/types/cloudru:Cfw/AclRulePredefinedServiceGroups:AclRulePredefinedServiceGroups",
                        "description": "The predefined service group list."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ruleHitCount": {
                        "type": "string",
                        "description": "The number of times the ACL rule is hit."
                    },
                    "sequence": {
                        "$ref": "#/types/cloudru:Cfw/AclRuleSequence:AclRuleSequence",
                        "description": "The sequence configuration."
                    },
                    "sourceAddressGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The source address group list."
                    },
                    "sourceAddressType": {
                        "type": "integer",
                        "description": "The source address type."
                    },
                    "sourceAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The source IP address list."
                    },
                    "sourcePredefinedGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The source predefined address group list."
                    },
                    "sourceRegionLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/AclRuleSourceRegionList:AclRuleSourceRegionList"
                        },
                        "description": "The source region list."
                    },
                    "status": {
                        "type": "integer",
                        "description": "The rule status."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "integer",
                        "description": "The rule type."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/addressGroup:AddressGroup": {
            "properties": {
                "addressType": {
                    "type": "integer",
                    "description": "schema: Computed; Specifies the Address type."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the Address group description."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the IP address group name."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "addressType",
                "name",
                "objectId",
                "region"
            ],
            "inputProperties": {
                "addressType": {
                    "type": "integer",
                    "description": "schema: Computed; Specifies the Address type.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the Address group description."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the IP address group name."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "objectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AddressGroup resources.\n",
                "properties": {
                    "addressType": {
                        "type": "integer",
                        "description": "schema: Computed; Specifies the Address type.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the Address group description."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the IP address group name."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the protected object ID.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/addressGroupMember:AddressGroupMember": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Specifies the IP address."
                },
                "addressType": {
                    "type": "integer",
                    "description": "Specifies the address type."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies address description."
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the IP address group."
                },
                "name": {
                    "type": "string",
                    "description": "schema: Deprecated; Specifies the address name."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "address",
                "addressType",
                "description",
                "groupId",
                "name",
                "region"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Specifies the IP address.",
                    "willReplaceOnChanges": true
                },
                "addressType": {
                    "type": "integer",
                    "description": "Specifies the address type.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies address description.",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the IP address group.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "schema: Deprecated; Specifies the address name.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "address",
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AddressGroupMember resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Specifies the IP address.",
                        "willReplaceOnChanges": true
                    },
                    "addressType": {
                        "type": "integer",
                        "description": "Specifies the address type.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies address description.",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Specifies the ID of the IP address group.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "schema: Deprecated; Specifies the address name.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/alarmConfig:AlarmConfig": {
            "properties": {
                "alarmTimePeriod": {
                    "type": "integer",
                    "description": "Specifies the alarm period."
                },
                "alarmType": {
                    "type": "integer",
                    "description": "Specifies the alarm type."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "frequencyCount": {
                    "type": "integer",
                    "description": "Specifies the alarm triggering frequency."
                },
                "frequencyTime": {
                    "type": "integer",
                    "description": "Specifies the alarm frequency time range."
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "Specifies the firewall ID."
                },
                "language": {
                    "type": "string",
                    "description": "The alarm language."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the resource. If omitted, the provider-level region will be used."
                },
                "severity": {
                    "type": "string",
                    "description": "Specifies the alarm severity."
                },
                "topicUrn": {
                    "type": "string",
                    "description": "Specifies the alarm URN."
                },
                "username": {
                    "type": "string",
                    "description": "The username."
                }
            },
            "required": [
                "alarmTimePeriod",
                "alarmType",
                "frequencyCount",
                "frequencyTime",
                "fwInstanceId",
                "language",
                "region",
                "severity",
                "topicUrn",
                "username"
            ],
            "inputProperties": {
                "alarmTimePeriod": {
                    "type": "integer",
                    "description": "Specifies the alarm period."
                },
                "alarmType": {
                    "type": "integer",
                    "description": "Specifies the alarm type."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "frequencyCount": {
                    "type": "integer",
                    "description": "Specifies the alarm triggering frequency."
                },
                "frequencyTime": {
                    "type": "integer",
                    "description": "Specifies the alarm frequency time range."
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "Specifies the firewall ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the resource. If omitted, the provider-level region will be used.",
                    "willReplaceOnChanges": true
                },
                "severity": {
                    "type": "string",
                    "description": "Specifies the alarm severity."
                },
                "topicUrn": {
                    "type": "string",
                    "description": "Specifies the alarm URN."
                }
            },
            "requiredInputs": [
                "alarmTimePeriod",
                "alarmType",
                "frequencyCount",
                "frequencyTime",
                "fwInstanceId",
                "severity",
                "topicUrn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlarmConfig resources.\n",
                "properties": {
                    "alarmTimePeriod": {
                        "type": "integer",
                        "description": "Specifies the alarm period."
                    },
                    "alarmType": {
                        "type": "integer",
                        "description": "Specifies the alarm type."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "frequencyCount": {
                        "type": "integer",
                        "description": "Specifies the alarm triggering frequency."
                    },
                    "frequencyTime": {
                        "type": "integer",
                        "description": "Specifies the alarm frequency time range."
                    },
                    "fwInstanceId": {
                        "type": "string",
                        "description": "Specifies the firewall ID."
                    },
                    "language": {
                        "type": "string",
                        "description": "The alarm language."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the resource. If omitted, the provider-level region will be used.",
                        "willReplaceOnChanges": true
                    },
                    "severity": {
                        "type": "string",
                        "description": "Specifies the alarm severity."
                    },
                    "topicUrn": {
                        "type": "string",
                        "description": "Specifies the alarm URN."
                    },
                    "username": {
                        "type": "string",
                        "description": "The username."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/antiVirus:AntiVirus": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the resource. If omitted, the provider-level region will be used."
                },
                "scanProtocolConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AntiVirusScanProtocolConfig:AntiVirusScanProtocolConfig"
                    },
                    "description": "Specifies the scan protocol configurations."
                }
            },
            "required": [
                "objectId",
                "region",
                "scanProtocolConfigs"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the resource. If omitted, the provider-level region will be used.",
                    "willReplaceOnChanges": true
                },
                "scanProtocolConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/AntiVirusScanProtocolConfig:AntiVirusScanProtocolConfig"
                    },
                    "description": "Specifies the scan protocol configurations."
                }
            },
            "requiredInputs": [
                "objectId",
                "scanProtocolConfigs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AntiVirus resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the protected object ID."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the resource. If omitted, the provider-level region will be used.",
                        "willReplaceOnChanges": true
                    },
                    "scanProtocolConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/AntiVirusScanProtocolConfig:AntiVirusScanProtocolConfig"
                        },
                        "description": "Specifies the scan protocol configurations."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/blackWhiteList:BlackWhiteList": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Specifies the address."
                },
                "addressType": {
                    "type": "integer",
                    "description": "Specifies the IP address type."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description."
                },
                "direction": {
                    "type": "integer",
                    "description": "Specifies the address direction."
                },
                "listType": {
                    "type": "integer",
                    "description": "Specifies the list type."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "port": {
                    "type": "string",
                    "description": "Specifies the destination port."
                },
                "protocol": {
                    "type": "integer",
                    "description": "Specifies the protocol type."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "address",
                "addressType",
                "direction",
                "listType",
                "objectId",
                "port",
                "protocol",
                "region"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Specifies the address."
                },
                "addressType": {
                    "type": "integer",
                    "description": "Specifies the IP address type."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description."
                },
                "direction": {
                    "type": "integer",
                    "description": "Specifies the address direction."
                },
                "listType": {
                    "type": "integer",
                    "description": "Specifies the list type.",
                    "willReplaceOnChanges": true
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID.",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "string",
                    "description": "Specifies the destination port."
                },
                "protocol": {
                    "type": "integer",
                    "description": "Specifies the protocol type."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "address",
                "addressType",
                "direction",
                "listType",
                "objectId",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BlackWhiteList resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Specifies the address."
                    },
                    "addressType": {
                        "type": "integer",
                        "description": "Specifies the IP address type."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description."
                    },
                    "direction": {
                        "type": "integer",
                        "description": "Specifies the address direction."
                    },
                    "listType": {
                        "type": "integer",
                        "description": "Specifies the list type.",
                        "willReplaceOnChanges": true
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the protected object ID.",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "string",
                        "description": "Specifies the destination port."
                    },
                    "protocol": {
                        "type": "integer",
                        "description": "Specifies the protocol type."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/captureTask:CaptureTask": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the capture task."
                },
                "destination": {
                    "$ref": "#/types/cloudru:Cfw/CaptureTaskDestination:CaptureTaskDestination",
                    "description": "The destination configuration."
                },
                "duration": {
                    "type": "integer",
                    "description": "The capture task duration."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "The ID of the firewall instance."
                },
                "maxPackets": {
                    "type": "integer",
                    "description": "The maximum number of packets captured."
                },
                "name": {
                    "type": "string",
                    "description": "The capture task name."
                },
                "region": {
                    "type": "string"
                },
                "service": {
                    "$ref": "#/types/cloudru:Cfw/CaptureTaskService:CaptureTaskService",
                    "description": "The service configuration."
                },
                "source": {
                    "$ref": "#/types/cloudru:Cfw/CaptureTaskSource:CaptureTaskSource",
                    "description": "The source configuration."
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the capture task."
                },
                "stopCapture": {
                    "type": "boolean",
                    "description": "Whether to stop the capture."
                },
                "taskId": {
                    "type": "string",
                    "description": "The ID of the capture task."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time of the capture task."
                }
            },
            "required": [
                "createdAt",
                "destination",
                "duration",
                "fwInstanceId",
                "maxPackets",
                "name",
                "region",
                "service",
                "source",
                "status",
                "taskId",
                "updatedAt"
            ],
            "inputProperties": {
                "destination": {
                    "$ref": "#/types/cloudru:Cfw/CaptureTaskDestination:CaptureTaskDestination",
                    "description": "The destination configuration."
                },
                "duration": {
                    "type": "integer",
                    "description": "The capture task duration."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "The ID of the firewall instance."
                },
                "maxPackets": {
                    "type": "integer",
                    "description": "The maximum number of packets captured."
                },
                "name": {
                    "type": "string",
                    "description": "The capture task name."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "service": {
                    "$ref": "#/types/cloudru:Cfw/CaptureTaskService:CaptureTaskService",
                    "description": "The service configuration."
                },
                "source": {
                    "$ref": "#/types/cloudru:Cfw/CaptureTaskSource:CaptureTaskSource",
                    "description": "The source configuration."
                },
                "stopCapture": {
                    "type": "boolean",
                    "description": "Whether to stop the capture."
                }
            },
            "requiredInputs": [
                "destination",
                "duration",
                "fwInstanceId",
                "maxPackets",
                "service",
                "source"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CaptureTask resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the capture task."
                    },
                    "destination": {
                        "$ref": "#/types/cloudru:Cfw/CaptureTaskDestination:CaptureTaskDestination",
                        "description": "The destination configuration."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The capture task duration."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string",
                        "description": "The ID of the firewall instance."
                    },
                    "maxPackets": {
                        "type": "integer",
                        "description": "The maximum number of packets captured."
                    },
                    "name": {
                        "type": "string",
                        "description": "The capture task name."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "service": {
                        "$ref": "#/types/cloudru:Cfw/CaptureTaskService:CaptureTaskService",
                        "description": "The service configuration."
                    },
                    "source": {
                        "$ref": "#/types/cloudru:Cfw/CaptureTaskSource:CaptureTaskSource",
                        "description": "The source configuration."
                    },
                    "status": {
                        "type": "integer",
                        "description": "The status of the capture task."
                    },
                    "stopCapture": {
                        "type": "boolean",
                        "description": "Whether to stop the capture."
                    },
                    "taskId": {
                        "type": "string",
                        "description": "The ID of the capture task."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time of the capture task."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/dnsResolution:DnsResolution": {
            "properties": {
                "customDnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The custom DNS servers."
                },
                "defaultDnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The default DNS servers."
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "The ID of the firewall."
                },
                "healthCheckDomainName": {
                    "type": "string",
                    "description": "The health check domain name."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "fwInstanceId",
                "healthCheckDomainName",
                "region"
            ],
            "inputProperties": {
                "customDnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The custom DNS servers."
                },
                "defaultDnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The default DNS servers."
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "The ID of the firewall.",
                    "willReplaceOnChanges": true
                },
                "healthCheckDomainName": {
                    "type": "string",
                    "description": "The health check domain name."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fwInstanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsResolution resources.\n",
                "properties": {
                    "customDnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The custom DNS servers."
                    },
                    "defaultDnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The default DNS servers."
                    },
                    "fwInstanceId": {
                        "type": "string",
                        "description": "The ID of the firewall.",
                        "willReplaceOnChanges": true
                    },
                    "healthCheckDomainName": {
                        "type": "string",
                        "description": "The health check domain name."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/domainNameGroup:DomainNameGroup": {
            "properties": {
                "configStatus": {
                    "type": "integer",
                    "description": "The config status of the domain name group."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the domain name group."
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/DomainNameGroupDomainName:DomainNameGroupDomainName"
                    },
                    "description": "Specifies the list of domain names."
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "Specifies the firewall instance ID."
                },
                "message": {
                    "type": "string",
                    "description": "The message of the domain name group."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the domain name group."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "refCount": {
                    "type": "integer",
                    "description": "The reference count of the domain name group."
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "description": "Specifies the type of the domain name group."
                }
            },
            "required": [
                "configStatus",
                "fwInstanceId",
                "message",
                "name",
                "objectId",
                "refCount",
                "region",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the domain name group."
                },
                "domainNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/DomainNameGroupDomainName:DomainNameGroupDomainName"
                    },
                    "description": "Specifies the list of domain names."
                },
                "fwInstanceId": {
                    "type": "string",
                    "description": "Specifies the firewall instance ID.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the domain name group."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "integer",
                    "description": "Specifies the type of the domain name group.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fwInstanceId",
                "objectId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainNameGroup resources.\n",
                "properties": {
                    "configStatus": {
                        "type": "integer",
                        "description": "The config status of the domain name group."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the domain name group."
                    },
                    "domainNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/DomainNameGroupDomainName:DomainNameGroupDomainName"
                        },
                        "description": "Specifies the list of domain names."
                    },
                    "fwInstanceId": {
                        "type": "string",
                        "description": "Specifies the firewall instance ID.",
                        "willReplaceOnChanges": true
                    },
                    "message": {
                        "type": "string",
                        "description": "The message of the domain name group."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the domain name group."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the protected object ID.",
                        "willReplaceOnChanges": true
                    },
                    "refCount": {
                        "type": "integer",
                        "description": "The reference count of the domain name group."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "integer",
                        "description": "Specifies the type of the domain name group.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/eipProtection:EipProtection": {
            "properties": {
                "objectId": {
                    "type": "string",
                    "description": "The protected object ID."
                },
                "protectedEips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/EipProtectionProtectedEip:EipProtectionProtectedEip"
                    },
                    "description": "The protected EIP configurations."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "objectId",
                "protectedEips",
                "region"
            ],
            "inputProperties": {
                "objectId": {
                    "type": "string",
                    "description": "The protected object ID.",
                    "willReplaceOnChanges": true
                },
                "protectedEips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/EipProtectionProtectedEip:EipProtectionProtectedEip"
                    },
                    "description": "The protected EIP configurations."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "objectId",
                "protectedEips"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EipProtection resources.\n",
                "properties": {
                    "objectId": {
                        "type": "string",
                        "description": "The protected object ID.",
                        "willReplaceOnChanges": true
                    },
                    "protectedEips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/EipProtectionProtectedEip:EipProtectionProtectedEip"
                        },
                        "description": "The protected EIP configurations."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/firewall:Firewall": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode."
                },
                "eastWestFirewallErAttachmentId": {
                    "type": "string",
                    "description": "Enterprise Router and Firewall Connection ID"
                },
                "eastWestFirewallErId": {
                    "type": "string",
                    "description": "Specifies the ER ID of the east-west firewall."
                },
                "eastWestFirewallInspectionCidr": {
                    "type": "string",
                    "description": "Specifies the inspection cidr of the east-west firewall."
                },
                "eastWestFirewallInspectionVpcId": {
                    "type": "string",
                    "description": "The east-west firewall inspection VPC ID."
                },
                "eastWestFirewallMode": {
                    "type": "string",
                    "description": "Specifies the mode of the east-west firewall."
                },
                "eastWestFirewallStatus": {
                    "type": "integer",
                    "description": "Specifies the protection statue of the east-west firewall."
                },
                "engineType": {
                    "type": "integer",
                    "description": "The engine type"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID of the firewall."
                },
                "flavor": {
                    "$ref": "#/types/cloudru:Cfw/FirewallFlavor:FirewallFlavor",
                    "description": "Specifies the flavor of the firewall."
                },
                "haType": {
                    "type": "integer",
                    "description": "The HA type."
                },
                "ipsProtectionMode": {
                    "type": "integer",
                    "description": "Specifies the IPS protection mode of the firewall."
                },
                "ipsSwitchStatus": {
                    "type": "integer",
                    "description": "Specifies the IPS patch switch status of the firewall."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the firewall name."
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectObjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cfw/FirewallProtectObject:FirewallProtectObject"
                    },
                    "description": "The protect objects list."
                },
                "region": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "integer",
                    "description": "The service type."
                },
                "status": {
                    "type": "integer",
                    "description": "The firewall status."
                },
                "supportIpv6": {
                    "type": "boolean",
                    "description": "Whether IPv6 is supported."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "eastWestFirewallErAttachmentId",
                "eastWestFirewallErId",
                "eastWestFirewallInspectionCidr",
                "eastWestFirewallInspectionVpcId",
                "eastWestFirewallMode",
                "engineType",
                "enterpriseProjectId",
                "flavor",
                "haType",
                "name",
                "protectObjects",
                "region",
                "serviceType",
                "status",
                "supportIpv6",
                "tags"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode.",
                    "willReplaceOnChanges": true
                },
                "eastWestFirewallErId": {
                    "type": "string",
                    "description": "Specifies the ER ID of the east-west firewall."
                },
                "eastWestFirewallInspectionCidr": {
                    "type": "string",
                    "description": "Specifies the inspection cidr of the east-west firewall."
                },
                "eastWestFirewallMode": {
                    "type": "string",
                    "description": "Specifies the mode of the east-west firewall."
                },
                "eastWestFirewallStatus": {
                    "type": "integer",
                    "description": "Specifies the protection statue of the east-west firewall."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID of the firewall.",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "$ref": "#/types/cloudru:Cfw/FirewallFlavor:FirewallFlavor",
                    "description": "Specifies the flavor of the firewall.",
                    "willReplaceOnChanges": true
                },
                "ipsProtectionMode": {
                    "type": "integer",
                    "description": "Specifies the IPS protection mode of the firewall."
                },
                "ipsSwitchStatus": {
                    "type": "integer",
                    "description": "Specifies the IPS patch switch status of the firewall."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the firewall name.",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "flavor"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Firewall resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "description": "Specifies the charging mode.",
                        "willReplaceOnChanges": true
                    },
                    "eastWestFirewallErAttachmentId": {
                        "type": "string",
                        "description": "Enterprise Router and Firewall Connection ID"
                    },
                    "eastWestFirewallErId": {
                        "type": "string",
                        "description": "Specifies the ER ID of the east-west firewall."
                    },
                    "eastWestFirewallInspectionCidr": {
                        "type": "string",
                        "description": "Specifies the inspection cidr of the east-west firewall."
                    },
                    "eastWestFirewallInspectionVpcId": {
                        "type": "string",
                        "description": "The east-west firewall inspection VPC ID."
                    },
                    "eastWestFirewallMode": {
                        "type": "string",
                        "description": "Specifies the mode of the east-west firewall."
                    },
                    "eastWestFirewallStatus": {
                        "type": "integer",
                        "description": "Specifies the protection statue of the east-west firewall."
                    },
                    "engineType": {
                        "type": "integer",
                        "description": "The engine type"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID of the firewall.",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "$ref": "#/types/cloudru:Cfw/FirewallFlavor:FirewallFlavor",
                        "description": "Specifies the flavor of the firewall.",
                        "willReplaceOnChanges": true
                    },
                    "haType": {
                        "type": "integer",
                        "description": "The HA type."
                    },
                    "ipsProtectionMode": {
                        "type": "integer",
                        "description": "Specifies the IPS protection mode of the firewall."
                    },
                    "ipsSwitchStatus": {
                        "type": "integer",
                        "description": "Specifies the IPS patch switch status of the firewall."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the firewall name.",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protectObjects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/FirewallProtectObject:FirewallProtectObject"
                        },
                        "description": "The protect objects list."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceType": {
                        "type": "integer",
                        "description": "The service type."
                    },
                    "status": {
                        "type": "integer",
                        "description": "The firewall status."
                    },
                    "supportIpv6": {
                        "type": "boolean",
                        "description": "Whether IPv6 is supported."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/ipsRuleModeChange:IpsRuleModeChange": {
            "properties": {
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID."
                },
                "ipsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the IPS ID list."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the resource. If omitted, the provider-level region will be used."
                },
                "status": {
                    "type": "string",
                    "description": "Specifies the IPS rule status."
                }
            },
            "required": [
                "objectId",
                "region",
                "status"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID."
                },
                "ipsIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the IPS ID list."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the resource. If omitted, the provider-level region will be used.",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "Specifies the IPS rule status."
                }
            },
            "requiredInputs": [
                "objectId",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpsRuleModeChange resources.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID."
                    },
                    "ipsIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the IPS ID list."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the protected object ID."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the resource. If omitted, the provider-level region will be used.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Specifies the IPS rule status."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/ltsLog:LtsLog": {
            "properties": {
                "fwInstanceId": {
                    "type": "string",
                    "description": "The ID of the firewall."
                },
                "ltsAccessLogStreamEnable": {
                    "type": "integer",
                    "description": "LTS access log stream switch."
                },
                "ltsAccessLogStreamId": {
                    "type": "string",
                    "description": "LTS access log stream ID."
                },
                "ltsAttackLogStreamEnable": {
                    "type": "integer",
                    "description": "LTS attack log stream switch."
                },
                "ltsAttackLogStreamId": {
                    "type": "string",
                    "description": "LTS attack log stream ID."
                },
                "ltsFlowLogStreamEnable": {
                    "type": "integer",
                    "description": "LTS flow log stream switch."
                },
                "ltsFlowLogStreamId": {
                    "type": "string",
                    "description": "LTS flow log stream ID."
                },
                "ltsLogGroupId": {
                    "type": "string",
                    "description": "LTS log group ID."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "fwInstanceId",
                "ltsAccessLogStreamEnable",
                "ltsAttackLogStreamEnable",
                "ltsFlowLogStreamEnable",
                "ltsLogGroupId",
                "region"
            ],
            "inputProperties": {
                "fwInstanceId": {
                    "type": "string",
                    "description": "The ID of the firewall.",
                    "willReplaceOnChanges": true
                },
                "ltsAccessLogStreamEnable": {
                    "type": "integer",
                    "description": "LTS access log stream switch."
                },
                "ltsAccessLogStreamId": {
                    "type": "string",
                    "description": "LTS access log stream ID."
                },
                "ltsAttackLogStreamEnable": {
                    "type": "integer",
                    "description": "LTS attack log stream switch."
                },
                "ltsAttackLogStreamId": {
                    "type": "string",
                    "description": "LTS attack log stream ID."
                },
                "ltsFlowLogStreamEnable": {
                    "type": "integer",
                    "description": "LTS flow log stream switch."
                },
                "ltsFlowLogStreamId": {
                    "type": "string",
                    "description": "LTS flow log stream ID."
                },
                "ltsLogGroupId": {
                    "type": "string",
                    "description": "LTS log group ID."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fwInstanceId",
                "ltsAccessLogStreamEnable",
                "ltsAttackLogStreamEnable",
                "ltsFlowLogStreamEnable",
                "ltsLogGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LtsLog resources.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string",
                        "description": "The ID of the firewall.",
                        "willReplaceOnChanges": true
                    },
                    "ltsAccessLogStreamEnable": {
                        "type": "integer",
                        "description": "LTS access log stream switch."
                    },
                    "ltsAccessLogStreamId": {
                        "type": "string",
                        "description": "LTS access log stream ID."
                    },
                    "ltsAttackLogStreamEnable": {
                        "type": "integer",
                        "description": "LTS attack log stream switch."
                    },
                    "ltsAttackLogStreamId": {
                        "type": "string",
                        "description": "LTS attack log stream ID."
                    },
                    "ltsFlowLogStreamEnable": {
                        "type": "integer",
                        "description": "LTS flow log stream switch."
                    },
                    "ltsFlowLogStreamId": {
                        "type": "string",
                        "description": "LTS flow log stream ID."
                    },
                    "ltsLogGroupId": {
                        "type": "string",
                        "description": "LTS log group ID."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/serviceGroup:ServiceGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the service group description."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the service group name."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "objectId",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the service group description."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the service group name."
                },
                "objectId": {
                    "type": "string",
                    "description": "Specifies the protected object ID.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "objectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Specifies the service group description."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the service group name."
                    },
                    "objectId": {
                        "type": "string",
                        "description": "Specifies the protected object ID.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cfw/serviceGroupMember:ServiceGroupMember": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the service group member description."
                },
                "destPort": {
                    "type": "string",
                    "description": "Specifies the destination port."
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the service group."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the service group member name."
                },
                "protocol": {
                    "type": "integer",
                    "description": "Specifies the protocol type."
                },
                "region": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "Specifies the source port."
                }
            },
            "required": [
                "description",
                "destPort",
                "groupId",
                "name",
                "protocol",
                "region",
                "sourcePort"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the service group member description.",
                    "willReplaceOnChanges": true
                },
                "destPort": {
                    "type": "string",
                    "description": "Specifies the destination port.",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the service group.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the service group member name.",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "integer",
                    "description": "Specifies the protocol type.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourcePort": {
                    "type": "string",
                    "description": "Specifies the source port.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destPort",
                "groupId",
                "protocol",
                "sourcePort"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceGroupMember resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Specifies the service group member description.",
                        "willReplaceOnChanges": true
                    },
                    "destPort": {
                        "type": "string",
                        "description": "Specifies the destination port.",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Specifies the ID of the service group.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the service group member name.",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "integer",
                        "description": "Specifies the protocol type.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourcePort": {
                        "type": "string",
                        "description": "Specifies the source port.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Css/cluster:Cluster": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "backupAvailable": {
                    "type": "boolean"
                },
                "backupStrategy": {
                    "$ref": "#/types/cloudru:Css/ClusterBackupStrategy:ClusterBackupStrategy"
                },
                "bandwidthResourceId": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clientNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterClientNodeConfig:ClusterClientNodeConfig"
                },
                "coldNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterColdNodeConfig:ClusterColdNodeConfig"
                },
                "created": {
                    "type": "string",
                    "description": "schema: Deprecated; use created_at instead"
                },
                "createdAt": {
                    "type": "string"
                },
                "diskEncrypted": {
                    "type": "boolean"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "essNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterEssNodeConfig:ClusterEssNodeConfig",
                    "description": "schema: Required"
                },
                "expectNodeNum": {
                    "type": "integer",
                    "deprecationMessage": "please use ess_node_config.instance_number instead"
                },
                "httpsEnabled": {
                    "type": "boolean"
                },
                "isPeriod": {
                    "type": "boolean"
                },
                "kibanaPublicAccess": {
                    "$ref": "#/types/cloudru:Css/ClusterKibanaPublicAccess:ClusterKibanaPublicAccess"
                },
                "masterNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterMasterNodeConfig:ClusterMasterNodeConfig"
                },
                "name": {
                    "type": "string"
                },
                "nodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterNodeConfig:ClusterNodeConfig",
                    "deprecationMessage": "please use ess_node_config instead"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Css/ClusterNode:ClusterNode"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicAccess": {
                    "$ref": "#/types/cloudru:Css/ClusterPublicAccess:ClusterPublicAccess"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "securityMode": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "vpcepEndpoint": {
                    "$ref": "#/types/cloudru:Css/ClusterVpcepEndpoint:ClusterVpcepEndpoint"
                },
                "vpcepEndpointId": {
                    "type": "string"
                },
                "vpcepIp": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "backupAvailable",
                "bandwidthResourceId",
                "chargingMode",
                "created",
                "createdAt",
                "diskEncrypted",
                "endpoint",
                "engineVersion",
                "enterpriseProjectId",
                "essNodeConfig",
                "expectNodeNum",
                "httpsEnabled",
                "isPeriod",
                "name",
                "nodeConfig",
                "nodes",
                "region",
                "securityGroupId",
                "status",
                "subnetId",
                "tags",
                "updatedAt",
                "vpcId",
                "vpcepEndpointId",
                "vpcepIp"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "backupStrategy": {
                    "$ref": "#/types/cloudru:Css/ClusterBackupStrategy:ClusterBackupStrategy"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clientNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterClientNodeConfig:ClusterClientNodeConfig"
                },
                "coldNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterColdNodeConfig:ClusterColdNodeConfig"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "essNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterEssNodeConfig:ClusterEssNodeConfig",
                    "description": "schema: Required"
                },
                "expectNodeNum": {
                    "type": "integer",
                    "deprecationMessage": "please use ess_node_config.instance_number instead"
                },
                "httpsEnabled": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "kibanaPublicAccess": {
                    "$ref": "#/types/cloudru:Css/ClusterKibanaPublicAccess:ClusterKibanaPublicAccess"
                },
                "masterNodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterMasterNodeConfig:ClusterMasterNodeConfig"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nodeConfig": {
                    "$ref": "#/types/cloudru:Css/ClusterNodeConfig:ClusterNodeConfig",
                    "deprecationMessage": "please use ess_node_config instead",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicAccess": {
                    "$ref": "#/types/cloudru:Css/ClusterPublicAccess:ClusterPublicAccess"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "securityMode": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "vpcepEndpoint": {
                    "$ref": "#/types/cloudru:Css/ClusterVpcepEndpoint:ClusterVpcepEndpoint"
                }
            },
            "requiredInputs": [
                "engineVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "schema: Required"
                    },
                    "backupAvailable": {
                        "type": "boolean"
                    },
                    "backupStrategy": {
                        "$ref": "#/types/cloudru:Css/ClusterBackupStrategy:ClusterBackupStrategy"
                    },
                    "bandwidthResourceId": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "clientNodeConfig": {
                        "$ref": "#/types/cloudru:Css/ClusterClientNodeConfig:ClusterClientNodeConfig"
                    },
                    "coldNodeConfig": {
                        "$ref": "#/types/cloudru:Css/ClusterColdNodeConfig:ClusterColdNodeConfig"
                    },
                    "created": {
                        "type": "string",
                        "description": "schema: Deprecated; use created_at instead"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "diskEncrypted": {
                        "type": "boolean"
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "engineType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "essNodeConfig": {
                        "$ref": "#/types/cloudru:Css/ClusterEssNodeConfig:ClusterEssNodeConfig",
                        "description": "schema: Required"
                    },
                    "expectNodeNum": {
                        "type": "integer",
                        "deprecationMessage": "please use ess_node_config.instance_number instead"
                    },
                    "httpsEnabled": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "isPeriod": {
                        "type": "boolean"
                    },
                    "kibanaPublicAccess": {
                        "$ref": "#/types/cloudru:Css/ClusterKibanaPublicAccess:ClusterKibanaPublicAccess"
                    },
                    "masterNodeConfig": {
                        "$ref": "#/types/cloudru:Css/ClusterMasterNodeConfig:ClusterMasterNodeConfig"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "nodeConfig": {
                        "$ref": "#/types/cloudru:Css/ClusterNodeConfig:ClusterNodeConfig",
                        "deprecationMessage": "please use ess_node_config instead",
                        "willReplaceOnChanges": true
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Css/ClusterNode:ClusterNode"
                        }
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "publicAccess": {
                        "$ref": "#/types/cloudru:Css/ClusterPublicAccess:ClusterPublicAccess"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "schema: Required"
                    },
                    "securityMode": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "vpcepEndpoint": {
                        "$ref": "#/types/cloudru:Css/ClusterVpcepEndpoint:ClusterVpcepEndpoint"
                    },
                    "vpcepEndpointId": {
                        "type": "string"
                    },
                    "vpcepIp": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cts/dataTracker:DataTracker": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "createTime": {
                    "type": "integer"
                },
                "dataBucket": {
                    "type": "string"
                },
                "dataOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filePrefix": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "isAuthorizedBucket": {
                    "type": "boolean"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "logGroupName": {
                    "type": "string"
                },
                "logTopicName": {
                    "type": "string"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "obsRetentionPeriod": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "transferEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "required": [
                "agencyName",
                "createTime",
                "dataBucket",
                "dataOperations",
                "detail",
                "domainId",
                "groupId",
                "isAuthorizedBucket",
                "logGroupName",
                "logTopicName",
                "name",
                "region",
                "status",
                "streamId",
                "tags",
                "transferEnabled",
                "type"
            ],
            "inputProperties": {
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "dataBucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "filePrefix": {
                    "type": "string"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "obsRetentionPeriod": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "dataBucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DataTracker resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "compressType": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "integer"
                    },
                    "dataBucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataOperations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "detail": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "filePrefix": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "isAuthorizedBucket": {
                        "type": "boolean"
                    },
                    "isSortByService": {
                        "type": "boolean"
                    },
                    "logGroupName": {
                        "type": "string"
                    },
                    "logTopicName": {
                        "type": "string"
                    },
                    "ltsEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "obsRetentionPeriod": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "transferEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "validateFile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cts/notification:Notification": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/types/cloudru:Cts/NotificationFilter:NotificationFilter"
                },
                "name": {
                    "type": "string"
                },
                "notificationId": {
                    "type": "string"
                },
                "operationType": {
                    "type": "string"
                },
                "operationUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cts/NotificationOperationUser:NotificationOperationUser"
                    }
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cts/NotificationOperation:NotificationOperation"
                    }
                },
                "region": {
                    "type": "string"
                },
                "smnTopic": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "notificationId",
                "operationType",
                "region",
                "status"
            ],
            "inputProperties": {
                "agencyName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "filter": {
                    "$ref": "#/types/cloudru:Cts/NotificationFilter:NotificationFilter"
                },
                "name": {
                    "type": "string"
                },
                "operationType": {
                    "type": "string"
                },
                "operationUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cts/NotificationOperationUser:NotificationOperationUser"
                    }
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Cts/NotificationOperation:NotificationOperation"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "smnTopic": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "operationType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Notification resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "filter": {
                        "$ref": "#/types/cloudru:Cts/NotificationFilter:NotificationFilter"
                    },
                    "name": {
                        "type": "string"
                    },
                    "notificationId": {
                        "type": "string"
                    },
                    "operationType": {
                        "type": "string"
                    },
                    "operationUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cts/NotificationOperationUser:NotificationOperationUser"
                        }
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Cts/NotificationOperation:NotificationOperation"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "smnTopic": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Cts/tracker:Tracker": {
            "properties": {
                "agencyName": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "createTime": {
                    "type": "integer"
                },
                "deleteTracker": {
                    "type": "boolean"
                },
                "detail": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "excludeServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filePrefix": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "isAuthorizedBucket": {
                    "type": "boolean"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "kmsId": {
                    "type": "string"
                },
                "logGroupName": {
                    "type": "string"
                },
                "logTopicName": {
                    "type": "string"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "transferEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "required": [
                "agencyName",
                "createTime",
                "detail",
                "domainId",
                "groupId",
                "isAuthorizedBucket",
                "logGroupName",
                "logTopicName",
                "name",
                "organizationEnabled",
                "region",
                "status",
                "streamId",
                "tags",
                "transferEnabled",
                "type"
            ],
            "inputProperties": {
                "bucketName": {
                    "type": "string"
                },
                "compressType": {
                    "type": "string"
                },
                "deleteTracker": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "excludeServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filePrefix": {
                    "type": "string"
                },
                "isSortByService": {
                    "type": "boolean"
                },
                "kmsId": {
                    "type": "string"
                },
                "ltsEnabled": {
                    "type": "boolean"
                },
                "organizationEnabled": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "validateFile": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tracker resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "compressType": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "integer"
                    },
                    "deleteTracker": {
                        "type": "boolean"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "excludeServices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filePrefix": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "isAuthorizedBucket": {
                        "type": "boolean"
                    },
                    "isSortByService": {
                        "type": "boolean"
                    },
                    "kmsId": {
                        "type": "string"
                    },
                    "logGroupName": {
                        "type": "string"
                    },
                    "logTopicName": {
                        "type": "string"
                    },
                    "ltsEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationEnabled": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "transferEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "validateFile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dcs/instance:Instance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "Deprecated, please use `availability_zones` instead"
                },
                "backupAts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "backupPolicy": {
                    "$ref": "#/types/cloudru:Dcs/InstanceBackupPolicy:InstanceBackupPolicy"
                },
                "backupType": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "bandwidthInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dcs/InstanceBandwidthInfo:InstanceBandwidthInfo"
                    }
                },
                "beginAt": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "cacheMode": {
                    "type": "string"
                },
                "capacity": {
                    "type": "number"
                },
                "chargingMode": {
                    "type": "string"
                },
                "cpuType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedNodes": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "enterpriseProjectName": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, this is a non-public attribute."
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "internalVersion": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please us `engine_version` instead."
                },
                "ip": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please us `private_ip` instead."
                },
                "launchedAt": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "maxMemory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dcs/InstanceParameter:InstanceParameter"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodType": {
                    "type": "string",
                    "deprecationMessage": "Please use `backup_policy` instead"
                },
                "periodUnit": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "privateIp": {
                    "type": "string"
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `flavor` instead"
                },
                "productType": {
                    "type": "string"
                },
                "readonlyDomainName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "renameCommands": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "replicaCount": {
                    "type": "integer"
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "saveDays": {
                    "type": "integer",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityGroupName": {
                    "type": "string"
                },
                "shardingCount": {
                    "type": "integer"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetCidr": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string"
                },
                "transparentClientIpEnable": {
                    "type": "boolean"
                },
                "usedMemory": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "userName": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "vpcId": {
                    "type": "string"
                },
                "vpcName": {
                    "type": "string"
                },
                "whitelistEnable": {
                    "type": "boolean"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dcs/InstanceWhitelist:InstanceWhitelist"
                    }
                }
            },
            "required": [
                "accessUser",
                "availabilityZones",
                "bandwidthInfos",
                "cacheMode",
                "capacity",
                "chargingMode",
                "cpuType",
                "createdAt",
                "description",
                "domainName",
                "engine",
                "enterpriseProjectId",
                "enterpriseProjectName",
                "flavor",
                "internalVersion",
                "ip",
                "launchedAt",
                "maintainBegin",
                "maintainEnd",
                "maxMemory",
                "name",
                "orderId",
                "parameters",
                "port",
                "privateIp",
                "productId",
                "productType",
                "readonlyDomainName",
                "region",
                "replicaCount",
                "securityGroupName",
                "shardingCount",
                "sslEnable",
                "status",
                "subnetCidr",
                "subnetId",
                "subnetName",
                "tags",
                "transparentClientIpEnable",
                "usedMemory",
                "userId",
                "userName",
                "vpcId",
                "vpcName"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "Deprecated, please use `availability_zones` instead",
                    "willReplaceOnChanges": true
                },
                "backupAts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "backupPolicy": {
                    "$ref": "#/types/cloudru:Dcs/InstanceBackupPolicy:InstanceBackupPolicy"
                },
                "backupType": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "beginAt": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "capacity": {
                    "type": "number"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "deletedNodes": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "engine": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "enterpriseProjectName": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, this is a non-public attribute.",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dcs/InstanceParameter:InstanceParameter"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodType": {
                    "type": "string",
                    "deprecationMessage": "Please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "privateIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "Deprecated, please use `flavor` instead",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "renameCommands": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "saveDays": {
                    "type": "integer",
                    "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "whitelistEnable": {
                    "type": "boolean"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dcs/InstanceWhitelist:InstanceWhitelist"
                    }
                }
            },
            "requiredInputs": [
                "capacity",
                "engine",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "Deprecated, please use `availability_zones` instead",
                        "willReplaceOnChanges": true
                    },
                    "backupAts": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "backupPolicy": {
                        "$ref": "#/types/cloudru:Dcs/InstanceBackupPolicy:InstanceBackupPolicy"
                    },
                    "backupType": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthInfos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dcs/InstanceBandwidthInfo:InstanceBandwidthInfo"
                        }
                    },
                    "beginAt": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cpuType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletedNodes": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "enterpriseProjectName": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, this is a non-public attribute.",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "schema: Required"
                    },
                    "internalVersion": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please us `engine_version` instead."
                    },
                    "ip": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please us `private_ip` instead."
                    },
                    "launchedAt": {
                        "type": "string"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "maxMemory": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dcs/InstanceParameter:InstanceParameter"
                        }
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodType": {
                        "type": "string",
                        "deprecationMessage": "Please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "privateIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "productId": {
                        "type": "string",
                        "deprecationMessage": "Deprecated, please use `flavor` instead",
                        "willReplaceOnChanges": true
                    },
                    "productType": {
                        "type": "string"
                    },
                    "readonlyDomainName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "renameCommands": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "replicaCount": {
                        "type": "integer"
                    },
                    "reservedIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "saveDays": {
                        "type": "integer",
                        "deprecationMessage": "Deprecated, please use `backup_policy` instead",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "shardingCount": {
                        "type": "integer"
                    },
                    "sslEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetCidr": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subnetName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "templateId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "transparentClientIpEnable": {
                        "type": "boolean"
                    },
                    "usedMemory": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "userName": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcName": {
                        "type": "string"
                    },
                    "whitelistEnable": {
                        "type": "boolean"
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dcs/InstanceWhitelist:InstanceWhitelist"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dds/instance:Instance": {
            "properties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "backupStrategy": {
                    "$ref": "#/types/cloudru:Dds/InstanceBackupStrategy:InstanceBackupStrategy"
                },
                "balancerActiveBegin": {
                    "type": "string"
                },
                "balancerActiveEnd": {
                    "type": "string"
                },
                "balancerStatus": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "clientNetworkRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceConfiguration:InstanceConfiguration"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "datastore": {
                    "$ref": "#/types/cloudru:Dds/InstanceDatastore:InstanceDatastore"
                },
                "dbUsername": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskEncryptionId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceFlavor:InstanceFlavor"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceGroup:InstanceGroup"
                    }
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceNode:InstanceNode"
                    },
                    "description": "This field is deprecated."
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "replicaSetName": {
                    "type": "string"
                },
                "secondLevelMonitoringEnabled": {
                    "type": "boolean"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "slowLogDesensitization": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timeZone": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "backupStrategy",
                "balancerStatus",
                "chargingMode",
                "createdAt",
                "datastore",
                "dbUsername",
                "enterpriseProjectId",
                "flavors",
                "groups",
                "maintainBegin",
                "maintainEnd",
                "mode",
                "name",
                "nodes",
                "port",
                "region",
                "replicaSetName",
                "secondLevelMonitoringEnabled",
                "securityGroupId",
                "slowLogDesensitization",
                "status",
                "subnetId",
                "tags",
                "timeZone",
                "updatedAt",
                "vpcId"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "availabilityZone": {
                    "type": "string"
                },
                "backupStrategy": {
                    "$ref": "#/types/cloudru:Dds/InstanceBackupStrategy:InstanceBackupStrategy"
                },
                "balancerActiveBegin": {
                    "type": "string"
                },
                "balancerActiveEnd": {
                    "type": "string"
                },
                "balancerStatus": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "clientNetworkRanges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceConfiguration:InstanceConfiguration"
                    },
                    "willReplaceOnChanges": true
                },
                "datastore": {
                    "$ref": "#/types/cloudru:Dds/InstanceDatastore:InstanceDatastore",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "diskEncryptionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dds/InstanceFlavor:InstanceFlavor"
                    },
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "mode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "replicaSetName": {
                    "type": "string"
                },
                "secondLevelMonitoringEnabled": {
                    "type": "boolean"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "slowLogDesensitization": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "datastore",
                "flavors",
                "mode",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "backupStrategy": {
                        "$ref": "#/types/cloudru:Dds/InstanceBackupStrategy:InstanceBackupStrategy"
                    },
                    "balancerActiveBegin": {
                        "type": "string"
                    },
                    "balancerActiveEnd": {
                        "type": "string"
                    },
                    "balancerStatus": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "clientNetworkRanges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dds/InstanceConfiguration:InstanceConfiguration"
                        },
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "datastore": {
                        "$ref": "#/types/cloudru:Dds/InstanceDatastore:InstanceDatastore",
                        "willReplaceOnChanges": true
                    },
                    "dbUsername": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskEncryptionId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dds/InstanceFlavor:InstanceFlavor"
                        },
                        "willReplaceOnChanges": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dds/InstanceGroup:InstanceGroup"
                        }
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dds/InstanceNode:InstanceNode"
                        },
                        "description": "This field is deprecated."
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "replicaSetName": {
                        "type": "string"
                    },
                    "secondLevelMonitoringEnabled": {
                        "type": "boolean"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "slowLogDesensitization": {
                        "type": "string"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/api:Api": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used."
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiBackendParam:ApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters."
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters."
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body."
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported."
                },
                "description": {
                    "type": "string",
                    "description": "The API description."
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request."
                },
                "funcGraph": {
                    "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraph:ApiFuncGraph",
                    "description": "The FunctionGraph backend details."
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs."
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph."
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API."
                },
                "mock": {
                    "$ref": "#/types/cloudru:DedicatedApig/ApiMock:ApiMock",
                    "description": "The mock backend details."
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiMockPolicy:ApiMockPolicy"
                    },
                    "description": "The mock policy backends."
                },
                "name": {
                    "type": "string",
                    "description": "The API name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located."
                },
                "registeredAt": {
                    "type": "string",
                    "description": "The registered time of the API."
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiRequestParam:ApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters."
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address."
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request."
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used."
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request."
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled."
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration."
                },
                "type": {
                    "type": "string",
                    "description": "The API type."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API."
                },
                "web": {
                    "$ref": "#/types/cloudru:DedicatedApig/ApiWeb:ApiWeb",
                    "description": "The web backend details."
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiWebPolicy:ApiWebPolicy"
                    },
                    "description": "The web policy backends."
                }
            },
            "required": [
                "contentType",
                "funcGraph",
                "groupId",
                "instanceId",
                "mock",
                "name",
                "region",
                "registeredAt",
                "requestMethod",
                "requestParams",
                "requestPath",
                "requestProtocol",
                "simpleAuthentication",
                "type",
                "updatedAt",
                "web"
            ],
            "inputProperties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used."
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiBackendParam:ApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters."
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters."
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body."
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported."
                },
                "description": {
                    "type": "string",
                    "description": "The API description."
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request."
                },
                "funcGraph": {
                    "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraph:ApiFuncGraph",
                    "description": "The FunctionGraph backend details.",
                    "willReplaceOnChanges": true
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs.",
                    "willReplaceOnChanges": true
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph."
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API."
                },
                "mock": {
                    "$ref": "#/types/cloudru:DedicatedApig/ApiMock:ApiMock",
                    "description": "The mock backend details.",
                    "willReplaceOnChanges": true
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiMockPolicy:ApiMockPolicy"
                    },
                    "description": "The mock policy backends."
                },
                "name": {
                    "type": "string",
                    "description": "The API name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located.",
                    "willReplaceOnChanges": true
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiRequestParam:ApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters."
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address."
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request."
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used."
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request."
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled."
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration."
                },
                "type": {
                    "type": "string",
                    "description": "The API type."
                },
                "web": {
                    "$ref": "#/types/cloudru:DedicatedApig/ApiWeb:ApiWeb",
                    "description": "The web backend details.",
                    "willReplaceOnChanges": true
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiWebPolicy:ApiWebPolicy"
                    },
                    "description": "The web policy backends."
                }
            },
            "requiredInputs": [
                "groupId",
                "instanceId",
                "requestMethod",
                "requestPath",
                "requestProtocol",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Api resources.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string",
                        "description": "The ID of the authorizer to which the API request used."
                    },
                    "backendParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ApiBackendParam:ApiBackendParam"
                        },
                        "description": "The configurations of the backend parameters."
                    },
                    "bodyDescription": {
                        "type": "string",
                        "description": "The description of the API request body, which can be an example request body, media type or parameters."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The content type of the request body."
                    },
                    "cors": {
                        "type": "boolean",
                        "description": "Whether CORS is supported."
                    },
                    "description": {
                        "type": "string",
                        "description": "The API description."
                    },
                    "failureResponse": {
                        "type": "string",
                        "description": "The example response for a failure request."
                    },
                    "funcGraph": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraph:ApiFuncGraph",
                        "description": "The FunctionGraph backend details.",
                        "willReplaceOnChanges": true
                    },
                    "funcGraphPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy"
                        },
                        "description": "The policy backends of the FunctionGraph function."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group to which the API belongs.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the instance to which the API belongs.",
                        "willReplaceOnChanges": true
                    },
                    "isSendFgBodyBase64": {
                        "type": "boolean",
                        "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph."
                    },
                    "matching": {
                        "type": "string",
                        "description": "The matching mode of the API."
                    },
                    "mock": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiMock:ApiMock",
                        "description": "The mock backend details.",
                        "willReplaceOnChanges": true
                    },
                    "mockPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ApiMockPolicy:ApiMockPolicy"
                        },
                        "description": "The mock policy backends."
                    },
                    "name": {
                        "type": "string",
                        "description": "The API name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the API is located.",
                        "willReplaceOnChanges": true
                    },
                    "registeredAt": {
                        "type": "string",
                        "description": "The registered time of the API."
                    },
                    "requestMethod": {
                        "type": "string",
                        "description": "The request method of the API."
                    },
                    "requestParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ApiRequestParam:ApiRequestParam"
                        },
                        "description": "The configurations of the front-end parameters."
                    },
                    "requestPath": {
                        "type": "string",
                        "description": "The request address."
                    },
                    "requestProtocol": {
                        "type": "string",
                        "description": "The request protocol of the API request."
                    },
                    "responseId": {
                        "type": "string",
                        "description": "The ID of the custom response that API used."
                    },
                    "securityAuthentication": {
                        "type": "string",
                        "description": "The security authentication mode of the API request."
                    },
                    "simpleAuthentication": {
                        "type": "boolean",
                        "description": "Whether the authentication of the application code is enabled."
                    },
                    "successResponse": {
                        "type": "string",
                        "description": "The example response for a successful request."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags configuration."
                    },
                    "type": {
                        "type": "string",
                        "description": "The API type."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the API."
                    },
                    "web": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiWeb:ApiWeb",
                        "description": "The web backend details.",
                        "willReplaceOnChanges": true
                    },
                    "webPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ApiWebPolicy:ApiWebPolicy"
                        },
                        "description": "The web policy backends."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/apiPublishment:ApiPublishment": {
            "properties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be published or already published."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the current publishment."
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment to which the current version of the API will be published or has been published."
                },
                "envName": {
                    "type": "string",
                    "description": "The name of the environment to which the current version of the API is published."
                },
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ApiPublishmentHistory:ApiPublishmentHistory"
                    },
                    "description": "All publish informations of the API."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API and the environment belongs."
                },
                "publishId": {
                    "type": "string",
                    "description": "The publish ID of the API in current environment."
                },
                "publishedAt": {
                    "type": "string",
                    "description": "Time when the current version was published."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to publish API."
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the current publishment."
                }
            },
            "required": [
                "apiId",
                "envId",
                "envName",
                "histories",
                "instanceId",
                "publishId",
                "publishedAt",
                "region"
            ],
            "inputProperties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be published or already published.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the current publishment."
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment to which the current version of the API will be published or has been published.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API and the environment belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to publish API.",
                    "willReplaceOnChanges": true
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the current publishment."
                }
            },
            "requiredInputs": [
                "apiId",
                "envId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiPublishment resources.\n",
                "properties": {
                    "apiId": {
                        "type": "string",
                        "description": "The ID of the API to be published or already published.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the current publishment."
                    },
                    "envId": {
                        "type": "string",
                        "description": "The ID of the environment to which the current version of the API will be published or has been published.",
                        "willReplaceOnChanges": true
                    },
                    "envName": {
                        "type": "string",
                        "description": "The name of the environment to which the current version of the API is published."
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ApiPublishmentHistory:ApiPublishmentHistory"
                        },
                        "description": "All publish informations of the API."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API and the environment belongs.",
                        "willReplaceOnChanges": true
                    },
                    "publishId": {
                        "type": "string",
                        "description": "The publish ID of the API in current environment."
                    },
                    "publishedAt": {
                        "type": "string",
                        "description": "Time when the current version was published."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to publish API.",
                        "willReplaceOnChanges": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version ID of the current publishment."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/application:Application": {
            "properties": {
                "appCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of one or more application codes that the application has."
                },
                "appKey": {
                    "type": "string",
                    "description": "The APP key."
                },
                "appSecret": {
                    "type": "string",
                    "description": "The APP secret.",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The application description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The application name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application is located."
                },
                "registrationTime": {
                    "type": "string",
                    "description": "The registration time."
                },
                "secretAction": {
                    "type": "string",
                    "description": "The secret action to be done for the application."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the application."
                }
            },
            "required": [
                "appCodes",
                "appKey",
                "appSecret",
                "description",
                "instanceId",
                "name",
                "region",
                "registrationTime",
                "updatedAt"
            ],
            "inputProperties": {
                "appCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The array of one or more application codes that the application has."
                },
                "description": {
                    "type": "string",
                    "description": "The application description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The application name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application is located.",
                    "willReplaceOnChanges": true
                },
                "secretAction": {
                    "type": "string",
                    "description": "The secret action to be done for the application."
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "appCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The array of one or more application codes that the application has."
                    },
                    "appKey": {
                        "type": "string",
                        "description": "The APP key."
                    },
                    "appSecret": {
                        "type": "string",
                        "description": "The APP secret.",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The application description."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The application name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application is located.",
                        "willReplaceOnChanges": true
                    },
                    "registrationTime": {
                        "type": "string",
                        "description": "The registration time."
                    },
                    "secretAction": {
                        "type": "string",
                        "description": "The secret action to be done for the application."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the application."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/customAuthorizer:CustomAuthorizer": {
            "properties": {
                "cacheAge": {
                    "type": "integer",
                    "description": "The maximum cache age."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the custom authorizer."
                },
                "functionAliasUri": {
                    "type": "string",
                    "description": "The version alias URI of the FGS function."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FGS function."
                },
                "functionVersion": {
                    "type": "string",
                    "description": "The version of the FGS function."
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/CustomAuthorizerIdentity:CustomAuthorizerIdentity"
                    },
                    "description": "The array of one or more parameter identities of the custom authorizer."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the custom authorizer belongs."
                },
                "isBodySend": {
                    "type": "boolean",
                    "description": "Whether to send the body."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom authorizer."
                },
                "networkType": {
                    "type": "string",
                    "description": "The framework type of the function."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the custom authorizer is located."
                },
                "type": {
                    "type": "string",
                    "description": "The custom authorization type"
                },
                "userData": {
                    "type": "string",
                    "description": "The user data for custom authorizer function."
                }
            },
            "required": [
                "createdAt",
                "functionAliasUri",
                "functionUrn",
                "functionVersion",
                "instanceId",
                "name",
                "networkType",
                "region"
            ],
            "inputProperties": {
                "cacheAge": {
                    "type": "integer",
                    "description": "The maximum cache age."
                },
                "functionAliasUri": {
                    "type": "string",
                    "description": "The version alias URI of the FGS function."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the FGS function."
                },
                "functionVersion": {
                    "type": "string",
                    "description": "The version of the FGS function."
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/CustomAuthorizerIdentity:CustomAuthorizerIdentity"
                    },
                    "description": "The array of one or more parameter identities of the custom authorizer."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the custom authorizer belongs.",
                    "willReplaceOnChanges": true
                },
                "isBodySend": {
                    "type": "boolean",
                    "description": "Whether to send the body."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom authorizer."
                },
                "networkType": {
                    "type": "string",
                    "description": "The framework type of the function."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the custom authorizer is located.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The custom authorization type",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "description": "The user data for custom authorizer function."
                }
            },
            "requiredInputs": [
                "functionUrn",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomAuthorizer resources.\n",
                "properties": {
                    "cacheAge": {
                        "type": "integer",
                        "description": "The maximum cache age."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the custom authorizer."
                    },
                    "functionAliasUri": {
                        "type": "string",
                        "description": "The version alias URI of the FGS function."
                    },
                    "functionUrn": {
                        "type": "string",
                        "description": "The URN of the FGS function."
                    },
                    "functionVersion": {
                        "type": "string",
                        "description": "The version of the FGS function."
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/CustomAuthorizerIdentity:CustomAuthorizerIdentity"
                        },
                        "description": "The array of one or more parameter identities of the custom authorizer."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the custom authorizer belongs.",
                        "willReplaceOnChanges": true
                    },
                    "isBodySend": {
                        "type": "boolean",
                        "description": "Whether to send the body."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the custom authorizer."
                    },
                    "networkType": {
                        "type": "string",
                        "description": "The framework type of the function."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the custom authorizer is located.",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The custom authorization type",
                        "willReplaceOnChanges": true
                    },
                    "userData": {
                        "type": "string",
                        "description": "The user data for custom authorizer function."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/environment:Environment": {
            "properties": {
                "createTime": {
                    "type": "string",
                    "description": "schema: Deprecated; The time when the environment was created.",
                    "deprecationMessage": "Use 'created_at' instead"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time when the environment was created."
                },
                "description": {
                    "type": "string",
                    "description": "The environment description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the environment belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The environment name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located."
                }
            },
            "required": [
                "createTime",
                "createdAt",
                "instanceId",
                "name",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The environment description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the environment belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The environment name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Environment resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string",
                        "description": "schema: Deprecated; The time when the environment was created.",
                        "deprecationMessage": "Use 'created_at' instead"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time when the environment was created."
                    },
                    "description": {
                        "type": "string",
                        "description": "The environment description."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the environment belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The environment name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/group:Group": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the group, in RFC3339 format."
                },
                "description": {
                    "type": "string",
                    "description": "The group description."
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group."
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/GroupEnvironment:GroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group."
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The group name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located."
                },
                "registrationTime": {
                    "type": "string",
                    "description": "The registration time."
                },
                "updateTime": {
                    "type": "string",
                    "description": "The latest update time of the group."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the group, in RFC3339 format."
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/GroupUrlDomain:GroupUrlDomain"
                    },
                    "description": "The associated domain information of the group."
                }
            },
            "required": [
                "createdAt",
                "domainAccessEnabled",
                "environments",
                "forceDestroy",
                "instanceId",
                "name",
                "region",
                "registrationTime",
                "updateTime",
                "updatedAt",
                "urlDomains"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The group description."
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group."
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/GroupEnvironment:GroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group."
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The group name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.",
                    "willReplaceOnChanges": true
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/GroupUrlDomain:GroupUrlDomain"
                    },
                    "description": "The associated domain information of the group."
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the group, in RFC3339 format."
                    },
                    "description": {
                        "type": "string",
                        "description": "The group description."
                    },
                    "domainAccessEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether to use the debugging domain name to access the APIs within the group."
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/GroupEnvironment:GroupEnvironment"
                        },
                        "description": "The array of one or more environments of the associated group."
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Whether to delete all sub-resources (for API) from this group."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the group belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.",
                        "willReplaceOnChanges": true
                    },
                    "registrationTime": {
                        "type": "string",
                        "description": "The registration time."
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "The latest update time of the group."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the group, in RFC3339 format."
                    },
                    "urlDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/GroupUrlDomain:GroupUrlDomain"
                        },
                        "description": "The associated domain information of the group."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/instance:Instance": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required; The name list of availability zones for the dedicated instance."
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The name list of availability zones for the dedicated instance."
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "The egress bandwidth size of the dedicated instance."
                },
                "createTime": {
                    "type": "string",
                    "description": "schema: Deprecated; Time when the dedicated instance is created.",
                    "deprecationMessage": "Use 'created_at' instead"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time when the dedicated instance is created, in RFC-3339 format."
                },
                "customIngressPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/InstanceCustomIngressPort:InstanceCustomIngressPort"
                    },
                    "description": "Specified the list of the instance custom ingress ports."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dedicated instance."
                },
                "edition": {
                    "type": "string",
                    "description": "The edition of the dedicated instance."
                },
                "egressAddress": {
                    "type": "string",
                    "description": "The egress (NAT) public IP address."
                },
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID associated with the dedicated instance."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the dedicated instance belongs."
                },
                "ingressAddress": {
                    "type": "string",
                    "description": "The ingress EIP address."
                },
                "ingressBandwidthChargingMode": {
                    "type": "string"
                },
                "ingressBandwidthSize": {
                    "type": "integer"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Whether public access with an IPv6 address is supported."
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "The type of loadbalancer provider used by the instance."
                },
                "maintainBegin": {
                    "type": "string",
                    "description": "The start time of the maintenance time window."
                },
                "maintainEnd": {
                    "type": "string",
                    "description": "End time of the maintenance time window, 4-hour difference between the start time and end time."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dedicated instance."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the dedicated instance resource."
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The ID of the security group to which the dedicated instance belongs to."
                },
                "status": {
                    "type": "string",
                    "description": "Status of the dedicated instance."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the VPC subnet used to create the dedicated instance."
                },
                "supportedFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The supported features of the dedicated instance."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC used to create the dedicated instance."
                },
                "vpcIngressAddress": {
                    "type": "string",
                    "description": "The ingress private IP address of the VPC."
                },
                "vpcepServiceAddress": {
                    "type": "string",
                    "description": "The address (full name) of the VPC endpoint service."
                },
                "vpcepServiceName": {
                    "type": "string",
                    "description": "Name of the VPC endpoint service."
                }
            },
            "required": [
                "availabilityZones",
                "createTime",
                "createdAt",
                "edition",
                "egressAddress",
                "eipId",
                "enterpriseProjectId",
                "ingressAddress",
                "ipv6Enable",
                "loadbalancerProvider",
                "maintainBegin",
                "maintainEnd",
                "name",
                "region",
                "securityGroupId",
                "status",
                "subnetId",
                "supportedFeatures",
                "tags",
                "vpcId",
                "vpcIngressAddress",
                "vpcepServiceAddress",
                "vpcepServiceName"
            ],
            "inputProperties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required; The name list of availability zones for the dedicated instance.",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated; The name list of availability zones for the dedicated instance.",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "description": "The egress bandwidth size of the dedicated instance."
                },
                "customIngressPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/InstanceCustomIngressPort:InstanceCustomIngressPort"
                    },
                    "description": "Specified the list of the instance custom ingress ports."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dedicated instance."
                },
                "edition": {
                    "type": "string",
                    "description": "The edition of the dedicated instance."
                },
                "eipId": {
                    "type": "string",
                    "description": "The EIP ID associated with the dedicated instance."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the dedicated instance belongs."
                },
                "ingressBandwidthChargingMode": {
                    "type": "string"
                },
                "ingressBandwidthSize": {
                    "type": "integer"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Whether public access with an IPv6 address is supported.",
                    "willReplaceOnChanges": true
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "The type of loadbalancer provider used by the instance.",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string",
                    "description": "The start time of the maintenance time window."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dedicated instance."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the dedicated instance resource.",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The ID of the security group to which the dedicated instance belongs to."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the VPC subnet used to create the dedicated instance.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC used to create the dedicated instance.",
                    "willReplaceOnChanges": true
                },
                "vpcepServiceName": {
                    "type": "string",
                    "description": "Name of the VPC endpoint service."
                }
            },
            "requiredInputs": [
                "edition",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required; The name list of availability zones for the dedicated instance.",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated; The name list of availability zones for the dedicated instance.",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthSize": {
                        "type": "integer",
                        "description": "The egress bandwidth size of the dedicated instance."
                    },
                    "createTime": {
                        "type": "string",
                        "description": "schema: Deprecated; Time when the dedicated instance is created.",
                        "deprecationMessage": "Use 'created_at' instead"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time when the dedicated instance is created, in RFC-3339 format."
                    },
                    "customIngressPorts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/InstanceCustomIngressPort:InstanceCustomIngressPort"
                        },
                        "description": "Specified the list of the instance custom ingress ports."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the dedicated instance."
                    },
                    "edition": {
                        "type": "string",
                        "description": "The edition of the dedicated instance."
                    },
                    "egressAddress": {
                        "type": "string",
                        "description": "The egress (NAT) public IP address."
                    },
                    "eipId": {
                        "type": "string",
                        "description": "The EIP ID associated with the dedicated instance."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the dedicated instance belongs."
                    },
                    "ingressAddress": {
                        "type": "string",
                        "description": "The ingress EIP address."
                    },
                    "ingressBandwidthChargingMode": {
                        "type": "string"
                    },
                    "ingressBandwidthSize": {
                        "type": "integer"
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Whether public access with an IPv6 address is supported.",
                        "willReplaceOnChanges": true
                    },
                    "loadbalancerProvider": {
                        "type": "string",
                        "description": "The type of loadbalancer provider used by the instance.",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string",
                        "description": "The start time of the maintenance time window."
                    },
                    "maintainEnd": {
                        "type": "string",
                        "description": "End time of the maintenance time window, 4-hour difference between the start time and end time."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the dedicated instance."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the dedicated instance resource.",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The ID of the security group to which the dedicated instance belongs to."
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the dedicated instance."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The ID of the VPC subnet used to create the dedicated instance.",
                        "willReplaceOnChanges": true
                    },
                    "supportedFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The supported features of the dedicated instance."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC used to create the dedicated instance.",
                        "willReplaceOnChanges": true
                    },
                    "vpcIngressAddress": {
                        "type": "string",
                        "description": "The ingress private IP address of the VPC."
                    },
                    "vpcepServiceAddress": {
                        "type": "string",
                        "description": "The address (full name) of the VPC endpoint service."
                    },
                    "vpcepServiceName": {
                        "type": "string",
                        "description": "Name of the VPC endpoint service."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/response:Response": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the API custom response."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API custom response belongs."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API group and the API custom response belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API custom response."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API custom response is located."
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ResponseRule:ResponseRule"
                    },
                    "description": "The API custom response rules definition."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API custom response."
                }
            },
            "required": [
                "createdAt",
                "groupId",
                "instanceId",
                "name",
                "region",
                "rules",
                "updatedAt"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API custom response belongs.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API group and the API custom response belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API custom response."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API custom response is located.",
                    "willReplaceOnChanges": true
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ResponseRule:ResponseRule"
                    },
                    "description": "The API custom response rules definition."
                }
            },
            "requiredInputs": [
                "groupId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Response resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the API custom response."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group to which the API custom response belongs.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API group and the API custom response belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the API custom response."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the API custom response is located.",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ResponseRule:ResponseRule"
                        },
                        "description": "The API custom response rules definition."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the API custom response."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/throttlingPolicy:ThrottlingPolicy": {
            "properties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ThrottlingPolicyAppThrottle:ThrottlingPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the throttling policy."
                },
                "description": {
                    "type": "string",
                    "description": "The description about the API throttling policy."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the throttling policy belongs."
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.."
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period."
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period."
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy."
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls."
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the throttling policy is located."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the request throttling policy."
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ThrottlingPolicyUserThrottle:ThrottlingPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit."
                }
            },
            "required": [
                "createdAt",
                "instanceId",
                "maxApiRequests",
                "name",
                "period",
                "region"
            ],
            "inputProperties": {
                "appThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ThrottlingPolicyAppThrottle:ThrottlingPolicyAppThrottle"
                    },
                    "description": "The array of one or more special throttling policies for APP limit."
                },
                "description": {
                    "type": "string",
                    "description": "The description about the API throttling policy."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the throttling policy belongs.",
                    "willReplaceOnChanges": true
                },
                "maxApiRequests": {
                    "type": "integer",
                    "description": "The maximum number of times an API can be accessed within a specified period.."
                },
                "maxAppRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an app within the same period."
                },
                "maxIpRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by an IP address within the same period."
                },
                "maxUserRequests": {
                    "type": "integer",
                    "description": "The maximum number of times the API can be accessed by a user within the same period."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the throttling policy."
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time for limiting the number of API calls."
                },
                "periodUnit": {
                    "type": "string",
                    "description": "The time unit for limiting the number of API calls."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the throttling policy is located.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the request throttling policy."
                },
                "userThrottles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:DedicatedApig/ThrottlingPolicyUserThrottle:ThrottlingPolicyUserThrottle"
                    },
                    "description": "The array of one or more special throttling policies for IAM user limit."
                }
            },
            "requiredInputs": [
                "instanceId",
                "maxApiRequests",
                "period"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThrottlingPolicy resources.\n",
                "properties": {
                    "appThrottles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ThrottlingPolicyAppThrottle:ThrottlingPolicyAppThrottle"
                        },
                        "description": "The array of one or more special throttling policies for APP limit."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the throttling policy."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description about the API throttling policy."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the throttling policy belongs.",
                        "willReplaceOnChanges": true
                    },
                    "maxApiRequests": {
                        "type": "integer",
                        "description": "The maximum number of times an API can be accessed within a specified period.."
                    },
                    "maxAppRequests": {
                        "type": "integer",
                        "description": "The maximum number of times the API can be accessed by an app within the same period."
                    },
                    "maxIpRequests": {
                        "type": "integer",
                        "description": "The maximum number of times the API can be accessed by an IP address within the same period."
                    },
                    "maxUserRequests": {
                        "type": "integer",
                        "description": "The maximum number of times the API can be accessed by a user within the same period."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the throttling policy."
                    },
                    "period": {
                        "type": "integer",
                        "description": "The period of time for limiting the number of API calls."
                    },
                    "periodUnit": {
                        "type": "string",
                        "description": "The time unit for limiting the number of API calls."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the throttling policy is located.",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the request throttling policy."
                    },
                    "userThrottles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/ThrottlingPolicyUserThrottle:ThrottlingPolicyUserThrottle"
                        },
                        "description": "The array of one or more special throttling policies for IAM user limit."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/throttlingPolicyAssociate:ThrottlingPolicyAssociate": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the throttling policy belongs."
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the throttling policy."
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the throttling policy."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and the throttling policy are located."
                }
            },
            "required": [
                "instanceId",
                "policyId",
                "publishIds",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the throttling policy belongs.",
                    "willReplaceOnChanges": true
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the throttling policy.",
                    "willReplaceOnChanges": true
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the throttling policy."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and the throttling policy are located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policyId",
                "publishIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ThrottlingPolicyAssociate resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs and the throttling policy belongs.",
                        "willReplaceOnChanges": true
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ID of the throttling policy.",
                        "willReplaceOnChanges": true
                    },
                    "publishIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The publish IDs corresponding to the APIs bound by the throttling policy."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance and the throttling policy are located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dew/key:Key": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "defaultKeyFlag": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expirationTime": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "keyAlgorithm": {
                    "type": "string"
                },
                "keyAlias": {
                    "type": "string"
                },
                "keyDescription": {
                    "type": "string"
                },
                "keyId": {
                    "type": "string"
                },
                "keyState": {
                    "type": "string"
                },
                "keyUsage": {
                    "type": "string"
                },
                "keystoreId": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "pendingDays": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rotationEnabled": {
                    "type": "boolean"
                },
                "rotationInterval": {
                    "type": "integer"
                },
                "rotationNumber": {
                    "type": "integer"
                },
                "scheduledDeletionDate": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "creationDate",
                "defaultKeyFlag",
                "domainId",
                "enterpriseProjectId",
                "expirationTime",
                "keyAlgorithm",
                "keyAlias",
                "keyId",
                "keyState",
                "keyUsage",
                "keystoreId",
                "origin",
                "region",
                "rotationInterval",
                "rotationNumber",
                "scheduledDeletionDate",
                "tags"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "keyAlgorithm": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyAlias": {
                    "type": "string"
                },
                "keyDescription": {
                    "type": "string"
                },
                "keyUsage": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keystoreId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "origin": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "pendingDays": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rotationEnabled": {
                    "type": "boolean"
                },
                "rotationInterval": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "keyAlias"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Key resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "defaultKeyFlag": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expirationTime": {
                        "type": "string"
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "keyAlgorithm": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keyAlias": {
                        "type": "string"
                    },
                    "keyDescription": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "keyState": {
                        "type": "string"
                    },
                    "keyUsage": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keystoreId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "origin": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "pendingDays": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rotationEnabled": {
                        "type": "boolean"
                    },
                    "rotationInterval": {
                        "type": "integer"
                    },
                    "rotationNumber": {
                        "type": "integer"
                    },
                    "scheduledDeletionDate": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dew/keypair:Keypair": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "isManaged": {
                    "type": "boolean"
                },
                "keyFile": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "encryptionType",
                "fingerprint",
                "isManaged",
                "keyFile",
                "name",
                "publicKey",
                "region",
                "scope",
                "userId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "encryptionType": {
                    "type": "string"
                },
                "keyFile": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyName": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scope": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Keypair resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptionType": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "isManaged": {
                        "type": "boolean"
                    },
                    "keyFile": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "kmsKeyName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scope": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dis/stream:Stream": {
            "properties": {
                "autoScaleMaxPartitionCount": {
                    "type": "integer"
                },
                "autoScaleMinPartitionCount": {
                    "type": "integer"
                },
                "compressionFormat": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "csvDelimiter": {
                    "type": "string"
                },
                "dataSchema": {
                    "type": "string"
                },
                "dataType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "partitionCount": {
                    "type": "integer"
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dis/StreamPartition:StreamPartition"
                    }
                },
                "readablePartitionCount": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "streamType": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "writablePartitionCount": {
                    "type": "integer"
                }
            },
            "required": [
                "autoScaleMaxPartitionCount",
                "autoScaleMinPartitionCount",
                "compressionFormat",
                "created",
                "csvDelimiter",
                "dataSchema",
                "dataType",
                "enterpriseProjectId",
                "partitionCount",
                "partitions",
                "readablePartitionCount",
                "region",
                "status",
                "streamId",
                "streamName",
                "streamType",
                "tags",
                "writablePartitionCount"
            ],
            "inputProperties": {
                "autoScaleMaxPartitionCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "autoScaleMinPartitionCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "compressionFormat": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "csvDelimiter": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataSchema": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "partitionCount": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retentionPeriod": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "streamName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "streamType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "partitionCount",
                "streamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Stream resources.\n",
                "properties": {
                    "autoScaleMaxPartitionCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "autoScaleMinPartitionCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "compressionFormat": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "integer"
                    },
                    "csvDelimiter": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataSchema": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "partitionCount": {
                        "type": "integer"
                    },
                    "partitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dis/StreamPartition:StreamPartition"
                        }
                    },
                    "readablePartitionCount": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "retentionPeriod": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "streamName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "streamType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "writablePartitionCount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dli/database:Database": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "enterpriseProjectId",
                "name",
                "owner",
                "region",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dli/package:Package": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "isAsync": {
                    "type": "boolean"
                },
                "objectName": {
                    "type": "string"
                },
                "objectPath": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "isAsync",
                "objectName",
                "objectPath",
                "owner",
                "region",
                "status",
                "tags",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isAsync": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "objectPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "owner": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "objectPath",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Package resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "isAsync": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "objectName": {
                        "type": "string"
                    },
                    "objectPath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dli/queue:Queue": {
            "properties": {
                "createTime": {
                    "type": "integer"
                },
                "cuCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "elasticResourcePoolName": {
                    "type": "string",
                    "description": "The name of the elastic resource pool to which the queue belongs."
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "feature": {
                    "type": "string"
                },
                "managementSubnetCidr": {
                    "type": "string",
                    "deprecationMessage": "management_subnet_cidr is Deprecated"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "queueType": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceMode": {
                    "type": "integer",
                    "description": "The queue resource mode."
                },
                "scalingPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dli/QueueScalingPolicy:QueueScalingPolicy"
                    }
                },
                "sparkDriver": {
                    "$ref": "#/types/cloudru:Dli/QueueSparkDriver:QueueSparkDriver"
                },
                "subnetCidr": {
                    "type": "string",
                    "deprecationMessage": "subnet_cidr is Deprecated"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcCidr": {
                    "type": "string",
                    "description": "The CIDR block of the queue."
                }
            },
            "required": [
                "createTime",
                "cuCount",
                "description",
                "elasticResourcePoolName",
                "enterpriseProjectId",
                "name",
                "region",
                "resourceMode",
                "scalingPolicies",
                "tags",
                "vpcCidr"
            ],
            "inputProperties": {
                "cuCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "elasticResourcePoolName": {
                    "type": "string",
                    "description": "The name of the elastic resource pool to which the queue belongs."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "feature": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "managementSubnetCidr": {
                    "type": "string",
                    "deprecationMessage": "management_subnet_cidr is Deprecated",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "platform": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "queueType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "resourceMode": {
                    "type": "integer",
                    "description": "The queue resource mode.",
                    "willReplaceOnChanges": true
                },
                "scalingPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dli/QueueScalingPolicy:QueueScalingPolicy"
                    }
                },
                "sparkDriver": {
                    "$ref": "#/types/cloudru:Dli/QueueSparkDriver:QueueSparkDriver"
                },
                "subnetCidr": {
                    "type": "string",
                    "deprecationMessage": "subnet_cidr is Deprecated",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "vpcCidr": {
                    "type": "string",
                    "description": "The CIDR block of the queue."
                }
            },
            "requiredInputs": [
                "cuCount"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Queue resources.\n",
                "properties": {
                    "createTime": {
                        "type": "integer"
                    },
                    "cuCount": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "elasticResourcePoolName": {
                        "type": "string",
                        "description": "The name of the elastic resource pool to which the queue belongs."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "feature": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "managementSubnetCidr": {
                        "type": "string",
                        "deprecationMessage": "management_subnet_cidr is Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "platform": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "queueType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceMode": {
                        "type": "integer",
                        "description": "The queue resource mode.",
                        "willReplaceOnChanges": true
                    },
                    "scalingPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dli/QueueScalingPolicy:QueueScalingPolicy"
                        }
                    },
                    "sparkDriver": {
                        "$ref": "#/types/cloudru:Dli/QueueSparkDriver:QueueSparkDriver"
                    },
                    "subnetCidr": {
                        "type": "string",
                        "deprecationMessage": "subnet_cidr is Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "vpcCidr": {
                        "type": "string",
                        "description": "The CIDR block of the queue."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dli/sparkJob:SparkJob": {
            "properties": {
                "appName": {
                    "type": "string"
                },
                "appParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configurations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "dependentPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dli/SparkJobDependentPackage:SparkJobDependentPackage"
                    }
                },
                "driverCores": {
                    "type": "integer"
                },
                "driverMemory": {
                    "type": "string"
                },
                "executorCores": {
                    "type": "integer"
                },
                "executorMemory": {
                    "type": "string"
                },
                "executors": {
                    "type": "integer"
                },
                "feature": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mainClass": {
                    "type": "string"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "pythonFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "queueName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sparkVersion": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                }
            },
            "required": [
                "appName",
                "createdAt",
                "name",
                "owner",
                "queueName",
                "region"
            ],
            "inputProperties": {
                "appName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "appParameters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "configurations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "dependentPackages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dli/SparkJobDependentPackage:SparkJobDependentPackage"
                    },
                    "willReplaceOnChanges": true
                },
                "driverCores": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "driverMemory": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "executorCores": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "executorMemory": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "executors": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "feature": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "jars": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "mainClass": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxRetries": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "pythonFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "queueName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sparkVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "specification": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "appName",
                "queueName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SparkJob resources.\n",
                "properties": {
                    "appName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "appParameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "configurations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dependentPackages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dli/SparkJobDependentPackage:SparkJobDependentPackage"
                        },
                        "willReplaceOnChanges": true
                    },
                    "driverCores": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "driverMemory": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "executorCores": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "executorMemory": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "executors": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "feature": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "jars": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "mainClass": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maxRetries": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string"
                    },
                    "pythonFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "queueName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sparkVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "specification": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dms/kafkaInstance:KafkaInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "archType": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead."
                },
                "bandwidth": {
                    "type": "string",
                    "deprecationMessage": "The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id."
                },
                "brokerNum": {
                    "type": "integer"
                },
                "certReplaced": {
                    "type": "boolean"
                },
                "chargingMode": {
                    "type": "string"
                },
                "connectAddress": {
                    "type": "string"
                },
                "connectorId": {
                    "type": "string"
                },
                "connectorNodeNum": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaInstanceCrossVpcAccess:KafkaInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dumping": {
                    "type": "boolean"
                },
                "enableAutoTopic": {
                    "type": "boolean"
                },
                "enablePublicIp": {
                    "type": "boolean"
                },
                "enabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendTimes": {
                    "type": "integer"
                },
                "flavorId": {
                    "type": "string"
                },
                "ipv6ConnectAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "isLogicalVolume": {
                    "type": "boolean"
                },
                "kmsEncryptedPassword": {
                    "type": "string",
                    "description": "schema: Internal",
                    "secret": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "managerPassword": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "secret": true
                },
                "managerUser": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "manegementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                },
                "messageQueryInstEnable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "newTenantIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeNum": {
                    "type": "integer"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaInstanceParameter:KafkaInstanceParameter"
                    }
                },
                "partitionNum": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "podConnectAddress": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "portProtocol": {
                    "$ref": "#/types/cloudru:Dms/KafkaInstancePortProtocol:KafkaInstancePortProtocol",
                    "description": "The port protocol information of the Kafka instance."
                },
                "portProtocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaInstancePortProtocol:KafkaInstancePortProtocol"
                    },
                    "description": "Use port_protocol instead."
                },
                "productId": {
                    "type": "string"
                },
                "publicBandwidth": {
                    "type": "integer"
                },
                "publicIpAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityProtocol": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "sslTwoWayEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storageResourceId": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "storageType": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vpcClientPlain": {
                    "type": "boolean"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZones",
                "availableZones",
                "bandwidth",
                "brokerNum",
                "certReplaced",
                "chargingMode",
                "connectAddress",
                "connectorId",
                "connectorNodeNum",
                "createdAt",
                "crossVpcAccesses",
                "dumping",
                "enableAutoTopic",
                "enablePublicIp",
                "engine",
                "engineVersion",
                "enterpriseProjectId",
                "extendTimes",
                "ipv6ConnectAddresses",
                "ipv6Enable",
                "isLogicalVolume",
                "maintainBegin",
                "maintainEnd",
                "managementConnectAddress",
                "manegementConnectAddress",
                "messageQueryInstEnable",
                "name",
                "networkId",
                "nodeNum",
                "parameters",
                "partitionNum",
                "podConnectAddress",
                "port",
                "portProtocol",
                "portProtocols",
                "publicBandwidth",
                "publicIpAddresses",
                "region",
                "resourceSpecCode",
                "retentionPolicy",
                "securityGroupId",
                "sslEnable",
                "sslTwoWayEnable",
                "status",
                "storageResourceId",
                "storageSpace",
                "storageSpecCode",
                "storageType",
                "tags",
                "type",
                "usedStorageSpace",
                "userId",
                "userName",
                "vpcClientPlain",
                "vpcId"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string"
                },
                "archType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                    "willReplaceOnChanges": true
                },
                "bandwidth": {
                    "type": "string",
                    "deprecationMessage": "The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.",
                    "willReplaceOnChanges": true
                },
                "brokerNum": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaInstanceCrossVpcAccess:KafkaInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dumping": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "enableAutoTopic": {
                    "type": "boolean"
                },
                "enabledMechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "kmsEncryptedPassword": {
                    "type": "string",
                    "description": "schema: Internal",
                    "secret": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managerPassword": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "managerUser": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "newTenantIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaInstanceParameter:KafkaInstanceParameter"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portProtocol": {
                    "$ref": "#/types/cloudru:Dms/KafkaInstancePortProtocol:KafkaInstancePortProtocol",
                    "description": "The port protocol information of the Kafka instance."
                },
                "productId": {
                    "type": "string"
                },
                "publicIpIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityProtocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sslEnable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcClientPlain": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "engineVersion",
                "networkId",
                "securityGroupId",
                "storageSpecCode",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string"
                    },
                    "archType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                        "willReplaceOnChanges": true
                    },
                    "bandwidth": {
                        "type": "string",
                        "deprecationMessage": "The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.",
                        "willReplaceOnChanges": true
                    },
                    "brokerNum": {
                        "type": "integer"
                    },
                    "certReplaced": {
                        "type": "boolean"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "connectAddress": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "string"
                    },
                    "connectorNodeNum": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "crossVpcAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dms/KafkaInstanceCrossVpcAccess:KafkaInstanceCrossVpcAccess"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "dumping": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "enableAutoTopic": {
                        "type": "boolean"
                    },
                    "enablePublicIp": {
                        "type": "boolean"
                    },
                    "enabledMechanisms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendTimes": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "ipv6ConnectAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "isLogicalVolume": {
                        "type": "boolean"
                    },
                    "kmsEncryptedPassword": {
                        "type": "string",
                        "description": "schema: Internal",
                        "secret": true
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "managementConnectAddress": {
                        "type": "string",
                        "deprecationMessage": "Deprecated"
                    },
                    "managerPassword": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "managerUser": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "manegementConnectAddress": {
                        "type": "string",
                        "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                    },
                    "messageQueryInstEnable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "newTenantIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nodeNum": {
                        "type": "integer"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dms/KafkaInstanceParameter:KafkaInstanceParameter"
                        }
                    },
                    "partitionNum": {
                        "type": "integer"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "podConnectAddress": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "portProtocol": {
                        "$ref": "#/types/cloudru:Dms/KafkaInstancePortProtocol:KafkaInstancePortProtocol",
                        "description": "The port protocol information of the Kafka instance."
                    },
                    "portProtocols": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dms/KafkaInstancePortProtocol:KafkaInstancePortProtocol"
                        },
                        "description": "Use port_protocol instead."
                    },
                    "productId": {
                        "type": "string"
                    },
                    "publicBandwidth": {
                        "type": "integer"
                    },
                    "publicIpAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIpIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string"
                    },
                    "retentionPolicy": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "securityProtocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sslEnable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "sslTwoWayEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageResourceId": {
                        "type": "string"
                    },
                    "storageSpace": {
                        "type": "integer"
                    },
                    "storageSpecCode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "storageType": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "usedStorageSpace": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "vpcClientPlain": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dms/kafkaPermissions:KafkaPermissions": {
            "properties": {
                "instanceId": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaPermissionsPolicy:KafkaPermissionsPolicy"
                    }
                },
                "region": {
                    "type": "string"
                },
                "topicName": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "policies",
                "region",
                "topicName"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaPermissionsPolicy:KafkaPermissionsPolicy"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topicName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policies",
                "topicName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaPermissions resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dms/KafkaPermissionsPolicy:KafkaPermissionsPolicy"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "topicName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dms/kafkaTopic:KafkaTopic": {
            "properties": {
                "agingTime": {
                    "type": "integer"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaTopicConfig:KafkaTopicConfig"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "newPartitionBrokers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "partitions": {
                    "type": "integer"
                },
                "policiesOnly": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "replicas": {
                    "type": "integer"
                },
                "syncFlushing": {
                    "type": "boolean"
                },
                "syncReplication": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "agingTime",
                "configs",
                "createdAt",
                "instanceId",
                "name",
                "partitions",
                "policiesOnly",
                "region",
                "replicas",
                "syncFlushing",
                "syncReplication",
                "type"
            ],
            "inputProperties": {
                "agingTime": {
                    "type": "integer"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dms/KafkaTopicConfig:KafkaTopicConfig"
                    }
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "newPartitionBrokers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "partitions": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "replicas": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "syncFlushing": {
                    "type": "boolean"
                },
                "syncReplication": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "instanceId",
                "partitions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "agingTime": {
                        "type": "integer"
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dms/KafkaTopicConfig:KafkaTopicConfig"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "newPartitionBrokers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "partitions": {
                        "type": "integer"
                    },
                    "policiesOnly": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "replicas": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "syncFlushing": {
                        "type": "boolean"
                    },
                    "syncReplication": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dms/kafkaUser:KafkaUser": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "defaultApp": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "defaultApp",
                "instanceId",
                "name",
                "password",
                "region",
                "role"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaUser resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultApp": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dms/rabbitmqInstance:RabbitmqInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead."
                },
                "brokerNum": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string"
                },
                "connectAddress": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableAcl": {
                    "type": "boolean"
                },
                "enablePublicIp": {
                    "type": "boolean"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "extendTimes": {
                    "type": "integer"
                },
                "flavorId": {
                    "type": "string"
                },
                "isLogicalVolume": {
                    "type": "boolean"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "managementConnectAddress": {
                    "type": "string"
                },
                "manegementConnectAddress": {
                    "type": "string",
                    "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "product_id has deprecated, please use \"flavor_id\" instead."
                },
                "publicIpAddress": {
                    "type": "string"
                },
                "publicIpId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZones",
                "availableZones",
                "brokerNum",
                "chargingMode",
                "connectAddress",
                "createdAt",
                "enableAcl",
                "enablePublicIp",
                "engine",
                "enterpriseProjectId",
                "extendTimes",
                "isLogicalVolume",
                "maintainBegin",
                "maintainEnd",
                "managementConnectAddress",
                "manegementConnectAddress",
                "name",
                "networkId",
                "port",
                "publicIpAddress",
                "region",
                "resourceSpecCode",
                "securityGroupId",
                "specification",
                "status",
                "storageSpace",
                "storageSpecCode",
                "tags",
                "type",
                "usedStorageSpace",
                "userId",
                "userName",
                "vpcId"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                    "willReplaceOnChanges": true
                },
                "brokerNum": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enableAcl": {
                    "type": "boolean"
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "productId": {
                    "type": "string",
                    "deprecationMessage": "product_id has deprecated, please use \"flavor_id\" instead."
                },
                "publicIpId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId",
                "securityGroupId",
                "storageSpecCode",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RabbitmqInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "available_zones has deprecated, please use \"availability_zones\" instead.",
                        "willReplaceOnChanges": true
                    },
                    "brokerNum": {
                        "type": "integer"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "connectAddress": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableAcl": {
                        "type": "boolean"
                    },
                    "enablePublicIp": {
                        "type": "boolean"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendTimes": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "isLogicalVolume": {
                        "type": "boolean"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "managementConnectAddress": {
                        "type": "string"
                    },
                    "manegementConnectAddress": {
                        "type": "string",
                        "deprecationMessage": "typo in manegement_connect_address, please use \"management_connect_address\" instead."
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "productId": {
                        "type": "string",
                        "deprecationMessage": "product_id has deprecated, please use \"flavor_id\" instead."
                    },
                    "publicIpAddress": {
                        "type": "string"
                    },
                    "publicIpId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "sslEnable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageSpace": {
                        "type": "integer"
                    },
                    "storageSpecCode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "usedStorageSpace": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dns/recordset:Recordset": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "records",
                "region",
                "tags",
                "type",
                "zoneId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "records",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Recordset resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "zoneId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dns/zone:Zone": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the zone."
                },
                "dnssec": {
                    "type": "string",
                    "description": "Specifies whether to enable DNSSEC for a public zone."
                },
                "dnssecInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dns/ZoneDnssecInfo:ZoneDnssecInfo"
                    },
                    "description": "Indicates the DNSSEC infos."
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the administrator managing the zone."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the zone."
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of the masters of the DNS server."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the zone."
                },
                "proxyPattern": {
                    "type": "string",
                    "description": "The recursive resolution proxy mode for subdomains of the private zone."
                },
                "region": {
                    "type": "string"
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dns/ZoneRouter:ZoneRouter"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the zone."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the zone."
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live (TTL) of the zone."
                },
                "zoneType": {
                    "type": "string",
                    "description": "The type of zone."
                }
            },
            "required": [
                "dnssec",
                "dnssecInfos",
                "email",
                "enterpriseProjectId",
                "masters",
                "name",
                "proxyPattern",
                "region",
                "status",
                "tags"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the zone."
                },
                "dnssec": {
                    "type": "string",
                    "description": "Specifies whether to enable DNSSEC for a public zone."
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the administrator managing the zone."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the zone.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the zone.",
                    "willReplaceOnChanges": true
                },
                "proxyPattern": {
                    "type": "string",
                    "description": "The recursive resolution proxy mode for subdomains of the private zone."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dns/ZoneRouter:ZoneRouter"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the zone."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the zone."
                },
                "ttl": {
                    "type": "integer",
                    "description": "The time to live (TTL) of the zone."
                },
                "zoneType": {
                    "type": "string",
                    "description": "The type of zone.",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the zone."
                    },
                    "dnssec": {
                        "type": "string",
                        "description": "Specifies whether to enable DNSSEC for a public zone."
                    },
                    "dnssecInfos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dns/ZoneDnssecInfo:ZoneDnssecInfo"
                        },
                        "description": "Indicates the DNSSEC infos."
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the administrator managing the zone."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID of the zone.",
                        "willReplaceOnChanges": true
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the masters of the DNS server."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the zone.",
                        "willReplaceOnChanges": true
                    },
                    "proxyPattern": {
                        "type": "string",
                        "description": "The recursive resolution proxy mode for subdomains of the private zone."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dns/ZoneRouter:ZoneRouter"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the zone."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the zone."
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The time to live (TTL) of the zone."
                    },
                    "zoneType": {
                        "type": "string",
                        "description": "The type of zone.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Drs/job:Job": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationDb": {
                    "$ref": "#/types/cloudru:Drs/JobDestinationDb:JobDestinationDb"
                },
                "destinationDbReadnoly": {
                    "type": "boolean"
                },
                "direction": {
                    "type": "string"
                },
                "engineType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expiredDays": {
                    "type": "integer"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "limitSpeeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Drs/JobLimitSpeed:JobLimitSpeed"
                    }
                },
                "migrateDefiner": {
                    "type": "boolean"
                },
                "migrationType": {
                    "type": "string"
                },
                "multiWrite": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "netType": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sourceDb": {
                    "$ref": "#/types/cloudru:Drs/JobSourceDb:JobSourceDb"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "destinationDb",
                "direction",
                "engineType",
                "name",
                "privateIp",
                "publicIp",
                "region",
                "sourceDb",
                "status",
                "tags",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "destinationDb": {
                    "$ref": "#/types/cloudru:Drs/JobDestinationDb:JobDestinationDb",
                    "willReplaceOnChanges": true
                },
                "destinationDbReadnoly": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "direction": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "expiredDays": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "limitSpeeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Drs/JobLimitSpeed:JobLimitSpeed"
                    },
                    "willReplaceOnChanges": true
                },
                "migrateDefiner": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "migrationType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "multiWrite": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "netType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceDb": {
                    "$ref": "#/types/cloudru:Drs/JobSourceDb:JobSourceDb",
                    "willReplaceOnChanges": true
                },
                "startTime": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destinationDb",
                "direction",
                "engineType",
                "sourceDb",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Job resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "destinationDb": {
                        "$ref": "#/types/cloudru:Drs/JobDestinationDb:JobDestinationDb",
                        "willReplaceOnChanges": true
                    },
                    "destinationDbReadnoly": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "direction": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expiredDays": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "limitSpeeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Drs/JobLimitSpeed:JobLimitSpeed"
                        },
                        "willReplaceOnChanges": true
                    },
                    "migrateDefiner": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "migrationType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "multiWrite": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "netType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceDb": {
                        "$ref": "#/types/cloudru:Drs/JobSourceDb:JobSourceDb",
                        "willReplaceOnChanges": true
                    },
                    "startTime": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Dws/cluster:Cluster": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone in which to create the cluster instance."
                },
                "created": {
                    "type": "string",
                    "description": "The creation time of the cluster."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cluster."
                },
                "dssPoolId": {
                    "type": "string",
                    "description": "Dedicated storage pool ID."
                },
                "elbId": {
                    "type": "string",
                    "description": "The ID of the ELB load balancer."
                },
                "elbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dws/ClusterElb:ClusterElb"
                    },
                    "description": "The ELB information bound to the cluster."
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dws/ClusterEndpoint:ClusterEndpoint"
                    },
                    "description": "Private network connection information about the cluster."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID."
                },
                "forceBackup": {
                    "type": "boolean",
                    "description": "Whether to automatically execute snapshot when shrinking the number of nodes."
                },
                "keepLastManualSnapshot": {
                    "type": "integer",
                    "description": "The number of latest manual snapshots that need to be retained when deleting the cluster."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID."
                },
                "logicalClusterEnable": {
                    "type": "boolean",
                    "description": "Whether to enable logical cluster."
                },
                "ltsEnable": {
                    "type": "boolean",
                    "description": "Whether to enable LTS."
                },
                "maintainWindows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dws/ClusterMaintainWindow:ClusterMaintainWindow"
                    },
                    "description": "Cluster maintenance window."
                },
                "name": {
                    "type": "string",
                    "description": "The cluster name."
                },
                "networkId": {
                    "type": "string",
                    "description": "The subnet ID."
                },
                "nodeType": {
                    "type": "string",
                    "description": "The flavor of the cluster."
                },
                "numberOfCn": {
                    "type": "integer",
                    "description": "schema: Required"
                },
                "numberOfNode": {
                    "type": "integer",
                    "description": "Number of nodes in a cluster."
                },
                "port": {
                    "type": "integer",
                    "description": "Service port of a cluster (8000 to 10000). The default value is 8000."
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of private network IP addresses."
                },
                "publicEndpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Dws/ClusterPublicEndpoint:ClusterPublicEndpoint"
                    },
                    "description": "Public network connection information about the cluster."
                },
                "publicIp": {
                    "$ref": "#/types/cloudru:Dws/ClusterPublicIp:ClusterPublicIp"
                },
                "recentEvent": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID."
                },
                "status": {
                    "type": "string",
                    "description": "The cluster status."
                },
                "subStatus": {
                    "type": "string",
                    "description": "Sub-status of clusters in the AVAILABLE state."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "taskStatus": {
                    "type": "string",
                    "description": "Cluster management task."
                },
                "updated": {
                    "type": "string",
                    "description": "The updated time of the cluster."
                },
                "userName": {
                    "type": "string",
                    "description": "Administrator username for logging in to a data warehouse cluster."
                },
                "userPwd": {
                    "type": "string",
                    "description": "Administrator password for logging in to a data warehouse cluster.",
                    "secret": true
                },
                "version": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "volume": {
                    "$ref": "#/types/cloudru:Dws/ClusterVolume:ClusterVolume"
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID."
                }
            },
            "required": [
                "availabilityZone",
                "created",
                "dssPoolId",
                "elbs",
                "endpoints",
                "enterpriseProjectId",
                "kmsKeyId",
                "maintainWindows",
                "name",
                "networkId",
                "nodeType",
                "numberOfNode",
                "privateIps",
                "publicEndpoints",
                "publicIp",
                "recentEvent",
                "region",
                "securityGroupId",
                "status",
                "subStatus",
                "tags",
                "taskStatus",
                "updated",
                "userName",
                "userPwd",
                "version",
                "volume",
                "vpcId"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone in which to create the cluster instance.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cluster."
                },
                "dssPoolId": {
                    "type": "string",
                    "description": "Dedicated storage pool ID.",
                    "willReplaceOnChanges": true
                },
                "elbId": {
                    "type": "string",
                    "description": "The ID of the ELB load balancer."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID."
                },
                "forceBackup": {
                    "type": "boolean",
                    "description": "Whether to automatically execute snapshot when shrinking the number of nodes."
                },
                "keepLastManualSnapshot": {
                    "type": "integer",
                    "description": "The number of latest manual snapshots that need to be retained when deleting the cluster."
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID.",
                    "willReplaceOnChanges": true
                },
                "logicalClusterEnable": {
                    "type": "boolean",
                    "description": "Whether to enable logical cluster."
                },
                "ltsEnable": {
                    "type": "boolean",
                    "description": "Whether to enable LTS."
                },
                "name": {
                    "type": "string",
                    "description": "The cluster name.",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "The subnet ID.",
                    "willReplaceOnChanges": true
                },
                "nodeType": {
                    "type": "string",
                    "description": "The flavor of the cluster.",
                    "willReplaceOnChanges": true
                },
                "numberOfCn": {
                    "type": "integer",
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "numberOfNode": {
                    "type": "integer",
                    "description": "Number of nodes in a cluster."
                },
                "port": {
                    "type": "integer",
                    "description": "Service port of a cluster (8000 to 10000). The default value is 8000.",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "$ref": "#/types/cloudru:Dws/ClusterPublicIp:ClusterPublicIp"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userName": {
                    "type": "string",
                    "description": "Administrator username for logging in to a data warehouse cluster.",
                    "willReplaceOnChanges": true
                },
                "userPwd": {
                    "type": "string",
                    "description": "Administrator password for logging in to a data warehouse cluster.",
                    "secret": true
                },
                "version": {
                    "type": "string",
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "volume": {
                    "$ref": "#/types/cloudru:Dws/ClusterVolume:ClusterVolume",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "networkId",
                "nodeType",
                "numberOfNode",
                "securityGroupId",
                "userName",
                "userPwd",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "description": "The availability zone in which to create the cluster instance.",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "string",
                        "description": "The creation time of the cluster."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the cluster."
                    },
                    "dssPoolId": {
                        "type": "string",
                        "description": "Dedicated storage pool ID.",
                        "willReplaceOnChanges": true
                    },
                    "elbId": {
                        "type": "string",
                        "description": "The ID of the ELB load balancer."
                    },
                    "elbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dws/ClusterElb:ClusterElb"
                        },
                        "description": "The ELB information bound to the cluster."
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dws/ClusterEndpoint:ClusterEndpoint"
                        },
                        "description": "Private network connection information about the cluster."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID."
                    },
                    "forceBackup": {
                        "type": "boolean",
                        "description": "Whether to automatically execute snapshot when shrinking the number of nodes."
                    },
                    "keepLastManualSnapshot": {
                        "type": "integer",
                        "description": "The number of latest manual snapshots that need to be retained when deleting the cluster."
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "description": "The KMS key ID.",
                        "willReplaceOnChanges": true
                    },
                    "logicalClusterEnable": {
                        "type": "boolean",
                        "description": "Whether to enable logical cluster."
                    },
                    "ltsEnable": {
                        "type": "boolean",
                        "description": "Whether to enable LTS."
                    },
                    "maintainWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dws/ClusterMaintainWindow:ClusterMaintainWindow"
                        },
                        "description": "Cluster maintenance window."
                    },
                    "name": {
                        "type": "string",
                        "description": "The cluster name.",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The subnet ID.",
                        "willReplaceOnChanges": true
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "The flavor of the cluster.",
                        "willReplaceOnChanges": true
                    },
                    "numberOfCn": {
                        "type": "integer",
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "numberOfNode": {
                        "type": "integer",
                        "description": "Number of nodes in a cluster."
                    },
                    "port": {
                        "type": "integer",
                        "description": "Service port of a cluster (8000 to 10000). The default value is 8000.",
                        "willReplaceOnChanges": true
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of private network IP addresses."
                    },
                    "publicEndpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Dws/ClusterPublicEndpoint:ClusterPublicEndpoint"
                        },
                        "description": "Public network connection information about the cluster."
                    },
                    "publicIp": {
                        "$ref": "#/types/cloudru:Dws/ClusterPublicIp:ClusterPublicIp"
                    },
                    "recentEvent": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group ID."
                    },
                    "status": {
                        "type": "string",
                        "description": "The cluster status."
                    },
                    "subStatus": {
                        "type": "string",
                        "description": "Sub-status of clusters in the AVAILABLE state."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "taskStatus": {
                        "type": "string",
                        "description": "Cluster management task."
                    },
                    "updated": {
                        "type": "string",
                        "description": "The updated time of the cluster."
                    },
                    "userName": {
                        "type": "string",
                        "description": "Administrator username for logging in to a data warehouse cluster.",
                        "willReplaceOnChanges": true
                    },
                    "userPwd": {
                        "type": "string",
                        "description": "Administrator password for logging in to a data warehouse cluster.",
                        "secret": true
                    },
                    "version": {
                        "type": "string",
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "volume": {
                        "$ref": "#/types/cloudru:Dws/ClusterVolume:ClusterVolume",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC ID.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ecs/eipAssociate:EipAssociate": {
            "properties": {
                "bandwidthId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "fixedIp",
                "instanceId",
                "portId",
                "region"
            ],
            "inputProperties": {
                "bandwidthId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EipAssociate resources.\n",
                "properties": {
                    "bandwidthId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ecs/instance:Instance": {
            "properties": {
                "accessIpV4": {
                    "type": "string"
                },
                "accessIpV6": {
                    "type": "string"
                },
                "adminPass": {
                    "type": "string",
                    "secret": true
                },
                "agencyName": {
                    "type": "string"
                },
                "agentList": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoTerminateTime": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bandwidth": {
                    "$ref": "#/types/cloudru:Ecs/InstanceBandwidth:InstanceBandwidth"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceDataDisk:InstanceDataDisk"
                    }
                },
                "deleteDisksOnTermination": {
                    "type": "boolean"
                },
                "deleteEipOnTermination": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "eipId": {
                    "type": "string"
                },
                "eipType": {
                    "type": "string"
                },
                "enclaveOptions": {
                    "$ref": "#/types/cloudru:Ecs/InstanceEnclaveOptions:InstanceEnclaveOptions"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expiredTime": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "flavorName": {
                    "type": "string",
                    "description": "schema: Computed"
                },
                "hostname": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "keyPair": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceNetwork:InstanceNetwork"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "powerAction": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "schedulerHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceSchedulerHint:InstanceSchedulerHint"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Computed"
                },
                "spotDuration": {
                    "type": "integer"
                },
                "spotDurationCount": {
                    "type": "integer"
                },
                "spotMaximumPrice": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "stopBeforeDestroy": {
                    "type": "boolean"
                },
                "systemDiskDssPoolId": {
                    "type": "string"
                },
                "systemDiskId": {
                    "type": "string"
                },
                "systemDiskIops": {
                    "type": "integer"
                },
                "systemDiskKmsKeyId": {
                    "type": "string"
                },
                "systemDiskSize": {
                    "type": "integer"
                },
                "systemDiskThroughput": {
                    "type": "integer"
                },
                "systemDiskType": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "userData": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "volumeAttacheds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceVolumeAttached:InstanceVolumeAttached"
                    }
                }
            },
            "required": [
                "accessIpV4",
                "accessIpV6",
                "agencyName",
                "agentList",
                "availabilityZone",
                "chargingMode",
                "createdAt",
                "description",
                "enclaveOptions",
                "enterpriseProjectId",
                "expiredTime",
                "flavorId",
                "flavorName",
                "hostname",
                "imageId",
                "imageName",
                "name",
                "networks",
                "powerAction",
                "publicIp",
                "region",
                "schedulerHints",
                "securityGroupIds",
                "securityGroups",
                "spotDurationCount",
                "status",
                "systemDiskId",
                "systemDiskIops",
                "systemDiskKmsKeyId",
                "systemDiskSize",
                "systemDiskThroughput",
                "systemDiskType",
                "tags",
                "updatedAt",
                "volumeAttacheds"
            ],
            "inputProperties": {
                "adminPass": {
                    "type": "string",
                    "secret": true
                },
                "agencyName": {
                    "type": "string"
                },
                "agentList": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoTerminateTime": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidth": {
                    "$ref": "#/types/cloudru:Ecs/InstanceBandwidth:InstanceBandwidth",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceDataDisk:InstanceDataDisk"
                    },
                    "willReplaceOnChanges": true
                },
                "deleteDisksOnTermination": {
                    "type": "boolean"
                },
                "deleteEipOnTermination": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "eipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "eipType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enclaveOptions": {
                    "$ref": "#/types/cloudru:Ecs/InstanceEnclaveOptions:InstanceEnclaveOptions",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavorId": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "flavorName": {
                    "type": "string",
                    "description": "schema: Computed"
                },
                "hostname": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imageName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "keyPair": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceNetwork:InstanceNetwork"
                    },
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "schedulerHints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Ecs/InstanceSchedulerHint:InstanceSchedulerHint"
                    }
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Computed"
                },
                "spotDuration": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "spotDurationCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "spotMaximumPrice": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "stopBeforeDestroy": {
                    "type": "boolean"
                },
                "systemDiskDssPoolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "systemDiskIops": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "systemDiskKmsKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "systemDiskSize": {
                    "type": "integer"
                },
                "systemDiskThroughput": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "systemDiskType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userData": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networks"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "accessIpV4": {
                        "type": "string"
                    },
                    "accessIpV6": {
                        "type": "string"
                    },
                    "adminPass": {
                        "type": "string",
                        "secret": true
                    },
                    "agencyName": {
                        "type": "string"
                    },
                    "agentList": {
                        "type": "string"
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "autoTerminateTime": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidth": {
                        "$ref": "#/types/cloudru:Ecs/InstanceBandwidth:InstanceBandwidth",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dataDisks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/InstanceDataDisk:InstanceDataDisk"
                        },
                        "willReplaceOnChanges": true
                    },
                    "deleteDisksOnTermination": {
                        "type": "boolean"
                    },
                    "deleteEipOnTermination": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "eipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "eipType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enclaveOptions": {
                        "$ref": "#/types/cloudru:Ecs/InstanceEnclaveOptions:InstanceEnclaveOptions",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expiredTime": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "schema: Required"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "schema: Computed"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imageName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/InstanceNetwork:InstanceNetwork"
                        },
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "schedulerHints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/InstanceSchedulerHint:InstanceSchedulerHint"
                        }
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Computed"
                    },
                    "spotDuration": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "spotDurationCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "spotMaximumPrice": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "stopBeforeDestroy": {
                        "type": "boolean"
                    },
                    "systemDiskDssPoolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskId": {
                        "type": "string"
                    },
                    "systemDiskIops": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskKmsKeyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskSize": {
                        "type": "integer"
                    },
                    "systemDiskThroughput": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "systemDiskType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "userData": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "volumeAttacheds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/InstanceVolumeAttached:InstanceVolumeAttached"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ecs/interfaceAttach:InterfaceAttach": {
            "properties": {
                "fixedIp": {
                    "type": "string"
                },
                "fixedIpv6": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "mac": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceDestCheck": {
                    "type": "boolean"
                }
            },
            "required": [
                "fixedIp",
                "fixedIpv6",
                "instanceId",
                "ipv6Enable",
                "mac",
                "networkId",
                "portId",
                "region",
                "securityGroupIds"
            ],
            "inputProperties": {
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv6BandwidthId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceDestCheck": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InterfaceAttach resources.\n",
                "properties": {
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "fixedIpv6": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv6BandwidthId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "mac": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceDestCheck": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ecs/keypair:Keypair": {
            "properties": {
                "keyFile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "keyFile",
                "name",
                "publicKey",
                "region"
            ],
            "inputProperties": {
                "keyFile": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Keypair resources.\n",
                "properties": {
                    "keyFile": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ecs/servergroup:Servergroup": {
            "properties": {
                "faultDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Internal"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "faultDomains",
                "members",
                "name",
                "region"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Required",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Servergroup resources.\n",
                "properties": {
                    "faultDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Internal"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Required",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ecs/volumeAttach:VolumeAttach": {
            "properties": {
                "deleteOnTermination": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "pciAddress": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "deleteOnTermination",
                "device",
                "instanceId",
                "pciAddress",
                "region",
                "volumeId"
            ],
            "inputProperties": {
                "deleteOnTermination": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VolumeAttach resources.\n",
                "properties": {
                    "deleteOnTermination": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "pciAddress": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/certificate:Certificate": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expireTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "certificate",
                "createTime",
                "enterpriseProjectId",
                "expireTime",
                "name",
                "region",
                "type",
                "updateTime"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "certificate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "secret": true
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/l7policy:L7policy": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "adminStateUp": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                }
            },
            "required": [
                "action",
                "listenerId",
                "name",
                "position",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "adminStateUp": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "listenerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering L7policy resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "adminStateUp": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "redirectListenerId": {
                        "type": "string"
                    },
                    "redirectPoolId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/l7rule:L7rule": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "compareType": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "l7policyId": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "compareType",
                "l7policyId",
                "listenerId",
                "region",
                "tenantId",
                "type",
                "value"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean"
                },
                "compareType": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "l7policyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "compareType",
                "l7policyId",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering L7rule resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean"
                    },
                    "compareType": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "l7policyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/listener:Listener": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "admin_state_up is deprecated"
                },
                "clientCaTlsContainerRef": {
                    "type": "string"
                },
                "connectionLimit": {
                    "type": "integer",
                    "deprecationMessage": "connection_limit is deprecated"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "defaultTlsContainerRef": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "insertHeaders": {
                    "$ref": "#/types/cloudru:Elb/ListenerInsertHeaders:ListenerInsertHeaders"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "sniContainerRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "clientCaTlsContainerRef",
                "connectionLimit",
                "createdAt",
                "defaultPoolId",
                "defaultTlsContainerRef",
                "insertHeaders",
                "loadbalancerId",
                "name",
                "protectionStatus",
                "protocol",
                "protocolPort",
                "region",
                "sniContainerRefs",
                "tags",
                "tenantId",
                "tlsCiphersPolicy",
                "updatedAt"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "admin_state_up is deprecated"
                },
                "clientCaTlsContainerRef": {
                    "type": "string"
                },
                "connectionLimit": {
                    "type": "integer",
                    "deprecationMessage": "connection_limit is deprecated"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "defaultTlsContainerRef": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "insertHeaders": {
                    "$ref": "#/types/cloudru:Elb/ListenerInsertHeaders:ListenerInsertHeaders"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sniContainerRefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "loadbalancerId",
                "protocol",
                "protocolPort"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Listener resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "deprecationMessage": "admin_state_up is deprecated"
                    },
                    "clientCaTlsContainerRef": {
                        "type": "string"
                    },
                    "connectionLimit": {
                        "type": "integer",
                        "deprecationMessage": "connection_limit is deprecated"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultPoolId": {
                        "type": "string"
                    },
                    "defaultTlsContainerRef": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "http2Enable": {
                        "type": "boolean"
                    },
                    "insertHeaders": {
                        "$ref": "#/types/cloudru:Elb/ListenerInsertHeaders:ListenerInsertHeaders"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolPort": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sniContainerRefs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated"
                    },
                    "tlsCiphersPolicy": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/loadbalancer:Loadbalancer": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "frozenScene": {
                    "type": "string"
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vipAddress": {
                    "type": "string"
                },
                "vipPortId": {
                    "type": "string"
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer works"
                }
            },
            "required": [
                "chargeMode",
                "chargingMode",
                "createdAt",
                "enterpriseProjectId",
                "frozenScene",
                "loadbalancerProvider",
                "name",
                "protectionStatus",
                "publicIp",
                "region",
                "securityGroupIds",
                "tags",
                "tenantId",
                "updatedAt",
                "vipAddress",
                "vipPortId",
                "vipSubnetId"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string",
                    "description": "schema: Deprecated",
                    "willReplaceOnChanges": true
                },
                "loadbalancerProvider": {
                    "type": "string",
                    "description": "schema: Deprecated",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "vipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer works",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "vipSubnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Loadbalancer resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "description": "schema: Deprecated"
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "schema: Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "frozenScene": {
                        "type": "string"
                    },
                    "loadbalancerProvider": {
                        "type": "string",
                        "description": "schema: Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vipPortId": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet where the load balancer works",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/member:Member": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated"
                },
                "backendServerStatus": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operatingStatus": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet in which to access the member"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "backendServerStatus",
                "name",
                "operatingStatus",
                "poolId",
                "protocolPort",
                "region",
                "subnetId",
                "tenantId",
                "weight"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "adminStateUp": {
                    "type": "boolean",
                    "description": "schema: Deprecated"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet in which to access the member",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "address",
                "poolId",
                "protocolPort",
                "subnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Member resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "adminStateUp": {
                        "type": "boolean",
                        "description": "schema: Deprecated"
                    },
                    "backendServerStatus": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingStatus": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet in which to access the member",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/monitor:Monitor": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "delay": {
                    "type": "integer"
                },
                "domainName": {
                    "type": "string"
                },
                "expectedCodes": {
                    "type": "string"
                },
                "httpMethod": {
                    "type": "string"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "required": [
                "delay",
                "domainName",
                "expectedCodes",
                "httpMethod",
                "maxRetries",
                "name",
                "poolId",
                "region",
                "tenantId",
                "timeout",
                "type",
                "urlPath"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "delay": {
                    "type": "integer"
                },
                "domainName": {
                    "type": "string"
                },
                "expectedCodes": {
                    "type": "string"
                },
                "httpMethod": {
                    "type": "string"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "timeout": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "delay",
                "maxRetries",
                "poolId",
                "timeout",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "deprecationMessage": "tenant_id is deprecated"
                    },
                    "delay": {
                        "type": "integer"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "expectedCodes": {
                        "type": "string"
                    },
                    "httpMethod": {
                        "type": "string"
                    },
                    "maxRetries": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "timeout": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "urlPath": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/pool:Pool": {
            "properties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "this field is deprecated"
                },
                "description": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/PoolPersistence:PoolPersistence"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                }
            },
            "required": [
                "lbMethod",
                "listenerId",
                "loadbalancerId",
                "monitorId",
                "name",
                "protectionStatus",
                "protocol",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "adminStateUp": {
                    "type": "boolean",
                    "deprecationMessage": "this field is deprecated"
                },
                "description": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "loadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "persistences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Elb/PoolPersistence:PoolPersistence"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "lbMethod",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pool resources.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "deprecationMessage": "this field is deprecated"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "monitorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "persistences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Elb/PoolPersistence:PoolPersistence"
                        }
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Elb/whitelist:Whitelist": {
            "properties": {
                "enableWhitelist": {
                    "type": "boolean"
                },
                "listenerId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated"
                },
                "whitelist": {
                    "type": "string"
                }
            },
            "required": [
                "listenerId",
                "region",
                "tenantId"
            ],
            "inputProperties": {
                "enableWhitelist": {
                    "type": "boolean"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tenantId": {
                    "type": "string",
                    "deprecationMessage": "tenant_id is deprecated",
                    "willReplaceOnChanges": true
                },
                "whitelist": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "listenerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Whitelist resources.\n",
                "properties": {
                    "enableWhitelist": {
                        "type": "boolean"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "tenant_id is deprecated",
                        "willReplaceOnChanges": true
                    },
                    "whitelist": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Eps/project:Project": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "skipDisableOnDestroy": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "status",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "skipDisableOnDestroy": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "skipDisableOnDestroy": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/association:Association": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment corresponding to the association."
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The type of the attachment corresponding to the association."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the route table and the attachment belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and route table are located."
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to which the association belongs."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the association."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time."
                }
            },
            "required": [
                "attachmentId",
                "attachmentType",
                "createdAt",
                "instanceId",
                "region",
                "routeTableId",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment corresponding to the association.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the route table and the attachment belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and route table are located.",
                    "willReplaceOnChanges": true
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to which the association belongs.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "attachmentId",
                "instanceId",
                "routeTableId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Association resources.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string",
                        "description": "The ID of the attachment corresponding to the association.",
                        "willReplaceOnChanges": true
                    },
                    "attachmentType": {
                        "type": "string",
                        "description": "The type of the attachment corresponding to the association."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the ER instance to which the route table and the attachment belongs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ER instance and route table are located.",
                        "willReplaceOnChanges": true
                    },
                    "routeTableId": {
                        "type": "string",
                        "description": "The ID of the route table to which the association belongs.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the association."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/attachmentAccepter:AttachmentAccepter": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action type."
                },
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment to be action."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "attachmentId",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action type."
                },
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment to be action."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "attachmentId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttachmentAccepter resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action type."
                    },
                    "attachmentId": {
                        "type": "string",
                        "description": "The ID of the attachment to be action."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the ER instance."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/flowLog:FlowLog": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "instanceId": {
                    "type": "string"
                },
                "logGroupId": {
                    "type": "string"
                },
                "logStoreType": {
                    "type": "string"
                },
                "logStreamId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "instanceId",
                "logGroupId",
                "logStoreType",
                "logStreamId",
                "name",
                "region",
                "resourceId",
                "resourceType",
                "state",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "logGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "logStoreType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "logStreamId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "resourceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "resourceType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "logGroupId",
                "logStoreType",
                "logStreamId",
                "resourceId",
                "resourceType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlowLog resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "logGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "logStoreType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "logStreamId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/instance:Instance": {
            "properties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP AS number of the Enterprise router."
                },
                "autoAcceptSharedAttachments": {
                    "type": "boolean",
                    "description": "Whether to automatically accept the creation of shared attachment."
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone list where the Enterprise router is located."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time."
                },
                "defaultAssociationRouteTableId": {
                    "type": "string",
                    "description": "The ID of the default association route table."
                },
                "defaultPropagationRouteTableId": {
                    "type": "string",
                    "description": "The ID of the default propagation route table."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Enterprise router."
                },
                "enableDefaultAssociation": {
                    "type": "boolean",
                    "description": "Whether to enable the association of the default route table."
                },
                "enableDefaultPropagation": {
                    "type": "boolean",
                    "description": "Whether to enable the propagation of the default route table."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the Enterprise router belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The router name."
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the router."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time."
                }
            },
            "required": [
                "asn",
                "availabilityZones",
                "createdAt",
                "defaultAssociationRouteTableId",
                "defaultPropagationRouteTableId",
                "enterpriseProjectId",
                "name",
                "region",
                "status",
                "tags",
                "updatedAt"
            ],
            "inputProperties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP AS number of the Enterprise router.",
                    "willReplaceOnChanges": true
                },
                "autoAcceptSharedAttachments": {
                    "type": "boolean",
                    "description": "Whether to automatically accept the creation of shared attachment."
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone list where the Enterprise router is located."
                },
                "defaultAssociationRouteTableId": {
                    "type": "string",
                    "description": "The ID of the default association route table."
                },
                "defaultPropagationRouteTableId": {
                    "type": "string",
                    "description": "The ID of the default propagation route table."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Enterprise router."
                },
                "enableDefaultAssociation": {
                    "type": "boolean",
                    "description": "Whether to enable the association of the default route table."
                },
                "enableDefaultPropagation": {
                    "type": "boolean",
                    "description": "Whether to enable the propagation of the default route table."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the Enterprise router belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The router name."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "asn",
                "availabilityZones"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "asn": {
                        "type": "integer",
                        "description": "The BGP AS number of the Enterprise router.",
                        "willReplaceOnChanges": true
                    },
                    "autoAcceptSharedAttachments": {
                        "type": "boolean",
                        "description": "Whether to automatically accept the creation of shared attachment."
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The availability zone list where the Enterprise router is located."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time."
                    },
                    "defaultAssociationRouteTableId": {
                        "type": "string",
                        "description": "The ID of the default association route table."
                    },
                    "defaultPropagationRouteTableId": {
                        "type": "string",
                        "description": "The ID of the default propagation route table."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Enterprise router."
                    },
                    "enableDefaultAssociation": {
                        "type": "boolean",
                        "description": "Whether to enable the association of the default route table."
                    },
                    "enableDefaultPropagation": {
                        "type": "boolean",
                        "description": "Whether to enable the propagation of the default route table."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the Enterprise router belongs."
                    },
                    "name": {
                        "type": "string",
                        "description": "The router name."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the router."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/propagation:Propagation": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment corresponding to the propagation."
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The type of the attachment corresponding to the propagation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the route table and the attachment belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and route table are located."
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to which the propagation belongs."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the propagation."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time."
                }
            },
            "required": [
                "attachmentId",
                "attachmentType",
                "createdAt",
                "instanceId",
                "region",
                "routeTableId",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the attachment corresponding to the propagation.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the route table and the attachment belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and route table are located.",
                    "willReplaceOnChanges": true
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to which the propagation belongs.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "attachmentId",
                "instanceId",
                "routeTableId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Propagation resources.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string",
                        "description": "The ID of the attachment corresponding to the propagation.",
                        "willReplaceOnChanges": true
                    },
                    "attachmentType": {
                        "type": "string",
                        "description": "The type of the attachment corresponding to the propagation."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the ER instance to which the route table and the attachment belongs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ER instance and route table are located.",
                        "willReplaceOnChanges": true
                    },
                    "routeTableId": {
                        "type": "string",
                        "description": "The ID of the route table to which the propagation belongs.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the propagation."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/routeTable:RouteTable": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the ER route table."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the route table belongs."
                },
                "isDefaultAssociation": {
                    "type": "boolean",
                    "description": "Whether this route table is the default association route table."
                },
                "isDefaultPropagation": {
                    "type": "boolean",
                    "description": "Whether this route table is the default propagation route table."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the route table."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and route table are located."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the route table."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time."
                }
            },
            "required": [
                "createdAt",
                "instanceId",
                "isDefaultAssociation",
                "isDefaultPropagation",
                "name",
                "region",
                "status",
                "tags",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the ER route table."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the route table belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the route table."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and route table are located.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteTable resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the ER route table."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the ER instance to which the route table belongs.",
                        "willReplaceOnChanges": true
                    },
                    "isDefaultAssociation": {
                        "type": "boolean",
                        "description": "Whether this route table is the default association route table."
                    },
                    "isDefaultPropagation": {
                        "type": "boolean",
                        "description": "Whether this route table is the default propagation route table."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the route table."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ER instance and route table are located.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the route table."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/staticRoute:StaticRoute": {
            "properties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the corresponding attachment."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the static route."
                },
                "destination": {
                    "type": "string",
                    "description": "The destination of the static route."
                },
                "isBlackhole": {
                    "type": "boolean",
                    "description": "Whether route is the black hole route."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the static route and related route table are located."
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to which the static route belongs."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the static route."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the static route."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the static route."
                }
            },
            "required": [
                "createdAt",
                "destination",
                "region",
                "routeTableId",
                "status",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "attachmentId": {
                    "type": "string",
                    "description": "The ID of the corresponding attachment."
                },
                "destination": {
                    "type": "string",
                    "description": "The destination of the static route.",
                    "willReplaceOnChanges": true
                },
                "isBlackhole": {
                    "type": "boolean",
                    "description": "Whether route is the black hole route."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the static route and related route table are located.",
                    "willReplaceOnChanges": true
                },
                "routeTableId": {
                    "type": "string",
                    "description": "The ID of the route table to which the static route belongs.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destination",
                "routeTableId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRoute resources.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string",
                        "description": "The ID of the corresponding attachment."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the static route."
                    },
                    "destination": {
                        "type": "string",
                        "description": "The destination of the static route.",
                        "willReplaceOnChanges": true
                    },
                    "isBlackhole": {
                        "type": "boolean",
                        "description": "Whether route is the black hole route."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the static route and related route table are located.",
                        "willReplaceOnChanges": true
                    },
                    "routeTableId": {
                        "type": "string",
                        "description": "The ID of the route table to which the static route belongs.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the static route."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the static route."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the static route."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Er/vpcAttachment:VpcAttachment": {
            "properties": {
                "autoCreateVpcRoutes": {
                    "type": "boolean",
                    "description": "Whether to automatically configure routes for the VPC which pointing to the ER instance."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the VPC attachment."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the VPC attachment belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC attachment."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and the VPC attachment are located."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the VPC attachment."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the VPC subnet to which the VPC attachment belongs."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPC attachment belongs."
                }
            },
            "required": [
                "autoCreateVpcRoutes",
                "createdAt",
                "instanceId",
                "name",
                "region",
                "status",
                "subnetId",
                "tags",
                "updatedAt",
                "vpcId"
            ],
            "inputProperties": {
                "autoCreateVpcRoutes": {
                    "type": "boolean",
                    "description": "Whether to automatically configure routes for the VPC which pointing to the ER instance.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the VPC attachment."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the ER instance to which the VPC attachment belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC attachment."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ER instance and the VPC attachment are located.",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The ID of the VPC subnet to which the VPC attachment belongs.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPC attachment belongs.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcAttachment resources.\n",
                "properties": {
                    "autoCreateVpcRoutes": {
                        "type": "boolean",
                        "description": "Whether to automatically configure routes for the VPC which pointing to the ER instance.",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the VPC attachment."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the ER instance to which the VPC attachment belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the VPC attachment."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ER instance and the VPC attachment are located.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the VPC attachment."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The ID of the VPC subnet to which the VPC attachment belongs.",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time."
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the VPC attachment belongs.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Evs/snapshot:Snapshot": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metadataOrigin": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\n the new value next time the change is made. The corresponding parameter name is 'metadata'."
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "metadata",
                "metadataOrigin",
                "name",
                "region",
                "size",
                "status",
                "updatedAt",
                "volumeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "metadataOrigin": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\n the new value next time the change is made. The corresponding parameter name is 'metadata'."
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Snapshot resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "metadataOrigin": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The script configuration value of this change is also the original value used for comparison with\n the new value next time the change is made. The corresponding parameter name is 'metadata'."
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Evs/volume:Volume": {
            "properties": {
                "allMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "allVolumeImageMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/VolumeAttachment:VolumeAttachment"
                    }
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "bootable": {
                    "type": "string"
                },
                "cascade": {
                    "type": "boolean"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dedicatedStorageId": {
                    "type": "string"
                },
                "dedicatedStorageName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "imageId": {
                    "type": "string"
                },
                "iops": {
                    "type": "integer"
                },
                "iopsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/VolumeIopsAttribute:VolumeIopsAttribute"
                    }
                },
                "kmsId": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/VolumeLink:VolumeLink"
                    }
                },
                "multiattach": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "serverId": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "throughput": {
                    "type": "integer"
                },
                "throughputAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Evs/VolumeThroughputAttribute:VolumeThroughputAttribute"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "volumeType": {
                    "type": "string"
                },
                "wwn": {
                    "type": "string"
                }
            },
            "required": [
                "allMetadata",
                "allVolumeImageMetadata",
                "attachments",
                "availabilityZone",
                "bootable",
                "chargingMode",
                "createdAt",
                "dedicatedStorageName",
                "enterpriseProjectId",
                "iops",
                "iopsAttributes",
                "links",
                "name",
                "region",
                "serialNumber",
                "serviceType",
                "size",
                "status",
                "tags",
                "throughput",
                "throughputAttributes",
                "updatedAt",
                "volumeType",
                "wwn"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cascade": {
                    "type": "boolean"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedStorageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "iops": {
                    "type": "integer"
                },
                "kmsId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "multiattach": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                },
                "snapshotId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "throughput": {
                    "type": "integer"
                },
                "volumeType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "volumeType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Volume resources.\n",
                "properties": {
                    "allMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "allVolumeImageMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Evs/VolumeAttachment:VolumeAttachment"
                        }
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bootable": {
                        "type": "string"
                    },
                    "cascade": {
                        "type": "boolean"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dedicatedStorageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedStorageName": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "iops": {
                        "type": "integer"
                    },
                    "iopsAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Evs/VolumeIopsAttribute:VolumeIopsAttribute"
                        }
                    },
                    "kmsId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Evs/VolumeLink:VolumeLink"
                        }
                    },
                    "multiattach": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "snapshotId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "throughput": {
                        "type": "integer"
                    },
                    "throughputAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Evs/VolumeThroughputAttribute:VolumeThroughputAttribute"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "volumeType": {
                        "type": "string"
                    },
                    "wwn": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:FunctionGraph/dependency:Dependency": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the dependency package."
                },
                "etag": {
                    "type": "string",
                    "description": "The etag of the dependency package."
                },
                "link": {
                    "type": "string",
                    "description": "The OBS storage URL of the dependency package."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dependency package."
                },
                "owner": {
                    "type": "string",
                    "description": "The owner name of the dependency package."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dependency package is located."
                },
                "runtime": {
                    "type": "string",
                    "description": "The runtime of the dependency package."
                },
                "size": {
                    "type": "integer",
                    "description": "The capacity of the dependency package."
                },
                "version": {
                    "type": "integer",
                    "description": "The version of the dependency package."
                }
            },
            "required": [
                "description",
                "etag",
                "link",
                "name",
                "owner",
                "region",
                "runtime",
                "size",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the dependency package."
                },
                "link": {
                    "type": "string",
                    "description": "The OBS storage URL of the dependency package."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the dependency package."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dependency package is located.",
                    "willReplaceOnChanges": true
                },
                "runtime": {
                    "type": "string",
                    "description": "The runtime of the dependency package."
                }
            },
            "requiredInputs": [
                "link",
                "runtime"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dependency resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the dependency package."
                    },
                    "etag": {
                        "type": "string",
                        "description": "The etag of the dependency package."
                    },
                    "link": {
                        "type": "string",
                        "description": "The OBS storage URL of the dependency package."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the dependency package."
                    },
                    "owner": {
                        "type": "string",
                        "description": "The owner name of the dependency package."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dependency package is located.",
                        "willReplaceOnChanges": true
                    },
                    "runtime": {
                        "type": "string",
                        "description": "The runtime of the dependency package."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The capacity of the dependency package."
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version of the dependency package."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:FunctionGraph/function:Function": {
            "properties": {
                "agency": {
                    "type": "string",
                    "description": "The agency configuration of the function."
                },
                "app": {
                    "type": "string",
                    "description": "The group to which the function belongs."
                },
                "appAgency": {
                    "type": "string",
                    "description": "The execution agency enables you to obtain a token or an AK/SK for accessing other cloud services."
                },
                "codeEncryptKmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID for encrypting the function code."
                },
                "codeFilename": {
                    "type": "string",
                    "description": "The name of the function file."
                },
                "codeType": {
                    "type": "string",
                    "description": "The code type of the function."
                },
                "codeUrl": {
                    "type": "string",
                    "description": "The URL where the function code is stored in OBS."
                },
                "concurrencyNum": {
                    "type": "integer",
                    "description": "The number of concurrent requests of the function."
                },
                "customImage": {
                    "$ref": "#/types/cloudru:FunctionGraph/FunctionCustomImage:FunctionCustomImage",
                    "description": "The custom image configuration of the function."
                },
                "dependLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of the dependencies."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function."
                },
                "dnsList": {
                    "type": "string",
                    "description": "The private DNS configuration of the function network."
                },
                "enableAuthInHeader": {
                    "type": "boolean",
                    "description": "Whether the authentication in the request header is enabled."
                },
                "enableClassIsolation": {
                    "type": "boolean",
                    "description": "Whether the class isolation is enabled for the JAVA runtime functions."
                },
                "enableDynamicMemory": {
                    "type": "boolean",
                    "description": "Whether the dynamic memory configuration is enabled."
                },
                "enableLtsLog": {
                    "type": "boolean",
                    "description": "Whether to enable the LTS log."
                },
                "encryptedUserData": {
                    "type": "string",
                    "description": "The key/value information defined to be encrypted for the function.",
                    "secret": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The ID of the enterprise project to which the function belongs."
                },
                "ephemeralStorage": {
                    "type": "integer",
                    "description": "The size of the function ephemeral storage."
                },
                "funcCode": {
                    "type": "string",
                    "description": "The function code."
                },
                "funcMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionFuncMount:FunctionFuncMount"
                    },
                    "description": "The list of function mount configuration."
                },
                "functiongraphVersion": {
                    "type": "string",
                    "description": "The description of the function."
                },
                "gpuMemory": {
                    "type": "integer",
                    "description": "The GPU memory size allocated to the function, in MByte (MB)."
                },
                "gpuType": {
                    "type": "string",
                    "description": "The GPU type of the function."
                },
                "handler": {
                    "type": "string",
                    "description": "The entry point of the function."
                },
                "heartbeatHandler": {
                    "type": "string",
                    "description": "The heartbeat handler of the function."
                },
                "initializerHandler": {
                    "type": "string",
                    "description": "The initializer of the function."
                },
                "initializerTimeout": {
                    "type": "integer",
                    "description": "The maximum duration the function can be initialized."
                },
                "isStatefulFunction": {
                    "type": "boolean",
                    "description": "Whether the function is a stateful function."
                },
                "logGroupId": {
                    "type": "string",
                    "description": "The LTS group ID for collecting logs."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The LTS group name for collecting logs."
                },
                "logStreamId": {
                    "type": "string",
                    "description": "The LTS stream ID for collecting logs."
                },
                "logStreamName": {
                    "type": "string",
                    "description": "The LTS stream name for collecting logs."
                },
                "ltsCustomTag": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The custom tags configuration that used to filter the LTS logs."
                },
                "ltsCustomTagOrigin": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\n the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'."
                },
                "maxInstanceNum": {
                    "type": "string",
                    "description": "The maximum number of instances of the function."
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The memory size allocated to the function, in MByte (MB)."
                },
                "mountUserGroupId": {
                    "type": "integer",
                    "description": "The mount user group ID."
                },
                "mountUserId": {
                    "type": "integer",
                    "description": "The mount user ID."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the function."
                },
                "networkController": {
                    "$ref": "#/types/cloudru:FunctionGraph/FunctionNetworkController:FunctionNetworkController",
                    "description": "The network configuration of the function."
                },
                "networkId": {
                    "type": "string",
                    "description": "The network ID of subnet."
                },
                "package": {
                    "type": "string",
                    "deprecationMessage": "use app instead"
                },
                "peeringCidr": {
                    "type": "string",
                    "description": "The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC\nCIDR blocks used by the service."
                },
                "preStopHandler": {
                    "type": "string",
                    "description": "The pre-stop handler of a function."
                },
                "preStopTimeout": {
                    "type": "integer",
                    "description": "The maximum duration that the function can be initialized."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function is located."
                },
                "reservedInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionReservedInstance:FunctionReservedInstance"
                    },
                    "description": "The reserved instance policies of the function."
                },
                "restoreHookHandler": {
                    "type": "string",
                    "description": "The restore hook handler of the function."
                },
                "restoreHookTimeout": {
                    "type": "integer",
                    "description": "The timeout of the function restore hook."
                },
                "runtime": {
                    "type": "string",
                    "description": "The environment for executing the function."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the function."
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout interval of the function, in seconds."
                },
                "urn": {
                    "type": "string",
                    "description": "The URN (Uniform Resource Name) of the function."
                },
                "userData": {
                    "type": "string",
                    "description": "The key/value information defined for the function."
                },
                "userDataEncryptKmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID for encrypting the user data."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the function."
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionVersion:FunctionVersion"
                    },
                    "description": "The versions management of the function."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the function belongs."
                },
                "xrole": {
                    "type": "string",
                    "deprecationMessage": "use agency instead"
                }
            },
            "required": [
                "appAgency",
                "codeFilename",
                "codeType",
                "concurrencyNum",
                "customImage",
                "dependLists",
                "dnsList",
                "enableAuthInHeader",
                "enableClassIsolation",
                "enableDynamicMemory",
                "enableLtsLog",
                "enterpriseProjectId",
                "ephemeralStorage",
                "funcMounts",
                "functiongraphVersion",
                "handler",
                "initializerHandler",
                "initializerTimeout",
                "isStatefulFunction",
                "logGroupId",
                "logGroupName",
                "logStreamId",
                "logStreamName",
                "ltsCustomTag",
                "ltsCustomTagOrigin",
                "maxInstanceNum",
                "memorySize",
                "mountUserGroupId",
                "mountUserId",
                "name",
                "region",
                "runtime",
                "tags",
                "timeout",
                "urn",
                "version"
            ],
            "inputProperties": {
                "agency": {
                    "type": "string",
                    "description": "The agency configuration of the function."
                },
                "app": {
                    "type": "string",
                    "description": "The group to which the function belongs."
                },
                "appAgency": {
                    "type": "string",
                    "description": "The execution agency enables you to obtain a token or an AK/SK for accessing other cloud services."
                },
                "codeEncryptKmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID for encrypting the function code.",
                    "willReplaceOnChanges": true
                },
                "codeFilename": {
                    "type": "string",
                    "description": "The name of the function file."
                },
                "codeType": {
                    "type": "string",
                    "description": "The code type of the function."
                },
                "codeUrl": {
                    "type": "string",
                    "description": "The URL where the function code is stored in OBS."
                },
                "concurrencyNum": {
                    "type": "integer",
                    "description": "The number of concurrent requests of the function."
                },
                "customImage": {
                    "$ref": "#/types/cloudru:FunctionGraph/FunctionCustomImage:FunctionCustomImage",
                    "description": "The custom image configuration of the function."
                },
                "dependLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID list of the dependencies."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the function."
                },
                "dnsList": {
                    "type": "string",
                    "description": "The private DNS configuration of the function network."
                },
                "enableAuthInHeader": {
                    "type": "boolean",
                    "description": "Whether the authentication in the request header is enabled."
                },
                "enableClassIsolation": {
                    "type": "boolean",
                    "description": "Whether the class isolation is enabled for the JAVA runtime functions."
                },
                "enableDynamicMemory": {
                    "type": "boolean",
                    "description": "Whether the dynamic memory configuration is enabled."
                },
                "enableLtsLog": {
                    "type": "boolean",
                    "description": "Whether to enable the LTS log."
                },
                "encryptedUserData": {
                    "type": "string",
                    "description": "The key/value information defined to be encrypted for the function.",
                    "secret": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The ID of the enterprise project to which the function belongs."
                },
                "ephemeralStorage": {
                    "type": "integer",
                    "description": "The size of the function ephemeral storage."
                },
                "funcCode": {
                    "type": "string",
                    "description": "The function code."
                },
                "funcMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionFuncMount:FunctionFuncMount"
                    },
                    "description": "The list of function mount configuration."
                },
                "functiongraphVersion": {
                    "type": "string",
                    "description": "The description of the function.",
                    "willReplaceOnChanges": true
                },
                "gpuMemory": {
                    "type": "integer",
                    "description": "The GPU memory size allocated to the function, in MByte (MB)."
                },
                "gpuType": {
                    "type": "string",
                    "description": "The GPU type of the function."
                },
                "handler": {
                    "type": "string",
                    "description": "The entry point of the function."
                },
                "heartbeatHandler": {
                    "type": "string",
                    "description": "The heartbeat handler of the function."
                },
                "initializerHandler": {
                    "type": "string",
                    "description": "The initializer of the function."
                },
                "initializerTimeout": {
                    "type": "integer",
                    "description": "The maximum duration the function can be initialized."
                },
                "isStatefulFunction": {
                    "type": "boolean",
                    "description": "Whether the function is a stateful function."
                },
                "logGroupId": {
                    "type": "string",
                    "description": "The LTS group ID for collecting logs."
                },
                "logGroupName": {
                    "type": "string",
                    "description": "The LTS group name for collecting logs."
                },
                "logStreamId": {
                    "type": "string",
                    "description": "The LTS stream ID for collecting logs."
                },
                "logStreamName": {
                    "type": "string",
                    "description": "The LTS stream name for collecting logs."
                },
                "ltsCustomTag": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The custom tags configuration that used to filter the LTS logs."
                },
                "ltsCustomTagOrigin": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\n the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'."
                },
                "maxInstanceNum": {
                    "type": "string",
                    "description": "The maximum number of instances of the function."
                },
                "memorySize": {
                    "type": "integer",
                    "description": "The memory size allocated to the function, in MByte (MB)."
                },
                "mountUserGroupId": {
                    "type": "integer",
                    "description": "The mount user group ID."
                },
                "mountUserId": {
                    "type": "integer",
                    "description": "The mount user ID."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the function.",
                    "willReplaceOnChanges": true
                },
                "networkController": {
                    "$ref": "#/types/cloudru:FunctionGraph/FunctionNetworkController:FunctionNetworkController",
                    "description": "The network configuration of the function."
                },
                "networkId": {
                    "type": "string",
                    "description": "The network ID of subnet."
                },
                "package": {
                    "type": "string",
                    "deprecationMessage": "use app instead"
                },
                "peeringCidr": {
                    "type": "string",
                    "description": "The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC\nCIDR blocks used by the service."
                },
                "preStopHandler": {
                    "type": "string",
                    "description": "The pre-stop handler of a function."
                },
                "preStopTimeout": {
                    "type": "integer",
                    "description": "The maximum duration that the function can be initialized."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function is located.",
                    "willReplaceOnChanges": true
                },
                "reservedInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionReservedInstance:FunctionReservedInstance"
                    },
                    "description": "The reserved instance policies of the function."
                },
                "restoreHookHandler": {
                    "type": "string",
                    "description": "The restore hook handler of the function."
                },
                "restoreHookTimeout": {
                    "type": "integer",
                    "description": "The timeout of the function restore hook."
                },
                "runtime": {
                    "type": "string",
                    "description": "The environment for executing the function.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the function."
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout interval of the function, in seconds."
                },
                "userData": {
                    "type": "string",
                    "description": "The key/value information defined for the function."
                },
                "userDataEncryptKmsKeyId": {
                    "type": "string",
                    "description": "The KMS key ID for encrypting the user data."
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionVersion:FunctionVersion"
                    },
                    "description": "The versions management of the function."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the function belongs."
                },
                "xrole": {
                    "type": "string",
                    "deprecationMessage": "use agency instead"
                }
            },
            "requiredInputs": [
                "memorySize",
                "runtime",
                "timeout"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Function resources.\n",
                "properties": {
                    "agency": {
                        "type": "string",
                        "description": "The agency configuration of the function."
                    },
                    "app": {
                        "type": "string",
                        "description": "The group to which the function belongs."
                    },
                    "appAgency": {
                        "type": "string",
                        "description": "The execution agency enables you to obtain a token or an AK/SK for accessing other cloud services."
                    },
                    "codeEncryptKmsKeyId": {
                        "type": "string",
                        "description": "The KMS key ID for encrypting the function code.",
                        "willReplaceOnChanges": true
                    },
                    "codeFilename": {
                        "type": "string",
                        "description": "The name of the function file."
                    },
                    "codeType": {
                        "type": "string",
                        "description": "The code type of the function."
                    },
                    "codeUrl": {
                        "type": "string",
                        "description": "The URL where the function code is stored in OBS."
                    },
                    "concurrencyNum": {
                        "type": "integer",
                        "description": "The number of concurrent requests of the function."
                    },
                    "customImage": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionCustomImage:FunctionCustomImage",
                        "description": "The custom image configuration of the function."
                    },
                    "dependLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID list of the dependencies."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the function."
                    },
                    "dnsList": {
                        "type": "string",
                        "description": "The private DNS configuration of the function network."
                    },
                    "enableAuthInHeader": {
                        "type": "boolean",
                        "description": "Whether the authentication in the request header is enabled."
                    },
                    "enableClassIsolation": {
                        "type": "boolean",
                        "description": "Whether the class isolation is enabled for the JAVA runtime functions."
                    },
                    "enableDynamicMemory": {
                        "type": "boolean",
                        "description": "Whether the dynamic memory configuration is enabled."
                    },
                    "enableLtsLog": {
                        "type": "boolean",
                        "description": "Whether to enable the LTS log."
                    },
                    "encryptedUserData": {
                        "type": "string",
                        "description": "The key/value information defined to be encrypted for the function.",
                        "secret": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The ID of the enterprise project to which the function belongs."
                    },
                    "ephemeralStorage": {
                        "type": "integer",
                        "description": "The size of the function ephemeral storage."
                    },
                    "funcCode": {
                        "type": "string",
                        "description": "The function code."
                    },
                    "funcMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:FunctionGraph/FunctionFuncMount:FunctionFuncMount"
                        },
                        "description": "The list of function mount configuration."
                    },
                    "functiongraphVersion": {
                        "type": "string",
                        "description": "The description of the function.",
                        "willReplaceOnChanges": true
                    },
                    "gpuMemory": {
                        "type": "integer",
                        "description": "The GPU memory size allocated to the function, in MByte (MB)."
                    },
                    "gpuType": {
                        "type": "string",
                        "description": "The GPU type of the function."
                    },
                    "handler": {
                        "type": "string",
                        "description": "The entry point of the function."
                    },
                    "heartbeatHandler": {
                        "type": "string",
                        "description": "The heartbeat handler of the function."
                    },
                    "initializerHandler": {
                        "type": "string",
                        "description": "The initializer of the function."
                    },
                    "initializerTimeout": {
                        "type": "integer",
                        "description": "The maximum duration the function can be initialized."
                    },
                    "isStatefulFunction": {
                        "type": "boolean",
                        "description": "Whether the function is a stateful function."
                    },
                    "logGroupId": {
                        "type": "string",
                        "description": "The LTS group ID for collecting logs."
                    },
                    "logGroupName": {
                        "type": "string",
                        "description": "The LTS group name for collecting logs."
                    },
                    "logStreamId": {
                        "type": "string",
                        "description": "The LTS stream ID for collecting logs."
                    },
                    "logStreamName": {
                        "type": "string",
                        "description": "The LTS stream name for collecting logs."
                    },
                    "ltsCustomTag": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The custom tags configuration that used to filter the LTS logs."
                    },
                    "ltsCustomTagOrigin": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The script configuration value of this change is also the original value used for comparison with\n the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'."
                    },
                    "maxInstanceNum": {
                        "type": "string",
                        "description": "The maximum number of instances of the function."
                    },
                    "memorySize": {
                        "type": "integer",
                        "description": "The memory size allocated to the function, in MByte (MB)."
                    },
                    "mountUserGroupId": {
                        "type": "integer",
                        "description": "The mount user group ID."
                    },
                    "mountUserId": {
                        "type": "integer",
                        "description": "The mount user ID."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the function.",
                        "willReplaceOnChanges": true
                    },
                    "networkController": {
                        "$ref": "#/types/cloudru:FunctionGraph/FunctionNetworkController:FunctionNetworkController",
                        "description": "The network configuration of the function."
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The network ID of subnet."
                    },
                    "package": {
                        "type": "string",
                        "deprecationMessage": "use app instead"
                    },
                    "peeringCidr": {
                        "type": "string",
                        "description": "The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC\nCIDR blocks used by the service."
                    },
                    "preStopHandler": {
                        "type": "string",
                        "description": "The pre-stop handler of a function."
                    },
                    "preStopTimeout": {
                        "type": "integer",
                        "description": "The maximum duration that the function can be initialized."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the function is located.",
                        "willReplaceOnChanges": true
                    },
                    "reservedInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:FunctionGraph/FunctionReservedInstance:FunctionReservedInstance"
                        },
                        "description": "The reserved instance policies of the function."
                    },
                    "restoreHookHandler": {
                        "type": "string",
                        "description": "The restore hook handler of the function."
                    },
                    "restoreHookTimeout": {
                        "type": "integer",
                        "description": "The timeout of the function restore hook."
                    },
                    "runtime": {
                        "type": "string",
                        "description": "The environment for executing the function.",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the function."
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout interval of the function, in seconds."
                    },
                    "urn": {
                        "type": "string",
                        "description": "The URN (Uniform Resource Name) of the function."
                    },
                    "userData": {
                        "type": "string",
                        "description": "The key/value information defined for the function."
                    },
                    "userDataEncryptKmsKeyId": {
                        "type": "string",
                        "description": "The KMS key ID for encrypting the user data."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the function."
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:FunctionGraph/FunctionVersion:FunctionVersion"
                        },
                        "description": "The versions management of the function."
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the function belongs."
                    },
                    "xrole": {
                        "type": "string",
                        "deprecationMessage": "use agency instead"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/accessKey:AccessKey": {
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "encryptedSecret": {
                    "type": "string"
                },
                "keyFingerprint": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string"
                },
                "secret": {
                    "type": "string",
                    "secret": true
                },
                "secretFile": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            },
            "required": [
                "createTime",
                "encryptedSecret",
                "keyFingerprint",
                "secret",
                "status",
                "userId",
                "userName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "pgpKey": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secretFile": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessKey resources.\n",
                "properties": {
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptedSecret": {
                        "type": "string"
                    },
                    "keyFingerprint": {
                        "type": "string"
                    },
                    "pgpKey": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "secret": {
                        "type": "string",
                        "secret": true
                    },
                    "secretFile": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/acl:Acl": {
            "properties": {
                "ipCidrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/AclIpCidr:AclIpCidr"
                    }
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/AclIpRange:AclIpRange"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "inputProperties": {
                "ipCidrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/AclIpCidr:AclIpCidr"
                    }
                },
                "ipRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/AclIpRange:AclIpRange"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Acl resources.\n",
                "properties": {
                    "ipCidrs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Iam/AclIpCidr:AclIpCidr"
                        }
                    },
                    "ipRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Iam/AclIpRange:AclIpRange"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/agency:Agency": {
            "properties": {
                "allResourcesRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "delegatedDomainName": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "delegatedServiceName": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "description": {
                    "type": "string"
                },
                "domainRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "string"
                },
                "expireTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "projectRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/AgencyProjectRole:AgencyProjectRole"
                    }
                }
            },
            "required": [
                "createTime",
                "description",
                "expireTime",
                "name"
            ],
            "inputProperties": {
                "allResourcesRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delegatedDomainName": {
                    "type": "string",
                    "description": "schema: Required"
                },
                "delegatedServiceName": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "description": {
                    "type": "string"
                },
                "domainRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duration": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectRoles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/AgencyProjectRole:AgencyProjectRole"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Agency resources.\n",
                "properties": {
                    "allResourcesRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "delegatedDomainName": {
                        "type": "string",
                        "description": "schema: Required"
                    },
                    "delegatedServiceName": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "duration": {
                        "type": "string"
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Iam/AgencyProjectRole:AgencyProjectRole"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/group:Group": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/groupMembership:GroupMembership": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "group",
                "users"
            ],
            "inputProperties": {
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "group",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupMembership resources.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/groupRoleAssignment:GroupRoleAssignment": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "roleId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GroupRoleAssignment resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roleId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/project:Project": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "enabled",
                "name",
                "parentId",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/provider:Provider": {
            "properties": {
                "accessConfig": {
                    "$ref": "#/types/cloudru:Iam/ProviderAccessConfig:ProviderAccessConfig"
                },
                "conversionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionRule:ProviderConversionRule"
                    }
                },
                "description": {
                    "type": "string"
                },
                "loginLink": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "ssoType": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            },
            "required": [
                "conversionRules",
                "loginLink",
                "name",
                "protocol",
                "ssoType"
            ],
            "inputProperties": {
                "accessConfig": {
                    "$ref": "#/types/cloudru:Iam/ProviderAccessConfig:ProviderAccessConfig"
                },
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ssoType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Provider resources.\n",
                "properties": {
                    "accessConfig": {
                        "$ref": "#/types/cloudru:Iam/ProviderAccessConfig:ProviderAccessConfig"
                    },
                    "conversionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Iam/ProviderConversionRule:ProviderConversionRule"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "loginLink": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ssoType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/providerConversion:ProviderConversion": {
            "properties": {
                "conversionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionConversionRule:ProviderConversionConversionRule"
                    }
                },
                "providerId": {
                    "type": "string"
                }
            },
            "required": [
                "conversionRules",
                "providerId"
            ],
            "inputProperties": {
                "conversionRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Iam/ProviderConversionConversionRule:ProviderConversionConversionRule"
                    }
                },
                "providerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "conversionRules",
                "providerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProviderConversion resources.\n",
                "properties": {
                    "conversionRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Iam/ProviderConversionConversionRule:ProviderConversionConversionRule"
                        }
                    },
                    "providerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/role:Role": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "references": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "policy",
                "references",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "description",
                "policy",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "references": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/roleAssignment:RoleAssignment": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "roleId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RoleAssignment resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roleId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Iam/user:User": {
            "properties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "passwordStrength": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "required": [
                "accessType",
                "createTime",
                "externalIdentityType",
                "lastLogin",
                "name",
                "passwordStrength"
            ],
            "inputProperties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accessType": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "externalIdentityId": {
                        "type": "string"
                    },
                    "externalIdentityType": {
                        "type": "string"
                    },
                    "lastLogin": {
                        "type": "string"
                    },
                    "loginProtectVerificationMethod": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "passwordStrength": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pwdReset": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Ims/image:Image": {
            "properties": {
                "backupId": {
                    "type": "string"
                },
                "checksum": {
                    "type": "string"
                },
                "cmkId": {
                    "type": "string"
                },
                "dataOrigin": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diskFormat": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "imageSize": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "isConfig": {
                    "type": "boolean"
                },
                "maxRam": {
                    "type": "integer"
                },
                "minDisk": {
                    "type": "integer"
                },
                "minRam": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "vaultId": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "volumeId": {
                    "type": "string"
                }
            },
            "required": [
                "backupId",
                "checksum",
                "dataOrigin",
                "diskFormat",
                "enterpriseProjectId",
                "imageSize",
                "instanceId",
                "maxRam",
                "minRam",
                "name",
                "osVersion",
                "region",
                "status",
                "tags",
                "visibility",
                "volumeId"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cmkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "imageUrl": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isConfig": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "maxRam": {
                    "type": "integer"
                },
                "minDisk": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "minRam": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vaultId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volumeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Image resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "checksum": {
                        "type": "string"
                    },
                    "cmkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dataOrigin": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskFormat": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "imageSize": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "isConfig": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "maxRam": {
                        "type": "integer"
                    },
                    "minDisk": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "minRam": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vaultId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "visibility": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Lts/group:Group": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the log group belongs."
                },
                "groupName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "groupName",
                "region",
                "tags",
                "ttlInDays"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the log group belongs.",
                    "willReplaceOnChanges": true
                },
                "groupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "groupName",
                "ttlInDays"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the log group belongs.",
                        "willReplaceOnChanges": true
                    },
                    "groupName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ttlInDays": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Lts/stream:Stream": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "filterCount": {
                    "type": "integer"
                },
                "groupId": {
                    "type": "string"
                },
                "isFavorite": {
                    "type": "boolean",
                    "description": "Whether to favorite the log stream."
                },
                "region": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "filterCount",
                "groupId",
                "region",
                "streamName",
                "tags",
                "ttlInDays"
            ],
            "inputProperties": {
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isFavorite": {
                    "type": "boolean",
                    "description": "Whether to favorite the log stream."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "streamName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ttlInDays": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "groupId",
                "streamName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Stream resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "filterCount": {
                        "type": "integer"
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "isFavorite": {
                        "type": "boolean",
                        "description": "Whether to favorite the log stream."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "streamName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ttlInDays": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Mrs/cluster:cluster": {
            "properties": {
                "analysisCoreNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterAnalysisCoreNodes:clusterAnalysisCoreNodes"
                },
                "analysisTaskNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterAnalysisTaskNodes:clusterAnalysisTaskNodes"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "bootstrapScripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterBootstrapScript:clusterBootstrapScript"
                    }
                },
                "chargingMode": {
                    "type": "string"
                },
                "chargingStartTime": {
                    "type": "string"
                },
                "componentConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterComponentConfig:clusterComponentConfig"
                    }
                },
                "componentLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "customNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterCustomNode:clusterCustomNode"
                    }
                },
                "eipId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "externalDatasources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterExternalDatasource:clusterExternalDatasource"
                    }
                },
                "logCollection": {
                    "type": "boolean"
                },
                "managerAdminPass": {
                    "type": "string",
                    "secret": true
                },
                "masterNodeIp": {
                    "type": "string"
                },
                "masterNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterMasterNodes:clusterMasterNodes"
                },
                "name": {
                    "type": "string"
                },
                "nodeAdminPass": {
                    "type": "string",
                    "secret": true
                },
                "nodeKeyPair": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "safeMode": {
                    "type": "boolean"
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "smnNotify": {
                    "$ref": "#/types/cloudru:Mrs/clusterSmnNotify:clusterSmnNotify"
                },
                "status": {
                    "type": "string"
                },
                "streamingCoreNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterStreamingCoreNodes:clusterStreamingCoreNodes"
                },
                "streamingTaskNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterStreamingTaskNodes:clusterStreamingTaskNodes"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string"
                },
                "totalNodeNumber": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "chargingStartTime",
                "componentLists",
                "createTime",
                "eipId",
                "enterpriseProjectId",
                "managerAdminPass",
                "masterNodeIp",
                "masterNodes",
                "name",
                "privateIp",
                "publicIp",
                "region",
                "securityGroupIds",
                "status",
                "subnetId",
                "tags",
                "totalNodeNumber",
                "updateTime",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "analysisCoreNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterAnalysisCoreNodes:clusterAnalysisCoreNodes",
                    "willReplaceOnChanges": true
                },
                "analysisTaskNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterAnalysisTaskNodes:clusterAnalysisTaskNodes",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bootstrapScripts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterBootstrapScript:clusterBootstrapScript"
                    },
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "componentConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterComponentConfig:clusterComponentConfig"
                    },
                    "willReplaceOnChanges": true
                },
                "componentLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "customNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterCustomNode:clusterCustomNode"
                    },
                    "willReplaceOnChanges": true
                },
                "eipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "externalDatasources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Mrs/clusterExternalDatasource:clusterExternalDatasource"
                    },
                    "willReplaceOnChanges": true
                },
                "logCollection": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "managerAdminPass": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "masterNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterMasterNodes:clusterMasterNodes",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "nodeAdminPass": {
                    "type": "string",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "nodeKeyPair": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "safeMode": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "securityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "smnNotify": {
                    "$ref": "#/types/cloudru:Mrs/clusterSmnNotify:clusterSmnNotify",
                    "willReplaceOnChanges": true
                },
                "streamingCoreNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterStreamingCoreNodes:clusterStreamingCoreNodes",
                    "willReplaceOnChanges": true
                },
                "streamingTaskNodes": {
                    "$ref": "#/types/cloudru:Mrs/clusterStreamingTaskNodes:clusterStreamingTaskNodes",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "templateId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "componentLists",
                "managerAdminPass",
                "masterNodes",
                "subnetId",
                "version",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering cluster resources.\n",
                "properties": {
                    "analysisCoreNodes": {
                        "$ref": "#/types/cloudru:Mrs/clusterAnalysisCoreNodes:clusterAnalysisCoreNodes",
                        "willReplaceOnChanges": true
                    },
                    "analysisTaskNodes": {
                        "$ref": "#/types/cloudru:Mrs/clusterAnalysisTaskNodes:clusterAnalysisTaskNodes",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bootstrapScripts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Mrs/clusterBootstrapScript:clusterBootstrapScript"
                        },
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingStartTime": {
                        "type": "string"
                    },
                    "componentConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Mrs/clusterComponentConfig:clusterComponentConfig"
                        },
                        "willReplaceOnChanges": true
                    },
                    "componentLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "customNodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Mrs/clusterCustomNode:clusterCustomNode"
                        },
                        "willReplaceOnChanges": true
                    },
                    "eipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "externalDatasources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Mrs/clusterExternalDatasource:clusterExternalDatasource"
                        },
                        "willReplaceOnChanges": true
                    },
                    "logCollection": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "managerAdminPass": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "masterNodeIp": {
                        "type": "string"
                    },
                    "masterNodes": {
                        "$ref": "#/types/cloudru:Mrs/clusterMasterNodes:clusterMasterNodes",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeAdminPass": {
                        "type": "string",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "nodeKeyPair": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "safeMode": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "smnNotify": {
                        "$ref": "#/types/cloudru:Mrs/clusterSmnNotify:clusterSmnNotify",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "streamingCoreNodes": {
                        "$ref": "#/types/cloudru:Mrs/clusterStreamingCoreNodes:clusterStreamingCoreNodes",
                        "willReplaceOnChanges": true
                    },
                    "streamingTaskNodes": {
                        "$ref": "#/types/cloudru:Mrs/clusterStreamingTaskNodes:clusterStreamingTaskNodes",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "templateId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "totalNodeNumber": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Mrs/job:Job": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "finishTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "string"
                },
                "programParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "programPath": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "sql": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "submitTime": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "finishTime",
                "name",
                "region",
                "startTime",
                "status",
                "submitTime",
                "type"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "programParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "programPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "sql": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Job resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "finishTime": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "programParameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "programPath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceParameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "sql": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "submitTime": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Nat/dnatRule:DnatRule": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the DNAT rule."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the DNAT rule."
                },
                "externalServicePort": {
                    "type": "integer",
                    "description": "The port range used by Floating IP provide services for external systems."
                },
                "externalServicePortRange": {
                    "type": "string",
                    "description": "The port range used by ECSs or BMSs to provide services for external systems."
                },
                "floatingIpAddress": {
                    "type": "string",
                    "description": "The floating IP address of the DNAT rule."
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The ID of the floating IP address."
                },
                "globalEipAddress": {
                    "type": "string",
                    "description": "The global EIP address connected by the DNAT rule."
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The ID of the global EIP connected by the DNAT rule."
                },
                "internalServicePort": {
                    "type": "integer",
                    "description": "The port used by Floating IP provide services for external systems."
                },
                "internalServicePortRange": {
                    "type": "string",
                    "description": "The port used by ECSs or BMSs to provide services for external systems."
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "The ID of the NAT gateway to which the DNAT rule belongs."
                },
                "portId": {
                    "type": "string",
                    "description": "The port ID of network."
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP address of a user."
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol type."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the DNAT rule is located."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the DNAT rule."
                }
            },
            "required": [
                "createdAt",
                "floatingIpAddress",
                "globalEipAddress",
                "natGatewayId",
                "portId",
                "privateIp",
                "protocol",
                "region",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the DNAT rule."
                },
                "externalServicePort": {
                    "type": "integer",
                    "description": "The port range used by Floating IP provide services for external systems."
                },
                "externalServicePortRange": {
                    "type": "string",
                    "description": "The port range used by ECSs or BMSs to provide services for external systems."
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The ID of the floating IP address."
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The ID of the global EIP connected by the DNAT rule."
                },
                "internalServicePort": {
                    "type": "integer",
                    "description": "The port used by Floating IP provide services for external systems."
                },
                "internalServicePortRange": {
                    "type": "string",
                    "description": "The port used by ECSs or BMSs to provide services for external systems."
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "The ID of the NAT gateway to which the DNAT rule belongs.",
                    "willReplaceOnChanges": true
                },
                "portId": {
                    "type": "string",
                    "description": "The port ID of network."
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP address of a user."
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol type."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the DNAT rule is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "natGatewayId",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnatRule resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the DNAT rule."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the DNAT rule."
                    },
                    "externalServicePort": {
                        "type": "integer",
                        "description": "The port range used by Floating IP provide services for external systems."
                    },
                    "externalServicePortRange": {
                        "type": "string",
                        "description": "The port range used by ECSs or BMSs to provide services for external systems."
                    },
                    "floatingIpAddress": {
                        "type": "string",
                        "description": "The floating IP address of the DNAT rule."
                    },
                    "floatingIpId": {
                        "type": "string",
                        "description": "The ID of the floating IP address."
                    },
                    "globalEipAddress": {
                        "type": "string",
                        "description": "The global EIP address connected by the DNAT rule."
                    },
                    "globalEipId": {
                        "type": "string",
                        "description": "The ID of the global EIP connected by the DNAT rule."
                    },
                    "internalServicePort": {
                        "type": "integer",
                        "description": "The port used by Floating IP provide services for external systems."
                    },
                    "internalServicePortRange": {
                        "type": "string",
                        "description": "The port used by ECSs or BMSs to provide services for external systems."
                    },
                    "natGatewayId": {
                        "type": "string",
                        "description": "The ID of the NAT gateway to which the DNAT rule belongs.",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string",
                        "description": "The port ID of network."
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "The private IP address of a user."
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol type."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the DNAT rule is located.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the DNAT rule."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Nat/gateway:Gateway": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "billingInfo": {
                    "type": "string",
                    "description": "The order information of the NAT gateway."
                },
                "bpsMax": {
                    "type": "integer",
                    "description": "The bandwidth that the NAT gateway can receive or send per second."
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the NAT gateway."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the NAT gateway."
                },
                "dnatRulesLimit": {
                    "type": "integer",
                    "description": "The maximum number of DNAT rules on the NAT gateway."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the NAT gateway."
                },
                "name": {
                    "type": "string",
                    "description": "The NAT gateway name."
                },
                "ngportIpAddress": {
                    "type": "string",
                    "description": "The IP address used for the NG port of the NAT gateway."
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "ppsMax": {
                    "type": "integer",
                    "description": "The number of packets that the NAT gateway can receive or send per second."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the NAT gateway is located."
                },
                "sessionConf": {
                    "$ref": "#/types/cloudru:Nat/GatewaySessionConf:GatewaySessionConf",
                    "description": "The session configuration of the NAT gateway."
                },
                "snatRulePublicIpLimit": {
                    "type": "integer",
                    "description": "The maximum number of SNAT rules on the NAT gateway."
                },
                "spec": {
                    "type": "string",
                    "description": "The specification of the NAT gateway."
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the NAT gateway."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network ID of the downstream interface (the next hop of the DVR) of the NAT gateway."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the NAT gateway belongs."
                }
            },
            "required": [
                "billingInfo",
                "bpsMax",
                "chargingMode",
                "createdAt",
                "dnatRulesLimit",
                "enterpriseProjectId",
                "name",
                "ngportIpAddress",
                "ppsMax",
                "region",
                "sessionConf",
                "snatRulePublicIpLimit",
                "spec",
                "status",
                "subnetId",
                "tags",
                "vpcId"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the NAT gateway."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID of the NAT gateway.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The NAT gateway name."
                },
                "ngportIpAddress": {
                    "type": "string",
                    "description": "The IP address used for the NG port of the NAT gateway.",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the NAT gateway is located.",
                    "willReplaceOnChanges": true
                },
                "sessionConf": {
                    "$ref": "#/types/cloudru:Nat/GatewaySessionConf:GatewaySessionConf",
                    "description": "The session configuration of the NAT gateway."
                },
                "spec": {
                    "type": "string",
                    "description": "The specification of the NAT gateway."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network ID of the downstream interface (the next hop of the DVR) of the NAT gateway.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the NAT gateway belongs.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "spec",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Gateway resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "billingInfo": {
                        "type": "string",
                        "description": "The order information of the NAT gateway."
                    },
                    "bpsMax": {
                        "type": "integer",
                        "description": "The bandwidth that the NAT gateway can receive or send per second."
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the NAT gateway."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the NAT gateway."
                    },
                    "dnatRulesLimit": {
                        "type": "integer",
                        "description": "The maximum number of DNAT rules on the NAT gateway."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID of the NAT gateway.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The NAT gateway name."
                    },
                    "ngportIpAddress": {
                        "type": "string",
                        "description": "The IP address used for the NG port of the NAT gateway.",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ppsMax": {
                        "type": "integer",
                        "description": "The number of packets that the NAT gateway can receive or send per second."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the NAT gateway is located.",
                        "willReplaceOnChanges": true
                    },
                    "sessionConf": {
                        "$ref": "#/types/cloudru:Nat/GatewaySessionConf:GatewaySessionConf",
                        "description": "The session configuration of the NAT gateway."
                    },
                    "snatRulePublicIpLimit": {
                        "type": "integer",
                        "description": "The maximum number of SNAT rules on the NAT gateway."
                    },
                    "spec": {
                        "type": "string",
                        "description": "The specification of the NAT gateway."
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the NAT gateway."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The network ID of the downstream interface (the next hop of the DVR) of the NAT gateway.",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the NAT gateway belongs.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Nat/snatRule:SnatRule": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "The CIDR block connected by SNAT rule (DC side)."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the SNAT rule."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the SNAT rule."
                },
                "floatingIpAddress": {
                    "type": "string",
                    "description": "The floating IP addresses (separated by commas) connected by SNAT rule."
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The IDs of floating IPs connected by SNAT rule."
                },
                "freezedIpAddress": {
                    "type": "string",
                    "description": "The frozen EIP associated with the SNAT rule."
                },
                "globalEipAddress": {
                    "type": "string",
                    "description": "The global EIP addresses (separated by commas) connected by SNAT rule."
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The IDs (separated by commas) of global EIPs connected by SNAT rule."
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "schema: Required; The ID of the gateway to which the SNAT rule belongs."
                },
                "networkId": {
                    "type": "string",
                    "deprecationMessage": "schema: Deprecated; Use 'subnet_id' instead."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the SNAT rule is located."
                },
                "sourceType": {
                    "type": "integer",
                    "description": "The resource type of the SNAT rule."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the SNAT rule."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network IDs of subnet connected by SNAT rule (VPC side)."
                }
            },
            "required": [
                "createdAt",
                "floatingIpAddress",
                "floatingIpId",
                "freezedIpAddress",
                "globalEipAddress",
                "globalEipId",
                "natGatewayId",
                "region",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "cidr": {
                    "type": "string",
                    "description": "The CIDR block connected by SNAT rule (DC side).",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the SNAT rule."
                },
                "floatingIpId": {
                    "type": "string",
                    "description": "The IDs of floating IPs connected by SNAT rule."
                },
                "globalEipId": {
                    "type": "string",
                    "description": "The IDs (separated by commas) of global EIPs connected by SNAT rule."
                },
                "natGatewayId": {
                    "type": "string",
                    "description": "schema: Required; The ID of the gateway to which the SNAT rule belongs.",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "deprecationMessage": "schema: Deprecated; Use 'subnet_id' instead.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the SNAT rule is located.",
                    "willReplaceOnChanges": true
                },
                "sourceType": {
                    "type": "integer",
                    "description": "The resource type of the SNAT rule.",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The network IDs of subnet connected by SNAT rule (VPC side).",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "natGatewayId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnatRule resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "The CIDR block connected by SNAT rule (DC side).",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the SNAT rule."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the SNAT rule."
                    },
                    "floatingIpAddress": {
                        "type": "string",
                        "description": "The floating IP addresses (separated by commas) connected by SNAT rule."
                    },
                    "floatingIpId": {
                        "type": "string",
                        "description": "The IDs of floating IPs connected by SNAT rule."
                    },
                    "freezedIpAddress": {
                        "type": "string",
                        "description": "The frozen EIP associated with the SNAT rule."
                    },
                    "globalEipAddress": {
                        "type": "string",
                        "description": "The global EIP addresses (separated by commas) connected by SNAT rule."
                    },
                    "globalEipId": {
                        "type": "string",
                        "description": "The IDs (separated by commas) of global EIPs connected by SNAT rule."
                    },
                    "natGatewayId": {
                        "type": "string",
                        "description": "schema: Required; The ID of the gateway to which the SNAT rule belongs.",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "deprecationMessage": "schema: Deprecated; Use 'subnet_id' instead.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the SNAT rule is located.",
                        "willReplaceOnChanges": true
                    },
                    "sourceType": {
                        "type": "integer",
                        "description": "The resource type of the SNAT rule.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the SNAT rule."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The network IDs of subnet connected by SNAT rule (VPC side).",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:NetworkAcl/acl:Acl": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "inboundPolicyId": {
                    "type": "string"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outboundPolicyId": {
                    "type": "string"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "inboundPolicyId",
                "name",
                "outboundPolicyId",
                "ports",
                "region",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Acl resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "inboundPolicyId": {
                        "type": "string"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "outboundPolicyId": {
                        "type": "string"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:NetworkAcl/aclRule:AclRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationIpAddress": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sourceIpAddress": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "name",
                "protocol",
                "region"
            ],
            "inputProperties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destinationIpAddress": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceIpAddress": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "action",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AclRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "destinationIpAddress": {
                        "type": "string"
                    },
                    "destinationPort": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceIpAddress": {
                        "type": "string"
                    },
                    "sourcePort": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Obs/bucket:Bucket": {
            "properties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "bucketDomainName": {
                    "type": "string"
                },
                "bucketVersion": {
                    "type": "string"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketCorsRule:BucketCorsRule"
                    }
                },
                "encryption": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyProjectId": {
                    "type": "string"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRule:BucketLifecycleRule"
                    }
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLogging:BucketLogging"
                    }
                },
                "multiAz": {
                    "type": "boolean"
                },
                "parallelFs": {
                    "type": "boolean"
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "quota": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "sseAlgorithm": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "storageInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketStorageInfo:BucketStorageInfo"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userDomainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "versioning": {
                    "type": "boolean"
                },
                "website": {
                    "$ref": "#/types/cloudru:Obs/BucketWebsite:BucketWebsite"
                }
            },
            "required": [
                "bucket",
                "bucketDomainName",
                "bucketVersion",
                "enterpriseProjectId",
                "kmsKeyProjectId",
                "multiAz",
                "policy",
                "region",
                "sseAlgorithm",
                "storageInfos",
                "tags",
                "userDomainNames"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketCorsRule:BucketCorsRule"
                    }
                },
                "encryption": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "kmsKeyProjectId": {
                    "type": "string"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLifecycleRule:BucketLifecycleRule"
                    }
                },
                "loggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Obs/BucketLogging:BucketLogging"
                    }
                },
                "multiAz": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "parallelFs": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "quota": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sseAlgorithm": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "userDomainNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "versioning": {
                    "type": "boolean"
                },
                "website": {
                    "$ref": "#/types/cloudru:Obs/BucketWebsite:BucketWebsite"
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bucket resources.\n",
                "properties": {
                    "acl": {
                        "type": "string"
                    },
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bucketDomainName": {
                        "type": "string"
                    },
                    "bucketVersion": {
                        "type": "string"
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Obs/BucketCorsRule:BucketCorsRule"
                        }
                    },
                    "encryption": {
                        "type": "boolean"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "kmsKeyProjectId": {
                        "type": "string"
                    },
                    "lifecycleRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Obs/BucketLifecycleRule:BucketLifecycleRule"
                        }
                    },
                    "loggings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Obs/BucketLogging:BucketLogging"
                        }
                    },
                    "multiAz": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "parallelFs": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "policy": {
                        "type": "string"
                    },
                    "policyFormat": {
                        "type": "string"
                    },
                    "quota": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sseAlgorithm": {
                        "type": "string"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "storageInfos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Obs/BucketStorageInfo:BucketStorageInfo"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "userDomainNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "versioning": {
                        "type": "boolean"
                    },
                    "website": {
                        "$ref": "#/types/cloudru:Obs/BucketWebsite:BucketWebsite"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Obs/bucketObject:BucketObject": {
            "properties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "encryption": {
                    "type": "boolean"
                },
                "etag": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                }
            },
            "required": [
                "bucket",
                "contentType",
                "etag",
                "key",
                "region",
                "size",
                "storageClass",
                "versionId"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "content": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "encryption": {
                    "type": "boolean"
                },
                "etag": {
                    "type": "string"
                },
                "key": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "kmsKeyId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "source": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "bucket",
                "key"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BucketObject resources.\n",
                "properties": {
                    "acl": {
                        "type": "string"
                    },
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "content": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "encryption": {
                        "type": "boolean"
                    },
                    "etag": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "kmsKeyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "source": {
                        "type": "string"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Obs/bucketPolicy:BucketPolicy": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "bucket",
                "policy",
                "region"
            ],
            "inputProperties": {
                "bucket": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "policy": {
                    "type": "string"
                },
                "policyFormat": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "bucket",
                "policy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BucketPolicy resources.\n",
                "properties": {
                    "bucket": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "policy": {
                        "type": "string"
                    },
                    "policyFormat": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/backup:Backup": {
            "properties": {
                "associatedWithDdm": {
                    "type": "boolean",
                    "description": "Whether a DDM instance has been associated."
                },
                "beginTime": {
                    "type": "string",
                    "description": "Backup start time in the \"yyyy-mm-ddThh:mm:ssZ\" format."
                },
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/BackupDatabase:BackupDatabase"
                    },
                    "description": "List of self-built Microsoft SQL Server databases that are partially backed up."
                },
                "description": {
                    "type": "string",
                    "description": "The description about the backup."
                },
                "endTime": {
                    "type": "string",
                    "description": "Backup end time in the \"yyyy-mm-ddThh:mm:ssZ\" format."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID."
                },
                "name": {
                    "type": "string",
                    "description": "Backup name."
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Backup size in KB."
                },
                "status": {
                    "type": "string",
                    "description": "Backup status."
                }
            },
            "required": [
                "associatedWithDdm",
                "beginTime",
                "databases",
                "description",
                "endTime",
                "instanceId",
                "name",
                "region",
                "size",
                "status"
            ],
            "inputProperties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/BackupDatabase:BackupDatabase"
                    },
                    "description": "List of self-built Microsoft SQL Server databases that are partially backed up.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description about the backup.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Backup name.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Backup resources.\n",
                "properties": {
                    "associatedWithDdm": {
                        "type": "boolean",
                        "description": "Whether a DDM instance has been associated."
                    },
                    "beginTime": {
                        "type": "string",
                        "description": "Backup start time in the \"yyyy-mm-ddThh:mm:ssZ\" format."
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/BackupDatabase:BackupDatabase"
                        },
                        "description": "List of self-built Microsoft SQL Server databases that are partially backed up.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description about the backup.",
                        "willReplaceOnChanges": true
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Backup end time in the \"yyyy-mm-ddThh:mm:ssZ\" format."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance ID.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Backup name.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Backup size in KB."
                    },
                    "status": {
                        "type": "string",
                        "description": "Backup status."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/instance:Instance": {
            "properties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backupStrategy": {
                    "$ref": "#/types/cloudru:Rds/InstanceBackupStrategy:InstanceBackupStrategy"
                },
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string"
                },
                "collation": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/types/cloudru:Rds/InstanceDb:InstanceDb"
                },
                "description": {
                    "type": "string"
                },
                "dssPoolId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "haReplicationMode": {
                    "type": "string"
                },
                "lowerCaseTableNames": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "msdtcHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/InstanceMsdtcHost:InstanceMsdtcHost"
                    }
                },
                "name": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/InstanceNode:InstanceNode"
                    }
                },
                "paramGroupId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/InstanceParameter:InstanceParameter"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "powerAction": {
                    "type": "string"
                },
                "privateDnsNamePrefix": {
                    "type": "string"
                },
                "privateDnsNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readWritePermissions": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "restore": {
                    "$ref": "#/types/cloudru:Rds/InstanceRestore:InstanceRestore"
                },
                "rotateDay": {
                    "type": "integer"
                },
                "secondsLevelMonitoringEnabled": {
                    "type": "boolean"
                },
                "secondsLevelMonitoringInterval": {
                    "type": "integer"
                },
                "secretId": {
                    "type": "string"
                },
                "secretName": {
                    "type": "string"
                },
                "secretVersion": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "slowLogShowOriginalStatus": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "switchStrategy": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tdeEnabled": {
                    "type": "boolean"
                },
                "timeZone": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/types/cloudru:Rds/InstanceVolume:InstanceVolume"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZones",
                "backupStrategy",
                "chargingMode",
                "collation",
                "created",
                "db",
                "enterpriseProjectId",
                "fixedIp",
                "flavor",
                "haReplicationMode",
                "maintainBegin",
                "maintainEnd",
                "msdtcHosts",
                "name",
                "nodes",
                "parameters",
                "powerAction",
                "privateDnsNamePrefix",
                "privateDnsNames",
                "privateIps",
                "publicIps",
                "region",
                "secondsLevelMonitoringEnabled",
                "secondsLevelMonitoringInterval",
                "securityGroupId",
                "sslEnable",
                "status",
                "subnetId",
                "switchStrategy",
                "tags",
                "tdeEnabled",
                "timeZone",
                "volume",
                "vpcId"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "backupStrategy": {
                    "$ref": "#/types/cloudru:Rds/InstanceBackupStrategy:InstanceBackupStrategy"
                },
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "collation": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/types/cloudru:Rds/InstanceDb:InstanceDb",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "dssPoolId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "haReplicationMode": {
                    "type": "string"
                },
                "lowerCaseTableNames": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "msdtcHosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/InstanceMsdtcHost:InstanceMsdtcHost"
                    }
                },
                "name": {
                    "type": "string"
                },
                "paramGroupId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/InstanceParameter:InstanceParameter"
                    }
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string"
                },
                "privateDnsNamePrefix": {
                    "type": "string"
                },
                "readWritePermissions": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "restore": {
                    "$ref": "#/types/cloudru:Rds/InstanceRestore:InstanceRestore",
                    "willReplaceOnChanges": true
                },
                "rotateDay": {
                    "type": "integer"
                },
                "secondsLevelMonitoringEnabled": {
                    "type": "boolean"
                },
                "secondsLevelMonitoringInterval": {
                    "type": "integer"
                },
                "secretId": {
                    "type": "string"
                },
                "secretName": {
                    "type": "string"
                },
                "secretVersion": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "slowLogShowOriginalStatus": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "switchStrategy": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tdeEnabled": {
                    "type": "boolean"
                },
                "timeZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "volume": {
                    "$ref": "#/types/cloudru:Rds/InstanceVolume:InstanceVolume"
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZones",
                "db",
                "flavor",
                "securityGroupId",
                "subnetId",
                "volume",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "backupStrategy": {
                        "$ref": "#/types/cloudru:Rds/InstanceBackupStrategy:InstanceBackupStrategy"
                    },
                    "binlogRetentionHours": {
                        "type": "integer"
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "collation": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string"
                    },
                    "db": {
                        "$ref": "#/types/cloudru:Rds/InstanceDb:InstanceDb",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "dssPoolId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "haReplicationMode": {
                        "type": "string"
                    },
                    "lowerCaseTableNames": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "msdtcHosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/InstanceMsdtcHost:InstanceMsdtcHost"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/InstanceNode:InstanceNode"
                        }
                    },
                    "paramGroupId": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/InstanceParameter:InstanceParameter"
                        }
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string"
                    },
                    "privateDnsNamePrefix": {
                        "type": "string"
                    },
                    "privateDnsNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "readWritePermissions": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restore": {
                        "$ref": "#/types/cloudru:Rds/InstanceRestore:InstanceRestore",
                        "willReplaceOnChanges": true
                    },
                    "rotateDay": {
                        "type": "integer"
                    },
                    "secondsLevelMonitoringEnabled": {
                        "type": "boolean"
                    },
                    "secondsLevelMonitoringInterval": {
                        "type": "integer"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "secretName": {
                        "type": "string"
                    },
                    "secretVersion": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "slowLogShowOriginalStatus": {
                        "type": "string"
                    },
                    "sslEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "switchStrategy": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tdeEnabled": {
                        "type": "boolean"
                    },
                    "timeZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "volume": {
                        "$ref": "#/types/cloudru:Rds/InstanceVolume:InstanceVolume"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/instanceEipAssociate:InstanceEipAssociate": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicIpId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "publicIp",
                "publicIpId",
                "region"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicIpId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "publicIp",
                "publicIpId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceEipAssociate resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "publicIpId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/mysqlAccount:MysqlAccount": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Specifies remarks of the DB account."
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the IP addresses that are allowed to access your DB instance."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account."
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.",
                    "secret": true
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "hosts",
                "instanceId",
                "name",
                "password",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies remarks of the DB account."
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the IP addresses that are allowed to access your DB instance.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlAccount resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Specifies remarks of the DB account."
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the IP addresses that are allowed to access your DB instance.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS Mysql instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the username of the DB account.",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password of the DB account.",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/mysqlBinlog:MysqlBinlog": {
            "properties": {
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "instanceId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "binlogRetentionHours",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "binlogRetentionHours": {
                    "type": "integer"
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "binlogRetentionHours",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlBinlog resources.\n",
                "properties": {
                    "binlogRetentionHours": {
                        "type": "integer"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/mysqlDatabase:MysqlDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the character set used by the database."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "characterSet",
                "instanceId",
                "name",
                "region"
            ],
            "inputProperties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the character set used by the database.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "characterSet",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlDatabase resources.\n",
                "properties": {
                    "characterSet": {
                        "type": "string",
                        "description": "Specifies the character set used by the database.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the database description."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS Mysql instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the database name.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/mysqlDatabasePrivilege:MysqlDatabasePrivilege": {
            "properties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance."
                },
                "region": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabasePrivilegeUser:MysqlDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database."
                }
            },
            "required": [
                "dbName",
                "instanceId",
                "region",
                "users"
            ],
            "inputProperties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS Mysql instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabasePrivilegeUser:MysqlDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database."
                }
            },
            "requiredInputs": [
                "dbName",
                "instanceId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlDatabasePrivilege resources.\n",
                "properties": {
                    "dbName": {
                        "type": "string",
                        "description": "Specifies the database name.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS Mysql instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/MysqlDatabasePrivilegeUser:MysqlDatabasePrivilegeUser"
                        },
                        "description": "Specifies the account that associated with the database."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/mysqlDatabaseTableRestore:MysqlDatabaseTableRestore": {
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreDatabase:MysqlDatabaseTableRestoreDatabase"
                    },
                    "description": "Specifies the databases that will be restored."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS MySQL instance."
                },
                "isFastRestore": {
                    "type": "boolean",
                    "description": "Specifies whether to use fast restoration."
                },
                "region": {
                    "type": "string"
                },
                "restoreTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreRestoreTable:MysqlDatabaseTableRestoreRestoreTable"
                    },
                    "description": "Specifies the tables that will be restored."
                },
                "restoreTime": {
                    "type": "integer",
                    "description": "Specifies the restoration time point."
                }
            },
            "required": [
                "instanceId",
                "region",
                "restoreTime"
            ],
            "inputProperties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreDatabase:MysqlDatabaseTableRestoreDatabase"
                    },
                    "description": "Specifies the databases that will be restored.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS MySQL instance.",
                    "willReplaceOnChanges": true
                },
                "isFastRestore": {
                    "type": "boolean",
                    "description": "Specifies whether to use fast restoration.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "restoreTables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreRestoreTable:MysqlDatabaseTableRestoreRestoreTable"
                    },
                    "description": "Specifies the tables that will be restored.",
                    "willReplaceOnChanges": true
                },
                "restoreTime": {
                    "type": "integer",
                    "description": "Specifies the restoration time point.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "restoreTime"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MysqlDatabaseTableRestore resources.\n",
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreDatabase:MysqlDatabaseTableRestoreDatabase"
                        },
                        "description": "Specifies the databases that will be restored.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of RDS MySQL instance.",
                        "willReplaceOnChanges": true
                    },
                    "isFastRestore": {
                        "type": "boolean",
                        "description": "Specifies whether to use fast restoration.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restoreTables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/MysqlDatabaseTableRestoreRestoreTable:MysqlDatabaseTableRestoreRestoreTable"
                        },
                        "description": "Specifies the tables that will be restored.",
                        "willReplaceOnChanges": true
                    },
                    "restoreTime": {
                        "type": "integer",
                        "description": "Specifies the restoration time point.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/parametergroup:Parametergroup": {
            "properties": {
                "configurationParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/ParametergroupConfigurationParameter:ParametergroupConfigurationParameter"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "datastore": {
                    "$ref": "#/types/cloudru:Rds/ParametergroupDatastore:ParametergroupDatastore"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "configurationParameters",
                "createdAt",
                "datastore",
                "name",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "datastore": {
                    "$ref": "#/types/cloudru:Rds/ParametergroupDatastore:ParametergroupDatastore",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "values": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "datastore"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Parametergroup resources.\n",
                "properties": {
                    "configurationParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/ParametergroupConfigurationParameter:ParametergroupConfigurationParameter"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "datastore": {
                        "$ref": "#/types/cloudru:Rds/ParametergroupDatastore:ParametergroupDatastore",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgAccount:PgAccount": {
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/PgAccountAttribute:PgAccountAttribute"
                    },
                    "description": "Indicates the permission attributes of the account."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the remarks of the DB account."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance."
                },
                "memberofs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account."
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.",
                    "secret": true
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "attributes",
                "instanceId",
                "name",
                "password",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the remarks of the DB account."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.",
                    "willReplaceOnChanges": true
                },
                "memberofs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "schema: Deprecated"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgAccount resources.\n",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/PgAccountAttribute:PgAccountAttribute"
                        },
                        "description": "Indicates the permission attributes of the account."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the remarks of the DB account."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.",
                        "willReplaceOnChanges": true
                    },
                    "memberofs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "schema: Deprecated"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the username of the DB account.",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password of the DB account.",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgAccountRoles:PgAccountRoles": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance."
                },
                "region": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of roles."
                },
                "user": {
                    "type": "string",
                    "description": "Specifies the username of the account."
                }
            },
            "required": [
                "instanceId",
                "region",
                "roles",
                "user"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of roles."
                },
                "user": {
                    "type": "string",
                    "description": "Specifies the username of the account.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "roles",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgAccountRoles resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of roles."
                    },
                    "user": {
                        "type": "string",
                        "description": "Specifies the username of the account.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgDatabase:PgDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the database character set."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance."
                },
                "isRevokePublicPrivilege": {
                    "type": "boolean",
                    "description": "Specifies whether to revoke the PUBLIC CREATE permission of the public schema."
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Specifies the database collocation."
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Specifies the database classification."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name."
                },
                "owner": {
                    "type": "string",
                    "description": "Specifies the database user."
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the database size, in bytes."
                },
                "template": {
                    "type": "string",
                    "description": "Specifies the name of the database template."
                }
            },
            "required": [
                "characterSet",
                "instanceId",
                "isRevokePublicPrivilege",
                "lcCollate",
                "lcCtype",
                "name",
                "owner",
                "region",
                "size",
                "template"
            ],
            "inputProperties": {
                "characterSet": {
                    "type": "string",
                    "description": "Specifies the database character set.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the database description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.",
                    "willReplaceOnChanges": true
                },
                "isRevokePublicPrivilege": {
                    "type": "boolean",
                    "description": "Specifies whether to revoke the PUBLIC CREATE permission of the public schema.",
                    "willReplaceOnChanges": true
                },
                "lcCollate": {
                    "type": "string",
                    "description": "Specifies the database collocation.",
                    "willReplaceOnChanges": true
                },
                "lcCtype": {
                    "type": "string",
                    "description": "Specifies the database classification.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.",
                    "willReplaceOnChanges": true
                },
                "owner": {
                    "type": "string",
                    "description": "Specifies the database user."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "type": "string",
                    "description": "Specifies the name of the database template.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgDatabase resources.\n",
                "properties": {
                    "characterSet": {
                        "type": "string",
                        "description": "Specifies the database character set.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the database description."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.",
                        "willReplaceOnChanges": true
                    },
                    "isRevokePublicPrivilege": {
                        "type": "boolean",
                        "description": "Specifies whether to revoke the PUBLIC CREATE permission of the public schema.",
                        "willReplaceOnChanges": true
                    },
                    "lcCollate": {
                        "type": "string",
                        "description": "Specifies the database collocation.",
                        "willReplaceOnChanges": true
                    },
                    "lcCtype": {
                        "type": "string",
                        "description": "Specifies the database classification.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the database name.",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string",
                        "description": "Specifies the database user."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Indicates the database size, in bytes."
                    },
                    "template": {
                        "type": "string",
                        "description": "Specifies the name of the database template.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgHba:PgHba": {
            "properties": {
                "hostBasedAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/PgHbaHostBasedAuthentication:PgHbaHostBasedAuthentication"
                    },
                    "description": "Specifies the list of host based authentications."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "hostBasedAuthentications",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "hostBasedAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/PgHbaHostBasedAuthentication:PgHbaHostBasedAuthentication"
                    },
                    "description": "Specifies the list of host based authentications."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostBasedAuthentications",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgHba resources.\n",
                "properties": {
                    "hostBasedAuthentications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/PgHbaHostBasedAuthentication:PgHbaHostBasedAuthentication"
                        },
                        "description": "Specifies the list of host based authentications."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgPlugin:PgPlugin": {
            "properties": {
                "databaseName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sharedPreloadLibraries": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "databaseName",
                "description",
                "instanceId",
                "name",
                "region",
                "sharedPreloadLibraries",
                "version"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgPlugin resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sharedPreloadLibraries": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgPluginParameter:PgPluginParameter": {
            "properties": {
                "defaultValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indicates the default values of the plugin parameter."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the plugin parameter."
                },
                "region": {
                    "type": "string"
                },
                "restartRequired": {
                    "type": "boolean",
                    "description": "Indicates whether a reboot is required."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of plugin parameter values."
                }
            },
            "required": [
                "defaultValues",
                "instanceId",
                "name",
                "region",
                "restartRequired",
                "values"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of RDS instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the plugin parameter.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of plugin parameter values."
                }
            },
            "requiredInputs": [
                "instanceId",
                "values"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgPluginParameter resources.\n",
                "properties": {
                    "defaultValues": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates the default values of the plugin parameter."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of RDS instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the plugin parameter.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restartRequired": {
                        "type": "boolean",
                        "description": "Indicates whether a reboot is required."
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of plugin parameter values."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgPluginUpdate:PgPluginUpdate": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Specifies the database name."
                },
                "extensionName": {
                    "type": "string",
                    "description": "Specifies the extension name."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "databaseName",
                "extensionName",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Specifies the database name.",
                    "willReplaceOnChanges": true
                },
                "extensionName": {
                    "type": "string",
                    "description": "Specifies the extension name.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "extensionName",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgPluginUpdate resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Specifies the database name.",
                        "willReplaceOnChanges": true
                    },
                    "extensionName": {
                        "type": "string",
                        "description": "Specifies the extension name.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/pgSqlLimit:PgSqlLimit": {
            "properties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the name of the database."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance."
                },
                "isEffective": {
                    "type": "boolean",
                    "description": "Indicates whether the SQL limit is effective."
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "Specifies the number of SQL statements executed simultaneously"
                },
                "maxWaiting": {
                    "type": "integer",
                    "description": "Specifies the max waiting time in seconds."
                },
                "queryId": {
                    "type": "string",
                    "description": "Specifies the query ID"
                },
                "queryString": {
                    "type": "string",
                    "description": "Specifies the text form of SQL statement."
                },
                "region": {
                    "type": "string"
                },
                "searchPath": {
                    "type": "string",
                    "description": "Specifies the query order for names that are not schema qualified."
                },
                "sqlLimitId": {
                    "type": "string",
                    "description": "Indicates the ID of SQL limit."
                },
                "switch": {
                    "type": "string",
                    "description": "Specifies the SQL limit switch."
                }
            },
            "required": [
                "dbName",
                "instanceId",
                "isEffective",
                "maxConcurrency",
                "maxWaiting",
                "region",
                "sqlLimitId",
                "switch"
            ],
            "inputProperties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the name of the database.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS PostgreSQL instance.",
                    "willReplaceOnChanges": true
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "Specifies the number of SQL statements executed simultaneously"
                },
                "maxWaiting": {
                    "type": "integer",
                    "description": "Specifies the max waiting time in seconds."
                },
                "queryId": {
                    "type": "string",
                    "description": "Specifies the query ID",
                    "willReplaceOnChanges": true
                },
                "queryString": {
                    "type": "string",
                    "description": "Specifies the text form of SQL statement.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "searchPath": {
                    "type": "string",
                    "description": "Specifies the query order for names that are not schema qualified.",
                    "willReplaceOnChanges": true
                },
                "switch": {
                    "type": "string",
                    "description": "Specifies the SQL limit switch."
                }
            },
            "requiredInputs": [
                "dbName",
                "instanceId",
                "maxConcurrency",
                "maxWaiting"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PgSqlLimit resources.\n",
                "properties": {
                    "dbName": {
                        "type": "string",
                        "description": "Specifies the name of the database.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS PostgreSQL instance.",
                        "willReplaceOnChanges": true
                    },
                    "isEffective": {
                        "type": "boolean",
                        "description": "Indicates whether the SQL limit is effective."
                    },
                    "maxConcurrency": {
                        "type": "integer",
                        "description": "Specifies the number of SQL statements executed simultaneously"
                    },
                    "maxWaiting": {
                        "type": "integer",
                        "description": "Specifies the max waiting time in seconds."
                    },
                    "queryId": {
                        "type": "string",
                        "description": "Specifies the query ID",
                        "willReplaceOnChanges": true
                    },
                    "queryString": {
                        "type": "string",
                        "description": "Specifies the text form of SQL statement.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "searchPath": {
                        "type": "string",
                        "description": "Specifies the query order for names that are not schema qualified.",
                        "willReplaceOnChanges": true
                    },
                    "sqlLimitId": {
                        "type": "string",
                        "description": "Indicates the ID of SQL limit."
                    },
                    "switch": {
                        "type": "string",
                        "description": "Specifies the SQL limit switch."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/readReplicaInstance:ReadReplicaInstance": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceDb:ReadReplicaInstanceDb"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceParameter:ReadReplicaInstanceParameter"
                    }
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "primaryInstanceId": {
                    "type": "string"
                },
                "privateIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceVolume:ReadReplicaInstanceVolume"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "db",
                "enterpriseProjectId",
                "fixedIp",
                "flavor",
                "maintainBegin",
                "maintainEnd",
                "name",
                "parameters",
                "primaryInstanceId",
                "privateIps",
                "publicIps",
                "region",
                "securityGroupId",
                "sslEnable",
                "status",
                "subnetId",
                "tags",
                "type",
                "volume",
                "vpcId"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "db": {
                    "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceDb:ReadReplicaInstanceDb",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedIp": {
                    "type": "string"
                },
                "flavor": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceParameter:ReadReplicaInstanceParameter"
                    }
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "primaryInstanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "sslEnable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "volume": {
                    "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceVolume:ReadReplicaInstanceVolume",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "flavor",
                "primaryInstanceId",
                "volume"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReadReplicaInstance resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "db": {
                        "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceDb:ReadReplicaInstanceDb",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceParameter:ReadReplicaInstanceParameter"
                        }
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "primaryInstanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "sslEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "volume": {
                        "$ref": "#/types/cloudru:Rds/ReadReplicaInstanceVolume:ReadReplicaInstanceVolume",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/sqlAudit:SqlAudit": {
            "properties": {
                "auditTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of audit types."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance."
                },
                "keepDays": {
                    "type": "integer",
                    "description": "Specifies the number of days for storing audit logs."
                },
                "region": {
                    "type": "string"
                },
                "reserveAuditlogs": {
                    "type": "boolean",
                    "description": "Specifies whether the historical audit logs will be reserved for some time when SQL\naudit is disabled."
                }
            },
            "required": [
                "auditTypes",
                "instanceId",
                "keepDays",
                "region"
            ],
            "inputProperties": {
                "auditTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of audit types."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS instance.",
                    "willReplaceOnChanges": true
                },
                "keepDays": {
                    "type": "integer",
                    "description": "Specifies the number of days for storing audit logs."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "reserveAuditlogs": {
                    "type": "boolean",
                    "description": "Specifies whether the historical audit logs will be reserved for some time when SQL\naudit is disabled."
                }
            },
            "requiredInputs": [
                "instanceId",
                "keepDays"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SqlAudit resources.\n",
                "properties": {
                    "auditTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of audit types."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS instance.",
                        "willReplaceOnChanges": true
                    },
                    "keepDays": {
                        "type": "integer",
                        "description": "Specifies the number of days for storing audit logs."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "reserveAuditlogs": {
                        "type": "boolean",
                        "description": "Specifies whether the historical audit logs will be reserved for some time when SQL\naudit is disabled."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/sqlserverAccount:SqlserverAccount": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account."
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.",
                    "secret": true
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates the DB user status."
                }
            },
            "required": [
                "instanceId",
                "name",
                "password",
                "region",
                "state"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the username of the DB account.",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password of the DB account.",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SqlserverAccount resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS SQLServer instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the username of the DB account.",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password of the DB account.",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the DB user status."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/sqlserverDatabase:SqlserverDatabase": {
            "properties": {
                "characterSet": {
                    "type": "string",
                    "description": "Indicates the character set used by the database."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name."
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates the database status."
                }
            },
            "required": [
                "characterSet",
                "instanceId",
                "name",
                "region",
                "state"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQLServer instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the database name.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SqlserverDatabase resources.\n",
                "properties": {
                    "characterSet": {
                        "type": "string",
                        "description": "Indicates the character set used by the database."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS SQLServer instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the database name.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the database status."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Rds/sqlserverDatabasePrivilege:SqlserverDatabasePrivilege": {
            "properties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQL Server instance."
                },
                "region": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/SqlserverDatabasePrivilegeUser:SqlserverDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database"
                }
            },
            "required": [
                "dbName",
                "instanceId",
                "region",
                "users"
            ],
            "inputProperties": {
                "dbName": {
                    "type": "string",
                    "description": "Specifies the database name.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RDS SQL Server instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Rds/SqlserverDatabasePrivilegeUser:SqlserverDatabasePrivilegeUser"
                    },
                    "description": "Specifies the account that associated with the database"
                }
            },
            "requiredInputs": [
                "dbName",
                "instanceId",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SqlserverDatabasePrivilege resources.\n",
                "properties": {
                    "dbName": {
                        "type": "string",
                        "description": "Specifies the database name.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RDS SQL Server instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Rds/SqlserverDatabasePrivilegeUser:SqlserverDatabasePrivilegeUser"
                        },
                        "description": "Specifies the account that associated with the database"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Sfs/accessRule:AccessRule": {
            "properties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sfsId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "accessTo",
                "region",
                "sfsId",
                "status"
            ],
            "inputProperties": {
                "accessLevel": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessTo": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sfsId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accessTo",
                "sfsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessRule resources.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessTo": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sfsId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Sfs/fileSystem:FileSystem": {
            "properties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessRuleStatus": {
                    "type": "string"
                },
                "accessRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Sfs/FileSystemAccessRule:FileSystemAccessRule"
                    }
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "exportLocation": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shareAccessId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "accessLevel",
                "accessRuleStatus",
                "accessRules",
                "accessType",
                "availabilityZone",
                "description",
                "enterpriseProjectId",
                "exportLocation",
                "name",
                "region",
                "shareAccessId",
                "size",
                "status",
                "tags"
            ],
            "inputProperties": {
                "accessLevel": {
                    "type": "string"
                },
                "accessTo": {
                    "type": "string"
                },
                "accessType": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "isPublic": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareProto": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FileSystem resources.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string"
                    },
                    "accessRuleStatus": {
                        "type": "string"
                    },
                    "accessRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Sfs/FileSystemAccessRule:FileSystemAccessRule"
                        }
                    },
                    "accessTo": {
                        "type": "string"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareAccessId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Sfs/turbo:Turbo": {
            "properties": {
                "autoCreateSecurityGroupRules": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string"
                },
                "availableCapacity": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "cryptKeyId": {
                    "type": "string"
                },
                "dedicatedFlavor": {
                    "type": "string"
                },
                "dedicatedStorageId": {
                    "type": "string"
                },
                "enhanced": {
                    "type": "boolean"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "exportLocation": {
                    "type": "string"
                },
                "hpcBandwidth": {
                    "type": "string"
                },
                "hpcCacheBandwidth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string"
                },
                "shareType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "availableCapacity",
                "backupId",
                "chargingMode",
                "enhanced",
                "enterpriseProjectId",
                "exportLocation",
                "hpcBandwidth",
                "hpcCacheBandwidth",
                "name",
                "region",
                "securityGroupId",
                "size",
                "status",
                "subnetId",
                "tags",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "autoCreateSecurityGroupRules": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cryptKeyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedFlavor": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "dedicatedStorageId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enhanced": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hpcBandwidth": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "hpcCacheBandwidth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "shareProto": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "securityGroupId",
                "size",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Turbo resources.\n",
                "properties": {
                    "autoCreateSecurityGroupRules": {
                        "type": "string"
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "availableCapacity": {
                        "type": "string"
                    },
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cryptKeyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedFlavor": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "dedicatedStorageId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enhanced": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "hpcBandwidth": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "hpcCacheBandwidth": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:SharedApig/api:Api": {
            "properties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used."
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiBackendParam:ApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters."
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters."
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body."
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported."
                },
                "description": {
                    "type": "string",
                    "description": "The API description."
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request."
                },
                "funcGraph": {
                    "$ref": "#/types/cloudru:SharedApig/ApiFuncGraph:ApiFuncGraph",
                    "description": "The FunctionGraph backend details."
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs."
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph."
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API."
                },
                "mock": {
                    "$ref": "#/types/cloudru:SharedApig/ApiMock:ApiMock",
                    "description": "The mock backend details."
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiMockPolicy:ApiMockPolicy"
                    },
                    "description": "The mock policy backends."
                },
                "name": {
                    "type": "string",
                    "description": "The API name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located."
                },
                "registeredAt": {
                    "type": "string",
                    "description": "The registered time of the API."
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiRequestParam:ApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters."
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address."
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request."
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used."
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request."
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled."
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration."
                },
                "type": {
                    "type": "string",
                    "description": "The API type."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the API."
                },
                "web": {
                    "$ref": "#/types/cloudru:SharedApig/ApiWeb:ApiWeb",
                    "description": "The web backend details."
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiWebPolicy:ApiWebPolicy"
                    },
                    "description": "The web policy backends."
                }
            },
            "required": [
                "contentType",
                "funcGraph",
                "groupId",
                "instanceId",
                "mock",
                "name",
                "region",
                "registeredAt",
                "requestMethod",
                "requestParams",
                "requestPath",
                "requestProtocol",
                "simpleAuthentication",
                "type",
                "updatedAt",
                "web"
            ],
            "inputProperties": {
                "authorizerId": {
                    "type": "string",
                    "description": "The ID of the authorizer to which the API request used."
                },
                "backendParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiBackendParam:ApiBackendParam"
                    },
                    "description": "The configurations of the backend parameters."
                },
                "bodyDescription": {
                    "type": "string",
                    "description": "The description of the API request body, which can be an example request body, media type or parameters."
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type of the request body."
                },
                "cors": {
                    "type": "boolean",
                    "description": "Whether CORS is supported."
                },
                "description": {
                    "type": "string",
                    "description": "The API description."
                },
                "failureResponse": {
                    "type": "string",
                    "description": "The example response for a failure request."
                },
                "funcGraph": {
                    "$ref": "#/types/cloudru:SharedApig/ApiFuncGraph:ApiFuncGraph",
                    "description": "The FunctionGraph backend details.",
                    "willReplaceOnChanges": true
                },
                "funcGraphPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy"
                    },
                    "description": "The policy backends of the FunctionGraph function."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group to which the API belongs.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the API belongs.",
                    "willReplaceOnChanges": true
                },
                "isSendFgBodyBase64": {
                    "type": "boolean",
                    "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph."
                },
                "matching": {
                    "type": "string",
                    "description": "The matching mode of the API."
                },
                "mock": {
                    "$ref": "#/types/cloudru:SharedApig/ApiMock:ApiMock",
                    "description": "The mock backend details.",
                    "willReplaceOnChanges": true
                },
                "mockPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiMockPolicy:ApiMockPolicy"
                    },
                    "description": "The mock policy backends."
                },
                "name": {
                    "type": "string",
                    "description": "The API name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the API is located.",
                    "willReplaceOnChanges": true
                },
                "requestMethod": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "requestParams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiRequestParam:ApiRequestParam"
                    },
                    "description": "The configurations of the front-end parameters."
                },
                "requestPath": {
                    "type": "string",
                    "description": "The request address."
                },
                "requestProtocol": {
                    "type": "string",
                    "description": "The request protocol of the API request."
                },
                "responseId": {
                    "type": "string",
                    "description": "The ID of the custom response that API used."
                },
                "securityAuthentication": {
                    "type": "string",
                    "description": "The security authentication mode of the API request."
                },
                "simpleAuthentication": {
                    "type": "boolean",
                    "description": "Whether the authentication of the application code is enabled."
                },
                "successResponse": {
                    "type": "string",
                    "description": "The example response for a successful request."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags configuration."
                },
                "type": {
                    "type": "string",
                    "description": "The API type."
                },
                "web": {
                    "$ref": "#/types/cloudru:SharedApig/ApiWeb:ApiWeb",
                    "description": "The web backend details.",
                    "willReplaceOnChanges": true
                },
                "webPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/ApiWebPolicy:ApiWebPolicy"
                    },
                    "description": "The web policy backends."
                }
            },
            "requiredInputs": [
                "groupId",
                "instanceId",
                "requestMethod",
                "requestPath",
                "requestProtocol",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Api resources.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string",
                        "description": "The ID of the authorizer to which the API request used."
                    },
                    "backendParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/ApiBackendParam:ApiBackendParam"
                        },
                        "description": "The configurations of the backend parameters."
                    },
                    "bodyDescription": {
                        "type": "string",
                        "description": "The description of the API request body, which can be an example request body, media type or parameters."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The content type of the request body."
                    },
                    "cors": {
                        "type": "boolean",
                        "description": "Whether CORS is supported."
                    },
                    "description": {
                        "type": "string",
                        "description": "The API description."
                    },
                    "failureResponse": {
                        "type": "string",
                        "description": "The example response for a failure request."
                    },
                    "funcGraph": {
                        "$ref": "#/types/cloudru:SharedApig/ApiFuncGraph:ApiFuncGraph",
                        "description": "The FunctionGraph backend details.",
                        "willReplaceOnChanges": true
                    },
                    "funcGraphPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/ApiFuncGraphPolicy:ApiFuncGraphPolicy"
                        },
                        "description": "The policy backends of the FunctionGraph function."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group to which the API belongs.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the instance to which the API belongs.",
                        "willReplaceOnChanges": true
                    },
                    "isSendFgBodyBase64": {
                        "type": "boolean",
                        "description": "Whether to perform Base64 encoding on the body for interaction with FunctionGraph."
                    },
                    "matching": {
                        "type": "string",
                        "description": "The matching mode of the API."
                    },
                    "mock": {
                        "$ref": "#/types/cloudru:SharedApig/ApiMock:ApiMock",
                        "description": "The mock backend details.",
                        "willReplaceOnChanges": true
                    },
                    "mockPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/ApiMockPolicy:ApiMockPolicy"
                        },
                        "description": "The mock policy backends."
                    },
                    "name": {
                        "type": "string",
                        "description": "The API name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the API is located.",
                        "willReplaceOnChanges": true
                    },
                    "registeredAt": {
                        "type": "string",
                        "description": "The registered time of the API."
                    },
                    "requestMethod": {
                        "type": "string",
                        "description": "The request method of the API."
                    },
                    "requestParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/ApiRequestParam:ApiRequestParam"
                        },
                        "description": "The configurations of the front-end parameters."
                    },
                    "requestPath": {
                        "type": "string",
                        "description": "The request address."
                    },
                    "requestProtocol": {
                        "type": "string",
                        "description": "The request protocol of the API request."
                    },
                    "responseId": {
                        "type": "string",
                        "description": "The ID of the custom response that API used."
                    },
                    "securityAuthentication": {
                        "type": "string",
                        "description": "The security authentication mode of the API request."
                    },
                    "simpleAuthentication": {
                        "type": "boolean",
                        "description": "Whether the authentication of the application code is enabled."
                    },
                    "successResponse": {
                        "type": "string",
                        "description": "The example response for a successful request."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags configuration."
                    },
                    "type": {
                        "type": "string",
                        "description": "The API type."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the API."
                    },
                    "web": {
                        "$ref": "#/types/cloudru:SharedApig/ApiWeb:ApiWeb",
                        "description": "The web backend details.",
                        "willReplaceOnChanges": true
                    },
                    "webPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/ApiWebPolicy:ApiWebPolicy"
                        },
                        "description": "The web policy backends."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:SharedApig/group:Group": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the group, in RFC3339 format."
                },
                "description": {
                    "type": "string",
                    "description": "The group description."
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group."
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/GroupEnvironment:GroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group."
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The group name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located."
                },
                "registrationTime": {
                    "type": "string",
                    "description": "The registration time."
                },
                "updateTime": {
                    "type": "string",
                    "description": "The latest update time of the group."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the group, in RFC3339 format."
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/GroupUrlDomain:GroupUrlDomain"
                    },
                    "description": "The associated domain information of the group."
                }
            },
            "required": [
                "createdAt",
                "domainAccessEnabled",
                "environments",
                "forceDestroy",
                "instanceId",
                "name",
                "region",
                "registrationTime",
                "updateTime",
                "updatedAt",
                "urlDomains"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The group description."
                },
                "domainAccessEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether to use the debugging domain name to access the APIs within the group."
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/GroupEnvironment:GroupEnvironment"
                    },
                    "description": "The array of one or more environments of the associated group."
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Whether to delete all sub-resources (for API) from this group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the group belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The group name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.",
                    "willReplaceOnChanges": true
                },
                "urlDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:SharedApig/GroupUrlDomain:GroupUrlDomain"
                    },
                    "description": "The associated domain information of the group."
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the group, in RFC3339 format."
                    },
                    "description": {
                        "type": "string",
                        "description": "The group description."
                    },
                    "domainAccessEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether to use the debugging domain name to access the APIs within the group."
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/GroupEnvironment:GroupEnvironment"
                        },
                        "description": "The array of one or more environments of the associated group."
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Whether to delete all sub-resources (for API) from this group."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the group belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.",
                        "willReplaceOnChanges": true
                    },
                    "registrationTime": {
                        "type": "string",
                        "description": "The registration time."
                    },
                    "updateTime": {
                        "type": "string",
                        "description": "The latest update time of the group."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the group, in RFC3339 format."
                    },
                    "urlDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:SharedApig/GroupUrlDomain:GroupUrlDomain"
                        },
                        "description": "The associated domain information of the group."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/addressGroup:AddressGroup": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "ipExtraSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/AddressGroupIpExtraSet:AddressGroupIpExtraSet"
                    }
                },
                "ipVersion": {
                    "type": "integer"
                },
                "maxCapacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "addresses",
                "enterpriseProjectId",
                "ipExtraSets",
                "maxCapacity",
                "name",
                "region"
            ],
            "inputProperties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "forceDestroy": {
                    "type": "boolean"
                },
                "ipExtraSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/AddressGroupIpExtraSet:AddressGroupIpExtraSet"
                    }
                },
                "ipVersion": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "maxCapacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AddressGroup resources.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "ipExtraSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/AddressGroupIpExtraSet:AddressGroupIpExtraSet"
                        }
                    },
                    "ipVersion": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "maxCapacity": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/bandwidth:Bandwidth": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "bandwidthType": {
                    "type": "string"
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "publicips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/BandwidthPublicip:BandwidthPublicip"
                    }
                },
                "region": {
                    "type": "string"
                },
                "shareType": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "bandwidthType",
                "chargeMode",
                "chargingMode",
                "createdAt",
                "enterpriseProjectId",
                "name",
                "publicBorderGroup",
                "publicips",
                "region",
                "shareType",
                "size",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "bandwidthType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Bandwidth resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "bandwidthType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/BandwidthPublicip:BandwidthPublicip"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/eip:Eip": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "associateId": {
                    "type": "string"
                },
                "associateType": {
                    "type": "string"
                },
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "bandwidth": {
                    "$ref": "#/types/cloudru:Vpc/EipBandwidth:EipBandwidth",
                    "description": "The bandwidth configuration."
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the EIP belongs."
                },
                "instanceId": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the EIP."
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicip": {
                    "$ref": "#/types/cloudru:Vpc/EipPublicip:EipPublicip",
                    "description": "The EIP configuration."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the EIP resource."
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "address",
                "associateId",
                "associateType",
                "bandwidth",
                "chargingMode",
                "createdAt",
                "enterpriseProjectId",
                "instanceId",
                "instanceType",
                "ipv6Address",
                "name",
                "portId",
                "privateIp",
                "publicip",
                "region",
                "status",
                "tags",
                "updatedAt"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "bandwidth": {
                    "$ref": "#/types/cloudru:Vpc/EipBandwidth:EipBandwidth",
                    "description": "The bandwidth configuration."
                },
                "chargingMode": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID to which the EIP belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the EIP."
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicip": {
                    "$ref": "#/types/cloudru:Vpc/EipPublicip:EipPublicip",
                    "description": "The EIP configuration."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to create the EIP resource.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "bandwidth",
                "publicip"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Eip resources.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "associateId": {
                        "type": "string"
                    },
                    "associateType": {
                        "type": "string"
                    },
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "bandwidth": {
                        "$ref": "#/types/cloudru:Vpc/EipBandwidth:EipBandwidth",
                        "description": "The bandwidth configuration."
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID to which the EIP belongs."
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the EIP."
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicip": {
                        "$ref": "#/types/cloudru:Vpc/EipPublicip:EipPublicip",
                        "description": "The EIP configuration."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to create the EIP resource.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/peeringConnection:PeeringConnection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerTenantId": {
                    "type": "string"
                },
                "peerVpcId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "peerTenantId",
                "peerVpcId",
                "region",
                "status",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerTenantId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "peerVpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "peerVpcId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PeeringConnection resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "peerVpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/peeringConnectionAccepter:PeeringConnectionAccepter": {
            "properties": {
                "accept": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerTenantId": {
                    "type": "string"
                },
                "peerVpcId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                },
                "vpcPeeringConnectionId": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name",
                "peerTenantId",
                "peerVpcId",
                "region",
                "status",
                "vpcId",
                "vpcPeeringConnectionId"
            ],
            "inputProperties": {
                "accept": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vpcPeeringConnectionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "vpcPeeringConnectionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PeeringConnectionAccepter resources.\n",
                "properties": {
                    "accept": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcPeeringConnectionId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/route:Route": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routeTableId": {
                    "type": "string"
                },
                "routeTableName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "destination",
                "nexthop",
                "region",
                "routeTableId",
                "routeTableName",
                "type",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "nexthop": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routeTableId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destination",
                "nexthop",
                "type",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Route resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "nexthop": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routeTableId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routeTableName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/routeTable:RouteTable": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/RouteTableRoute:RouteTableRoute"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "region",
                "routes",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/RouteTableRoute:RouteTableRoute"
                    }
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RouteTable resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/RouteTableRoute:RouteTableRoute"
                        }
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/secgroup:Secgroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deleteDefaultRules": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/SecgroupRule:SecgroupRule"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "name",
                "region",
                "rules",
                "tags",
                "updatedAt"
            ],
            "inputProperties": {
                "deleteDefaultRules": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Secgroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "deleteDefaultRules": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/SecgroupRule:SecgroupRule"
                        }
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/secgroupRule:SecgroupRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "ethertype": {
                    "type": "string"
                },
                "portRangeMax": {
                    "type": "integer"
                },
                "portRangeMin": {
                    "type": "integer"
                },
                "ports": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "remoteAddressGroupId": {
                    "type": "string"
                },
                "remoteGroupId": {
                    "type": "string"
                },
                "remoteIpPrefix": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "direction",
                "ethertype",
                "portRangeMax",
                "portRangeMin",
                "ports",
                "priority",
                "protocol",
                "region",
                "remoteAddressGroupId",
                "remoteGroupId",
                "remoteIpPrefix",
                "securityGroupId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "direction": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ethertype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portRangeMax": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "portRangeMin": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "ports": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remoteAddressGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remoteGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remoteIpPrefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "direction",
                "ethertype",
                "securityGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecgroupRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "direction": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ethertype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portRangeMax": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "portRangeMin": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "ports": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remoteAddressGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remoteGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remoteIpPrefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/subnet:Subnet": {
            "properties": {
                "availabilityZone": {
                    "type": "string"
                },
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dhcpDomainName": {
                    "type": "string"
                },
                "dhcpEnable": {
                    "type": "boolean"
                },
                "dhcpIpv6LeaseTime": {
                    "type": "string"
                },
                "dhcpLeaseTime": {
                    "type": "string"
                },
                "dnsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gatewayIp": {
                    "type": "string"
                },
                "ipv4SubnetId": {
                    "type": "string"
                },
                "ipv6Cidr": {
                    "type": "string"
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "ipv6Gateway": {
                    "type": "string"
                },
                "ipv6SubnetId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ntpServerAddress": {
                    "type": "string"
                },
                "primaryDns": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secondaryDns": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "description": "schema: Deprecated"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "availabilityZone",
                "cidr",
                "dhcpIpv6LeaseTime",
                "dhcpLeaseTime",
                "dnsLists",
                "gatewayIp",
                "ipv4SubnetId",
                "ipv6Cidr",
                "ipv6Gateway",
                "ipv6SubnetId",
                "name",
                "primaryDns",
                "region",
                "secondaryDns",
                "subnetId",
                "tags",
                "vpcId"
            ],
            "inputProperties": {
                "availabilityZone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cidr": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "dhcpDomainName": {
                    "type": "string"
                },
                "dhcpEnable": {
                    "type": "boolean"
                },
                "dhcpIpv6LeaseTime": {
                    "type": "string"
                },
                "dhcpLeaseTime": {
                    "type": "string"
                },
                "dnsLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gatewayIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv6Enable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ntpServerAddress": {
                    "type": "string"
                },
                "primaryDns": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secondaryDns": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cidr",
                "gatewayIp",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subnet resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "cidr": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "dhcpDomainName": {
                        "type": "string"
                    },
                    "dhcpEnable": {
                        "type": "boolean"
                    },
                    "dhcpIpv6LeaseTime": {
                        "type": "string"
                    },
                    "dhcpLeaseTime": {
                        "type": "string"
                    },
                    "dnsLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "gatewayIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv4SubnetId": {
                        "type": "string"
                    },
                    "ipv6Cidr": {
                        "type": "string"
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6Gateway": {
                        "type": "string"
                    },
                    "ipv6SubnetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ntpServerAddress": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "schema: Deprecated"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/vip:Vip": {
            "properties": {
                "deviceOwner": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "integer"
                },
                "macAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string",
                    "deprecationMessage": "use ip_version instead"
                }
            },
            "required": [
                "deviceOwner",
                "ipAddress",
                "ipVersion",
                "macAddress",
                "name",
                "networkId",
                "region",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "ipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipVersion": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "deprecationMessage": "use ip_version instead",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "networkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vip resources.\n",
                "properties": {
                    "deviceOwner": {
                        "type": "string"
                    },
                    "ipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipVersion": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "deprecationMessage": "use ip_version instead",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/vipAssociate:VipAssociate": {
            "properties": {
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "portIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "vipId": {
                    "type": "string"
                },
                "vipIpAddress": {
                    "type": "string"
                },
                "vipSubnetId": {
                    "type": "string"
                }
            },
            "required": [
                "ipAddresses",
                "portIds",
                "region",
                "vipId",
                "vipIpAddress",
                "vipSubnetId"
            ],
            "inputProperties": {
                "portIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "portIds",
                "vipId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VipAssociate resources.\n",
                "properties": {
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "portIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vipIpAddress": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpc/vpc:Vpc": {
            "properties": {
                "blockServiceEndpointStates": {
                    "type": "string"
                },
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enhancedLocalRoute": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpc/VpcRoute:VpcRoute"
                    },
                    "deprecationMessage": "use huaweicloud_vpc_route_table data source to get all routes"
                },
                "secondaryCidr": {
                    "type": "string",
                    "description": "schema: Deprecated; use secondary_cidrs instead"
                },
                "secondaryCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "cidr",
                "enhancedLocalRoute",
                "enterpriseProjectId",
                "name",
                "region",
                "routes",
                "secondaryCidrs",
                "status",
                "tags"
            ],
            "inputProperties": {
                "blockServiceEndpointStates": {
                    "type": "string"
                },
                "cidr": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enhancedLocalRoute": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secondaryCidr": {
                    "type": "string",
                    "description": "schema: Deprecated; use secondary_cidrs instead"
                },
                "secondaryCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "cidr"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vpc resources.\n",
                "properties": {
                    "blockServiceEndpointStates": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enhancedLocalRoute": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/VpcRoute:VpcRoute"
                        },
                        "deprecationMessage": "use huaweicloud_vpc_route_table data source to get all routes"
                    },
                    "secondaryCidr": {
                        "type": "string",
                        "description": "schema: Deprecated; use secondary_cidrs instead"
                    },
                    "secondaryCidrs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpcep/endpoint:Endpoint": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "enableDns": {
                    "type": "boolean"
                },
                "enableWhitelist": {
                    "type": "boolean"
                },
                "ipAddress": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "packetId": {
                    "type": "integer"
                },
                "privateDomainName": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "description",
                "ipAddress",
                "networkId",
                "packetId",
                "privateDomainName",
                "region",
                "serviceId",
                "serviceName",
                "serviceType",
                "status",
                "tags",
                "vpcId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enableDns": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "enableWhitelist": {
                    "type": "boolean"
                },
                "ipAddress": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "networkId",
                "serviceId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Endpoint resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enableDns": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "enableWhitelist": {
                        "type": "boolean"
                    },
                    "ipAddress": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "packetId": {
                        "type": "integer"
                    },
                    "privateDomainName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:Vpcep/service:Service": {
            "properties": {
                "approval": {
                    "type": "boolean"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpcep/ServiceConnection:ServiceConnection"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enablePolicy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organizationPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "portId": {
                    "type": "string"
                },
                "portMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpcep/ServicePortMapping:ServicePortMapping"
                    }
                },
                "region": {
                    "type": "string"
                },
                "serverType": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string",
                    "description": "schema: Computed"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "approval",
                "connections",
                "description",
                "enablePolicy",
                "name",
                "organizationPermissions",
                "portId",
                "portMappings",
                "region",
                "serverType",
                "serviceName",
                "status",
                "tags",
                "vpcId"
            ],
            "inputProperties": {
                "approval": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enablePolicy": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "organizationPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "portId": {
                    "type": "string"
                },
                "portMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:Vpcep/ServicePortMapping:ServicePortMapping"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serverType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceType": {
                    "type": "string",
                    "description": "schema: Computed"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "portId",
                "portMappings",
                "serverType",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "approval": {
                        "type": "boolean"
                    },
                    "connections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpcep/ServiceConnection:ServiceConnection"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "enablePolicy": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationPermissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "portId": {
                        "type": "string"
                    },
                    "portMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:Vpcep/ServicePortMapping:ServicePortMapping"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serverType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "schema: Computed"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigAclPolicy:ApigAclPolicy": {
            "properties": {
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the ACL policy belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy is located."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the ACL policy."
                },
                "value": {
                    "type": "string",
                    "description": "One or more objects from which the access will be controlled."
                }
            },
            "required": [
                "entityType",
                "instanceId",
                "name",
                "region",
                "type",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the ACL policy.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the ACL policy belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ACL policy."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy is located.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the ACL policy."
                },
                "value": {
                    "type": "string",
                    "description": "One or more objects from which the access will be controlled."
                }
            },
            "requiredInputs": [
                "entityType",
                "instanceId",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigAclPolicy resources.\n",
                "properties": {
                    "entityType": {
                        "type": "string",
                        "description": "The entity type of the ACL policy.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the ACL policy belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ACL policy."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ACL policy is located.",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the ACL policy."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the ACL policy."
                    },
                    "value": {
                        "type": "string",
                        "description": "One or more objects from which the access will be controlled."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigAclPolicyAssociate:ApigAclPolicyAssociate": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the ACL policy belong."
                },
                "policyId": {
                    "type": "string",
                    "description": "The ACL Policy ID for APIs binding."
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the ACL policy."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy and the APIs are located."
                }
            },
            "required": [
                "instanceId",
                "policyId",
                "publishIds",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the ACL policy belong.",
                    "willReplaceOnChanges": true
                },
                "policyId": {
                    "type": "string",
                    "description": "The ACL Policy ID for APIs binding.",
                    "willReplaceOnChanges": true
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the ACL policy."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the ACL policy and the APIs are located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "policyId",
                "publishIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigAclPolicyAssociate resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs and the ACL policy belong.",
                        "willReplaceOnChanges": true
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ACL Policy ID for APIs binding.",
                        "willReplaceOnChanges": true
                    },
                    "publishIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The publish IDs corresponding to the APIs bound by the ACL policy."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the ACL policy and the APIs are located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApiAction:ApigApiAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The operation on the API will be performed."
                },
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be published."
                },
                "apiName": {
                    "type": "string",
                    "description": "The name of the API."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment to which the API will be published."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API belongs."
                },
                "publishId": {
                    "type": "string",
                    "description": "The ID of the publish record."
                },
                "publishTime": {
                    "type": "string",
                    "description": "The time when the API was published, in UTC format."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the APIG instance to which the API belongs is located."
                },
                "remark": {
                    "type": "string",
                    "description": "The description of the publish action."
                },
                "versionId": {
                    "type": "string",
                    "description": "The version ID of the online API."
                }
            },
            "required": [
                "action",
                "apiId",
                "apiName",
                "envId",
                "instanceId",
                "publishId",
                "publishTime",
                "region",
                "versionId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The operation on the API will be performed."
                },
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be published."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment to which the API will be published."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the APIG instance to which the API belongs is located.",
                    "willReplaceOnChanges": true
                },
                "remark": {
                    "type": "string",
                    "description": "The description of the publish action."
                }
            },
            "requiredInputs": [
                "action",
                "apiId",
                "envId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApiAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The operation on the API will be performed."
                    },
                    "apiId": {
                        "type": "string",
                        "description": "The ID of the API to be published."
                    },
                    "apiName": {
                        "type": "string",
                        "description": "The name of the API."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string",
                        "description": "The ID of the environment to which the API will be published."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API belongs."
                    },
                    "publishId": {
                        "type": "string",
                        "description": "The ID of the publish record."
                    },
                    "publishTime": {
                        "type": "string",
                        "description": "The time when the API was published, in UTC format."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the APIG instance to which the API belongs is located.",
                        "willReplaceOnChanges": true
                    },
                    "remark": {
                        "type": "string",
                        "description": "The description of the publish action."
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The version ID of the online API."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApiBatchAction:ApigApiBatchAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to perform on the APIs."
                },
                "apis": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to perform the action on."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the action will be performed."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs belong."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the APIG instance to which the API belongs is located"
                },
                "remark": {
                    "type": "string",
                    "description": "The remark for the batch operation."
                }
            },
            "required": [
                "action",
                "envId",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action to perform on the APIs."
                },
                "apis": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to perform the action on."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "envId": {
                    "type": "string",
                    "description": "The ID of the environment where the action will be performed."
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the API group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs belong."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the APIG instance to which the API belongs is located",
                    "willReplaceOnChanges": true
                },
                "remark": {
                    "type": "string",
                    "description": "The remark for the batch operation."
                }
            },
            "requiredInputs": [
                "action",
                "envId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApiBatchAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the APIs."
                    },
                    "apis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of API IDs to perform the action on."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string",
                        "description": "The ID of the environment where the action will be performed."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the API group."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs belong."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the APIG instance to which the API belongs is located",
                        "willReplaceOnChanges": true
                    },
                    "remark": {
                        "type": "string",
                        "description": "The remark for the batch operation."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApiCheck:ApigApiCheck": {
            "properties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be excluded from the check."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the group to which the API belongs."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API belongs."
                },
                "matchMode": {
                    "type": "string",
                    "description": "The matching mode of the API."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API."
                },
                "region": {
                    "type": "string"
                },
                "reqMethod": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "reqUri": {
                    "type": "string",
                    "description": "The request path of the API."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the API to be checked."
                }
            },
            "required": [
                "instanceId",
                "name",
                "region",
                "type"
            ],
            "inputProperties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be excluded from the check."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the group to which the API belongs."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API belongs."
                },
                "matchMode": {
                    "type": "string",
                    "description": "The matching mode of the API."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the API."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "reqMethod": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "reqUri": {
                    "type": "string",
                    "description": "The request path of the API."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the API to be checked."
                }
            },
            "requiredInputs": [
                "instanceId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApiCheck resources.\n",
                "properties": {
                    "apiId": {
                        "type": "string",
                        "description": "The ID of the API to be excluded from the check."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the group to which the API belongs."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API belongs."
                    },
                    "matchMode": {
                        "type": "string",
                        "description": "The matching mode of the API."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the API."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "reqMethod": {
                        "type": "string",
                        "description": "The request method of the API."
                    },
                    "reqUri": {
                        "type": "string",
                        "description": "The request path of the API."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the API to be checked."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApiDebug:ApigApiDebug": {
            "properties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be debugged."
                },
                "body": {
                    "type": "string",
                    "description": "The request message body of the API."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "header": {
                    "type": "string",
                    "description": "The request header parameters of the API, in JSON format."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API belongs."
                },
                "latency": {
                    "type": "integer",
                    "description": "The debug latency in milliseconds."
                },
                "method": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "mode": {
                    "type": "string",
                    "description": "The debug mode."
                },
                "path": {
                    "type": "string",
                    "description": "The request path of the API."
                },
                "query": {
                    "type": "string",
                    "description": "The request query parameters of the API, in JSON format."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance to which the API belongs is located."
                },
                "request": {
                    "type": "string",
                    "description": "The debug request message content."
                },
                "response": {
                    "type": "string",
                    "description": "The debug response message content."
                },
                "scheme": {
                    "type": "string",
                    "description": "The request protocol."
                },
                "stage": {
                    "type": "string",
                    "description": "The runtime environment for debug request."
                }
            },
            "required": [
                "apiId",
                "instanceId",
                "latency",
                "method",
                "mode",
                "path",
                "region",
                "request",
                "response",
                "scheme"
            ],
            "inputProperties": {
                "apiId": {
                    "type": "string",
                    "description": "The ID of the API to be debugged."
                },
                "body": {
                    "type": "string",
                    "description": "The request message body of the API."
                },
                "enableForceNew": {
                    "type": "string"
                },
                "header": {
                    "type": "string",
                    "description": "The request header parameters of the API, in JSON format."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API belongs."
                },
                "method": {
                    "type": "string",
                    "description": "The request method of the API."
                },
                "mode": {
                    "type": "string",
                    "description": "The debug mode."
                },
                "path": {
                    "type": "string",
                    "description": "The request path of the API."
                },
                "query": {
                    "type": "string",
                    "description": "The request query parameters of the API, in JSON format."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance to which the API belongs is located.",
                    "willReplaceOnChanges": true
                },
                "scheme": {
                    "type": "string",
                    "description": "The request protocol."
                },
                "stage": {
                    "type": "string",
                    "description": "The runtime environment for debug request."
                }
            },
            "requiredInputs": [
                "apiId",
                "instanceId",
                "method",
                "mode",
                "path",
                "scheme"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApiDebug resources.\n",
                "properties": {
                    "apiId": {
                        "type": "string",
                        "description": "The ID of the API to be debugged."
                    },
                    "body": {
                        "type": "string",
                        "description": "The request message body of the API."
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "header": {
                        "type": "string",
                        "description": "The request header parameters of the API, in JSON format."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API belongs."
                    },
                    "latency": {
                        "type": "integer",
                        "description": "The debug latency in milliseconds."
                    },
                    "method": {
                        "type": "string",
                        "description": "The request method of the API."
                    },
                    "mode": {
                        "type": "string",
                        "description": "The debug mode."
                    },
                    "path": {
                        "type": "string",
                        "description": "The request path of the API."
                    },
                    "query": {
                        "type": "string",
                        "description": "The request query parameters of the API, in JSON format."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance to which the API belongs is located.",
                        "willReplaceOnChanges": true
                    },
                    "request": {
                        "type": "string",
                        "description": "The debug request message content."
                    },
                    "response": {
                        "type": "string",
                        "description": "The debug response message content."
                    },
                    "scheme": {
                        "type": "string",
                        "description": "The request protocol."
                    },
                    "stage": {
                        "type": "string",
                        "description": "The runtime environment for debug request."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApiVersionUnpublish:ApigApiVersionUnpublish": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API version belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance to which the API version belongs is located."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of the API version to be offline."
                }
            },
            "required": [
                "instanceId",
                "region",
                "versionId"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the API version belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance to which the API version belongs is located.",
                    "willReplaceOnChanges": true
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of the API version to be offline."
                }
            },
            "requiredInputs": [
                "instanceId",
                "versionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApiVersionUnpublish resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the API version belongs."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance to which the API version belongs is located.",
                        "willReplaceOnChanges": true
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The ID of the API version to be offline."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigAppcode:ApigAppcode": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the APPCODE belongs."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the APPCODE."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APPCODE belong."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODE are located."
                },
                "value": {
                    "type": "string",
                    "description": "The APPCODE value (content)."
                }
            },
            "required": [
                "applicationId",
                "createdAt",
                "instanceId",
                "region",
                "value"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the APPCODE belongs.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APPCODE belong.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODE are located.",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The APPCODE value (content).",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applicationId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigAppcode resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application to which the APPCODE belongs.",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the APPCODE."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application and APPCODE belong.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application and APPCODE are located.",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The APPCODE value (content).",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApplicationAcl:ApigApplicationAcl": {
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the ACL rules belong."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and ACL rules are located."
                },
                "type": {
                    "type": "string",
                    "description": "The ACL type."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ACL values."
                }
            },
            "required": [
                "applicationId",
                "instanceId",
                "region",
                "type",
                "values"
            ],
            "inputProperties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application to which the ACL rules belong.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and ACL rules are located.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The ACL type."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ACL values."
                }
            },
            "requiredInputs": [
                "applicationId",
                "instanceId",
                "type",
                "values"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationAcl resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application to which the ACL rules belong.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application belongs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application and ACL rules are located.",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The ACL type."
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ACL values."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApplicationAuthorization:ApigApplicationAuthorization": {
            "properties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to be authorized for the application."
                },
                "apiIdsOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application authorized to access the APIs."
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the APIs were published."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APIs belong."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODEs are located."
                }
            },
            "required": [
                "apiIds",
                "apiIdsOrigins",
                "applicationId",
                "envId",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to be authorized for the application."
                },
                "apiIdsOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application authorized to access the APIs.",
                    "willReplaceOnChanges": true
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the APIs were published.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application and APIs belong.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application and APPCODEs are located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "apiIds",
                "applicationId",
                "envId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationAuthorization resources.\n",
                "properties": {
                    "apiIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of API IDs to be authorized for the application."
                    },
                    "apiIdsOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application authorized to access the APIs.",
                        "willReplaceOnChanges": true
                    },
                    "envId": {
                        "type": "string",
                        "description": "The environment ID where the APIs were published.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application and APIs belong.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application and APPCODEs are located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApplicationQuota:ApigApplicationQuota": {
            "properties": {
                "bindNum": {
                    "type": "integer",
                    "description": "The number of bound APPs."
                },
                "callLimits": {
                    "type": "integer",
                    "description": "Specifies the access limit of the application quota."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the application quota, in RFC3339 format."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the application quota."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the application quota belongs."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the application quota."
                },
                "region": {
                    "type": "string"
                },
                "timeInterval": {
                    "type": "integer",
                    "description": "Specifies the limited time value for flow control of the application quota."
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Specifies the limited time unit of the application quota."
                }
            },
            "required": [
                "bindNum",
                "callLimits",
                "createdAt",
                "instanceId",
                "name",
                "region",
                "timeInterval",
                "timeUnit"
            ],
            "inputProperties": {
                "callLimits": {
                    "type": "integer",
                    "description": "Specifies the access limit of the application quota."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the application quota."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the application quota belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the application quota."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "timeInterval": {
                    "type": "integer",
                    "description": "Specifies the limited time value for flow control of the application quota."
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Specifies the limited time unit of the application quota."
                }
            },
            "requiredInputs": [
                "callLimits",
                "instanceId",
                "timeInterval",
                "timeUnit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationQuota resources.\n",
                "properties": {
                    "bindNum": {
                        "type": "integer",
                        "description": "The number of bound APPs."
                    },
                    "callLimits": {
                        "type": "integer",
                        "description": "Specifies the access limit of the application quota."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the application quota, in RFC3339 format."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the application quota."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the dedicated instance to which the application quota belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the application quota."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "timeInterval": {
                        "type": "integer",
                        "description": "Specifies the limited time value for flow control of the application quota."
                    },
                    "timeUnit": {
                        "type": "string",
                        "description": "Specifies the limited time unit of the application quota."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigApplicationQuotaAssociate:ApigApplicationQuotaAssociate": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication"
                    },
                    "description": "The configuration of applications bound to the quota."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application quota (policy) belongs."
                },
                "quotaId": {
                    "type": "string",
                    "description": "The ID of the application quota (policy)."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application quota (policy) is located."
                }
            },
            "required": [
                "applications",
                "instanceId",
                "quotaId",
                "region"
            ],
            "inputProperties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication"
                    },
                    "description": "The configuration of applications bound to the quota."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the application quota (policy) belongs.",
                    "willReplaceOnChanges": true
                },
                "quotaId": {
                    "type": "string",
                    "description": "The ID of the application quota (policy).",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application quota (policy) is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "applications",
                "instanceId",
                "quotaId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigApplicationQuotaAssociate resources.\n",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ApigApplicationQuotaAssociateApplication:ApigApplicationQuotaAssociateApplication"
                        },
                        "description": "The configuration of applications bound to the quota."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the application quota (policy) belongs.",
                        "willReplaceOnChanges": true
                    },
                    "quotaId": {
                        "type": "string",
                        "description": "The ID of the application quota (policy).",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application quota (policy) is located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigCertificate:ApigCertificate": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The certificate content.",
                    "secret": true
                },
                "effectedAt": {
                    "type": "string",
                    "description": "The effective time of the certificate."
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The expiration time of the certificate."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The dedicated instance ID to which the certificate belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The certificate name."
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key of the certificate.",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the certificate is located."
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The SAN (Subject Alternative Names) of the certificate."
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "What signature algorithm the certificate uses."
                },
                "trustedRootCa": {
                    "type": "string",
                    "description": "The trusted root CA certificate.",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The certificate type."
                }
            },
            "required": [
                "content",
                "effectedAt",
                "expiresAt",
                "instanceId",
                "name",
                "privateKey",
                "region",
                "sans",
                "signatureAlgorithm",
                "type"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The certificate content.",
                    "secret": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The dedicated instance ID to which the certificate belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The certificate name."
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key of the certificate.",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the certificate is located.",
                    "willReplaceOnChanges": true
                },
                "trustedRootCa": {
                    "type": "string",
                    "description": "The trusted root CA certificate.",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The certificate type.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "content",
                "privateKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigCertificate resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The certificate content.",
                        "secret": true
                    },
                    "effectedAt": {
                        "type": "string",
                        "description": "The effective time of the certificate."
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The expiration time of the certificate."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The dedicated instance ID to which the certificate belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The certificate name."
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key of the certificate.",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the certificate is located.",
                        "willReplaceOnChanges": true
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The SAN (Subject Alternative Names) of the certificate."
                    },
                    "signatureAlgorithm": {
                        "type": "string",
                        "description": "What signature algorithm the certificate uses."
                    },
                    "trustedRootCa": {
                        "type": "string",
                        "description": "The trusted root CA certificate.",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The certificate type.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigChannel:ApigChannel": {
            "properties": {
                "balanceStrategy": {
                    "type": "integer",
                    "description": "The distribution algorithm."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the channel."
                },
                "healthCheck": {
                    "$ref": "#/types/cloudru:index/ApigChannelHealthCheck:ApigChannelHealthCheck",
                    "description": "The health configuration of cloud servers associated with the load balance channel for APIG regularly check."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the channel belongs."
                },
                "memberGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ApigChannelMemberGroup:ApigChannelMemberGroup"
                    },
                    "description": "The backend server groups of the channel."
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type of the channel."
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ApigChannelMember:ApigChannelMember"
                    },
                    "description": "The backend servers of the channel."
                },
                "microservice": {
                    "$ref": "#/types/cloudru:index/ApigChannelMicroservice:ApigChannelMicroservice",
                    "description": "The configuration of the microservice."
                },
                "name": {
                    "type": "string",
                    "description": "The channel name."
                },
                "port": {
                    "type": "integer",
                    "description": "The default port for health check in channel."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located."
                },
                "status": {
                    "type": "integer",
                    "description": "The current status of the channel."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the channel."
                }
            },
            "required": [
                "balanceStrategy",
                "createdAt",
                "healthCheck",
                "instanceId",
                "members",
                "memberGroups",
                "memberType",
                "microservice",
                "name",
                "port",
                "region",
                "status",
                "type"
            ],
            "inputProperties": {
                "balanceStrategy": {
                    "type": "integer",
                    "description": "The distribution algorithm."
                },
                "healthCheck": {
                    "$ref": "#/types/cloudru:index/ApigChannelHealthCheck:ApigChannelHealthCheck",
                    "description": "The health configuration of cloud servers associated with the load balance channel for APIG regularly check."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the channel belongs.",
                    "willReplaceOnChanges": true
                },
                "memberGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ApigChannelMemberGroup:ApigChannelMemberGroup"
                    },
                    "description": "The backend server groups of the channel."
                },
                "memberType": {
                    "type": "string",
                    "description": "The member type of the channel."
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ApigChannelMember:ApigChannelMember"
                    },
                    "description": "The backend servers of the channel."
                },
                "microservice": {
                    "$ref": "#/types/cloudru:index/ApigChannelMicroservice:ApigChannelMicroservice",
                    "description": "The configuration of the microservice."
                },
                "name": {
                    "type": "string",
                    "description": "The channel name."
                },
                "port": {
                    "type": "integer",
                    "description": "The default port for health check in channel."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance is located.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of the channel."
                }
            },
            "requiredInputs": [
                "balanceStrategy",
                "instanceId",
                "port"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigChannel resources.\n",
                "properties": {
                    "balanceStrategy": {
                        "type": "integer",
                        "description": "The distribution algorithm."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the channel."
                    },
                    "healthCheck": {
                        "$ref": "#/types/cloudru:index/ApigChannelHealthCheck:ApigChannelHealthCheck",
                        "description": "The health configuration of cloud servers associated with the load balance channel for APIG regularly check."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the channel belongs.",
                        "willReplaceOnChanges": true
                    },
                    "memberGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ApigChannelMemberGroup:ApigChannelMemberGroup"
                        },
                        "description": "The backend server groups of the channel."
                    },
                    "memberType": {
                        "type": "string",
                        "description": "The member type of the channel."
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ApigChannelMember:ApigChannelMember"
                        },
                        "description": "The backend servers of the channel."
                    },
                    "microservice": {
                        "$ref": "#/types/cloudru:index/ApigChannelMicroservice:ApigChannelMicroservice",
                        "description": "The configuration of the microservice."
                    },
                    "name": {
                        "type": "string",
                        "description": "The channel name."
                    },
                    "port": {
                        "type": "integer",
                        "description": "The default port for health check in channel."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance is located.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "integer",
                        "description": "The current status of the channel."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the channel."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigEndpointConnectionManagement:ApigEndpointConnectionManagement": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the operation type endpoint connection."
                },
                "endpointId": {
                    "type": "string",
                    "description": "Specifies the ID of the endpoint connection."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the endpoint connection belongs."
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "The current ststus of the endpoint connection."
                }
            },
            "required": [
                "action",
                "endpointId",
                "instanceId",
                "region",
                "status"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Specifies the operation type endpoint connection."
                },
                "endpointId": {
                    "type": "string",
                    "description": "Specifies the ID of the endpoint connection.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the endpoint connection belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "endpointId",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEndpointConnectionManagement resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Specifies the operation type endpoint connection."
                    },
                    "endpointId": {
                        "type": "string",
                        "description": "Specifies the ID of the endpoint connection.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the dedicated instance to which the endpoint connection belongs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The current ststus of the endpoint connection."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigEndpointWhitelist:ApigEndpointWhitelist": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the endpoint service belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the endpoint service is located."
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The whitelist records of the endpoint service."
                }
            },
            "required": [
                "instanceId",
                "region",
                "whitelists"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the endpoint service belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the endpoint service is located.",
                    "willReplaceOnChanges": true
                },
                "whitelists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The whitelist records of the endpoint service."
                }
            },
            "requiredInputs": [
                "instanceId",
                "whitelists"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEndpointWhitelist resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the endpoint service belongs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the endpoint service is located.",
                        "willReplaceOnChanges": true
                    },
                    "whitelists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The whitelist records of the endpoint service."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigEnvironmentVariable:ApigEnvironmentVariable": {
            "properties": {
                "envId": {
                    "type": "string",
                    "description": "Specifies the ID of the environment to which the environment variable belongs."
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the group to which the environment variable belongs."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the environment variable belongs."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the environment variable."
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the resource."
                },
                "value": {
                    "type": "string",
                    "description": "Specifies the value of the environment variable."
                }
            },
            "required": [
                "envId",
                "groupId",
                "instanceId",
                "name",
                "region",
                "value"
            ],
            "inputProperties": {
                "envId": {
                    "type": "string",
                    "description": "Specifies the ID of the environment to which the environment variable belongs.",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "description": "Specifies the ID of the group to which the environment variable belongs.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the dedicated instance to which the environment variable belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the environment variable.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the resource.",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "Specifies the value of the environment variable."
                }
            },
            "requiredInputs": [
                "envId",
                "groupId",
                "instanceId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigEnvironmentVariable resources.\n",
                "properties": {
                    "envId": {
                        "type": "string",
                        "description": "Specifies the ID of the environment to which the environment variable belongs.",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Specifies the ID of the group to which the environment variable belongs.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the dedicated instance to which the environment variable belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the environment variable.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "Specifies the region in which to create the resource.",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "Specifies the value of the environment variable."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigInstanceFeature:ApigInstanceFeature": {
            "properties": {
                "config": {
                    "type": "string",
                    "description": "Specified the detailed configuration of the feature."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specified whether to enable the feature."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specified the ID of the dedicated instance to which the feature belongs."
                },
                "name": {
                    "type": "string",
                    "description": "Specified the name of the feature."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "name",
                "region"
            ],
            "inputProperties": {
                "config": {
                    "type": "string",
                    "description": "Specified the detailed configuration of the feature."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specified whether to enable the feature."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specified the ID of the dedicated instance to which the feature belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specified the name of the feature.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigInstanceFeature resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Specified the detailed configuration of the feature."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Specified whether to enable the feature."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specified the ID of the dedicated instance to which the feature belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specified the name of the feature.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigInstanceRoutes:ApigInstanceRoutes": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the routes belong."
                },
                "nexthops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The configuration of the next hop routes."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and routes are located."
                }
            },
            "required": [
                "instanceId",
                "nexthops",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the routes belong.",
                    "willReplaceOnChanges": true
                },
                "nexthops": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The configuration of the next hop routes."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the dedicated instance and routes are located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "nexthops"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigInstanceRoutes resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the routes belong.",
                        "willReplaceOnChanges": true
                    },
                    "nexthops": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The configuration of the next hop routes."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the dedicated instance and routes are located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigPlugin:ApigPlugin": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The configuration details for plugin."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the plugin."
                },
                "description": {
                    "type": "string",
                    "description": "The plugin description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The plugin name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located."
                },
                "type": {
                    "type": "string",
                    "description": "The plugin type."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the plugin."
                }
            },
            "required": [
                "content",
                "createdAt",
                "description",
                "instanceId",
                "name",
                "region",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The configuration details for plugin."
                },
                "description": {
                    "type": "string",
                    "description": "The plugin description."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The plugin name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The plugin type.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "content",
                "instanceId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigPlugin resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The configuration details for plugin."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the plugin."
                    },
                    "description": {
                        "type": "string",
                        "description": "The plugin description."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the plugin belongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The plugin name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the plugin is located.",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The plugin type.",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the plugin."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigPluginAssociate:ApigPluginAssociate": {
            "properties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to be bound by the plugin."
                },
                "apiIdsOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the API was published."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs."
                },
                "pluginId": {
                    "type": "string",
                    "description": "The plugin ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located."
                }
            },
            "required": [
                "apiIds",
                "apiIdsOrigins",
                "envId",
                "instanceId",
                "pluginId",
                "region"
            ],
            "inputProperties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to be bound by the plugin."
                },
                "apiIdsOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the API was published.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.",
                    "willReplaceOnChanges": true
                },
                "pluginId": {
                    "type": "string",
                    "description": "The plugin ID.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "apiIds",
                "envId",
                "instanceId",
                "pluginId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigPluginAssociate resources.\n",
                "properties": {
                    "apiIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of API IDs to be bound by the plugin."
                    },
                    "apiIdsOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                    },
                    "envId": {
                        "type": "string",
                        "description": "The environment ID where the API was published.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the plugin belongs.",
                        "willReplaceOnChanges": true
                    },
                    "pluginId": {
                        "type": "string",
                        "description": "The plugin ID.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the plugin is located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigPluginBatchApisAssociate:ApigPluginBatchApisAssociate": {
            "properties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to be bound by the plugin."
                },
                "apiIdsOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the API was published."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs."
                },
                "pluginId": {
                    "type": "string",
                    "description": "The plugin ID."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located."
                }
            },
            "required": [
                "apiIds",
                "apiIdsOrigins",
                "envId",
                "instanceId",
                "pluginId",
                "region"
            ],
            "inputProperties": {
                "apiIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of API IDs to be bound by the plugin."
                },
                "apiIdsOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                },
                "envId": {
                    "type": "string",
                    "description": "The environment ID where the API was published.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the plugin belongs.",
                    "willReplaceOnChanges": true
                },
                "pluginId": {
                    "type": "string",
                    "description": "The plugin ID.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the plugin is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "apiIds",
                "envId",
                "instanceId",
                "pluginId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigPluginBatchApisAssociate resources.\n",
                "properties": {
                    "apiIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of API IDs to be bound by the plugin."
                    },
                    "apiIdsOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The script configuration value of this change is also the original value used for comparison with\nthe new value next time the change is made. The corresponding parameter name is 'api_ids'."
                    },
                    "envId": {
                        "type": "string",
                        "description": "The environment ID where the API was published.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the plugin belongs.",
                        "willReplaceOnChanges": true
                    },
                    "pluginId": {
                        "type": "string",
                        "description": "The plugin ID.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the plugin is located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigSignature:ApigSignature": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The signature algorithm."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the signature."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the signature belongs."
                },
                "key": {
                    "type": "string",
                    "description": "The signature key."
                },
                "name": {
                    "type": "string",
                    "description": "The signature name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature is located."
                },
                "secret": {
                    "type": "string",
                    "description": "The signature secret.",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The signature type."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the signature."
                }
            },
            "required": [
                "algorithm",
                "createdAt",
                "instanceId",
                "key",
                "name",
                "region",
                "secret",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "algorithm": {
                    "type": "string",
                    "description": "The signature algorithm."
                },
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the signature belongs.",
                    "willReplaceOnChanges": true
                },
                "key": {
                    "type": "string",
                    "description": "The signature key."
                },
                "name": {
                    "type": "string",
                    "description": "The signature name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature is located.",
                    "willReplaceOnChanges": true
                },
                "secret": {
                    "type": "string",
                    "description": "The signature secret.",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The signature type."
                }
            },
            "requiredInputs": [
                "instanceId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigSignature resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "The signature algorithm."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the signature."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the signature belongs.",
                        "willReplaceOnChanges": true
                    },
                    "key": {
                        "type": "string",
                        "description": "The signature key."
                    },
                    "name": {
                        "type": "string",
                        "description": "The signature name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the signature is located.",
                        "willReplaceOnChanges": true
                    },
                    "secret": {
                        "type": "string",
                        "description": "The signature secret.",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The signature type."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the signature."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/apigSignatureAssociate:ApigSignatureAssociate": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the signature belong."
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the signature."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature and the APIs are located."
                },
                "signatureId": {
                    "type": "string",
                    "description": "The signature ID for APIs binding."
                }
            },
            "required": [
                "instanceId",
                "publishIds",
                "region",
                "signatureId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "The ID of the dedicated instance to which the APIs and the signature belong.",
                    "willReplaceOnChanges": true
                },
                "publishIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The publish IDs corresponding to the APIs bound by the signature."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the signature and the APIs are located.",
                    "willReplaceOnChanges": true
                },
                "signatureId": {
                    "type": "string",
                    "description": "The signature ID for APIs binding.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "publishIds",
                "signatureId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApigSignatureAssociate resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "The ID of the dedicated instance to which the APIs and the signature belong.",
                        "willReplaceOnChanges": true
                    },
                    "publishIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The publish IDs corresponding to the APIs bound by the signature."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the signature and the APIs are located.",
                        "willReplaceOnChanges": true
                    },
                    "signatureId": {
                        "type": "string",
                        "description": "The signature ID for APIs binding.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cbhAssetAgencyAuthorization:CbhAssetAgencyAuthorization": {
            "properties": {
                "csms": {
                    "type": "boolean"
                },
                "kms": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "csms",
                "kms",
                "region"
            ],
            "inputProperties": {
                "csms": {
                    "type": "boolean"
                },
                "kms": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "csms",
                "kms"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbhAssetAgencyAuthorization resources.\n",
                "properties": {
                    "csms": {
                        "type": "boolean"
                    },
                    "kms": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cbhHaInstance:CbhHaInstance": {
            "properties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH HA instance."
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled."
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH HA instance."
                },
                "dataDiskSize": {
                    "type": "number",
                    "description": "The data disk size of the CBH HA instance."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH HA instance belongs."
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server."
                },
                "floatingIp": {
                    "type": "string",
                    "description": "Specifies the floating IP address of the CBH HA instance."
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled."
                },
                "masterAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the master instance."
                },
                "masterId": {
                    "type": "string",
                    "description": "The ID of the master instance."
                },
                "masterPrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the master instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH HA instance."
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH HA instance."
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the CBH HA instance."
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH HA instance is created."
                },
                "publicIp": {
                    "type": "string",
                    "description": "The elastic IP address."
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP."
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the CBH HA instance."
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group."
                },
                "slaveAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the slave instance."
                },
                "slaveId": {
                    "type": "string",
                    "description": "The ID of the slave instance."
                },
                "slavePrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the slave instance."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the CBH HA instance."
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "The current version of the CBH HA instance image."
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC."
                }
            },
            "required": [
                "chargingMode",
                "dataDiskSize",
                "enterpriseProjectId",
                "flavorId",
                "floatingIp",
                "masterAvailabilityZone",
                "masterId",
                "masterPrivateIp",
                "name",
                "password",
                "period",
                "periodUnit",
                "publicIp",
                "region",
                "securityGroupId",
                "slaveAvailabilityZone",
                "slaveId",
                "slavePrivateIp",
                "status",
                "subnetId",
                "tags",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH HA instance."
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled."
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH HA instance.",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH HA instance belongs."
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server."
                },
                "floatingIp": {
                    "type": "string",
                    "description": "Specifies the floating IP address of the CBH HA instance."
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled.",
                    "willReplaceOnChanges": true
                },
                "masterAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the master instance.",
                    "willReplaceOnChanges": true
                },
                "masterPrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the master instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH HA instance.",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH HA instance.",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the CBH HA instance.",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH HA instance is created."
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP."
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to create the CBH HA instance.",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group."
                },
                "slaveAvailabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name of the slave instance.",
                    "willReplaceOnChanges": true
                },
                "slavePrivateIp": {
                    "type": "string",
                    "description": "Specifies the private IP address of the slave instance."
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC."
                }
            },
            "requiredInputs": [
                "chargingMode",
                "flavorId",
                "masterAvailabilityZone",
                "password",
                "period",
                "periodUnit",
                "securityGroupId",
                "slaveAvailabilityZone",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbhHaInstance resources.\n",
                "properties": {
                    "attachDiskSize": {
                        "type": "integer",
                        "description": "Specifies the size of the additional data disk for the CBH HA instance."
                    },
                    "autoRenew": {
                        "type": "string",
                        "description": "Specifies whether auto renew is enabled."
                    },
                    "chargingMode": {
                        "type": "string",
                        "description": "Specifies the charging mode of the CBH HA instance.",
                        "willReplaceOnChanges": true
                    },
                    "dataDiskSize": {
                        "type": "number",
                        "description": "The data disk size of the CBH HA instance."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID to which the CBH HA instance belongs."
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Specifies the product ID of the CBH server."
                    },
                    "floatingIp": {
                        "type": "string",
                        "description": "Specifies the floating IP address of the CBH HA instance."
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Specifies whether the IPv6 network is enabled.",
                        "willReplaceOnChanges": true
                    },
                    "masterAvailabilityZone": {
                        "type": "string",
                        "description": "Specifies the availability zone name of the master instance.",
                        "willReplaceOnChanges": true
                    },
                    "masterId": {
                        "type": "string",
                        "description": "The ID of the master instance."
                    },
                    "masterPrivateIp": {
                        "type": "string",
                        "description": "Specifies the private IP address of the master instance."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the CBH HA instance.",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password for logging in to the management console.",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "description": "Specifies the charging period of the CBH HA instance.",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "description": "Specifies the charging period unit of the CBH HA instance.",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string",
                        "description": "Specifies the power action after the CBH HA instance is created."
                    },
                    "publicIp": {
                        "type": "string",
                        "description": "The elastic IP address."
                    },
                    "publicIpId": {
                        "type": "string",
                        "description": "Specifies the ID of the elastic IP."
                    },
                    "region": {
                        "type": "string",
                        "description": "Specifies the region in which to create the CBH HA instance.",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "Specifies the IDs of the security group."
                    },
                    "slaveAvailabilityZone": {
                        "type": "string",
                        "description": "Specifies the availability zone name of the slave instance.",
                        "willReplaceOnChanges": true
                    },
                    "slaveId": {
                        "type": "string",
                        "description": "The ID of the slave instance."
                    },
                    "slavePrivateIp": {
                        "type": "string",
                        "description": "Specifies the private IP address of the slave instance."
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the CBH HA instance."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "Specifies the ID of a subnet."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string",
                        "description": "The current version of the CBH HA instance image."
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "Specifies the ID of a VPC."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cbhInstance:CbhInstance": {
            "properties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH instance."
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled."
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name."
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH instance."
                },
                "dataDiskSize": {
                    "type": "number",
                    "description": "Indicates the data disk size of the instance."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH instance belongs."
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server."
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH instance."
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH instance."
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the instance."
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH instance is created."
                },
                "privateIp": {
                    "type": "string",
                    "description": "Indicates the private IP of the instance."
                },
                "publicIp": {
                    "type": "string",
                    "description": "schema: Computed; The elastic IP address."
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP."
                },
                "region": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group."
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the instance."
                },
                "subnetAddress": {
                    "type": "string",
                    "description": "Specifies the IP address of the subnet."
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Indicates the current version of the instance image."
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC."
                }
            },
            "required": [
                "availabilityZone",
                "chargingMode",
                "dataDiskSize",
                "enterpriseProjectId",
                "flavorId",
                "name",
                "password",
                "period",
                "periodUnit",
                "privateIp",
                "publicIp",
                "region",
                "securityGroupId",
                "status",
                "subnetAddress",
                "subnetId",
                "tags",
                "version",
                "vpcId"
            ],
            "inputProperties": {
                "attachDiskSize": {
                    "type": "integer",
                    "description": "Specifies the size of the additional data disk for the CBH instance."
                },
                "autoRenew": {
                    "type": "string",
                    "description": "Specifies whether auto renew is enabled."
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "Specifies the availability zone name.",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string",
                    "description": "Specifies the charging mode of the CBH instance.",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the CBH instance belongs."
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies the product ID of the CBH server."
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether the IPv6 network is enabled.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the CBH instance.",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password for logging in to the management console.",
                    "secret": true
                },
                "period": {
                    "type": "integer",
                    "description": "Specifies the charging period of the CBH instance.",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "description": "Specifies the charging period unit of the instance.",
                    "willReplaceOnChanges": true
                },
                "powerAction": {
                    "type": "string",
                    "description": "Specifies the power action after the CBH instance is created."
                },
                "publicIp": {
                    "type": "string",
                    "description": "schema: Computed; The elastic IP address."
                },
                "publicIpId": {
                    "type": "string",
                    "description": "Specifies the ID of the elastic IP."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the IDs of the security group."
                },
                "subnetAddress": {
                    "type": "string",
                    "description": "Specifies the IP address of the subnet."
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC."
                }
            },
            "requiredInputs": [
                "availabilityZone",
                "chargingMode",
                "flavorId",
                "password",
                "period",
                "periodUnit",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbhInstance resources.\n",
                "properties": {
                    "attachDiskSize": {
                        "type": "integer",
                        "description": "Specifies the size of the additional data disk for the CBH instance."
                    },
                    "autoRenew": {
                        "type": "string",
                        "description": "Specifies whether auto renew is enabled."
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "Specifies the availability zone name.",
                        "willReplaceOnChanges": true
                    },
                    "chargingMode": {
                        "type": "string",
                        "description": "Specifies the charging mode of the CBH instance.",
                        "willReplaceOnChanges": true
                    },
                    "dataDiskSize": {
                        "type": "number",
                        "description": "Indicates the data disk size of the instance."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID to which the CBH instance belongs."
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Specifies the product ID of the CBH server."
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Specifies whether the IPv6 network is enabled.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the CBH instance.",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password for logging in to the management console.",
                        "secret": true
                    },
                    "period": {
                        "type": "integer",
                        "description": "Specifies the charging period of the CBH instance.",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "description": "Specifies the charging period unit of the instance.",
                        "willReplaceOnChanges": true
                    },
                    "powerAction": {
                        "type": "string",
                        "description": "Specifies the power action after the CBH instance is created."
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "Indicates the private IP of the instance."
                    },
                    "publicIp": {
                        "type": "string",
                        "description": "schema: Computed; The elastic IP address."
                    },
                    "publicIpId": {
                        "type": "string",
                        "description": "Specifies the ID of the elastic IP."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "Specifies the IDs of the security group."
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of the instance."
                    },
                    "subnetAddress": {
                        "type": "string",
                        "description": "Specifies the IP address of the subnet."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "Specifies the ID of a subnet."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "string",
                        "description": "Indicates the current version of the instance image."
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "Specifies the ID of a VPC."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cbrBackupShare:CbrBackupShare": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "The backup ID."
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CbrBackupShareMember:CbrBackupShareMember"
                    },
                    "description": "The list of shared members configuration."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the shared backup is located."
                }
            },
            "required": [
                "backupId",
                "members",
                "region"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "description": "The backup ID.",
                    "willReplaceOnChanges": true
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CbrBackupShareMember:CbrBackupShareMember"
                    },
                    "description": "The list of shared members configuration."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the shared backup is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupId",
                "members"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrBackupShare resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "description": "The backup ID.",
                        "willReplaceOnChanges": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/CbrBackupShareMember:CbrBackupShareMember"
                        },
                        "description": "The list of shared members configuration."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the shared backup is located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cbrBackupShareAccepter:CbrBackupShareAccepter": {
            "properties": {
                "backupId": {
                    "type": "string",
                    "description": "The ID of the shared source backup."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the backup will be stored."
                },
                "sourceProjectId": {
                    "type": "string",
                    "description": "The ID of the project to which the source backup belongs."
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault which the backup will be stored."
                }
            },
            "required": [
                "backupId",
                "region",
                "sourceProjectId",
                "vaultId"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "description": "The ID of the shared source backup.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the backup will be stored.",
                    "willReplaceOnChanges": true
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault which the backup will be stored.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupId",
                "vaultId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrBackupShareAccepter resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "description": "The ID of the shared source backup.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the backup will be stored.",
                        "willReplaceOnChanges": true
                    },
                    "sourceProjectId": {
                        "type": "string",
                        "description": "The ID of the project to which the source backup belongs."
                    },
                    "vaultId": {
                        "type": "string",
                        "description": "The ID of the vault which the backup will be stored.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cbrCheckpoint:CbrCheckpoint": {
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CbrCheckpointBackup:CbrCheckpointBackup"
                    },
                    "description": "The list of backups configuration."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the checkpoint."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the checkpoint."
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backups are incremental backups."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the checkpoint."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault and backup resources are located."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the checkpoint."
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the checkpoint to create."
                }
            },
            "required": [
                "backups",
                "createdAt",
                "name",
                "region",
                "status",
                "vaultId"
            ],
            "inputProperties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CbrCheckpointBackup:CbrCheckpointBackup"
                    },
                    "description": "The list of backups configuration.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the checkpoint.",
                    "willReplaceOnChanges": true
                },
                "incremental": {
                    "type": "boolean",
                    "description": "Whether the backups are incremental backups.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the checkpoint.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the vault and backup resources are located.",
                    "willReplaceOnChanges": true
                },
                "vaultId": {
                    "type": "string",
                    "description": "The ID of the vault where the checkpoint to create.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backups",
                "vaultId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CbrCheckpoint resources.\n",
                "properties": {
                    "backups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/CbrCheckpointBackup:CbrCheckpointBackup"
                        },
                        "description": "The list of backups configuration.",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the checkpoint."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the checkpoint.",
                        "willReplaceOnChanges": true
                    },
                    "incremental": {
                        "type": "boolean",
                        "description": "Whether the backups are incremental backups.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the checkpoint.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the vault and backup resources are located.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the checkpoint."
                    },
                    "vaultId": {
                        "type": "string",
                        "description": "The ID of the vault where the checkpoint to create.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cceClusterUpgrade:CceClusterUpgrade": {
            "properties": {
                "addons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CceClusterUpgradeAddon:CceClusterUpgradeAddon"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "currentVersion": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "isPostcheck": {
                    "type": "boolean"
                },
                "isSnapshot": {
                    "type": "boolean"
                },
                "nodeOrder": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "nodepoolOrder": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "region": {
                    "type": "string"
                },
                "strategy": {
                    "$ref": "#/types/cloudru:index/CceClusterUpgradeStrategy:CceClusterUpgradeStrategy"
                },
                "targetVersion": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "region",
                "strategy",
                "targetVersion"
            ],
            "inputProperties": {
                "addons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CceClusterUpgradeAddon:CceClusterUpgradeAddon"
                    }
                },
                "clusterId": {
                    "type": "string"
                },
                "currentVersion": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "isPostcheck": {
                    "type": "boolean"
                },
                "isSnapshot": {
                    "type": "boolean"
                },
                "nodeOrder": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "nodepoolOrder": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "strategy": {
                    "$ref": "#/types/cloudru:index/CceClusterUpgradeStrategy:CceClusterUpgradeStrategy"
                },
                "targetVersion": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "clusterId",
                "strategy",
                "targetVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceClusterUpgrade resources.\n",
                "properties": {
                    "addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/CceClusterUpgradeAddon:CceClusterUpgradeAddon"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "currentVersion": {
                        "type": "string"
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "isPostcheck": {
                        "type": "boolean"
                    },
                    "isSnapshot": {
                        "type": "boolean"
                    },
                    "nodeOrder": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "nodepoolOrder": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "strategy": {
                        "$ref": "#/types/cloudru:index/CceClusterUpgradeStrategy:CceClusterUpgradeStrategy"
                    },
                    "targetVersion": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cceNodesRemove:CceNodesRemove": {
            "properties": {
                "clusterId": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CceNodesRemoveNode:CceNodesRemoveNode"
                    }
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "nodes",
                "region"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/CceNodesRemoveNode:CceNodesRemoveNode"
                    }
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "nodes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CceNodesRemove resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/CceNodesRemoveNode:CceNodesRemoveNode"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/cssConfiguration:CssConfiguration": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The CSS cluster ID."
                },
                "httpCorsAllowCredetials": {
                    "type": "string",
                    "description": "Whether to return the Access-Control-Allow-Credentials of the header during cross-domain access."
                },
                "httpCorsAllowHeaders": {
                    "type": "string",
                    "description": "Headers allowed for cross-domain access."
                },
                "httpCorsAllowMethods": {
                    "type": "string",
                    "description": "Methods allowed for cross-domain access."
                },
                "httpCorsAllowOrigin": {
                    "type": "string",
                    "description": "Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**."
                },
                "httpCorsEnabled": {
                    "type": "string",
                    "description": "Whether to allow cross-domain access."
                },
                "httpCorsMaxAge": {
                    "type": "string",
                    "description": "Cache duration of the browser. The cache is automatically cleared after the time range you specify."
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Cache size in the query phase. Value range: **1** to **100**."
                },
                "region": {
                    "type": "string"
                },
                "reindexRemoteWhitelist": {
                    "type": "string",
                    "description": "Configured for migrating data from the current cluster to the target cluster through the reindex API."
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Queue size in the force merge thread pool."
                }
            },
            "required": [
                "clusterId",
                "httpCorsAllowCredetials",
                "httpCorsAllowHeaders",
                "httpCorsAllowMethods",
                "httpCorsAllowOrigin",
                "httpCorsEnabled",
                "httpCorsMaxAge",
                "indicesQueriesCacheSize",
                "region",
                "reindexRemoteWhitelist",
                "threadPoolForceMergeSize"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The CSS cluster ID.",
                    "willReplaceOnChanges": true
                },
                "httpCorsAllowCredetials": {
                    "type": "string",
                    "description": "Whether to return the Access-Control-Allow-Credentials of the header during cross-domain access."
                },
                "httpCorsAllowHeaders": {
                    "type": "string",
                    "description": "Headers allowed for cross-domain access."
                },
                "httpCorsAllowMethods": {
                    "type": "string",
                    "description": "Methods allowed for cross-domain access."
                },
                "httpCorsAllowOrigin": {
                    "type": "string",
                    "description": "Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**."
                },
                "httpCorsEnabled": {
                    "type": "string",
                    "description": "Whether to allow cross-domain access."
                },
                "httpCorsMaxAge": {
                    "type": "string",
                    "description": "Cache duration of the browser. The cache is automatically cleared after the time range you specify."
                },
                "indicesQueriesCacheSize": {
                    "type": "string",
                    "description": "Cache size in the query phase. Value range: **1** to **100**."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "reindexRemoteWhitelist": {
                    "type": "string",
                    "description": "Configured for migrating data from the current cluster to the target cluster through the reindex API."
                },
                "threadPoolForceMergeSize": {
                    "type": "string",
                    "description": "Queue size in the force merge thread pool."
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CssConfiguration resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The CSS cluster ID.",
                        "willReplaceOnChanges": true
                    },
                    "httpCorsAllowCredetials": {
                        "type": "string",
                        "description": "Whether to return the Access-Control-Allow-Credentials of the header during cross-domain access."
                    },
                    "httpCorsAllowHeaders": {
                        "type": "string",
                        "description": "Headers allowed for cross-domain access."
                    },
                    "httpCorsAllowMethods": {
                        "type": "string",
                        "description": "Methods allowed for cross-domain access."
                    },
                    "httpCorsAllowOrigin": {
                        "type": "string",
                        "description": "Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**."
                    },
                    "httpCorsEnabled": {
                        "type": "string",
                        "description": "Whether to allow cross-domain access."
                    },
                    "httpCorsMaxAge": {
                        "type": "string",
                        "description": "Cache duration of the browser. The cache is automatically cleared after the time range you specify."
                    },
                    "indicesQueriesCacheSize": {
                        "type": "string",
                        "description": "Cache size in the query phase. Value range: **1** to **100**."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "reindexRemoteWhitelist": {
                        "type": "string",
                        "description": "Configured for migrating data from the current cluster to the target cluster through the reindex API."
                    },
                    "threadPoolForceMergeSize": {
                        "type": "string",
                        "description": "Queue size in the force merge thread pool."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dcsAccount:DcsAccount": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Specifies the name of the account."
                },
                "accountPassword": {
                    "type": "string",
                    "description": "Specifies the password of the account.",
                    "secret": true
                },
                "accountRole": {
                    "type": "string",
                    "description": "Specifies the role of the account."
                },
                "accountType": {
                    "type": "string",
                    "description": "Indicates the type of the account."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the account."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance."
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the account."
                }
            },
            "required": [
                "accountName",
                "accountPassword",
                "accountRole",
                "accountType",
                "instanceId",
                "region",
                "status"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "Specifies the name of the account.",
                    "willReplaceOnChanges": true
                },
                "accountPassword": {
                    "type": "string",
                    "description": "Specifies the password of the account.",
                    "secret": true
                },
                "accountRole": {
                    "type": "string",
                    "description": "Specifies the role of the account."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the account."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountName",
                "accountPassword",
                "accountRole",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsAccount resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "Specifies the name of the account.",
                        "willReplaceOnChanges": true
                    },
                    "accountPassword": {
                        "type": "string",
                        "description": "Specifies the password of the account.",
                        "secret": true
                    },
                    "accountRole": {
                        "type": "string",
                        "description": "Specifies the role of the account."
                    },
                    "accountType": {
                        "type": "string",
                        "description": "Indicates the type of the account."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the account."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the DCS instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of the account."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dcsBackup:DcsBackup": {
            "properties": {
                "backupFormat": {
                    "type": "string",
                    "description": "Specifies the format of the DCS instance backup."
                },
                "backupId": {
                    "type": "string",
                    "description": "Indicates the ID of the DCS instance backup."
                },
                "beginTime": {
                    "type": "string",
                    "description": "Indicates the time when the backup task is created."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of DCS instance backup."
                },
                "endTime": {
                    "type": "string",
                    "description": "Indicates the time at which DCS instance backup is completed."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance."
                },
                "isSupportRestore": {
                    "type": "string",
                    "description": "Indicates whether restoration is supported. Value Options: **TRUE**, **FALSE**."
                },
                "name": {
                    "type": "string",
                    "description": "Indicates the backup name."
                },
                "region": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the size of the backup file (byte)."
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the backup status."
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the backup type."
                }
            },
            "required": [
                "backupFormat",
                "backupId",
                "beginTime",
                "description",
                "endTime",
                "instanceId",
                "isSupportRestore",
                "name",
                "region",
                "size",
                "status",
                "type"
            ],
            "inputProperties": {
                "backupFormat": {
                    "type": "string",
                    "description": "Specifies the format of the DCS instance backup.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of DCS instance backup.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the DCS instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsBackup resources.\n",
                "properties": {
                    "backupFormat": {
                        "type": "string",
                        "description": "Specifies the format of the DCS instance backup.",
                        "willReplaceOnChanges": true
                    },
                    "backupId": {
                        "type": "string",
                        "description": "Indicates the ID of the DCS instance backup."
                    },
                    "beginTime": {
                        "type": "string",
                        "description": "Indicates the time when the backup task is created."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of DCS instance backup.",
                        "willReplaceOnChanges": true
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Indicates the time at which DCS instance backup is completed."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the DCS instance.",
                        "willReplaceOnChanges": true
                    },
                    "isSupportRestore": {
                        "type": "string",
                        "description": "Indicates whether restoration is supported. Value Options: **TRUE**, **FALSE**."
                    },
                    "name": {
                        "type": "string",
                        "description": "Indicates the backup name."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Indicates the size of the backup file (byte)."
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the backup status."
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the backup type."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dcsParameters:DcsParameters": {
            "properties": {
                "configurationParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DcsParametersConfigurationParameter:DcsParametersConfigurationParameter"
                    }
                },
                "instanceId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "projectId": {
                    "type": "string"
                }
            },
            "required": [
                "configurationParameters",
                "instanceId",
                "parameters",
                "projectId"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "parameters",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsParameters resources.\n",
                "properties": {
                    "configurationParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DcsParametersConfigurationParameter:DcsParametersConfigurationParameter"
                        }
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dcsRestore:DcsRestore": {
            "properties": {
                "backupId": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "restoreRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DcsRestoreRestoreRecord:DcsRestoreRestoreRecord"
                    }
                }
            },
            "required": [
                "backupId",
                "instanceId",
                "projectId",
                "restoreRecords"
            ],
            "inputProperties": {
                "backupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remark": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "backupId",
                "instanceId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DcsRestore resources.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remark": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "restoreRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DcsRestoreRestoreRecord:DcsRestoreRestoreRecord"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/ddsParameterTemplate:DdsParameterTemplate": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the parameter template description."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the parameter template name."
                },
                "nodeType": {
                    "type": "string",
                    "description": "Specifies the node type of parameter template."
                },
                "nodeVersion": {
                    "type": "string",
                    "description": "Specifies the database version."
                },
                "parameterValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies the mapping between parameter names and parameter values."
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DdsParameterTemplateParameter:DdsParameterTemplateParameter"
                    },
                    "description": "Indicates the parameters defined by users based on the default parameter templates."
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "nodeType",
                "nodeVersion",
                "parameters",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the parameter template description."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the parameter template name."
                },
                "nodeType": {
                    "type": "string",
                    "description": "Specifies the node type of parameter template.",
                    "willReplaceOnChanges": true
                },
                "nodeVersion": {
                    "type": "string",
                    "description": "Specifies the database version.",
                    "willReplaceOnChanges": true
                },
                "parameterValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies the mapping between parameter names and parameter values."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "nodeType",
                "nodeVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DdsParameterTemplate resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the parameter template description."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the parameter template name."
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "Specifies the node type of parameter template.",
                        "willReplaceOnChanges": true
                    },
                    "nodeVersion": {
                        "type": "string",
                        "description": "Specifies the database version.",
                        "willReplaceOnChanges": true
                    },
                    "parameterValues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Specifies the mapping between parameter names and parameter values."
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DdsParameterTemplateParameter:DdsParameterTemplateParameter"
                        },
                        "description": "Indicates the parameters defined by users based on the default parameter templates."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/ddsParameterTemplateApply:DdsParameterTemplateApply": {
            "properties": {
                "configurationId": {
                    "type": "string",
                    "description": "Specifies the parameter template ID."
                },
                "entityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the entity IDs."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "configurationId",
                "entityIds",
                "region"
            ],
            "inputProperties": {
                "configurationId": {
                    "type": "string",
                    "description": "Specifies the parameter template ID.",
                    "willReplaceOnChanges": true
                },
                "entityIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the entity IDs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "configurationId",
                "entityIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DdsParameterTemplateApply resources.\n",
                "properties": {
                    "configurationId": {
                        "type": "string",
                        "description": "Specifies the parameter template ID.",
                        "willReplaceOnChanges": true
                    },
                    "entityIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the entity IDs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/ddsParameterTemplateCompare:DdsParameterTemplateCompare": {
            "properties": {
                "differences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DdsParameterTemplateCompareDifference:DdsParameterTemplateCompareDifference"
                    }
                },
                "region": {
                    "type": "string"
                },
                "sourceConfigurationId": {
                    "type": "string"
                },
                "targetConfigurationId": {
                    "type": "string"
                }
            },
            "required": [
                "differences",
                "region",
                "sourceConfigurationId",
                "targetConfigurationId"
            ],
            "inputProperties": {
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceConfigurationId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "targetConfigurationId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "sourceConfigurationId",
                "targetConfigurationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DdsParameterTemplateCompare resources.\n",
                "properties": {
                    "differences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DdsParameterTemplateCompareDifference:DdsParameterTemplateCompareDifference"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceConfigurationId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "targetConfigurationId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/ddsParameterTemplateCopy:DdsParameterTemplateCopy": {
            "properties": {
                "configurationId": {
                    "type": "string",
                    "description": "Specifies the parameter template ID."
                },
                "createdAt": {
                    "type": "string",
                    "description": "Indicates the create time."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of replicated parameter template."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of replicated parameter template."
                },
                "nodeVersion": {
                    "type": "string",
                    "description": "Indicates the database version."
                },
                "parameterValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies the mapping between parameter names and parameter values."
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DdsParameterTemplateCopyParameter:DdsParameterTemplateCopyParameter"
                    },
                    "description": "Indicates the parameters defined by users based on the default parameter templates."
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Indicates the update time."
                }
            },
            "required": [
                "configurationId",
                "createdAt",
                "name",
                "nodeVersion",
                "parameters",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "configurationId": {
                    "type": "string",
                    "description": "Specifies the parameter template ID.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of replicated parameter template."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of replicated parameter template."
                },
                "parameterValues": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies the mapping between parameter names and parameter values."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "configurationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DdsParameterTemplateCopy resources.\n",
                "properties": {
                    "configurationId": {
                        "type": "string",
                        "description": "Specifies the parameter template ID.",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Indicates the create time."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of replicated parameter template."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of replicated parameter template."
                    },
                    "nodeVersion": {
                        "type": "string",
                        "description": "Indicates the database version."
                    },
                    "parameterValues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Specifies the mapping between parameter names and parameter values."
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DdsParameterTemplateCopyParameter:DdsParameterTemplateCopyParameter"
                        },
                        "description": "Indicates the parameters defined by users based on the default parameter templates."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Indicates the update time."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/ddsParameterTemplateReset:DdsParameterTemplateReset": {
            "properties": {
                "configurationId": {
                    "type": "string",
                    "description": "Specifies the parameter template ID."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "configurationId",
                "region"
            ],
            "inputProperties": {
                "configurationId": {
                    "type": "string",
                    "description": "Specifies the parameter template ID.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "configurationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DdsParameterTemplateReset resources.\n",
                "properties": {
                    "configurationId": {
                        "type": "string",
                        "description": "Specifies the parameter template ID.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsInstance:DmsInstance": {
            "properties": {
                "accessUser": {
                    "type": "string"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "connectAddress": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "engineVersion": {
                    "type": "string"
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "partitionNum": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "port": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string"
                },
                "securityGroupId": {
                    "type": "string"
                },
                "securityGroupName": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "subnetName": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "usedStorageSpace": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                },
                "vpcName": {
                    "type": "string"
                }
            },
            "required": [
                "availableZones",
                "connectAddress",
                "createdAt",
                "description",
                "engine",
                "maintainBegin",
                "maintainEnd",
                "name",
                "orderId",
                "port",
                "productId",
                "region",
                "resourceSpecCode",
                "securityGroupId",
                "securityGroupName",
                "specification",
                "status",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "subnetName",
                "tags",
                "type",
                "usedStorageSpace",
                "userId",
                "vpcId",
                "vpcName"
            ],
            "inputProperties": {
                "accessUser": {
                    "type": "string"
                },
                "availableZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "engine": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maintainBegin": {
                    "type": "string"
                },
                "maintainEnd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partitionNum": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "productId": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "securityGroupId": {
                    "type": "string"
                },
                "specification": {
                    "type": "string"
                },
                "storageSpace": {
                    "type": "integer"
                },
                "storageSpecCode": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "availableZones",
                "engine",
                "productId",
                "securityGroupId",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsInstance resources.\n",
                "properties": {
                    "accessUser": {
                        "type": "string"
                    },
                    "availableZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "connectAddress": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string"
                    },
                    "maintainEnd": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "string"
                    },
                    "partitionNum": {
                        "type": "integer"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "port": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "securityGroupName": {
                        "type": "string"
                    },
                    "specification": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "storageSpace": {
                        "type": "integer"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "subnetName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "usedStorageSpace": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    },
                    "vpcName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsKafkaConsumerGroup:DmsKafkaConsumerGroup": {
            "properties": {
                "coordinatorId": {
                    "type": "integer",
                    "description": "Indicates the coordinator id of the consumer group."
                },
                "createdAt": {
                    "type": "string",
                    "description": "Indicates the created time of the consumer group."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the consumer group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the Kafka instance."
                },
                "lag": {
                    "type": "integer",
                    "description": "Indicates the lag number of the consumer group."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the consumer group."
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Indicates the state of the consumer group."
                }
            },
            "required": [
                "coordinatorId",
                "createdAt",
                "instanceId",
                "lag",
                "name",
                "region",
                "state"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the consumer group."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the Kafka instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the consumer group.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaConsumerGroup resources.\n",
                "properties": {
                    "coordinatorId": {
                        "type": "integer",
                        "description": "Indicates the coordinator id of the consumer group."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Indicates the created time of the consumer group."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the consumer group."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the Kafka instance.",
                        "willReplaceOnChanges": true
                    },
                    "lag": {
                        "type": "integer",
                        "description": "Indicates the lag number of the consumer group."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the consumer group.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of the consumer group."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsKafkaMessageProduce:DmsKafkaMessageProduce": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "propertyLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList"
                    }
                },
                "region": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            },
            "required": [
                "body",
                "instanceId",
                "region",
                "topic"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "propertyLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList"
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "body",
                "instanceId",
                "topic"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsKafkaMessageProduce resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "propertyLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsKafkaMessageProducePropertyList:DmsKafkaMessageProducePropertyList"
                        },
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqConsumerGroup:DmsRocketmqConsumerGroup": {
            "properties": {
                "broadcast": {
                    "type": "boolean",
                    "description": "Specifies whether to broadcast of the consumer group."
                },
                "brokers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of associated brokers of the consumer group."
                },
                "consumeOrderly": {
                    "type": "boolean",
                    "description": "Specifies whether to consume orderly."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the consumer group."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies the consumer group is enabled or not. Default to true."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the rocketMQ instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the consumer group."
                },
                "region": {
                    "type": "string"
                },
                "retryMaxTimes": {
                    "type": "integer",
                    "description": "Specifies the maximum number of retry times."
                }
            },
            "required": [
                "broadcast",
                "brokers",
                "consumeOrderly",
                "instanceId",
                "name",
                "region",
                "retryMaxTimes"
            ],
            "inputProperties": {
                "broadcast": {
                    "type": "boolean",
                    "description": "Specifies whether to broadcast of the consumer group."
                },
                "brokers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of associated brokers of the consumer group.",
                    "willReplaceOnChanges": true
                },
                "consumeOrderly": {
                    "type": "boolean",
                    "description": "Specifies whether to consume orderly."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the consumer group."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies the consumer group is enabled or not. Default to true."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the rocketMQ instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the consumer group.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retryMaxTimes": {
                    "type": "integer",
                    "description": "Specifies the maximum number of retry times."
                }
            },
            "requiredInputs": [
                "instanceId",
                "retryMaxTimes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqConsumerGroup resources.\n",
                "properties": {
                    "broadcast": {
                        "type": "boolean",
                        "description": "Specifies whether to broadcast of the consumer group."
                    },
                    "brokers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of associated brokers of the consumer group.",
                        "willReplaceOnChanges": true
                    },
                    "consumeOrderly": {
                        "type": "boolean",
                        "description": "Specifies whether to consume orderly."
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the consumer group."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Specifies the consumer group is enabled or not. Default to true."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the rocketMQ instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the consumer group.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "retryMaxTimes": {
                        "type": "integer",
                        "description": "Specifies the maximum number of retry times."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqConsumptionVerify:DmsRocketmqConsumptionVerify": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "messageIdLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "resendResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqConsumptionVerifyResendResult:DmsRocketmqConsumptionVerifyResendResult"
                    },
                    "description": "Indicates the verify results."
                },
                "topic": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "region",
                "resendResults"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "messageIdLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqConsumptionVerify resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "group": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "messageIdLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resendResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqConsumptionVerifyResendResult:DmsRocketmqConsumptionVerifyResendResult"
                        },
                        "description": "Indicates the verify results."
                    },
                    "topic": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqDeadLetterResend:DmsRocketmqDeadLetterResend": {
            "properties": {
                "instanceId": {
                    "type": "string"
                },
                "messageIdLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string"
                },
                "resendResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqDeadLetterResendResendResult:DmsRocketmqDeadLetterResendResendResult"
                    },
                    "description": "Indicates the resend results."
                },
                "topic": {
                    "type": "string"
                }
            },
            "required": [
                "instanceId",
                "messageIdLists",
                "region",
                "resendResults",
                "topic"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "messageIdLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "messageIdLists",
                "topic"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqDeadLetterResend resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "messageIdLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resendResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqDeadLetterResendResendResult:DmsRocketmqDeadLetterResendResendResult"
                        },
                        "description": "Indicates the resend results."
                    },
                    "topic": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqInstance:DmsRocketmqInstance": {
            "properties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of availability zone names"
                },
                "brokerAddress": {
                    "type": "string",
                    "description": "Indicates the service data address."
                },
                "brokerNum": {
                    "type": "integer",
                    "description": "Specifies the broker numbers."
                },
                "chargingMode": {
                    "type": "string"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqInstanceConfig:DmsRocketmqInstanceConfig"
                    },
                    "description": "Specifies the instance configs."
                },
                "crossVpcAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqInstanceCrossVpcAccess:DmsRocketmqInstanceCrossVpcAccess"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the DMS RocketMQ instance."
                },
                "enableAcl": {
                    "type": "boolean",
                    "description": "Specifies whether access control is enabled."
                },
                "enablePublicip": {
                    "type": "boolean",
                    "description": "Specifies whether to enable public access."
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Specifies the version of the RocketMQ engine."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project id of the instance."
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies a product ID"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether to support IPv6"
                },
                "maintainBegin": {
                    "type": "string",
                    "description": "Indicates the time at which the maintenance window starts. The format is HH:mm:ss."
                },
                "maintainEnd": {
                    "type": "string",
                    "description": "Indicates the time at which the maintenance window ends. The format is HH:mm:ss."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the DMS RocketMQ instance"
                },
                "namesrvAddress": {
                    "type": "string",
                    "description": "Indicates the metadata address."
                },
                "newSpecBillingEnable": {
                    "type": "boolean",
                    "description": "Indicates whether billing based on new specifications is enabled."
                },
                "nodeNum": {
                    "type": "integer",
                    "description": "Indicates the node quantity."
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "publicBrokerAddress": {
                    "type": "string",
                    "description": "Indicates the public network service data address."
                },
                "publicNamesrvAddress": {
                    "type": "string",
                    "description": "Indicates the public network metadata address."
                },
                "publicipAddress": {
                    "type": "string",
                    "description": "Indicates the public IP address."
                },
                "publicipId": {
                    "type": "string",
                    "description": "Specifies the ID of the EIP bound to the instance."
                },
                "region": {
                    "type": "string"
                },
                "resourceSpecCode": {
                    "type": "string",
                    "description": "Indicates the resource specifications."
                },
                "retentionPolicy": {
                    "type": "boolean",
                    "description": "Specifies whether access control is enabled.",
                    "deprecationMessage": "Use 'enable_acl' instead"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the ID of a security group"
                },
                "specification": {
                    "type": "string",
                    "description": "Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications\n  and the number of nodes are returned."
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Specifies whether the RocketMQ SASL_SSL is enabled."
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the DMS RocketMQ instance."
                },
                "storageSpace": {
                    "type": "integer",
                    "description": "Specifies the message storage capacity, Unit: GB."
                },
                "storageSpecCode": {
                    "type": "string",
                    "description": "Specifies the storage I/O specification"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsMode": {
                    "type": "string",
                    "description": "The TLS mode of the instance."
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the DMS RocketMQ instance type. Value: cluster."
                },
                "usedStorageSpace": {
                    "type": "integer",
                    "description": "Indicates the used message storage space. Unit: GB."
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC"
                }
            },
            "required": [
                "availabilityZones",
                "brokerAddress",
                "chargingMode",
                "configs",
                "crossVpcAccesses",
                "description",
                "enableAcl",
                "engineVersion",
                "enterpriseProjectId",
                "flavorId",
                "maintainBegin",
                "maintainEnd",
                "name",
                "namesrvAddress",
                "newSpecBillingEnable",
                "nodeNum",
                "publicBrokerAddress",
                "publicNamesrvAddress",
                "publicipAddress",
                "region",
                "resourceSpecCode",
                "retentionPolicy",
                "securityGroupId",
                "specification",
                "sslEnable",
                "status",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "tags",
                "tlsMode",
                "type",
                "usedStorageSpace",
                "vpcId"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "string"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the list of availability zone names",
                    "willReplaceOnChanges": true
                },
                "brokerNum": {
                    "type": "integer",
                    "description": "Specifies the broker numbers."
                },
                "chargingMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqInstanceConfig:DmsRocketmqInstanceConfig"
                    },
                    "description": "Specifies the instance configs."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the DMS RocketMQ instance."
                },
                "enableAcl": {
                    "type": "boolean",
                    "description": "Specifies whether access control is enabled."
                },
                "enablePublicip": {
                    "type": "boolean",
                    "description": "Specifies whether to enable public access."
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Specifies the version of the RocketMQ engine.",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project id of the instance."
                },
                "flavorId": {
                    "type": "string",
                    "description": "Specifies a product ID"
                },
                "ipv6Enable": {
                    "type": "boolean",
                    "description": "Specifies whether to support IPv6",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the DMS RocketMQ instance"
                },
                "period": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "periodUnit": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicipId": {
                    "type": "string",
                    "description": "Specifies the ID of the EIP bound to the instance."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "retentionPolicy": {
                    "type": "boolean",
                    "description": "Specifies whether access control is enabled.",
                    "deprecationMessage": "Use 'enable_acl' instead"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "Specifies the ID of a security group"
                },
                "sslEnable": {
                    "type": "boolean",
                    "description": "Specifies whether the RocketMQ SASL_SSL is enabled.",
                    "willReplaceOnChanges": true
                },
                "storageSpace": {
                    "type": "integer",
                    "description": "Specifies the message storage capacity, Unit: GB."
                },
                "storageSpecCode": {
                    "type": "string",
                    "description": "Specifies the storage I/O specification",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "Specifies the ID of a subnet",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsMode": {
                    "type": "string",
                    "description": "The TLS mode of the instance."
                },
                "vpcId": {
                    "type": "string",
                    "description": "Specifies the ID of a VPC",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZones",
                "engineVersion",
                "flavorId",
                "securityGroupId",
                "storageSpace",
                "storageSpecCode",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqInstance resources.\n",
                "properties": {
                    "autoRenew": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the list of availability zone names",
                        "willReplaceOnChanges": true
                    },
                    "brokerAddress": {
                        "type": "string",
                        "description": "Indicates the service data address."
                    },
                    "brokerNum": {
                        "type": "integer",
                        "description": "Specifies the broker numbers."
                    },
                    "chargingMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqInstanceConfig:DmsRocketmqInstanceConfig"
                        },
                        "description": "Specifies the instance configs."
                    },
                    "crossVpcAccesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqInstanceCrossVpcAccess:DmsRocketmqInstanceCrossVpcAccess"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the DMS RocketMQ instance."
                    },
                    "enableAcl": {
                        "type": "boolean",
                        "description": "Specifies whether access control is enabled."
                    },
                    "enablePublicip": {
                        "type": "boolean",
                        "description": "Specifies whether to enable public access."
                    },
                    "engineVersion": {
                        "type": "string",
                        "description": "Specifies the version of the RocketMQ engine.",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project id of the instance."
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Specifies a product ID"
                    },
                    "ipv6Enable": {
                        "type": "boolean",
                        "description": "Specifies whether to support IPv6",
                        "willReplaceOnChanges": true
                    },
                    "maintainBegin": {
                        "type": "string",
                        "description": "Indicates the time at which the maintenance window starts. The format is HH:mm:ss."
                    },
                    "maintainEnd": {
                        "type": "string",
                        "description": "Indicates the time at which the maintenance window ends. The format is HH:mm:ss."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the DMS RocketMQ instance"
                    },
                    "namesrvAddress": {
                        "type": "string",
                        "description": "Indicates the metadata address."
                    },
                    "newSpecBillingEnable": {
                        "type": "boolean",
                        "description": "Indicates whether billing based on new specifications is enabled."
                    },
                    "nodeNum": {
                        "type": "integer",
                        "description": "Indicates the node quantity."
                    },
                    "period": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "periodUnit": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicBrokerAddress": {
                        "type": "string",
                        "description": "Indicates the public network service data address."
                    },
                    "publicNamesrvAddress": {
                        "type": "string",
                        "description": "Indicates the public network metadata address."
                    },
                    "publicipAddress": {
                        "type": "string",
                        "description": "Indicates the public IP address."
                    },
                    "publicipId": {
                        "type": "string",
                        "description": "Specifies the ID of the EIP bound to the instance."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "resourceSpecCode": {
                        "type": "string",
                        "description": "Indicates the resource specifications."
                    },
                    "retentionPolicy": {
                        "type": "boolean",
                        "description": "Specifies whether access control is enabled.",
                        "deprecationMessage": "Use 'enable_acl' instead"
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "Specifies the ID of a security group"
                    },
                    "specification": {
                        "type": "string",
                        "description": "Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications\n  and the number of nodes are returned."
                    },
                    "sslEnable": {
                        "type": "boolean",
                        "description": "Specifies whether the RocketMQ SASL_SSL is enabled.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of the DMS RocketMQ instance."
                    },
                    "storageSpace": {
                        "type": "integer",
                        "description": "Specifies the message storage capacity, Unit: GB."
                    },
                    "storageSpecCode": {
                        "type": "string",
                        "description": "Specifies the storage I/O specification",
                        "willReplaceOnChanges": true
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "Specifies the ID of a subnet",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tlsMode": {
                        "type": "string",
                        "description": "The TLS mode of the instance."
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the DMS RocketMQ instance type. Value: cluster."
                    },
                    "usedStorageSpace": {
                        "type": "integer",
                        "description": "Indicates the used message storage space. Unit: GB."
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "Specifies the ID of a VPC",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqMessageOffsetReset:DmsRocketmqMessageOffsetReset": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            },
            "required": [
                "group",
                "instanceId",
                "region",
                "timestamp",
                "topic"
            ],
            "inputProperties": {
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "timestamp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "group",
                "instanceId",
                "timestamp",
                "topic"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqMessageOffsetReset resources.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "timestamp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqMigrationTask:DmsRocketmqMigrationTask": {
            "properties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskBinding:DmsRocketmqMigrationTaskBinding"
                    },
                    "description": "Specifies the binding metadata."
                },
                "exchanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskExchange:DmsRocketmqMigrationTaskExchange"
                    },
                    "description": "Specifies the exchange metadata."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RocketMQ instance."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the migration task."
                },
                "overwrite": {
                    "type": "string",
                    "description": "Specifies whether to overwrite configurations with the same name."
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskQueue:DmsRocketmqMigrationTaskQueue"
                    },
                    "description": "Specifies the queue metadata."
                },
                "region": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "description": "Indicates the start time of the migration task."
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the status of the migration task."
                },
                "subscriptionGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskSubscriptionGroup:DmsRocketmqMigrationTaskSubscriptionGroup"
                    },
                    "description": "Specifies the consumer group metadata."
                },
                "topicConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskTopicConfig:DmsRocketmqMigrationTaskTopicConfig"
                    },
                    "description": "Specifies the topic metadata."
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the migration task type."
                },
                "vhosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskVhost:DmsRocketmqMigrationTaskVhost"
                    },
                    "description": "Specifies the virtual hosts metadata."
                }
            },
            "required": [
                "bindings",
                "exchanges",
                "instanceId",
                "name",
                "overwrite",
                "queues",
                "region",
                "startDate",
                "status",
                "subscriptionGroups",
                "topicConfigs",
                "type",
                "vhosts"
            ],
            "inputProperties": {
                "bindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskBinding:DmsRocketmqMigrationTaskBinding"
                    },
                    "description": "Specifies the binding metadata.",
                    "willReplaceOnChanges": true
                },
                "exchanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskExchange:DmsRocketmqMigrationTaskExchange"
                    },
                    "description": "Specifies the exchange metadata.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the RocketMQ instance.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the migration task.",
                    "willReplaceOnChanges": true
                },
                "overwrite": {
                    "type": "string",
                    "description": "Specifies whether to overwrite configurations with the same name.",
                    "willReplaceOnChanges": true
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskQueue:DmsRocketmqMigrationTaskQueue"
                    },
                    "description": "Specifies the queue metadata.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subscriptionGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskSubscriptionGroup:DmsRocketmqMigrationTaskSubscriptionGroup"
                    },
                    "description": "Specifies the consumer group metadata.",
                    "willReplaceOnChanges": true
                },
                "topicConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskTopicConfig:DmsRocketmqMigrationTaskTopicConfig"
                    },
                    "description": "Specifies the topic metadata.",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Specifies the migration task type.",
                    "willReplaceOnChanges": true
                },
                "vhosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskVhost:DmsRocketmqMigrationTaskVhost"
                    },
                    "description": "Specifies the virtual hosts metadata.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "instanceId",
                "overwrite",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqMigrationTask resources.\n",
                "properties": {
                    "bindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskBinding:DmsRocketmqMigrationTaskBinding"
                        },
                        "description": "Specifies the binding metadata.",
                        "willReplaceOnChanges": true
                    },
                    "exchanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskExchange:DmsRocketmqMigrationTaskExchange"
                        },
                        "description": "Specifies the exchange metadata.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the RocketMQ instance.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the migration task.",
                        "willReplaceOnChanges": true
                    },
                    "overwrite": {
                        "type": "string",
                        "description": "Specifies whether to overwrite configurations with the same name.",
                        "willReplaceOnChanges": true
                    },
                    "queues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskQueue:DmsRocketmqMigrationTaskQueue"
                        },
                        "description": "Specifies the queue metadata.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Indicates the start time of the migration task."
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of the migration task."
                    },
                    "subscriptionGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskSubscriptionGroup:DmsRocketmqMigrationTaskSubscriptionGroup"
                        },
                        "description": "Specifies the consumer group metadata.",
                        "willReplaceOnChanges": true
                    },
                    "topicConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskTopicConfig:DmsRocketmqMigrationTaskTopicConfig"
                        },
                        "description": "Specifies the topic metadata.",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Specifies the migration task type.",
                        "willReplaceOnChanges": true
                    },
                    "vhosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqMigrationTaskVhost:DmsRocketmqMigrationTaskVhost"
                        },
                        "description": "Specifies the virtual hosts metadata.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqTopic:DmsRocketmqTopic": {
            "properties": {
                "brokers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqTopicBroker:DmsRocketmqTopicBroker"
                    },
                    "description": "Specifies the list of associated brokers of the topic."
                },
                "instanceId": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string",
                    "description": "Specifies the message type of the topic."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the topic."
                },
                "permission": {
                    "type": "string",
                    "description": "Specifies the permissions of the topic."
                },
                "queueNum": {
                    "type": "integer",
                    "description": "Specifies the number of queues."
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqTopicQueue:DmsRocketmqTopicQueue"
                    },
                    "description": "Specifies the queue info of the topic."
                },
                "region": {
                    "type": "string"
                },
                "totalReadQueueNum": {
                    "type": "integer",
                    "description": "Specifies the total number of read queues."
                },
                "totalWriteQueueNum": {
                    "type": "integer",
                    "description": "Specifies the total number of write queues."
                }
            },
            "required": [
                "brokers",
                "instanceId",
                "messageType",
                "name",
                "permission",
                "queueNum",
                "region",
                "totalReadQueueNum",
                "totalWriteQueueNum"
            ],
            "inputProperties": {
                "brokers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqTopicBroker:DmsRocketmqTopicBroker"
                    },
                    "description": "Specifies the list of associated brokers of the topic.",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "messageType": {
                    "type": "string",
                    "description": "Specifies the message type of the topic.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the topic.",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "Specifies the permissions of the topic."
                },
                "queueNum": {
                    "type": "integer",
                    "description": "Specifies the number of queues.",
                    "willReplaceOnChanges": true
                },
                "queues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqTopicQueue:DmsRocketmqTopicQueue"
                    },
                    "description": "Specifies the queue info of the topic.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "totalReadQueueNum": {
                    "type": "integer",
                    "description": "Specifies the total number of read queues."
                },
                "totalWriteQueueNum": {
                    "type": "integer",
                    "description": "Specifies the total number of write queues."
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqTopic resources.\n",
                "properties": {
                    "brokers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqTopicBroker:DmsRocketmqTopicBroker"
                        },
                        "description": "Specifies the list of associated brokers of the topic.",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "messageType": {
                        "type": "string",
                        "description": "Specifies the message type of the topic.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the topic.",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "Specifies the permissions of the topic."
                    },
                    "queueNum": {
                        "type": "integer",
                        "description": "Specifies the number of queues.",
                        "willReplaceOnChanges": true
                    },
                    "queues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqTopicQueue:DmsRocketmqTopicQueue"
                        },
                        "description": "Specifies the queue info of the topic.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "totalReadQueueNum": {
                        "type": "integer",
                        "description": "Specifies the total number of read queues."
                    },
                    "totalWriteQueueNum": {
                        "type": "integer",
                        "description": "Specifies the total number of write queues."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/dmsRocketmqUser:DmsRocketmqUser": {
            "properties": {
                "accessKey": {
                    "type": "string",
                    "description": "Specifies the access key of the user."
                },
                "admin": {
                    "type": "boolean",
                    "description": "Specifies whether the user is an administrator."
                },
                "defaultGroupPerm": {
                    "type": "string",
                    "description": "Specifies the default consumer group permissions.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**."
                },
                "defaultTopicPerm": {
                    "type": "string",
                    "description": "Specifies the default topic permissions.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**."
                },
                "groupPerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqUserGroupPerm:DmsRocketmqUserGroupPerm"
                    },
                    "description": "Specifies the special consumer group permissions."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the rocketMQ instance."
                },
                "region": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Specifies the secret key of the user."
                },
                "topicPerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqUserTopicPerm:DmsRocketmqUserTopicPerm"
                    },
                    "description": "Specifies the special topic permissions."
                },
                "whiteRemoteAddress": {
                    "type": "string",
                    "description": "Specifies the IP address whitelist."
                }
            },
            "required": [
                "accessKey",
                "admin",
                "defaultGroupPerm",
                "defaultTopicPerm",
                "groupPerms",
                "instanceId",
                "region",
                "secretKey",
                "topicPerms",
                "whiteRemoteAddress"
            ],
            "inputProperties": {
                "accessKey": {
                    "type": "string",
                    "description": "Specifies the access key of the user.",
                    "willReplaceOnChanges": true
                },
                "admin": {
                    "type": "boolean",
                    "description": "Specifies whether the user is an administrator."
                },
                "defaultGroupPerm": {
                    "type": "string",
                    "description": "Specifies the default consumer group permissions.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**."
                },
                "defaultTopicPerm": {
                    "type": "string",
                    "description": "Specifies the default topic permissions.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**."
                },
                "groupPerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqUserGroupPerm:DmsRocketmqUserGroupPerm"
                    },
                    "description": "Specifies the special consumer group permissions."
                },
                "instanceId": {
                    "type": "string",
                    "description": "Specifies the ID of the rocketMQ instance.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "secretKey": {
                    "type": "string",
                    "description": "Specifies the secret key of the user.",
                    "willReplaceOnChanges": true
                },
                "topicPerms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/DmsRocketmqUserTopicPerm:DmsRocketmqUserTopicPerm"
                    },
                    "description": "Specifies the special topic permissions."
                },
                "whiteRemoteAddress": {
                    "type": "string",
                    "description": "Specifies the IP address whitelist."
                }
            },
            "requiredInputs": [
                "accessKey",
                "instanceId",
                "secretKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DmsRocketmqUser resources.\n",
                "properties": {
                    "accessKey": {
                        "type": "string",
                        "description": "Specifies the access key of the user.",
                        "willReplaceOnChanges": true
                    },
                    "admin": {
                        "type": "boolean",
                        "description": "Specifies whether the user is an administrator."
                    },
                    "defaultGroupPerm": {
                        "type": "string",
                        "description": "Specifies the default consumer group permissions.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**."
                    },
                    "defaultTopicPerm": {
                        "type": "string",
                        "description": "Specifies the default topic permissions.\nValue options: **PUB|SUB**, **PUB**, **SUB**, **DENY**."
                    },
                    "groupPerms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqUserGroupPerm:DmsRocketmqUserGroupPerm"
                        },
                        "description": "Specifies the special consumer group permissions."
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specifies the ID of the rocketMQ instance.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "secretKey": {
                        "type": "string",
                        "description": "Specifies the secret key of the user.",
                        "willReplaceOnChanges": true
                    },
                    "topicPerms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/DmsRocketmqUserTopicPerm:DmsRocketmqUserTopicPerm"
                        },
                        "description": "Specifies the special topic permissions."
                    },
                    "whiteRemoteAddress": {
                        "type": "string",
                        "description": "Specifies the IP address whitelist."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbCertificate:ElbCertificate": {
            "properties": {
                "certificate": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "encCertificate": {
                    "type": "string"
                },
                "encPrivateKey": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "expireTime": {
                    "type": "string"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scmCertificateId": {
                    "type": "string"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                }
            },
            "required": [
                "certificate",
                "commonName",
                "createTime",
                "enterpriseProjectId",
                "expireTime",
                "fingerprint",
                "name",
                "region",
                "scmCertificateId",
                "subjectAlternativeNames",
                "type",
                "updateTime"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "encCertificate": {
                    "type": "string"
                },
                "encPrivateKey": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scmCertificateId": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "certificate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "encCertificate": {
                        "type": "string"
                    },
                    "encPrivateKey": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scmCertificateId": {
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updateTime": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbIpgroup:ElbIpgroup": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "ipLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbIpgroupIpList:ElbIpgroupIpList"
                    }
                },
                "listenerIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "ipLists",
                "listenerIds",
                "name",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbIpgroupIpList:ElbIpgroupIpList"
                    }
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipLists"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbIpgroup resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipLists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbIpgroupIpList:ElbIpgroupIpList"
                        }
                    },
                    "listenerIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbL7policy:ElbL7policy": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "fixedResponseConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig"
                },
                "listenerId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "provisioningStatus": {
                    "type": "string"
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "redirectPoolsConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig"
                    }
                },
                "redirectPoolsExtendConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig"
                },
                "redirectPoolsStickySessionConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig"
                },
                "redirectUrlConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig"
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "enterpriseProjectId",
                "fixedResponseConfig",
                "listenerId",
                "name",
                "priority",
                "provisioningStatus",
                "redirectListenerId",
                "redirectPoolId",
                "redirectPoolsConfigs",
                "redirectPoolsExtendConfig",
                "redirectPoolsStickySessionConfig",
                "redirectUrlConfig",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string"
                },
                "fixedResponseConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig"
                },
                "listenerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "redirectListenerId": {
                    "type": "string"
                },
                "redirectPoolId": {
                    "type": "string"
                },
                "redirectPoolsConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig"
                    }
                },
                "redirectPoolsExtendConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig"
                },
                "redirectPoolsStickySessionConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig"
                },
                "redirectUrlConfig": {
                    "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "listenerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbL7policy resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedResponseConfig": {
                        "$ref": "#/types/cloudru:index/ElbL7policyFixedResponseConfig:ElbL7policyFixedResponseConfig"
                    },
                    "listenerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "provisioningStatus": {
                        "type": "string"
                    },
                    "redirectListenerId": {
                        "type": "string"
                    },
                    "redirectPoolId": {
                        "type": "string"
                    },
                    "redirectPoolsConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsConfig:ElbL7policyRedirectPoolsConfig"
                        }
                    },
                    "redirectPoolsExtendConfig": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsExtendConfig:ElbL7policyRedirectPoolsExtendConfig"
                    },
                    "redirectPoolsStickySessionConfig": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectPoolsStickySessionConfig:ElbL7policyRedirectPoolsStickySessionConfig"
                    },
                    "redirectUrlConfig": {
                        "$ref": "#/types/cloudru:index/ElbL7policyRedirectUrlConfig:ElbL7policyRedirectUrlConfig"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbL7rule:ElbL7rule": {
            "properties": {
                "compareType": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7ruleCondition:ElbL7ruleCondition"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "l7policyId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "compareType",
                "conditions",
                "createdAt",
                "l7policyId",
                "region",
                "type",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "compareType": {
                    "type": "string"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbL7ruleCondition:ElbL7ruleCondition"
                    }
                },
                "l7policyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "compareType",
                "l7policyId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbL7rule resources.\n",
                "properties": {
                    "compareType": {
                        "type": "string"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbL7ruleCondition:ElbL7ruleCondition"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "l7policyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbListener:ElbListener": {
            "properties": {
                "accessPolicy": {
                    "type": "string"
                },
                "advancedForwardingEnabled": {
                    "type": "boolean"
                },
                "caCertificate": {
                    "type": "string"
                },
                "cps": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableMemberRetry": {
                    "type": "boolean"
                },
                "enableQuicUpgrade": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "forwardEip": {
                    "type": "boolean"
                },
                "forwardElb": {
                    "type": "boolean"
                },
                "forwardHost": {
                    "type": "boolean"
                },
                "forwardPort": {
                    "type": "boolean"
                },
                "forwardProto": {
                    "type": "boolean"
                },
                "forwardRequestPort": {
                    "type": "boolean"
                },
                "forwardTlsCertificate": {
                    "type": "boolean"
                },
                "forwardTlsCipher": {
                    "type": "boolean"
                },
                "forwardTlsProtocol": {
                    "type": "boolean"
                },
                "gzipEnable": {
                    "type": "boolean"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "idleTimeout": {
                    "type": "integer"
                },
                "ipGroup": {
                    "type": "string"
                },
                "ipGroupEnable": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "maxConnection": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbListenerPortRange:ElbListenerPortRange"
                    }
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "proxyProtocolEnable": {
                    "type": "boolean"
                },
                "quicListenerId": {
                    "type": "string"
                },
                "realIp": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "requestTimeout": {
                    "type": "integer"
                },
                "responseTimeout": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "serverCertificate": {
                    "type": "string"
                },
                "sniCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sniMatchAlgo": {
                    "type": "string"
                },
                "sslEarlyDataEnable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "advancedForwardingEnabled",
                "cps",
                "createdAt",
                "defaultPoolId",
                "enableMemberRetry",
                "enterpriseProjectId",
                "forwardEip",
                "forwardElb",
                "forwardPort",
                "forwardProto",
                "forwardRequestPort",
                "forwardTlsCertificate",
                "forwardTlsCipher",
                "forwardTlsProtocol",
                "gzipEnable",
                "http2Enable",
                "idleTimeout",
                "ipGroupEnable",
                "loadbalancerId",
                "maxConnection",
                "name",
                "protectionStatus",
                "protocol",
                "protocolPort",
                "proxyProtocolEnable",
                "realIp",
                "region",
                "requestTimeout",
                "responseTimeout",
                "sniMatchAlgo",
                "tags",
                "tlsCiphersPolicy",
                "updatedAt"
            ],
            "inputProperties": {
                "accessPolicy": {
                    "type": "string"
                },
                "advancedForwardingEnabled": {
                    "type": "boolean"
                },
                "caCertificate": {
                    "type": "string"
                },
                "cps": {
                    "type": "integer"
                },
                "defaultPoolId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableMemberRetry": {
                    "type": "boolean"
                },
                "enableQuicUpgrade": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "forwardEip": {
                    "type": "boolean"
                },
                "forwardElb": {
                    "type": "boolean"
                },
                "forwardHost": {
                    "type": "boolean"
                },
                "forwardPort": {
                    "type": "boolean"
                },
                "forwardProto": {
                    "type": "boolean"
                },
                "forwardRequestPort": {
                    "type": "boolean"
                },
                "forwardTlsCertificate": {
                    "type": "boolean"
                },
                "forwardTlsCipher": {
                    "type": "boolean"
                },
                "forwardTlsProtocol": {
                    "type": "boolean"
                },
                "gzipEnable": {
                    "type": "boolean"
                },
                "http2Enable": {
                    "type": "boolean"
                },
                "idleTimeout": {
                    "type": "integer"
                },
                "ipGroup": {
                    "type": "string"
                },
                "ipGroupEnable": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxConnection": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "portRanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbListenerPortRange:ElbListenerPortRange"
                    },
                    "willReplaceOnChanges": true
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "proxyProtocolEnable": {
                    "type": "boolean"
                },
                "quicListenerId": {
                    "type": "string"
                },
                "realIp": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "requestTimeout": {
                    "type": "integer"
                },
                "responseTimeout": {
                    "type": "integer"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "serverCertificate": {
                    "type": "string"
                },
                "sniCertificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sniMatchAlgo": {
                    "type": "string"
                },
                "sslEarlyDataEnable": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tlsCiphersPolicy": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "loadbalancerId",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbListener resources.\n",
                "properties": {
                    "accessPolicy": {
                        "type": "string"
                    },
                    "advancedForwardingEnabled": {
                        "type": "boolean"
                    },
                    "caCertificate": {
                        "type": "string"
                    },
                    "cps": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "defaultPoolId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableMemberRetry": {
                        "type": "boolean"
                    },
                    "enableQuicUpgrade": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDelete": {
                        "type": "boolean"
                    },
                    "forwardEip": {
                        "type": "boolean"
                    },
                    "forwardElb": {
                        "type": "boolean"
                    },
                    "forwardHost": {
                        "type": "boolean"
                    },
                    "forwardPort": {
                        "type": "boolean"
                    },
                    "forwardProto": {
                        "type": "boolean"
                    },
                    "forwardRequestPort": {
                        "type": "boolean"
                    },
                    "forwardTlsCertificate": {
                        "type": "boolean"
                    },
                    "forwardTlsCipher": {
                        "type": "boolean"
                    },
                    "forwardTlsProtocol": {
                        "type": "boolean"
                    },
                    "gzipEnable": {
                        "type": "boolean"
                    },
                    "http2Enable": {
                        "type": "boolean"
                    },
                    "idleTimeout": {
                        "type": "integer"
                    },
                    "ipGroup": {
                        "type": "string"
                    },
                    "ipGroupEnable": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maxConnection": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "portRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbListenerPortRange:ElbListenerPortRange"
                        },
                        "willReplaceOnChanges": true
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "proxyProtocolEnable": {
                        "type": "boolean"
                    },
                    "quicListenerId": {
                        "type": "string"
                    },
                    "realIp": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "requestTimeout": {
                        "type": "integer"
                    },
                    "responseTimeout": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "serverCertificate": {
                        "type": "string"
                    },
                    "sniCertificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sniMatchAlgo": {
                        "type": "string"
                    },
                    "sslEarlyDataEnable": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tlsCiphersPolicy": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbLoadbalancer:ElbLoadbalancer": {
            "properties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated"
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoscalingEnabled": {
                    "type": "boolean"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backendSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bandwidthChargeMode": {
                    "type": "string"
                },
                "bandwidthId": {
                    "type": "string"
                },
                "bandwidthSize": {
                    "type": "integer"
                },
                "chargeMode": {
                    "type": "string"
                },
                "chargingMode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "crossVpcBackend": {
                    "type": "boolean"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "elbVirsubnetType": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "frozenScene": {
                    "type": "string"
                },
                "guaranteed": {
                    "type": "boolean"
                },
                "gwFlavorId": {
                    "type": "string"
                },
                "iptype": {
                    "type": "string"
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4Eip": {
                    "type": "string"
                },
                "ipv4EipId": {
                    "type": "string"
                },
                "ipv4PortId": {
                    "type": "string"
                },
                "ipv4SubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer resides"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6Eip": {
                    "type": "string"
                },
                "ipv6EipId": {
                    "type": "string"
                },
                "ipv6NetworkId": {
                    "type": "string",
                    "description": "the ID of the subnet where the load balancer resides"
                },
                "l4FlavorId": {
                    "type": "string"
                },
                "l7FlavorId": {
                    "type": "string"
                },
                "loadbalancerType": {
                    "type": "string"
                },
                "minL7FlavorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operatingStatus": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sharetype": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                },
                "wafFailureAction": {
                    "type": "string"
                }
            },
            "required": [
                "autoscalingEnabled",
                "availabilityZones",
                "backendSubnets",
                "bandwidthChargeMode",
                "bandwidthId",
                "bandwidthSize",
                "chargeMode",
                "chargingMode",
                "createdAt",
                "crossVpcBackend",
                "elbVirsubnetType",
                "enterpriseProjectId",
                "frozenScene",
                "guaranteed",
                "gwFlavorId",
                "iptype",
                "ipv4Address",
                "ipv4Eip",
                "ipv4EipId",
                "ipv4PortId",
                "ipv6Address",
                "ipv6Eip",
                "ipv6EipId",
                "l4FlavorId",
                "l7FlavorId",
                "loadbalancerType",
                "minL7FlavorId",
                "name",
                "operatingStatus",
                "protectionStatus",
                "publicBorderGroup",
                "region",
                "sharetype",
                "tags",
                "updatedAt",
                "vpcId",
                "wafFailureAction"
            ],
            "inputProperties": {
                "autoPay": {
                    "type": "string",
                    "deprecationMessage": "Deprecated",
                    "willReplaceOnChanges": true
                },
                "autoRenew": {
                    "type": "string"
                },
                "autoscalingEnabled": {
                    "type": "boolean"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "backendSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bandwidthChargeMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidthId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "bandwidthSize": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "chargingMode": {
                    "type": "string"
                },
                "crossVpcBackend": {
                    "type": "boolean"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "iptype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv4Address": {
                    "type": "string"
                },
                "ipv4EipId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ipv4SubnetId": {
                    "type": "string",
                    "description": "the IPv4 subnet ID of the subnet where the load balancer resides"
                },
                "ipv6Address": {
                    "type": "string"
                },
                "ipv6BandwidthId": {
                    "type": "string"
                },
                "ipv6NetworkId": {
                    "type": "string",
                    "description": "the ID of the subnet where the load balancer resides"
                },
                "l4FlavorId": {
                    "type": "string"
                },
                "l7FlavorId": {
                    "type": "string"
                },
                "loadbalancerType": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "minL7FlavorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "periodUnit": {
                    "type": "string"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sharetype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "wafFailureAction": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "availabilityZones"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbLoadbalancer resources.\n",
                "properties": {
                    "autoPay": {
                        "type": "string",
                        "deprecationMessage": "Deprecated",
                        "willReplaceOnChanges": true
                    },
                    "autoRenew": {
                        "type": "string"
                    },
                    "autoscalingEnabled": {
                        "type": "boolean"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "backendSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bandwidthChargeMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "bandwidthSize": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "crossVpcBackend": {
                        "type": "boolean"
                    },
                    "deletionProtectionEnable": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "elbVirsubnetType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "forceDelete": {
                        "type": "boolean"
                    },
                    "frozenScene": {
                        "type": "string"
                    },
                    "guaranteed": {
                        "type": "boolean"
                    },
                    "gwFlavorId": {
                        "type": "string"
                    },
                    "iptype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv4Address": {
                        "type": "string"
                    },
                    "ipv4Eip": {
                        "type": "string"
                    },
                    "ipv4EipId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ipv4PortId": {
                        "type": "string"
                    },
                    "ipv4SubnetId": {
                        "type": "string",
                        "description": "the IPv4 subnet ID of the subnet where the load balancer resides"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "ipv6BandwidthId": {
                        "type": "string"
                    },
                    "ipv6Eip": {
                        "type": "string"
                    },
                    "ipv6EipId": {
                        "type": "string"
                    },
                    "ipv6NetworkId": {
                        "type": "string",
                        "description": "the ID of the subnet where the load balancer resides"
                    },
                    "l4FlavorId": {
                        "type": "string"
                    },
                    "l7FlavorId": {
                        "type": "string"
                    },
                    "loadbalancerType": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "minL7FlavorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingStatus": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sharetype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "wafFailureAction": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbMember:ElbMember": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "operatingStatus": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string"
                },
                "protocolPort": {
                    "type": "integer"
                },
                "reasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbMemberReason:ElbMemberReason"
                    }
                },
                "region": {
                    "type": "string"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbMemberStatus:ElbMemberStatus"
                    }
                },
                "subnetId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "createdAt",
                "instanceId",
                "ipVersion",
                "memberType",
                "name",
                "operatingStatus",
                "poolId",
                "protocolPort",
                "reasons",
                "region",
                "statuses",
                "updatedAt",
                "weight"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocolPort": {
                    "type": "integer"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "address",
                "poolId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbMember resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "string"
                    },
                    "memberType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingStatus": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocolPort": {
                        "type": "integer"
                    },
                    "reasons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbMemberReason:ElbMemberReason"
                        }
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbMemberStatus:ElbMemberStatus"
                        }
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbMonitor:ElbMonitor": {
            "properties": {
                "domainName": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "poolId": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "required": [
                "domainName",
                "interval",
                "maxRetries",
                "poolId",
                "port",
                "protocol",
                "region",
                "statusCode",
                "timeout",
                "urlPath"
            ],
            "inputProperties": {
                "domainName": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "maxRetries": {
                    "type": "integer"
                },
                "poolId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "statusCode": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "urlPath": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "interval",
                "maxRetries",
                "poolId",
                "protocol",
                "timeout"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbMonitor resources.\n",
                "properties": {
                    "domainName": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "integer"
                    },
                    "maxRetries": {
                        "type": "integer"
                    },
                    "poolId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "statusCode": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer"
                    },
                    "urlPath": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbPool:ElbPool": {
            "properties": {
                "anyPortEnable": {
                    "type": "boolean"
                },
                "connectionDrainEnabled": {
                    "type": "boolean"
                },
                "connectionDrainTimeout": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "minimumHealthyMemberCount": {
                    "type": "integer"
                },
                "monitorId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persistence": {
                    "$ref": "#/types/cloudru:index/ElbPoolPersistence:ElbPoolPersistence"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "slowStartDuration": {
                    "type": "integer"
                },
                "slowStartEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "required": [
                "anyPortEnable",
                "connectionDrainEnabled",
                "connectionDrainTimeout",
                "createdAt",
                "enterpriseProjectId",
                "ipVersion",
                "lbMethod",
                "listenerId",
                "loadbalancerId",
                "minimumHealthyMemberCount",
                "monitorId",
                "name",
                "protectionStatus",
                "protocol",
                "publicBorderGroup",
                "region",
                "slowStartDuration",
                "slowStartEnabled",
                "type",
                "updatedAt",
                "vpcId"
            ],
            "inputProperties": {
                "anyPortEnable": {
                    "type": "boolean"
                },
                "connectionDrainEnabled": {
                    "type": "boolean"
                },
                "connectionDrainTimeout": {
                    "type": "integer"
                },
                "deletionProtectionEnable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enableForceNew": {
                    "type": "string"
                },
                "ipVersion": {
                    "type": "string"
                },
                "lbMethod": {
                    "type": "string"
                },
                "listenerId": {
                    "type": "string"
                },
                "loadbalancerId": {
                    "type": "string"
                },
                "minimumHealthyMemberCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "persistence": {
                    "$ref": "#/types/cloudru:index/ElbPoolPersistence:ElbPoolPersistence"
                },
                "protectionReason": {
                    "type": "string"
                },
                "protectionStatus": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "publicBorderGroup": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "slowStartDuration": {
                    "type": "integer"
                },
                "slowStartEnabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "vpcId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "lbMethod",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbPool resources.\n",
                "properties": {
                    "anyPortEnable": {
                        "type": "boolean"
                    },
                    "connectionDrainEnabled": {
                        "type": "boolean"
                    },
                    "connectionDrainTimeout": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deletionProtectionEnable": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enableForceNew": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "minimumHealthyMemberCount": {
                        "type": "integer"
                    },
                    "monitorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "persistence": {
                        "$ref": "#/types/cloudru:index/ElbPoolPersistence:ElbPoolPersistence"
                    },
                    "protectionReason": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "slowStartDuration": {
                        "type": "integer"
                    },
                    "slowStartEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/elbSecurityPolicy:ElbSecurityPolicy": {
            "properties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the cipher suite list of the security policy."
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the ELB security policy"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the Enterprise router belongs."
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ElbSecurityPolicyListener:ElbSecurityPolicyListener"
                    },
                    "description": "The listener which the security policy associated with."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the ELB security policy name."
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the TSL protocol list which the security policy select."
                },
                "region": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "ciphers",
                "createdAt",
                "description",
                "enterpriseProjectId",
                "listeners",
                "name",
                "protocols",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the cipher suite list of the security policy."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies the description of the ELB security policy"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "Specifies the enterprise project ID to which the Enterprise router belongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the ELB security policy name."
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the TSL protocol list which the security policy select."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ciphers",
                "protocols"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ElbSecurityPolicy resources.\n",
                "properties": {
                    "ciphers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the cipher suite list of the security policy."
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies the description of the ELB security policy"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "Specifies the enterprise project ID to which the Enterprise router belongs.",
                        "willReplaceOnChanges": true
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ElbSecurityPolicyListener:ElbSecurityPolicyListener"
                        },
                        "description": "The listener which the security policy associated with."
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the ELB security policy name."
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the TSL protocol list which the security policy select."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsApplication:FgsApplication": {
            "properties": {
                "agencyName": {
                    "type": "string",
                    "description": "The agency name used by the application."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application."
                },
                "name": {
                    "type": "string",
                    "description": "The application name"
                },
                "params": {
                    "type": "string",
                    "description": "The template parameters, in JSON format."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application is located."
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/FgsApplicationRepository:FgsApplicationRepository"
                    },
                    "description": "The repository information."
                },
                "stackId": {
                    "type": "string",
                    "description": "The ID of the stack where the application is deployed."
                },
                "stackResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/FgsApplicationStackResource:FgsApplicationStackResource"
                    },
                    "description": "The list of the stack resources information."
                },
                "status": {
                    "type": "string",
                    "description": "The application status."
                },
                "templateId": {
                    "type": "string",
                    "description": "The ID of the template used by the application."
                }
            },
            "required": [
                "name",
                "region",
                "repositories",
                "stackId",
                "stackResources",
                "status"
            ],
            "inputProperties": {
                "agencyName": {
                    "type": "string",
                    "description": "The agency name used by the application.",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the application.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The application name",
                    "willReplaceOnChanges": true
                },
                "params": {
                    "type": "string",
                    "description": "The template parameters, in JSON format.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the application is located.",
                    "willReplaceOnChanges": true
                },
                "templateId": {
                    "type": "string",
                    "description": "The ID of the template used by the application.",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsApplication resources.\n",
                "properties": {
                    "agencyName": {
                        "type": "string",
                        "description": "The agency name used by the application.",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the application.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The application name",
                        "willReplaceOnChanges": true
                    },
                    "params": {
                        "type": "string",
                        "description": "The template parameters, in JSON format.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the application is located.",
                        "willReplaceOnChanges": true
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/FgsApplicationRepository:FgsApplicationRepository"
                        },
                        "description": "The repository information."
                    },
                    "stackId": {
                        "type": "string",
                        "description": "The ID of the stack where the application is deployed."
                    },
                    "stackResources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/FgsApplicationStackResource:FgsApplicationStackResource"
                        },
                        "description": "The list of the stack resources information."
                    },
                    "status": {
                        "type": "string",
                        "description": "The application status."
                    },
                    "templateId": {
                        "type": "string",
                        "description": "The ID of the template used by the application.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsAsyncInvokeConfiguration:FgsAsyncInvokeConfiguration": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the asynchronous invocation."
                },
                "enableAsyncStatusLog": {
                    "type": "boolean",
                    "description": "Whether to enable asynchronous invocation status persistence."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The function URN to which the asynchronous invocation belongs."
                },
                "maxAsyncEventAgeInSeconds": {
                    "type": "integer",
                    "description": "The maximum validity period of a message."
                },
                "maxAsyncRetryAttempts": {
                    "type": "integer",
                    "description": "The maximum number of retry attempts to be made if asynchronous invocation fails."
                },
                "onFailure": {
                    "$ref": "#/types/cloudru:index/FgsAsyncInvokeConfigurationOnFailure:FgsAsyncInvokeConfigurationOnFailure",
                    "description": "The target to be invoked when a function fails to be executed due to a system error or an\ninternal error."
                },
                "onSuccess": {
                    "$ref": "#/types/cloudru:index/FgsAsyncInvokeConfigurationOnSuccess:FgsAsyncInvokeConfigurationOnSuccess",
                    "description": "The target to be invoked when a function is successfully executed."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to configure the asynchronous invocation."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the asynchronous invocation."
                }
            },
            "required": [
                "createdAt",
                "functionUrn",
                "maxAsyncEventAgeInSeconds",
                "maxAsyncRetryAttempts",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "enableAsyncStatusLog": {
                    "type": "boolean",
                    "description": "Whether to enable asynchronous invocation status persistence."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The function URN to which the asynchronous invocation belongs.",
                    "willReplaceOnChanges": true
                },
                "maxAsyncEventAgeInSeconds": {
                    "type": "integer",
                    "description": "The maximum validity period of a message."
                },
                "maxAsyncRetryAttempts": {
                    "type": "integer",
                    "description": "The maximum number of retry attempts to be made if asynchronous invocation fails."
                },
                "onFailure": {
                    "$ref": "#/types/cloudru:index/FgsAsyncInvokeConfigurationOnFailure:FgsAsyncInvokeConfigurationOnFailure",
                    "description": "The target to be invoked when a function fails to be executed due to a system error or an\ninternal error."
                },
                "onSuccess": {
                    "$ref": "#/types/cloudru:index/FgsAsyncInvokeConfigurationOnSuccess:FgsAsyncInvokeConfigurationOnSuccess",
                    "description": "The target to be invoked when a function is successfully executed."
                },
                "region": {
                    "type": "string",
                    "description": "The region in which to configure the asynchronous invocation.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "functionUrn",
                "maxAsyncEventAgeInSeconds",
                "maxAsyncRetryAttempts"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsAsyncInvokeConfiguration resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the asynchronous invocation."
                    },
                    "enableAsyncStatusLog": {
                        "type": "boolean",
                        "description": "Whether to enable asynchronous invocation status persistence."
                    },
                    "functionUrn": {
                        "type": "string",
                        "description": "The function URN to which the asynchronous invocation belongs.",
                        "willReplaceOnChanges": true
                    },
                    "maxAsyncEventAgeInSeconds": {
                        "type": "integer",
                        "description": "The maximum validity period of a message."
                    },
                    "maxAsyncRetryAttempts": {
                        "type": "integer",
                        "description": "The maximum number of retry attempts to be made if asynchronous invocation fails."
                    },
                    "onFailure": {
                        "$ref": "#/types/cloudru:index/FgsAsyncInvokeConfigurationOnFailure:FgsAsyncInvokeConfigurationOnFailure",
                        "description": "The target to be invoked when a function fails to be executed due to a system error or an\ninternal error."
                    },
                    "onSuccess": {
                        "$ref": "#/types/cloudru:index/FgsAsyncInvokeConfigurationOnSuccess:FgsAsyncInvokeConfigurationOnSuccess",
                        "description": "The target to be invoked when a function is successfully executed."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which to configure the asynchronous invocation.",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the asynchronous invocation."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsDependencyVersion:FgsDependencyVersion": {
            "properties": {
                "dependencyId": {
                    "type": "string",
                    "description": "The ID of the dependency package corresponding to the version."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the custom dependency version."
                },
                "etag": {
                    "type": "string",
                    "description": "The unique ID of the dependency."
                },
                "link": {
                    "type": "string",
                    "description": "The OBS bucket path where the dependency package is located."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom dependency package to which the version belongs."
                },
                "owner": {
                    "type": "string",
                    "description": "The dependency owner, public indicates a public dependency."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the custom dependency version is located."
                },
                "runtime": {
                    "type": "string",
                    "description": "The runtime of the custom dependency package version."
                },
                "size": {
                    "type": "integer",
                    "description": "The dependency size, in bytes."
                },
                "version": {
                    "type": "integer",
                    "description": "The dependency package version."
                },
                "versionId": {
                    "type": "string",
                    "description": "The ID of the dependency package version."
                }
            },
            "required": [
                "dependencyId",
                "description",
                "etag",
                "link",
                "name",
                "owner",
                "region",
                "runtime",
                "size",
                "version",
                "versionId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the custom dependency version.",
                    "willReplaceOnChanges": true
                },
                "link": {
                    "type": "string",
                    "description": "The OBS bucket path where the dependency package is located.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the custom dependency package to which the version belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the custom dependency version is located.",
                    "willReplaceOnChanges": true
                },
                "runtime": {
                    "type": "string",
                    "description": "The runtime of the custom dependency package version.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "link",
                "runtime"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsDependencyVersion resources.\n",
                "properties": {
                    "dependencyId": {
                        "type": "string",
                        "description": "The ID of the dependency package corresponding to the version."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the custom dependency version.",
                        "willReplaceOnChanges": true
                    },
                    "etag": {
                        "type": "string",
                        "description": "The unique ID of the dependency."
                    },
                    "link": {
                        "type": "string",
                        "description": "The OBS bucket path where the dependency package is located.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the custom dependency package to which the version belongs.",
                        "willReplaceOnChanges": true
                    },
                    "owner": {
                        "type": "string",
                        "description": "The dependency owner, public indicates a public dependency."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the custom dependency version is located.",
                        "willReplaceOnChanges": true
                    },
                    "runtime": {
                        "type": "string",
                        "description": "The runtime of the custom dependency package version.",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "The dependency size, in bytes."
                    },
                    "version": {
                        "type": "integer",
                        "description": "The dependency package version."
                    },
                    "versionId": {
                        "type": "string",
                        "description": "The ID of the dependency package version."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsFunctionEvent:FgsFunctionEvent": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The function event content."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the function to which the event blongs."
                },
                "name": {
                    "type": "string",
                    "description": "The function event name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function event is located."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update (UTC) time of the function event, in RFC3339 format."
                }
            },
            "required": [
                "content",
                "functionUrn",
                "name",
                "region",
                "updatedAt"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The function event content."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the function to which the event blongs.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The function event name."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function event is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "content",
                "functionUrn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsFunctionEvent resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The function event content."
                    },
                    "functionUrn": {
                        "type": "string",
                        "description": "The URN of the function to which the event blongs.",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The function event name."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the function event is located.",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update (UTC) time of the function event, in RFC3339 format."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsFunctionTopping:FgsFunctionTopping": {
            "properties": {
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the function to be topped."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function is located."
                }
            },
            "required": [
                "functionUrn",
                "region"
            ],
            "inputProperties": {
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the function to be topped.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function is located.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "functionUrn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsFunctionTopping resources.\n",
                "properties": {
                    "functionUrn": {
                        "type": "string",
                        "description": "The URN of the function to be topped.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the function is located.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsFunctionTrigger:FgsFunctionTrigger": {
            "properties": {
                "cascadeDeleteEgSubscription": {
                    "type": "boolean",
                    "description": "Whether to cascade delete the related EG event subscription of the function trigger."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation time of the function trigger."
                },
                "eventData": {
                    "type": "string",
                    "description": "The detailed configuration of the function trigger event, in JSON format."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The function URN to which the function trigger belongs."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function trigger is located."
                },
                "status": {
                    "type": "string",
                    "description": "The expected status of the function trigger."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the function trigger."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The latest update time of the function trigger."
                }
            },
            "required": [
                "createdAt",
                "eventData",
                "functionUrn",
                "region",
                "status",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "cascadeDeleteEgSubscription": {
                    "type": "boolean",
                    "description": "Whether to cascade delete the related EG event subscription of the function trigger."
                },
                "eventData": {
                    "type": "string",
                    "description": "The detailed configuration of the function trigger event, in JSON format."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The function URN to which the function trigger belongs.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function trigger is located.",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "The expected status of the function trigger."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the function trigger.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "eventData",
                "functionUrn",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsFunctionTrigger resources.\n",
                "properties": {
                    "cascadeDeleteEgSubscription": {
                        "type": "boolean",
                        "description": "Whether to cascade delete the related EG event subscription of the function trigger."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation time of the function trigger."
                    },
                    "eventData": {
                        "type": "string",
                        "description": "The detailed configuration of the function trigger event, in JSON format."
                    },
                    "functionUrn": {
                        "type": "string",
                        "description": "The function URN to which the function trigger belongs.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the function trigger is located.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The expected status of the function trigger."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the function trigger.",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The latest update time of the function trigger."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsFunctionTriggerStatusAction:FgsFunctionTriggerStatusAction": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "eventData": {
                    "type": "string",
                    "description": "The event data of the trigger."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the function."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function trigger is located."
                },
                "triggerId": {
                    "type": "string",
                    "description": "The trigger ID."
                },
                "triggerStatus": {
                    "type": "string",
                    "description": "The status of the trigger. Valid values are ACTIVE and DISABLED."
                },
                "triggerTypeCode": {
                    "type": "string",
                    "description": "The trigger type code."
                }
            },
            "required": [
                "eventData",
                "functionUrn",
                "region",
                "triggerId",
                "triggerStatus",
                "triggerTypeCode"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "eventData": {
                    "type": "string",
                    "description": "The event data of the trigger."
                },
                "functionUrn": {
                    "type": "string",
                    "description": "The URN of the function."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the function trigger is located.",
                    "willReplaceOnChanges": true
                },
                "triggerId": {
                    "type": "string",
                    "description": "The trigger ID."
                },
                "triggerStatus": {
                    "type": "string",
                    "description": "The status of the trigger. Valid values are ACTIVE and DISABLED."
                },
                "triggerTypeCode": {
                    "type": "string",
                    "description": "The trigger type code."
                }
            },
            "requiredInputs": [
                "eventData",
                "functionUrn",
                "triggerId",
                "triggerStatus",
                "triggerTypeCode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsFunctionTriggerStatusAction resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "eventData": {
                        "type": "string",
                        "description": "The event data of the trigger."
                    },
                    "functionUrn": {
                        "type": "string",
                        "description": "The URN of the function."
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the function trigger is located.",
                        "willReplaceOnChanges": true
                    },
                    "triggerId": {
                        "type": "string",
                        "description": "The trigger ID."
                    },
                    "triggerStatus": {
                        "type": "string",
                        "description": "The status of the trigger. Valid values are ACTIVE and DISABLED."
                    },
                    "triggerTypeCode": {
                        "type": "string",
                        "description": "The trigger type code."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/fgsLtsLogEnable:FgsLtsLogEnable": {
            "properties": {
                "region": {
                    "type": "string",
                    "description": "The region where the LTS log function is to be enabled."
                }
            },
            "required": [
                "region"
            ],
            "inputProperties": {
                "region": {
                    "type": "string",
                    "description": "The region where the LTS log function is to be enabled.",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FgsLtsLogEnable resources.\n",
                "properties": {
                    "region": {
                        "type": "string",
                        "description": "The region where the LTS log function is to be enabled.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/gesGraph:GesGraph": {
            "properties": {
                "azCode": {
                    "type": "string",
                    "description": "AZ code"
                },
                "cpuArch": {
                    "type": "string",
                    "description": "Graph instance's CPU architecture type."
                },
                "cryptAlgorithm": {
                    "type": "string",
                    "description": "Graph instance cryptography algorithm."
                },
                "enableFullTextIndex": {
                    "type": "boolean",
                    "description": "Whether to enable full-text index control for the created graph."
                },
                "enableHttps": {
                    "type": "boolean",
                    "description": "Whether to enable the security mode. This mode may damage GES performance greatly."
                },
                "enableHyg": {
                    "type": "boolean",
                    "description": "Whether to enable HyG for the graph. This parameter is available for database edition graphs only."
                },
                "enableMultiAz": {
                    "type": "boolean",
                    "description": "Whether the created graph supports the cross-AZ mode. The default value is false."
                },
                "enableRbac": {
                    "type": "boolean",
                    "description": "Whether to enable granular permission control for the created graph."
                },
                "encryption": {
                    "$ref": "#/types/cloudru:index/GesGraphEncryption:GesGraphEncryption",
                    "description": "Whether to enable data encryption The value can be true or false."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID."
                },
                "graphSizeTypeIndex": {
                    "type": "string",
                    "description": "Graph size type index."
                },
                "keepBackup": {
                    "type": "boolean",
                    "description": "Whether to retain the backups of a graph after it is deleted."
                },
                "ltsOperationTrace": {
                    "$ref": "#/types/cloudru:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace"
                },
                "name": {
                    "type": "string",
                    "description": "The graph name."
                },
                "privateIp": {
                    "type": "string",
                    "description": "Floating IP address of a graph instance."
                },
                "productType": {
                    "type": "string",
                    "description": "Graph product type"
                },
                "publicIp": {
                    "$ref": "#/types/cloudru:index/GesGraphPublicIp:GesGraphPublicIp",
                    "description": "The information about public IP."
                },
                "region": {
                    "type": "string"
                },
                "replication": {
                    "type": "integer"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID."
                },
                "status": {
                    "type": "string",
                    "description": "Status of a graph."
                },
                "subnetId": {
                    "type": "string",
                    "description": "The subnet ID."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the graph."
                },
                "trafficIpLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Physical addresses of a graph instance for access from private networks."
                },
                "vertexIdType": {
                    "$ref": "#/types/cloudru:index/GesGraphVertexIdType:GesGraphVertexIdType",
                    "description": "ID type of vertices. This parameter is mandatory only for database edition graphs."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID."
                }
            },
            "required": [
                "azCode",
                "cpuArch",
                "cryptAlgorithm",
                "enableFullTextIndex",
                "enableHttps",
                "enableHyg",
                "enableMultiAz",
                "enableRbac",
                "encryption",
                "enterpriseProjectId",
                "graphSizeTypeIndex",
                "keepBackup",
                "ltsOperationTrace",
                "name",
                "privateIp",
                "productType",
                "publicIp",
                "region",
                "replication",
                "securityGroupId",
                "status",
                "subnetId",
                "tags",
                "trafficIpLists",
                "vertexIdType",
                "vpcId"
            ],
            "inputProperties": {
                "cpuArch": {
                    "type": "string",
                    "description": "Graph instance's CPU architecture type.",
                    "willReplaceOnChanges": true
                },
                "cryptAlgorithm": {
                    "type": "string",
                    "description": "Graph instance cryptography algorithm.",
                    "willReplaceOnChanges": true
                },
                "enableFullTextIndex": {
                    "type": "boolean",
                    "description": "Whether to enable full-text index control for the created graph.",
                    "willReplaceOnChanges": true
                },
                "enableHttps": {
                    "type": "boolean",
                    "description": "Whether to enable the security mode. This mode may damage GES performance greatly.",
                    "willReplaceOnChanges": true
                },
                "enableHyg": {
                    "type": "boolean",
                    "description": "Whether to enable HyG for the graph. This parameter is available for database edition graphs only.",
                    "willReplaceOnChanges": true
                },
                "enableMultiAz": {
                    "type": "boolean",
                    "description": "Whether the created graph supports the cross-AZ mode. The default value is false.",
                    "willReplaceOnChanges": true
                },
                "enableRbac": {
                    "type": "boolean",
                    "description": "Whether to enable granular permission control for the created graph.",
                    "willReplaceOnChanges": true
                },
                "encryption": {
                    "$ref": "#/types/cloudru:index/GesGraphEncryption:GesGraphEncryption",
                    "description": "Whether to enable data encryption The value can be true or false.",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID.",
                    "willReplaceOnChanges": true
                },
                "graphSizeTypeIndex": {
                    "type": "string",
                    "description": "Graph size type index."
                },
                "keepBackup": {
                    "type": "boolean",
                    "description": "Whether to retain the backups of a graph after it is deleted.",
                    "willReplaceOnChanges": true
                },
                "ltsOperationTrace": {
                    "$ref": "#/types/cloudru:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The graph name.",
                    "willReplaceOnChanges": true
                },
                "productType": {
                    "type": "string",
                    "description": "Graph product type",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "$ref": "#/types/cloudru:index/GesGraphPublicIp:GesGraphPublicIp",
                    "description": "The information about public IP.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group ID.",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "The subnet ID.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The key/value pairs to associate with the graph.",
                    "willReplaceOnChanges": true
                },
                "vertexIdType": {
                    "$ref": "#/types/cloudru:index/GesGraphVertexIdType:GesGraphVertexIdType",
                    "description": "ID type of vertices. This parameter is mandatory only for database edition graphs.",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "The VPC ID.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cryptAlgorithm",
                "enableHttps",
                "graphSizeTypeIndex",
                "securityGroupId",
                "subnetId",
                "vpcId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GesGraph resources.\n",
                "properties": {
                    "azCode": {
                        "type": "string",
                        "description": "AZ code"
                    },
                    "cpuArch": {
                        "type": "string",
                        "description": "Graph instance's CPU architecture type.",
                        "willReplaceOnChanges": true
                    },
                    "cryptAlgorithm": {
                        "type": "string",
                        "description": "Graph instance cryptography algorithm.",
                        "willReplaceOnChanges": true
                    },
                    "enableFullTextIndex": {
                        "type": "boolean",
                        "description": "Whether to enable full-text index control for the created graph.",
                        "willReplaceOnChanges": true
                    },
                    "enableHttps": {
                        "type": "boolean",
                        "description": "Whether to enable the security mode. This mode may damage GES performance greatly.",
                        "willReplaceOnChanges": true
                    },
                    "enableHyg": {
                        "type": "boolean",
                        "description": "Whether to enable HyG for the graph. This parameter is available for database edition graphs only.",
                        "willReplaceOnChanges": true
                    },
                    "enableMultiAz": {
                        "type": "boolean",
                        "description": "Whether the created graph supports the cross-AZ mode. The default value is false.",
                        "willReplaceOnChanges": true
                    },
                    "enableRbac": {
                        "type": "boolean",
                        "description": "Whether to enable granular permission control for the created graph.",
                        "willReplaceOnChanges": true
                    },
                    "encryption": {
                        "$ref": "#/types/cloudru:index/GesGraphEncryption:GesGraphEncryption",
                        "description": "Whether to enable data encryption The value can be true or false.",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID.",
                        "willReplaceOnChanges": true
                    },
                    "graphSizeTypeIndex": {
                        "type": "string",
                        "description": "Graph size type index."
                    },
                    "keepBackup": {
                        "type": "boolean",
                        "description": "Whether to retain the backups of a graph after it is deleted.",
                        "willReplaceOnChanges": true
                    },
                    "ltsOperationTrace": {
                        "$ref": "#/types/cloudru:index/GesGraphLtsOperationTrace:GesGraphLtsOperationTrace",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The graph name.",
                        "willReplaceOnChanges": true
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "Floating IP address of a graph instance."
                    },
                    "productType": {
                        "type": "string",
                        "description": "Graph product type",
                        "willReplaceOnChanges": true
                    },
                    "publicIp": {
                        "$ref": "#/types/cloudru:index/GesGraphPublicIp:GesGraphPublicIp",
                        "description": "The information about public IP.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer"
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group ID.",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of a graph."
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "The subnet ID.",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The key/value pairs to associate with the graph.",
                        "willReplaceOnChanges": true
                    },
                    "trafficIpLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Physical addresses of a graph instance for access from private networks."
                    },
                    "vertexIdType": {
                        "$ref": "#/types/cloudru:index/GesGraphVertexIdType:GesGraphVertexIdType",
                        "description": "ID type of vertices. This parameter is mandatory only for database edition graphs.",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The VPC ID.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/identityGroupMembershipV3:IdentityGroupMembershipV3": {
            "properties": {
                "group": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "group",
                "users"
            ],
            "inputProperties": {
                "group": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "group",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroupMembershipV3 resources.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/identityGroupV3:IdentityGroupV3": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroupV3 resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/identityRoleAssignmentV3:IdentityRoleAssignmentV3": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "roleId": {
                    "type": "string"
                }
            },
            "required": [
                "groupId",
                "roleId"
            ],
            "inputProperties": {
                "domainId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "groupId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityRoleAssignmentV3 resources.\n",
                "properties": {
                    "domainId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "groupId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "roleId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/identityUserV3:IdentityUserV3": {
            "properties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "passwordStrength": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "required": [
                "accessType",
                "createTime",
                "externalIdentityType",
                "lastLogin",
                "name",
                "passwordStrength"
            ],
            "inputProperties": {
                "accessType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "externalIdentityId": {
                    "type": "string"
                },
                "externalIdentityType": {
                    "type": "string"
                },
                "loginProtectVerificationMethod": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "phone": {
                    "type": "string"
                },
                "pwdReset": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityUserV3 resources.\n",
                "properties": {
                    "accessType": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "externalIdentityId": {
                        "type": "string"
                    },
                    "externalIdentityType": {
                        "type": "string"
                    },
                    "lastLogin": {
                        "type": "string"
                    },
                    "loginProtectVerificationMethod": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "passwordStrength": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pwdReset": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/kpsKeypairAssociate:KpsKeypairAssociate": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "keypairName": {
                    "type": "string",
                    "description": "Specifies the name of SSH keypair."
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to query the resource."
                },
                "server": {
                    "$ref": "#/types/cloudru:index/KpsKeypairAssociateServer:KpsKeypairAssociateServer",
                    "description": "Specifies the ECS information."
                }
            },
            "required": [
                "keypairName",
                "region",
                "server"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "keypairName": {
                    "type": "string",
                    "description": "Specifies the name of SSH keypair."
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to query the resource."
                },
                "server": {
                    "$ref": "#/types/cloudru:index/KpsKeypairAssociateServer:KpsKeypairAssociateServer",
                    "description": "Specifies the ECS information."
                }
            },
            "requiredInputs": [
                "keypairName",
                "server"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KpsKeypairAssociate resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "keypairName": {
                        "type": "string",
                        "description": "Specifies the name of SSH keypair."
                    },
                    "region": {
                        "type": "string",
                        "description": "Specifies the region in which to query the resource."
                    },
                    "server": {
                        "$ref": "#/types/cloudru:index/KpsKeypairAssociateServer:KpsKeypairAssociateServer",
                        "description": "Specifies the ECS information."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/kpsKeypairDisassociate:KpsKeypairDisassociate": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to query the resource."
                },
                "server": {
                    "$ref": "#/types/cloudru:index/KpsKeypairDisassociateServer:KpsKeypairDisassociateServer",
                    "description": "Specifies the ECS information."
                }
            },
            "required": [
                "region",
                "server"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "Specifies the region in which to query the resource."
                },
                "server": {
                    "$ref": "#/types/cloudru:index/KpsKeypairDisassociateServer:KpsKeypairDisassociateServer",
                    "description": "Specifies the ECS information."
                }
            },
            "requiredInputs": [
                "server"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KpsKeypairDisassociate resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "Specifies the region in which to query the resource."
                    },
                    "server": {
                        "$ref": "#/types/cloudru:index/KpsKeypairDisassociateServer:KpsKeypairDisassociateServer",
                        "description": "Specifies the ECS information."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/networkingEipAssociate:NetworkingEipAssociate": {
            "properties": {
                "fixedIp": {
                    "type": "string"
                },
                "macAddress": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "portId": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "publicIpv6": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "fixedIp",
                "macAddress",
                "networkId",
                "portId",
                "publicIp",
                "publicIpv6",
                "region",
                "status"
            ],
            "inputProperties": {
                "fixedIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "portId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "publicIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "publicIp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkingEipAssociate resources.\n",
                "properties": {
                    "fixedIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "portId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "publicIpv6": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/obsBucketAcl:ObsBucketAcl": {
            "properties": {
                "accountPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission"
                    },
                    "description": "Specifies the account permissions."
                },
                "bucket": {
                    "type": "string",
                    "description": "Specifies the name of the bucket to which to set the acl."
                },
                "logDeliveryUserPermission": {
                    "$ref": "#/types/cloudru:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission",
                    "description": "Specifies the log delivery user permission."
                },
                "ownerPermission": {
                    "$ref": "#/types/cloudru:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission",
                    "description": "Specifies the bucket owner permission."
                },
                "publicPermission": {
                    "$ref": "#/types/cloudru:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission",
                    "description": "Specifies the public permission."
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "bucket",
                "ownerPermission",
                "region"
            ],
            "inputProperties": {
                "accountPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission"
                    },
                    "description": "Specifies the account permissions."
                },
                "bucket": {
                    "type": "string",
                    "description": "Specifies the name of the bucket to which to set the acl.",
                    "willReplaceOnChanges": true
                },
                "logDeliveryUserPermission": {
                    "$ref": "#/types/cloudru:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission",
                    "description": "Specifies the log delivery user permission."
                },
                "ownerPermission": {
                    "$ref": "#/types/cloudru:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission",
                    "description": "Specifies the bucket owner permission."
                },
                "publicPermission": {
                    "$ref": "#/types/cloudru:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission",
                    "description": "Specifies the public permission."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "bucket"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObsBucketAcl resources.\n",
                "properties": {
                    "accountPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/ObsBucketAclAccountPermission:ObsBucketAclAccountPermission"
                        },
                        "description": "Specifies the account permissions."
                    },
                    "bucket": {
                        "type": "string",
                        "description": "Specifies the name of the bucket to which to set the acl.",
                        "willReplaceOnChanges": true
                    },
                    "logDeliveryUserPermission": {
                        "$ref": "#/types/cloudru:index/ObsBucketAclLogDeliveryUserPermission:ObsBucketAclLogDeliveryUserPermission",
                        "description": "Specifies the log delivery user permission."
                    },
                    "ownerPermission": {
                        "$ref": "#/types/cloudru:index/ObsBucketAclOwnerPermission:ObsBucketAclOwnerPermission",
                        "description": "Specifies the bucket owner permission."
                    },
                    "publicPermission": {
                        "$ref": "#/types/cloudru:index/ObsBucketAclPublicPermission:ObsBucketAclPublicPermission",
                        "description": "Specifies the public permission."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/sfsTurboDataTask:SfsTurboDataTask": {
            "properties": {
                "destPrefix": {
                    "type": "string"
                },
                "destTarget": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "srcPrefix": {
                    "type": "string"
                },
                "srcTarget": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "destTarget",
                "endTime",
                "message",
                "region",
                "shareId",
                "srcTarget",
                "startTime",
                "status",
                "type"
            ],
            "inputProperties": {
                "destPrefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "destTarget": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "srcPrefix": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "srcTarget": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destTarget",
                "shareId",
                "srcTarget",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDataTask resources.\n",
                "properties": {
                    "destPrefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "destTarget": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "srcPrefix": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "srcTarget": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/sfsTurboDir:SfsTurboDir": {
            "properties": {
                "gid": {
                    "type": "integer",
                    "description": "Specifies the group ID of the SFS Turbo directory."
                },
                "mode": {
                    "type": "integer",
                    "description": "Specifies the SFS Turbo directory permissions."
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of SFS Turbo directory."
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID."
                },
                "uid": {
                    "type": "integer",
                    "description": "Specifies the user ID of the SFS Turbo directory."
                }
            },
            "required": [
                "path",
                "region",
                "shareId"
            ],
            "inputProperties": {
                "gid": {
                    "type": "integer",
                    "description": "Specifies the group ID of the SFS Turbo directory.",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "integer",
                    "description": "Specifies the SFS Turbo directory permissions.",
                    "willReplaceOnChanges": true
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of SFS Turbo directory.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID.",
                    "willReplaceOnChanges": true
                },
                "uid": {
                    "type": "integer",
                    "description": "Specifies the user ID of the SFS Turbo directory.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "path",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDir resources.\n",
                "properties": {
                    "gid": {
                        "type": "integer",
                        "description": "Specifies the group ID of the SFS Turbo directory.",
                        "willReplaceOnChanges": true
                    },
                    "mode": {
                        "type": "integer",
                        "description": "Specifies the SFS Turbo directory permissions.",
                        "willReplaceOnChanges": true
                    },
                    "path": {
                        "type": "string",
                        "description": "Specifies the valid full path of SFS Turbo directory.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "description": "Specifies the SFS Turbo ID.",
                        "willReplaceOnChanges": true
                    },
                    "uid": {
                        "type": "integer",
                        "description": "Specifies the user ID of the SFS Turbo directory.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/sfsTurboDirQuota:SfsTurboDirQuota": {
            "properties": {
                "capacity": {
                    "type": "integer",
                    "description": "Specifies the size of the directory."
                },
                "inode": {
                    "type": "integer",
                    "description": "Specifies the maximum number of inodes allowed in the directory."
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of an existing directory."
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID."
                },
                "usedCapacity": {
                    "type": "integer",
                    "description": "Specifies the size of the used directory."
                },
                "usedInode": {
                    "type": "integer",
                    "description": "Specifies the number of used inodes in the directory."
                }
            },
            "required": [
                "path",
                "region",
                "shareId",
                "usedCapacity",
                "usedInode"
            ],
            "inputProperties": {
                "capacity": {
                    "type": "integer",
                    "description": "Specifies the size of the directory."
                },
                "inode": {
                    "type": "integer",
                    "description": "Specifies the maximum number of inodes allowed in the directory."
                },
                "path": {
                    "type": "string",
                    "description": "Specifies the valid full path of an existing directory.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "description": "Specifies the SFS Turbo ID.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "path",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDirQuota resources.\n",
                "properties": {
                    "capacity": {
                        "type": "integer",
                        "description": "Specifies the size of the directory."
                    },
                    "inode": {
                        "type": "integer",
                        "description": "Specifies the maximum number of inodes allowed in the directory."
                    },
                    "path": {
                        "type": "string",
                        "description": "Specifies the valid full path of an existing directory.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "description": "Specifies the SFS Turbo ID.",
                        "willReplaceOnChanges": true
                    },
                    "usedCapacity": {
                        "type": "integer",
                        "description": "Specifies the size of the used directory."
                    },
                    "usedInode": {
                        "type": "integer",
                        "description": "Specifies the number of used inodes in the directory."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/sfsTurboDuTask:SfsTurboDuTask": {
            "properties": {
                "beginTime": {
                    "type": "string"
                },
                "dirUsages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/SfsTurboDuTaskDirUsage:SfsTurboDuTaskDirUsage"
                    }
                },
                "endTime": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "beginTime",
                "dirUsages",
                "endTime",
                "path",
                "region",
                "shareId",
                "status"
            ],
            "inputProperties": {
                "path": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "path",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboDuTask resources.\n",
                "properties": {
                    "beginTime": {
                        "type": "string"
                    },
                    "dirUsages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/SfsTurboDuTaskDirUsage:SfsTurboDuTaskDirUsage"
                        }
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/sfsTurboObsTarget:SfsTurboObsTarget": {
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deleteDataInFileSystem": {
                    "type": "boolean"
                },
                "fileSystemPath": {
                    "type": "string"
                },
                "obs": {
                    "$ref": "#/types/cloudru:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs"
                },
                "region": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "fileSystemPath",
                "obs",
                "region",
                "shareId",
                "status"
            ],
            "inputProperties": {
                "deleteDataInFileSystem": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "fileSystemPath": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "obs": {
                    "$ref": "#/types/cloudru:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs"
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fileSystemPath",
                "obs",
                "shareId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboObsTarget resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "deleteDataInFileSystem": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "fileSystemPath": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "obs": {
                        "$ref": "#/types/cloudru:index/SfsTurboObsTargetObs:SfsTurboObsTargetObs"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/sfsTurboPermRule:SfsTurboPermRule": {
            "properties": {
                "ipCidr": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "rwType": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                }
            },
            "required": [
                "ipCidr",
                "region",
                "rwType",
                "shareId",
                "userType"
            ],
            "inputProperties": {
                "ipCidr": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "rwType": {
                    "type": "string"
                },
                "shareId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "userType": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "ipCidr",
                "rwType",
                "shareId",
                "userType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SfsTurboPermRule resources.\n",
                "properties": {
                    "ipCidr": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "rwType": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/smnMessageDetection:SmnMessageDetection": {
            "properties": {
                "enableForceNew": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Specifies the endpoint address to be detected."
                },
                "extension": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies the extended key/value for subscriptions over HTTP or HTTPS."
                },
                "protocol": {
                    "type": "string",
                    "description": "Specifies the protocol type."
                },
                "region": {
                    "type": "string"
                },
                "result": {
                    "type": "string",
                    "description": "The message detection result."
                },
                "topicUrn": {
                    "type": "string",
                    "description": "Specifies the resource identifier of a topic."
                }
            },
            "required": [
                "endpoint",
                "protocol",
                "region",
                "result",
                "topicUrn"
            ],
            "inputProperties": {
                "enableForceNew": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Specifies the endpoint address to be detected."
                },
                "extension": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies the extended key/value for subscriptions over HTTP or HTTPS."
                },
                "protocol": {
                    "type": "string",
                    "description": "Specifies the protocol type."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topicUrn": {
                    "type": "string",
                    "description": "Specifies the resource identifier of a topic."
                }
            },
            "requiredInputs": [
                "endpoint",
                "protocol",
                "topicUrn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmnMessageDetection resources.\n",
                "properties": {
                    "enableForceNew": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "Specifies the endpoint address to be detected."
                    },
                    "extension": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Specifies the extended key/value for subscriptions over HTTP or HTTPS."
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Specifies the protocol type."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "result": {
                        "type": "string",
                        "description": "The message detection result."
                    },
                    "topicUrn": {
                        "type": "string",
                        "description": "Specifies the resource identifier of a topic."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/smnSubscription:SmnSubscription": {
            "properties": {
                "endpoint": {
                    "type": "string"
                },
                "extension": {
                    "$ref": "#/types/cloudru:index/SmnSubscriptionExtension:SmnSubscriptionExtension"
                },
                "filterPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/SmnSubscriptionFilterPolicy:SmnSubscriptionFilterPolicy"
                    },
                    "description": "The message filter policies of a subscriber."
                },
                "owner": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subscriptionUrn": {
                    "type": "string"
                },
                "topicUrn": {
                    "type": "string"
                }
            },
            "required": [
                "endpoint",
                "extension",
                "filterPolicies",
                "owner",
                "protocol",
                "region",
                "status",
                "subscriptionUrn",
                "topicUrn"
            ],
            "inputProperties": {
                "endpoint": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "extension": {
                    "$ref": "#/types/cloudru:index/SmnSubscriptionExtension:SmnSubscriptionExtension",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "remark": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topicUrn": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "endpoint",
                "protocol",
                "topicUrn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmnSubscription resources.\n",
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "extension": {
                        "$ref": "#/types/cloudru:index/SmnSubscriptionExtension:SmnSubscriptionExtension",
                        "willReplaceOnChanges": true
                    },
                    "filterPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/SmnSubscriptionFilterPolicy:SmnSubscriptionFilterPolicy"
                        },
                        "description": "The message filter policies of a subscriber."
                    },
                    "owner": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "remark": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "integer"
                    },
                    "subscriptionUrn": {
                        "type": "string"
                    },
                    "topicUrn": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/smnTopic:SmnTopic": {
            "properties": {
                "accessPolicy": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "createTime": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string"
                },
                "introduction": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pushPolicy": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "servicesPublishAllowed": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "topicUrn": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "usersPublishAllowed": {
                    "type": "string"
                }
            },
            "required": [
                "createTime",
                "enterpriseProjectId",
                "name",
                "pushPolicy",
                "region",
                "tags",
                "topicUrn",
                "updateTime"
            ],
            "inputProperties": {
                "accessPolicy": {
                    "type": "string",
                    "description": "schema: Internal"
                },
                "displayName": {
                    "type": "string"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "introduction": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "servicesPublishAllowed": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "usersPublishAllowed": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SmnTopic resources.\n",
                "properties": {
                    "accessPolicy": {
                        "type": "string",
                        "description": "schema: Internal"
                    },
                    "createTime": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "introduction": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "pushPolicy": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "servicesPublishAllowed": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "topicUrn": {
                        "type": "string"
                    },
                    "updateTime": {
                        "type": "string"
                    },
                    "usersPublishAllowed": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/swrOrganization:SwrOrganization": {
            "properties": {
                "creator": {
                    "type": "string"
                },
                "loginServer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "required": [
                "creator",
                "loginServer",
                "name",
                "permission",
                "region"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwrOrganization resources.\n",
                "properties": {
                    "creator": {
                        "type": "string"
                    },
                    "loginServer": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/swrOrganizationPermissions:SwrOrganizationPermissions": {
            "properties": {
                "creator": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "selfPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/SwrOrganizationPermissionsSelfPermission:SwrOrganizationPermissionsSelfPermission"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser"
                    }
                }
            },
            "required": [
                "creator",
                "organization",
                "region",
                "selfPermissions",
                "users"
            ],
            "inputProperties": {
                "organization": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser"
                    }
                }
            },
            "requiredInputs": [
                "organization",
                "users"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwrOrganizationPermissions resources.\n",
                "properties": {
                    "creator": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "selfPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/SwrOrganizationPermissionsSelfPermission:SwrOrganizationPermissionsSelfPermission"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/SwrOrganizationPermissionsUser:SwrOrganizationPermissionsUser"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/swrRepository:SwrRepository": {
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "internalPath": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "numImages": {
                    "type": "integer"
                },
                "organization": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "repositoryId": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            },
            "required": [
                "internalPath",
                "name",
                "numImages",
                "organization",
                "path",
                "region",
                "repositoryId",
                "size"
            ],
            "inputProperties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "organization": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organization"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SwrRepository resources.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "internalPath": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "numImages": {
                        "type": "integer"
                    },
                    "organization": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "repositoryId": {
                        "type": "integer"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/vpnConnection:VpnConnection": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The create time."
                },
                "customerGatewayId": {
                    "type": "string",
                    "description": "The customer gateway ID."
                },
                "enableNqa": {
                    "type": "boolean",
                    "description": "Whether to enable NQA check."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID."
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The VPN gateway ID."
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The VPN gateway IP ID."
                },
                "haRole": {
                    "type": "string"
                },
                "ikepolicy": {
                    "$ref": "#/types/cloudru:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy"
                },
                "ipsecpolicy": {
                    "$ref": "#/types/cloudru:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN connection."
                },
                "peerSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The customer subnets."
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule"
                    },
                    "description": "The policy rules. Only works when vpn_type is set to **policy**"
                },
                "psk": {
                    "type": "string",
                    "description": "The pre-shared key."
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the VPN connection."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tunnelLocalAddress": {
                    "type": "string",
                    "description": "The local tunnel address."
                },
                "tunnelPeerAddress": {
                    "type": "string",
                    "description": "The peer tunnel address."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time."
                },
                "vpnType": {
                    "type": "string",
                    "description": "The connection type. The value can be **policy**, **static** or **bgp**."
                }
            },
            "required": [
                "createdAt",
                "customerGatewayId",
                "enableNqa",
                "enterpriseProjectId",
                "gatewayId",
                "gatewayIp",
                "haRole",
                "ikepolicy",
                "ipsecpolicy",
                "name",
                "peerSubnets",
                "policyRules",
                "psk",
                "region",
                "status",
                "tags",
                "tunnelLocalAddress",
                "tunnelPeerAddress",
                "updatedAt",
                "vpnType"
            ],
            "inputProperties": {
                "customerGatewayId": {
                    "type": "string",
                    "description": "The customer gateway ID."
                },
                "enableNqa": {
                    "type": "boolean",
                    "description": "Whether to enable NQA check."
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID."
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The VPN gateway ID.",
                    "willReplaceOnChanges": true
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The VPN gateway IP ID.",
                    "willReplaceOnChanges": true
                },
                "haRole": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ikepolicy": {
                    "$ref": "#/types/cloudru:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy"
                },
                "ipsecpolicy": {
                    "$ref": "#/types/cloudru:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN connection."
                },
                "peerSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The customer subnets."
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudru:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule"
                    },
                    "description": "The policy rules. Only works when vpn_type is set to **policy**"
                },
                "psk": {
                    "type": "string",
                    "description": "The pre-shared key."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tunnelLocalAddress": {
                    "type": "string",
                    "description": "The local tunnel address."
                },
                "tunnelPeerAddress": {
                    "type": "string",
                    "description": "The peer tunnel address."
                },
                "vpnType": {
                    "type": "string",
                    "description": "The connection type. The value can be **policy**, **static** or **bgp**.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customerGatewayId",
                "gatewayId",
                "gatewayIp",
                "psk",
                "vpnType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnConnection resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The create time."
                    },
                    "customerGatewayId": {
                        "type": "string",
                        "description": "The customer gateway ID."
                    },
                    "enableNqa": {
                        "type": "boolean",
                        "description": "Whether to enable NQA check."
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID."
                    },
                    "gatewayId": {
                        "type": "string",
                        "description": "The VPN gateway ID.",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The VPN gateway IP ID.",
                        "willReplaceOnChanges": true
                    },
                    "haRole": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ikepolicy": {
                        "$ref": "#/types/cloudru:index/VpnConnectionIkepolicy:VpnConnectionIkepolicy"
                    },
                    "ipsecpolicy": {
                        "$ref": "#/types/cloudru:index/VpnConnectionIpsecpolicy:VpnConnectionIpsecpolicy"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the VPN connection."
                    },
                    "peerSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The customer subnets."
                    },
                    "policyRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudru:index/VpnConnectionPolicyRule:VpnConnectionPolicyRule"
                        },
                        "description": "The policy rules. Only works when vpn_type is set to **policy**"
                    },
                    "psk": {
                        "type": "string",
                        "description": "The pre-shared key."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the VPN connection."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tunnelLocalAddress": {
                        "type": "string",
                        "description": "The local tunnel address."
                    },
                    "tunnelPeerAddress": {
                        "type": "string",
                        "description": "The peer tunnel address."
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time."
                    },
                    "vpnType": {
                        "type": "string",
                        "description": "The connection type. The value can be **policy**, **static** or **bgp**.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/vpnConnectionHealthCheck:VpnConnectionHealthCheck": {
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "Specifies the ID of the VPN connection to monitor."
                },
                "destinationIp": {
                    "type": "string",
                    "description": "The destination IP address of the VPN connection."
                },
                "region": {
                    "type": "string"
                },
                "sourceIp": {
                    "type": "string",
                    "description": "The source IP address of the VPN connection."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the connection health check."
                }
            },
            "required": [
                "connectionId",
                "destinationIp",
                "region",
                "sourceIp",
                "status"
            ],
            "inputProperties": {
                "connectionId": {
                    "type": "string",
                    "description": "Specifies the ID of the VPN connection to monitor.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "connectionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnConnectionHealthCheck resources.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "Specifies the ID of the VPN connection to monitor.",
                        "willReplaceOnChanges": true
                    },
                    "destinationIp": {
                        "type": "string",
                        "description": "The destination IP address of the VPN connection."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceIp": {
                        "type": "string",
                        "description": "The source IP address of the VPN connection."
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the connection health check."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/vpnCustomerGateway:VpnCustomerGateway": {
            "properties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP ASN number of the customer gateway, the default value is 65000."
                },
                "certificateContent": {
                    "type": "string"
                },
                "certificateId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The create time."
                },
                "expireTime": {
                    "type": "string"
                },
                "idType": {
                    "type": "string",
                    "description": "The identifier type of a customer gateway."
                },
                "idValue": {
                    "type": "string",
                    "description": "The identifier of a customer gateway."
                },
                "ip": {
                    "type": "string",
                    "description": "The IP address of the customer gateway."
                },
                "isUpdatable": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The customer gateway name."
                },
                "region": {
                    "type": "string"
                },
                "routeMode": {
                    "type": "string",
                    "description": "The route mode of the customer gateway."
                },
                "serialNumber": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time."
                }
            },
            "required": [
                "certificateId",
                "createdAt",
                "expireTime",
                "idValue",
                "isUpdatable",
                "issuer",
                "name",
                "region",
                "serialNumber",
                "signatureAlgorithm",
                "subject",
                "tags",
                "updatedAt"
            ],
            "inputProperties": {
                "asn": {
                    "type": "integer",
                    "description": "The BGP ASN number of the customer gateway, the default value is 65000.",
                    "willReplaceOnChanges": true
                },
                "certificateContent": {
                    "type": "string"
                },
                "idType": {
                    "type": "string",
                    "description": "The identifier type of a customer gateway.",
                    "willReplaceOnChanges": true
                },
                "idValue": {
                    "type": "string",
                    "description": "The identifier of a customer gateway.",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "The IP address of the customer gateway.",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The customer gateway name."
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "routeMode": {
                    "type": "string",
                    "description": "The route mode of the customer gateway.",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnCustomerGateway resources.\n",
                "properties": {
                    "asn": {
                        "type": "integer",
                        "description": "The BGP ASN number of the customer gateway, the default value is 65000.",
                        "willReplaceOnChanges": true
                    },
                    "certificateContent": {
                        "type": "string"
                    },
                    "certificateId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The create time."
                    },
                    "expireTime": {
                        "type": "string"
                    },
                    "idType": {
                        "type": "string",
                        "description": "The identifier type of a customer gateway.",
                        "willReplaceOnChanges": true
                    },
                    "idValue": {
                        "type": "string",
                        "description": "The identifier of a customer gateway.",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP address of the customer gateway.",
                        "willReplaceOnChanges": true
                    },
                    "isUpdatable": {
                        "type": "boolean"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The customer gateway name."
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "routeMode": {
                        "type": "string",
                        "description": "The route mode of the customer gateway.",
                        "willReplaceOnChanges": true
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time."
                    }
                },
                "type": "object"
            }
        },
        "cloudru:index/vpnGateway:VpnGateway": {
            "properties": {
                "accessPrivateIp1": {
                    "type": "string"
                },
                "accessPrivateIp2": {
                    "type": "string"
                },
                "accessSubnetId": {
                    "type": "string",
                    "description": "The access subnet ID of the VPN gateway."
                },
                "accessVpcId": {
                    "type": "string",
                    "description": "The access VPC ID of the VPN gateway."
                },
                "asn": {
                    "type": "integer",
                    "description": "The ASN number of BGP"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type."
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone IDs."
                },
                "certificate": {
                    "$ref": "#/types/cloudru:index/VpnGatewayCertificate:VpnGatewayCertificate"
                },
                "connectSubnet": {
                    "type": "string",
                    "description": "The Network ID of the VPC subnet used by the VPN gateway."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The create time."
                },
                "deleteEipOnTermination": {
                    "type": "boolean",
                    "description": "Whether to delete the EIP when the VPN gateway is deleted."
                },
                "eip1": {
                    "$ref": "#/types/cloudru:index/VpnGatewayEip1:VpnGatewayEip1"
                },
                "eip2": {
                    "$ref": "#/types/cloudru:index/VpnGatewayEip2:VpnGatewayEip2"
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID"
                },
                "erAttachmentId": {
                    "type": "string",
                    "description": "The ER attachment ID."
                },
                "erId": {
                    "type": "string",
                    "description": "The enterprise router ID to attach with to VPN gateway."
                },
                "flavor": {
                    "type": "string",
                    "description": "The flavor of the VPN gateway."
                },
                "haMode": {
                    "type": "string",
                    "description": "The HA mode of the VPN gateway."
                },
                "localSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The local subnets."
                },
                "masterEip": {
                    "$ref": "#/types/cloudru:index/VpnGatewayMasterEip:VpnGatewayMasterEip"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN gateway. Only letters, digits, underscores(_) and hypens(-) are supported."
                },
                "networkType": {
                    "type": "string",
                    "description": "The network type of the VPN gateway."
                },
                "region": {
                    "type": "string"
                },
                "slaveEip": {
                    "$ref": "#/types/cloudru:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip"
                },
                "status": {
                    "type": "string",
                    "description": "The status of VPN gateway."
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The update time."
                },
                "usedConnectionGroup": {
                    "type": "integer",
                    "description": "The number of used connection groups."
                },
                "usedConnectionNumber": {
                    "type": "integer",
                    "description": "The number of used connections."
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPN gateway is connected."
                }
            },
            "required": [
                "accessPrivateIp1",
                "accessPrivateIp2",
                "accessSubnetId",
                "accessVpcId",
                "availabilityZones",
                "certificate",
                "connectSubnet",
                "createdAt",
                "eip1",
                "eip2",
                "enterpriseProjectId",
                "erAttachmentId",
                "erId",
                "flavor",
                "haMode",
                "localSubnets",
                "masterEip",
                "name",
                "networkType",
                "region",
                "slaveEip",
                "status",
                "tags",
                "updatedAt",
                "usedConnectionGroup",
                "usedConnectionNumber",
                "vpcId"
            ],
            "inputProperties": {
                "accessPrivateIp1": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessPrivateIp2": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "accessSubnetId": {
                    "type": "string",
                    "description": "The access subnet ID of the VPN gateway.",
                    "willReplaceOnChanges": true
                },
                "accessVpcId": {
                    "type": "string",
                    "description": "The access VPC ID of the VPN gateway.",
                    "willReplaceOnChanges": true
                },
                "asn": {
                    "type": "integer",
                    "description": "The ASN number of BGP",
                    "willReplaceOnChanges": true
                },
                "attachmentType": {
                    "type": "string",
                    "description": "The attachment type.",
                    "willReplaceOnChanges": true
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The availability zone IDs.",
                    "willReplaceOnChanges": true
                },
                "certificate": {
                    "$ref": "#/types/cloudru:index/VpnGatewayCertificate:VpnGatewayCertificate"
                },
                "connectSubnet": {
                    "type": "string",
                    "description": "The Network ID of the VPC subnet used by the VPN gateway.",
                    "willReplaceOnChanges": true
                },
                "deleteEipOnTermination": {
                    "type": "boolean",
                    "description": "Whether to delete the EIP when the VPN gateway is deleted."
                },
                "eip1": {
                    "$ref": "#/types/cloudru:index/VpnGatewayEip1:VpnGatewayEip1",
                    "willReplaceOnChanges": true
                },
                "eip2": {
                    "$ref": "#/types/cloudru:index/VpnGatewayEip2:VpnGatewayEip2",
                    "willReplaceOnChanges": true
                },
                "enterpriseProjectId": {
                    "type": "string",
                    "description": "The enterprise project ID"
                },
                "erId": {
                    "type": "string",
                    "description": "The enterprise router ID to attach with to VPN gateway.",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "The flavor of the VPN gateway."
                },
                "haMode": {
                    "type": "string",
                    "description": "The HA mode of the VPN gateway.",
                    "willReplaceOnChanges": true
                },
                "localSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The local subnets."
                },
                "masterEip": {
                    "$ref": "#/types/cloudru:index/VpnGatewayMasterEip:VpnGatewayMasterEip",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPN gateway. Only letters, digits, underscores(_) and hypens(-) are supported."
                },
                "networkType": {
                    "type": "string",
                    "description": "The network type of the VPN gateway.",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "slaveEip": {
                    "$ref": "#/types/cloudru:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "vpcId": {
                    "type": "string",
                    "description": "The ID of the VPC to which the VPN gateway is connected.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "availabilityZones"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpnGateway resources.\n",
                "properties": {
                    "accessPrivateIp1": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessPrivateIp2": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "accessSubnetId": {
                        "type": "string",
                        "description": "The access subnet ID of the VPN gateway.",
                        "willReplaceOnChanges": true
                    },
                    "accessVpcId": {
                        "type": "string",
                        "description": "The access VPC ID of the VPN gateway.",
                        "willReplaceOnChanges": true
                    },
                    "asn": {
                        "type": "integer",
                        "description": "The ASN number of BGP",
                        "willReplaceOnChanges": true
                    },
                    "attachmentType": {
                        "type": "string",
                        "description": "The attachment type.",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The availability zone IDs.",
                        "willReplaceOnChanges": true
                    },
                    "certificate": {
                        "$ref": "#/types/cloudru:index/VpnGatewayCertificate:VpnGatewayCertificate"
                    },
                    "connectSubnet": {
                        "type": "string",
                        "description": "The Network ID of the VPC subnet used by the VPN gateway.",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The create time."
                    },
                    "deleteEipOnTermination": {
                        "type": "boolean",
                        "description": "Whether to delete the EIP when the VPN gateway is deleted."
                    },
                    "eip1": {
                        "$ref": "#/types/cloudru:index/VpnGatewayEip1:VpnGatewayEip1",
                        "willReplaceOnChanges": true
                    },
                    "eip2": {
                        "$ref": "#/types/cloudru:index/VpnGatewayEip2:VpnGatewayEip2",
                        "willReplaceOnChanges": true
                    },
                    "enterpriseProjectId": {
                        "type": "string",
                        "description": "The enterprise project ID"
                    },
                    "erAttachmentId": {
                        "type": "string",
                        "description": "The ER attachment ID."
                    },
                    "erId": {
                        "type": "string",
                        "description": "The enterprise router ID to attach with to VPN gateway.",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "The flavor of the VPN gateway."
                    },
                    "haMode": {
                        "type": "string",
                        "description": "The HA mode of the VPN gateway.",
                        "willReplaceOnChanges": true
                    },
                    "localSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The local subnets."
                    },
                    "masterEip": {
                        "$ref": "#/types/cloudru:index/VpnGatewayMasterEip:VpnGatewayMasterEip",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the VPN gateway. Only letters, digits, underscores(_) and hypens(-) are supported."
                    },
                    "networkType": {
                        "type": "string",
                        "description": "The network type of the VPN gateway.",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "slaveEip": {
                        "$ref": "#/types/cloudru:index/VpnGatewaySlaveEip:VpnGatewaySlaveEip",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of VPN gateway."
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The update time."
                    },
                    "usedConnectionGroup": {
                        "type": "integer",
                        "description": "The number of used connection groups."
                    },
                    "usedConnectionNumber": {
                        "type": "integer",
                        "description": "The number of used connections."
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "The ID of the VPC to which the VPN gateway is connected.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "cloudru:Cbr/getVaults:getVaults": {
            "inputs": {
                "description": "A collection of arguments for invoking getVaults.\n",
                "properties": {
                    "autoExpandEnabled": {
                        "type": "boolean"
                    },
                    "consistentLevel": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "protectionType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVaults.\n",
                "properties": {
                    "autoExpandEnabled": {
                        "type": "boolean"
                    },
                    "consistentLevel": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "protectionType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vaults": {
                        "items": {
                            "$ref": "#/types/cloudru:Cbr/getVaultsVault:getVaultsVault"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "vaults",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getAddonTemplate:getAddonTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getAddonTemplate.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAddonTemplate.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "spec": {
                        "type": "string"
                    },
                    "stable": {
                        "type": "boolean"
                    },
                    "supportVersions": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getAddonTemplateSupportVersion:getAddonTemplateSupportVersion"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "description",
                    "name",
                    "region",
                    "spec",
                    "stable",
                    "supportVersions",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getCluster:getCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getCluster.\n",
                "properties": {
                    "clusterType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCluster.\n",
                "properties": {
                    "authenticationMode": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer"
                    },
                    "certificateClusters": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterCertificateCluster:getClusterCertificateCluster"
                        },
                        "type": "array"
                    },
                    "certificateUsers": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterCertificateUser:getClusterCertificateUser"
                        },
                        "type": "array"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "clusterVersion": {
                        "type": "string"
                    },
                    "containerNetworkCidr": {
                        "type": "string"
                    },
                    "containerNetworkType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoints": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterEndpoint:getClusterEndpoint"
                        },
                        "type": "array"
                    },
                    "eniSubnetCidr": {
                        "type": "string"
                    },
                    "eniSubnetId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "highwaySubnetId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kubeConfigRaw": {
                        "type": "string"
                    },
                    "masters": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterMaster:getClusterMaster"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "serviceNetworkCidr": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "authenticationMode",
                    "billingMode",
                    "certificateClusters",
                    "certificateUsers",
                    "clusterType",
                    "clusterVersion",
                    "containerNetworkCidr",
                    "containerNetworkType",
                    "description",
                    "endpoints",
                    "eniSubnetCidr",
                    "eniSubnetId",
                    "enterpriseProjectId",
                    "flavorId",
                    "highwaySubnetId",
                    "id",
                    "kubeConfigRaw",
                    "masters",
                    "name",
                    "region",
                    "securityGroupId",
                    "serviceNetworkCidr",
                    "status",
                    "subnetId",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getClusterCertificates:getClusterCertificates": {
            "inputs": {
                "description": "A collection of arguments for invoking getClusterCertificates.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "duration"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getClusterCertificates.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusters": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterCertificatesCluster:getClusterCertificatesCluster"
                        },
                        "type": "array"
                    },
                    "contexts": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterCertificatesContext:getClusterCertificatesContext"
                        },
                        "type": "array"
                    },
                    "currentContext": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "kubeConfigRaw": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClusterCertificatesUser:getClusterCertificatesUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "clusterId",
                    "clusters",
                    "contexts",
                    "currentContext",
                    "duration",
                    "kubeConfigRaw",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getClusters:getClusters": {
            "inputs": {
                "description": "A collection of arguments for invoking getClusters.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClusters.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "clusters": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getClustersCluster:getClustersCluster"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusters",
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getNode:getNode": {
            "inputs": {
                "description": "A collection of arguments for invoking getNode.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNode.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "billingMode": {
                        "type": "integer"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "dataVolumes": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodeDataVolume:getNodeDataVolume"
                        },
                        "type": "array"
                    },
                    "ecsGroupId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfigs": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodeHostnameConfig:getNodeHostnameConfig"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rootVolumes": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodeRootVolume:getNodeRootVolume"
                        },
                        "type": "array"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "availabilityZone",
                    "billingMode",
                    "clusterId",
                    "dataVolumes",
                    "ecsGroupId",
                    "enterpriseProjectId",
                    "flavorId",
                    "hostnameConfigs",
                    "keyPair",
                    "name",
                    "nodeId",
                    "os",
                    "privateIp",
                    "publicIp",
                    "region",
                    "rootVolumes",
                    "serverId",
                    "status",
                    "subnetId",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getNodePool:getNodePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getNodePool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodePoolId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodePool.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "currentNodeCount": {
                        "type": "integer"
                    },
                    "dataVolumes": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodePoolDataVolume:getNodePoolDataVolume"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "extendParam": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "hostnameConfigs": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodePoolHostnameConfig:getNodePoolHostnameConfig"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "initialNodeCount": {
                        "type": "integer"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "labels": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "maxNodeCount": {
                        "type": "integer"
                    },
                    "maxPods": {
                        "type": "integer"
                    },
                    "minNodeCount": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodePoolId": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rootVolumes": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodePoolRootVolume:getNodePoolRootVolume"
                        },
                        "type": "array"
                    },
                    "scaleDownCooldownTime": {
                        "type": "integer"
                    },
                    "scallEnable": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZone",
                    "clusterId",
                    "currentNodeCount",
                    "dataVolumes",
                    "enterpriseProjectId",
                    "extendParam",
                    "flavorId",
                    "hostnameConfigs",
                    "initialNodeCount",
                    "keyPair",
                    "labels",
                    "maxNodeCount",
                    "maxPods",
                    "minNodeCount",
                    "name",
                    "nodePoolId",
                    "os",
                    "priority",
                    "region",
                    "rootVolumes",
                    "scaleDownCooldownTime",
                    "scallEnable",
                    "status",
                    "subnetId",
                    "tags",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cce/getNodes:getNodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getNodes.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "ignoreDetails": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNodes.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ignoreDetails": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeId": {
                        "type": "string"
                    },
                    "nodes": {
                        "items": {
                            "$ref": "#/types/cloudru:Cce/getNodesNode:getNodesNode"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "clusterId",
                    "ids",
                    "nodes",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getAccessControlLogs:getAccessControlLogs": {
            "inputs": {
                "description": "A collection of arguments for invoking getAccessControlLogs.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "app": {
                        "type": "string"
                    },
                    "dstCityName": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "dstPort": {
                        "type": "integer"
                    },
                    "dstProvinceName": {
                        "type": "string"
                    },
                    "dstRegionName": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "srcCityName": {
                        "type": "string"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "srcPort": {
                        "type": "integer"
                    },
                    "srcProvinceName": {
                        "type": "string"
                    },
                    "srcRegionName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "endTime",
                    "fwInstanceId",
                    "startTime"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessControlLogs.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "app": {
                        "type": "string"
                    },
                    "dstCityName": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "dstPort": {
                        "type": "integer"
                    },
                    "dstProvinceName": {
                        "type": "string"
                    },
                    "dstRegionName": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getAccessControlLogsRecord:getAccessControlLogsRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "ruleName": {
                        "type": "string"
                    },
                    "srcCityName": {
                        "type": "string"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "srcPort": {
                        "type": "integer"
                    },
                    "srcProvinceName": {
                        "type": "string"
                    },
                    "srcRegionName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                },
                "required": [
                    "endTime",
                    "fwInstanceId",
                    "records",
                    "region",
                    "startTime",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getAddressGroupMembers:getAddressGroupMembers": {
            "inputs": {
                "description": "A collection of arguments for invoking getAddressGroupMembers.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "itemId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "queryAddressSetType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAddressGroupMembers.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "itemId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "queryAddressSetType": {
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getAddressGroupMembersRecord:getAddressGroupMembersRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "groupId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getAddressGroups:getAddressGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAddressGroups.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "queryAddressSetType": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAddressGroups.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressGroups": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getAddressGroupsAddressGroup:getAddressGroupsAddressGroup"
                        },
                        "type": "array"
                    },
                    "addressType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "queryAddressSetType": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "addressGroups",
                    "objectId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getAttackLogs:getAttackLogs": {
            "inputs": {
                "description": "A collection of arguments for invoking getAttackLogs.\n",
                "properties": {
                    "app": {
                        "type": "string"
                    },
                    "attackRule": {
                        "type": "string"
                    },
                    "attackRuleId": {
                        "type": "string"
                    },
                    "attackType": {
                        "type": "string"
                    },
                    "dstCityName": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "dstPort": {
                        "type": "integer"
                    },
                    "dstProvinceName": {
                        "type": "string"
                    },
                    "dstRegionName": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "logType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "srcCityName": {
                        "type": "string"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "srcPort": {
                        "type": "integer"
                    },
                    "srcProvinceName": {
                        "type": "string"
                    },
                    "srcRegionName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "endTime",
                    "fwInstanceId",
                    "startTime"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAttackLogs.\n",
                "properties": {
                    "app": {
                        "type": "string"
                    },
                    "attackRule": {
                        "type": "string"
                    },
                    "attackRuleId": {
                        "type": "string"
                    },
                    "attackType": {
                        "type": "string"
                    },
                    "dstCityName": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "dstPort": {
                        "type": "integer"
                    },
                    "dstProvinceName": {
                        "type": "string"
                    },
                    "dstRegionName": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    },
                    "logType": {
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getAttackLogsRecord:getAttackLogsRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "srcCityName": {
                        "type": "string"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "srcPort": {
                        "type": "integer"
                    },
                    "srcProvinceName": {
                        "type": "string"
                    },
                    "srcRegionName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                },
                "required": [
                    "endTime",
                    "fwInstanceId",
                    "records",
                    "region",
                    "startTime",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getBlackWhiteLists:getBlackWhiteLists": {
            "inputs": {
                "description": "A collection of arguments for invoking getBlackWhiteLists.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "listId": {
                        "type": "string"
                    },
                    "listType": {
                        "type": "integer"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "listType",
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBlackWhiteLists.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "addressType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "listId": {
                        "type": "string"
                    },
                    "listType": {
                        "type": "integer"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getBlackWhiteListsRecord:getBlackWhiteListsRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "listType",
                    "objectId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getCaptureTaskResults:getCaptureTaskResults": {
            "inputs": {
                "description": "A collection of arguments for invoking getCaptureTaskResults.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "taskId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId",
                    "taskId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCaptureTaskResults.\n",
                "properties": {
                    "captcha": {
                        "type": "string"
                    },
                    "expires": {
                        "type": "integer"
                    },
                    "fileLists": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getCaptureTaskResultsFileList:getCaptureTaskResultsFileList"
                        },
                        "type": "array"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ips": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "requestHeaders": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getCaptureTaskResultsRequestHeader:getCaptureTaskResultsRequestHeader"
                        },
                        "type": "array"
                    },
                    "taskId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "captcha",
                    "expires",
                    "fileLists",
                    "fwInstanceId",
                    "region",
                    "requestHeaders",
                    "taskId",
                    "url",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getCaptureTasks:getCaptureTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getCaptureTasks.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCaptureTasks.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getCaptureTasksRecord:getCaptureTasksRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "fwInstanceId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getDomainNameGroups:getDomainNameGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomainNameGroups.\n",
                "properties": {
                    "configStatus": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "refCount": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId",
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomainNameGroups.\n",
                "properties": {
                    "configStatus": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getDomainNameGroupsRecord:getDomainNameGroupsRecord"
                        },
                        "type": "array"
                    },
                    "refCount": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "fwInstanceId",
                    "objectId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getDomainNameParseIpList:getDomainNameParseIpList": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomainNameParseIpList.\n",
                "properties": {
                    "addressType": {
                        "type": "string"
                    },
                    "domainAddressId": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomainNameParseIpList.\n",
                "properties": {
                    "addressType": {
                        "type": "string"
                    },
                    "datas": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "domainAddressId": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "datas",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getFirewalls:getFirewalls": {
            "inputs": {
                "description": "A collection of arguments for invoking getFirewalls.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFirewalls.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getFirewallsRecord:getFirewallsRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "integer"
                    }
                },
                "required": [
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getFlowLogs:getFlowLogs": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlowLogs.\n",
                "properties": {
                    "app": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "dstCityName": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "dstPort": {
                        "type": "integer"
                    },
                    "dstProvinceName": {
                        "type": "string"
                    },
                    "dstRegionName": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "srcCityName": {
                        "type": "string"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "srcPort": {
                        "type": "integer"
                    },
                    "srcProvinceName": {
                        "type": "string"
                    },
                    "srcRegionName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "endTime",
                    "fwInstanceId",
                    "startTime"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlowLogs.\n",
                "properties": {
                    "app": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "dstCityName": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "dstPort": {
                        "type": "integer"
                    },
                    "dstProvinceName": {
                        "type": "string"
                    },
                    "dstRegionName": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getFlowLogsRecord:getFlowLogsRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "srcCityName": {
                        "type": "string"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "srcPort": {
                        "type": "integer"
                    },
                    "srcProvinceName": {
                        "type": "string"
                    },
                    "srcRegionName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    }
                },
                "required": [
                    "endTime",
                    "fwInstanceId",
                    "records",
                    "region",
                    "startTime",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getIpsCustomRules:getIpsCustomRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpsCustomRules.\n",
                "properties": {
                    "actionType": {
                        "type": "integer"
                    },
                    "affectedOs": {
                        "type": "integer"
                    },
                    "attackType": {
                        "type": "integer"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "ipsName": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "integer"
                    },
                    "software": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId",
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpsCustomRules.\n",
                "properties": {
                    "actionType": {
                        "type": "integer"
                    },
                    "affectedOs": {
                        "type": "integer"
                    },
                    "attackType": {
                        "type": "integer"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipsName": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getIpsCustomRulesRecord:getIpsCustomRulesRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "integer"
                    },
                    "software": {
                        "type": "integer"
                    }
                },
                "required": [
                    "fwInstanceId",
                    "objectId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getIpsRuleDetails:getIpsRuleDetails": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpsRuleDetails.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpsRuleDetails.\n",
                "properties": {
                    "datas": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getIpsRuleDetailsData:getIpsRuleDetailsData"
                        },
                        "type": "array"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "datas",
                    "fwInstanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getIpsRules:getIpsRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpsRules.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "ipsId": {
                        "type": "string"
                    },
                    "ipsNameLike": {
                        "type": "string"
                    },
                    "ipsStatus": {
                        "type": "string"
                    },
                    "isUpdatedIpsRuleQueried": {
                        "type": "boolean"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpsRules.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipsId": {
                        "type": "string"
                    },
                    "ipsNameLike": {
                        "type": "string"
                    },
                    "ipsStatus": {
                        "type": "string"
                    },
                    "isUpdatedIpsRuleQueried": {
                        "type": "boolean"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getIpsRulesRecord:getIpsRulesRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "objectId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getProtectionRules:getProtectionRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getProtectionRules.\n",
                "properties": {
                    "actionType": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProtectionRules.\n",
                "properties": {
                    "actionType": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getProtectionRulesRecord:getProtectionRulesRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "ruleId": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "objectId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getRegions:getRegions": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegions.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegions.\n",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "fwInstanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getResourceTags:getResourceTags": {
            "inputs": {
                "description": "A collection of arguments for invoking getResourceTags.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fwInstanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResourceTags.\n",
                "properties": {
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getResourceTagsTag:getResourceTagsTag"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "fwInstanceId",
                    "region",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getServiceGroupMembers:getServiceGroupMembers": {
            "inputs": {
                "description": "A collection of arguments for invoking getServiceGroupMembers.\n",
                "properties": {
                    "destPort": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupType": {
                        "type": "string"
                    },
                    "itemId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sourcePort": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceGroupMembers.\n",
                "properties": {
                    "destPort": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "itemId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "records": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getServiceGroupMembersRecord:getServiceGroupMembersRecord"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sourcePort": {
                        "type": "string"
                    }
                },
                "required": [
                    "groupId",
                    "records",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getServiceGroups:getServiceGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getServiceGroups.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "objectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServiceGroups.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fwInstanceId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keyWord": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceGroups": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getServiceGroupsServiceGroup:getServiceGroupsServiceGroup"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "objectId",
                    "region",
                    "serviceGroups",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Cfw/getTags:getTags": {
            "inputs": {
                "description": "A collection of arguments for invoking getTags.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTags.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/types/cloudru:Cfw/getTagsTag:getTagsTag"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Css/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "memory": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Css/getFlavorsFlavor:getFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dcs/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "cpuArchitecture": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "number"
                    },
                    "cpuArchitecture": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Dcs/getFlavorsFlavor:getFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dcs/getMaintainwindow:getMaintainwindow": {
            "inputs": {
                "description": "A collection of arguments for invoking getMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "required": [
                    "begin",
                    "default",
                    "end",
                    "region",
                    "seq",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dds/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "engineName": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engineName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "engineName": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Dds/getFlavorsFlavor:getFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "memory": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "string"
                    }
                },
                "required": [
                    "engineName",
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:DedicatedApig/getEnvironments:getEnvironments": {
            "inputs": {
                "description": "A collection of arguments for invoking getEnvironments.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEnvironments.\n",
                "properties": {
                    "environments": {
                        "items": {
                            "$ref": "#/types/cloudru:DedicatedApig/getEnvironmentsEnvironment:getEnvironmentsEnvironment"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "environments",
                    "instanceId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dew/getDataKey:getDataKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getDataKey.\n",
                "properties": {
                    "datakeyLength": {
                        "type": "string"
                    },
                    "encryptionContext": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datakeyLength",
                    "keyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDataKey.\n",
                "properties": {
                    "cipherText": {
                        "type": "string"
                    },
                    "datakeyLength": {
                        "type": "string"
                    },
                    "encryptionContext": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "plainText": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "cipherText",
                    "datakeyLength",
                    "keyId",
                    "plainText",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dew/getKey:getKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getKey.\n",
                "properties": {
                    "defaultKeyFlag": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "keyAlias": {
                        "type": "string"
                    },
                    "keyDescription": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "keyState": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKey.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "defaultKeyFlag": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expirationTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keyAlias": {
                        "type": "string"
                    },
                    "keyDescription": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "keyState": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rotationEnabled": {
                        "type": "boolean"
                    },
                    "rotationInterval": {
                        "type": "integer"
                    },
                    "rotationNumber": {
                        "type": "integer"
                    },
                    "scheduledDeletionDate": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "creationDate",
                    "defaultKeyFlag",
                    "domainId",
                    "enterpriseProjectId",
                    "expirationTime",
                    "keyAlias",
                    "keyDescription",
                    "keyId",
                    "keyState",
                    "region",
                    "rotationEnabled",
                    "rotationInterval",
                    "rotationNumber",
                    "scheduledDeletionDate",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dew/getKeypairs:getKeypairs": {
            "inputs": {
                "description": "A collection of arguments for invoking getKeypairs.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string"
                    },
                    "isManaged": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKeypairs.\n",
                "properties": {
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "isManaged": {
                        "type": "boolean"
                    },
                    "keypairs": {
                        "items": {
                            "$ref": "#/types/cloudru:Dew/getKeypairsKeypair:getKeypairsKeypair"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "keypairs",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dms/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Dms/getFlavorsFlavor:getFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dms/getInstances:getInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fuzzyMatch": {
                        "type": "boolean"
                    },
                    "includeFailure": {
                        "type": "boolean"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fuzzyMatch": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "includeFailure": {
                        "type": "boolean"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:Dms/getInstancesInstance:getInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dms/getMaintainwindow:getMaintainwindow": {
            "inputs": {
                "description": "A collection of arguments for invoking getMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMaintainwindow.\n",
                "properties": {
                    "begin": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "end": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "seq": {
                        "type": "integer"
                    }
                },
                "required": [
                    "begin",
                    "default",
                    "end",
                    "region",
                    "seq",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dms/getProduct:getProduct": {
            "inputs": {
                "description": "A collection of arguments for invoking getProduct.\n",
                "properties": {
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bandwidth": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ioType": {
                        "type": "string",
                        "deprecationMessage": "io_type has deprecated, please use storage_spec_code"
                    },
                    "nodeNum": {
                        "type": "string"
                    },
                    "partitionNum": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storage": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vmSpecification": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "instanceType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProduct.\n",
                "properties": {
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "bandwidth": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "ioType": {
                        "deprecationMessage": "io_type has deprecated, please use storage_spec_code",
                        "type": "string"
                    },
                    "nodeNum": {
                        "type": "string"
                    },
                    "partitionNum": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storage": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "storageSpecCodes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vmSpecification": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZones",
                    "bandwidth",
                    "engine",
                    "instanceType",
                    "ioType",
                    "nodeNum",
                    "partitionNum",
                    "region",
                    "storage",
                    "storageSpecCode",
                    "storageSpecCodes",
                    "version",
                    "vmSpecification",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Dws/getFlaovrs:getFlaovrs": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlaovrs.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "datastoreType": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlaovrs.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "datastoreType": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Dws/getFlaovrsFlavor:getFlaovrsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Ecs/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cpuCoreCount": {
                        "type": "integer"
                    },
                    "generation": {
                        "type": "string"
                    },
                    "memorySize": {
                        "type": "integer"
                    },
                    "performanceType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cpuCoreCount": {
                        "type": "integer"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/getFlavorsFlavor:getFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "generation": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "memorySize": {
                        "type": "integer"
                    },
                    "performanceType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageType": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Ecs/getInstance:getInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstance.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstance.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expiredTime": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networks": {
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/getInstanceNetwork:getInstanceNetwork"
                        },
                        "type": "array"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "schedulerHints": {
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/getInstanceSchedulerHint:getInstanceSchedulerHint"
                        },
                        "type": "array"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "securityGroups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "systemDiskId": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "userData": {
                        "type": "string"
                    },
                    "volumeAttacheds": {
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/getInstanceVolumeAttached:getInstanceVolumeAttached"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "availabilityZone",
                    "chargingMode",
                    "enterpriseProjectId",
                    "expiredTime",
                    "flavorId",
                    "flavorName",
                    "imageId",
                    "imageName",
                    "keyPair",
                    "name",
                    "networks",
                    "publicIp",
                    "region",
                    "schedulerHints",
                    "securityGroupIds",
                    "securityGroups",
                    "status",
                    "systemDiskId",
                    "tags",
                    "userData",
                    "volumeAttacheds",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Ecs/getInstances:getInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstances.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstances.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "fixedIpV4": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/getInstancesInstance:getInstancesInstance"
                        },
                        "type": "array"
                    },
                    "keyPair": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "instances",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Ecs/getServergroups:getServergroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getServergroups.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getServergroups.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "servergroups": {
                        "items": {
                            "$ref": "#/types/cloudru:Ecs/getServergroupsServergroup:getServergroupsServergroup"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "servergroups",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Eip/getBandwidth:getBandwidth": {
            "inputs": {
                "description": "A collection of arguments for invoking getBandwidth.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBandwidth.\n",
                "properties": {
                    "bandwidthType": {
                        "type": "string"
                    },
                    "chargeMode": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicips": {
                        "items": {
                            "$ref": "#/types/cloudru:Eip/getBandwidthPublicip:getBandwidthPublicip"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "bandwidthType",
                    "chargeMode",
                    "enterpriseProjectId",
                    "name",
                    "publicips",
                    "region",
                    "shareType",
                    "size",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Eip/getEip:getEip": {
            "inputs": {
                "description": "A collection of arguments for invoking getEip.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEip.\n",
                "properties": {
                    "bandwidthId": {
                        "type": "string"
                    },
                    "bandwidthName": {
                        "type": "string"
                    },
                    "bandwidthShareType": {
                        "type": "string"
                    },
                    "bandwidthSize": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "bandwidthId",
                    "bandwidthName",
                    "bandwidthShareType",
                    "bandwidthSize",
                    "createdAt",
                    "enterpriseProjectId",
                    "ipVersion",
                    "ipv6Address",
                    "name",
                    "portId",
                    "privateIp",
                    "publicIp",
                    "region",
                    "status",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Eip/getEips:getEips": {
            "inputs": {
                "description": "A collection of arguments for invoking getEips.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "portIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "privateIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "publicIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEips.\n",
                "properties": {
                    "eips": {
                        "items": {
                            "$ref": "#/types/cloudru:Eip/getEipsEip:getEipsEip"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "portIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "privateIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "publicIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "eips",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Elb/getCertificate:getCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCertificate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "domain",
                    "expiration",
                    "name",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Elb/getListeners:getListeners": {
            "inputs": {
                "description": "A collection of arguments for invoking getListeners.\n",
                "properties": {
                    "clientCaTlsContainerRef": {
                        "type": "string"
                    },
                    "defaultPoolId": {
                        "type": "string"
                    },
                    "defaultTlsContainerRef": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "http2Enable": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolPort": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tlsCiphersPolicy": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getListeners.\n",
                "properties": {
                    "clientCaTlsContainerRef": {
                        "type": "string"
                    },
                    "defaultPoolId": {
                        "type": "string"
                    },
                    "defaultTlsContainerRef": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "http2Enable": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "listeners": {
                        "items": {
                            "$ref": "#/types/cloudru:Elb/getListenersListener:getListenersListener"
                        },
                        "type": "array"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolPort": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tlsCiphersPolicy": {
                        "type": "string"
                    }
                },
                "required": [
                    "listeners",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Elb/getLoadbalancer:getLoadbalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadbalancer.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vipAddress": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLoadbalancer.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vipAddress": {
                        "type": "string"
                    },
                    "vipPortId": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "enterpriseProjectId",
                    "id",
                    "name",
                    "publicIp",
                    "region",
                    "status",
                    "tags",
                    "vipAddress",
                    "vipPortId",
                    "vipSubnetId"
                ],
                "type": "object"
            }
        },
        "cloudru:Elb/getPools:getPools": {
            "inputs": {
                "description": "A collection of arguments for invoking getPools.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "memberAddress": {
                        "type": "string"
                    },
                    "memberDeviceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPools.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "memberAddress": {
                        "type": "string"
                    },
                    "memberDeviceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "pools": {
                        "items": {
                            "$ref": "#/types/cloudru:Elb/getPoolsPool:getPoolsPool"
                        },
                        "type": "array"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "pools",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Eps/getProject:getProject": {
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "id",
                    "name",
                    "status",
                    "updatedAt"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getAssociations:getAssociations": {
            "inputs": {
                "description": "A collection of arguments for invoking getAssociations.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string"
                    },
                    "attachmentType": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "routeTableId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAssociations.\n",
                "properties": {
                    "associations": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getAssociationsAssociation:getAssociationsAssociation"
                        },
                        "type": "array"
                    },
                    "attachmentId": {
                        "type": "string"
                    },
                    "attachmentType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "associations",
                    "instanceId",
                    "routeTableId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getAttachments:getAttachments": {
            "inputs": {
                "description": "A collection of arguments for invoking getAttachments.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAttachments.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string"
                    },
                    "attachments": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getAttachmentsAttachment:getAttachmentsAttachment"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "attachments",
                    "instanceId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getAvailabilityZones:getAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getAvailabilityZones.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAvailabilityZones.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "names",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getAvailableRoutes:getAvailableRoutes": {
            "inputs": {
                "description": "A collection of arguments for invoking getAvailableRoutes.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "routeTableId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAvailableRoutes.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "routes": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getAvailableRoutesRoute:getAvailableRoutesRoute"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "routeTableId",
                    "routes",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getFlowLogs:getFlowLogs": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlowLogs.\n",
                "properties": {
                    "enabled": {
                        "type": "string"
                    },
                    "flowLogId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "logGroupId": {
                        "type": "string"
                    },
                    "logStreamId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlowLogs.\n",
                "properties": {
                    "enabled": {
                        "type": "string"
                    },
                    "flowLogId": {
                        "type": "string"
                    },
                    "flowLogs": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getFlowLogsFlowLog:getFlowLogsFlowLog"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "logGroupId": {
                        "type": "string"
                    },
                    "logStreamId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "flowLogs",
                    "instanceId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getInstances:getInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownedBySelf": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getInstancesInstance:getInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownedBySelf": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "instances",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getPropagations:getPropagations": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropagations.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string"
                    },
                    "attachmentType": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "routeTableId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropagations.\n",
                "properties": {
                    "attachmentId": {
                        "type": "string"
                    },
                    "attachmentType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "propagations": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getPropagationsPropagation:getPropagationsPropagation"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "propagations",
                    "routeTableId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getQuotas:getQuotas": {
            "inputs": {
                "description": "A collection of arguments for invoking getQuotas.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getQuotas.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "quotas": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getQuotasQuota:getQuotasQuota"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "quotas",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getResourceTags:getResourceTags": {
            "inputs": {
                "description": "A collection of arguments for invoking getResourceTags.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "resourceId",
                    "resourceType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResourceTags.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "region",
                    "resourceId",
                    "resourceType",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getRouteTables:getRouteTables": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteTables.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteTables.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeTableId": {
                        "type": "string"
                    },
                    "routeTables": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getRouteTablesRouteTable:getRouteTablesRouteTable"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "routeTables",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Er/getTags:getTags": {
            "inputs": {
                "description": "A collection of arguments for invoking getTags.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "resourceType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTags.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/types/cloudru:Er/getTagsTag:getTagsTag"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "resourceType",
                    "tags",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Evs/getVolumes:getVolumes": {
            "inputs": {
                "description": "A collection of arguments for invoking getVolumes.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "dedicatedStorageId": {
                        "type": "string"
                    },
                    "dedicatedStorageName": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "ids": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "shareable": {
                        "type": "boolean"
                    },
                    "sortDir": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "volumeTypeId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVolumes.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "dedicatedStorageId": {
                        "type": "string"
                    },
                    "dedicatedStorageName": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "shareable": {
                        "type": "boolean"
                    },
                    "sortDir": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "volumeTypeId": {
                        "type": "string"
                    },
                    "volumes": {
                        "items": {
                            "$ref": "#/types/cloudru:Evs/getVolumesVolume:getVolumesVolume"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "volumes",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:FunctionGraph/getDependencies:getDependencies": {
            "inputs": {
                "description": "A collection of arguments for invoking getDependencies.\n",
                "properties": {
                    "isVersionsQueryAllowed": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDependencies.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "isVersionsQueryAllowed": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "packages": {
                        "items": {
                            "$ref": "#/types/cloudru:FunctionGraph/getDependenciesPackage:getDependenciesPackage"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "packages",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Iam/getCustomRole:getCustomRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getCustomRole.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "references": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCustomRole.\n",
                "properties": {
                    "catalog": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "references": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "catalog",
                    "description",
                    "domainId",
                    "id",
                    "name",
                    "policy",
                    "references",
                    "type"
                ],
                "type": "object"
            }
        },
        "cloudru:Iam/getGroup:getGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/cloudru:Iam/getGroupUser:getGroupUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "description",
                    "domainId",
                    "id",
                    "name",
                    "users"
                ],
                "type": "object"
            }
        },
        "cloudru:Iam/getProjects:getProjects": {
            "inputs": {
                "description": "A collection of arguments for invoking getProjects.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getProjects.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projects": {
                        "items": {
                            "$ref": "#/types/cloudru:Iam/getProjectsProject:getProjectsProject"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "projects",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Iam/getRole:getRole": {
            "inputs": {
                "description": "A collection of arguments for invoking getRole.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRole.\n",
                "properties": {
                    "catalog": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "catalog",
                    "description",
                    "displayName",
                    "name",
                    "policy",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Iam/getUsers:getUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/cloudru:Iam/getUsersUser:getUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Ims/getImage:getImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "mostRecent": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sizeMax": {
                        "type": "integer",
                        "deprecationMessage": "size_max is deprecated"
                    },
                    "sizeMin": {
                        "type": "integer",
                        "deprecationMessage": "size_min is deprecated"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "activeAt": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "backupId": {
                        "type": "string"
                    },
                    "checksum": {
                        "type": "string"
                    },
                    "containerFormat": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dataOrigin": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskFormat": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "maxRamMb": {
                        "type": "integer"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "minDiskGb": {
                        "type": "integer"
                    },
                    "minRamMb": {
                        "type": "integer"
                    },
                    "mostRecent": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "protected": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    },
                    "sizeBytes": {
                        "type": "integer"
                    },
                    "sizeMax": {
                        "deprecationMessage": "size_max is deprecated",
                        "type": "integer"
                    },
                    "sizeMin": {
                        "deprecationMessage": "size_min is deprecated",
                        "type": "integer"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "required": [
                    "activeAt",
                    "architecture",
                    "backupId",
                    "checksum",
                    "containerFormat",
                    "createdAt",
                    "dataOrigin",
                    "description",
                    "diskFormat",
                    "enterpriseProjectId",
                    "file",
                    "imageId",
                    "imageType",
                    "maxRamMb",
                    "metadata",
                    "minDiskGb",
                    "minRamMb",
                    "name",
                    "os",
                    "osVersion",
                    "owner",
                    "protected",
                    "region",
                    "schema",
                    "sizeBytes",
                    "status",
                    "updatedAt",
                    "visibility",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Ims/getImages:getImages": {
            "inputs": {
                "description": "A collection of arguments for invoking getImages.\n",
                "properties": {
                    "__supportAgentList": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getImages.\n",
                "properties": {
                    "__supportAgentList": {
                        "type": "string"
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "imageType": {
                        "type": "string"
                    },
                    "images": {
                        "items": {
                            "$ref": "#/types/cloudru:Ims/getImagesImage:getImagesImage"
                        },
                        "type": "array"
                    },
                    "isWholeImage": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameRegex": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osVersion": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sortDirection": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "required": [
                    "images",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Nat/getGateway:getGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getGateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "internalNetworkId": {
                        "type": "string",
                        "deprecationMessage": "use subnet_id instead"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routerId": {
                        "type": "string",
                        "deprecationMessage": "use vpc_id instead"
                    },
                    "spec": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGateway.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "internalNetworkId": {
                        "deprecationMessage": "use subnet_id instead",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routerId": {
                        "deprecationMessage": "use vpc_id instead",
                        "type": "string"
                    },
                    "spec": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "enterpriseProjectId",
                    "id",
                    "name",
                    "region",
                    "spec",
                    "status",
                    "subnetId",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "cloudru:Obs/getBucketObject:getBucketObject": {
            "inputs": {
                "description": "A collection of arguments for invoking getBucketObject.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucket",
                    "key"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBucketObject.\n",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "bucket": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "etag": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "storageClass": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "bucket",
                    "contentType",
                    "etag",
                    "key",
                    "region",
                    "size",
                    "storageClass",
                    "versionId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Obs/getBuckets:getBuckets": {
            "inputs": {
                "description": "A collection of arguments for invoking getBuckets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBuckets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "buckets": {
                        "items": {
                            "$ref": "#/types/cloudru:Obs/getBucketsBucket:getBucketsBucket"
                        },
                        "type": "array"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "buckets",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getBackups:getBackups": {
            "inputs": {
                "description": "A collection of arguments for invoking getBackups.\n",
                "properties": {
                    "backupId": {
                        "type": "string"
                    },
                    "backupType": {
                        "type": "string"
                    },
                    "beginTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getBackups.\n",
                "properties": {
                    "backupId": {
                        "type": "string"
                    },
                    "backupType": {
                        "type": "string"
                    },
                    "backups": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getBackupsBackup:getBackupsBackup"
                        },
                        "type": "array"
                    },
                    "beginTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "backups",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getEngineVersions:getEngineVersions": {
            "inputs": {
                "description": "A collection of arguments for invoking getEngineVersions.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEngineVersions.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getEngineVersionsVersion:getEngineVersionsVersion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "groupType": {
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "dbType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getFlavorsFlavor:getFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "groupType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "required": [
                    "dbType",
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getInstances:getInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstances.\n",
                "properties": {
                    "datastoreType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstances.\n",
                "properties": {
                    "datastoreType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getInstancesInstance:getInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgAccounts:getPgAccounts": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgAccounts.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgAccounts.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getPgAccountsUser:getPgAccountsUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgDatabases:getPgDatabases": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgDatabases.\n",
                "properties": {
                    "characterSet": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgDatabases.\n",
                "properties": {
                    "characterSet": {
                        "type": "string"
                    },
                    "databases": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getPgDatabasesDatabase:getPgDatabasesDatabase"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "lcCollate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "databases",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgPluginParameterValueRange:getPgPluginParameterValueRange": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgPluginParameterValueRange.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgPluginParameterValueRange.\n",
                "properties": {
                    "defaultValues": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "restartRequired": {
                        "type": "boolean"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "defaultValues",
                    "instanceId",
                    "name",
                    "region",
                    "restartRequired",
                    "values",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgPluginParameterValues:getPgPluginParameterValues": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgPluginParameterValues.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgPluginParameterValues.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "name",
                    "region",
                    "values",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgPlugins:getPgPlugins": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgPlugins.\n",
                "properties": {
                    "created": {
                        "type": "boolean"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgPlugins.\n",
                "properties": {
                    "created": {
                        "type": "boolean"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "plugins": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getPgPluginsPlugin:getPgPluginsPlugin"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "databaseName",
                    "instanceId",
                    "plugins",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgRoles:getPgRoles": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgRoles.\n",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgRoles.\n",
                "properties": {
                    "account": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "roles",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getPgSqlLimits:getPgSqlLimits": {
            "inputs": {
                "description": "A collection of arguments for invoking getPgSqlLimits.\n",
                "properties": {
                    "dbName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isEffective": {
                        "type": "string"
                    },
                    "maxConcurrency": {
                        "type": "string"
                    },
                    "maxWaiting": {
                        "type": "string"
                    },
                    "queryId": {
                        "type": "string"
                    },
                    "queryString": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "searchPath": {
                        "type": "string"
                    },
                    "sqlLimitId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dbName",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPgSqlLimits.\n",
                "properties": {
                    "dbName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isEffective": {
                        "type": "string"
                    },
                    "maxConcurrency": {
                        "type": "string"
                    },
                    "maxWaiting": {
                        "type": "string"
                    },
                    "queryId": {
                        "type": "string"
                    },
                    "queryString": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "searchPath": {
                        "type": "string"
                    },
                    "sqlLimitId": {
                        "type": "string"
                    },
                    "sqlLimits": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getPgSqlLimitsSqlLimit:getPgSqlLimitsSqlLimit"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "dbName",
                    "instanceId",
                    "region",
                    "sqlLimits",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Rds/getStorageTypes:getStorageTypes": {
            "inputs": {
                "description": "A collection of arguments for invoking getStorageTypes.\n",
                "properties": {
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dbType",
                    "dbVersion"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorageTypes.\n",
                "properties": {
                    "dbType": {
                        "type": "string"
                    },
                    "dbVersion": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceMode": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageTypes": {
                        "items": {
                            "$ref": "#/types/cloudru:Rds/getStorageTypesStorageType:getStorageTypesStorageType"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "dbType",
                    "dbVersion",
                    "region",
                    "storageTypes",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Sfs/getFileSystem:getFileSystem": {
            "inputs": {
                "description": "A collection of arguments for invoking getFileSystem.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFileSystem.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string"
                    },
                    "accessTo": {
                        "type": "string"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "mountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preferred": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareAccessId": {
                        "type": "string"
                    },
                    "shareInstanceId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "accessLevel",
                    "accessTo",
                    "accessType",
                    "availabilityZone",
                    "description",
                    "exportLocation",
                    "id",
                    "isPublic",
                    "metadata",
                    "mountId",
                    "name",
                    "preferred",
                    "region",
                    "shareAccessId",
                    "shareInstanceId",
                    "shareProto",
                    "size",
                    "state",
                    "status"
                ],
                "type": "object"
            }
        },
        "cloudru:Sfs/getTurbos:getTurbos": {
            "inputs": {
                "description": "A collection of arguments for invoking getTurbos.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTurbos.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "shareType": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "turbos": {
                        "items": {
                            "$ref": "#/types/cloudru:Sfs/getTurbosTurbo:getTurbosTurbo"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "turbos",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getAddressGroups:getAddressGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getAddressGroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAddressGroups.\n",
                "properties": {
                    "addressGroups": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getAddressGroupsAddressGroup:getAddressGroupsAddressGroup"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "addressGroups",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getIds:getIds": {
            "inputs": {
                "description": "A collection of arguments for invoking getIds.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIds.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getPeeringConnection:getPeeringConnection": {
            "inputs": {
                "description": "A collection of arguments for invoking getPeeringConnection.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPeeringConnection.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name",
                    "peerTenantId",
                    "peerVpcId",
                    "region",
                    "status",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getPort:getPort": {
            "inputs": {
                "description": "A collection of arguments for invoking getPort.\n",
                "properties": {
                    "adminStateUp": {
                        "type": "boolean",
                        "deprecationMessage": "this field is deprecated"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceOwner": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string",
                        "deprecationMessage": "this field is deprecated"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string",
                        "deprecationMessage": "this field is deprecated"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPort.\n",
                "properties": {
                    "adminStateUp": {
                        "deprecationMessage": "this field is deprecated",
                        "type": "boolean"
                    },
                    "allAllowedIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allFixedIps": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allSecurityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "deviceOwner": {
                        "type": "string"
                    },
                    "fixedIp": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "macAddress": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "portId": {
                        "type": "string"
                    },
                    "projectId": {
                        "deprecationMessage": "this field is deprecated",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tenantId": {
                        "deprecationMessage": "this field is deprecated",
                        "type": "string"
                    }
                },
                "required": [
                    "adminStateUp",
                    "allAllowedIps",
                    "allFixedIps",
                    "allSecurityGroupIds",
                    "deviceId",
                    "deviceOwner",
                    "macAddress",
                    "name",
                    "networkId",
                    "portId",
                    "region",
                    "status",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getRouteTable:getRouteTable": {
            "inputs": {
                "description": "A collection of arguments for invoking getRouteTable.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRouteTable.\n",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routes": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getRouteTableRoute:getRouteTableRoute"
                        },
                        "type": "array"
                    },
                    "subnets": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "default",
                    "description",
                    "id",
                    "name",
                    "region",
                    "routes",
                    "subnets",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getRoutes:getRoutes": {
            "inputs": {
                "description": "A collection of arguments for invoking getRoutes.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRoutes.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routes": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getRoutesRoute:getRoutesRoute"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "region",
                    "routes",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getSecgroup:getSecgroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getSecgroup.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secgroupId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecgroup.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getSecgroupRule:getSecgroupRule"
                        },
                        "type": "array"
                    },
                    "secgroupId": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "createdAt",
                    "description",
                    "name",
                    "region",
                    "rules",
                    "updatedAt",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getSecgroups:getSecgroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getSecgroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecgroups.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroups": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getSecgroupsSecurityGroup:getSecgroupsSecurityGroup"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "region",
                    "securityGroups"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getSubnet:getSubnet": {
            "inputs": {
                "description": "A collection of arguments for invoking getSubnet.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSubnet.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dhcpEnable": {
                        "type": "boolean"
                    },
                    "dnsLists": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv4SubnetId": {
                        "type": "string"
                    },
                    "ipv6Cidr": {
                        "type": "string"
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "ipv6Gateway": {
                        "type": "string"
                    },
                    "ipv6SubnetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZone",
                    "cidr",
                    "description",
                    "dhcpEnable",
                    "dnsLists",
                    "gatewayIp",
                    "id",
                    "ipv4SubnetId",
                    "ipv6Cidr",
                    "ipv6Enable",
                    "ipv6Gateway",
                    "ipv6SubnetId",
                    "name",
                    "primaryDns",
                    "region",
                    "secondaryDns",
                    "status",
                    "subnetId",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getSubnetIds:getSubnetIds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSubnetIds.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "vpcId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubnetIds.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "ids",
                    "region",
                    "vpcId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getSubnets:getSubnets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSubnets.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSubnets.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primaryDns": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "secondaryDns": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnets": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getSubnetsSubnet:getSubnetsSubnet"
                        },
                        "type": "array"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "region",
                    "subnets"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getVpc:getVpc": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpc.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpc.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routes": {
                        "deprecationMessage": "use huaweicloud_vpc_route_table data source to get all routes",
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getVpcRoute:getVpcRoute"
                        },
                        "type": "array"
                    },
                    "secondaryCidrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "cidr",
                    "description",
                    "enterpriseProjectId",
                    "id",
                    "name",
                    "region",
                    "routes",
                    "secondaryCidrs",
                    "status",
                    "tags"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpc/getVpcs:getVpcs": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcs.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcs.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vpcs": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpc/getVpcsVpc:getVpcsVpc"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "region",
                    "vpcs"
                ],
                "type": "object"
            }
        },
        "cloudru:Vpcep/getPublicServices:getPublicServices": {
            "inputs": {
                "description": "A collection of arguments for invoking getPublicServices.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPublicServices.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/types/cloudru:Vpcep/getPublicServicesService:getPublicServicesService"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "services",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigAclPolicies:getApigAclPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigAclPolicies.\n",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigAclPolicies.\n",
                "properties": {
                    "entityType": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigAclPoliciesPolicy:getApigAclPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApi:getApigApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApi.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApi.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "authorizerId": {
                        "type": "string"
                    },
                    "backendParams": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiBackendParam:getApigApiBackendParam"
                        },
                        "type": "array"
                    },
                    "backendType": {
                        "type": "string"
                    },
                    "bodyDescription": {
                        "type": "string"
                    },
                    "cors": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "failureResponse": {
                        "type": "string"
                    },
                    "funcGraphPolicies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiFuncGraphPolicy:getApigApiFuncGraphPolicy"
                        },
                        "type": "array"
                    },
                    "funcGraphs": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiFuncGraph:getApigApiFuncGraph"
                        },
                        "type": "array"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "groupVersion": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "matching": {
                        "type": "string"
                    },
                    "mockPolicies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiMockPolicy:getApigApiMockPolicy"
                        },
                        "type": "array"
                    },
                    "mocks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiMock:getApigApiMock"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publishId": {
                        "type": "string"
                    },
                    "publishedAt": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registeredAt": {
                        "type": "string"
                    },
                    "requestMethod": {
                        "type": "string"
                    },
                    "requestParams": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiRequestParam:getApigApiRequestParam"
                        },
                        "type": "array"
                    },
                    "requestPath": {
                        "type": "string"
                    },
                    "requestProtocol": {
                        "type": "string"
                    },
                    "responseId": {
                        "type": "string"
                    },
                    "securityAuthentication": {
                        "type": "string"
                    },
                    "simpleAuthentication": {
                        "type": "boolean"
                    },
                    "successResponse": {
                        "type": "string"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "webPolicies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiWebPolicy:getApigApiWebPolicy"
                        },
                        "type": "array"
                    },
                    "webs": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiWeb:getApigApiWeb"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "apiId",
                    "authorizerId",
                    "backendParams",
                    "backendType",
                    "bodyDescription",
                    "cors",
                    "description",
                    "envId",
                    "envName",
                    "failureResponse",
                    "funcGraphs",
                    "funcGraphPolicies",
                    "groupId",
                    "groupName",
                    "groupVersion",
                    "instanceId",
                    "matching",
                    "mocks",
                    "mockPolicies",
                    "name",
                    "publishId",
                    "publishedAt",
                    "region",
                    "registeredAt",
                    "requestMethod",
                    "requestParams",
                    "requestPath",
                    "requestProtocol",
                    "responseId",
                    "securityAuthentication",
                    "simpleAuthentication",
                    "successResponse",
                    "tags",
                    "type",
                    "updatedAt",
                    "webs",
                    "webPolicies",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApiAssociatedAclPolicies:getApigApiAssociatedAclPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedAclPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedAclPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiAssociatedAclPoliciesPolicy:getApigApiAssociatedAclPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApiAssociatedApplications:getApigApiAssociatedApplications": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedApplications.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedApplications.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "applications": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiAssociatedApplicationsApplication:getApigApiAssociatedApplicationsApplication"
                        },
                        "type": "array"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "applications",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApiAssociatedPlugins:getApigApiAssociatedPlugins": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedPlugins.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pluginId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedPlugins.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pluginId": {
                        "type": "string"
                    },
                    "plugins": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiAssociatedPluginsPlugin:getApigApiAssociatedPluginsPlugin"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "plugins",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApiAssociatedSignatures:getApigApiAssociatedSignatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedSignatures.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedSignatures.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "signatures": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiAssociatedSignaturesSignature:getApigApiAssociatedSignaturesSignature"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "region",
                    "signatures",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApiAssociatedThrottlingPolicies:getApigApiAssociatedThrottlingPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiAssociatedThrottlingPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "apiId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiAssociatedThrottlingPolicies.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "periodUnit": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiAssociatedThrottlingPoliciesPolicy:getApigApiAssociatedThrottlingPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiId",
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApiBasicConfigurations:getApigApiBasicConfigurations": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApiBasicConfigurations.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "backendType": {
                        "type": "string"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "requestMethod": {
                        "type": "string"
                    },
                    "requestPath": {
                        "type": "string"
                    },
                    "requestProtocol": {
                        "type": "string"
                    },
                    "securityAuthentication": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcChannelName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApiBasicConfigurations.\n",
                "properties": {
                    "apiId": {
                        "type": "string"
                    },
                    "backendType": {
                        "type": "string"
                    },
                    "configurations": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApiBasicConfigurationsConfiguration:getApigApiBasicConfigurationsConfiguration"
                        },
                        "type": "array"
                    },
                    "envId": {
                        "type": "string"
                    },
                    "envName": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "requestMethod": {
                        "type": "string"
                    },
                    "requestPath": {
                        "type": "string"
                    },
                    "requestProtocol": {
                        "type": "string"
                    },
                    "securityAuthentication": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcChannelName": {
                        "type": "string"
                    }
                },
                "required": [
                    "configurations",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigAppcodes:getApigAppcodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigAppcodes.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigAppcodes.\n",
                "properties": {
                    "appcodes": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigAppcodesAppcode:getApigAppcodesAppcode"
                        },
                        "type": "array"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "appcodes",
                    "applicationId",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApplicationAcl:getApigApplicationAcl": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApplicationAcl.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApplicationAcl.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "applicationId",
                    "instanceId",
                    "region",
                    "type",
                    "values",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApplicationQuotas:getApigApplicationQuotas": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApplicationQuotas.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quotaId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApplicationQuotas.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "quotaId": {
                        "type": "string"
                    },
                    "quotas": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApplicationQuotasQuota:getApigApplicationQuotasQuota"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "quotas",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigApplications:getApigApplications": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigApplications.\n",
                "properties": {
                    "appKey": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigApplications.\n",
                "properties": {
                    "appKey": {
                        "type": "string"
                    },
                    "applicationId": {
                        "type": "string"
                    },
                    "applications": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigApplicationsApplication:getApigApplicationsApplication"
                        },
                        "type": "array"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "applications",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigChannels:getApigChannels": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigChannels.\n",
                "properties": {
                    "channelId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "memberGroupId": {
                        "type": "string"
                    },
                    "memberGroupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigChannels.\n",
                "properties": {
                    "channelId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "memberGroupId": {
                        "type": "string"
                    },
                    "memberGroupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preciseSearch": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "vpcChannels": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigChannelsVpcChannel:getApigChannelsVpcChannel"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "vpcChannels",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigCustomAuthorizers:getApigCustomAuthorizers": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigCustomAuthorizers.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigCustomAuthorizers.\n",
                "properties": {
                    "authorizerId": {
                        "type": "string"
                    },
                    "authorizers": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigCustomAuthorizersAuthorizer:getApigCustomAuthorizersAuthorizer"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "authorizers",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigEndpointConnections:getApigEndpointConnections": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigEndpointConnections.\n",
                "properties": {
                    "endpointId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "packetId": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigEndpointConnections.\n",
                "properties": {
                    "connections": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigEndpointConnectionsConnection:getApigEndpointConnectionsConnection"
                        },
                        "type": "array"
                    },
                    "endpointId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "packetId": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigEnvironmentVariables:getApigEnvironmentVariables": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigEnvironmentVariables.\n",
                "properties": {
                    "envId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groupId",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigEnvironmentVariables.\n",
                "properties": {
                    "envId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "variables": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigEnvironmentVariablesVariable:getApigEnvironmentVariablesVariable"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "groupId",
                    "instanceId",
                    "region",
                    "variables",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigGroups:getApigGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigGroups.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigGroups.\n",
                "properties": {
                    "groupId": {
                        "type": "string"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigGroupsGroup:getApigGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigInstanceFeatures:getApigInstanceFeatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigInstanceFeatures.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigInstanceFeatures.\n",
                "properties": {
                    "features": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigInstanceFeaturesFeature:getApigInstanceFeaturesFeature"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "features",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigInstanceSupportedFeatures:getApigInstanceSupportedFeatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigInstanceSupportedFeatures.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigInstanceSupportedFeatures.\n",
                "properties": {
                    "features": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "features",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigInstances:getApigInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getApigInstances.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigInstancesInstance:getApigInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigSignatures:getApigSignatures": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigSignatures.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigSignatures.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "signatureId": {
                        "type": "string"
                    },
                    "signatures": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigSignaturesSignature:getApigSignaturesSignature"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "signatures",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getApigThrottlingPolicies:getApigThrottlingPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getApigThrottlingPolicies.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApigThrottlingPolicies.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getApigThrottlingPoliciesPolicy:getApigThrottlingPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getAvailabilityZones:getAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getAvailabilityZones.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAvailabilityZones.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "required": [
                    "names",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getCbhAvailabilityZones:getCbhAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbhAvailabilityZones.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbhAvailabilityZones.\n",
                "properties": {
                    "availabilityZones": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbhAvailabilityZonesAvailabilityZone:getCbhAvailabilityZonesAvailabilityZone"
                        },
                        "type": "array"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "availabilityZones",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getCbhFlavors:getCbhFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbhFlavors.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "maxConnection": {
                        "type": "integer"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbhFlavors.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbhFlavorsFlavor:getCbhFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "maxConnection": {
                        "type": "integer"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcpus": {
                        "type": "integer"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getCbhInstances:getCbhInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbhInstances.\n",
                "properties": {
                    "flavorId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbhInstances.\n",
                "properties": {
                    "flavorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbhInstancesInstance:getCbhInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getCbrBackup:getCbrBackup": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbrBackup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCbrBackup.\n",
                "properties": {
                    "checkpointId": {
                        "type": "string"
                    },
                    "childrens": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbrBackupChildren:getCbrBackupChildren"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "expiredAt": {
                        "type": "string"
                    },
                    "extendInfos": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbrBackupExtendInfo:getCbrBackupExtendInfo"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "replicationRecords": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbrBackupReplicationRecord:getCbrBackupReplicationRecord"
                        },
                        "type": "array"
                    },
                    "resourceAz": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "resourceSize": {
                        "type": "integer"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vaultId": {
                        "type": "string"
                    }
                },
                "required": [
                    "checkpointId",
                    "childrens",
                    "createdAt",
                    "description",
                    "enterpriseProjectId",
                    "expiredAt",
                    "extendInfos",
                    "id",
                    "name",
                    "parentId",
                    "replicationRecords",
                    "resourceAz",
                    "resourceId",
                    "resourceName",
                    "resourceSize",
                    "resourceType",
                    "status",
                    "type",
                    "updatedAt",
                    "vaultId"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getCbrPolicies:getCbrPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getCbrPolicies.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vaultId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCbrPolicies.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCbrPoliciesPolicy:getCbrPoliciesPolicy"
                        },
                        "type": "array"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vaultId": {
                        "type": "string"
                    }
                },
                "required": [
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getCdmFlavors:getCdmFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getCdmFlavors.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCdmFlavors.\n",
                "properties": {
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getCdmFlavorsFlavor:getCdmFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "version",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDcsAccounts:getDcsAccounts": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsAccounts.\n",
                "properties": {
                    "accountName": {
                        "type": "string"
                    },
                    "accountRole": {
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDcsAccounts.\n",
                "properties": {
                    "accountName": {
                        "type": "string"
                    },
                    "accountRole": {
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string"
                    },
                    "accounts": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDcsAccountsAccount:getDcsAccountsAccount"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "accounts",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDcsAz:getDcsAz": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDcsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "name",
                    "port",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDcsProduct:getDcsProduct": {
            "inputs": {
                "description": "A collection of arguments for invoking getDcsProduct.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDcsProduct.\n",
                "properties": {
                    "cacheMode": {
                        "type": "string"
                    },
                    "capacity": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "engineVersion": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "specCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "cacheMode",
                    "capacity",
                    "engine",
                    "engineVersion",
                    "region",
                    "specCode",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsAz:getDmsAz": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsAz.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipv6Enable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "ipv6Enable",
                    "name",
                    "port",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsKafkaConsumerGroups:getDmsKafkaConsumerGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaConsumerGroups.\n",
                "properties": {
                    "coordinatorId": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "lag": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaConsumerGroups.\n",
                "properties": {
                    "coordinatorId": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsKafkaConsumerGroupsGroup:getDmsKafkaConsumerGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "lag": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsKafkaMessages:getDmsKafkaMessages": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaMessages.\n",
                "properties": {
                    "download": {
                        "type": "boolean"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyword": {
                        "type": "string"
                    },
                    "messageOffset": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "topic"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaMessages.\n",
                "properties": {
                    "download": {
                        "type": "boolean"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "keyword": {
                        "type": "string"
                    },
                    "messageOffset": {
                        "type": "string"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsKafkaMessagesMessage:getDmsKafkaMessagesMessage"
                        },
                        "type": "array"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "messages",
                    "region",
                    "topic",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsKafkaUsers:getDmsKafkaUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsKafkaUsers.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsKafkaUsers.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsKafkaUsersUser:getDmsKafkaUsersUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRabbitmqFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRabbitmqFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRabbitmqFlavorsFlavor:getDmsRabbitmqFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqBroker:getDmsRocketmqBroker": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqBroker.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqBroker.\n",
                "properties": {
                    "brokers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "brokers",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqConsumerGroupAccessUsers:getDmsRocketmqConsumerGroupAccessUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqConsumerGroupAccessUsers.\n",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "group",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqConsumerGroupAccessUsers.\n",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqConsumerGroupAccessUsersPolicy:getDmsRocketmqConsumerGroupAccessUsersPolicy"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "group",
                    "instanceId",
                    "policies",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqConsumerGroups:getDmsRocketmqConsumerGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqConsumerGroups.\n",
                "properties": {
                    "broadcast": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "retryMaxTimes": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqConsumerGroups.\n",
                "properties": {
                    "broadcast": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "groups": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqConsumerGroupsGroup:getDmsRocketmqConsumerGroupsGroup"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "retryMaxTimes": {
                        "type": "integer"
                    }
                },
                "required": [
                    "groups",
                    "instanceId",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqConsumers:getDmsRocketmqConsumers": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqConsumers.\n",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isDetail": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "group",
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqConsumers.\n",
                "properties": {
                    "clients": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqConsumersClient:getDmsRocketmqConsumersClient"
                        },
                        "type": "array"
                    },
                    "group": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isDetail": {
                        "type": "boolean"
                    },
                    "online": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "subscriptionConsistency": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "clients",
                    "group",
                    "instanceId",
                    "online",
                    "region",
                    "subscriptionConsistency",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqExtendFlavors:getDmsRocketmqExtendFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqExtendFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqExtendFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqExtendFlavorsFlavor:getDmsRocketmqExtendFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flavors",
                    "instanceId",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqFlavors:getDmsRocketmqFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqFlavors.\n",
                "properties": {
                    "archType": {
                        "type": "string"
                    },
                    "availabilityZones": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "chargingMode": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqFlavorsFlavor:getDmsRocketmqFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "storageSpecCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "flavors",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqInstances:getDmsRocketmqInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqInstances.\n",
                "properties": {
                    "exactMatchName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqInstances.\n",
                "properties": {
                    "exactMatchName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instances": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqInstancesInstance:getDmsRocketmqInstancesInstance"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "instances",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqMessageTraces:getDmsRocketmqMessageTraces": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqMessageTraces.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "messageId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqMessageTraces.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "traces": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqMessageTracesTrace:getDmsRocketmqMessageTracesTrace"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "instanceId",
                    "messageId",
                    "region",
                    "traces",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqMessages:getDmsRocketmqMessages": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqMessages.\n",
                "properties": {
                    "endTime": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "topic"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqMessages.\n",
                "properties": {
                    "endTime": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqMessagesMessage:getDmsRocketmqMessagesMessage"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "messages",
                    "region",
                    "topic",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqMigrationTasks:getDmsRocketmqMigrationTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqMigrationTasks.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "taskId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqMigrationTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "taskId": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqMigrationTasksTask:getDmsRocketmqMigrationTasksTask"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqTopicAccessUsers:getDmsRocketmqTopicAccessUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqTopicAccessUsers.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "topic"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqTopicAccessUsers.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "policies": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqTopicAccessUsersPolicy:getDmsRocketmqTopicAccessUsersPolicy"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "policies",
                    "region",
                    "topic",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqTopicConsumerGroups:getDmsRocketmqTopicConsumerGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqTopicConsumerGroups.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "topicName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqTopicConsumerGroups.\n",
                "properties": {
                    "groups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "topicName": {
                        "type": "string"
                    }
                },
                "required": [
                    "groups",
                    "instanceId",
                    "region",
                    "topicName",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqTopics:getDmsRocketmqTopics": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqTopics.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "totalReadQueueNum": {
                        "type": "integer"
                    },
                    "totalWriteQueueNum": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqTopics.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "topics": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqTopicsTopic:getDmsRocketmqTopicsTopic"
                        },
                        "type": "array"
                    },
                    "totalReadQueueNum": {
                        "type": "integer"
                    },
                    "totalWriteQueueNum": {
                        "type": "integer"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "topics",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDmsRocketmqUsers:getDmsRocketmqUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getDmsRocketmqUsers.\n",
                "properties": {
                    "accessKey": {
                        "type": "string"
                    },
                    "admin": {
                        "type": "boolean"
                    },
                    "defaultGroupPerm": {
                        "type": "string"
                    },
                    "defaultTopicPerm": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "whiteRemoteAddress": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDmsRocketmqUsers.\n",
                "properties": {
                    "accessKey": {
                        "type": "string"
                    },
                    "admin": {
                        "type": "boolean"
                    },
                    "defaultGroupPerm": {
                        "type": "string"
                    },
                    "defaultTopicPerm": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDmsRocketmqUsersUser:getDmsRocketmqUsersUser"
                        },
                        "type": "array"
                    },
                    "whiteRemoteAddress": {
                        "type": "string"
                    }
                },
                "required": [
                    "instanceId",
                    "region",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getDnsZones:getDnsZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsZones.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routerId": {
                        "type": "string"
                    },
                    "searchMode": {
                        "type": "string"
                    },
                    "sortDir": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string"
                    },
                    "zoneType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zoneType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsZones.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routerId": {
                        "type": "string"
                    },
                    "searchMode": {
                        "type": "string"
                    },
                    "sortDir": {
                        "type": "string"
                    },
                    "sortKey": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string"
                    },
                    "zoneType": {
                        "type": "string"
                    },
                    "zones": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getDnsZonesZone:getDnsZonesZone"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "zoneType",
                    "zones",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getElbCertificate:getElbCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getElbCertificate.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getElbCertificate.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "domain",
                    "expiration",
                    "name",
                    "region",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getElbFlavors:getElbFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getElbFlavors.\n",
                "properties": {
                    "bandwidth": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "integer"
                    },
                    "cps": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorSoldOut": {
                        "type": "string"
                    },
                    "listAll": {
                        "type": "string"
                    },
                    "maxConnections": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string"
                    },
                    "qps": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getElbFlavors.\n",
                "properties": {
                    "bandwidth": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "integer"
                    },
                    "cps": {
                        "type": "integer"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorSoldOut": {
                        "type": "string"
                    },
                    "flavors": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getElbFlavorsFlavor:getElbFlavorsFlavor"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "listAll": {
                        "type": "string"
                    },
                    "maxConnections": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string"
                    },
                    "qps": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavors",
                    "ids",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getElbPools:getElbPools": {
            "inputs": {
                "description": "A collection of arguments for invoking getElbPools.\n",
                "properties": {
                    "anyPortEnable": {
                        "type": "string"
                    },
                    "connectionDrain": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "memberAddress": {
                        "type": "string"
                    },
                    "memberDeletionProtectionEnable": {
                        "type": "string"
                    },
                    "memberDeviceId": {
                        "type": "string"
                    },
                    "memberInstanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolHealth": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string"
                    },
                    "quicCidLen": {
                        "type": "integer"
                    },
                    "quicCidOffset": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getElbPools.\n",
                "properties": {
                    "anyPortEnable": {
                        "type": "string"
                    },
                    "connectionDrain": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "healthmonitorId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ipVersion": {
                        "type": "string"
                    },
                    "lbMethod": {
                        "type": "string"
                    },
                    "listenerId": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "memberAddress": {
                        "type": "string"
                    },
                    "memberDeletionProtectionEnable": {
                        "type": "string"
                    },
                    "memberDeviceId": {
                        "type": "string"
                    },
                    "memberInstanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolHealth": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "pools": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getElbPoolsPool:getElbPoolsPool"
                        },
                        "type": "array"
                    },
                    "protectionStatus": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "publicBorderGroup": {
                        "type": "string"
                    },
                    "quicCidLen": {
                        "type": "integer"
                    },
                    "quicCidOffset": {
                        "type": "integer"
                    },
                    "region": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "pools",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsApplicationTemplates:getFgsApplicationTemplates": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsApplicationTemplates.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFgsApplicationTemplates.\n",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "templates": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsApplicationTemplatesTemplate:getFgsApplicationTemplatesTemplate"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "templates",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsApplications:getFgsApplications": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsApplications.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFgsApplications.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "applications": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsApplicationsApplication:getFgsApplicationsApplication"
                        },
                        "type": "array"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "applications",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsDependencyVersions:getFgsDependencyVersions": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsDependencyVersions.\n",
                "properties": {
                    "dependencyId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "versionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dependencyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFgsDependencyVersions.\n",
                "properties": {
                    "dependencyId": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "versions": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsDependencyVersionsVersion:getFgsDependencyVersionsVersion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "dependencyId",
                    "region",
                    "versions",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsFunctionEvents:getFgsFunctionEvents": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsFunctionEvents.\n",
                "properties": {
                    "functionUrn": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "functionUrn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFgsFunctionEvents.\n",
                "properties": {
                    "events": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsFunctionEventsEvent:getFgsFunctionEventsEvent"
                        },
                        "type": "array"
                    },
                    "functionUrn": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "events",
                    "functionUrn",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsFunctionTriggers:getFgsFunctionTriggers": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsFunctionTriggers.\n",
                "properties": {
                    "endTime": {
                        "type": "string"
                    },
                    "functionUrn": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "triggerId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "functionUrn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFgsFunctionTriggers.\n",
                "properties": {
                    "endTime": {
                        "type": "string"
                    },
                    "functionUrn": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "triggerId": {
                        "type": "string"
                    },
                    "triggers": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsFunctionTriggersTrigger:getFgsFunctionTriggersTrigger"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "functionUrn",
                    "region",
                    "triggers",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsFunctions:getFgsFunctions": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsFunctions.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "packageName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFgsFunctions.\n",
                "properties": {
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "functions": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsFunctionsFunction:getFgsFunctionsFunction"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "packageName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "required": [
                    "functions",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getFgsQuotas:getFgsQuotas": {
            "inputs": {
                "description": "A collection of arguments for invoking getFgsQuotas.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFgsQuotas.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "quotas": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getFgsQuotasQuota:getFgsQuotasQuota"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "quotas",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getIdentityRoleV3:getIdentityRoleV3": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityRoleV3.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityRoleV3.\n",
                "properties": {
                    "catalog": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "catalog",
                    "description",
                    "displayName",
                    "name",
                    "policy",
                    "type",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getKpsFailedTasks:getKpsFailedTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getKpsFailedTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKpsFailedTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getKpsFailedTasksTask:getKpsFailedTasksTask"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getKpsRunningTasks:getKpsRunningTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getKpsRunningTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKpsRunningTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getKpsRunningTasksTask:getKpsRunningTasksTask"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getSfsFileSystemV2:getSfsFileSystemV2": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsFileSystemV2.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSfsFileSystemV2.\n",
                "properties": {
                    "accessLevel": {
                        "type": "string"
                    },
                    "accessTo": {
                        "type": "string"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "exportLocation": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "mountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preferred": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareAccessId": {
                        "type": "string"
                    },
                    "shareInstanceId": {
                        "type": "string"
                    },
                    "shareProto": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "accessLevel",
                    "accessTo",
                    "accessType",
                    "availabilityZone",
                    "description",
                    "exportLocation",
                    "id",
                    "isPublic",
                    "metadata",
                    "mountId",
                    "name",
                    "preferred",
                    "region",
                    "shareAccessId",
                    "shareInstanceId",
                    "shareProto",
                    "size",
                    "state",
                    "status"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getSfsTurboDataTasks:getSfsTurboDataTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboDataTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboDataTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getSfsTurboDataTasksTask:getSfsTurboDataTasksTask"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "region",
                    "shareId",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getSfsTurboDuTasks:getSfsTurboDuTasks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboDuTasks.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboDuTasks.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getSfsTurboDuTasksTask:getSfsTurboDuTasksTask"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "shareId",
                    "tasks",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getSfsTurboObsTargets:getSfsTurboObsTargets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboObsTargets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "targetId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboObsTargets.\n",
                "properties": {
                    "bucket": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "targetId": {
                        "type": "string"
                    },
                    "targets": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getSfsTurboObsTargetsTarget:getSfsTurboObsTargetsTarget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "region",
                    "shareId",
                    "targets",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getSfsTurboPermRules:getSfsTurboPermRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getSfsTurboPermRules.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "shareId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "shareId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSfsTurboPermRules.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rules": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getSfsTurboPermRulesRule:getSfsTurboPermRulesRule"
                        },
                        "type": "array"
                    },
                    "shareId": {
                        "type": "string"
                    }
                },
                "required": [
                    "region",
                    "rules",
                    "shareId",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getVpcRoute:getVpcRoute": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcRoute.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcRoute.\n",
                "properties": {
                    "destination": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "nexthop": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "destination",
                    "id",
                    "nexthop",
                    "region",
                    "tenantId",
                    "type",
                    "vpcId"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getVpnConnectionHealthChecks:getVpnConnectionHealthChecks": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnConnectionHealthChecks.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    },
                    "destinationIp": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnConnectionHealthChecks.\n",
                "properties": {
                    "connectionHealthChecks": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getVpnConnectionHealthChecksConnectionHealthCheck:getVpnConnectionHealthChecksConnectionHealthCheck"
                        },
                        "type": "array"
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "destinationIp": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "required": [
                    "connectionHealthChecks",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getVpnConnections:getVpnConnections": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnConnections.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpnType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnConnections.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getVpnConnectionsConnection:getVpnConnectionsConnection"
                        },
                        "type": "array"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "vpnType": {
                        "type": "string"
                    }
                },
                "required": [
                    "connections",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getVpnCustomerGateways:getVpnCustomerGateways": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnCustomerGateways.\n",
                "properties": {
                    "asn": {
                        "type": "integer"
                    },
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeMode": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnCustomerGateways.\n",
                "properties": {
                    "asn": {
                        "type": "integer"
                    },
                    "customerGatewayId": {
                        "type": "string"
                    },
                    "customerGateways": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getVpnCustomerGatewaysCustomerGateway:getVpnCustomerGatewaysCustomerGateway"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "routeMode": {
                        "type": "string"
                    }
                },
                "required": [
                    "customerGateways",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getVpnGatewayAvailabilityZones:getVpnGatewayAvailabilityZones": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnGatewayAvailabilityZones.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "flavor"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpnGatewayAvailabilityZones.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "flavor",
                    "names",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "cloudru:index/getVpnGateways:getVpnGateways": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpnGateways.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpnGateways.\n",
                "properties": {
                    "attachmentType": {
                        "type": "string"
                    },
                    "enterpriseProjectId": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "gateways": {
                        "items": {
                            "$ref": "#/types/cloudru:index/getVpnGatewaysGateway:getVpnGatewaysGateway"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "required": [
                    "gateways",
                    "region",
                    "id"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:cloudru/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:cloudru/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}