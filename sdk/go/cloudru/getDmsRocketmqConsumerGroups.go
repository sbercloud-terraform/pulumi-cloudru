// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetDmsRocketmqConsumerGroups(ctx *pulumi.Context, args *GetDmsRocketmqConsumerGroupsArgs, opts ...pulumi.InvokeOption) (*GetDmsRocketmqConsumerGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsRocketmqConsumerGroupsResult
	err := ctx.Invoke("cloudru:index/getDmsRocketmqConsumerGroups:getDmsRocketmqConsumerGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsRocketmqConsumerGroups.
type GetDmsRocketmqConsumerGroupsArgs struct {
	Broadcast     *bool   `pulumi:"broadcast"`
	Enabled       *bool   `pulumi:"enabled"`
	InstanceId    string  `pulumi:"instanceId"`
	Name          *string `pulumi:"name"`
	Region        *string `pulumi:"region"`
	RetryMaxTimes *int    `pulumi:"retryMaxTimes"`
}

// A collection of values returned by getDmsRocketmqConsumerGroups.
type GetDmsRocketmqConsumerGroupsResult struct {
	Broadcast *bool                               `pulumi:"broadcast"`
	Enabled   *bool                               `pulumi:"enabled"`
	Groups    []GetDmsRocketmqConsumerGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id            string  `pulumi:"id"`
	InstanceId    string  `pulumi:"instanceId"`
	Name          *string `pulumi:"name"`
	Region        string  `pulumi:"region"`
	RetryMaxTimes *int    `pulumi:"retryMaxTimes"`
}

func GetDmsRocketmqConsumerGroupsOutput(ctx *pulumi.Context, args GetDmsRocketmqConsumerGroupsOutputArgs, opts ...pulumi.InvokeOption) GetDmsRocketmqConsumerGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsRocketmqConsumerGroupsResultOutput, error) {
			args := v.(GetDmsRocketmqConsumerGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:index/getDmsRocketmqConsumerGroups:getDmsRocketmqConsumerGroups", args, GetDmsRocketmqConsumerGroupsResultOutput{}, options).(GetDmsRocketmqConsumerGroupsResultOutput), nil
		}).(GetDmsRocketmqConsumerGroupsResultOutput)
}

// A collection of arguments for invoking getDmsRocketmqConsumerGroups.
type GetDmsRocketmqConsumerGroupsOutputArgs struct {
	Broadcast     pulumi.BoolPtrInput   `pulumi:"broadcast"`
	Enabled       pulumi.BoolPtrInput   `pulumi:"enabled"`
	InstanceId    pulumi.StringInput    `pulumi:"instanceId"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	Region        pulumi.StringPtrInput `pulumi:"region"`
	RetryMaxTimes pulumi.IntPtrInput    `pulumi:"retryMaxTimes"`
}

func (GetDmsRocketmqConsumerGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRocketmqConsumerGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getDmsRocketmqConsumerGroups.
type GetDmsRocketmqConsumerGroupsResultOutput struct{ *pulumi.OutputState }

func (GetDmsRocketmqConsumerGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRocketmqConsumerGroupsResult)(nil)).Elem()
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) ToGetDmsRocketmqConsumerGroupsResultOutput() GetDmsRocketmqConsumerGroupsResultOutput {
	return o
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) ToGetDmsRocketmqConsumerGroupsResultOutputWithContext(ctx context.Context) GetDmsRocketmqConsumerGroupsResultOutput {
	return o
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) Broadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) *bool { return v.Broadcast }).(pulumi.BoolPtrOutput)
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) Groups() GetDmsRocketmqConsumerGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) []GetDmsRocketmqConsumerGroupsGroup { return v.Groups }).(GetDmsRocketmqConsumerGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsRocketmqConsumerGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDmsRocketmqConsumerGroupsResultOutput) RetryMaxTimes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupsResult) *int { return v.RetryMaxTimes }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsRocketmqConsumerGroupsResultOutput{})
}
