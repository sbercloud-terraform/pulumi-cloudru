// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type BlackWhiteList struct {
	pulumi.CustomResourceState

	// Specifies the address.
	Address pulumi.StringOutput `pulumi:"address"`
	// Specifies the IP address type.
	AddressType pulumi.IntOutput `pulumi:"addressType"`
	// Specifies the description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the address direction.
	Direction pulumi.IntOutput `pulumi:"direction"`
	// Specifies the list type.
	ListType pulumi.IntOutput `pulumi:"listType"`
	// Specifies the protected object ID.
	ObjectId pulumi.StringOutput `pulumi:"objectId"`
	// Specifies the destination port.
	Port pulumi.StringOutput `pulumi:"port"`
	// Specifies the protocol type.
	Protocol pulumi.IntOutput    `pulumi:"protocol"`
	Region   pulumi.StringOutput `pulumi:"region"`
}

// NewBlackWhiteList registers a new resource with the given unique name, arguments, and options.
func NewBlackWhiteList(ctx *pulumi.Context,
	name string, args *BlackWhiteListArgs, opts ...pulumi.ResourceOption) (*BlackWhiteList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.AddressType == nil {
		return nil, errors.New("invalid value for required argument 'AddressType'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.ListType == nil {
		return nil, errors.New("invalid value for required argument 'ListType'")
	}
	if args.ObjectId == nil {
		return nil, errors.New("invalid value for required argument 'ObjectId'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BlackWhiteList
	err := ctx.RegisterResource("sbercloud:Cfw/blackWhiteList:BlackWhiteList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBlackWhiteList gets an existing BlackWhiteList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBlackWhiteList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BlackWhiteListState, opts ...pulumi.ResourceOption) (*BlackWhiteList, error) {
	var resource BlackWhiteList
	err := ctx.ReadResource("sbercloud:Cfw/blackWhiteList:BlackWhiteList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BlackWhiteList resources.
type blackWhiteListState struct {
	// Specifies the address.
	Address *string `pulumi:"address"`
	// Specifies the IP address type.
	AddressType *int `pulumi:"addressType"`
	// Specifies the description.
	Description *string `pulumi:"description"`
	// Specifies the address direction.
	Direction *int `pulumi:"direction"`
	// Specifies the list type.
	ListType *int `pulumi:"listType"`
	// Specifies the protected object ID.
	ObjectId *string `pulumi:"objectId"`
	// Specifies the destination port.
	Port *string `pulumi:"port"`
	// Specifies the protocol type.
	Protocol *int    `pulumi:"protocol"`
	Region   *string `pulumi:"region"`
}

type BlackWhiteListState struct {
	// Specifies the address.
	Address pulumi.StringPtrInput
	// Specifies the IP address type.
	AddressType pulumi.IntPtrInput
	// Specifies the description.
	Description pulumi.StringPtrInput
	// Specifies the address direction.
	Direction pulumi.IntPtrInput
	// Specifies the list type.
	ListType pulumi.IntPtrInput
	// Specifies the protected object ID.
	ObjectId pulumi.StringPtrInput
	// Specifies the destination port.
	Port pulumi.StringPtrInput
	// Specifies the protocol type.
	Protocol pulumi.IntPtrInput
	Region   pulumi.StringPtrInput
}

func (BlackWhiteListState) ElementType() reflect.Type {
	return reflect.TypeOf((*blackWhiteListState)(nil)).Elem()
}

type blackWhiteListArgs struct {
	// Specifies the address.
	Address string `pulumi:"address"`
	// Specifies the IP address type.
	AddressType int `pulumi:"addressType"`
	// Specifies the description.
	Description *string `pulumi:"description"`
	// Specifies the address direction.
	Direction int `pulumi:"direction"`
	// Specifies the list type.
	ListType int `pulumi:"listType"`
	// Specifies the protected object ID.
	ObjectId string `pulumi:"objectId"`
	// Specifies the destination port.
	Port *string `pulumi:"port"`
	// Specifies the protocol type.
	Protocol int     `pulumi:"protocol"`
	Region   *string `pulumi:"region"`
}

// The set of arguments for constructing a BlackWhiteList resource.
type BlackWhiteListArgs struct {
	// Specifies the address.
	Address pulumi.StringInput
	// Specifies the IP address type.
	AddressType pulumi.IntInput
	// Specifies the description.
	Description pulumi.StringPtrInput
	// Specifies the address direction.
	Direction pulumi.IntInput
	// Specifies the list type.
	ListType pulumi.IntInput
	// Specifies the protected object ID.
	ObjectId pulumi.StringInput
	// Specifies the destination port.
	Port pulumi.StringPtrInput
	// Specifies the protocol type.
	Protocol pulumi.IntInput
	Region   pulumi.StringPtrInput
}

func (BlackWhiteListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*blackWhiteListArgs)(nil)).Elem()
}

type BlackWhiteListInput interface {
	pulumi.Input

	ToBlackWhiteListOutput() BlackWhiteListOutput
	ToBlackWhiteListOutputWithContext(ctx context.Context) BlackWhiteListOutput
}

func (*BlackWhiteList) ElementType() reflect.Type {
	return reflect.TypeOf((**BlackWhiteList)(nil)).Elem()
}

func (i *BlackWhiteList) ToBlackWhiteListOutput() BlackWhiteListOutput {
	return i.ToBlackWhiteListOutputWithContext(context.Background())
}

func (i *BlackWhiteList) ToBlackWhiteListOutputWithContext(ctx context.Context) BlackWhiteListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlackWhiteListOutput)
}

// BlackWhiteListArrayInput is an input type that accepts BlackWhiteListArray and BlackWhiteListArrayOutput values.
// You can construct a concrete instance of `BlackWhiteListArrayInput` via:
//
//	BlackWhiteListArray{ BlackWhiteListArgs{...} }
type BlackWhiteListArrayInput interface {
	pulumi.Input

	ToBlackWhiteListArrayOutput() BlackWhiteListArrayOutput
	ToBlackWhiteListArrayOutputWithContext(context.Context) BlackWhiteListArrayOutput
}

type BlackWhiteListArray []BlackWhiteListInput

func (BlackWhiteListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BlackWhiteList)(nil)).Elem()
}

func (i BlackWhiteListArray) ToBlackWhiteListArrayOutput() BlackWhiteListArrayOutput {
	return i.ToBlackWhiteListArrayOutputWithContext(context.Background())
}

func (i BlackWhiteListArray) ToBlackWhiteListArrayOutputWithContext(ctx context.Context) BlackWhiteListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlackWhiteListArrayOutput)
}

// BlackWhiteListMapInput is an input type that accepts BlackWhiteListMap and BlackWhiteListMapOutput values.
// You can construct a concrete instance of `BlackWhiteListMapInput` via:
//
//	BlackWhiteListMap{ "key": BlackWhiteListArgs{...} }
type BlackWhiteListMapInput interface {
	pulumi.Input

	ToBlackWhiteListMapOutput() BlackWhiteListMapOutput
	ToBlackWhiteListMapOutputWithContext(context.Context) BlackWhiteListMapOutput
}

type BlackWhiteListMap map[string]BlackWhiteListInput

func (BlackWhiteListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BlackWhiteList)(nil)).Elem()
}

func (i BlackWhiteListMap) ToBlackWhiteListMapOutput() BlackWhiteListMapOutput {
	return i.ToBlackWhiteListMapOutputWithContext(context.Background())
}

func (i BlackWhiteListMap) ToBlackWhiteListMapOutputWithContext(ctx context.Context) BlackWhiteListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlackWhiteListMapOutput)
}

type BlackWhiteListOutput struct{ *pulumi.OutputState }

func (BlackWhiteListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlackWhiteList)(nil)).Elem()
}

func (o BlackWhiteListOutput) ToBlackWhiteListOutput() BlackWhiteListOutput {
	return o
}

func (o BlackWhiteListOutput) ToBlackWhiteListOutputWithContext(ctx context.Context) BlackWhiteListOutput {
	return o
}

// Specifies the address.
func (o BlackWhiteListOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Specifies the IP address type.
func (o BlackWhiteListOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.IntOutput { return v.AddressType }).(pulumi.IntOutput)
}

// Specifies the description.
func (o BlackWhiteListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the address direction.
func (o BlackWhiteListOutput) Direction() pulumi.IntOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.IntOutput { return v.Direction }).(pulumi.IntOutput)
}

// Specifies the list type.
func (o BlackWhiteListOutput) ListType() pulumi.IntOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.IntOutput { return v.ListType }).(pulumi.IntOutput)
}

// Specifies the protected object ID.
func (o BlackWhiteListOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.StringOutput { return v.ObjectId }).(pulumi.StringOutput)
}

// Specifies the destination port.
func (o BlackWhiteListOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Specifies the protocol type.
func (o BlackWhiteListOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

func (o BlackWhiteListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BlackWhiteList) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type BlackWhiteListArrayOutput struct{ *pulumi.OutputState }

func (BlackWhiteListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BlackWhiteList)(nil)).Elem()
}

func (o BlackWhiteListArrayOutput) ToBlackWhiteListArrayOutput() BlackWhiteListArrayOutput {
	return o
}

func (o BlackWhiteListArrayOutput) ToBlackWhiteListArrayOutputWithContext(ctx context.Context) BlackWhiteListArrayOutput {
	return o
}

func (o BlackWhiteListArrayOutput) Index(i pulumi.IntInput) BlackWhiteListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BlackWhiteList {
		return vs[0].([]*BlackWhiteList)[vs[1].(int)]
	}).(BlackWhiteListOutput)
}

type BlackWhiteListMapOutput struct{ *pulumi.OutputState }

func (BlackWhiteListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BlackWhiteList)(nil)).Elem()
}

func (o BlackWhiteListMapOutput) ToBlackWhiteListMapOutput() BlackWhiteListMapOutput {
	return o
}

func (o BlackWhiteListMapOutput) ToBlackWhiteListMapOutputWithContext(ctx context.Context) BlackWhiteListMapOutput {
	return o
}

func (o BlackWhiteListMapOutput) MapIndex(k pulumi.StringInput) BlackWhiteListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BlackWhiteList {
		return vs[0].(map[string]*BlackWhiteList)[vs[1].(string)]
	}).(BlackWhiteListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlackWhiteListInput)(nil)).Elem(), &BlackWhiteList{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlackWhiteListArrayInput)(nil)).Elem(), BlackWhiteListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlackWhiteListMapInput)(nil)).Elem(), BlackWhiteListMap{})
	pulumi.RegisterOutputType(BlackWhiteListOutput{})
	pulumi.RegisterOutputType(BlackWhiteListArrayOutput{})
	pulumi.RegisterOutputType(BlackWhiteListMapOutput{})
}
