// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getPools(args?: GetPoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetPoolsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Elb/getPools:getPools", {
        "description": args.description,
        "enterpriseProjectId": args.enterpriseProjectId,
        "healthmonitorId": args.healthmonitorId,
        "lbMethod": args.lbMethod,
        "loadbalancerId": args.loadbalancerId,
        "memberAddress": args.memberAddress,
        "memberDeviceId": args.memberDeviceId,
        "name": args.name,
        "poolId": args.poolId,
        "protocol": args.protocol,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getPools.
 */
export interface GetPoolsArgs {
    description?: string;
    enterpriseProjectId?: string;
    healthmonitorId?: string;
    lbMethod?: string;
    loadbalancerId?: string;
    memberAddress?: string;
    memberDeviceId?: string;
    name?: string;
    poolId?: string;
    protocol?: string;
    region?: string;
}

/**
 * A collection of values returned by getPools.
 */
export interface GetPoolsResult {
    readonly description?: string;
    readonly enterpriseProjectId?: string;
    readonly healthmonitorId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lbMethod?: string;
    readonly loadbalancerId?: string;
    readonly memberAddress?: string;
    readonly memberDeviceId?: string;
    readonly name?: string;
    readonly poolId?: string;
    readonly pools: outputs.Elb.GetPoolsPool[];
    readonly protocol?: string;
    readonly region: string;
}
export function getPoolsOutput(args?: GetPoolsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPoolsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Elb/getPools:getPools", {
        "description": args.description,
        "enterpriseProjectId": args.enterpriseProjectId,
        "healthmonitorId": args.healthmonitorId,
        "lbMethod": args.lbMethod,
        "loadbalancerId": args.loadbalancerId,
        "memberAddress": args.memberAddress,
        "memberDeviceId": args.memberDeviceId,
        "name": args.name,
        "poolId": args.poolId,
        "protocol": args.protocol,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getPools.
 */
export interface GetPoolsOutputArgs {
    description?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    healthmonitorId?: pulumi.Input<string>;
    lbMethod?: pulumi.Input<string>;
    loadbalancerId?: pulumi.Input<string>;
    memberAddress?: pulumi.Input<string>;
    memberDeviceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    poolId?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
