// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ElbL7policy struct {
	pulumi.CustomResourceState

	Action                           pulumi.StringPtrOutput                            `pulumi:"action"`
	CreatedAt                        pulumi.StringOutput                               `pulumi:"createdAt"`
	Description                      pulumi.StringPtrOutput                            `pulumi:"description"`
	EnterpriseProjectId              pulumi.StringOutput                               `pulumi:"enterpriseProjectId"`
	FixedResponseConfig              ElbL7policyFixedResponseConfigOutput              `pulumi:"fixedResponseConfig"`
	ListenerId                       pulumi.StringOutput                               `pulumi:"listenerId"`
	Name                             pulumi.StringOutput                               `pulumi:"name"`
	Priority                         pulumi.IntOutput                                  `pulumi:"priority"`
	ProvisioningStatus               pulumi.StringOutput                               `pulumi:"provisioningStatus"`
	RedirectListenerId               pulumi.StringOutput                               `pulumi:"redirectListenerId"`
	RedirectPoolId                   pulumi.StringOutput                               `pulumi:"redirectPoolId"`
	RedirectPoolsConfigs             ElbL7policyRedirectPoolsConfigArrayOutput         `pulumi:"redirectPoolsConfigs"`
	RedirectPoolsExtendConfig        ElbL7policyRedirectPoolsExtendConfigOutput        `pulumi:"redirectPoolsExtendConfig"`
	RedirectPoolsStickySessionConfig ElbL7policyRedirectPoolsStickySessionConfigOutput `pulumi:"redirectPoolsStickySessionConfig"`
	RedirectUrlConfig                ElbL7policyRedirectUrlConfigOutput                `pulumi:"redirectUrlConfig"`
	Region                           pulumi.StringOutput                               `pulumi:"region"`
	UpdatedAt                        pulumi.StringOutput                               `pulumi:"updatedAt"`
}

// NewElbL7policy registers a new resource with the given unique name, arguments, and options.
func NewElbL7policy(ctx *pulumi.Context,
	name string, args *ElbL7policyArgs, opts ...pulumi.ResourceOption) (*ElbL7policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ListenerId == nil {
		return nil, errors.New("invalid value for required argument 'ListenerId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ElbL7policy
	err := ctx.RegisterResource("cloudru:index/elbL7policy:ElbL7policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElbL7policy gets an existing ElbL7policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElbL7policy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElbL7policyState, opts ...pulumi.ResourceOption) (*ElbL7policy, error) {
	var resource ElbL7policy
	err := ctx.ReadResource("cloudru:index/elbL7policy:ElbL7policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElbL7policy resources.
type elbL7policyState struct {
	Action                           *string                                      `pulumi:"action"`
	CreatedAt                        *string                                      `pulumi:"createdAt"`
	Description                      *string                                      `pulumi:"description"`
	EnterpriseProjectId              *string                                      `pulumi:"enterpriseProjectId"`
	FixedResponseConfig              *ElbL7policyFixedResponseConfig              `pulumi:"fixedResponseConfig"`
	ListenerId                       *string                                      `pulumi:"listenerId"`
	Name                             *string                                      `pulumi:"name"`
	Priority                         *int                                         `pulumi:"priority"`
	ProvisioningStatus               *string                                      `pulumi:"provisioningStatus"`
	RedirectListenerId               *string                                      `pulumi:"redirectListenerId"`
	RedirectPoolId                   *string                                      `pulumi:"redirectPoolId"`
	RedirectPoolsConfigs             []ElbL7policyRedirectPoolsConfig             `pulumi:"redirectPoolsConfigs"`
	RedirectPoolsExtendConfig        *ElbL7policyRedirectPoolsExtendConfig        `pulumi:"redirectPoolsExtendConfig"`
	RedirectPoolsStickySessionConfig *ElbL7policyRedirectPoolsStickySessionConfig `pulumi:"redirectPoolsStickySessionConfig"`
	RedirectUrlConfig                *ElbL7policyRedirectUrlConfig                `pulumi:"redirectUrlConfig"`
	Region                           *string                                      `pulumi:"region"`
	UpdatedAt                        *string                                      `pulumi:"updatedAt"`
}

type ElbL7policyState struct {
	Action                           pulumi.StringPtrInput
	CreatedAt                        pulumi.StringPtrInput
	Description                      pulumi.StringPtrInput
	EnterpriseProjectId              pulumi.StringPtrInput
	FixedResponseConfig              ElbL7policyFixedResponseConfigPtrInput
	ListenerId                       pulumi.StringPtrInput
	Name                             pulumi.StringPtrInput
	Priority                         pulumi.IntPtrInput
	ProvisioningStatus               pulumi.StringPtrInput
	RedirectListenerId               pulumi.StringPtrInput
	RedirectPoolId                   pulumi.StringPtrInput
	RedirectPoolsConfigs             ElbL7policyRedirectPoolsConfigArrayInput
	RedirectPoolsExtendConfig        ElbL7policyRedirectPoolsExtendConfigPtrInput
	RedirectPoolsStickySessionConfig ElbL7policyRedirectPoolsStickySessionConfigPtrInput
	RedirectUrlConfig                ElbL7policyRedirectUrlConfigPtrInput
	Region                           pulumi.StringPtrInput
	UpdatedAt                        pulumi.StringPtrInput
}

func (ElbL7policyState) ElementType() reflect.Type {
	return reflect.TypeOf((*elbL7policyState)(nil)).Elem()
}

type elbL7policyArgs struct {
	Action                           *string                                      `pulumi:"action"`
	Description                      *string                                      `pulumi:"description"`
	FixedResponseConfig              *ElbL7policyFixedResponseConfig              `pulumi:"fixedResponseConfig"`
	ListenerId                       string                                       `pulumi:"listenerId"`
	Name                             *string                                      `pulumi:"name"`
	Priority                         *int                                         `pulumi:"priority"`
	RedirectListenerId               *string                                      `pulumi:"redirectListenerId"`
	RedirectPoolId                   *string                                      `pulumi:"redirectPoolId"`
	RedirectPoolsConfigs             []ElbL7policyRedirectPoolsConfig             `pulumi:"redirectPoolsConfigs"`
	RedirectPoolsExtendConfig        *ElbL7policyRedirectPoolsExtendConfig        `pulumi:"redirectPoolsExtendConfig"`
	RedirectPoolsStickySessionConfig *ElbL7policyRedirectPoolsStickySessionConfig `pulumi:"redirectPoolsStickySessionConfig"`
	RedirectUrlConfig                *ElbL7policyRedirectUrlConfig                `pulumi:"redirectUrlConfig"`
	Region                           *string                                      `pulumi:"region"`
}

// The set of arguments for constructing a ElbL7policy resource.
type ElbL7policyArgs struct {
	Action                           pulumi.StringPtrInput
	Description                      pulumi.StringPtrInput
	FixedResponseConfig              ElbL7policyFixedResponseConfigPtrInput
	ListenerId                       pulumi.StringInput
	Name                             pulumi.StringPtrInput
	Priority                         pulumi.IntPtrInput
	RedirectListenerId               pulumi.StringPtrInput
	RedirectPoolId                   pulumi.StringPtrInput
	RedirectPoolsConfigs             ElbL7policyRedirectPoolsConfigArrayInput
	RedirectPoolsExtendConfig        ElbL7policyRedirectPoolsExtendConfigPtrInput
	RedirectPoolsStickySessionConfig ElbL7policyRedirectPoolsStickySessionConfigPtrInput
	RedirectUrlConfig                ElbL7policyRedirectUrlConfigPtrInput
	Region                           pulumi.StringPtrInput
}

func (ElbL7policyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elbL7policyArgs)(nil)).Elem()
}

type ElbL7policyInput interface {
	pulumi.Input

	ToElbL7policyOutput() ElbL7policyOutput
	ToElbL7policyOutputWithContext(ctx context.Context) ElbL7policyOutput
}

func (*ElbL7policy) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policy)(nil)).Elem()
}

func (i *ElbL7policy) ToElbL7policyOutput() ElbL7policyOutput {
	return i.ToElbL7policyOutputWithContext(context.Background())
}

func (i *ElbL7policy) ToElbL7policyOutputWithContext(ctx context.Context) ElbL7policyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyOutput)
}

// ElbL7policyArrayInput is an input type that accepts ElbL7policyArray and ElbL7policyArrayOutput values.
// You can construct a concrete instance of `ElbL7policyArrayInput` via:
//
//	ElbL7policyArray{ ElbL7policyArgs{...} }
type ElbL7policyArrayInput interface {
	pulumi.Input

	ToElbL7policyArrayOutput() ElbL7policyArrayOutput
	ToElbL7policyArrayOutputWithContext(context.Context) ElbL7policyArrayOutput
}

type ElbL7policyArray []ElbL7policyInput

func (ElbL7policyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElbL7policy)(nil)).Elem()
}

func (i ElbL7policyArray) ToElbL7policyArrayOutput() ElbL7policyArrayOutput {
	return i.ToElbL7policyArrayOutputWithContext(context.Background())
}

func (i ElbL7policyArray) ToElbL7policyArrayOutputWithContext(ctx context.Context) ElbL7policyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyArrayOutput)
}

// ElbL7policyMapInput is an input type that accepts ElbL7policyMap and ElbL7policyMapOutput values.
// You can construct a concrete instance of `ElbL7policyMapInput` via:
//
//	ElbL7policyMap{ "key": ElbL7policyArgs{...} }
type ElbL7policyMapInput interface {
	pulumi.Input

	ToElbL7policyMapOutput() ElbL7policyMapOutput
	ToElbL7policyMapOutputWithContext(context.Context) ElbL7policyMapOutput
}

type ElbL7policyMap map[string]ElbL7policyInput

func (ElbL7policyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElbL7policy)(nil)).Elem()
}

func (i ElbL7policyMap) ToElbL7policyMapOutput() ElbL7policyMapOutput {
	return i.ToElbL7policyMapOutputWithContext(context.Background())
}

func (i ElbL7policyMap) ToElbL7policyMapOutputWithContext(ctx context.Context) ElbL7policyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbL7policyMapOutput)
}

type ElbL7policyOutput struct{ *pulumi.OutputState }

func (ElbL7policyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbL7policy)(nil)).Elem()
}

func (o ElbL7policyOutput) ToElbL7policyOutput() ElbL7policyOutput {
	return o
}

func (o ElbL7policyOutput) ToElbL7policyOutputWithContext(ctx context.Context) ElbL7policyOutput {
	return o
}

func (o ElbL7policyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ElbL7policyOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) FixedResponseConfig() ElbL7policyFixedResponseConfigOutput {
	return o.ApplyT(func(v *ElbL7policy) ElbL7policyFixedResponseConfigOutput { return v.FixedResponseConfig }).(ElbL7policyFixedResponseConfigOutput)
}

func (o ElbL7policyOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

func (o ElbL7policyOutput) ProvisioningStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.ProvisioningStatus }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) RedirectListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.RedirectListenerId }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) RedirectPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.RedirectPoolId }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) RedirectPoolsConfigs() ElbL7policyRedirectPoolsConfigArrayOutput {
	return o.ApplyT(func(v *ElbL7policy) ElbL7policyRedirectPoolsConfigArrayOutput { return v.RedirectPoolsConfigs }).(ElbL7policyRedirectPoolsConfigArrayOutput)
}

func (o ElbL7policyOutput) RedirectPoolsExtendConfig() ElbL7policyRedirectPoolsExtendConfigOutput {
	return o.ApplyT(func(v *ElbL7policy) ElbL7policyRedirectPoolsExtendConfigOutput { return v.RedirectPoolsExtendConfig }).(ElbL7policyRedirectPoolsExtendConfigOutput)
}

func (o ElbL7policyOutput) RedirectPoolsStickySessionConfig() ElbL7policyRedirectPoolsStickySessionConfigOutput {
	return o.ApplyT(func(v *ElbL7policy) ElbL7policyRedirectPoolsStickySessionConfigOutput {
		return v.RedirectPoolsStickySessionConfig
	}).(ElbL7policyRedirectPoolsStickySessionConfigOutput)
}

func (o ElbL7policyOutput) RedirectUrlConfig() ElbL7policyRedirectUrlConfigOutput {
	return o.ApplyT(func(v *ElbL7policy) ElbL7policyRedirectUrlConfigOutput { return v.RedirectUrlConfig }).(ElbL7policyRedirectUrlConfigOutput)
}

func (o ElbL7policyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ElbL7policyOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbL7policy) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ElbL7policyArrayOutput struct{ *pulumi.OutputState }

func (ElbL7policyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElbL7policy)(nil)).Elem()
}

func (o ElbL7policyArrayOutput) ToElbL7policyArrayOutput() ElbL7policyArrayOutput {
	return o
}

func (o ElbL7policyArrayOutput) ToElbL7policyArrayOutputWithContext(ctx context.Context) ElbL7policyArrayOutput {
	return o
}

func (o ElbL7policyArrayOutput) Index(i pulumi.IntInput) ElbL7policyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElbL7policy {
		return vs[0].([]*ElbL7policy)[vs[1].(int)]
	}).(ElbL7policyOutput)
}

type ElbL7policyMapOutput struct{ *pulumi.OutputState }

func (ElbL7policyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElbL7policy)(nil)).Elem()
}

func (o ElbL7policyMapOutput) ToElbL7policyMapOutput() ElbL7policyMapOutput {
	return o
}

func (o ElbL7policyMapOutput) ToElbL7policyMapOutputWithContext(ctx context.Context) ElbL7policyMapOutput {
	return o
}

func (o ElbL7policyMapOutput) MapIndex(k pulumi.StringInput) ElbL7policyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElbL7policy {
		return vs[0].(map[string]*ElbL7policy)[vs[1].(string)]
	}).(ElbL7policyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyInput)(nil)).Elem(), &ElbL7policy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyArrayInput)(nil)).Elem(), ElbL7policyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbL7policyMapInput)(nil)).Elem(), ElbL7policyMap{})
	pulumi.RegisterOutputType(ElbL7policyOutput{})
	pulumi.RegisterOutputType(ElbL7policyArrayOutput{})
	pulumi.RegisterOutputType(ElbL7policyMapOutput{})
}
