// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type VpnConnectionHealthCheck struct {
	pulumi.CustomResourceState

	// Specifies the ID of the VPN connection to monitor.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// The destination IP address of the VPN connection.
	DestinationIp pulumi.StringOutput `pulumi:"destinationIp"`
	Region        pulumi.StringOutput `pulumi:"region"`
	// The source IP address of the VPN connection.
	SourceIp pulumi.StringOutput `pulumi:"sourceIp"`
	// The status of the connection health check.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewVpnConnectionHealthCheck registers a new resource with the given unique name, arguments, and options.
func NewVpnConnectionHealthCheck(ctx *pulumi.Context,
	name string, args *VpnConnectionHealthCheckArgs, opts ...pulumi.ResourceOption) (*VpnConnectionHealthCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnConnectionHealthCheck
	err := ctx.RegisterResource("sbercloud:index/vpnConnectionHealthCheck:VpnConnectionHealthCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnConnectionHealthCheck gets an existing VpnConnectionHealthCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnConnectionHealthCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnConnectionHealthCheckState, opts ...pulumi.ResourceOption) (*VpnConnectionHealthCheck, error) {
	var resource VpnConnectionHealthCheck
	err := ctx.ReadResource("sbercloud:index/vpnConnectionHealthCheck:VpnConnectionHealthCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnConnectionHealthCheck resources.
type vpnConnectionHealthCheckState struct {
	// Specifies the ID of the VPN connection to monitor.
	ConnectionId *string `pulumi:"connectionId"`
	// The destination IP address of the VPN connection.
	DestinationIp *string `pulumi:"destinationIp"`
	Region        *string `pulumi:"region"`
	// The source IP address of the VPN connection.
	SourceIp *string `pulumi:"sourceIp"`
	// The status of the connection health check.
	Status *string `pulumi:"status"`
}

type VpnConnectionHealthCheckState struct {
	// Specifies the ID of the VPN connection to monitor.
	ConnectionId pulumi.StringPtrInput
	// The destination IP address of the VPN connection.
	DestinationIp pulumi.StringPtrInput
	Region        pulumi.StringPtrInput
	// The source IP address of the VPN connection.
	SourceIp pulumi.StringPtrInput
	// The status of the connection health check.
	Status pulumi.StringPtrInput
}

func (VpnConnectionHealthCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnConnectionHealthCheckState)(nil)).Elem()
}

type vpnConnectionHealthCheckArgs struct {
	// Specifies the ID of the VPN connection to monitor.
	ConnectionId string  `pulumi:"connectionId"`
	Region       *string `pulumi:"region"`
}

// The set of arguments for constructing a VpnConnectionHealthCheck resource.
type VpnConnectionHealthCheckArgs struct {
	// Specifies the ID of the VPN connection to monitor.
	ConnectionId pulumi.StringInput
	Region       pulumi.StringPtrInput
}

func (VpnConnectionHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnConnectionHealthCheckArgs)(nil)).Elem()
}

type VpnConnectionHealthCheckInput interface {
	pulumi.Input

	ToVpnConnectionHealthCheckOutput() VpnConnectionHealthCheckOutput
	ToVpnConnectionHealthCheckOutputWithContext(ctx context.Context) VpnConnectionHealthCheckOutput
}

func (*VpnConnectionHealthCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionHealthCheck)(nil)).Elem()
}

func (i *VpnConnectionHealthCheck) ToVpnConnectionHealthCheckOutput() VpnConnectionHealthCheckOutput {
	return i.ToVpnConnectionHealthCheckOutputWithContext(context.Background())
}

func (i *VpnConnectionHealthCheck) ToVpnConnectionHealthCheckOutputWithContext(ctx context.Context) VpnConnectionHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionHealthCheckOutput)
}

// VpnConnectionHealthCheckArrayInput is an input type that accepts VpnConnectionHealthCheckArray and VpnConnectionHealthCheckArrayOutput values.
// You can construct a concrete instance of `VpnConnectionHealthCheckArrayInput` via:
//
//	VpnConnectionHealthCheckArray{ VpnConnectionHealthCheckArgs{...} }
type VpnConnectionHealthCheckArrayInput interface {
	pulumi.Input

	ToVpnConnectionHealthCheckArrayOutput() VpnConnectionHealthCheckArrayOutput
	ToVpnConnectionHealthCheckArrayOutputWithContext(context.Context) VpnConnectionHealthCheckArrayOutput
}

type VpnConnectionHealthCheckArray []VpnConnectionHealthCheckInput

func (VpnConnectionHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnConnectionHealthCheck)(nil)).Elem()
}

func (i VpnConnectionHealthCheckArray) ToVpnConnectionHealthCheckArrayOutput() VpnConnectionHealthCheckArrayOutput {
	return i.ToVpnConnectionHealthCheckArrayOutputWithContext(context.Background())
}

func (i VpnConnectionHealthCheckArray) ToVpnConnectionHealthCheckArrayOutputWithContext(ctx context.Context) VpnConnectionHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionHealthCheckArrayOutput)
}

// VpnConnectionHealthCheckMapInput is an input type that accepts VpnConnectionHealthCheckMap and VpnConnectionHealthCheckMapOutput values.
// You can construct a concrete instance of `VpnConnectionHealthCheckMapInput` via:
//
//	VpnConnectionHealthCheckMap{ "key": VpnConnectionHealthCheckArgs{...} }
type VpnConnectionHealthCheckMapInput interface {
	pulumi.Input

	ToVpnConnectionHealthCheckMapOutput() VpnConnectionHealthCheckMapOutput
	ToVpnConnectionHealthCheckMapOutputWithContext(context.Context) VpnConnectionHealthCheckMapOutput
}

type VpnConnectionHealthCheckMap map[string]VpnConnectionHealthCheckInput

func (VpnConnectionHealthCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnConnectionHealthCheck)(nil)).Elem()
}

func (i VpnConnectionHealthCheckMap) ToVpnConnectionHealthCheckMapOutput() VpnConnectionHealthCheckMapOutput {
	return i.ToVpnConnectionHealthCheckMapOutputWithContext(context.Background())
}

func (i VpnConnectionHealthCheckMap) ToVpnConnectionHealthCheckMapOutputWithContext(ctx context.Context) VpnConnectionHealthCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionHealthCheckMapOutput)
}

type VpnConnectionHealthCheckOutput struct{ *pulumi.OutputState }

func (VpnConnectionHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionHealthCheck)(nil)).Elem()
}

func (o VpnConnectionHealthCheckOutput) ToVpnConnectionHealthCheckOutput() VpnConnectionHealthCheckOutput {
	return o
}

func (o VpnConnectionHealthCheckOutput) ToVpnConnectionHealthCheckOutputWithContext(ctx context.Context) VpnConnectionHealthCheckOutput {
	return o
}

// Specifies the ID of the VPN connection to monitor.
func (o VpnConnectionHealthCheckOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnConnectionHealthCheck) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// The destination IP address of the VPN connection.
func (o VpnConnectionHealthCheckOutput) DestinationIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnConnectionHealthCheck) pulumi.StringOutput { return v.DestinationIp }).(pulumi.StringOutput)
}

func (o VpnConnectionHealthCheckOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnConnectionHealthCheck) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The source IP address of the VPN connection.
func (o VpnConnectionHealthCheckOutput) SourceIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnConnectionHealthCheck) pulumi.StringOutput { return v.SourceIp }).(pulumi.StringOutput)
}

// The status of the connection health check.
func (o VpnConnectionHealthCheckOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnConnectionHealthCheck) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type VpnConnectionHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnConnectionHealthCheck)(nil)).Elem()
}

func (o VpnConnectionHealthCheckArrayOutput) ToVpnConnectionHealthCheckArrayOutput() VpnConnectionHealthCheckArrayOutput {
	return o
}

func (o VpnConnectionHealthCheckArrayOutput) ToVpnConnectionHealthCheckArrayOutputWithContext(ctx context.Context) VpnConnectionHealthCheckArrayOutput {
	return o
}

func (o VpnConnectionHealthCheckArrayOutput) Index(i pulumi.IntInput) VpnConnectionHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnConnectionHealthCheck {
		return vs[0].([]*VpnConnectionHealthCheck)[vs[1].(int)]
	}).(VpnConnectionHealthCheckOutput)
}

type VpnConnectionHealthCheckMapOutput struct{ *pulumi.OutputState }

func (VpnConnectionHealthCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnConnectionHealthCheck)(nil)).Elem()
}

func (o VpnConnectionHealthCheckMapOutput) ToVpnConnectionHealthCheckMapOutput() VpnConnectionHealthCheckMapOutput {
	return o
}

func (o VpnConnectionHealthCheckMapOutput) ToVpnConnectionHealthCheckMapOutputWithContext(ctx context.Context) VpnConnectionHealthCheckMapOutput {
	return o
}

func (o VpnConnectionHealthCheckMapOutput) MapIndex(k pulumi.StringInput) VpnConnectionHealthCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnConnectionHealthCheck {
		return vs[0].(map[string]*VpnConnectionHealthCheck)[vs[1].(string)]
	}).(VpnConnectionHealthCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionHealthCheckInput)(nil)).Elem(), &VpnConnectionHealthCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionHealthCheckArrayInput)(nil)).Elem(), VpnConnectionHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnConnectionHealthCheckMapInput)(nil)).Elem(), VpnConnectionHealthCheckMap{})
	pulumi.RegisterOutputType(VpnConnectionHealthCheckOutput{})
	pulumi.RegisterOutputType(VpnConnectionHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionHealthCheckMapOutput{})
}
