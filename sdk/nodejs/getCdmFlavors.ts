// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get available SberCloud cdm flavors.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const flavor = sbercloud.getCdmFlavors({});
 * ```
 */
export function getCdmFlavors(args?: GetCdmFlavorsArgs, opts?: pulumi.InvokeOptions): Promise<GetCdmFlavorsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getCdmFlavors:getCdmFlavors", {
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCdmFlavors.
 */
export interface GetCdmFlavorsArgs {
    /**
     * The region in which to obtain the CDM flavors. If omitted, the provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getCdmFlavors.
 */
export interface GetCdmFlavorsResult {
    /**
     * Indicates the flavors information. Structure is documented below.
     */
    readonly flavors: outputs.GetCdmFlavorsFlavor[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The region in which to obtain the CDM flavors. If omitted, the provider-level region will be used.
     */
    readonly region: string;
    /**
     * The version of the flavor.
     */
    readonly version: string;
}
/**
 * Use this data source to get available SberCloud cdm flavors.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const flavor = sbercloud.getCdmFlavors({});
 * ```
 */
export function getCdmFlavorsOutput(args?: GetCdmFlavorsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCdmFlavorsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getCdmFlavors:getCdmFlavors", {
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCdmFlavors.
 */
export interface GetCdmFlavorsOutputArgs {
    /**
     * The region in which to obtain the CDM flavors. If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
