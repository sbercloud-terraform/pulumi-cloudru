// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type DmsRocketmqDeadLetterResend struct {
	pulumi.CustomResourceState

	InstanceId     pulumi.StringOutput      `pulumi:"instanceId"`
	MessageIdLists pulumi.StringArrayOutput `pulumi:"messageIdLists"`
	Region         pulumi.StringOutput      `pulumi:"region"`
	// Indicates the resend results.
	ResendResults DmsRocketmqDeadLetterResendResendResultArrayOutput `pulumi:"resendResults"`
	Topic         pulumi.StringOutput                                `pulumi:"topic"`
}

// NewDmsRocketmqDeadLetterResend registers a new resource with the given unique name, arguments, and options.
func NewDmsRocketmqDeadLetterResend(ctx *pulumi.Context,
	name string, args *DmsRocketmqDeadLetterResendArgs, opts ...pulumi.ResourceOption) (*DmsRocketmqDeadLetterResend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.MessageIdLists == nil {
		return nil, errors.New("invalid value for required argument 'MessageIdLists'")
	}
	if args.Topic == nil {
		return nil, errors.New("invalid value for required argument 'Topic'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DmsRocketmqDeadLetterResend
	err := ctx.RegisterResource("sbercloud:index/dmsRocketmqDeadLetterResend:DmsRocketmqDeadLetterResend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDmsRocketmqDeadLetterResend gets an existing DmsRocketmqDeadLetterResend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDmsRocketmqDeadLetterResend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DmsRocketmqDeadLetterResendState, opts ...pulumi.ResourceOption) (*DmsRocketmqDeadLetterResend, error) {
	var resource DmsRocketmqDeadLetterResend
	err := ctx.ReadResource("sbercloud:index/dmsRocketmqDeadLetterResend:DmsRocketmqDeadLetterResend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DmsRocketmqDeadLetterResend resources.
type dmsRocketmqDeadLetterResendState struct {
	InstanceId     *string  `pulumi:"instanceId"`
	MessageIdLists []string `pulumi:"messageIdLists"`
	Region         *string  `pulumi:"region"`
	// Indicates the resend results.
	ResendResults []DmsRocketmqDeadLetterResendResendResult `pulumi:"resendResults"`
	Topic         *string                                   `pulumi:"topic"`
}

type DmsRocketmqDeadLetterResendState struct {
	InstanceId     pulumi.StringPtrInput
	MessageIdLists pulumi.StringArrayInput
	Region         pulumi.StringPtrInput
	// Indicates the resend results.
	ResendResults DmsRocketmqDeadLetterResendResendResultArrayInput
	Topic         pulumi.StringPtrInput
}

func (DmsRocketmqDeadLetterResendState) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsRocketmqDeadLetterResendState)(nil)).Elem()
}

type dmsRocketmqDeadLetterResendArgs struct {
	InstanceId     string   `pulumi:"instanceId"`
	MessageIdLists []string `pulumi:"messageIdLists"`
	Region         *string  `pulumi:"region"`
	Topic          string   `pulumi:"topic"`
}

// The set of arguments for constructing a DmsRocketmqDeadLetterResend resource.
type DmsRocketmqDeadLetterResendArgs struct {
	InstanceId     pulumi.StringInput
	MessageIdLists pulumi.StringArrayInput
	Region         pulumi.StringPtrInput
	Topic          pulumi.StringInput
}

func (DmsRocketmqDeadLetterResendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsRocketmqDeadLetterResendArgs)(nil)).Elem()
}

type DmsRocketmqDeadLetterResendInput interface {
	pulumi.Input

	ToDmsRocketmqDeadLetterResendOutput() DmsRocketmqDeadLetterResendOutput
	ToDmsRocketmqDeadLetterResendOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendOutput
}

func (*DmsRocketmqDeadLetterResend) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsRocketmqDeadLetterResend)(nil)).Elem()
}

func (i *DmsRocketmqDeadLetterResend) ToDmsRocketmqDeadLetterResendOutput() DmsRocketmqDeadLetterResendOutput {
	return i.ToDmsRocketmqDeadLetterResendOutputWithContext(context.Background())
}

func (i *DmsRocketmqDeadLetterResend) ToDmsRocketmqDeadLetterResendOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqDeadLetterResendOutput)
}

// DmsRocketmqDeadLetterResendArrayInput is an input type that accepts DmsRocketmqDeadLetterResendArray and DmsRocketmqDeadLetterResendArrayOutput values.
// You can construct a concrete instance of `DmsRocketmqDeadLetterResendArrayInput` via:
//
//	DmsRocketmqDeadLetterResendArray{ DmsRocketmqDeadLetterResendArgs{...} }
type DmsRocketmqDeadLetterResendArrayInput interface {
	pulumi.Input

	ToDmsRocketmqDeadLetterResendArrayOutput() DmsRocketmqDeadLetterResendArrayOutput
	ToDmsRocketmqDeadLetterResendArrayOutputWithContext(context.Context) DmsRocketmqDeadLetterResendArrayOutput
}

type DmsRocketmqDeadLetterResendArray []DmsRocketmqDeadLetterResendInput

func (DmsRocketmqDeadLetterResendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsRocketmqDeadLetterResend)(nil)).Elem()
}

func (i DmsRocketmqDeadLetterResendArray) ToDmsRocketmqDeadLetterResendArrayOutput() DmsRocketmqDeadLetterResendArrayOutput {
	return i.ToDmsRocketmqDeadLetterResendArrayOutputWithContext(context.Background())
}

func (i DmsRocketmqDeadLetterResendArray) ToDmsRocketmqDeadLetterResendArrayOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqDeadLetterResendArrayOutput)
}

// DmsRocketmqDeadLetterResendMapInput is an input type that accepts DmsRocketmqDeadLetterResendMap and DmsRocketmqDeadLetterResendMapOutput values.
// You can construct a concrete instance of `DmsRocketmqDeadLetterResendMapInput` via:
//
//	DmsRocketmqDeadLetterResendMap{ "key": DmsRocketmqDeadLetterResendArgs{...} }
type DmsRocketmqDeadLetterResendMapInput interface {
	pulumi.Input

	ToDmsRocketmqDeadLetterResendMapOutput() DmsRocketmqDeadLetterResendMapOutput
	ToDmsRocketmqDeadLetterResendMapOutputWithContext(context.Context) DmsRocketmqDeadLetterResendMapOutput
}

type DmsRocketmqDeadLetterResendMap map[string]DmsRocketmqDeadLetterResendInput

func (DmsRocketmqDeadLetterResendMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsRocketmqDeadLetterResend)(nil)).Elem()
}

func (i DmsRocketmqDeadLetterResendMap) ToDmsRocketmqDeadLetterResendMapOutput() DmsRocketmqDeadLetterResendMapOutput {
	return i.ToDmsRocketmqDeadLetterResendMapOutputWithContext(context.Background())
}

func (i DmsRocketmqDeadLetterResendMap) ToDmsRocketmqDeadLetterResendMapOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqDeadLetterResendMapOutput)
}

type DmsRocketmqDeadLetterResendOutput struct{ *pulumi.OutputState }

func (DmsRocketmqDeadLetterResendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsRocketmqDeadLetterResend)(nil)).Elem()
}

func (o DmsRocketmqDeadLetterResendOutput) ToDmsRocketmqDeadLetterResendOutput() DmsRocketmqDeadLetterResendOutput {
	return o
}

func (o DmsRocketmqDeadLetterResendOutput) ToDmsRocketmqDeadLetterResendOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendOutput {
	return o
}

func (o DmsRocketmqDeadLetterResendOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqDeadLetterResend) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o DmsRocketmqDeadLetterResendOutput) MessageIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsRocketmqDeadLetterResend) pulumi.StringArrayOutput { return v.MessageIdLists }).(pulumi.StringArrayOutput)
}

func (o DmsRocketmqDeadLetterResendOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqDeadLetterResend) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates the resend results.
func (o DmsRocketmqDeadLetterResendOutput) ResendResults() DmsRocketmqDeadLetterResendResendResultArrayOutput {
	return o.ApplyT(func(v *DmsRocketmqDeadLetterResend) DmsRocketmqDeadLetterResendResendResultArrayOutput {
		return v.ResendResults
	}).(DmsRocketmqDeadLetterResendResendResultArrayOutput)
}

func (o DmsRocketmqDeadLetterResendOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqDeadLetterResend) pulumi.StringOutput { return v.Topic }).(pulumi.StringOutput)
}

type DmsRocketmqDeadLetterResendArrayOutput struct{ *pulumi.OutputState }

func (DmsRocketmqDeadLetterResendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsRocketmqDeadLetterResend)(nil)).Elem()
}

func (o DmsRocketmqDeadLetterResendArrayOutput) ToDmsRocketmqDeadLetterResendArrayOutput() DmsRocketmqDeadLetterResendArrayOutput {
	return o
}

func (o DmsRocketmqDeadLetterResendArrayOutput) ToDmsRocketmqDeadLetterResendArrayOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendArrayOutput {
	return o
}

func (o DmsRocketmqDeadLetterResendArrayOutput) Index(i pulumi.IntInput) DmsRocketmqDeadLetterResendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DmsRocketmqDeadLetterResend {
		return vs[0].([]*DmsRocketmqDeadLetterResend)[vs[1].(int)]
	}).(DmsRocketmqDeadLetterResendOutput)
}

type DmsRocketmqDeadLetterResendMapOutput struct{ *pulumi.OutputState }

func (DmsRocketmqDeadLetterResendMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsRocketmqDeadLetterResend)(nil)).Elem()
}

func (o DmsRocketmqDeadLetterResendMapOutput) ToDmsRocketmqDeadLetterResendMapOutput() DmsRocketmqDeadLetterResendMapOutput {
	return o
}

func (o DmsRocketmqDeadLetterResendMapOutput) ToDmsRocketmqDeadLetterResendMapOutputWithContext(ctx context.Context) DmsRocketmqDeadLetterResendMapOutput {
	return o
}

func (o DmsRocketmqDeadLetterResendMapOutput) MapIndex(k pulumi.StringInput) DmsRocketmqDeadLetterResendOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DmsRocketmqDeadLetterResend {
		return vs[0].(map[string]*DmsRocketmqDeadLetterResend)[vs[1].(string)]
	}).(DmsRocketmqDeadLetterResendOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqDeadLetterResendInput)(nil)).Elem(), &DmsRocketmqDeadLetterResend{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqDeadLetterResendArrayInput)(nil)).Elem(), DmsRocketmqDeadLetterResendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqDeadLetterResendMapInput)(nil)).Elem(), DmsRocketmqDeadLetterResendMap{})
	pulumi.RegisterOutputType(DmsRocketmqDeadLetterResendOutput{})
	pulumi.RegisterOutputType(DmsRocketmqDeadLetterResendArrayOutput{})
	pulumi.RegisterOutputType(DmsRocketmqDeadLetterResendMapOutput{})
}
