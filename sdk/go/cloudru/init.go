// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloudru:index/apigAclPolicy:ApigAclPolicy":
		r = &ApigAclPolicy{}
	case "cloudru:index/apigAclPolicyAssociate:ApigAclPolicyAssociate":
		r = &ApigAclPolicyAssociate{}
	case "cloudru:index/apigApiAction:ApigApiAction":
		r = &ApigApiAction{}
	case "cloudru:index/apigApiBatchAction:ApigApiBatchAction":
		r = &ApigApiBatchAction{}
	case "cloudru:index/apigApiCheck:ApigApiCheck":
		r = &ApigApiCheck{}
	case "cloudru:index/apigApiDebug:ApigApiDebug":
		r = &ApigApiDebug{}
	case "cloudru:index/apigApiVersionUnpublish:ApigApiVersionUnpublish":
		r = &ApigApiVersionUnpublish{}
	case "cloudru:index/apigAppcode:ApigAppcode":
		r = &ApigAppcode{}
	case "cloudru:index/apigApplicationAcl:ApigApplicationAcl":
		r = &ApigApplicationAcl{}
	case "cloudru:index/apigApplicationAuthorization:ApigApplicationAuthorization":
		r = &ApigApplicationAuthorization{}
	case "cloudru:index/apigApplicationQuota:ApigApplicationQuota":
		r = &ApigApplicationQuota{}
	case "cloudru:index/apigApplicationQuotaAssociate:ApigApplicationQuotaAssociate":
		r = &ApigApplicationQuotaAssociate{}
	case "cloudru:index/apigCertificate:ApigCertificate":
		r = &ApigCertificate{}
	case "cloudru:index/apigChannel:ApigChannel":
		r = &ApigChannel{}
	case "cloudru:index/apigEndpointConnectionManagement:ApigEndpointConnectionManagement":
		r = &ApigEndpointConnectionManagement{}
	case "cloudru:index/apigEndpointWhitelist:ApigEndpointWhitelist":
		r = &ApigEndpointWhitelist{}
	case "cloudru:index/apigEnvironmentVariable:ApigEnvironmentVariable":
		r = &ApigEnvironmentVariable{}
	case "cloudru:index/apigInstanceFeature:ApigInstanceFeature":
		r = &ApigInstanceFeature{}
	case "cloudru:index/apigInstanceRoutes:ApigInstanceRoutes":
		r = &ApigInstanceRoutes{}
	case "cloudru:index/apigPlugin:ApigPlugin":
		r = &ApigPlugin{}
	case "cloudru:index/apigPluginAssociate:ApigPluginAssociate":
		r = &ApigPluginAssociate{}
	case "cloudru:index/apigPluginBatchApisAssociate:ApigPluginBatchApisAssociate":
		r = &ApigPluginBatchApisAssociate{}
	case "cloudru:index/apigSignature:ApigSignature":
		r = &ApigSignature{}
	case "cloudru:index/apigSignatureAssociate:ApigSignatureAssociate":
		r = &ApigSignatureAssociate{}
	case "cloudru:index/cbhAssetAgencyAuthorization:CbhAssetAgencyAuthorization":
		r = &CbhAssetAgencyAuthorization{}
	case "cloudru:index/cbhHaInstance:CbhHaInstance":
		r = &CbhHaInstance{}
	case "cloudru:index/cbhInstance:CbhInstance":
		r = &CbhInstance{}
	case "cloudru:index/cbrBackupShare:CbrBackupShare":
		r = &CbrBackupShare{}
	case "cloudru:index/cbrBackupShareAccepter:CbrBackupShareAccepter":
		r = &CbrBackupShareAccepter{}
	case "cloudru:index/cbrCheckpoint:CbrCheckpoint":
		r = &CbrCheckpoint{}
	case "cloudru:index/cceClusterUpgrade:CceClusterUpgrade":
		r = &CceClusterUpgrade{}
	case "cloudru:index/cceNodesRemove:CceNodesRemove":
		r = &CceNodesRemove{}
	case "cloudru:index/cssConfiguration:CssConfiguration":
		r = &CssConfiguration{}
	case "cloudru:index/dcsAccount:DcsAccount":
		r = &DcsAccount{}
	case "cloudru:index/dcsBackup:DcsBackup":
		r = &DcsBackup{}
	case "cloudru:index/dcsParameters:DcsParameters":
		r = &DcsParameters{}
	case "cloudru:index/dcsRestore:DcsRestore":
		r = &DcsRestore{}
	case "cloudru:index/ddsParameterTemplate:DdsParameterTemplate":
		r = &DdsParameterTemplate{}
	case "cloudru:index/ddsParameterTemplateApply:DdsParameterTemplateApply":
		r = &DdsParameterTemplateApply{}
	case "cloudru:index/ddsParameterTemplateCompare:DdsParameterTemplateCompare":
		r = &DdsParameterTemplateCompare{}
	case "cloudru:index/ddsParameterTemplateCopy:DdsParameterTemplateCopy":
		r = &DdsParameterTemplateCopy{}
	case "cloudru:index/ddsParameterTemplateReset:DdsParameterTemplateReset":
		r = &DdsParameterTemplateReset{}
	case "cloudru:index/dmsInstance:DmsInstance":
		r = &DmsInstance{}
	case "cloudru:index/dmsKafkaConsumerGroup:DmsKafkaConsumerGroup":
		r = &DmsKafkaConsumerGroup{}
	case "cloudru:index/dmsKafkaMessageProduce:DmsKafkaMessageProduce":
		r = &DmsKafkaMessageProduce{}
	case "cloudru:index/dmsRocketmqConsumerGroup:DmsRocketmqConsumerGroup":
		r = &DmsRocketmqConsumerGroup{}
	case "cloudru:index/dmsRocketmqConsumptionVerify:DmsRocketmqConsumptionVerify":
		r = &DmsRocketmqConsumptionVerify{}
	case "cloudru:index/dmsRocketmqDeadLetterResend:DmsRocketmqDeadLetterResend":
		r = &DmsRocketmqDeadLetterResend{}
	case "cloudru:index/dmsRocketmqInstance:DmsRocketmqInstance":
		r = &DmsRocketmqInstance{}
	case "cloudru:index/dmsRocketmqMessageOffsetReset:DmsRocketmqMessageOffsetReset":
		r = &DmsRocketmqMessageOffsetReset{}
	case "cloudru:index/dmsRocketmqMigrationTask:DmsRocketmqMigrationTask":
		r = &DmsRocketmqMigrationTask{}
	case "cloudru:index/dmsRocketmqTopic:DmsRocketmqTopic":
		r = &DmsRocketmqTopic{}
	case "cloudru:index/dmsRocketmqUser:DmsRocketmqUser":
		r = &DmsRocketmqUser{}
	case "cloudru:index/elbCertificate:ElbCertificate":
		r = &ElbCertificate{}
	case "cloudru:index/elbIpgroup:ElbIpgroup":
		r = &ElbIpgroup{}
	case "cloudru:index/elbL7policy:ElbL7policy":
		r = &ElbL7policy{}
	case "cloudru:index/elbL7rule:ElbL7rule":
		r = &ElbL7rule{}
	case "cloudru:index/elbListener:ElbListener":
		r = &ElbListener{}
	case "cloudru:index/elbLoadbalancer:ElbLoadbalancer":
		r = &ElbLoadbalancer{}
	case "cloudru:index/elbMember:ElbMember":
		r = &ElbMember{}
	case "cloudru:index/elbMonitor:ElbMonitor":
		r = &ElbMonitor{}
	case "cloudru:index/elbPool:ElbPool":
		r = &ElbPool{}
	case "cloudru:index/elbSecurityPolicy:ElbSecurityPolicy":
		r = &ElbSecurityPolicy{}
	case "cloudru:index/fgsApplication:FgsApplication":
		r = &FgsApplication{}
	case "cloudru:index/fgsAsyncInvokeConfiguration:FgsAsyncInvokeConfiguration":
		r = &FgsAsyncInvokeConfiguration{}
	case "cloudru:index/fgsDependencyVersion:FgsDependencyVersion":
		r = &FgsDependencyVersion{}
	case "cloudru:index/fgsFunctionEvent:FgsFunctionEvent":
		r = &FgsFunctionEvent{}
	case "cloudru:index/fgsFunctionTopping:FgsFunctionTopping":
		r = &FgsFunctionTopping{}
	case "cloudru:index/fgsFunctionTrigger:FgsFunctionTrigger":
		r = &FgsFunctionTrigger{}
	case "cloudru:index/fgsFunctionTriggerStatusAction:FgsFunctionTriggerStatusAction":
		r = &FgsFunctionTriggerStatusAction{}
	case "cloudru:index/fgsLtsLogEnable:FgsLtsLogEnable":
		r = &FgsLtsLogEnable{}
	case "cloudru:index/gesGraph:GesGraph":
		r = &GesGraph{}
	case "cloudru:index/identityGroupMembershipV3:IdentityGroupMembershipV3":
		r = &IdentityGroupMembershipV3{}
	case "cloudru:index/identityGroupV3:IdentityGroupV3":
		r = &IdentityGroupV3{}
	case "cloudru:index/identityRoleAssignmentV3:IdentityRoleAssignmentV3":
		r = &IdentityRoleAssignmentV3{}
	case "cloudru:index/identityUserV3:IdentityUserV3":
		r = &IdentityUserV3{}
	case "cloudru:index/kpsKeypairAssociate:KpsKeypairAssociate":
		r = &KpsKeypairAssociate{}
	case "cloudru:index/kpsKeypairDisassociate:KpsKeypairDisassociate":
		r = &KpsKeypairDisassociate{}
	case "cloudru:index/networkingEipAssociate:NetworkingEipAssociate":
		r = &NetworkingEipAssociate{}
	case "cloudru:index/obsBucketAcl:ObsBucketAcl":
		r = &ObsBucketAcl{}
	case "cloudru:index/sfsTurboDataTask:SfsTurboDataTask":
		r = &SfsTurboDataTask{}
	case "cloudru:index/sfsTurboDir:SfsTurboDir":
		r = &SfsTurboDir{}
	case "cloudru:index/sfsTurboDirQuota:SfsTurboDirQuota":
		r = &SfsTurboDirQuota{}
	case "cloudru:index/sfsTurboDuTask:SfsTurboDuTask":
		r = &SfsTurboDuTask{}
	case "cloudru:index/sfsTurboObsTarget:SfsTurboObsTarget":
		r = &SfsTurboObsTarget{}
	case "cloudru:index/sfsTurboPermRule:SfsTurboPermRule":
		r = &SfsTurboPermRule{}
	case "cloudru:index/smnMessageDetection:SmnMessageDetection":
		r = &SmnMessageDetection{}
	case "cloudru:index/smnSubscription:SmnSubscription":
		r = &SmnSubscription{}
	case "cloudru:index/smnTopic:SmnTopic":
		r = &SmnTopic{}
	case "cloudru:index/swrOrganization:SwrOrganization":
		r = &SwrOrganization{}
	case "cloudru:index/swrOrganizationPermissions:SwrOrganizationPermissions":
		r = &SwrOrganizationPermissions{}
	case "cloudru:index/swrRepository:SwrRepository":
		r = &SwrRepository{}
	case "cloudru:index/vpnConnection:VpnConnection":
		r = &VpnConnection{}
	case "cloudru:index/vpnConnectionHealthCheck:VpnConnectionHealthCheck":
		r = &VpnConnectionHealthCheck{}
	case "cloudru:index/vpnCustomerGateway:VpnCustomerGateway":
		r = &VpnCustomerGateway{}
	case "cloudru:index/vpnGateway:VpnGateway":
		r = &VpnGateway{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:cloudru" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigAclPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigAclPolicyAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApiAction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApiBatchAction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApiCheck",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApiDebug",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApiVersionUnpublish",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigAppcode",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApplicationAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApplicationAuthorization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApplicationQuota",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigApplicationQuotaAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigChannel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigEndpointConnectionManagement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigEndpointWhitelist",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigEnvironmentVariable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigInstanceFeature",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigInstanceRoutes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigPlugin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigPluginAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigPluginBatchApisAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigSignature",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/apigSignatureAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cbhAssetAgencyAuthorization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cbhHaInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cbhInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cbrBackupShare",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cbrBackupShareAccepter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cbrCheckpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cceClusterUpgrade",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cceNodesRemove",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/cssConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dcsAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dcsBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dcsParameters",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dcsRestore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/ddsParameterTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/ddsParameterTemplateApply",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/ddsParameterTemplateCompare",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/ddsParameterTemplateCopy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/ddsParameterTemplateReset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsKafkaConsumerGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsKafkaMessageProduce",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqConsumerGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqConsumptionVerify",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqDeadLetterResend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqMessageOffsetReset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqMigrationTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/dmsRocketmqUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbIpgroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbL7policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbL7rule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbListener",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbLoadbalancer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbMember",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbMonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/elbSecurityPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsApplication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsAsyncInvokeConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsDependencyVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsFunctionEvent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsFunctionTopping",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsFunctionTrigger",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsFunctionTriggerStatusAction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/fgsLtsLogEnable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/gesGraph",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/identityGroupMembershipV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/identityGroupV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/identityRoleAssignmentV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/identityUserV3",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/kpsKeypairAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/kpsKeypairDisassociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/networkingEipAssociate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/obsBucketAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/sfsTurboDataTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/sfsTurboDir",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/sfsTurboDirQuota",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/sfsTurboDuTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/sfsTurboObsTarget",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/sfsTurboPermRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/smnMessageDetection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/smnSubscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/smnTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/swrOrganization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/swrOrganizationPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/swrRepository",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/vpnConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/vpnConnectionHealthCheck",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/vpnCustomerGateway",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"index/vpnGateway",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"cloudru",
		&pkg{version},
	)
}
