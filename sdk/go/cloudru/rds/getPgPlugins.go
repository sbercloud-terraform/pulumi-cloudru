// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetPgPlugins(ctx *pulumi.Context, args *GetPgPluginsArgs, opts ...pulumi.InvokeOption) (*GetPgPluginsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPgPluginsResult
	err := ctx.Invoke("cloudru:Rds/getPgPlugins:getPgPlugins", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPgPlugins.
type GetPgPluginsArgs struct {
	Created      *bool   `pulumi:"created"`
	DatabaseName string  `pulumi:"databaseName"`
	InstanceId   string  `pulumi:"instanceId"`
	Name         *string `pulumi:"name"`
	Region       *string `pulumi:"region"`
	Version      *string `pulumi:"version"`
}

// A collection of values returned by getPgPlugins.
type GetPgPluginsResult struct {
	Created      *bool  `pulumi:"created"`
	DatabaseName string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string               `pulumi:"id"`
	InstanceId string               `pulumi:"instanceId"`
	Name       *string              `pulumi:"name"`
	Plugins    []GetPgPluginsPlugin `pulumi:"plugins"`
	Region     string               `pulumi:"region"`
	Version    *string              `pulumi:"version"`
}

func GetPgPluginsOutput(ctx *pulumi.Context, args GetPgPluginsOutputArgs, opts ...pulumi.InvokeOption) GetPgPluginsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPgPluginsResultOutput, error) {
			args := v.(GetPgPluginsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Rds/getPgPlugins:getPgPlugins", args, GetPgPluginsResultOutput{}, options).(GetPgPluginsResultOutput), nil
		}).(GetPgPluginsResultOutput)
}

// A collection of arguments for invoking getPgPlugins.
type GetPgPluginsOutputArgs struct {
	Created      pulumi.BoolPtrInput   `pulumi:"created"`
	DatabaseName pulumi.StringInput    `pulumi:"databaseName"`
	InstanceId   pulumi.StringInput    `pulumi:"instanceId"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	Version      pulumi.StringPtrInput `pulumi:"version"`
}

func (GetPgPluginsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPluginsArgs)(nil)).Elem()
}

// A collection of values returned by getPgPlugins.
type GetPgPluginsResultOutput struct{ *pulumi.OutputState }

func (GetPgPluginsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPluginsResult)(nil)).Elem()
}

func (o GetPgPluginsResultOutput) ToGetPgPluginsResultOutput() GetPgPluginsResultOutput {
	return o
}

func (o GetPgPluginsResultOutput) ToGetPgPluginsResultOutputWithContext(ctx context.Context) GetPgPluginsResultOutput {
	return o
}

func (o GetPgPluginsResultOutput) Created() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPgPluginsResult) *bool { return v.Created }).(pulumi.BoolPtrOutput)
}

func (o GetPgPluginsResultOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsResult) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPgPluginsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPgPluginsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetPgPluginsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPluginsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetPgPluginsResultOutput) Plugins() GetPgPluginsPluginArrayOutput {
	return o.ApplyT(func(v GetPgPluginsResult) []GetPgPluginsPlugin { return v.Plugins }).(GetPgPluginsPluginArrayOutput)
}

func (o GetPgPluginsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetPgPluginsResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgPluginsResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPgPluginsResultOutput{})
}
