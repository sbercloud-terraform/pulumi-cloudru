// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSfsTurboDataTasks(args: GetSfsTurboDataTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetSfsTurboDataTasksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:index/getSfsTurboDataTasks:getSfsTurboDataTasks", {
        "region": args.region,
        "shareId": args.shareId,
        "status": args.status,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getSfsTurboDataTasks.
 */
export interface GetSfsTurboDataTasksArgs {
    region?: string;
    shareId: string;
    status?: string;
    type?: string;
}

/**
 * A collection of values returned by getSfsTurboDataTasks.
 */
export interface GetSfsTurboDataTasksResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly shareId: string;
    readonly status?: string;
    readonly tasks: outputs.GetSfsTurboDataTasksTask[];
    readonly type?: string;
}
export function getSfsTurboDataTasksOutput(args: GetSfsTurboDataTasksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSfsTurboDataTasksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:index/getSfsTurboDataTasks:getSfsTurboDataTasks", {
        "region": args.region,
        "shareId": args.shareId,
        "status": args.status,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getSfsTurboDataTasks.
 */
export interface GetSfsTurboDataTasksOutputArgs {
    region?: pulumi.Input<string>;
    shareId: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
