// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCbhAvailabilityZones(args?: GetCbhAvailabilityZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetCbhAvailabilityZonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:index/getCbhAvailabilityZones:getCbhAvailabilityZones", {
        "displayName": args.displayName,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCbhAvailabilityZones.
 */
export interface GetCbhAvailabilityZonesArgs {
    displayName?: string;
    name?: string;
    region?: string;
}

/**
 * A collection of values returned by getCbhAvailabilityZones.
 */
export interface GetCbhAvailabilityZonesResult {
    readonly availabilityZones: outputs.GetCbhAvailabilityZonesAvailabilityZone[];
    readonly displayName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly region: string;
}
export function getCbhAvailabilityZonesOutput(args?: GetCbhAvailabilityZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCbhAvailabilityZonesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:index/getCbhAvailabilityZones:getCbhAvailabilityZones", {
        "displayName": args.displayName,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getCbhAvailabilityZones.
 */
export interface GetCbhAvailabilityZonesOutputArgs {
    displayName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
