// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetRoutes(ctx *pulumi.Context, args *GetRoutesArgs, opts ...pulumi.InvokeOption) (*GetRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRoutesResult
	err := ctx.Invoke("sbercloud:Vpc/getRoutes:getRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutes.
type GetRoutesArgs struct {
	Destination *string `pulumi:"destination"`
	Region      *string `pulumi:"region"`
	Type        *string `pulumi:"type"`
	VpcId       *string `pulumi:"vpcId"`
}

// A collection of values returned by getRoutes.
type GetRoutesResult struct {
	Destination *string `pulumi:"destination"`
	// The provider-assigned unique ID for this managed resource.
	Id     string           `pulumi:"id"`
	Region string           `pulumi:"region"`
	Routes []GetRoutesRoute `pulumi:"routes"`
	Type   *string          `pulumi:"type"`
	VpcId  *string          `pulumi:"vpcId"`
}

func GetRoutesOutput(ctx *pulumi.Context, args GetRoutesOutputArgs, opts ...pulumi.InvokeOption) GetRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRoutesResultOutput, error) {
			args := v.(GetRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Vpc/getRoutes:getRoutes", args, GetRoutesResultOutput{}, options).(GetRoutesResultOutput), nil
		}).(GetRoutesResultOutput)
}

// A collection of arguments for invoking getRoutes.
type GetRoutesOutputArgs struct {
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	Region      pulumi.StringPtrInput `pulumi:"region"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	VpcId       pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getRoutes.
type GetRoutesResultOutput struct{ *pulumi.OutputState }

func (GetRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesResult)(nil)).Elem()
}

func (o GetRoutesResultOutput) ToGetRoutesResultOutput() GetRoutesResultOutput {
	return o
}

func (o GetRoutesResultOutput) ToGetRoutesResultOutputWithContext(ctx context.Context) GetRoutesResultOutput {
	return o
}

func (o GetRoutesResultOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRoutesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRoutesResultOutput) Routes() GetRoutesRouteArrayOutput {
	return o.ApplyT(func(v GetRoutesResult) []GetRoutesRoute { return v.Routes }).(GetRoutesRouteArrayOutput)
}

func (o GetRoutesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetRoutesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRoutesResultOutput{})
}
