// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetRegions(ctx *pulumi.Context, args *GetRegionsArgs, opts ...pulumi.InvokeOption) (*GetRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionsResult
	err := ctx.Invoke("sbercloud:Cfw/getRegions:getRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegions.
type GetRegionsArgs struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FwInstanceId        string  `pulumi:"fwInstanceId"`
	Region              *string `pulumi:"region"`
}

// A collection of values returned by getRegions.
type GetRegionsResult struct {
	Data                string  `pulumi:"data"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FwInstanceId        string  `pulumi:"fwInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
}

func GetRegionsOutput(ctx *pulumi.Context, args GetRegionsOutputArgs, opts ...pulumi.InvokeOption) GetRegionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegionsResultOutput, error) {
			args := v.(GetRegionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Cfw/getRegions:getRegions", args, GetRegionsResultOutput{}, options).(GetRegionsResultOutput), nil
		}).(GetRegionsResultOutput)
}

// A collection of arguments for invoking getRegions.
type GetRegionsOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	FwInstanceId        pulumi.StringInput    `pulumi:"fwInstanceId"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
}

func (GetRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getRegions.
type GetRegionsResultOutput struct{ *pulumi.OutputState }

func (GetRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsResult)(nil)).Elem()
}

func (o GetRegionsResultOutput) ToGetRegionsResultOutput() GetRegionsResultOutput {
	return o
}

func (o GetRegionsResultOutput) ToGetRegionsResultOutputWithContext(ctx context.Context) GetRegionsResultOutput {
	return o
}

func (o GetRegionsResultOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsResult) string { return v.Data }).(pulumi.StringOutput)
}

func (o GetRegionsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o GetRegionsResultOutput) FwInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsResult) string { return v.FwInstanceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionsResultOutput{})
}
