// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type DdsParameterTemplateCompare struct {
	pulumi.CustomResourceState

	Differences           DdsParameterTemplateCompareDifferenceArrayOutput `pulumi:"differences"`
	Region                pulumi.StringOutput                              `pulumi:"region"`
	SourceConfigurationId pulumi.StringOutput                              `pulumi:"sourceConfigurationId"`
	TargetConfigurationId pulumi.StringOutput                              `pulumi:"targetConfigurationId"`
}

// NewDdsParameterTemplateCompare registers a new resource with the given unique name, arguments, and options.
func NewDdsParameterTemplateCompare(ctx *pulumi.Context,
	name string, args *DdsParameterTemplateCompareArgs, opts ...pulumi.ResourceOption) (*DdsParameterTemplateCompare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'SourceConfigurationId'")
	}
	if args.TargetConfigurationId == nil {
		return nil, errors.New("invalid value for required argument 'TargetConfigurationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DdsParameterTemplateCompare
	err := ctx.RegisterResource("sbercloud:index/ddsParameterTemplateCompare:DdsParameterTemplateCompare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDdsParameterTemplateCompare gets an existing DdsParameterTemplateCompare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDdsParameterTemplateCompare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DdsParameterTemplateCompareState, opts ...pulumi.ResourceOption) (*DdsParameterTemplateCompare, error) {
	var resource DdsParameterTemplateCompare
	err := ctx.ReadResource("sbercloud:index/ddsParameterTemplateCompare:DdsParameterTemplateCompare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DdsParameterTemplateCompare resources.
type ddsParameterTemplateCompareState struct {
	Differences           []DdsParameterTemplateCompareDifference `pulumi:"differences"`
	Region                *string                                 `pulumi:"region"`
	SourceConfigurationId *string                                 `pulumi:"sourceConfigurationId"`
	TargetConfigurationId *string                                 `pulumi:"targetConfigurationId"`
}

type DdsParameterTemplateCompareState struct {
	Differences           DdsParameterTemplateCompareDifferenceArrayInput
	Region                pulumi.StringPtrInput
	SourceConfigurationId pulumi.StringPtrInput
	TargetConfigurationId pulumi.StringPtrInput
}

func (DdsParameterTemplateCompareState) ElementType() reflect.Type {
	return reflect.TypeOf((*ddsParameterTemplateCompareState)(nil)).Elem()
}

type ddsParameterTemplateCompareArgs struct {
	Region                *string `pulumi:"region"`
	SourceConfigurationId string  `pulumi:"sourceConfigurationId"`
	TargetConfigurationId string  `pulumi:"targetConfigurationId"`
}

// The set of arguments for constructing a DdsParameterTemplateCompare resource.
type DdsParameterTemplateCompareArgs struct {
	Region                pulumi.StringPtrInput
	SourceConfigurationId pulumi.StringInput
	TargetConfigurationId pulumi.StringInput
}

func (DdsParameterTemplateCompareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ddsParameterTemplateCompareArgs)(nil)).Elem()
}

type DdsParameterTemplateCompareInput interface {
	pulumi.Input

	ToDdsParameterTemplateCompareOutput() DdsParameterTemplateCompareOutput
	ToDdsParameterTemplateCompareOutputWithContext(ctx context.Context) DdsParameterTemplateCompareOutput
}

func (*DdsParameterTemplateCompare) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsParameterTemplateCompare)(nil)).Elem()
}

func (i *DdsParameterTemplateCompare) ToDdsParameterTemplateCompareOutput() DdsParameterTemplateCompareOutput {
	return i.ToDdsParameterTemplateCompareOutputWithContext(context.Background())
}

func (i *DdsParameterTemplateCompare) ToDdsParameterTemplateCompareOutputWithContext(ctx context.Context) DdsParameterTemplateCompareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsParameterTemplateCompareOutput)
}

// DdsParameterTemplateCompareArrayInput is an input type that accepts DdsParameterTemplateCompareArray and DdsParameterTemplateCompareArrayOutput values.
// You can construct a concrete instance of `DdsParameterTemplateCompareArrayInput` via:
//
//	DdsParameterTemplateCompareArray{ DdsParameterTemplateCompareArgs{...} }
type DdsParameterTemplateCompareArrayInput interface {
	pulumi.Input

	ToDdsParameterTemplateCompareArrayOutput() DdsParameterTemplateCompareArrayOutput
	ToDdsParameterTemplateCompareArrayOutputWithContext(context.Context) DdsParameterTemplateCompareArrayOutput
}

type DdsParameterTemplateCompareArray []DdsParameterTemplateCompareInput

func (DdsParameterTemplateCompareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdsParameterTemplateCompare)(nil)).Elem()
}

func (i DdsParameterTemplateCompareArray) ToDdsParameterTemplateCompareArrayOutput() DdsParameterTemplateCompareArrayOutput {
	return i.ToDdsParameterTemplateCompareArrayOutputWithContext(context.Background())
}

func (i DdsParameterTemplateCompareArray) ToDdsParameterTemplateCompareArrayOutputWithContext(ctx context.Context) DdsParameterTemplateCompareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsParameterTemplateCompareArrayOutput)
}

// DdsParameterTemplateCompareMapInput is an input type that accepts DdsParameterTemplateCompareMap and DdsParameterTemplateCompareMapOutput values.
// You can construct a concrete instance of `DdsParameterTemplateCompareMapInput` via:
//
//	DdsParameterTemplateCompareMap{ "key": DdsParameterTemplateCompareArgs{...} }
type DdsParameterTemplateCompareMapInput interface {
	pulumi.Input

	ToDdsParameterTemplateCompareMapOutput() DdsParameterTemplateCompareMapOutput
	ToDdsParameterTemplateCompareMapOutputWithContext(context.Context) DdsParameterTemplateCompareMapOutput
}

type DdsParameterTemplateCompareMap map[string]DdsParameterTemplateCompareInput

func (DdsParameterTemplateCompareMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdsParameterTemplateCompare)(nil)).Elem()
}

func (i DdsParameterTemplateCompareMap) ToDdsParameterTemplateCompareMapOutput() DdsParameterTemplateCompareMapOutput {
	return i.ToDdsParameterTemplateCompareMapOutputWithContext(context.Background())
}

func (i DdsParameterTemplateCompareMap) ToDdsParameterTemplateCompareMapOutputWithContext(ctx context.Context) DdsParameterTemplateCompareMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsParameterTemplateCompareMapOutput)
}

type DdsParameterTemplateCompareOutput struct{ *pulumi.OutputState }

func (DdsParameterTemplateCompareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsParameterTemplateCompare)(nil)).Elem()
}

func (o DdsParameterTemplateCompareOutput) ToDdsParameterTemplateCompareOutput() DdsParameterTemplateCompareOutput {
	return o
}

func (o DdsParameterTemplateCompareOutput) ToDdsParameterTemplateCompareOutputWithContext(ctx context.Context) DdsParameterTemplateCompareOutput {
	return o
}

func (o DdsParameterTemplateCompareOutput) Differences() DdsParameterTemplateCompareDifferenceArrayOutput {
	return o.ApplyT(func(v *DdsParameterTemplateCompare) DdsParameterTemplateCompareDifferenceArrayOutput {
		return v.Differences
	}).(DdsParameterTemplateCompareDifferenceArrayOutput)
}

func (o DdsParameterTemplateCompareOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplateCompare) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DdsParameterTemplateCompareOutput) SourceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplateCompare) pulumi.StringOutput { return v.SourceConfigurationId }).(pulumi.StringOutput)
}

func (o DdsParameterTemplateCompareOutput) TargetConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplateCompare) pulumi.StringOutput { return v.TargetConfigurationId }).(pulumi.StringOutput)
}

type DdsParameterTemplateCompareArrayOutput struct{ *pulumi.OutputState }

func (DdsParameterTemplateCompareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdsParameterTemplateCompare)(nil)).Elem()
}

func (o DdsParameterTemplateCompareArrayOutput) ToDdsParameterTemplateCompareArrayOutput() DdsParameterTemplateCompareArrayOutput {
	return o
}

func (o DdsParameterTemplateCompareArrayOutput) ToDdsParameterTemplateCompareArrayOutputWithContext(ctx context.Context) DdsParameterTemplateCompareArrayOutput {
	return o
}

func (o DdsParameterTemplateCompareArrayOutput) Index(i pulumi.IntInput) DdsParameterTemplateCompareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DdsParameterTemplateCompare {
		return vs[0].([]*DdsParameterTemplateCompare)[vs[1].(int)]
	}).(DdsParameterTemplateCompareOutput)
}

type DdsParameterTemplateCompareMapOutput struct{ *pulumi.OutputState }

func (DdsParameterTemplateCompareMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdsParameterTemplateCompare)(nil)).Elem()
}

func (o DdsParameterTemplateCompareMapOutput) ToDdsParameterTemplateCompareMapOutput() DdsParameterTemplateCompareMapOutput {
	return o
}

func (o DdsParameterTemplateCompareMapOutput) ToDdsParameterTemplateCompareMapOutputWithContext(ctx context.Context) DdsParameterTemplateCompareMapOutput {
	return o
}

func (o DdsParameterTemplateCompareMapOutput) MapIndex(k pulumi.StringInput) DdsParameterTemplateCompareOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DdsParameterTemplateCompare {
		return vs[0].(map[string]*DdsParameterTemplateCompare)[vs[1].(string)]
	}).(DdsParameterTemplateCompareOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DdsParameterTemplateCompareInput)(nil)).Elem(), &DdsParameterTemplateCompare{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsParameterTemplateCompareArrayInput)(nil)).Elem(), DdsParameterTemplateCompareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsParameterTemplateCompareMapInput)(nil)).Elem(), DdsParameterTemplateCompareMap{})
	pulumi.RegisterOutputType(DdsParameterTemplateCompareOutput{})
	pulumi.RegisterOutputType(DdsParameterTemplateCompareArrayOutput{})
	pulumi.RegisterOutputType(DdsParameterTemplateCompareMapOutput{})
}
