// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type Backup struct {
	pulumi.CustomResourceState

	// Whether a DDM instance has been associated.
	AssociatedWithDdm pulumi.BoolOutput `pulumi:"associatedWithDdm"`
	// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime pulumi.StringOutput `pulumi:"beginTime"`
	// List of self-built Microsoft SQL Server databases that are partially backed up.
	Databases BackupDatabaseArrayOutput `pulumi:"databases"`
	// The description about the backup.
	Description pulumi.StringOutput `pulumi:"description"`
	// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Backup name.
	Name   pulumi.StringOutput `pulumi:"name"`
	Region pulumi.StringOutput `pulumi:"region"`
	// Backup size in KB.
	Size pulumi.IntOutput `pulumi:"size"`
	// Backup status.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewBackup registers a new resource with the given unique name, arguments, and options.
func NewBackup(ctx *pulumi.Context,
	name string, args *BackupArgs, opts ...pulumi.ResourceOption) (*Backup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Backup
	err := ctx.RegisterResource("cloudru:Rds/backup:Backup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackup gets an existing Backup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupState, opts ...pulumi.ResourceOption) (*Backup, error) {
	var resource Backup
	err := ctx.ReadResource("cloudru:Rds/backup:Backup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Backup resources.
type backupState struct {
	// Whether a DDM instance has been associated.
	AssociatedWithDdm *bool `pulumi:"associatedWithDdm"`
	// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime *string `pulumi:"beginTime"`
	// List of self-built Microsoft SQL Server databases that are partially backed up.
	Databases []BackupDatabase `pulumi:"databases"`
	// The description about the backup.
	Description *string `pulumi:"description"`
	// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime *string `pulumi:"endTime"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Backup name.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// Backup size in KB.
	Size *int `pulumi:"size"`
	// Backup status.
	Status *string `pulumi:"status"`
}

type BackupState struct {
	// Whether a DDM instance has been associated.
	AssociatedWithDdm pulumi.BoolPtrInput
	// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime pulumi.StringPtrInput
	// List of self-built Microsoft SQL Server databases that are partially backed up.
	Databases BackupDatabaseArrayInput
	// The description about the backup.
	Description pulumi.StringPtrInput
	// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime pulumi.StringPtrInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Backup name.
	Name   pulumi.StringPtrInput
	Region pulumi.StringPtrInput
	// Backup size in KB.
	Size pulumi.IntPtrInput
	// Backup status.
	Status pulumi.StringPtrInput
}

func (BackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupState)(nil)).Elem()
}

type backupArgs struct {
	// List of self-built Microsoft SQL Server databases that are partially backed up.
	Databases []BackupDatabase `pulumi:"databases"`
	// The description about the backup.
	Description *string `pulumi:"description"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Backup name.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a Backup resource.
type BackupArgs struct {
	// List of self-built Microsoft SQL Server databases that are partially backed up.
	Databases BackupDatabaseArrayInput
	// The description about the backup.
	Description pulumi.StringPtrInput
	// Instance ID.
	InstanceId pulumi.StringInput
	// Backup name.
	Name   pulumi.StringPtrInput
	Region pulumi.StringPtrInput
}

func (BackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupArgs)(nil)).Elem()
}

type BackupInput interface {
	pulumi.Input

	ToBackupOutput() BackupOutput
	ToBackupOutputWithContext(ctx context.Context) BackupOutput
}

func (*Backup) ElementType() reflect.Type {
	return reflect.TypeOf((**Backup)(nil)).Elem()
}

func (i *Backup) ToBackupOutput() BackupOutput {
	return i.ToBackupOutputWithContext(context.Background())
}

func (i *Backup) ToBackupOutputWithContext(ctx context.Context) BackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupOutput)
}

// BackupArrayInput is an input type that accepts BackupArray and BackupArrayOutput values.
// You can construct a concrete instance of `BackupArrayInput` via:
//
//	BackupArray{ BackupArgs{...} }
type BackupArrayInput interface {
	pulumi.Input

	ToBackupArrayOutput() BackupArrayOutput
	ToBackupArrayOutputWithContext(context.Context) BackupArrayOutput
}

type BackupArray []BackupInput

func (BackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Backup)(nil)).Elem()
}

func (i BackupArray) ToBackupArrayOutput() BackupArrayOutput {
	return i.ToBackupArrayOutputWithContext(context.Background())
}

func (i BackupArray) ToBackupArrayOutputWithContext(ctx context.Context) BackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupArrayOutput)
}

// BackupMapInput is an input type that accepts BackupMap and BackupMapOutput values.
// You can construct a concrete instance of `BackupMapInput` via:
//
//	BackupMap{ "key": BackupArgs{...} }
type BackupMapInput interface {
	pulumi.Input

	ToBackupMapOutput() BackupMapOutput
	ToBackupMapOutputWithContext(context.Context) BackupMapOutput
}

type BackupMap map[string]BackupInput

func (BackupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Backup)(nil)).Elem()
}

func (i BackupMap) ToBackupMapOutput() BackupMapOutput {
	return i.ToBackupMapOutputWithContext(context.Background())
}

func (i BackupMap) ToBackupMapOutputWithContext(ctx context.Context) BackupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupMapOutput)
}

type BackupOutput struct{ *pulumi.OutputState }

func (BackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Backup)(nil)).Elem()
}

func (o BackupOutput) ToBackupOutput() BackupOutput {
	return o
}

func (o BackupOutput) ToBackupOutputWithContext(ctx context.Context) BackupOutput {
	return o
}

// Whether a DDM instance has been associated.
func (o BackupOutput) AssociatedWithDdm() pulumi.BoolOutput {
	return o.ApplyT(func(v *Backup) pulumi.BoolOutput { return v.AssociatedWithDdm }).(pulumi.BoolOutput)
}

// Backup start time in the "yyyy-mm-ddThh:mm:ssZ" format.
func (o BackupOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.BeginTime }).(pulumi.StringOutput)
}

// List of self-built Microsoft SQL Server databases that are partially backed up.
func (o BackupOutput) Databases() BackupDatabaseArrayOutput {
	return o.ApplyT(func(v *Backup) BackupDatabaseArrayOutput { return v.Databases }).(BackupDatabaseArrayOutput)
}

// The description about the backup.
func (o BackupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Backup end time in the "yyyy-mm-ddThh:mm:ssZ" format.
func (o BackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// Instance ID.
func (o BackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Backup name.
func (o BackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BackupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Backup size in KB.
func (o BackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *Backup) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

// Backup status.
func (o BackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Backup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type BackupArrayOutput struct{ *pulumi.OutputState }

func (BackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Backup)(nil)).Elem()
}

func (o BackupArrayOutput) ToBackupArrayOutput() BackupArrayOutput {
	return o
}

func (o BackupArrayOutput) ToBackupArrayOutputWithContext(ctx context.Context) BackupArrayOutput {
	return o
}

func (o BackupArrayOutput) Index(i pulumi.IntInput) BackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Backup {
		return vs[0].([]*Backup)[vs[1].(int)]
	}).(BackupOutput)
}

type BackupMapOutput struct{ *pulumi.OutputState }

func (BackupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Backup)(nil)).Elem()
}

func (o BackupMapOutput) ToBackupMapOutput() BackupMapOutput {
	return o
}

func (o BackupMapOutput) ToBackupMapOutputWithContext(ctx context.Context) BackupMapOutput {
	return o
}

func (o BackupMapOutput) MapIndex(k pulumi.StringInput) BackupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Backup {
		return vs[0].(map[string]*Backup)[vs[1].(string)]
	}).(BackupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInput)(nil)).Elem(), &Backup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupArrayInput)(nil)).Elem(), BackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupMapInput)(nil)).Elem(), BackupMap{})
	pulumi.RegisterOutputType(BackupOutput{})
	pulumi.RegisterOutputType(BackupArrayOutput{})
	pulumi.RegisterOutputType(BackupMapOutput{})
}
