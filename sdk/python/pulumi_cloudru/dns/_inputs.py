# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ZoneRouterArgs',
    'ZoneRouterArgsDict',
]

MYPY = False

if not MYPY:
    class ZoneRouterArgsDict(TypedDict):
        router_id: pulumi.Input[_builtins.str]
        """
        ID of the associated VPC.
        """
        router_region: NotRequired[pulumi.Input[_builtins.str]]
        """
        The region of the VPC.
        """
elif False:
    ZoneRouterArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ZoneRouterArgs:
    def __init__(__self__, *,
                 router_id: pulumi.Input[_builtins.str],
                 router_region: Optional[pulumi.Input[_builtins.str]] = None):
        """
        :param pulumi.Input[_builtins.str] router_id: ID of the associated VPC.
        :param pulumi.Input[_builtins.str] router_region: The region of the VPC.
        """
        pulumi.set(__self__, "router_id", router_id)
        if router_region is not None:
            pulumi.set(__self__, "router_region", router_region)

    @_builtins.property
    @pulumi.getter(name="routerId")
    def router_id(self) -> pulumi.Input[_builtins.str]:
        """
        ID of the associated VPC.
        """
        return pulumi.get(self, "router_id")

    @router_id.setter
    def router_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "router_id", value)

    @_builtins.property
    @pulumi.getter(name="routerRegion")
    def router_region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The region of the VPC.
        """
        return pulumi.get(self, "router_region")

    @router_region.setter
    def router_region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "router_region", value)


