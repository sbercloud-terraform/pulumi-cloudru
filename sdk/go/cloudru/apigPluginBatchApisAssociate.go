// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigPluginBatchApisAssociate struct {
	pulumi.CustomResourceState

	// The list of API IDs to be bound by the plugin.
	ApiIds pulumi.StringArrayOutput `pulumi:"apiIds"`
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins pulumi.StringArrayOutput `pulumi:"apiIdsOrigins"`
	// The environment ID where the API was published.
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The plugin ID.
	PluginId pulumi.StringOutput `pulumi:"pluginId"`
	// The region where the plugin is located.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewApigPluginBatchApisAssociate registers a new resource with the given unique name, arguments, and options.
func NewApigPluginBatchApisAssociate(ctx *pulumi.Context,
	name string, args *ApigPluginBatchApisAssociateArgs, opts ...pulumi.ResourceOption) (*ApigPluginBatchApisAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiIds == nil {
		return nil, errors.New("invalid value for required argument 'ApiIds'")
	}
	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PluginId == nil {
		return nil, errors.New("invalid value for required argument 'PluginId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigPluginBatchApisAssociate
	err := ctx.RegisterResource("sbercloud:index/apigPluginBatchApisAssociate:ApigPluginBatchApisAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigPluginBatchApisAssociate gets an existing ApigPluginBatchApisAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigPluginBatchApisAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigPluginBatchApisAssociateState, opts ...pulumi.ResourceOption) (*ApigPluginBatchApisAssociate, error) {
	var resource ApigPluginBatchApisAssociate
	err := ctx.ReadResource("sbercloud:index/apigPluginBatchApisAssociate:ApigPluginBatchApisAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigPluginBatchApisAssociate resources.
type apigPluginBatchApisAssociateState struct {
	// The list of API IDs to be bound by the plugin.
	ApiIds []string `pulumi:"apiIds"`
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins []string `pulumi:"apiIdsOrigins"`
	// The environment ID where the API was published.
	EnvId *string `pulumi:"envId"`
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The plugin ID.
	PluginId *string `pulumi:"pluginId"`
	// The region where the plugin is located.
	Region *string `pulumi:"region"`
}

type ApigPluginBatchApisAssociateState struct {
	// The list of API IDs to be bound by the plugin.
	ApiIds pulumi.StringArrayInput
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins pulumi.StringArrayInput
	// The environment ID where the API was published.
	EnvId pulumi.StringPtrInput
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId pulumi.StringPtrInput
	// The plugin ID.
	PluginId pulumi.StringPtrInput
	// The region where the plugin is located.
	Region pulumi.StringPtrInput
}

func (ApigPluginBatchApisAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigPluginBatchApisAssociateState)(nil)).Elem()
}

type apigPluginBatchApisAssociateArgs struct {
	// The list of API IDs to be bound by the plugin.
	ApiIds []string `pulumi:"apiIds"`
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins []string `pulumi:"apiIdsOrigins"`
	// The environment ID where the API was published.
	EnvId string `pulumi:"envId"`
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId string `pulumi:"instanceId"`
	// The plugin ID.
	PluginId string `pulumi:"pluginId"`
	// The region where the plugin is located.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ApigPluginBatchApisAssociate resource.
type ApigPluginBatchApisAssociateArgs struct {
	// The list of API IDs to be bound by the plugin.
	ApiIds pulumi.StringArrayInput
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins pulumi.StringArrayInput
	// The environment ID where the API was published.
	EnvId pulumi.StringInput
	// The ID of the dedicated instance to which the plugin belongs.
	InstanceId pulumi.StringInput
	// The plugin ID.
	PluginId pulumi.StringInput
	// The region where the plugin is located.
	Region pulumi.StringPtrInput
}

func (ApigPluginBatchApisAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigPluginBatchApisAssociateArgs)(nil)).Elem()
}

type ApigPluginBatchApisAssociateInput interface {
	pulumi.Input

	ToApigPluginBatchApisAssociateOutput() ApigPluginBatchApisAssociateOutput
	ToApigPluginBatchApisAssociateOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateOutput
}

func (*ApigPluginBatchApisAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigPluginBatchApisAssociate)(nil)).Elem()
}

func (i *ApigPluginBatchApisAssociate) ToApigPluginBatchApisAssociateOutput() ApigPluginBatchApisAssociateOutput {
	return i.ToApigPluginBatchApisAssociateOutputWithContext(context.Background())
}

func (i *ApigPluginBatchApisAssociate) ToApigPluginBatchApisAssociateOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigPluginBatchApisAssociateOutput)
}

// ApigPluginBatchApisAssociateArrayInput is an input type that accepts ApigPluginBatchApisAssociateArray and ApigPluginBatchApisAssociateArrayOutput values.
// You can construct a concrete instance of `ApigPluginBatchApisAssociateArrayInput` via:
//
//	ApigPluginBatchApisAssociateArray{ ApigPluginBatchApisAssociateArgs{...} }
type ApigPluginBatchApisAssociateArrayInput interface {
	pulumi.Input

	ToApigPluginBatchApisAssociateArrayOutput() ApigPluginBatchApisAssociateArrayOutput
	ToApigPluginBatchApisAssociateArrayOutputWithContext(context.Context) ApigPluginBatchApisAssociateArrayOutput
}

type ApigPluginBatchApisAssociateArray []ApigPluginBatchApisAssociateInput

func (ApigPluginBatchApisAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigPluginBatchApisAssociate)(nil)).Elem()
}

func (i ApigPluginBatchApisAssociateArray) ToApigPluginBatchApisAssociateArrayOutput() ApigPluginBatchApisAssociateArrayOutput {
	return i.ToApigPluginBatchApisAssociateArrayOutputWithContext(context.Background())
}

func (i ApigPluginBatchApisAssociateArray) ToApigPluginBatchApisAssociateArrayOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigPluginBatchApisAssociateArrayOutput)
}

// ApigPluginBatchApisAssociateMapInput is an input type that accepts ApigPluginBatchApisAssociateMap and ApigPluginBatchApisAssociateMapOutput values.
// You can construct a concrete instance of `ApigPluginBatchApisAssociateMapInput` via:
//
//	ApigPluginBatchApisAssociateMap{ "key": ApigPluginBatchApisAssociateArgs{...} }
type ApigPluginBatchApisAssociateMapInput interface {
	pulumi.Input

	ToApigPluginBatchApisAssociateMapOutput() ApigPluginBatchApisAssociateMapOutput
	ToApigPluginBatchApisAssociateMapOutputWithContext(context.Context) ApigPluginBatchApisAssociateMapOutput
}

type ApigPluginBatchApisAssociateMap map[string]ApigPluginBatchApisAssociateInput

func (ApigPluginBatchApisAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigPluginBatchApisAssociate)(nil)).Elem()
}

func (i ApigPluginBatchApisAssociateMap) ToApigPluginBatchApisAssociateMapOutput() ApigPluginBatchApisAssociateMapOutput {
	return i.ToApigPluginBatchApisAssociateMapOutputWithContext(context.Background())
}

func (i ApigPluginBatchApisAssociateMap) ToApigPluginBatchApisAssociateMapOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigPluginBatchApisAssociateMapOutput)
}

type ApigPluginBatchApisAssociateOutput struct{ *pulumi.OutputState }

func (ApigPluginBatchApisAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigPluginBatchApisAssociate)(nil)).Elem()
}

func (o ApigPluginBatchApisAssociateOutput) ToApigPluginBatchApisAssociateOutput() ApigPluginBatchApisAssociateOutput {
	return o
}

func (o ApigPluginBatchApisAssociateOutput) ToApigPluginBatchApisAssociateOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateOutput {
	return o
}

// The list of API IDs to be bound by the plugin.
func (o ApigPluginBatchApisAssociateOutput) ApiIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigPluginBatchApisAssociate) pulumi.StringArrayOutput { return v.ApiIds }).(pulumi.StringArrayOutput)
}

// The script configuration value of this change is also the original value used for comparison with
// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
func (o ApigPluginBatchApisAssociateOutput) ApiIdsOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigPluginBatchApisAssociate) pulumi.StringArrayOutput { return v.ApiIdsOrigins }).(pulumi.StringArrayOutput)
}

// The environment ID where the API was published.
func (o ApigPluginBatchApisAssociateOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginBatchApisAssociate) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// The ID of the dedicated instance to which the plugin belongs.
func (o ApigPluginBatchApisAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginBatchApisAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The plugin ID.
func (o ApigPluginBatchApisAssociateOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginBatchApisAssociate) pulumi.StringOutput { return v.PluginId }).(pulumi.StringOutput)
}

// The region where the plugin is located.
func (o ApigPluginBatchApisAssociateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigPluginBatchApisAssociate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type ApigPluginBatchApisAssociateArrayOutput struct{ *pulumi.OutputState }

func (ApigPluginBatchApisAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigPluginBatchApisAssociate)(nil)).Elem()
}

func (o ApigPluginBatchApisAssociateArrayOutput) ToApigPluginBatchApisAssociateArrayOutput() ApigPluginBatchApisAssociateArrayOutput {
	return o
}

func (o ApigPluginBatchApisAssociateArrayOutput) ToApigPluginBatchApisAssociateArrayOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateArrayOutput {
	return o
}

func (o ApigPluginBatchApisAssociateArrayOutput) Index(i pulumi.IntInput) ApigPluginBatchApisAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigPluginBatchApisAssociate {
		return vs[0].([]*ApigPluginBatchApisAssociate)[vs[1].(int)]
	}).(ApigPluginBatchApisAssociateOutput)
}

type ApigPluginBatchApisAssociateMapOutput struct{ *pulumi.OutputState }

func (ApigPluginBatchApisAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigPluginBatchApisAssociate)(nil)).Elem()
}

func (o ApigPluginBatchApisAssociateMapOutput) ToApigPluginBatchApisAssociateMapOutput() ApigPluginBatchApisAssociateMapOutput {
	return o
}

func (o ApigPluginBatchApisAssociateMapOutput) ToApigPluginBatchApisAssociateMapOutputWithContext(ctx context.Context) ApigPluginBatchApisAssociateMapOutput {
	return o
}

func (o ApigPluginBatchApisAssociateMapOutput) MapIndex(k pulumi.StringInput) ApigPluginBatchApisAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigPluginBatchApisAssociate {
		return vs[0].(map[string]*ApigPluginBatchApisAssociate)[vs[1].(string)]
	}).(ApigPluginBatchApisAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigPluginBatchApisAssociateInput)(nil)).Elem(), &ApigPluginBatchApisAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigPluginBatchApisAssociateArrayInput)(nil)).Elem(), ApigPluginBatchApisAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigPluginBatchApisAssociateMapInput)(nil)).Elem(), ApigPluginBatchApisAssociateMap{})
	pulumi.RegisterOutputType(ApigPluginBatchApisAssociateOutput{})
	pulumi.RegisterOutputType(ApigPluginBatchApisAssociateArrayOutput{})
	pulumi.RegisterOutputType(ApigPluginBatchApisAssociateMapOutput{})
}
