// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpcep

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type ServiceConnection struct {
	Description *string `pulumi:"description"`
	DomainId    *string `pulumi:"domainId"`
	EndpointId  *string `pulumi:"endpointId"`
	PacketId    *int    `pulumi:"packetId"`
	Status      *string `pulumi:"status"`
}

// ServiceConnectionInput is an input type that accepts ServiceConnectionArgs and ServiceConnectionOutput values.
// You can construct a concrete instance of `ServiceConnectionInput` via:
//
//	ServiceConnectionArgs{...}
type ServiceConnectionInput interface {
	pulumi.Input

	ToServiceConnectionOutput() ServiceConnectionOutput
	ToServiceConnectionOutputWithContext(context.Context) ServiceConnectionOutput
}

type ServiceConnectionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	DomainId    pulumi.StringPtrInput `pulumi:"domainId"`
	EndpointId  pulumi.StringPtrInput `pulumi:"endpointId"`
	PacketId    pulumi.IntPtrInput    `pulumi:"packetId"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
}

func (ServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnection)(nil)).Elem()
}

func (i ServiceConnectionArgs) ToServiceConnectionOutput() ServiceConnectionOutput {
	return i.ToServiceConnectionOutputWithContext(context.Background())
}

func (i ServiceConnectionArgs) ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionOutput)
}

// ServiceConnectionArrayInput is an input type that accepts ServiceConnectionArray and ServiceConnectionArrayOutput values.
// You can construct a concrete instance of `ServiceConnectionArrayInput` via:
//
//	ServiceConnectionArray{ ServiceConnectionArgs{...} }
type ServiceConnectionArrayInput interface {
	pulumi.Input

	ToServiceConnectionArrayOutput() ServiceConnectionArrayOutput
	ToServiceConnectionArrayOutputWithContext(context.Context) ServiceConnectionArrayOutput
}

type ServiceConnectionArray []ServiceConnectionInput

func (ServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnection)(nil)).Elem()
}

func (i ServiceConnectionArray) ToServiceConnectionArrayOutput() ServiceConnectionArrayOutput {
	return i.ToServiceConnectionArrayOutputWithContext(context.Background())
}

func (i ServiceConnectionArray) ToServiceConnectionArrayOutputWithContext(ctx context.Context) ServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionArrayOutput)
}

type ServiceConnectionOutput struct{ *pulumi.OutputState }

func (ServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceConnection)(nil)).Elem()
}

func (o ServiceConnectionOutput) ToServiceConnectionOutput() ServiceConnectionOutput {
	return o
}

func (o ServiceConnectionOutput) ToServiceConnectionOutputWithContext(ctx context.Context) ServiceConnectionOutput {
	return o
}

func (o ServiceConnectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnection) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceConnectionOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnection) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

func (o ServiceConnectionOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnection) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

func (o ServiceConnectionOutput) PacketId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceConnection) *int { return v.PacketId }).(pulumi.IntPtrOutput)
}

func (o ServiceConnectionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceConnection) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (ServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceConnection)(nil)).Elem()
}

func (o ServiceConnectionArrayOutput) ToServiceConnectionArrayOutput() ServiceConnectionArrayOutput {
	return o
}

func (o ServiceConnectionArrayOutput) ToServiceConnectionArrayOutputWithContext(ctx context.Context) ServiceConnectionArrayOutput {
	return o
}

func (o ServiceConnectionArrayOutput) Index(i pulumi.IntInput) ServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceConnection {
		return vs[0].([]ServiceConnection)[vs[1].(int)]
	}).(ServiceConnectionOutput)
}

type ServicePortMapping struct {
	Protocol *string `pulumi:"protocol"`
	// schema: Required
	ServicePort *int `pulumi:"servicePort"`
	// schema: Required
	TerminalPort *int `pulumi:"terminalPort"`
}

// ServicePortMappingInput is an input type that accepts ServicePortMappingArgs and ServicePortMappingOutput values.
// You can construct a concrete instance of `ServicePortMappingInput` via:
//
//	ServicePortMappingArgs{...}
type ServicePortMappingInput interface {
	pulumi.Input

	ToServicePortMappingOutput() ServicePortMappingOutput
	ToServicePortMappingOutputWithContext(context.Context) ServicePortMappingOutput
}

type ServicePortMappingArgs struct {
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// schema: Required
	ServicePort pulumi.IntPtrInput `pulumi:"servicePort"`
	// schema: Required
	TerminalPort pulumi.IntPtrInput `pulumi:"terminalPort"`
}

func (ServicePortMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePortMapping)(nil)).Elem()
}

func (i ServicePortMappingArgs) ToServicePortMappingOutput() ServicePortMappingOutput {
	return i.ToServicePortMappingOutputWithContext(context.Background())
}

func (i ServicePortMappingArgs) ToServicePortMappingOutputWithContext(ctx context.Context) ServicePortMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePortMappingOutput)
}

// ServicePortMappingArrayInput is an input type that accepts ServicePortMappingArray and ServicePortMappingArrayOutput values.
// You can construct a concrete instance of `ServicePortMappingArrayInput` via:
//
//	ServicePortMappingArray{ ServicePortMappingArgs{...} }
type ServicePortMappingArrayInput interface {
	pulumi.Input

	ToServicePortMappingArrayOutput() ServicePortMappingArrayOutput
	ToServicePortMappingArrayOutputWithContext(context.Context) ServicePortMappingArrayOutput
}

type ServicePortMappingArray []ServicePortMappingInput

func (ServicePortMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePortMapping)(nil)).Elem()
}

func (i ServicePortMappingArray) ToServicePortMappingArrayOutput() ServicePortMappingArrayOutput {
	return i.ToServicePortMappingArrayOutputWithContext(context.Background())
}

func (i ServicePortMappingArray) ToServicePortMappingArrayOutputWithContext(ctx context.Context) ServicePortMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePortMappingArrayOutput)
}

type ServicePortMappingOutput struct{ *pulumi.OutputState }

func (ServicePortMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePortMapping)(nil)).Elem()
}

func (o ServicePortMappingOutput) ToServicePortMappingOutput() ServicePortMappingOutput {
	return o
}

func (o ServicePortMappingOutput) ToServicePortMappingOutputWithContext(ctx context.Context) ServicePortMappingOutput {
	return o
}

func (o ServicePortMappingOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePortMapping) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// schema: Required
func (o ServicePortMappingOutput) ServicePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServicePortMapping) *int { return v.ServicePort }).(pulumi.IntPtrOutput)
}

// schema: Required
func (o ServicePortMappingOutput) TerminalPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServicePortMapping) *int { return v.TerminalPort }).(pulumi.IntPtrOutput)
}

type ServicePortMappingArrayOutput struct{ *pulumi.OutputState }

func (ServicePortMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePortMapping)(nil)).Elem()
}

func (o ServicePortMappingArrayOutput) ToServicePortMappingArrayOutput() ServicePortMappingArrayOutput {
	return o
}

func (o ServicePortMappingArrayOutput) ToServicePortMappingArrayOutputWithContext(ctx context.Context) ServicePortMappingArrayOutput {
	return o
}

func (o ServicePortMappingArrayOutput) Index(i pulumi.IntInput) ServicePortMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePortMapping {
		return vs[0].([]ServicePortMapping)[vs[1].(int)]
	}).(ServicePortMappingOutput)
}

type GetPublicServicesService struct {
	Id          string `pulumi:"id"`
	IsCharge    bool   `pulumi:"isCharge"`
	Owner       string `pulumi:"owner"`
	ServiceName string `pulumi:"serviceName"`
	ServiceType string `pulumi:"serviceType"`
}

// GetPublicServicesServiceInput is an input type that accepts GetPublicServicesServiceArgs and GetPublicServicesServiceOutput values.
// You can construct a concrete instance of `GetPublicServicesServiceInput` via:
//
//	GetPublicServicesServiceArgs{...}
type GetPublicServicesServiceInput interface {
	pulumi.Input

	ToGetPublicServicesServiceOutput() GetPublicServicesServiceOutput
	ToGetPublicServicesServiceOutputWithContext(context.Context) GetPublicServicesServiceOutput
}

type GetPublicServicesServiceArgs struct {
	Id          pulumi.StringInput `pulumi:"id"`
	IsCharge    pulumi.BoolInput   `pulumi:"isCharge"`
	Owner       pulumi.StringInput `pulumi:"owner"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	ServiceType pulumi.StringInput `pulumi:"serviceType"`
}

func (GetPublicServicesServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicServicesService)(nil)).Elem()
}

func (i GetPublicServicesServiceArgs) ToGetPublicServicesServiceOutput() GetPublicServicesServiceOutput {
	return i.ToGetPublicServicesServiceOutputWithContext(context.Background())
}

func (i GetPublicServicesServiceArgs) ToGetPublicServicesServiceOutputWithContext(ctx context.Context) GetPublicServicesServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicServicesServiceOutput)
}

// GetPublicServicesServiceArrayInput is an input type that accepts GetPublicServicesServiceArray and GetPublicServicesServiceArrayOutput values.
// You can construct a concrete instance of `GetPublicServicesServiceArrayInput` via:
//
//	GetPublicServicesServiceArray{ GetPublicServicesServiceArgs{...} }
type GetPublicServicesServiceArrayInput interface {
	pulumi.Input

	ToGetPublicServicesServiceArrayOutput() GetPublicServicesServiceArrayOutput
	ToGetPublicServicesServiceArrayOutputWithContext(context.Context) GetPublicServicesServiceArrayOutput
}

type GetPublicServicesServiceArray []GetPublicServicesServiceInput

func (GetPublicServicesServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicServicesService)(nil)).Elem()
}

func (i GetPublicServicesServiceArray) ToGetPublicServicesServiceArrayOutput() GetPublicServicesServiceArrayOutput {
	return i.ToGetPublicServicesServiceArrayOutputWithContext(context.Background())
}

func (i GetPublicServicesServiceArray) ToGetPublicServicesServiceArrayOutputWithContext(ctx context.Context) GetPublicServicesServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicServicesServiceArrayOutput)
}

type GetPublicServicesServiceOutput struct{ *pulumi.OutputState }

func (GetPublicServicesServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicServicesService)(nil)).Elem()
}

func (o GetPublicServicesServiceOutput) ToGetPublicServicesServiceOutput() GetPublicServicesServiceOutput {
	return o
}

func (o GetPublicServicesServiceOutput) ToGetPublicServicesServiceOutputWithContext(ctx context.Context) GetPublicServicesServiceOutput {
	return o
}

func (o GetPublicServicesServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicServicesService) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPublicServicesServiceOutput) IsCharge() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPublicServicesService) bool { return v.IsCharge }).(pulumi.BoolOutput)
}

func (o GetPublicServicesServiceOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicServicesService) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetPublicServicesServiceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicServicesService) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetPublicServicesServiceOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicServicesService) string { return v.ServiceType }).(pulumi.StringOutput)
}

type GetPublicServicesServiceArrayOutput struct{ *pulumi.OutputState }

func (GetPublicServicesServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicServicesService)(nil)).Elem()
}

func (o GetPublicServicesServiceArrayOutput) ToGetPublicServicesServiceArrayOutput() GetPublicServicesServiceArrayOutput {
	return o
}

func (o GetPublicServicesServiceArrayOutput) ToGetPublicServicesServiceArrayOutputWithContext(ctx context.Context) GetPublicServicesServiceArrayOutput {
	return o
}

func (o GetPublicServicesServiceArrayOutput) Index(i pulumi.IntInput) GetPublicServicesServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicServicesService {
		return vs[0].([]GetPublicServicesService)[vs[1].(int)]
	}).(GetPublicServicesServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionInput)(nil)).Elem(), ServiceConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionArrayInput)(nil)).Elem(), ServiceConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePortMappingInput)(nil)).Elem(), ServicePortMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePortMappingArrayInput)(nil)).Elem(), ServicePortMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicServicesServiceInput)(nil)).Elem(), GetPublicServicesServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicServicesServiceArrayInput)(nil)).Elem(), GetPublicServicesServiceArray{})
	pulumi.RegisterOutputType(ServiceConnectionOutput{})
	pulumi.RegisterOutputType(ServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(ServicePortMappingOutput{})
	pulumi.RegisterOutputType(ServicePortMappingArrayOutput{})
	pulumi.RegisterOutputType(GetPublicServicesServiceOutput{})
	pulumi.RegisterOutputType(GetPublicServicesServiceArrayOutput{})
}
