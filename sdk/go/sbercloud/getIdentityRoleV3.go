// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

func GetIdentityRoleV3(ctx *pulumi.Context, args *GetIdentityRoleV3Args, opts ...pulumi.InvokeOption) (*GetIdentityRoleV3Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIdentityRoleV3Result
	err := ctx.Invoke("sbercloud:index/getIdentityRoleV3:getIdentityRoleV3", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIdentityRoleV3.
type GetIdentityRoleV3Args struct {
	DisplayName *string `pulumi:"displayName"`
	Name        *string `pulumi:"name"`
}

// A collection of values returned by getIdentityRoleV3.
type GetIdentityRoleV3Result struct {
	Catalog     string `pulumi:"catalog"`
	Description string `pulumi:"description"`
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Name   string `pulumi:"name"`
	Policy string `pulumi:"policy"`
	Type   string `pulumi:"type"`
}

func GetIdentityRoleV3Output(ctx *pulumi.Context, args GetIdentityRoleV3OutputArgs, opts ...pulumi.InvokeOption) GetIdentityRoleV3ResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIdentityRoleV3ResultOutput, error) {
			args := v.(GetIdentityRoleV3Args)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getIdentityRoleV3:getIdentityRoleV3", args, GetIdentityRoleV3ResultOutput{}, options).(GetIdentityRoleV3ResultOutput), nil
		}).(GetIdentityRoleV3ResultOutput)
}

// A collection of arguments for invoking getIdentityRoleV3.
type GetIdentityRoleV3OutputArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
}

func (GetIdentityRoleV3OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityRoleV3Args)(nil)).Elem()
}

// A collection of values returned by getIdentityRoleV3.
type GetIdentityRoleV3ResultOutput struct{ *pulumi.OutputState }

func (GetIdentityRoleV3ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityRoleV3Result)(nil)).Elem()
}

func (o GetIdentityRoleV3ResultOutput) ToGetIdentityRoleV3ResultOutput() GetIdentityRoleV3ResultOutput {
	return o
}

func (o GetIdentityRoleV3ResultOutput) ToGetIdentityRoleV3ResultOutputWithContext(ctx context.Context) GetIdentityRoleV3ResultOutput {
	return o
}

func (o GetIdentityRoleV3ResultOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o GetIdentityRoleV3ResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIdentityRoleV3ResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIdentityRoleV3ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdentityRoleV3ResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIdentityRoleV3ResultOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetIdentityRoleV3ResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityRoleV3Result) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIdentityRoleV3ResultOutput{})
}
