// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a CFW domain name group resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const fwInstanceId = config.requireObject<any>("fwInstanceId");
 * const objectId = config.requireObject<any>("objectId");
 * const name = config.requireObject<any>("name");
 * const test = new sbercloud.cfw.DomainNameGroup("test", {
 *     fwInstanceId: fwInstanceId,
 *     objectId: objectId,
 *     name: name,
 *     type: 0,
 *     description: "created by terraform",
 *     domainNames: [{
 *         domainName: "www.cfw-test.com",
 *         description: "test domain",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The domainnamegroup can be imported using the `fw_instance_id`, `object_id` and `id`, separated by slashes, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Cfw/domainNameGroup:DomainNameGroup test <fw_instance_id>/<object_id>/<id>
 * ```
 */
export class DomainNameGroup extends pulumi.CustomResource {
    /**
     * Get an existing DomainNameGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainNameGroupState, opts?: pulumi.CustomResourceOptions): DomainNameGroup {
        return new DomainNameGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/domainNameGroup:DomainNameGroup';

    /**
     * Returns true if the given object is an instance of DomainNameGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainNameGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainNameGroup.__pulumiType;
    }

    /**
     * The config status of the domain name group.
     */
    public /*out*/ readonly configStatus!: pulumi.Output<number>;
    /**
     * Specifies the description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the list of domain names.
     * The domainNames structure is documented below.
     *
     * <a name="DomainNameGroup_DomainNames"></a>
     * The `domainNames` block supports:
     */
    public readonly domainNames!: pulumi.Output<outputs.Cfw.DomainNameGroupDomainName[] | undefined>;
    /**
     * Specifies the firewall instance ID.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly fwInstanceId!: pulumi.Output<string>;
    /**
     * The exception message of the domain name group.
     */
    public /*out*/ readonly message!: pulumi.Output<string>;
    /**
     * Specifies the name of the domain name group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the protected object ID.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly objectId!: pulumi.Output<string>;
    /**
     * The reference count of the domain name group.
     */
    public /*out*/ readonly refCount!: pulumi.Output<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the type of the domain name group.
     * The value can be:
     * + **0**: means application type;
     * + **1**: means network type;
     *
     * Changing this parameter will create a new resource.
     */
    public readonly type!: pulumi.Output<number>;

    /**
     * Create a DomainNameGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainNameGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainNameGroupArgs | DomainNameGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainNameGroupState | undefined;
            resourceInputs["configStatus"] = state ? state.configStatus : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["fwInstanceId"] = state ? state.fwInstanceId : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectId"] = state ? state.objectId : undefined;
            resourceInputs["refCount"] = state ? state.refCount : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DomainNameGroupArgs | undefined;
            if ((!args || args.fwInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fwInstanceId'");
            }
            if ((!args || args.objectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["fwInstanceId"] = args ? args.fwInstanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectId"] = args ? args.objectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["configStatus"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["refCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainNameGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainNameGroup resources.
 */
export interface DomainNameGroupState {
    /**
     * The config status of the domain name group.
     */
    configStatus?: pulumi.Input<number>;
    /**
     * Specifies the description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the list of domain names.
     * The domainNames structure is documented below.
     *
     * <a name="DomainNameGroup_DomainNames"></a>
     * The `domainNames` block supports:
     */
    domainNames?: pulumi.Input<pulumi.Input<inputs.Cfw.DomainNameGroupDomainName>[]>;
    /**
     * Specifies the firewall instance ID.
     *
     * Changing this parameter will create a new resource.
     */
    fwInstanceId?: pulumi.Input<string>;
    /**
     * The exception message of the domain name group.
     */
    message?: pulumi.Input<string>;
    /**
     * Specifies the name of the domain name group.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protected object ID.
     *
     * Changing this parameter will create a new resource.
     */
    objectId?: pulumi.Input<string>;
    /**
     * The reference count of the domain name group.
     */
    refCount?: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the type of the domain name group.
     * The value can be:
     * + **0**: means application type;
     * + **1**: means network type;
     *
     * Changing this parameter will create a new resource.
     */
    type?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DomainNameGroup resource.
 */
export interface DomainNameGroupArgs {
    /**
     * Specifies the description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the list of domain names.
     * The domainNames structure is documented below.
     *
     * <a name="DomainNameGroup_DomainNames"></a>
     * The `domainNames` block supports:
     */
    domainNames?: pulumi.Input<pulumi.Input<inputs.Cfw.DomainNameGroupDomainName>[]>;
    /**
     * Specifies the firewall instance ID.
     *
     * Changing this parameter will create a new resource.
     */
    fwInstanceId: pulumi.Input<string>;
    /**
     * Specifies the name of the domain name group.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protected object ID.
     *
     * Changing this parameter will create a new resource.
     */
    objectId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the type of the domain name group.
     * The value can be:
     * + **0**: means application type;
     * + **1**: means network type;
     *
     * Changing this parameter will create a new resource.
     */
    type: pulumi.Input<number>;
}
