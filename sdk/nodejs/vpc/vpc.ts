// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a VPC resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const vpcName = config.get("vpcName") || "sbercloud_vpc";
 * const vpcCidr = config.get("vpcCidr") || "192.168.0.0/16";
 * const vpc = new sbercloud.vpc.Vpc("vpc", {
 *     name: vpcName,
 *     cidr: vpcCidr,
 * });
 * const vpcWithTags = new sbercloud.vpc.Vpc("vpc_with_tags", {
 *     name: vpcName,
 *     cidr: vpcCidr,
 *     tags: {
 *         foo: "bar",
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VPCs can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import sbercloud:Vpc/vpc:Vpc vpc_v1 7117d38e-4c8f-4624-a505-bd96b97d024c
 * ```
 */
export class Vpc extends pulumi.CustomResource {
    /**
     * Get an existing Vpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcState, opts?: pulumi.CustomResourceOptions): Vpc {
        return new Vpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Vpc/vpc:Vpc';

    /**
     * Returns true if the given object is an instance of Vpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpc.__pulumiType;
    }

    declare public readonly blockServiceEndpointStates: pulumi.Output<string | undefined>;
    /**
     * Specifies the range of available subnets in the VPC. The value ranges from 10.0.0.0/8 to
     * 10.255.255.0/24, 172.16.0.0/12 to 172.31.255.0/24, or 192.168.0.0/16 to 192.168.255.0/24.
     */
    declare public readonly cidr: pulumi.Output<string>;
    /**
     * Specifies supplementary information about the VPC. The value is a string of
     * no more than 255 characters and cannot contain angle brackets (< or >).
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly enhancedLocalRoute: pulumi.Output<string>;
    /**
     * Specifies the enterprise project id of the VPC. Changing this
     * creates a new VPC resource.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * Specifies the name of the VPC. The name must be unique for a tenant. The value is a string
     * of no more than 64 characters and can contain digits, letters, underscores (_), and hyphens (-).
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the VPC. If omitted, the
     * provider-level region will be used. Changing this creates a new VPC resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * @deprecated use huaweicloudVpcRouteTable data source to get all routes
     */
    declare public /*out*/ readonly routes: pulumi.Output<outputs.Vpc.VpcRoute[]>;
    /**
     * schema: Deprecated; use secondaryCidrs instead
     */
    declare public readonly secondaryCidr: pulumi.Output<string | undefined>;
    declare public readonly secondaryCidrs: pulumi.Output<string[]>;
    /**
     * The current status of the VPC. Possible values are as follows: CREATING, OK or ERROR.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the VPC.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Vpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcArgs | VpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcState | undefined;
            resourceInputs["blockServiceEndpointStates"] = state?.blockServiceEndpointStates;
            resourceInputs["cidr"] = state?.cidr;
            resourceInputs["description"] = state?.description;
            resourceInputs["enhancedLocalRoute"] = state?.enhancedLocalRoute;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["routes"] = state?.routes;
            resourceInputs["secondaryCidr"] = state?.secondaryCidr;
            resourceInputs["secondaryCidrs"] = state?.secondaryCidrs;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as VpcArgs | undefined;
            if (args?.cidr === undefined && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            resourceInputs["blockServiceEndpointStates"] = args?.blockServiceEndpointStates;
            resourceInputs["cidr"] = args?.cidr;
            resourceInputs["description"] = args?.description;
            resourceInputs["enhancedLocalRoute"] = args?.enhancedLocalRoute;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["secondaryCidr"] = args?.secondaryCidr;
            resourceInputs["secondaryCidrs"] = args?.secondaryCidrs;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["routes"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Vpc resources.
 */
export interface VpcState {
    blockServiceEndpointStates?: pulumi.Input<string>;
    /**
     * Specifies the range of available subnets in the VPC. The value ranges from 10.0.0.0/8 to
     * 10.255.255.0/24, 172.16.0.0/12 to 172.31.255.0/24, or 192.168.0.0/16 to 192.168.255.0/24.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Specifies supplementary information about the VPC. The value is a string of
     * no more than 255 characters and cannot contain angle brackets (< or >).
     */
    description?: pulumi.Input<string>;
    enhancedLocalRoute?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the VPC. Changing this
     * creates a new VPC resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the name of the VPC. The name must be unique for a tenant. The value is a string
     * of no more than 64 characters and can contain digits, letters, underscores (_), and hyphens (-).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the VPC. If omitted, the
     * provider-level region will be used. Changing this creates a new VPC resource.
     */
    region?: pulumi.Input<string>;
    /**
     * @deprecated use huaweicloudVpcRouteTable data source to get all routes
     */
    routes?: pulumi.Input<pulumi.Input<inputs.Vpc.VpcRoute>[]>;
    /**
     * schema: Deprecated; use secondaryCidrs instead
     */
    secondaryCidr?: pulumi.Input<string>;
    secondaryCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current status of the VPC. Possible values are as follows: CREATING, OK or ERROR.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the VPC.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Vpc resource.
 */
export interface VpcArgs {
    blockServiceEndpointStates?: pulumi.Input<string>;
    /**
     * Specifies the range of available subnets in the VPC. The value ranges from 10.0.0.0/8 to
     * 10.255.255.0/24, 172.16.0.0/12 to 172.31.255.0/24, or 192.168.0.0/16 to 192.168.255.0/24.
     */
    cidr: pulumi.Input<string>;
    /**
     * Specifies supplementary information about the VPC. The value is a string of
     * no more than 255 characters and cannot contain angle brackets (< or >).
     */
    description?: pulumi.Input<string>;
    enhancedLocalRoute?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the VPC. Changing this
     * creates a new VPC resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the name of the VPC. The name must be unique for a tenant. The value is a string
     * of no more than 64 characters and can contain digits, letters, underscores (_), and hyphens (-).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the VPC. If omitted, the
     * provider-level region will be used. Changing this creates a new VPC resource.
     */
    region?: pulumi.Input<string>;
    /**
     * schema: Deprecated; use secondaryCidrs instead
     */
    secondaryCidr?: pulumi.Input<string>;
    secondaryCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the key/value pairs to associate with the VPC.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
