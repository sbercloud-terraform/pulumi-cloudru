# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetKpsFailedTasksResult',
    'AwaitableGetKpsFailedTasksResult',
    'get_kps_failed_tasks',
    'get_kps_failed_tasks_output',
]

@pulumi.output_type
class GetKpsFailedTasksResult:
    """
    A collection of values returned by getKpsFailedTasks.
    """
    def __init__(__self__, id=None, region=None, tasks=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if tasks and not isinstance(tasks, list):
            raise TypeError("Expected argument 'tasks' to be a list")
        pulumi.set(__self__, "tasks", tasks)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter
    def tasks(self) -> Sequence['outputs.GetKpsFailedTasksTaskResult']:
        """
        The list of the failed tasks.
        """
        return pulumi.get(self, "tasks")


class AwaitableGetKpsFailedTasksResult(GetKpsFailedTasksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetKpsFailedTasksResult(
            id=self.id,
            region=self.region,
            tasks=self.tasks)


def get_kps_failed_tasks(region: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetKpsFailedTasksResult:
    """
    Use this data source to get a list of the tasks that failed to bind, unbind, reset or replace key pairs.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sbercloud as sbercloud

    test = sbercloud.get_kps_failed_tasks()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sbercloud:index/getKpsFailedTasks:getKpsFailedTasks', __args__, opts=opts, typ=GetKpsFailedTasksResult).value

    return AwaitableGetKpsFailedTasksResult(
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        tasks=pulumi.get(__ret__, 'tasks'))
def get_kps_failed_tasks_output(region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetKpsFailedTasksResult]:
    """
    Use this data source to get a list of the tasks that failed to bind, unbind, reset or replace key pairs.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sbercloud as sbercloud

    test = sbercloud.get_kps_failed_tasks()
    ```


    :param _builtins.str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('sbercloud:index/getKpsFailedTasks:getKpsFailedTasks', __args__, opts=opts, typ=GetKpsFailedTasksResult)
    return __ret__.apply(lambda __response__: GetKpsFailedTasksResult(
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        tasks=pulumi.get(__response__, 'tasks')))
