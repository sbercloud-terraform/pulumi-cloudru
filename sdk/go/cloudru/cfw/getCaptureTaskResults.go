// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Use this data source to get the list of CFW capture task results.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			fwInstanceId := cfg.RequireObject("fwInstanceId")
//			taskId := cfg.RequireObject("taskId")
//			_, err := cfw.GetCaptureTaskResults(ctx, &cfw.GetCaptureTaskResultsArgs{
//				FwInstanceId: fwInstanceId,
//				TaskId:       taskId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCaptureTaskResults(ctx *pulumi.Context, args *GetCaptureTaskResultsArgs, opts ...pulumi.InvokeOption) (*GetCaptureTaskResultsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCaptureTaskResultsResult
	err := ctx.Invoke("sbercloud:Cfw/getCaptureTaskResults:getCaptureTaskResults", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCaptureTaskResults.
type GetCaptureTaskResultsArgs struct {
	// Specifies the ID of the firewall instance.
	FwInstanceId string `pulumi:"fwInstanceId"`
	// Specifies the public IP address ranges.
	// A maximum of three address ranges can be specified.
	Ips []string `pulumi:"ips"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the capture task ID.
	TaskId string `pulumi:"taskId"`
	// Specifies whether to set a public IP address for downloading.
	// The valid values are as follows:
	// + **0**: unlimited;
	// + **1**: set a public IP address for downloading. Currently, this feature can be used in the
	//   following regions: **cn-north-11**, **cn-east-5**, **af-south-1**, **ap-southeast-1**,
	//   **ap-southeast-3**, **ap-southeast-2**, **ap-southeast-4**, **tr-west-1**, **la-north-2**,
	//   **sa-brazil-1**, **la-south-2**, **me-east-1**.
	Type *int `pulumi:"type"`
}

// A collection of values returned by getCaptureTaskResults.
type GetCaptureTaskResultsResult struct {
	// The captcha.
	Captcha string `pulumi:"captcha"`
	// The expiration time of the download link.
	Expires int `pulumi:"expires"`
	// The capture file list.
	FileLists    []GetCaptureTaskResultsFileList `pulumi:"fileLists"`
	FwInstanceId string                          `pulumi:"fwInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id     string   `pulumi:"id"`
	Ips    []string `pulumi:"ips"`
	Region string   `pulumi:"region"`
	// The request header.
	RequestHeaders []GetCaptureTaskResultsRequestHeader `pulumi:"requestHeaders"`
	TaskId         string                               `pulumi:"taskId"`
	Type           *int                                 `pulumi:"type"`
	// The download link.
	Url string `pulumi:"url"`
}

func GetCaptureTaskResultsOutput(ctx *pulumi.Context, args GetCaptureTaskResultsOutputArgs, opts ...pulumi.InvokeOption) GetCaptureTaskResultsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCaptureTaskResultsResultOutput, error) {
			args := v.(GetCaptureTaskResultsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Cfw/getCaptureTaskResults:getCaptureTaskResults", args, GetCaptureTaskResultsResultOutput{}, options).(GetCaptureTaskResultsResultOutput), nil
		}).(GetCaptureTaskResultsResultOutput)
}

// A collection of arguments for invoking getCaptureTaskResults.
type GetCaptureTaskResultsOutputArgs struct {
	// Specifies the ID of the firewall instance.
	FwInstanceId pulumi.StringInput `pulumi:"fwInstanceId"`
	// Specifies the public IP address ranges.
	// A maximum of three address ranges can be specified.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the capture task ID.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// Specifies whether to set a public IP address for downloading.
	// The valid values are as follows:
	// + **0**: unlimited;
	// + **1**: set a public IP address for downloading. Currently, this feature can be used in the
	//   following regions: **cn-north-11**, **cn-east-5**, **af-south-1**, **ap-southeast-1**,
	//   **ap-southeast-3**, **ap-southeast-2**, **ap-southeast-4**, **tr-west-1**, **la-north-2**,
	//   **sa-brazil-1**, **la-south-2**, **me-east-1**.
	Type pulumi.IntPtrInput `pulumi:"type"`
}

func (GetCaptureTaskResultsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTaskResultsArgs)(nil)).Elem()
}

// A collection of values returned by getCaptureTaskResults.
type GetCaptureTaskResultsResultOutput struct{ *pulumi.OutputState }

func (GetCaptureTaskResultsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTaskResultsResult)(nil)).Elem()
}

func (o GetCaptureTaskResultsResultOutput) ToGetCaptureTaskResultsResultOutput() GetCaptureTaskResultsResultOutput {
	return o
}

func (o GetCaptureTaskResultsResultOutput) ToGetCaptureTaskResultsResultOutputWithContext(ctx context.Context) GetCaptureTaskResultsResultOutput {
	return o
}

// The captcha.
func (o GetCaptureTaskResultsResultOutput) Captcha() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) string { return v.Captcha }).(pulumi.StringOutput)
}

// The expiration time of the download link.
func (o GetCaptureTaskResultsResultOutput) Expires() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) int { return v.Expires }).(pulumi.IntOutput)
}

// The capture file list.
func (o GetCaptureTaskResultsResultOutput) FileLists() GetCaptureTaskResultsFileListArrayOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) []GetCaptureTaskResultsFileList { return v.FileLists }).(GetCaptureTaskResultsFileListArrayOutput)
}

func (o GetCaptureTaskResultsResultOutput) FwInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) string { return v.FwInstanceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCaptureTaskResultsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCaptureTaskResultsResultOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetCaptureTaskResultsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) string { return v.Region }).(pulumi.StringOutput)
}

// The request header.
func (o GetCaptureTaskResultsResultOutput) RequestHeaders() GetCaptureTaskResultsRequestHeaderArrayOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) []GetCaptureTaskResultsRequestHeader { return v.RequestHeaders }).(GetCaptureTaskResultsRequestHeaderArrayOutput)
}

func (o GetCaptureTaskResultsResultOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) string { return v.TaskId }).(pulumi.StringOutput)
}

func (o GetCaptureTaskResultsResultOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) *int { return v.Type }).(pulumi.IntPtrOutput)
}

// The download link.
func (o GetCaptureTaskResultsResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCaptureTaskResultsResultOutput{})
}
