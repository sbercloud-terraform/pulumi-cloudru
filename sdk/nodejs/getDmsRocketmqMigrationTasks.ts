// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get the list of RocketMQ instance's migration tasks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = sbercloud.getDmsRocketmqMigrationTasks({
 *     instanceId: instanceId,
 * });
 * ```
 */
export function getDmsRocketmqMigrationTasks(args: GetDmsRocketmqMigrationTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsRocketmqMigrationTasksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDmsRocketmqMigrationTasks:getDmsRocketmqMigrationTasks", {
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "taskId": args.taskId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqMigrationTasks.
 */
export interface GetDmsRocketmqMigrationTasksArgs {
    /**
     * Specifies the RocketMQ instance ID.
     */
    instanceId: string;
    /**
     * Specifies the RocketMQ migration task name.
     */
    name?: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the RocketMQ migration task ID.
     */
    taskId?: string;
    /**
     * Specifies the RocketMQ migration task type.
     * Valid values are **rocketmq** and **rabbitToRocket**.
     */
    type?: string;
}

/**
 * A collection of values returned by getDmsRocketmqMigrationTasks.
 */
export interface GetDmsRocketmqMigrationTasksResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Indicates the name of a metadata migration task.
     */
    readonly name?: string;
    readonly region: string;
    readonly taskId?: string;
    /**
     * Indicates the list of metadata migration tasks.
     */
    readonly tasks: outputs.GetDmsRocketmqMigrationTasksTask[];
    /**
     * Indicates the metadata migration task type.
     */
    readonly type?: string;
}
/**
 * Use this data source to get the list of RocketMQ instance's migration tasks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = sbercloud.getDmsRocketmqMigrationTasks({
 *     instanceId: instanceId,
 * });
 * ```
 */
export function getDmsRocketmqMigrationTasksOutput(args: GetDmsRocketmqMigrationTasksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDmsRocketmqMigrationTasksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDmsRocketmqMigrationTasks:getDmsRocketmqMigrationTasks", {
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "taskId": args.taskId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqMigrationTasks.
 */
export interface GetDmsRocketmqMigrationTasksOutputArgs {
    /**
     * Specifies the RocketMQ instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the RocketMQ migration task name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the RocketMQ migration task ID.
     */
    taskId?: pulumi.Input<string>;
    /**
     * Specifies the RocketMQ migration task type.
     * Valid values are **rocketmq** and **rabbitToRocket**.
     */
    type?: pulumi.Input<string>;
}
