// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// ## Import
//
// Security Groups can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import sbercloud:Vpc/secgroup:Secgroup secgroup_1 38809219-5e8a-4852-9139-6f461c90e8bc
// ```
type Secgroup struct {
	pulumi.CustomResourceState

	// The creation time, in UTC format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules pulumi.BoolPtrOutput `pulumi:"deleteDefaultRules"`
	// Description of the security group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the enterprise project id of the security group.
	// Changing this creates a new security group.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// A unique name for the security group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region pulumi.StringOutput `pulumi:"region"`
	// The array of security group rules associating with the security group.
	// The rule object is documented below.
	Rules SecgroupRuleTypeArrayOutput `pulumi:"rules"`
	Tags  pulumi.StringMapOutput      `pulumi:"tags"`
	// The last update time, in UTC format.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewSecgroup registers a new resource with the given unique name, arguments, and options.
func NewSecgroup(ctx *pulumi.Context,
	name string, args *SecgroupArgs, opts ...pulumi.ResourceOption) (*Secgroup, error) {
	if args == nil {
		args = &SecgroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Secgroup
	err := ctx.RegisterResource("sbercloud:Vpc/secgroup:Secgroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecgroup gets an existing Secgroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecgroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecgroupState, opts ...pulumi.ResourceOption) (*Secgroup, error) {
	var resource Secgroup
	err := ctx.ReadResource("sbercloud:Vpc/secgroup:Secgroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Secgroup resources.
type secgroupState struct {
	// The creation time, in UTC format.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules *bool `pulumi:"deleteDefaultRules"`
	// Description of the security group.
	Description *string `pulumi:"description"`
	// Specifies the enterprise project id of the security group.
	// Changing this creates a new security group.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// A unique name for the security group.
	Name *string `pulumi:"name"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region *string `pulumi:"region"`
	// The array of security group rules associating with the security group.
	// The rule object is documented below.
	Rules []SecgroupRuleType `pulumi:"rules"`
	Tags  map[string]string  `pulumi:"tags"`
	// The last update time, in UTC format.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type SecgroupState struct {
	// The creation time, in UTC format.
	CreatedAt pulumi.StringPtrInput
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules pulumi.BoolPtrInput
	// Description of the security group.
	Description pulumi.StringPtrInput
	// Specifies the enterprise project id of the security group.
	// Changing this creates a new security group.
	EnterpriseProjectId pulumi.StringPtrInput
	// A unique name for the security group.
	Name pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region pulumi.StringPtrInput
	// The array of security group rules associating with the security group.
	// The rule object is documented below.
	Rules SecgroupRuleTypeArrayInput
	Tags  pulumi.StringMapInput
	// The last update time, in UTC format.
	UpdatedAt pulumi.StringPtrInput
}

func (SecgroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*secgroupState)(nil)).Elem()
}

type secgroupArgs struct {
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules *bool `pulumi:"deleteDefaultRules"`
	// Description of the security group.
	Description *string `pulumi:"description"`
	// Specifies the enterprise project id of the security group.
	// Changing this creates a new security group.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// A unique name for the security group.
	Name *string `pulumi:"name"`
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region *string           `pulumi:"region"`
	Tags   map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Secgroup resource.
type SecgroupArgs struct {
	// Whether or not to delete the default
	// egress security rules. This is `false` by default. See the below note
	// for more information.
	DeleteDefaultRules pulumi.BoolPtrInput
	// Description of the security group.
	Description pulumi.StringPtrInput
	// Specifies the enterprise project id of the security group.
	// Changing this creates a new security group.
	EnterpriseProjectId pulumi.StringPtrInput
	// A unique name for the security group.
	Name pulumi.StringPtrInput
	// The region in which to obtain the V2 networking client.
	// A networking client is needed to create a port. If omitted, the
	// `region` argument of the provider is used. Changing this creates a new
	// security group.
	Region pulumi.StringPtrInput
	Tags   pulumi.StringMapInput
}

func (SecgroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secgroupArgs)(nil)).Elem()
}

type SecgroupInput interface {
	pulumi.Input

	ToSecgroupOutput() SecgroupOutput
	ToSecgroupOutputWithContext(ctx context.Context) SecgroupOutput
}

func (*Secgroup) ElementType() reflect.Type {
	return reflect.TypeOf((**Secgroup)(nil)).Elem()
}

func (i *Secgroup) ToSecgroupOutput() SecgroupOutput {
	return i.ToSecgroupOutputWithContext(context.Background())
}

func (i *Secgroup) ToSecgroupOutputWithContext(ctx context.Context) SecgroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecgroupOutput)
}

// SecgroupArrayInput is an input type that accepts SecgroupArray and SecgroupArrayOutput values.
// You can construct a concrete instance of `SecgroupArrayInput` via:
//
//	SecgroupArray{ SecgroupArgs{...} }
type SecgroupArrayInput interface {
	pulumi.Input

	ToSecgroupArrayOutput() SecgroupArrayOutput
	ToSecgroupArrayOutputWithContext(context.Context) SecgroupArrayOutput
}

type SecgroupArray []SecgroupInput

func (SecgroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Secgroup)(nil)).Elem()
}

func (i SecgroupArray) ToSecgroupArrayOutput() SecgroupArrayOutput {
	return i.ToSecgroupArrayOutputWithContext(context.Background())
}

func (i SecgroupArray) ToSecgroupArrayOutputWithContext(ctx context.Context) SecgroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecgroupArrayOutput)
}

// SecgroupMapInput is an input type that accepts SecgroupMap and SecgroupMapOutput values.
// You can construct a concrete instance of `SecgroupMapInput` via:
//
//	SecgroupMap{ "key": SecgroupArgs{...} }
type SecgroupMapInput interface {
	pulumi.Input

	ToSecgroupMapOutput() SecgroupMapOutput
	ToSecgroupMapOutputWithContext(context.Context) SecgroupMapOutput
}

type SecgroupMap map[string]SecgroupInput

func (SecgroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Secgroup)(nil)).Elem()
}

func (i SecgroupMap) ToSecgroupMapOutput() SecgroupMapOutput {
	return i.ToSecgroupMapOutputWithContext(context.Background())
}

func (i SecgroupMap) ToSecgroupMapOutputWithContext(ctx context.Context) SecgroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecgroupMapOutput)
}

type SecgroupOutput struct{ *pulumi.OutputState }

func (SecgroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Secgroup)(nil)).Elem()
}

func (o SecgroupOutput) ToSecgroupOutput() SecgroupOutput {
	return o
}

func (o SecgroupOutput) ToSecgroupOutputWithContext(ctx context.Context) SecgroupOutput {
	return o
}

// The creation time, in UTC format.
func (o SecgroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Whether or not to delete the default
// egress security rules. This is `false` by default. See the below note
// for more information.
func (o SecgroupOutput) DeleteDefaultRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.BoolPtrOutput { return v.DeleteDefaultRules }).(pulumi.BoolPtrOutput)
}

// Description of the security group.
func (o SecgroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the enterprise project id of the security group.
// Changing this creates a new security group.
func (o SecgroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// A unique name for the security group.
func (o SecgroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region in which to obtain the V2 networking client.
// A networking client is needed to create a port. If omitted, the
// `region` argument of the provider is used. Changing this creates a new
// security group.
func (o SecgroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The array of security group rules associating with the security group.
// The rule object is documented below.
func (o SecgroupOutput) Rules() SecgroupRuleTypeArrayOutput {
	return o.ApplyT(func(v *Secgroup) SecgroupRuleTypeArrayOutput { return v.Rules }).(SecgroupRuleTypeArrayOutput)
}

func (o SecgroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The last update time, in UTC format.
func (o SecgroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Secgroup) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type SecgroupArrayOutput struct{ *pulumi.OutputState }

func (SecgroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Secgroup)(nil)).Elem()
}

func (o SecgroupArrayOutput) ToSecgroupArrayOutput() SecgroupArrayOutput {
	return o
}

func (o SecgroupArrayOutput) ToSecgroupArrayOutputWithContext(ctx context.Context) SecgroupArrayOutput {
	return o
}

func (o SecgroupArrayOutput) Index(i pulumi.IntInput) SecgroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Secgroup {
		return vs[0].([]*Secgroup)[vs[1].(int)]
	}).(SecgroupOutput)
}

type SecgroupMapOutput struct{ *pulumi.OutputState }

func (SecgroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Secgroup)(nil)).Elem()
}

func (o SecgroupMapOutput) ToSecgroupMapOutput() SecgroupMapOutput {
	return o
}

func (o SecgroupMapOutput) ToSecgroupMapOutputWithContext(ctx context.Context) SecgroupMapOutput {
	return o
}

func (o SecgroupMapOutput) MapIndex(k pulumi.StringInput) SecgroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Secgroup {
		return vs[0].(map[string]*Secgroup)[vs[1].(string)]
	}).(SecgroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecgroupInput)(nil)).Elem(), &Secgroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecgroupArrayInput)(nil)).Elem(), SecgroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecgroupMapInput)(nil)).Elem(), SecgroupMap{})
	pulumi.RegisterOutputType(SecgroupOutput{})
	pulumi.RegisterOutputType(SecgroupArrayOutput{})
	pulumi.RegisterOutputType(SecgroupMapOutput{})
}
