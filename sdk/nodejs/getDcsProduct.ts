// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get the ID of an available DCS product.
 *
 * !> **WARNING:** It has been deprecated. This data source is used for the `productId` of the
 * `sbercloud.Dcs.Instance` resource. Now `productId` has been deprecated and this data source is no longer used.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const product1 = sbercloud.getDcsProduct({
 *     specCode: "dcs.single_node",
 * });
 * ```
 */
export function getDcsProduct(args?: GetDcsProductArgs, opts?: pulumi.InvokeOptions): Promise<GetDcsProductResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDcsProduct:getDcsProduct", {
        "region": args.region,
        "specCode": args.specCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getDcsProduct.
 */
export interface GetDcsProductArgs {
    /**
     * Specifies the region in which to obtain the dcs products.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the DCS instance specification code. For details, see
     * [Querying Service Specifications](https://support.hc.sbercloud.ru/api/dcs/dcs-api-0312040.html).
     * + Log in to the DCS console, click *Buy DCS Instance*, and find the corresponding instance specification.
     */
    specCode?: string;
}

/**
 * A collection of values returned by getDcsProduct.
 */
export interface GetDcsProductResult {
    /**
     * The mode of a cache engine. The value is one of *single*, *ha*, *cluster*,
     * *proxy* and *ha_rw_split*.
     */
    readonly cacheMode: string;
    readonly capacity: string;
    /**
     * The cache engine. The value is *redis* or *memcached*.
     */
    readonly engine: string;
    /**
     * The supported versions of a cache engine.
     */
    readonly engineVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly specCode: string;
}
/**
 * Use this data source to get the ID of an available DCS product.
 *
 * !> **WARNING:** It has been deprecated. This data source is used for the `productId` of the
 * `sbercloud.Dcs.Instance` resource. Now `productId` has been deprecated and this data source is no longer used.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const product1 = sbercloud.getDcsProduct({
 *     specCode: "dcs.single_node",
 * });
 * ```
 */
export function getDcsProductOutput(args?: GetDcsProductOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDcsProductResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDcsProduct:getDcsProduct", {
        "region": args.region,
        "specCode": args.specCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getDcsProduct.
 */
export interface GetDcsProductOutputArgs {
    /**
     * Specifies the region in which to obtain the dcs products.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the DCS instance specification code. For details, see
     * [Querying Service Specifications](https://support.hc.sbercloud.ru/api/dcs/dcs-api-0312040.html).
     * + Log in to the DCS console, click *Buy DCS Instance*, and find the corresponding instance specification.
     */
    specCode?: pulumi.Input<string>;
}
