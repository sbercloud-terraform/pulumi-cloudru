// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functiongraph

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type FunctionCustomImage struct {
	// The command line arguments used to start the SWR image.
	Args *string `pulumi:"args"`
	// The startup commands of the SWR image.
	Command *string `pulumi:"command"`
	// The URL of SWR image.
	Url string `pulumi:"url"`
	// The user group ID that used to run SWR image.
	UserGroupId *string `pulumi:"userGroupId"`
	// The user ID that used to run SWR image.
	UserId *string `pulumi:"userId"`
	// The working directory of the SWR image.
	WorkingDir *string `pulumi:"workingDir"`
}

// FunctionCustomImageInput is an input type that accepts FunctionCustomImageArgs and FunctionCustomImageOutput values.
// You can construct a concrete instance of `FunctionCustomImageInput` via:
//
//	FunctionCustomImageArgs{...}
type FunctionCustomImageInput interface {
	pulumi.Input

	ToFunctionCustomImageOutput() FunctionCustomImageOutput
	ToFunctionCustomImageOutputWithContext(context.Context) FunctionCustomImageOutput
}

type FunctionCustomImageArgs struct {
	// The command line arguments used to start the SWR image.
	Args pulumi.StringPtrInput `pulumi:"args"`
	// The startup commands of the SWR image.
	Command pulumi.StringPtrInput `pulumi:"command"`
	// The URL of SWR image.
	Url pulumi.StringInput `pulumi:"url"`
	// The user group ID that used to run SWR image.
	UserGroupId pulumi.StringPtrInput `pulumi:"userGroupId"`
	// The user ID that used to run SWR image.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// The working directory of the SWR image.
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (FunctionCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionCustomImage)(nil)).Elem()
}

func (i FunctionCustomImageArgs) ToFunctionCustomImageOutput() FunctionCustomImageOutput {
	return i.ToFunctionCustomImageOutputWithContext(context.Background())
}

func (i FunctionCustomImageArgs) ToFunctionCustomImageOutputWithContext(ctx context.Context) FunctionCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCustomImageOutput)
}

func (i FunctionCustomImageArgs) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return i.ToFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (i FunctionCustomImageArgs) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCustomImageOutput).ToFunctionCustomImagePtrOutputWithContext(ctx)
}

// FunctionCustomImagePtrInput is an input type that accepts FunctionCustomImageArgs, FunctionCustomImagePtr and FunctionCustomImagePtrOutput values.
// You can construct a concrete instance of `FunctionCustomImagePtrInput` via:
//
//	        FunctionCustomImageArgs{...}
//
//	or:
//
//	        nil
type FunctionCustomImagePtrInput interface {
	pulumi.Input

	ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput
	ToFunctionCustomImagePtrOutputWithContext(context.Context) FunctionCustomImagePtrOutput
}

type functionCustomImagePtrType FunctionCustomImageArgs

func FunctionCustomImagePtr(v *FunctionCustomImageArgs) FunctionCustomImagePtrInput {
	return (*functionCustomImagePtrType)(v)
}

func (*functionCustomImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionCustomImage)(nil)).Elem()
}

func (i *functionCustomImagePtrType) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return i.ToFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (i *functionCustomImagePtrType) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCustomImagePtrOutput)
}

type FunctionCustomImageOutput struct{ *pulumi.OutputState }

func (FunctionCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionCustomImage)(nil)).Elem()
}

func (o FunctionCustomImageOutput) ToFunctionCustomImageOutput() FunctionCustomImageOutput {
	return o
}

func (o FunctionCustomImageOutput) ToFunctionCustomImageOutputWithContext(ctx context.Context) FunctionCustomImageOutput {
	return o
}

func (o FunctionCustomImageOutput) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return o.ToFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (o FunctionCustomImageOutput) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionCustomImage) *FunctionCustomImage {
		return &v
	}).(FunctionCustomImagePtrOutput)
}

// The command line arguments used to start the SWR image.
func (o FunctionCustomImageOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.Args }).(pulumi.StringPtrOutput)
}

// The startup commands of the SWR image.
func (o FunctionCustomImageOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.Command }).(pulumi.StringPtrOutput)
}

// The URL of SWR image.
func (o FunctionCustomImageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCustomImage) string { return v.Url }).(pulumi.StringOutput)
}

// The user group ID that used to run SWR image.
func (o FunctionCustomImageOutput) UserGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.UserGroupId }).(pulumi.StringPtrOutput)
}

// The user ID that used to run SWR image.
func (o FunctionCustomImageOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// The working directory of the SWR image.
func (o FunctionCustomImageOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type FunctionCustomImagePtrOutput struct{ *pulumi.OutputState }

func (FunctionCustomImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionCustomImage)(nil)).Elem()
}

func (o FunctionCustomImagePtrOutput) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return o
}

func (o FunctionCustomImagePtrOutput) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return o
}

func (o FunctionCustomImagePtrOutput) Elem() FunctionCustomImageOutput {
	return o.ApplyT(func(v *FunctionCustomImage) FunctionCustomImage {
		if v != nil {
			return *v
		}
		var ret FunctionCustomImage
		return ret
	}).(FunctionCustomImageOutput)
}

// The command line arguments used to start the SWR image.
func (o FunctionCustomImagePtrOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringPtrOutput)
}

// The startup commands of the SWR image.
func (o FunctionCustomImagePtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringPtrOutput)
}

// The URL of SWR image.
func (o FunctionCustomImagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The user group ID that used to run SWR image.
func (o FunctionCustomImagePtrOutput) UserGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.UserGroupId
	}).(pulumi.StringPtrOutput)
}

// The user ID that used to run SWR image.
func (o FunctionCustomImagePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// The working directory of the SWR image.
func (o FunctionCustomImagePtrOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDir
	}).(pulumi.StringPtrOutput)
}

type FunctionFuncMount struct {
	// Specifies the function access path.
	LocalMountPath string `pulumi:"localMountPath"`
	// Specifies the ID of the mounted resource (corresponding cloud service).
	MountResource string `pulumi:"mountResource"`
	// Specifies the remote mount path. Example: 192.168.0.12:/data.
	MountSharePath string `pulumi:"mountSharePath"`
	// Specifies the mount type. Options: sfs, sfsTurbo, and ecs.
	MountType string `pulumi:"mountType"`
	// The mount status.
	Status *string `pulumi:"status"`
}

// FunctionFuncMountInput is an input type that accepts FunctionFuncMountArgs and FunctionFuncMountOutput values.
// You can construct a concrete instance of `FunctionFuncMountInput` via:
//
//	FunctionFuncMountArgs{...}
type FunctionFuncMountInput interface {
	pulumi.Input

	ToFunctionFuncMountOutput() FunctionFuncMountOutput
	ToFunctionFuncMountOutputWithContext(context.Context) FunctionFuncMountOutput
}

type FunctionFuncMountArgs struct {
	// Specifies the function access path.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// Specifies the ID of the mounted resource (corresponding cloud service).
	MountResource pulumi.StringInput `pulumi:"mountResource"`
	// Specifies the remote mount path. Example: 192.168.0.12:/data.
	MountSharePath pulumi.StringInput `pulumi:"mountSharePath"`
	// Specifies the mount type. Options: sfs, sfsTurbo, and ecs.
	MountType pulumi.StringInput `pulumi:"mountType"`
	// The mount status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FunctionFuncMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFuncMount)(nil)).Elem()
}

func (i FunctionFuncMountArgs) ToFunctionFuncMountOutput() FunctionFuncMountOutput {
	return i.ToFunctionFuncMountOutputWithContext(context.Background())
}

func (i FunctionFuncMountArgs) ToFunctionFuncMountOutputWithContext(ctx context.Context) FunctionFuncMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFuncMountOutput)
}

// FunctionFuncMountArrayInput is an input type that accepts FunctionFuncMountArray and FunctionFuncMountArrayOutput values.
// You can construct a concrete instance of `FunctionFuncMountArrayInput` via:
//
//	FunctionFuncMountArray{ FunctionFuncMountArgs{...} }
type FunctionFuncMountArrayInput interface {
	pulumi.Input

	ToFunctionFuncMountArrayOutput() FunctionFuncMountArrayOutput
	ToFunctionFuncMountArrayOutputWithContext(context.Context) FunctionFuncMountArrayOutput
}

type FunctionFuncMountArray []FunctionFuncMountInput

func (FunctionFuncMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionFuncMount)(nil)).Elem()
}

func (i FunctionFuncMountArray) ToFunctionFuncMountArrayOutput() FunctionFuncMountArrayOutput {
	return i.ToFunctionFuncMountArrayOutputWithContext(context.Background())
}

func (i FunctionFuncMountArray) ToFunctionFuncMountArrayOutputWithContext(ctx context.Context) FunctionFuncMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFuncMountArrayOutput)
}

type FunctionFuncMountOutput struct{ *pulumi.OutputState }

func (FunctionFuncMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFuncMount)(nil)).Elem()
}

func (o FunctionFuncMountOutput) ToFunctionFuncMountOutput() FunctionFuncMountOutput {
	return o
}

func (o FunctionFuncMountOutput) ToFunctionFuncMountOutputWithContext(ctx context.Context) FunctionFuncMountOutput {
	return o
}

// Specifies the function access path.
func (o FunctionFuncMountOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// Specifies the ID of the mounted resource (corresponding cloud service).
func (o FunctionFuncMountOutput) MountResource() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.MountResource }).(pulumi.StringOutput)
}

// Specifies the remote mount path. Example: 192.168.0.12:/data.
func (o FunctionFuncMountOutput) MountSharePath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.MountSharePath }).(pulumi.StringOutput)
}

// Specifies the mount type. Options: sfs, sfsTurbo, and ecs.
func (o FunctionFuncMountOutput) MountType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.MountType }).(pulumi.StringOutput)
}

// The mount status.
func (o FunctionFuncMountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionFuncMount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FunctionFuncMountArrayOutput struct{ *pulumi.OutputState }

func (FunctionFuncMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionFuncMount)(nil)).Elem()
}

func (o FunctionFuncMountArrayOutput) ToFunctionFuncMountArrayOutput() FunctionFuncMountArrayOutput {
	return o
}

func (o FunctionFuncMountArrayOutput) ToFunctionFuncMountArrayOutputWithContext(ctx context.Context) FunctionFuncMountArrayOutput {
	return o
}

func (o FunctionFuncMountArrayOutput) Index(i pulumi.IntInput) FunctionFuncMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionFuncMount {
		return vs[0].([]FunctionFuncMount)[vs[1].(int)]
	}).(FunctionFuncMountOutput)
}

type FunctionNetworkController struct {
	// Whether to disable the public network access.
	DisablePublicNetwork *bool `pulumi:"disablePublicNetwork"`
	// The configuration of the VPCs that can trigger the function.
	TriggerAccessVpcs []FunctionNetworkControllerTriggerAccessVpc `pulumi:"triggerAccessVpcs"`
}

// FunctionNetworkControllerInput is an input type that accepts FunctionNetworkControllerArgs and FunctionNetworkControllerOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerInput` via:
//
//	FunctionNetworkControllerArgs{...}
type FunctionNetworkControllerInput interface {
	pulumi.Input

	ToFunctionNetworkControllerOutput() FunctionNetworkControllerOutput
	ToFunctionNetworkControllerOutputWithContext(context.Context) FunctionNetworkControllerOutput
}

type FunctionNetworkControllerArgs struct {
	// Whether to disable the public network access.
	DisablePublicNetwork pulumi.BoolPtrInput `pulumi:"disablePublicNetwork"`
	// The configuration of the VPCs that can trigger the function.
	TriggerAccessVpcs FunctionNetworkControllerTriggerAccessVpcArrayInput `pulumi:"triggerAccessVpcs"`
}

func (FunctionNetworkControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkController)(nil)).Elem()
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerOutput() FunctionNetworkControllerOutput {
	return i.ToFunctionNetworkControllerOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerOutputWithContext(ctx context.Context) FunctionNetworkControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerOutput)
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return i.ToFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerOutput).ToFunctionNetworkControllerPtrOutputWithContext(ctx)
}

// FunctionNetworkControllerPtrInput is an input type that accepts FunctionNetworkControllerArgs, FunctionNetworkControllerPtr and FunctionNetworkControllerPtrOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerPtrInput` via:
//
//	        FunctionNetworkControllerArgs{...}
//
//	or:
//
//	        nil
type FunctionNetworkControllerPtrInput interface {
	pulumi.Input

	ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput
	ToFunctionNetworkControllerPtrOutputWithContext(context.Context) FunctionNetworkControllerPtrOutput
}

type functionNetworkControllerPtrType FunctionNetworkControllerArgs

func FunctionNetworkControllerPtr(v *FunctionNetworkControllerArgs) FunctionNetworkControllerPtrInput {
	return (*functionNetworkControllerPtrType)(v)
}

func (*functionNetworkControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionNetworkController)(nil)).Elem()
}

func (i *functionNetworkControllerPtrType) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return i.ToFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (i *functionNetworkControllerPtrType) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerPtrOutput)
}

type FunctionNetworkControllerOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkController)(nil)).Elem()
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerOutput() FunctionNetworkControllerOutput {
	return o
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerOutputWithContext(ctx context.Context) FunctionNetworkControllerOutput {
	return o
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return o.ToFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionNetworkController) *FunctionNetworkController {
		return &v
	}).(FunctionNetworkControllerPtrOutput)
}

// Whether to disable the public network access.
func (o FunctionNetworkControllerOutput) DisablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionNetworkController) *bool { return v.DisablePublicNetwork }).(pulumi.BoolPtrOutput)
}

// The configuration of the VPCs that can trigger the function.
func (o FunctionNetworkControllerOutput) TriggerAccessVpcs() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o.ApplyT(func(v FunctionNetworkController) []FunctionNetworkControllerTriggerAccessVpc {
		return v.TriggerAccessVpcs
	}).(FunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FunctionNetworkControllerPtrOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionNetworkController)(nil)).Elem()
}

func (o FunctionNetworkControllerPtrOutput) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return o
}

func (o FunctionNetworkControllerPtrOutput) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return o
}

func (o FunctionNetworkControllerPtrOutput) Elem() FunctionNetworkControllerOutput {
	return o.ApplyT(func(v *FunctionNetworkController) FunctionNetworkController {
		if v != nil {
			return *v
		}
		var ret FunctionNetworkController
		return ret
	}).(FunctionNetworkControllerOutput)
}

// Whether to disable the public network access.
func (o FunctionNetworkControllerPtrOutput) DisablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionNetworkController) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePublicNetwork
	}).(pulumi.BoolPtrOutput)
}

// The configuration of the VPCs that can trigger the function.
func (o FunctionNetworkControllerPtrOutput) TriggerAccessVpcs() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o.ApplyT(func(v *FunctionNetworkController) []FunctionNetworkControllerTriggerAccessVpc {
		if v == nil {
			return nil
		}
		return v.TriggerAccessVpcs
	}).(FunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FunctionNetworkControllerTriggerAccessVpc struct {
	// Specifies the ID of VPC.
	VpcId *string `pulumi:"vpcId"`
	// The ID of the VPC that can trigger the function.
	VpcName *string `pulumi:"vpcName"`
}

// FunctionNetworkControllerTriggerAccessVpcInput is an input type that accepts FunctionNetworkControllerTriggerAccessVpcArgs and FunctionNetworkControllerTriggerAccessVpcOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerTriggerAccessVpcInput` via:
//
//	FunctionNetworkControllerTriggerAccessVpcArgs{...}
type FunctionNetworkControllerTriggerAccessVpcInput interface {
	pulumi.Input

	ToFunctionNetworkControllerTriggerAccessVpcOutput() FunctionNetworkControllerTriggerAccessVpcOutput
	ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(context.Context) FunctionNetworkControllerTriggerAccessVpcOutput
}

type FunctionNetworkControllerTriggerAccessVpcArgs struct {
	// Specifies the ID of VPC.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// The ID of the VPC that can trigger the function.
	VpcName pulumi.StringPtrInput `pulumi:"vpcName"`
}

func (FunctionNetworkControllerTriggerAccessVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (i FunctionNetworkControllerTriggerAccessVpcArgs) ToFunctionNetworkControllerTriggerAccessVpcOutput() FunctionNetworkControllerTriggerAccessVpcOutput {
	return i.ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerTriggerAccessVpcArgs) ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerTriggerAccessVpcOutput)
}

// FunctionNetworkControllerTriggerAccessVpcArrayInput is an input type that accepts FunctionNetworkControllerTriggerAccessVpcArray and FunctionNetworkControllerTriggerAccessVpcArrayOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerTriggerAccessVpcArrayInput` via:
//
//	FunctionNetworkControllerTriggerAccessVpcArray{ FunctionNetworkControllerTriggerAccessVpcArgs{...} }
type FunctionNetworkControllerTriggerAccessVpcArrayInput interface {
	pulumi.Input

	ToFunctionNetworkControllerTriggerAccessVpcArrayOutput() FunctionNetworkControllerTriggerAccessVpcArrayOutput
	ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(context.Context) FunctionNetworkControllerTriggerAccessVpcArrayOutput
}

type FunctionNetworkControllerTriggerAccessVpcArray []FunctionNetworkControllerTriggerAccessVpcInput

func (FunctionNetworkControllerTriggerAccessVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (i FunctionNetworkControllerTriggerAccessVpcArray) ToFunctionNetworkControllerTriggerAccessVpcArrayOutput() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return i.ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerTriggerAccessVpcArray) ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FunctionNetworkControllerTriggerAccessVpcOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerTriggerAccessVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (o FunctionNetworkControllerTriggerAccessVpcOutput) ToFunctionNetworkControllerTriggerAccessVpcOutput() FunctionNetworkControllerTriggerAccessVpcOutput {
	return o
}

func (o FunctionNetworkControllerTriggerAccessVpcOutput) ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcOutput {
	return o
}

// Specifies the ID of VPC.
func (o FunctionNetworkControllerTriggerAccessVpcOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionNetworkControllerTriggerAccessVpc) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// The ID of the VPC that can trigger the function.
func (o FunctionNetworkControllerTriggerAccessVpcOutput) VpcName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionNetworkControllerTriggerAccessVpc) *string { return v.VpcName }).(pulumi.StringPtrOutput)
}

type FunctionNetworkControllerTriggerAccessVpcArrayOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerTriggerAccessVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (o FunctionNetworkControllerTriggerAccessVpcArrayOutput) ToFunctionNetworkControllerTriggerAccessVpcArrayOutput() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o
}

func (o FunctionNetworkControllerTriggerAccessVpcArrayOutput) ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o
}

func (o FunctionNetworkControllerTriggerAccessVpcArrayOutput) Index(i pulumi.IntInput) FunctionNetworkControllerTriggerAccessVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionNetworkControllerTriggerAccessVpc {
		return vs[0].([]FunctionNetworkControllerTriggerAccessVpc)[vs[1].(int)]
	}).(FunctionNetworkControllerTriggerAccessVpcOutput)
}

type FunctionReservedInstance struct {
	// The number of reserved instance.
	Count int `pulumi:"count"`
	// Whether to enable the idle mode.
	IdleMode *bool `pulumi:"idleMode"`
	// The version name or alias name.
	QualifierName string `pulumi:"qualifierName"`
	// The qualifier type of reserved instance.
	QualifierType string `pulumi:"qualifierType"`
	// The auto scaling policies for reserved instance.
	TacticsConfig *FunctionReservedInstanceTacticsConfig `pulumi:"tacticsConfig"`
}

// FunctionReservedInstanceInput is an input type that accepts FunctionReservedInstanceArgs and FunctionReservedInstanceOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceInput` via:
//
//	FunctionReservedInstanceArgs{...}
type FunctionReservedInstanceInput interface {
	pulumi.Input

	ToFunctionReservedInstanceOutput() FunctionReservedInstanceOutput
	ToFunctionReservedInstanceOutputWithContext(context.Context) FunctionReservedInstanceOutput
}

type FunctionReservedInstanceArgs struct {
	// The number of reserved instance.
	Count pulumi.IntInput `pulumi:"count"`
	// Whether to enable the idle mode.
	IdleMode pulumi.BoolPtrInput `pulumi:"idleMode"`
	// The version name or alias name.
	QualifierName pulumi.StringInput `pulumi:"qualifierName"`
	// The qualifier type of reserved instance.
	QualifierType pulumi.StringInput `pulumi:"qualifierType"`
	// The auto scaling policies for reserved instance.
	TacticsConfig FunctionReservedInstanceTacticsConfigPtrInput `pulumi:"tacticsConfig"`
}

func (FunctionReservedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstance)(nil)).Elem()
}

func (i FunctionReservedInstanceArgs) ToFunctionReservedInstanceOutput() FunctionReservedInstanceOutput {
	return i.ToFunctionReservedInstanceOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceArgs) ToFunctionReservedInstanceOutputWithContext(ctx context.Context) FunctionReservedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceOutput)
}

// FunctionReservedInstanceArrayInput is an input type that accepts FunctionReservedInstanceArray and FunctionReservedInstanceArrayOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceArrayInput` via:
//
//	FunctionReservedInstanceArray{ FunctionReservedInstanceArgs{...} }
type FunctionReservedInstanceArrayInput interface {
	pulumi.Input

	ToFunctionReservedInstanceArrayOutput() FunctionReservedInstanceArrayOutput
	ToFunctionReservedInstanceArrayOutputWithContext(context.Context) FunctionReservedInstanceArrayOutput
}

type FunctionReservedInstanceArray []FunctionReservedInstanceInput

func (FunctionReservedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstance)(nil)).Elem()
}

func (i FunctionReservedInstanceArray) ToFunctionReservedInstanceArrayOutput() FunctionReservedInstanceArrayOutput {
	return i.ToFunctionReservedInstanceArrayOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceArray) ToFunctionReservedInstanceArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceArrayOutput)
}

type FunctionReservedInstanceOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstance)(nil)).Elem()
}

func (o FunctionReservedInstanceOutput) ToFunctionReservedInstanceOutput() FunctionReservedInstanceOutput {
	return o
}

func (o FunctionReservedInstanceOutput) ToFunctionReservedInstanceOutputWithContext(ctx context.Context) FunctionReservedInstanceOutput {
	return o
}

// The number of reserved instance.
func (o FunctionReservedInstanceOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstance) int { return v.Count }).(pulumi.IntOutput)
}

// Whether to enable the idle mode.
func (o FunctionReservedInstanceOutput) IdleMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionReservedInstance) *bool { return v.IdleMode }).(pulumi.BoolPtrOutput)
}

// The version name or alias name.
func (o FunctionReservedInstanceOutput) QualifierName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstance) string { return v.QualifierName }).(pulumi.StringOutput)
}

// The qualifier type of reserved instance.
func (o FunctionReservedInstanceOutput) QualifierType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstance) string { return v.QualifierType }).(pulumi.StringOutput)
}

// The auto scaling policies for reserved instance.
func (o FunctionReservedInstanceOutput) TacticsConfig() FunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ApplyT(func(v FunctionReservedInstance) *FunctionReservedInstanceTacticsConfig { return v.TacticsConfig }).(FunctionReservedInstanceTacticsConfigPtrOutput)
}

type FunctionReservedInstanceArrayOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstance)(nil)).Elem()
}

func (o FunctionReservedInstanceArrayOutput) ToFunctionReservedInstanceArrayOutput() FunctionReservedInstanceArrayOutput {
	return o
}

func (o FunctionReservedInstanceArrayOutput) ToFunctionReservedInstanceArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceArrayOutput {
	return o
}

func (o FunctionReservedInstanceArrayOutput) Index(i pulumi.IntInput) FunctionReservedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionReservedInstance {
		return vs[0].([]FunctionReservedInstance)[vs[1].(int)]
	}).(FunctionReservedInstanceOutput)
}

type FunctionReservedInstanceTacticsConfig struct {
	// The list of scheduled policy configurations.
	CronConfigs []FunctionReservedInstanceTacticsConfigCronConfig `pulumi:"cronConfigs"`
	// The list of metric policy configurations.
	MetricConfigs []FunctionReservedInstanceTacticsConfigMetricConfig `pulumi:"metricConfigs"`
}

// FunctionReservedInstanceTacticsConfigInput is an input type that accepts FunctionReservedInstanceTacticsConfigArgs and FunctionReservedInstanceTacticsConfigOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigInput` via:
//
//	FunctionReservedInstanceTacticsConfigArgs{...}
type FunctionReservedInstanceTacticsConfigInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigOutput() FunctionReservedInstanceTacticsConfigOutput
	ToFunctionReservedInstanceTacticsConfigOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigOutput
}

type FunctionReservedInstanceTacticsConfigArgs struct {
	// The list of scheduled policy configurations.
	CronConfigs FunctionReservedInstanceTacticsConfigCronConfigArrayInput `pulumi:"cronConfigs"`
	// The list of metric policy configurations.
	MetricConfigs FunctionReservedInstanceTacticsConfigMetricConfigArrayInput `pulumi:"metricConfigs"`
}

func (FunctionReservedInstanceTacticsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigOutput() FunctionReservedInstanceTacticsConfigOutput {
	return i.ToFunctionReservedInstanceTacticsConfigOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigOutput)
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return i.ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigOutput).ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx)
}

// FunctionReservedInstanceTacticsConfigPtrInput is an input type that accepts FunctionReservedInstanceTacticsConfigArgs, FunctionReservedInstanceTacticsConfigPtr and FunctionReservedInstanceTacticsConfigPtrOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigPtrInput` via:
//
//	        FunctionReservedInstanceTacticsConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionReservedInstanceTacticsConfigPtrInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput
	ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigPtrOutput
}

type functionReservedInstanceTacticsConfigPtrType FunctionReservedInstanceTacticsConfigArgs

func FunctionReservedInstanceTacticsConfigPtr(v *FunctionReservedInstanceTacticsConfigArgs) FunctionReservedInstanceTacticsConfigPtrInput {
	return (*functionReservedInstanceTacticsConfigPtrType)(v)
}

func (*functionReservedInstanceTacticsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (i *functionReservedInstanceTacticsConfigPtrType) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return i.ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (i *functionReservedInstanceTacticsConfigPtrType) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigPtrOutput)
}

type FunctionReservedInstanceTacticsConfigOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigOutput() FunctionReservedInstanceTacticsConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionReservedInstanceTacticsConfig) *FunctionReservedInstanceTacticsConfig {
		return &v
	}).(FunctionReservedInstanceTacticsConfigPtrOutput)
}

// The list of scheduled policy configurations.
func (o FunctionReservedInstanceTacticsConfigOutput) CronConfigs() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigCronConfig {
		return v.CronConfigs
	}).(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

// The list of metric policy configurations.
func (o FunctionReservedInstanceTacticsConfigOutput) MetricConfigs() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigMetricConfig {
		return v.MetricConfigs
	}).(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigPtrOutput) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigPtrOutput) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigPtrOutput) Elem() FunctionReservedInstanceTacticsConfigOutput {
	return o.ApplyT(func(v *FunctionReservedInstanceTacticsConfig) FunctionReservedInstanceTacticsConfig {
		if v != nil {
			return *v
		}
		var ret FunctionReservedInstanceTacticsConfig
		return ret
	}).(FunctionReservedInstanceTacticsConfigOutput)
}

// The list of scheduled policy configurations.
func (o FunctionReservedInstanceTacticsConfigPtrOutput) CronConfigs() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o.ApplyT(func(v *FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigCronConfig {
		if v == nil {
			return nil
		}
		return v.CronConfigs
	}).(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

// The list of metric policy configurations.
func (o FunctionReservedInstanceTacticsConfigPtrOutput) MetricConfigs() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o.ApplyT(func(v *FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigMetricConfig {
		if v == nil {
			return nil
		}
		return v.MetricConfigs
	}).(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigCronConfig struct {
	// The number of reserved instance to which the policy belongs.
	Count int `pulumi:"count"`
	// The cron expression.
	Cron string `pulumi:"cron"`
	// The expiration timestamp of the policy.
	ExpiredTime int `pulumi:"expiredTime"`
	// Specifies the name of the function.
	Name string `pulumi:"name"`
	// The effective timestamp of policy.
	StartTime int `pulumi:"startTime"`
}

// FunctionReservedInstanceTacticsConfigCronConfigInput is an input type that accepts FunctionReservedInstanceTacticsConfigCronConfigArgs and FunctionReservedInstanceTacticsConfigCronConfigOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigCronConfigInput` via:
//
//	FunctionReservedInstanceTacticsConfigCronConfigArgs{...}
type FunctionReservedInstanceTacticsConfigCronConfigInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigCronConfigOutput() FunctionReservedInstanceTacticsConfigCronConfigOutput
	ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigCronConfigOutput
}

type FunctionReservedInstanceTacticsConfigCronConfigArgs struct {
	// The number of reserved instance to which the policy belongs.
	Count pulumi.IntInput `pulumi:"count"`
	// The cron expression.
	Cron pulumi.StringInput `pulumi:"cron"`
	// The expiration timestamp of the policy.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// Specifies the name of the function.
	Name pulumi.StringInput `pulumi:"name"`
	// The effective timestamp of policy.
	StartTime pulumi.IntInput `pulumi:"startTime"`
}

func (FunctionReservedInstanceTacticsConfigCronConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArgs) ToFunctionReservedInstanceTacticsConfigCronConfigOutput() FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return i.ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArgs) ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigCronConfigOutput)
}

// FunctionReservedInstanceTacticsConfigCronConfigArrayInput is an input type that accepts FunctionReservedInstanceTacticsConfigCronConfigArray and FunctionReservedInstanceTacticsConfigCronConfigArrayOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigCronConfigArrayInput` via:
//
//	FunctionReservedInstanceTacticsConfigCronConfigArray{ FunctionReservedInstanceTacticsConfigCronConfigArgs{...} }
type FunctionReservedInstanceTacticsConfigCronConfigArrayInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput
	ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigCronConfigArrayOutput
}

type FunctionReservedInstanceTacticsConfigCronConfigArray []FunctionReservedInstanceTacticsConfigCronConfigInput

func (FunctionReservedInstanceTacticsConfigCronConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArray) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return i.ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArray) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigCronConfigOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigCronConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) ToFunctionReservedInstanceTacticsConfigCronConfigOutput() FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return o
}

// The number of reserved instance to which the policy belongs.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) int { return v.Count }).(pulumi.IntOutput)
}

// The cron expression.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) string { return v.Cron }).(pulumi.StringOutput)
}

// The expiration timestamp of the policy.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// Specifies the name of the function.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The effective timestamp of policy.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) int { return v.StartTime }).(pulumi.IntOutput)
}

type FunctionReservedInstanceTacticsConfigCronConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) Index(i pulumi.IntInput) FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionReservedInstanceTacticsConfigCronConfig {
		return vs[0].([]FunctionReservedInstanceTacticsConfigCronConfig)[vs[1].(int)]
	}).(FunctionReservedInstanceTacticsConfigCronConfigOutput)
}

type FunctionReservedInstanceTacticsConfigMetricConfig struct {
	// The minimun of traffic.
	Min int `pulumi:"min"`
	// Specifies the name of the function.
	Name string `pulumi:"name"`
	// The metric policy threshold.
	Threshold int `pulumi:"threshold"`
	// The type of metric policy.
	Type string `pulumi:"type"`
}

// FunctionReservedInstanceTacticsConfigMetricConfigInput is an input type that accepts FunctionReservedInstanceTacticsConfigMetricConfigArgs and FunctionReservedInstanceTacticsConfigMetricConfigOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigMetricConfigInput` via:
//
//	FunctionReservedInstanceTacticsConfigMetricConfigArgs{...}
type FunctionReservedInstanceTacticsConfigMetricConfigInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigMetricConfigOutput() FunctionReservedInstanceTacticsConfigMetricConfigOutput
	ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigMetricConfigOutput
}

type FunctionReservedInstanceTacticsConfigMetricConfigArgs struct {
	// The minimun of traffic.
	Min pulumi.IntInput `pulumi:"min"`
	// Specifies the name of the function.
	Name pulumi.StringInput `pulumi:"name"`
	// The metric policy threshold.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// The type of metric policy.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FunctionReservedInstanceTacticsConfigMetricConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArgs) ToFunctionReservedInstanceTacticsConfigMetricConfigOutput() FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return i.ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArgs) ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigMetricConfigOutput)
}

// FunctionReservedInstanceTacticsConfigMetricConfigArrayInput is an input type that accepts FunctionReservedInstanceTacticsConfigMetricConfigArray and FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigMetricConfigArrayInput` via:
//
//	FunctionReservedInstanceTacticsConfigMetricConfigArray{ FunctionReservedInstanceTacticsConfigMetricConfigArgs{...} }
type FunctionReservedInstanceTacticsConfigMetricConfigArrayInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput
	ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput
}

type FunctionReservedInstanceTacticsConfigMetricConfigArray []FunctionReservedInstanceTacticsConfigMetricConfigInput

func (FunctionReservedInstanceTacticsConfigMetricConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArray) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return i.ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArray) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigMetricConfigOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigMetricConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigOutput() FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return o
}

// The minimun of traffic.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) int { return v.Min }).(pulumi.IntOutput)
}

// Specifies the name of the function.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The metric policy threshold.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) int { return v.Threshold }).(pulumi.IntOutput)
}

// The type of metric policy.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) Index(i pulumi.IntInput) FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionReservedInstanceTacticsConfigMetricConfig {
		return vs[0].([]FunctionReservedInstanceTacticsConfigMetricConfig)[vs[1].(int)]
	}).(FunctionReservedInstanceTacticsConfigMetricConfigOutput)
}

type FunctionVersion struct {
	// The aliases management for specified version.
	Aliases *FunctionVersionAliases `pulumi:"aliases"`
	// Specifies the description of the function.
	Description *string `pulumi:"description"`
	// Specifies the name of the function.
	Name string `pulumi:"name"`
}

// FunctionVersionInput is an input type that accepts FunctionVersionArgs and FunctionVersionOutput values.
// You can construct a concrete instance of `FunctionVersionInput` via:
//
//	FunctionVersionArgs{...}
type FunctionVersionInput interface {
	pulumi.Input

	ToFunctionVersionOutput() FunctionVersionOutput
	ToFunctionVersionOutputWithContext(context.Context) FunctionVersionOutput
}

type FunctionVersionArgs struct {
	// The aliases management for specified version.
	Aliases FunctionVersionAliasesPtrInput `pulumi:"aliases"`
	// Specifies the description of the function.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of the function.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FunctionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersion)(nil)).Elem()
}

func (i FunctionVersionArgs) ToFunctionVersionOutput() FunctionVersionOutput {
	return i.ToFunctionVersionOutputWithContext(context.Background())
}

func (i FunctionVersionArgs) ToFunctionVersionOutputWithContext(ctx context.Context) FunctionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionOutput)
}

// FunctionVersionArrayInput is an input type that accepts FunctionVersionArray and FunctionVersionArrayOutput values.
// You can construct a concrete instance of `FunctionVersionArrayInput` via:
//
//	FunctionVersionArray{ FunctionVersionArgs{...} }
type FunctionVersionArrayInput interface {
	pulumi.Input

	ToFunctionVersionArrayOutput() FunctionVersionArrayOutput
	ToFunctionVersionArrayOutputWithContext(context.Context) FunctionVersionArrayOutput
}

type FunctionVersionArray []FunctionVersionInput

func (FunctionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionVersion)(nil)).Elem()
}

func (i FunctionVersionArray) ToFunctionVersionArrayOutput() FunctionVersionArrayOutput {
	return i.ToFunctionVersionArrayOutputWithContext(context.Background())
}

func (i FunctionVersionArray) ToFunctionVersionArrayOutputWithContext(ctx context.Context) FunctionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionArrayOutput)
}

type FunctionVersionOutput struct{ *pulumi.OutputState }

func (FunctionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersion)(nil)).Elem()
}

func (o FunctionVersionOutput) ToFunctionVersionOutput() FunctionVersionOutput {
	return o
}

func (o FunctionVersionOutput) ToFunctionVersionOutputWithContext(ctx context.Context) FunctionVersionOutput {
	return o
}

// The aliases management for specified version.
func (o FunctionVersionOutput) Aliases() FunctionVersionAliasesPtrOutput {
	return o.ApplyT(func(v FunctionVersion) *FunctionVersionAliases { return v.Aliases }).(FunctionVersionAliasesPtrOutput)
}

// Specifies the description of the function.
func (o FunctionVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name of the function.
func (o FunctionVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionVersion) string { return v.Name }).(pulumi.StringOutput)
}

type FunctionVersionArrayOutput struct{ *pulumi.OutputState }

func (FunctionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionVersion)(nil)).Elem()
}

func (o FunctionVersionArrayOutput) ToFunctionVersionArrayOutput() FunctionVersionArrayOutput {
	return o
}

func (o FunctionVersionArrayOutput) ToFunctionVersionArrayOutputWithContext(ctx context.Context) FunctionVersionArrayOutput {
	return o
}

func (o FunctionVersionArrayOutput) Index(i pulumi.IntInput) FunctionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionVersion {
		return vs[0].([]FunctionVersion)[vs[1].(int)]
	}).(FunctionVersionOutput)
}

type FunctionVersionAliases struct {
	// The description of the version alias.
	AdditionalVersionStrategy *string `pulumi:"additionalVersionStrategy"`
	// The percentage grayscale configuration of the version alias.
	AdditionalVersionWeights *string `pulumi:"additionalVersionWeights"`
	// Specifies the description of the function.
	Description *string `pulumi:"description"`
	// Specifies the name of the function.
	Name string `pulumi:"name"`
}

// FunctionVersionAliasesInput is an input type that accepts FunctionVersionAliasesArgs and FunctionVersionAliasesOutput values.
// You can construct a concrete instance of `FunctionVersionAliasesInput` via:
//
//	FunctionVersionAliasesArgs{...}
type FunctionVersionAliasesInput interface {
	pulumi.Input

	ToFunctionVersionAliasesOutput() FunctionVersionAliasesOutput
	ToFunctionVersionAliasesOutputWithContext(context.Context) FunctionVersionAliasesOutput
}

type FunctionVersionAliasesArgs struct {
	// The description of the version alias.
	AdditionalVersionStrategy pulumi.StringPtrInput `pulumi:"additionalVersionStrategy"`
	// The percentage grayscale configuration of the version alias.
	AdditionalVersionWeights pulumi.StringPtrInput `pulumi:"additionalVersionWeights"`
	// Specifies the description of the function.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of the function.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FunctionVersionAliasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersionAliases)(nil)).Elem()
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesOutput() FunctionVersionAliasesOutput {
	return i.ToFunctionVersionAliasesOutputWithContext(context.Background())
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesOutputWithContext(ctx context.Context) FunctionVersionAliasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionAliasesOutput)
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return i.ToFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionAliasesOutput).ToFunctionVersionAliasesPtrOutputWithContext(ctx)
}

// FunctionVersionAliasesPtrInput is an input type that accepts FunctionVersionAliasesArgs, FunctionVersionAliasesPtr and FunctionVersionAliasesPtrOutput values.
// You can construct a concrete instance of `FunctionVersionAliasesPtrInput` via:
//
//	        FunctionVersionAliasesArgs{...}
//
//	or:
//
//	        nil
type FunctionVersionAliasesPtrInput interface {
	pulumi.Input

	ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput
	ToFunctionVersionAliasesPtrOutputWithContext(context.Context) FunctionVersionAliasesPtrOutput
}

type functionVersionAliasesPtrType FunctionVersionAliasesArgs

func FunctionVersionAliasesPtr(v *FunctionVersionAliasesArgs) FunctionVersionAliasesPtrInput {
	return (*functionVersionAliasesPtrType)(v)
}

func (*functionVersionAliasesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVersionAliases)(nil)).Elem()
}

func (i *functionVersionAliasesPtrType) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return i.ToFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (i *functionVersionAliasesPtrType) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionAliasesPtrOutput)
}

type FunctionVersionAliasesOutput struct{ *pulumi.OutputState }

func (FunctionVersionAliasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersionAliases)(nil)).Elem()
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesOutput() FunctionVersionAliasesOutput {
	return o
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesOutputWithContext(ctx context.Context) FunctionVersionAliasesOutput {
	return o
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return o.ToFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionVersionAliases) *FunctionVersionAliases {
		return &v
	}).(FunctionVersionAliasesPtrOutput)
}

// The description of the version alias.
func (o FunctionVersionAliasesOutput) AdditionalVersionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersionAliases) *string { return v.AdditionalVersionStrategy }).(pulumi.StringPtrOutput)
}

// The percentage grayscale configuration of the version alias.
func (o FunctionVersionAliasesOutput) AdditionalVersionWeights() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersionAliases) *string { return v.AdditionalVersionWeights }).(pulumi.StringPtrOutput)
}

// Specifies the description of the function.
func (o FunctionVersionAliasesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersionAliases) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name of the function.
func (o FunctionVersionAliasesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionVersionAliases) string { return v.Name }).(pulumi.StringOutput)
}

type FunctionVersionAliasesPtrOutput struct{ *pulumi.OutputState }

func (FunctionVersionAliasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVersionAliases)(nil)).Elem()
}

func (o FunctionVersionAliasesPtrOutput) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return o
}

func (o FunctionVersionAliasesPtrOutput) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return o
}

func (o FunctionVersionAliasesPtrOutput) Elem() FunctionVersionAliasesOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) FunctionVersionAliases {
		if v != nil {
			return *v
		}
		var ret FunctionVersionAliases
		return ret
	}).(FunctionVersionAliasesOutput)
}

// The description of the version alias.
func (o FunctionVersionAliasesPtrOutput) AdditionalVersionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionStrategy
	}).(pulumi.StringPtrOutput)
}

// The percentage grayscale configuration of the version alias.
func (o FunctionVersionAliasesPtrOutput) AdditionalVersionWeights() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionWeights
	}).(pulumi.StringPtrOutput)
}

// Specifies the description of the function.
func (o FunctionVersionAliasesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the function.
func (o FunctionVersionAliasesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type GetDependenciesPackage struct {
	// The unique ID of the dependency package.
	Etag string `pulumi:"etag"`
	// The file name of the stored dependency package.
	FileName string `pulumi:"fileName"`
	// The ID of the dependency package version.
	Id string `pulumi:"id"`
	// The OBS bucket path where the dependency package is located (FunctionGraph serivce side).
	Link string `pulumi:"link"`
	// Specifies the name of the dependency package.
	Name string `pulumi:"name"`
	// The owner of the dependency package.
	Owner string `pulumi:"owner"`
	// Specifies the runtime of the dependency package.\
	// The valid values are as follows:
	// + **Java8**
	// + **Java11**
	// + **Node.js6.10**
	// + **Node.js8.10**
	// + **Node.js10.16**
	// + **Node.js12.13**
	// + **Node.js14.18**
	// + **Node.js16.17**
	// + **Node.js18.15**
	// + **Python2.7**
	// + **Python3.6**
	// + **Python3.9**
	// + **Python3.10**
	// + **Go1.x**
	// + **C#(.NET Core 2.0)**
	// + **C#(.NET Core 2.1)**
	// + **C#(.NET Core 3.1)**
	// + **Custom**
	// + **PHP7.3**
	// + **Cangjie1.0**
	// + **http**
	// + **Custom Image**
	Runtime string `pulumi:"runtime"`
	// The size of the dependency package.
	Size int `pulumi:"size"`
	// The list of the versions for the dependency package.
	// The versions structure is documented below.
	Versions []GetDependenciesPackageVersion `pulumi:"versions"`
}

// GetDependenciesPackageInput is an input type that accepts GetDependenciesPackageArgs and GetDependenciesPackageOutput values.
// You can construct a concrete instance of `GetDependenciesPackageInput` via:
//
//	GetDependenciesPackageArgs{...}
type GetDependenciesPackageInput interface {
	pulumi.Input

	ToGetDependenciesPackageOutput() GetDependenciesPackageOutput
	ToGetDependenciesPackageOutputWithContext(context.Context) GetDependenciesPackageOutput
}

type GetDependenciesPackageArgs struct {
	// The unique ID of the dependency package.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The file name of the stored dependency package.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// The ID of the dependency package version.
	Id pulumi.StringInput `pulumi:"id"`
	// The OBS bucket path where the dependency package is located (FunctionGraph serivce side).
	Link pulumi.StringInput `pulumi:"link"`
	// Specifies the name of the dependency package.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the dependency package.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Specifies the runtime of the dependency package.\
	// The valid values are as follows:
	// + **Java8**
	// + **Java11**
	// + **Node.js6.10**
	// + **Node.js8.10**
	// + **Node.js10.16**
	// + **Node.js12.13**
	// + **Node.js14.18**
	// + **Node.js16.17**
	// + **Node.js18.15**
	// + **Python2.7**
	// + **Python3.6**
	// + **Python3.9**
	// + **Python3.10**
	// + **Go1.x**
	// + **C#(.NET Core 2.0)**
	// + **C#(.NET Core 2.1)**
	// + **C#(.NET Core 3.1)**
	// + **Custom**
	// + **PHP7.3**
	// + **Cangjie1.0**
	// + **http**
	// + **Custom Image**
	Runtime pulumi.StringInput `pulumi:"runtime"`
	// The size of the dependency package.
	Size pulumi.IntInput `pulumi:"size"`
	// The list of the versions for the dependency package.
	// The versions structure is documented below.
	Versions GetDependenciesPackageVersionArrayInput `pulumi:"versions"`
}

func (GetDependenciesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackage)(nil)).Elem()
}

func (i GetDependenciesPackageArgs) ToGetDependenciesPackageOutput() GetDependenciesPackageOutput {
	return i.ToGetDependenciesPackageOutputWithContext(context.Background())
}

func (i GetDependenciesPackageArgs) ToGetDependenciesPackageOutputWithContext(ctx context.Context) GetDependenciesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageOutput)
}

// GetDependenciesPackageArrayInput is an input type that accepts GetDependenciesPackageArray and GetDependenciesPackageArrayOutput values.
// You can construct a concrete instance of `GetDependenciesPackageArrayInput` via:
//
//	GetDependenciesPackageArray{ GetDependenciesPackageArgs{...} }
type GetDependenciesPackageArrayInput interface {
	pulumi.Input

	ToGetDependenciesPackageArrayOutput() GetDependenciesPackageArrayOutput
	ToGetDependenciesPackageArrayOutputWithContext(context.Context) GetDependenciesPackageArrayOutput
}

type GetDependenciesPackageArray []GetDependenciesPackageInput

func (GetDependenciesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackage)(nil)).Elem()
}

func (i GetDependenciesPackageArray) ToGetDependenciesPackageArrayOutput() GetDependenciesPackageArrayOutput {
	return i.ToGetDependenciesPackageArrayOutputWithContext(context.Background())
}

func (i GetDependenciesPackageArray) ToGetDependenciesPackageArrayOutputWithContext(ctx context.Context) GetDependenciesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageArrayOutput)
}

type GetDependenciesPackageOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackage)(nil)).Elem()
}

func (o GetDependenciesPackageOutput) ToGetDependenciesPackageOutput() GetDependenciesPackageOutput {
	return o
}

func (o GetDependenciesPackageOutput) ToGetDependenciesPackageOutputWithContext(ctx context.Context) GetDependenciesPackageOutput {
	return o
}

// The unique ID of the dependency package.
func (o GetDependenciesPackageOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Etag }).(pulumi.StringOutput)
}

// The file name of the stored dependency package.
func (o GetDependenciesPackageOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.FileName }).(pulumi.StringOutput)
}

// The ID of the dependency package version.
func (o GetDependenciesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The OBS bucket path where the dependency package is located (FunctionGraph serivce side).
func (o GetDependenciesPackageOutput) Link() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Link }).(pulumi.StringOutput)
}

// Specifies the name of the dependency package.
func (o GetDependenciesPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the dependency package.
func (o GetDependenciesPackageOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Owner }).(pulumi.StringOutput)
}

// Specifies the runtime of the dependency package.\
// The valid values are as follows:
// + **Java8**
// + **Java11**
// + **Node.js6.10**
// + **Node.js8.10**
// + **Node.js10.16**
// + **Node.js12.13**
// + **Node.js14.18**
// + **Node.js16.17**
// + **Node.js18.15**
// + **Python2.7**
// + **Python3.6**
// + **Python3.9**
// + **Python3.10**
// + **Go1.x**
// + **C#(.NET Core 2.0)**
// + **C#(.NET Core 2.1)**
// + **C#(.NET Core 3.1)**
// + **Custom**
// + **PHP7.3**
// + **Cangjie1.0**
// + **http**
// + **Custom Image**
func (o GetDependenciesPackageOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Runtime }).(pulumi.StringOutput)
}

// The size of the dependency package.
func (o GetDependenciesPackageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDependenciesPackage) int { return v.Size }).(pulumi.IntOutput)
}

// The list of the versions for the dependency package.
// The versions structure is documented below.
func (o GetDependenciesPackageOutput) Versions() GetDependenciesPackageVersionArrayOutput {
	return o.ApplyT(func(v GetDependenciesPackage) []GetDependenciesPackageVersion { return v.Versions }).(GetDependenciesPackageVersionArrayOutput)
}

type GetDependenciesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackage)(nil)).Elem()
}

func (o GetDependenciesPackageArrayOutput) ToGetDependenciesPackageArrayOutput() GetDependenciesPackageArrayOutput {
	return o
}

func (o GetDependenciesPackageArrayOutput) ToGetDependenciesPackageArrayOutputWithContext(ctx context.Context) GetDependenciesPackageArrayOutput {
	return o
}

func (o GetDependenciesPackageArrayOutput) Index(i pulumi.IntInput) GetDependenciesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDependenciesPackage {
		return vs[0].([]GetDependenciesPackage)[vs[1].(int)]
	}).(GetDependenciesPackageOutput)
}

type GetDependenciesPackageVersion struct {
	// The ID of the dependency package version.
	Id string `pulumi:"id"`
	// The dependency package version.
	Version int `pulumi:"version"`
}

// GetDependenciesPackageVersionInput is an input type that accepts GetDependenciesPackageVersionArgs and GetDependenciesPackageVersionOutput values.
// You can construct a concrete instance of `GetDependenciesPackageVersionInput` via:
//
//	GetDependenciesPackageVersionArgs{...}
type GetDependenciesPackageVersionInput interface {
	pulumi.Input

	ToGetDependenciesPackageVersionOutput() GetDependenciesPackageVersionOutput
	ToGetDependenciesPackageVersionOutputWithContext(context.Context) GetDependenciesPackageVersionOutput
}

type GetDependenciesPackageVersionArgs struct {
	// The ID of the dependency package version.
	Id pulumi.StringInput `pulumi:"id"`
	// The dependency package version.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetDependenciesPackageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackageVersion)(nil)).Elem()
}

func (i GetDependenciesPackageVersionArgs) ToGetDependenciesPackageVersionOutput() GetDependenciesPackageVersionOutput {
	return i.ToGetDependenciesPackageVersionOutputWithContext(context.Background())
}

func (i GetDependenciesPackageVersionArgs) ToGetDependenciesPackageVersionOutputWithContext(ctx context.Context) GetDependenciesPackageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageVersionOutput)
}

// GetDependenciesPackageVersionArrayInput is an input type that accepts GetDependenciesPackageVersionArray and GetDependenciesPackageVersionArrayOutput values.
// You can construct a concrete instance of `GetDependenciesPackageVersionArrayInput` via:
//
//	GetDependenciesPackageVersionArray{ GetDependenciesPackageVersionArgs{...} }
type GetDependenciesPackageVersionArrayInput interface {
	pulumi.Input

	ToGetDependenciesPackageVersionArrayOutput() GetDependenciesPackageVersionArrayOutput
	ToGetDependenciesPackageVersionArrayOutputWithContext(context.Context) GetDependenciesPackageVersionArrayOutput
}

type GetDependenciesPackageVersionArray []GetDependenciesPackageVersionInput

func (GetDependenciesPackageVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackageVersion)(nil)).Elem()
}

func (i GetDependenciesPackageVersionArray) ToGetDependenciesPackageVersionArrayOutput() GetDependenciesPackageVersionArrayOutput {
	return i.ToGetDependenciesPackageVersionArrayOutputWithContext(context.Background())
}

func (i GetDependenciesPackageVersionArray) ToGetDependenciesPackageVersionArrayOutputWithContext(ctx context.Context) GetDependenciesPackageVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageVersionArrayOutput)
}

type GetDependenciesPackageVersionOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackageVersion)(nil)).Elem()
}

func (o GetDependenciesPackageVersionOutput) ToGetDependenciesPackageVersionOutput() GetDependenciesPackageVersionOutput {
	return o
}

func (o GetDependenciesPackageVersionOutput) ToGetDependenciesPackageVersionOutputWithContext(ctx context.Context) GetDependenciesPackageVersionOutput {
	return o
}

// The ID of the dependency package version.
func (o GetDependenciesPackageVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackageVersion) string { return v.Id }).(pulumi.StringOutput)
}

// The dependency package version.
func (o GetDependenciesPackageVersionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetDependenciesPackageVersion) int { return v.Version }).(pulumi.IntOutput)
}

type GetDependenciesPackageVersionArrayOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackageVersion)(nil)).Elem()
}

func (o GetDependenciesPackageVersionArrayOutput) ToGetDependenciesPackageVersionArrayOutput() GetDependenciesPackageVersionArrayOutput {
	return o
}

func (o GetDependenciesPackageVersionArrayOutput) ToGetDependenciesPackageVersionArrayOutputWithContext(ctx context.Context) GetDependenciesPackageVersionArrayOutput {
	return o
}

func (o GetDependenciesPackageVersionArrayOutput) Index(i pulumi.IntInput) GetDependenciesPackageVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDependenciesPackageVersion {
		return vs[0].([]GetDependenciesPackageVersion)[vs[1].(int)]
	}).(GetDependenciesPackageVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionCustomImageInput)(nil)).Elem(), FunctionCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionCustomImagePtrInput)(nil)).Elem(), FunctionCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFuncMountInput)(nil)).Elem(), FunctionFuncMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFuncMountArrayInput)(nil)).Elem(), FunctionFuncMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerInput)(nil)).Elem(), FunctionNetworkControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerPtrInput)(nil)).Elem(), FunctionNetworkControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpcInput)(nil)).Elem(), FunctionNetworkControllerTriggerAccessVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpcArrayInput)(nil)).Elem(), FunctionNetworkControllerTriggerAccessVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceInput)(nil)).Elem(), FunctionReservedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceArrayInput)(nil)).Elem(), FunctionReservedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigPtrInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfigInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigCronConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfigArrayInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigCronConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfigInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigMetricConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfigArrayInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigMetricConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionInput)(nil)).Elem(), FunctionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionArrayInput)(nil)).Elem(), FunctionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionAliasesInput)(nil)).Elem(), FunctionVersionAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionAliasesPtrInput)(nil)).Elem(), FunctionVersionAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageInput)(nil)).Elem(), GetDependenciesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageArrayInput)(nil)).Elem(), GetDependenciesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageVersionInput)(nil)).Elem(), GetDependenciesPackageVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageVersionArrayInput)(nil)).Elem(), GetDependenciesPackageVersionArray{})
	pulumi.RegisterOutputType(FunctionCustomImageOutput{})
	pulumi.RegisterOutputType(FunctionCustomImagePtrOutput{})
	pulumi.RegisterOutputType(FunctionFuncMountOutput{})
	pulumi.RegisterOutputType(FunctionFuncMountArrayOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerPtrOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerTriggerAccessVpcOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerTriggerAccessVpcArrayOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceArrayOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigCronConfigOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigMetricConfigOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionVersionOutput{})
	pulumi.RegisterOutputType(FunctionVersionArrayOutput{})
	pulumi.RegisterOutputType(FunctionVersionAliasesOutput{})
	pulumi.RegisterOutputType(FunctionVersionAliasesPtrOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageVersionOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageVersionArrayOutput{})
}
