// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getClusterCertificates(args: GetClusterCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterCertificatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Cce/getClusterCertificates:getClusterCertificates", {
        "clusterId": args.clusterId,
        "duration": args.duration,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterCertificates.
 */
export interface GetClusterCertificatesArgs {
    clusterId: string;
    duration: number;
    region?: string;
}

/**
 * A collection of values returned by getClusterCertificates.
 */
export interface GetClusterCertificatesResult {
    readonly clusterId: string;
    readonly clusters: outputs.Cce.GetClusterCertificatesCluster[];
    readonly contexts: outputs.Cce.GetClusterCertificatesContext[];
    readonly currentContext: string;
    readonly duration: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kubeConfigRaw: string;
    readonly region: string;
    readonly users: outputs.Cce.GetClusterCertificatesUser[];
}
export function getClusterCertificatesOutput(args: GetClusterCertificatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterCertificatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Cce/getClusterCertificates:getClusterCertificates", {
        "clusterId": args.clusterId,
        "duration": args.duration,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterCertificates.
 */
export interface GetClusterCertificatesOutputArgs {
    clusterId: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    region?: pulumi.Input<string>;
}
