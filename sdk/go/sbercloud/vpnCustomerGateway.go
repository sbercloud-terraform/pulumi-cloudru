// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a VPN customer gateway resource within SberCloud.
//
// ## Example Usage
//
// ### Manages a common VPN customer gateway
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := cfg.RequireObject("name")
//			idValue := cfg.RequireObject("idValue")
//			_, err := sbercloud.NewVpnCustomerGateway(ctx, "test", &sbercloud.VpnCustomerGatewayArgs{
//				Name:    pulumi.Any(name),
//				IdValue: pulumi.Any(idValue),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Manages a VPN customer gateway with CA certificate
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := cfg.RequireObject("name")
//			idValue := cfg.RequireObject("idValue")
//			certificateContent := cfg.RequireObject("certificateContent")
//			_, err := sbercloud.NewVpnCustomerGateway(ctx, "test", &sbercloud.VpnCustomerGatewayArgs{
//				Name:               pulumi.Any(name),
//				IdValue:            pulumi.Any(idValue),
//				CertificateContent: pulumi.Any(certificateContent),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The customer gateway can be imported using the `id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:index/vpnCustomerGateway:VpnCustomerGateway test <id>
// ```
//
// # Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
//
// API response, security or some other reason. The missing attribute is `certificate_content`. It is generally recommended
//
// running `pulumi preview` after importing the resource. You can then decide if changes should be applied to the instance,
//
// or the resource definition should be updated to align with the instance. Also you can ignore changes as below.
//
// hcl
//
// resource "sbercloud_vpn_customer_gateway" "test" {
//
//	  ...
//
//	lifecycle {
//
//	  ignore_changes = [
//
//	    certificate_content,
//
//	  ]
//
//	}
//
// }
type VpnCustomerGateway struct {
	pulumi.CustomResourceState

	// The BGP ASN number of the customer gateway.
	// The value ranges from **1** to **4294967295**, the default value is **65000**.
	// Set this parameter to **0** when `idType` is set to **fqdn**.
	//
	// Changing this parameter will create a new resource.
	Asn pulumi.IntPtrOutput `pulumi:"asn"`
	// The CA certificate content of the customer gateway.
	CertificateContent pulumi.StringPtrOutput `pulumi:"certificateContent"`
	// Indicates the ID of the customer gateway certificate.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// The create time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Indicates the expire time of the customer gateway certificate.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Specifies the identifier type of a customer gateway.
	// The value can be **ip** or **fqdn**. The default value is **ip**.
	IdType pulumi.StringPtrOutput `pulumi:"idType"`
	// Specifies the identifier of a customer gateway.
	// When `idType` is set to **ip**, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When `idType` is set to **fqdn**, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	//
	// Changing this parameter will create a new resource.
	IdValue pulumi.StringOutput `pulumi:"idValue"`
	// The IP address of the customer gateway.
	Ip pulumi.StringPtrOutput `pulumi:"ip"`
	// Indicates whether the customer gateway certificate is updatable.
	IsUpdatable pulumi.BoolOutput `pulumi:"isUpdatable"`
	// Indicates the issuer of the customer gateway certificate.
	Issuer pulumi.StringOutput `pulumi:"issuer"`
	// The customer gateway name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The route mode of the customer gateway.
	RouteMode pulumi.StringPtrOutput `pulumi:"routeMode"`
	// Indicates the serial number of the customer gateway certificate.
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// Indicates the signature algorithm of the customer gateway certificate.
	SignatureAlgorithm pulumi.StringOutput `pulumi:"signatureAlgorithm"`
	// Indicates the subject of the customer gateway certificate.
	Subject pulumi.StringOutput `pulumi:"subject"`
	// Specifies the tags of the customer gateway.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The update time.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewVpnCustomerGateway registers a new resource with the given unique name, arguments, and options.
func NewVpnCustomerGateway(ctx *pulumi.Context,
	name string, args *VpnCustomerGatewayArgs, opts ...pulumi.ResourceOption) (*VpnCustomerGateway, error) {
	if args == nil {
		args = &VpnCustomerGatewayArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnCustomerGateway
	err := ctx.RegisterResource("sbercloud:index/vpnCustomerGateway:VpnCustomerGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnCustomerGateway gets an existing VpnCustomerGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnCustomerGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnCustomerGatewayState, opts ...pulumi.ResourceOption) (*VpnCustomerGateway, error) {
	var resource VpnCustomerGateway
	err := ctx.ReadResource("sbercloud:index/vpnCustomerGateway:VpnCustomerGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnCustomerGateway resources.
type vpnCustomerGatewayState struct {
	// The BGP ASN number of the customer gateway.
	// The value ranges from **1** to **4294967295**, the default value is **65000**.
	// Set this parameter to **0** when `idType` is set to **fqdn**.
	//
	// Changing this parameter will create a new resource.
	Asn *int `pulumi:"asn"`
	// The CA certificate content of the customer gateway.
	CertificateContent *string `pulumi:"certificateContent"`
	// Indicates the ID of the customer gateway certificate.
	CertificateId *string `pulumi:"certificateId"`
	// The create time.
	CreatedAt *string `pulumi:"createdAt"`
	// Indicates the expire time of the customer gateway certificate.
	ExpireTime *string `pulumi:"expireTime"`
	// Specifies the identifier type of a customer gateway.
	// The value can be **ip** or **fqdn**. The default value is **ip**.
	IdType *string `pulumi:"idType"`
	// Specifies the identifier of a customer gateway.
	// When `idType` is set to **ip**, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When `idType` is set to **fqdn**, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	//
	// Changing this parameter will create a new resource.
	IdValue *string `pulumi:"idValue"`
	// The IP address of the customer gateway.
	Ip *string `pulumi:"ip"`
	// Indicates whether the customer gateway certificate is updatable.
	IsUpdatable *bool `pulumi:"isUpdatable"`
	// Indicates the issuer of the customer gateway certificate.
	Issuer *string `pulumi:"issuer"`
	// The customer gateway name.
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The route mode of the customer gateway.
	RouteMode *string `pulumi:"routeMode"`
	// Indicates the serial number of the customer gateway certificate.
	SerialNumber *string `pulumi:"serialNumber"`
	// Indicates the signature algorithm of the customer gateway certificate.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// Indicates the subject of the customer gateway certificate.
	Subject *string `pulumi:"subject"`
	// Specifies the tags of the customer gateway.
	Tags map[string]string `pulumi:"tags"`
	// The update time.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type VpnCustomerGatewayState struct {
	// The BGP ASN number of the customer gateway.
	// The value ranges from **1** to **4294967295**, the default value is **65000**.
	// Set this parameter to **0** when `idType` is set to **fqdn**.
	//
	// Changing this parameter will create a new resource.
	Asn pulumi.IntPtrInput
	// The CA certificate content of the customer gateway.
	CertificateContent pulumi.StringPtrInput
	// Indicates the ID of the customer gateway certificate.
	CertificateId pulumi.StringPtrInput
	// The create time.
	CreatedAt pulumi.StringPtrInput
	// Indicates the expire time of the customer gateway certificate.
	ExpireTime pulumi.StringPtrInput
	// Specifies the identifier type of a customer gateway.
	// The value can be **ip** or **fqdn**. The default value is **ip**.
	IdType pulumi.StringPtrInput
	// Specifies the identifier of a customer gateway.
	// When `idType` is set to **ip**, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When `idType` is set to **fqdn**, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	//
	// Changing this parameter will create a new resource.
	IdValue pulumi.StringPtrInput
	// The IP address of the customer gateway.
	Ip pulumi.StringPtrInput
	// Indicates whether the customer gateway certificate is updatable.
	IsUpdatable pulumi.BoolPtrInput
	// Indicates the issuer of the customer gateway certificate.
	Issuer pulumi.StringPtrInput
	// The customer gateway name.
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The route mode of the customer gateway.
	RouteMode pulumi.StringPtrInput
	// Indicates the serial number of the customer gateway certificate.
	SerialNumber pulumi.StringPtrInput
	// Indicates the signature algorithm of the customer gateway certificate.
	SignatureAlgorithm pulumi.StringPtrInput
	// Indicates the subject of the customer gateway certificate.
	Subject pulumi.StringPtrInput
	// Specifies the tags of the customer gateway.
	Tags pulumi.StringMapInput
	// The update time.
	UpdatedAt pulumi.StringPtrInput
}

func (VpnCustomerGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnCustomerGatewayState)(nil)).Elem()
}

type vpnCustomerGatewayArgs struct {
	// The BGP ASN number of the customer gateway.
	// The value ranges from **1** to **4294967295**, the default value is **65000**.
	// Set this parameter to **0** when `idType` is set to **fqdn**.
	//
	// Changing this parameter will create a new resource.
	Asn *int `pulumi:"asn"`
	// The CA certificate content of the customer gateway.
	CertificateContent *string `pulumi:"certificateContent"`
	// Specifies the identifier type of a customer gateway.
	// The value can be **ip** or **fqdn**. The default value is **ip**.
	IdType *string `pulumi:"idType"`
	// Specifies the identifier of a customer gateway.
	// When `idType` is set to **ip**, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When `idType` is set to **fqdn**, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	//
	// Changing this parameter will create a new resource.
	IdValue *string `pulumi:"idValue"`
	// The IP address of the customer gateway.
	Ip *string `pulumi:"ip"`
	// The customer gateway name.
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The route mode of the customer gateway.
	RouteMode *string `pulumi:"routeMode"`
	// Specifies the tags of the customer gateway.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VpnCustomerGateway resource.
type VpnCustomerGatewayArgs struct {
	// The BGP ASN number of the customer gateway.
	// The value ranges from **1** to **4294967295**, the default value is **65000**.
	// Set this parameter to **0** when `idType` is set to **fqdn**.
	//
	// Changing this parameter will create a new resource.
	Asn pulumi.IntPtrInput
	// The CA certificate content of the customer gateway.
	CertificateContent pulumi.StringPtrInput
	// Specifies the identifier type of a customer gateway.
	// The value can be **ip** or **fqdn**. The default value is **ip**.
	IdType pulumi.StringPtrInput
	// Specifies the identifier of a customer gateway.
	// When `idType` is set to **ip**, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
	// When `idType` is set to **fqdn**, the value is a string of characters that can contain uppercase letters, lowercase letters,
	// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
	//
	// Changing this parameter will create a new resource.
	IdValue pulumi.StringPtrInput
	// The IP address of the customer gateway.
	Ip pulumi.StringPtrInput
	// The customer gateway name.
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The route mode of the customer gateway.
	RouteMode pulumi.StringPtrInput
	// Specifies the tags of the customer gateway.
	Tags pulumi.StringMapInput
}

func (VpnCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnCustomerGatewayArgs)(nil)).Elem()
}

type VpnCustomerGatewayInput interface {
	pulumi.Input

	ToVpnCustomerGatewayOutput() VpnCustomerGatewayOutput
	ToVpnCustomerGatewayOutputWithContext(ctx context.Context) VpnCustomerGatewayOutput
}

func (*VpnCustomerGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnCustomerGateway)(nil)).Elem()
}

func (i *VpnCustomerGateway) ToVpnCustomerGatewayOutput() VpnCustomerGatewayOutput {
	return i.ToVpnCustomerGatewayOutputWithContext(context.Background())
}

func (i *VpnCustomerGateway) ToVpnCustomerGatewayOutputWithContext(ctx context.Context) VpnCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnCustomerGatewayOutput)
}

// VpnCustomerGatewayArrayInput is an input type that accepts VpnCustomerGatewayArray and VpnCustomerGatewayArrayOutput values.
// You can construct a concrete instance of `VpnCustomerGatewayArrayInput` via:
//
//	VpnCustomerGatewayArray{ VpnCustomerGatewayArgs{...} }
type VpnCustomerGatewayArrayInput interface {
	pulumi.Input

	ToVpnCustomerGatewayArrayOutput() VpnCustomerGatewayArrayOutput
	ToVpnCustomerGatewayArrayOutputWithContext(context.Context) VpnCustomerGatewayArrayOutput
}

type VpnCustomerGatewayArray []VpnCustomerGatewayInput

func (VpnCustomerGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnCustomerGateway)(nil)).Elem()
}

func (i VpnCustomerGatewayArray) ToVpnCustomerGatewayArrayOutput() VpnCustomerGatewayArrayOutput {
	return i.ToVpnCustomerGatewayArrayOutputWithContext(context.Background())
}

func (i VpnCustomerGatewayArray) ToVpnCustomerGatewayArrayOutputWithContext(ctx context.Context) VpnCustomerGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnCustomerGatewayArrayOutput)
}

// VpnCustomerGatewayMapInput is an input type that accepts VpnCustomerGatewayMap and VpnCustomerGatewayMapOutput values.
// You can construct a concrete instance of `VpnCustomerGatewayMapInput` via:
//
//	VpnCustomerGatewayMap{ "key": VpnCustomerGatewayArgs{...} }
type VpnCustomerGatewayMapInput interface {
	pulumi.Input

	ToVpnCustomerGatewayMapOutput() VpnCustomerGatewayMapOutput
	ToVpnCustomerGatewayMapOutputWithContext(context.Context) VpnCustomerGatewayMapOutput
}

type VpnCustomerGatewayMap map[string]VpnCustomerGatewayInput

func (VpnCustomerGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnCustomerGateway)(nil)).Elem()
}

func (i VpnCustomerGatewayMap) ToVpnCustomerGatewayMapOutput() VpnCustomerGatewayMapOutput {
	return i.ToVpnCustomerGatewayMapOutputWithContext(context.Background())
}

func (i VpnCustomerGatewayMap) ToVpnCustomerGatewayMapOutputWithContext(ctx context.Context) VpnCustomerGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnCustomerGatewayMapOutput)
}

type VpnCustomerGatewayOutput struct{ *pulumi.OutputState }

func (VpnCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnCustomerGateway)(nil)).Elem()
}

func (o VpnCustomerGatewayOutput) ToVpnCustomerGatewayOutput() VpnCustomerGatewayOutput {
	return o
}

func (o VpnCustomerGatewayOutput) ToVpnCustomerGatewayOutputWithContext(ctx context.Context) VpnCustomerGatewayOutput {
	return o
}

// The BGP ASN number of the customer gateway.
// The value ranges from **1** to **4294967295**, the default value is **65000**.
// Set this parameter to **0** when `idType` is set to **fqdn**.
//
// Changing this parameter will create a new resource.
func (o VpnCustomerGatewayOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.IntPtrOutput { return v.Asn }).(pulumi.IntPtrOutput)
}

// The CA certificate content of the customer gateway.
func (o VpnCustomerGatewayOutput) CertificateContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringPtrOutput { return v.CertificateContent }).(pulumi.StringPtrOutput)
}

// Indicates the ID of the customer gateway certificate.
func (o VpnCustomerGatewayOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// The create time.
func (o VpnCustomerGatewayOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates the expire time of the customer gateway certificate.
func (o VpnCustomerGatewayOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Specifies the identifier type of a customer gateway.
// The value can be **ip** or **fqdn**. The default value is **ip**.
func (o VpnCustomerGatewayOutput) IdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringPtrOutput { return v.IdType }).(pulumi.StringPtrOutput)
}

// Specifies the identifier of a customer gateway.
// When `idType` is set to **ip**, the value is an IPv4 address in dotted decimal notation, for example, 192.168.45.7.
// When `idType` is set to **fqdn**, the value is a string of characters that can contain uppercase letters, lowercase letters,
// digits, and special characters. Spaces and the following special characters are not supported: & < > [ ] \ ?.
//
// Changing this parameter will create a new resource.
func (o VpnCustomerGatewayOutput) IdValue() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.IdValue }).(pulumi.StringOutput)
}

// The IP address of the customer gateway.
func (o VpnCustomerGatewayOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringPtrOutput { return v.Ip }).(pulumi.StringPtrOutput)
}

// Indicates whether the customer gateway certificate is updatable.
func (o VpnCustomerGatewayOutput) IsUpdatable() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.BoolOutput { return v.IsUpdatable }).(pulumi.BoolOutput)
}

// Indicates the issuer of the customer gateway certificate.
func (o VpnCustomerGatewayOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.Issuer }).(pulumi.StringOutput)
}

// The customer gateway name.
func (o VpnCustomerGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o VpnCustomerGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The route mode of the customer gateway.
func (o VpnCustomerGatewayOutput) RouteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringPtrOutput { return v.RouteMode }).(pulumi.StringPtrOutput)
}

// Indicates the serial number of the customer gateway certificate.
func (o VpnCustomerGatewayOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.SerialNumber }).(pulumi.StringOutput)
}

// Indicates the signature algorithm of the customer gateway certificate.
func (o VpnCustomerGatewayOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

// Indicates the subject of the customer gateway certificate.
func (o VpnCustomerGatewayOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.Subject }).(pulumi.StringOutput)
}

// Specifies the tags of the customer gateway.
func (o VpnCustomerGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The update time.
func (o VpnCustomerGatewayOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnCustomerGateway) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type VpnCustomerGatewayArrayOutput struct{ *pulumi.OutputState }

func (VpnCustomerGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpnCustomerGateway)(nil)).Elem()
}

func (o VpnCustomerGatewayArrayOutput) ToVpnCustomerGatewayArrayOutput() VpnCustomerGatewayArrayOutput {
	return o
}

func (o VpnCustomerGatewayArrayOutput) ToVpnCustomerGatewayArrayOutputWithContext(ctx context.Context) VpnCustomerGatewayArrayOutput {
	return o
}

func (o VpnCustomerGatewayArrayOutput) Index(i pulumi.IntInput) VpnCustomerGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpnCustomerGateway {
		return vs[0].([]*VpnCustomerGateway)[vs[1].(int)]
	}).(VpnCustomerGatewayOutput)
}

type VpnCustomerGatewayMapOutput struct{ *pulumi.OutputState }

func (VpnCustomerGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpnCustomerGateway)(nil)).Elem()
}

func (o VpnCustomerGatewayMapOutput) ToVpnCustomerGatewayMapOutput() VpnCustomerGatewayMapOutput {
	return o
}

func (o VpnCustomerGatewayMapOutput) ToVpnCustomerGatewayMapOutputWithContext(ctx context.Context) VpnCustomerGatewayMapOutput {
	return o
}

func (o VpnCustomerGatewayMapOutput) MapIndex(k pulumi.StringInput) VpnCustomerGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpnCustomerGateway {
		return vs[0].(map[string]*VpnCustomerGateway)[vs[1].(string)]
	}).(VpnCustomerGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnCustomerGatewayInput)(nil)).Elem(), &VpnCustomerGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnCustomerGatewayArrayInput)(nil)).Elem(), VpnCustomerGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnCustomerGatewayMapInput)(nil)).Elem(), VpnCustomerGatewayMap{})
	pulumi.RegisterOutputType(VpnCustomerGatewayOutput{})
	pulumi.RegisterOutputType(VpnCustomerGatewayArrayOutput{})
	pulumi.RegisterOutputType(VpnCustomerGatewayMapOutput{})
}
