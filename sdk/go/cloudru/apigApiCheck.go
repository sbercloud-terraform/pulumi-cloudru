// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigApiCheck struct {
	pulumi.CustomResourceState

	// The ID of the API to be excluded from the check.
	ApiId          pulumi.StringPtrOutput `pulumi:"apiId"`
	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// The ID of the group to which the API belongs.
	GroupId pulumi.StringPtrOutput `pulumi:"groupId"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The matching mode of the API.
	MatchMode pulumi.StringPtrOutput `pulumi:"matchMode"`
	// The name of the API.
	Name   pulumi.StringOutput `pulumi:"name"`
	Region pulumi.StringOutput `pulumi:"region"`
	// The request method of the API.
	ReqMethod pulumi.StringPtrOutput `pulumi:"reqMethod"`
	// The request path of the API.
	ReqUri pulumi.StringPtrOutput `pulumi:"reqUri"`
	// The type of the API to be checked.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewApigApiCheck registers a new resource with the given unique name, arguments, and options.
func NewApigApiCheck(ctx *pulumi.Context,
	name string, args *ApigApiCheckArgs, opts ...pulumi.ResourceOption) (*ApigApiCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApiCheck
	err := ctx.RegisterResource("cloudru:index/apigApiCheck:ApigApiCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApiCheck gets an existing ApigApiCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApiCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApiCheckState, opts ...pulumi.ResourceOption) (*ApigApiCheck, error) {
	var resource ApigApiCheck
	err := ctx.ReadResource("cloudru:index/apigApiCheck:ApigApiCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApiCheck resources.
type apigApiCheckState struct {
	// The ID of the API to be excluded from the check.
	ApiId          *string `pulumi:"apiId"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The ID of the group to which the API belongs.
	GroupId *string `pulumi:"groupId"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The matching mode of the API.
	MatchMode *string `pulumi:"matchMode"`
	// The name of the API.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// The request method of the API.
	ReqMethod *string `pulumi:"reqMethod"`
	// The request path of the API.
	ReqUri *string `pulumi:"reqUri"`
	// The type of the API to be checked.
	Type *string `pulumi:"type"`
}

type ApigApiCheckState struct {
	// The ID of the API to be excluded from the check.
	ApiId          pulumi.StringPtrInput
	EnableForceNew pulumi.StringPtrInput
	// The ID of the group to which the API belongs.
	GroupId pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringPtrInput
	// The matching mode of the API.
	MatchMode pulumi.StringPtrInput
	// The name of the API.
	Name   pulumi.StringPtrInput
	Region pulumi.StringPtrInput
	// The request method of the API.
	ReqMethod pulumi.StringPtrInput
	// The request path of the API.
	ReqUri pulumi.StringPtrInput
	// The type of the API to be checked.
	Type pulumi.StringPtrInput
}

func (ApigApiCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiCheckState)(nil)).Elem()
}

type apigApiCheckArgs struct {
	// The ID of the API to be excluded from the check.
	ApiId          *string `pulumi:"apiId"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The ID of the group to which the API belongs.
	GroupId *string `pulumi:"groupId"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId string `pulumi:"instanceId"`
	// The matching mode of the API.
	MatchMode *string `pulumi:"matchMode"`
	// The name of the API.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// The request method of the API.
	ReqMethod *string `pulumi:"reqMethod"`
	// The request path of the API.
	ReqUri *string `pulumi:"reqUri"`
	// The type of the API to be checked.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ApigApiCheck resource.
type ApigApiCheckArgs struct {
	// The ID of the API to be excluded from the check.
	ApiId          pulumi.StringPtrInput
	EnableForceNew pulumi.StringPtrInput
	// The ID of the group to which the API belongs.
	GroupId pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringInput
	// The matching mode of the API.
	MatchMode pulumi.StringPtrInput
	// The name of the API.
	Name   pulumi.StringPtrInput
	Region pulumi.StringPtrInput
	// The request method of the API.
	ReqMethod pulumi.StringPtrInput
	// The request path of the API.
	ReqUri pulumi.StringPtrInput
	// The type of the API to be checked.
	Type pulumi.StringInput
}

func (ApigApiCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiCheckArgs)(nil)).Elem()
}

type ApigApiCheckInput interface {
	pulumi.Input

	ToApigApiCheckOutput() ApigApiCheckOutput
	ToApigApiCheckOutputWithContext(ctx context.Context) ApigApiCheckOutput
}

func (*ApigApiCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiCheck)(nil)).Elem()
}

func (i *ApigApiCheck) ToApigApiCheckOutput() ApigApiCheckOutput {
	return i.ToApigApiCheckOutputWithContext(context.Background())
}

func (i *ApigApiCheck) ToApigApiCheckOutputWithContext(ctx context.Context) ApigApiCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiCheckOutput)
}

// ApigApiCheckArrayInput is an input type that accepts ApigApiCheckArray and ApigApiCheckArrayOutput values.
// You can construct a concrete instance of `ApigApiCheckArrayInput` via:
//
//	ApigApiCheckArray{ ApigApiCheckArgs{...} }
type ApigApiCheckArrayInput interface {
	pulumi.Input

	ToApigApiCheckArrayOutput() ApigApiCheckArrayOutput
	ToApigApiCheckArrayOutputWithContext(context.Context) ApigApiCheckArrayOutput
}

type ApigApiCheckArray []ApigApiCheckInput

func (ApigApiCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiCheck)(nil)).Elem()
}

func (i ApigApiCheckArray) ToApigApiCheckArrayOutput() ApigApiCheckArrayOutput {
	return i.ToApigApiCheckArrayOutputWithContext(context.Background())
}

func (i ApigApiCheckArray) ToApigApiCheckArrayOutputWithContext(ctx context.Context) ApigApiCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiCheckArrayOutput)
}

// ApigApiCheckMapInput is an input type that accepts ApigApiCheckMap and ApigApiCheckMapOutput values.
// You can construct a concrete instance of `ApigApiCheckMapInput` via:
//
//	ApigApiCheckMap{ "key": ApigApiCheckArgs{...} }
type ApigApiCheckMapInput interface {
	pulumi.Input

	ToApigApiCheckMapOutput() ApigApiCheckMapOutput
	ToApigApiCheckMapOutputWithContext(context.Context) ApigApiCheckMapOutput
}

type ApigApiCheckMap map[string]ApigApiCheckInput

func (ApigApiCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiCheck)(nil)).Elem()
}

func (i ApigApiCheckMap) ToApigApiCheckMapOutput() ApigApiCheckMapOutput {
	return i.ToApigApiCheckMapOutputWithContext(context.Background())
}

func (i ApigApiCheckMap) ToApigApiCheckMapOutputWithContext(ctx context.Context) ApigApiCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiCheckMapOutput)
}

type ApigApiCheckOutput struct{ *pulumi.OutputState }

func (ApigApiCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiCheck)(nil)).Elem()
}

func (o ApigApiCheckOutput) ToApigApiCheckOutput() ApigApiCheckOutput {
	return o
}

func (o ApigApiCheckOutput) ToApigApiCheckOutputWithContext(ctx context.Context) ApigApiCheckOutput {
	return o
}

// The ID of the API to be excluded from the check.
func (o ApigApiCheckOutput) ApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringPtrOutput { return v.ApiId }).(pulumi.StringPtrOutput)
}

func (o ApigApiCheckOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// The ID of the group to which the API belongs.
func (o ApigApiCheckOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The ID of the dedicated instance to which the API belongs.
func (o ApigApiCheckOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The matching mode of the API.
func (o ApigApiCheckOutput) MatchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringPtrOutput { return v.MatchMode }).(pulumi.StringPtrOutput)
}

// The name of the API.
func (o ApigApiCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ApigApiCheckOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The request method of the API.
func (o ApigApiCheckOutput) ReqMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringPtrOutput { return v.ReqMethod }).(pulumi.StringPtrOutput)
}

// The request path of the API.
func (o ApigApiCheckOutput) ReqUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringPtrOutput { return v.ReqUri }).(pulumi.StringPtrOutput)
}

// The type of the API to be checked.
func (o ApigApiCheckOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiCheck) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ApigApiCheckArrayOutput struct{ *pulumi.OutputState }

func (ApigApiCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiCheck)(nil)).Elem()
}

func (o ApigApiCheckArrayOutput) ToApigApiCheckArrayOutput() ApigApiCheckArrayOutput {
	return o
}

func (o ApigApiCheckArrayOutput) ToApigApiCheckArrayOutputWithContext(ctx context.Context) ApigApiCheckArrayOutput {
	return o
}

func (o ApigApiCheckArrayOutput) Index(i pulumi.IntInput) ApigApiCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApiCheck {
		return vs[0].([]*ApigApiCheck)[vs[1].(int)]
	}).(ApigApiCheckOutput)
}

type ApigApiCheckMapOutput struct{ *pulumi.OutputState }

func (ApigApiCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiCheck)(nil)).Elem()
}

func (o ApigApiCheckMapOutput) ToApigApiCheckMapOutput() ApigApiCheckMapOutput {
	return o
}

func (o ApigApiCheckMapOutput) ToApigApiCheckMapOutputWithContext(ctx context.Context) ApigApiCheckMapOutput {
	return o
}

func (o ApigApiCheckMapOutput) MapIndex(k pulumi.StringInput) ApigApiCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApiCheck {
		return vs[0].(map[string]*ApigApiCheck)[vs[1].(string)]
	}).(ApigApiCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiCheckInput)(nil)).Elem(), &ApigApiCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiCheckArrayInput)(nil)).Elem(), ApigApiCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiCheckMapInput)(nil)).Elem(), ApigApiCheckMap{})
	pulumi.RegisterOutputType(ApigApiCheckOutput{})
	pulumi.RegisterOutputType(ApigApiCheckArrayOutput{})
	pulumi.RegisterOutputType(ApigApiCheckMapOutput{})
}
