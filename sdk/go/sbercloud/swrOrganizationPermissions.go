// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages user permissions for the SWR organization resource within SberCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			organizationName := cfg.RequireObject("organizationName")
//			user1 := cfg.RequireObject("user1")
//			user2 := cfg.RequireObject("user2")
//			_, err := sbercloud.NewSwrOrganizationPermissions(ctx, "test", &sbercloud.SwrOrganizationPermissionsArgs{
//				Organization: pulumi.Any(organizationName),
//				Users: sbercloud.SwrOrganizationPermissionsUserArray{
//					&sbercloud.SwrOrganizationPermissionsUserArgs{
//						UserName:   pulumi.Any(user1.Name),
//						UserId:     pulumi.Any(user1.Id),
//						Permission: pulumi.String("Read"),
//					},
//					&sbercloud.SwrOrganizationPermissionsUserArgs{
//						UserName:   pulumi.Any(user2.Name),
//						UserId:     pulumi.Any(user2.Id),
//						Permission: pulumi.String("Read"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Organization Permissions can be imported using the `id` (organization name), e.g.
//
// ```sh
// $ pulumi import sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions test terraform-test
// ```
type SwrOrganizationPermissions struct {
	pulumi.CustomResourceState

	// The creator user name of the organization.
	Creator pulumi.StringOutput `pulumi:"creator"`
	// Specifies the name of the organization (namespace) to be accessed.
	// Changing this creates a new resource.
	Organization pulumi.StringOutput `pulumi:"organization"`
	// Specifies the region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The permission informations of current user.
	SelfPermissions SwrOrganizationPermissionsSelfPermissionArrayOutput `pulumi:"selfPermissions"`
	// Specifies the users to access to the organization (namespace).
	// Structure is documented below.
	Users SwrOrganizationPermissionsUserArrayOutput `pulumi:"users"`
}

// NewSwrOrganizationPermissions registers a new resource with the given unique name, arguments, and options.
func NewSwrOrganizationPermissions(ctx *pulumi.Context,
	name string, args *SwrOrganizationPermissionsArgs, opts ...pulumi.ResourceOption) (*SwrOrganizationPermissions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Users == nil {
		return nil, errors.New("invalid value for required argument 'Users'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SwrOrganizationPermissions
	err := ctx.RegisterResource("sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwrOrganizationPermissions gets an existing SwrOrganizationPermissions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwrOrganizationPermissions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwrOrganizationPermissionsState, opts ...pulumi.ResourceOption) (*SwrOrganizationPermissions, error) {
	var resource SwrOrganizationPermissions
	err := ctx.ReadResource("sbercloud:index/swrOrganizationPermissions:SwrOrganizationPermissions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwrOrganizationPermissions resources.
type swrOrganizationPermissionsState struct {
	// The creator user name of the organization.
	Creator *string `pulumi:"creator"`
	// Specifies the name of the organization (namespace) to be accessed.
	// Changing this creates a new resource.
	Organization *string `pulumi:"organization"`
	// Specifies the region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// The permission informations of current user.
	SelfPermissions []SwrOrganizationPermissionsSelfPermission `pulumi:"selfPermissions"`
	// Specifies the users to access to the organization (namespace).
	// Structure is documented below.
	Users []SwrOrganizationPermissionsUser `pulumi:"users"`
}

type SwrOrganizationPermissionsState struct {
	// The creator user name of the organization.
	Creator pulumi.StringPtrInput
	// Specifies the name of the organization (namespace) to be accessed.
	// Changing this creates a new resource.
	Organization pulumi.StringPtrInput
	// Specifies the region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// The permission informations of current user.
	SelfPermissions SwrOrganizationPermissionsSelfPermissionArrayInput
	// Specifies the users to access to the organization (namespace).
	// Structure is documented below.
	Users SwrOrganizationPermissionsUserArrayInput
}

func (SwrOrganizationPermissionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*swrOrganizationPermissionsState)(nil)).Elem()
}

type swrOrganizationPermissionsArgs struct {
	// Specifies the name of the organization (namespace) to be accessed.
	// Changing this creates a new resource.
	Organization string `pulumi:"organization"`
	// Specifies the region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the users to access to the organization (namespace).
	// Structure is documented below.
	Users []SwrOrganizationPermissionsUser `pulumi:"users"`
}

// The set of arguments for constructing a SwrOrganizationPermissions resource.
type SwrOrganizationPermissionsArgs struct {
	// Specifies the name of the organization (namespace) to be accessed.
	// Changing this creates a new resource.
	Organization pulumi.StringInput
	// Specifies the region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the users to access to the organization (namespace).
	// Structure is documented below.
	Users SwrOrganizationPermissionsUserArrayInput
}

func (SwrOrganizationPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*swrOrganizationPermissionsArgs)(nil)).Elem()
}

type SwrOrganizationPermissionsInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsOutput() SwrOrganizationPermissionsOutput
	ToSwrOrganizationPermissionsOutputWithContext(ctx context.Context) SwrOrganizationPermissionsOutput
}

func (*SwrOrganizationPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((**SwrOrganizationPermissions)(nil)).Elem()
}

func (i *SwrOrganizationPermissions) ToSwrOrganizationPermissionsOutput() SwrOrganizationPermissionsOutput {
	return i.ToSwrOrganizationPermissionsOutputWithContext(context.Background())
}

func (i *SwrOrganizationPermissions) ToSwrOrganizationPermissionsOutputWithContext(ctx context.Context) SwrOrganizationPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsOutput)
}

// SwrOrganizationPermissionsArrayInput is an input type that accepts SwrOrganizationPermissionsArray and SwrOrganizationPermissionsArrayOutput values.
// You can construct a concrete instance of `SwrOrganizationPermissionsArrayInput` via:
//
//	SwrOrganizationPermissionsArray{ SwrOrganizationPermissionsArgs{...} }
type SwrOrganizationPermissionsArrayInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsArrayOutput() SwrOrganizationPermissionsArrayOutput
	ToSwrOrganizationPermissionsArrayOutputWithContext(context.Context) SwrOrganizationPermissionsArrayOutput
}

type SwrOrganizationPermissionsArray []SwrOrganizationPermissionsInput

func (SwrOrganizationPermissionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwrOrganizationPermissions)(nil)).Elem()
}

func (i SwrOrganizationPermissionsArray) ToSwrOrganizationPermissionsArrayOutput() SwrOrganizationPermissionsArrayOutput {
	return i.ToSwrOrganizationPermissionsArrayOutputWithContext(context.Background())
}

func (i SwrOrganizationPermissionsArray) ToSwrOrganizationPermissionsArrayOutputWithContext(ctx context.Context) SwrOrganizationPermissionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsArrayOutput)
}

// SwrOrganizationPermissionsMapInput is an input type that accepts SwrOrganizationPermissionsMap and SwrOrganizationPermissionsMapOutput values.
// You can construct a concrete instance of `SwrOrganizationPermissionsMapInput` via:
//
//	SwrOrganizationPermissionsMap{ "key": SwrOrganizationPermissionsArgs{...} }
type SwrOrganizationPermissionsMapInput interface {
	pulumi.Input

	ToSwrOrganizationPermissionsMapOutput() SwrOrganizationPermissionsMapOutput
	ToSwrOrganizationPermissionsMapOutputWithContext(context.Context) SwrOrganizationPermissionsMapOutput
}

type SwrOrganizationPermissionsMap map[string]SwrOrganizationPermissionsInput

func (SwrOrganizationPermissionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwrOrganizationPermissions)(nil)).Elem()
}

func (i SwrOrganizationPermissionsMap) ToSwrOrganizationPermissionsMapOutput() SwrOrganizationPermissionsMapOutput {
	return i.ToSwrOrganizationPermissionsMapOutputWithContext(context.Background())
}

func (i SwrOrganizationPermissionsMap) ToSwrOrganizationPermissionsMapOutputWithContext(ctx context.Context) SwrOrganizationPermissionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwrOrganizationPermissionsMapOutput)
}

type SwrOrganizationPermissionsOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwrOrganizationPermissions)(nil)).Elem()
}

func (o SwrOrganizationPermissionsOutput) ToSwrOrganizationPermissionsOutput() SwrOrganizationPermissionsOutput {
	return o
}

func (o SwrOrganizationPermissionsOutput) ToSwrOrganizationPermissionsOutputWithContext(ctx context.Context) SwrOrganizationPermissionsOutput {
	return o
}

// The creator user name of the organization.
func (o SwrOrganizationPermissionsOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v *SwrOrganizationPermissions) pulumi.StringOutput { return v.Creator }).(pulumi.StringOutput)
}

// Specifies the name of the organization (namespace) to be accessed.
// Changing this creates a new resource.
func (o SwrOrganizationPermissionsOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *SwrOrganizationPermissions) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource. If omitted, the
// provider-level region will be used. Changing this creates a new resource.
func (o SwrOrganizationPermissionsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SwrOrganizationPermissions) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The permission informations of current user.
func (o SwrOrganizationPermissionsOutput) SelfPermissions() SwrOrganizationPermissionsSelfPermissionArrayOutput {
	return o.ApplyT(func(v *SwrOrganizationPermissions) SwrOrganizationPermissionsSelfPermissionArrayOutput {
		return v.SelfPermissions
	}).(SwrOrganizationPermissionsSelfPermissionArrayOutput)
}

// Specifies the users to access to the organization (namespace).
// Structure is documented below.
func (o SwrOrganizationPermissionsOutput) Users() SwrOrganizationPermissionsUserArrayOutput {
	return o.ApplyT(func(v *SwrOrganizationPermissions) SwrOrganizationPermissionsUserArrayOutput { return v.Users }).(SwrOrganizationPermissionsUserArrayOutput)
}

type SwrOrganizationPermissionsArrayOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwrOrganizationPermissions)(nil)).Elem()
}

func (o SwrOrganizationPermissionsArrayOutput) ToSwrOrganizationPermissionsArrayOutput() SwrOrganizationPermissionsArrayOutput {
	return o
}

func (o SwrOrganizationPermissionsArrayOutput) ToSwrOrganizationPermissionsArrayOutputWithContext(ctx context.Context) SwrOrganizationPermissionsArrayOutput {
	return o
}

func (o SwrOrganizationPermissionsArrayOutput) Index(i pulumi.IntInput) SwrOrganizationPermissionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwrOrganizationPermissions {
		return vs[0].([]*SwrOrganizationPermissions)[vs[1].(int)]
	}).(SwrOrganizationPermissionsOutput)
}

type SwrOrganizationPermissionsMapOutput struct{ *pulumi.OutputState }

func (SwrOrganizationPermissionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwrOrganizationPermissions)(nil)).Elem()
}

func (o SwrOrganizationPermissionsMapOutput) ToSwrOrganizationPermissionsMapOutput() SwrOrganizationPermissionsMapOutput {
	return o
}

func (o SwrOrganizationPermissionsMapOutput) ToSwrOrganizationPermissionsMapOutputWithContext(ctx context.Context) SwrOrganizationPermissionsMapOutput {
	return o
}

func (o SwrOrganizationPermissionsMapOutput) MapIndex(k pulumi.StringInput) SwrOrganizationPermissionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwrOrganizationPermissions {
		return vs[0].(map[string]*SwrOrganizationPermissions)[vs[1].(string)]
	}).(SwrOrganizationPermissionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsInput)(nil)).Elem(), &SwrOrganizationPermissions{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsArrayInput)(nil)).Elem(), SwrOrganizationPermissionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwrOrganizationPermissionsMapInput)(nil)).Elem(), SwrOrganizationPermissionsMap{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsOutput{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsArrayOutput{})
	pulumi.RegisterOutputType(SwrOrganizationPermissionsMapOutput{})
}
