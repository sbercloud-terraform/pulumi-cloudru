// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Manages the protected EIPs under the protect object for CFW service within SberCloud.
//
// > A protection object (`objectId`) can only create one `Cfw.EipProtection` resource for managing
// protected EIPs.
//
// ## Import
//
// The protection resource can be imported using their `object_id` or `id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:Cfw/eipProtection:EipProtection test <id>
// ```
type EipProtection struct {
	pulumi.CustomResourceState

	// The protected object ID.
	// Changing this parameter will create a new resource.
	ObjectId pulumi.StringOutput `pulumi:"objectId"`
	// The protected EIP configurations.
	// The object structure is documented below.
	//
	// <a name="cfwProtectedEip"></a>
	// The `protectedEip` block supports:
	ProtectedEips EipProtectionProtectedEipArrayOutput `pulumi:"protectedEips"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewEipProtection registers a new resource with the given unique name, arguments, and options.
func NewEipProtection(ctx *pulumi.Context,
	name string, args *EipProtectionArgs, opts ...pulumi.ResourceOption) (*EipProtection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ObjectId == nil {
		return nil, errors.New("invalid value for required argument 'ObjectId'")
	}
	if args.ProtectedEips == nil {
		return nil, errors.New("invalid value for required argument 'ProtectedEips'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EipProtection
	err := ctx.RegisterResource("sbercloud:Cfw/eipProtection:EipProtection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEipProtection gets an existing EipProtection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEipProtection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipProtectionState, opts ...pulumi.ResourceOption) (*EipProtection, error) {
	var resource EipProtection
	err := ctx.ReadResource("sbercloud:Cfw/eipProtection:EipProtection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EipProtection resources.
type eipProtectionState struct {
	// The protected object ID.
	// Changing this parameter will create a new resource.
	ObjectId *string `pulumi:"objectId"`
	// The protected EIP configurations.
	// The object structure is documented below.
	//
	// <a name="cfwProtectedEip"></a>
	// The `protectedEip` block supports:
	ProtectedEips []EipProtectionProtectedEip `pulumi:"protectedEips"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
}

type EipProtectionState struct {
	// The protected object ID.
	// Changing this parameter will create a new resource.
	ObjectId pulumi.StringPtrInput
	// The protected EIP configurations.
	// The object structure is documented below.
	//
	// <a name="cfwProtectedEip"></a>
	// The `protectedEip` block supports:
	ProtectedEips EipProtectionProtectedEipArrayInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
}

func (EipProtectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipProtectionState)(nil)).Elem()
}

type eipProtectionArgs struct {
	// The protected object ID.
	// Changing this parameter will create a new resource.
	ObjectId string `pulumi:"objectId"`
	// The protected EIP configurations.
	// The object structure is documented below.
	//
	// <a name="cfwProtectedEip"></a>
	// The `protectedEip` block supports:
	ProtectedEips []EipProtectionProtectedEip `pulumi:"protectedEips"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a EipProtection resource.
type EipProtectionArgs struct {
	// The protected object ID.
	// Changing this parameter will create a new resource.
	ObjectId pulumi.StringInput
	// The protected EIP configurations.
	// The object structure is documented below.
	//
	// <a name="cfwProtectedEip"></a>
	// The `protectedEip` block supports:
	ProtectedEips EipProtectionProtectedEipArrayInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
}

func (EipProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipProtectionArgs)(nil)).Elem()
}

type EipProtectionInput interface {
	pulumi.Input

	ToEipProtectionOutput() EipProtectionOutput
	ToEipProtectionOutputWithContext(ctx context.Context) EipProtectionOutput
}

func (*EipProtection) ElementType() reflect.Type {
	return reflect.TypeOf((**EipProtection)(nil)).Elem()
}

func (i *EipProtection) ToEipProtectionOutput() EipProtectionOutput {
	return i.ToEipProtectionOutputWithContext(context.Background())
}

func (i *EipProtection) ToEipProtectionOutputWithContext(ctx context.Context) EipProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipProtectionOutput)
}

// EipProtectionArrayInput is an input type that accepts EipProtectionArray and EipProtectionArrayOutput values.
// You can construct a concrete instance of `EipProtectionArrayInput` via:
//
//	EipProtectionArray{ EipProtectionArgs{...} }
type EipProtectionArrayInput interface {
	pulumi.Input

	ToEipProtectionArrayOutput() EipProtectionArrayOutput
	ToEipProtectionArrayOutputWithContext(context.Context) EipProtectionArrayOutput
}

type EipProtectionArray []EipProtectionInput

func (EipProtectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EipProtection)(nil)).Elem()
}

func (i EipProtectionArray) ToEipProtectionArrayOutput() EipProtectionArrayOutput {
	return i.ToEipProtectionArrayOutputWithContext(context.Background())
}

func (i EipProtectionArray) ToEipProtectionArrayOutputWithContext(ctx context.Context) EipProtectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipProtectionArrayOutput)
}

// EipProtectionMapInput is an input type that accepts EipProtectionMap and EipProtectionMapOutput values.
// You can construct a concrete instance of `EipProtectionMapInput` via:
//
//	EipProtectionMap{ "key": EipProtectionArgs{...} }
type EipProtectionMapInput interface {
	pulumi.Input

	ToEipProtectionMapOutput() EipProtectionMapOutput
	ToEipProtectionMapOutputWithContext(context.Context) EipProtectionMapOutput
}

type EipProtectionMap map[string]EipProtectionInput

func (EipProtectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EipProtection)(nil)).Elem()
}

func (i EipProtectionMap) ToEipProtectionMapOutput() EipProtectionMapOutput {
	return i.ToEipProtectionMapOutputWithContext(context.Background())
}

func (i EipProtectionMap) ToEipProtectionMapOutputWithContext(ctx context.Context) EipProtectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipProtectionMapOutput)
}

type EipProtectionOutput struct{ *pulumi.OutputState }

func (EipProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EipProtection)(nil)).Elem()
}

func (o EipProtectionOutput) ToEipProtectionOutput() EipProtectionOutput {
	return o
}

func (o EipProtectionOutput) ToEipProtectionOutputWithContext(ctx context.Context) EipProtectionOutput {
	return o
}

// The protected object ID.
// Changing this parameter will create a new resource.
func (o EipProtectionOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *EipProtection) pulumi.StringOutput { return v.ObjectId }).(pulumi.StringOutput)
}

// The protected EIP configurations.
// The object structure is documented below.
//
// <a name="cfwProtectedEip"></a>
// The `protectedEip` block supports:
func (o EipProtectionOutput) ProtectedEips() EipProtectionProtectedEipArrayOutput {
	return o.ApplyT(func(v *EipProtection) EipProtectionProtectedEipArrayOutput { return v.ProtectedEips }).(EipProtectionProtectedEipArrayOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o EipProtectionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *EipProtection) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type EipProtectionArrayOutput struct{ *pulumi.OutputState }

func (EipProtectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EipProtection)(nil)).Elem()
}

func (o EipProtectionArrayOutput) ToEipProtectionArrayOutput() EipProtectionArrayOutput {
	return o
}

func (o EipProtectionArrayOutput) ToEipProtectionArrayOutputWithContext(ctx context.Context) EipProtectionArrayOutput {
	return o
}

func (o EipProtectionArrayOutput) Index(i pulumi.IntInput) EipProtectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EipProtection {
		return vs[0].([]*EipProtection)[vs[1].(int)]
	}).(EipProtectionOutput)
}

type EipProtectionMapOutput struct{ *pulumi.OutputState }

func (EipProtectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EipProtection)(nil)).Elem()
}

func (o EipProtectionMapOutput) ToEipProtectionMapOutput() EipProtectionMapOutput {
	return o
}

func (o EipProtectionMapOutput) ToEipProtectionMapOutputWithContext(ctx context.Context) EipProtectionMapOutput {
	return o
}

func (o EipProtectionMapOutput) MapIndex(k pulumi.StringInput) EipProtectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EipProtection {
		return vs[0].(map[string]*EipProtection)[vs[1].(string)]
	}).(EipProtectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EipProtectionInput)(nil)).Elem(), &EipProtection{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipProtectionArrayInput)(nil)).Elem(), EipProtectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipProtectionMapInput)(nil)).Elem(), EipProtectionMap{})
	pulumi.RegisterOutputType(EipProtectionOutput{})
	pulumi.RegisterOutputType(EipProtectionArrayOutput{})
	pulumi.RegisterOutputType(EipProtectionMapOutput{})
}
