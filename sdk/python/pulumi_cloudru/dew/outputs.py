# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetKeypairsKeypairResult',
]

@pulumi.output_type
class GetKeypairsKeypairResult(dict):
    def __init__(__self__, *,
                 fingerprint: _builtins.str,
                 is_managed: _builtins.bool,
                 name: _builtins.str,
                 public_key: _builtins.str,
                 scope: _builtins.str):
        """
        :param _builtins.str fingerprint: Specifies the fingerprint of the keypair.
        :param _builtins.bool is_managed: Indicates whether the private key is managed by sberCloud.
        :param _builtins.str name: Specifies the name of the keypair.
        :param _builtins.str public_key: Specifies the imported OpenSSH-formatted public key.
        :param _builtins.str scope: Indicates the scope of keypair. The value can be **account**or **user**.
        """
        pulumi.set(__self__, "fingerprint", fingerprint)
        pulumi.set(__self__, "is_managed", is_managed)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "public_key", public_key)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter
    def fingerprint(self) -> _builtins.str:
        """
        Specifies the fingerprint of the keypair.
        """
        return pulumi.get(self, "fingerprint")

    @_builtins.property
    @pulumi.getter(name="isManaged")
    def is_managed(self) -> _builtins.bool:
        """
        Indicates whether the private key is managed by sberCloud.
        """
        return pulumi.get(self, "is_managed")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Specifies the name of the keypair.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="publicKey")
    def public_key(self) -> _builtins.str:
        """
        Specifies the imported OpenSSH-formatted public key.
        """
        return pulumi.get(self, "public_key")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        Indicates the scope of keypair. The value can be **account**or **user**.
        """
        return pulumi.get(self, "scope")


