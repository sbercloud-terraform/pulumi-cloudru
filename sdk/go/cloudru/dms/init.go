// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloudru:Dms/kafkaInstance:KafkaInstance":
		r = &KafkaInstance{}
	case "cloudru:Dms/kafkaPermissions:KafkaPermissions":
		r = &KafkaPermissions{}
	case "cloudru:Dms/kafkaTopic:KafkaTopic":
		r = &KafkaTopic{}
	case "cloudru:Dms/kafkaUser:KafkaUser":
		r = &KafkaUser{}
	case "cloudru:Dms/rabbitmqInstance:RabbitmqInstance":
		r = &RabbitmqInstance{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"cloudru",
		"Dms/kafkaInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Dms/kafkaPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Dms/kafkaTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Dms/kafkaUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Dms/rabbitmqInstance",
		&module{version},
	)
}
