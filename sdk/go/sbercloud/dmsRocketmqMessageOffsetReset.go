// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a DMS RocketMQ message offset reset resource within SberCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			group := cfg.RequireObject("group")
//			topic := cfg.RequireObject("topic")
//			_, err := sbercloud.NewDmsRocketmqMessageOffsetReset(ctx, "test", &sbercloud.DmsRocketmqMessageOffsetResetArgs{
//				InstanceId: pulumi.Any(instanceId),
//				Group:      pulumi.Any(group),
//				Topic:      pulumi.Any(topic),
//				Timestamp:  pulumi.String("0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DmsRocketmqMessageOffsetReset struct {
	pulumi.CustomResourceState

	// Specifies the group name.
	// Changing this creates a new resource.
	Group pulumi.StringOutput `pulumi:"group"`
	// Specifies the instance ID.
	// Changing this creates a new resource.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the timestamp.
	// + If it is specified as **0**, reset to earliset.
	// + If it is specified as **-1**, reset to latest.
	// + If it is specified as a timestamp in milliseconds, reset to specific time.
	//
	// Changing this creates a new resource.
	Timestamp pulumi.StringOutput `pulumi:"timestamp"`
	// Specifies the topic name.
	// Changing this creates a new resource.
	Topic pulumi.StringOutput `pulumi:"topic"`
}

// NewDmsRocketmqMessageOffsetReset registers a new resource with the given unique name, arguments, and options.
func NewDmsRocketmqMessageOffsetReset(ctx *pulumi.Context,
	name string, args *DmsRocketmqMessageOffsetResetArgs, opts ...pulumi.ResourceOption) (*DmsRocketmqMessageOffsetReset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Group == nil {
		return nil, errors.New("invalid value for required argument 'Group'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Timestamp == nil {
		return nil, errors.New("invalid value for required argument 'Timestamp'")
	}
	if args.Topic == nil {
		return nil, errors.New("invalid value for required argument 'Topic'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DmsRocketmqMessageOffsetReset
	err := ctx.RegisterResource("sbercloud:index/dmsRocketmqMessageOffsetReset:DmsRocketmqMessageOffsetReset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDmsRocketmqMessageOffsetReset gets an existing DmsRocketmqMessageOffsetReset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDmsRocketmqMessageOffsetReset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DmsRocketmqMessageOffsetResetState, opts ...pulumi.ResourceOption) (*DmsRocketmqMessageOffsetReset, error) {
	var resource DmsRocketmqMessageOffsetReset
	err := ctx.ReadResource("sbercloud:index/dmsRocketmqMessageOffsetReset:DmsRocketmqMessageOffsetReset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DmsRocketmqMessageOffsetReset resources.
type dmsRocketmqMessageOffsetResetState struct {
	// Specifies the group name.
	// Changing this creates a new resource.
	Group *string `pulumi:"group"`
	// Specifies the instance ID.
	// Changing this creates a new resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the timestamp.
	// + If it is specified as **0**, reset to earliset.
	// + If it is specified as **-1**, reset to latest.
	// + If it is specified as a timestamp in milliseconds, reset to specific time.
	//
	// Changing this creates a new resource.
	Timestamp *string `pulumi:"timestamp"`
	// Specifies the topic name.
	// Changing this creates a new resource.
	Topic *string `pulumi:"topic"`
}

type DmsRocketmqMessageOffsetResetState struct {
	// Specifies the group name.
	// Changing this creates a new resource.
	Group pulumi.StringPtrInput
	// Specifies the instance ID.
	// Changing this creates a new resource.
	InstanceId pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the timestamp.
	// + If it is specified as **0**, reset to earliset.
	// + If it is specified as **-1**, reset to latest.
	// + If it is specified as a timestamp in milliseconds, reset to specific time.
	//
	// Changing this creates a new resource.
	Timestamp pulumi.StringPtrInput
	// Specifies the topic name.
	// Changing this creates a new resource.
	Topic pulumi.StringPtrInput
}

func (DmsRocketmqMessageOffsetResetState) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsRocketmqMessageOffsetResetState)(nil)).Elem()
}

type dmsRocketmqMessageOffsetResetArgs struct {
	// Specifies the group name.
	// Changing this creates a new resource.
	Group string `pulumi:"group"`
	// Specifies the instance ID.
	// Changing this creates a new resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the timestamp.
	// + If it is specified as **0**, reset to earliset.
	// + If it is specified as **-1**, reset to latest.
	// + If it is specified as a timestamp in milliseconds, reset to specific time.
	//
	// Changing this creates a new resource.
	Timestamp string `pulumi:"timestamp"`
	// Specifies the topic name.
	// Changing this creates a new resource.
	Topic string `pulumi:"topic"`
}

// The set of arguments for constructing a DmsRocketmqMessageOffsetReset resource.
type DmsRocketmqMessageOffsetResetArgs struct {
	// Specifies the group name.
	// Changing this creates a new resource.
	Group pulumi.StringInput
	// Specifies the instance ID.
	// Changing this creates a new resource.
	InstanceId pulumi.StringInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the timestamp.
	// + If it is specified as **0**, reset to earliset.
	// + If it is specified as **-1**, reset to latest.
	// + If it is specified as a timestamp in milliseconds, reset to specific time.
	//
	// Changing this creates a new resource.
	Timestamp pulumi.StringInput
	// Specifies the topic name.
	// Changing this creates a new resource.
	Topic pulumi.StringInput
}

func (DmsRocketmqMessageOffsetResetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsRocketmqMessageOffsetResetArgs)(nil)).Elem()
}

type DmsRocketmqMessageOffsetResetInput interface {
	pulumi.Input

	ToDmsRocketmqMessageOffsetResetOutput() DmsRocketmqMessageOffsetResetOutput
	ToDmsRocketmqMessageOffsetResetOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetOutput
}

func (*DmsRocketmqMessageOffsetReset) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsRocketmqMessageOffsetReset)(nil)).Elem()
}

func (i *DmsRocketmqMessageOffsetReset) ToDmsRocketmqMessageOffsetResetOutput() DmsRocketmqMessageOffsetResetOutput {
	return i.ToDmsRocketmqMessageOffsetResetOutputWithContext(context.Background())
}

func (i *DmsRocketmqMessageOffsetReset) ToDmsRocketmqMessageOffsetResetOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqMessageOffsetResetOutput)
}

// DmsRocketmqMessageOffsetResetArrayInput is an input type that accepts DmsRocketmqMessageOffsetResetArray and DmsRocketmqMessageOffsetResetArrayOutput values.
// You can construct a concrete instance of `DmsRocketmqMessageOffsetResetArrayInput` via:
//
//	DmsRocketmqMessageOffsetResetArray{ DmsRocketmqMessageOffsetResetArgs{...} }
type DmsRocketmqMessageOffsetResetArrayInput interface {
	pulumi.Input

	ToDmsRocketmqMessageOffsetResetArrayOutput() DmsRocketmqMessageOffsetResetArrayOutput
	ToDmsRocketmqMessageOffsetResetArrayOutputWithContext(context.Context) DmsRocketmqMessageOffsetResetArrayOutput
}

type DmsRocketmqMessageOffsetResetArray []DmsRocketmqMessageOffsetResetInput

func (DmsRocketmqMessageOffsetResetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsRocketmqMessageOffsetReset)(nil)).Elem()
}

func (i DmsRocketmqMessageOffsetResetArray) ToDmsRocketmqMessageOffsetResetArrayOutput() DmsRocketmqMessageOffsetResetArrayOutput {
	return i.ToDmsRocketmqMessageOffsetResetArrayOutputWithContext(context.Background())
}

func (i DmsRocketmqMessageOffsetResetArray) ToDmsRocketmqMessageOffsetResetArrayOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqMessageOffsetResetArrayOutput)
}

// DmsRocketmqMessageOffsetResetMapInput is an input type that accepts DmsRocketmqMessageOffsetResetMap and DmsRocketmqMessageOffsetResetMapOutput values.
// You can construct a concrete instance of `DmsRocketmqMessageOffsetResetMapInput` via:
//
//	DmsRocketmqMessageOffsetResetMap{ "key": DmsRocketmqMessageOffsetResetArgs{...} }
type DmsRocketmqMessageOffsetResetMapInput interface {
	pulumi.Input

	ToDmsRocketmqMessageOffsetResetMapOutput() DmsRocketmqMessageOffsetResetMapOutput
	ToDmsRocketmqMessageOffsetResetMapOutputWithContext(context.Context) DmsRocketmqMessageOffsetResetMapOutput
}

type DmsRocketmqMessageOffsetResetMap map[string]DmsRocketmqMessageOffsetResetInput

func (DmsRocketmqMessageOffsetResetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsRocketmqMessageOffsetReset)(nil)).Elem()
}

func (i DmsRocketmqMessageOffsetResetMap) ToDmsRocketmqMessageOffsetResetMapOutput() DmsRocketmqMessageOffsetResetMapOutput {
	return i.ToDmsRocketmqMessageOffsetResetMapOutputWithContext(context.Background())
}

func (i DmsRocketmqMessageOffsetResetMap) ToDmsRocketmqMessageOffsetResetMapOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqMessageOffsetResetMapOutput)
}

type DmsRocketmqMessageOffsetResetOutput struct{ *pulumi.OutputState }

func (DmsRocketmqMessageOffsetResetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsRocketmqMessageOffsetReset)(nil)).Elem()
}

func (o DmsRocketmqMessageOffsetResetOutput) ToDmsRocketmqMessageOffsetResetOutput() DmsRocketmqMessageOffsetResetOutput {
	return o
}

func (o DmsRocketmqMessageOffsetResetOutput) ToDmsRocketmqMessageOffsetResetOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetOutput {
	return o
}

// Specifies the group name.
// Changing this creates a new resource.
func (o DmsRocketmqMessageOffsetResetOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqMessageOffsetReset) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// Specifies the instance ID.
// Changing this creates a new resource.
func (o DmsRocketmqMessageOffsetResetOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqMessageOffsetReset) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used.
// Changing this creates a new resource.
func (o DmsRocketmqMessageOffsetResetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqMessageOffsetReset) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the timestamp.
// + If it is specified as **0**, reset to earliset.
// + If it is specified as **-1**, reset to latest.
// + If it is specified as a timestamp in milliseconds, reset to specific time.
//
// Changing this creates a new resource.
func (o DmsRocketmqMessageOffsetResetOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqMessageOffsetReset) pulumi.StringOutput { return v.Timestamp }).(pulumi.StringOutput)
}

// Specifies the topic name.
// Changing this creates a new resource.
func (o DmsRocketmqMessageOffsetResetOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqMessageOffsetReset) pulumi.StringOutput { return v.Topic }).(pulumi.StringOutput)
}

type DmsRocketmqMessageOffsetResetArrayOutput struct{ *pulumi.OutputState }

func (DmsRocketmqMessageOffsetResetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsRocketmqMessageOffsetReset)(nil)).Elem()
}

func (o DmsRocketmqMessageOffsetResetArrayOutput) ToDmsRocketmqMessageOffsetResetArrayOutput() DmsRocketmqMessageOffsetResetArrayOutput {
	return o
}

func (o DmsRocketmqMessageOffsetResetArrayOutput) ToDmsRocketmqMessageOffsetResetArrayOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetArrayOutput {
	return o
}

func (o DmsRocketmqMessageOffsetResetArrayOutput) Index(i pulumi.IntInput) DmsRocketmqMessageOffsetResetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DmsRocketmqMessageOffsetReset {
		return vs[0].([]*DmsRocketmqMessageOffsetReset)[vs[1].(int)]
	}).(DmsRocketmqMessageOffsetResetOutput)
}

type DmsRocketmqMessageOffsetResetMapOutput struct{ *pulumi.OutputState }

func (DmsRocketmqMessageOffsetResetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsRocketmqMessageOffsetReset)(nil)).Elem()
}

func (o DmsRocketmqMessageOffsetResetMapOutput) ToDmsRocketmqMessageOffsetResetMapOutput() DmsRocketmqMessageOffsetResetMapOutput {
	return o
}

func (o DmsRocketmqMessageOffsetResetMapOutput) ToDmsRocketmqMessageOffsetResetMapOutputWithContext(ctx context.Context) DmsRocketmqMessageOffsetResetMapOutput {
	return o
}

func (o DmsRocketmqMessageOffsetResetMapOutput) MapIndex(k pulumi.StringInput) DmsRocketmqMessageOffsetResetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DmsRocketmqMessageOffsetReset {
		return vs[0].(map[string]*DmsRocketmqMessageOffsetReset)[vs[1].(string)]
	}).(DmsRocketmqMessageOffsetResetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqMessageOffsetResetInput)(nil)).Elem(), &DmsRocketmqMessageOffsetReset{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqMessageOffsetResetArrayInput)(nil)).Elem(), DmsRocketmqMessageOffsetResetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqMessageOffsetResetMapInput)(nil)).Elem(), DmsRocketmqMessageOffsetResetMap{})
	pulumi.RegisterOutputType(DmsRocketmqMessageOffsetResetOutput{})
	pulumi.RegisterOutputType(DmsRocketmqMessageOffsetResetArrayOutput{})
	pulumi.RegisterOutputType(DmsRocketmqMessageOffsetResetMapOutput{})
}
