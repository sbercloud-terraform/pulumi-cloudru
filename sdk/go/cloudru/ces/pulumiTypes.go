// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type AlarmruleAlarmAction struct {
	NotificationLists []string `pulumi:"notificationLists"`
	Type              string   `pulumi:"type"`
}

// AlarmruleAlarmActionInput is an input type that accepts AlarmruleAlarmActionArgs and AlarmruleAlarmActionOutput values.
// You can construct a concrete instance of `AlarmruleAlarmActionInput` via:
//
//	AlarmruleAlarmActionArgs{...}
type AlarmruleAlarmActionInput interface {
	pulumi.Input

	ToAlarmruleAlarmActionOutput() AlarmruleAlarmActionOutput
	ToAlarmruleAlarmActionOutputWithContext(context.Context) AlarmruleAlarmActionOutput
}

type AlarmruleAlarmActionArgs struct {
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (AlarmruleAlarmActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleAlarmAction)(nil)).Elem()
}

func (i AlarmruleAlarmActionArgs) ToAlarmruleAlarmActionOutput() AlarmruleAlarmActionOutput {
	return i.ToAlarmruleAlarmActionOutputWithContext(context.Background())
}

func (i AlarmruleAlarmActionArgs) ToAlarmruleAlarmActionOutputWithContext(ctx context.Context) AlarmruleAlarmActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleAlarmActionOutput)
}

// AlarmruleAlarmActionArrayInput is an input type that accepts AlarmruleAlarmActionArray and AlarmruleAlarmActionArrayOutput values.
// You can construct a concrete instance of `AlarmruleAlarmActionArrayInput` via:
//
//	AlarmruleAlarmActionArray{ AlarmruleAlarmActionArgs{...} }
type AlarmruleAlarmActionArrayInput interface {
	pulumi.Input

	ToAlarmruleAlarmActionArrayOutput() AlarmruleAlarmActionArrayOutput
	ToAlarmruleAlarmActionArrayOutputWithContext(context.Context) AlarmruleAlarmActionArrayOutput
}

type AlarmruleAlarmActionArray []AlarmruleAlarmActionInput

func (AlarmruleAlarmActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleAlarmAction)(nil)).Elem()
}

func (i AlarmruleAlarmActionArray) ToAlarmruleAlarmActionArrayOutput() AlarmruleAlarmActionArrayOutput {
	return i.ToAlarmruleAlarmActionArrayOutputWithContext(context.Background())
}

func (i AlarmruleAlarmActionArray) ToAlarmruleAlarmActionArrayOutputWithContext(ctx context.Context) AlarmruleAlarmActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleAlarmActionArrayOutput)
}

type AlarmruleAlarmActionOutput struct{ *pulumi.OutputState }

func (AlarmruleAlarmActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleAlarmAction)(nil)).Elem()
}

func (o AlarmruleAlarmActionOutput) ToAlarmruleAlarmActionOutput() AlarmruleAlarmActionOutput {
	return o
}

func (o AlarmruleAlarmActionOutput) ToAlarmruleAlarmActionOutputWithContext(ctx context.Context) AlarmruleAlarmActionOutput {
	return o
}

func (o AlarmruleAlarmActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmruleAlarmAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

func (o AlarmruleAlarmActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleAlarmAction) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmruleAlarmActionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleAlarmActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleAlarmAction)(nil)).Elem()
}

func (o AlarmruleAlarmActionArrayOutput) ToAlarmruleAlarmActionArrayOutput() AlarmruleAlarmActionArrayOutput {
	return o
}

func (o AlarmruleAlarmActionArrayOutput) ToAlarmruleAlarmActionArrayOutputWithContext(ctx context.Context) AlarmruleAlarmActionArrayOutput {
	return o
}

func (o AlarmruleAlarmActionArrayOutput) Index(i pulumi.IntInput) AlarmruleAlarmActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleAlarmAction {
		return vs[0].([]AlarmruleAlarmAction)[vs[1].(int)]
	}).(AlarmruleAlarmActionOutput)
}

type AlarmruleCondition struct {
	ComparisonOperator string  `pulumi:"comparisonOperator"`
	Count              int     `pulumi:"count"`
	Filter             string  `pulumi:"filter"`
	Period             int     `pulumi:"period"`
	SuppressDuration   *int    `pulumi:"suppressDuration"`
	Unit               *string `pulumi:"unit"`
	Value              int     `pulumi:"value"`
}

// AlarmruleConditionInput is an input type that accepts AlarmruleConditionArgs and AlarmruleConditionOutput values.
// You can construct a concrete instance of `AlarmruleConditionInput` via:
//
//	AlarmruleConditionArgs{...}
type AlarmruleConditionInput interface {
	pulumi.Input

	ToAlarmruleConditionOutput() AlarmruleConditionOutput
	ToAlarmruleConditionOutputWithContext(context.Context) AlarmruleConditionOutput
}

type AlarmruleConditionArgs struct {
	ComparisonOperator pulumi.StringInput    `pulumi:"comparisonOperator"`
	Count              pulumi.IntInput       `pulumi:"count"`
	Filter             pulumi.StringInput    `pulumi:"filter"`
	Period             pulumi.IntInput       `pulumi:"period"`
	SuppressDuration   pulumi.IntPtrInput    `pulumi:"suppressDuration"`
	Unit               pulumi.StringPtrInput `pulumi:"unit"`
	Value              pulumi.IntInput       `pulumi:"value"`
}

func (AlarmruleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleCondition)(nil)).Elem()
}

func (i AlarmruleConditionArgs) ToAlarmruleConditionOutput() AlarmruleConditionOutput {
	return i.ToAlarmruleConditionOutputWithContext(context.Background())
}

func (i AlarmruleConditionArgs) ToAlarmruleConditionOutputWithContext(ctx context.Context) AlarmruleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleConditionOutput)
}

func (i AlarmruleConditionArgs) ToAlarmruleConditionPtrOutput() AlarmruleConditionPtrOutput {
	return i.ToAlarmruleConditionPtrOutputWithContext(context.Background())
}

func (i AlarmruleConditionArgs) ToAlarmruleConditionPtrOutputWithContext(ctx context.Context) AlarmruleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleConditionOutput).ToAlarmruleConditionPtrOutputWithContext(ctx)
}

// AlarmruleConditionPtrInput is an input type that accepts AlarmruleConditionArgs, AlarmruleConditionPtr and AlarmruleConditionPtrOutput values.
// You can construct a concrete instance of `AlarmruleConditionPtrInput` via:
//
//	        AlarmruleConditionArgs{...}
//
//	or:
//
//	        nil
type AlarmruleConditionPtrInput interface {
	pulumi.Input

	ToAlarmruleConditionPtrOutput() AlarmruleConditionPtrOutput
	ToAlarmruleConditionPtrOutputWithContext(context.Context) AlarmruleConditionPtrOutput
}

type alarmruleConditionPtrType AlarmruleConditionArgs

func AlarmruleConditionPtr(v *AlarmruleConditionArgs) AlarmruleConditionPtrInput {
	return (*alarmruleConditionPtrType)(v)
}

func (*alarmruleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmruleCondition)(nil)).Elem()
}

func (i *alarmruleConditionPtrType) ToAlarmruleConditionPtrOutput() AlarmruleConditionPtrOutput {
	return i.ToAlarmruleConditionPtrOutputWithContext(context.Background())
}

func (i *alarmruleConditionPtrType) ToAlarmruleConditionPtrOutputWithContext(ctx context.Context) AlarmruleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleConditionPtrOutput)
}

type AlarmruleConditionOutput struct{ *pulumi.OutputState }

func (AlarmruleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleCondition)(nil)).Elem()
}

func (o AlarmruleConditionOutput) ToAlarmruleConditionOutput() AlarmruleConditionOutput {
	return o
}

func (o AlarmruleConditionOutput) ToAlarmruleConditionOutputWithContext(ctx context.Context) AlarmruleConditionOutput {
	return o
}

func (o AlarmruleConditionOutput) ToAlarmruleConditionPtrOutput() AlarmruleConditionPtrOutput {
	return o.ToAlarmruleConditionPtrOutputWithContext(context.Background())
}

func (o AlarmruleConditionOutput) ToAlarmruleConditionPtrOutputWithContext(ctx context.Context) AlarmruleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmruleCondition) *AlarmruleCondition {
		return &v
	}).(AlarmruleConditionPtrOutput)
}

func (o AlarmruleConditionOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleCondition) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

func (o AlarmruleConditionOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmruleCondition) int { return v.Count }).(pulumi.IntOutput)
}

func (o AlarmruleConditionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleCondition) string { return v.Filter }).(pulumi.StringOutput)
}

func (o AlarmruleConditionOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmruleCondition) int { return v.Period }).(pulumi.IntOutput)
}

func (o AlarmruleConditionOutput) SuppressDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmruleCondition) *int { return v.SuppressDuration }).(pulumi.IntPtrOutput)
}

func (o AlarmruleConditionOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmruleCondition) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

func (o AlarmruleConditionOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmruleCondition) int { return v.Value }).(pulumi.IntOutput)
}

type AlarmruleConditionPtrOutput struct{ *pulumi.OutputState }

func (AlarmruleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmruleCondition)(nil)).Elem()
}

func (o AlarmruleConditionPtrOutput) ToAlarmruleConditionPtrOutput() AlarmruleConditionPtrOutput {
	return o
}

func (o AlarmruleConditionPtrOutput) ToAlarmruleConditionPtrOutputWithContext(ctx context.Context) AlarmruleConditionPtrOutput {
	return o
}

func (o AlarmruleConditionPtrOutput) Elem() AlarmruleConditionOutput {
	return o.ApplyT(func(v *AlarmruleCondition) AlarmruleCondition {
		if v != nil {
			return *v
		}
		var ret AlarmruleCondition
		return ret
	}).(AlarmruleConditionOutput)
}

func (o AlarmruleConditionPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

func (o AlarmruleConditionPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

func (o AlarmruleConditionPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

func (o AlarmruleConditionPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return &v.Period
	}).(pulumi.IntPtrOutput)
}

func (o AlarmruleConditionPtrOutput) SuppressDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return v.SuppressDuration
	}).(pulumi.IntPtrOutput)
}

func (o AlarmruleConditionPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

func (o AlarmruleConditionPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmruleCondition) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type AlarmruleInsufficientdataAction struct {
	NotificationLists []string `pulumi:"notificationLists"`
	Type              string   `pulumi:"type"`
}

// AlarmruleInsufficientdataActionInput is an input type that accepts AlarmruleInsufficientdataActionArgs and AlarmruleInsufficientdataActionOutput values.
// You can construct a concrete instance of `AlarmruleInsufficientdataActionInput` via:
//
//	AlarmruleInsufficientdataActionArgs{...}
type AlarmruleInsufficientdataActionInput interface {
	pulumi.Input

	ToAlarmruleInsufficientdataActionOutput() AlarmruleInsufficientdataActionOutput
	ToAlarmruleInsufficientdataActionOutputWithContext(context.Context) AlarmruleInsufficientdataActionOutput
}

type AlarmruleInsufficientdataActionArgs struct {
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (AlarmruleInsufficientdataActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (i AlarmruleInsufficientdataActionArgs) ToAlarmruleInsufficientdataActionOutput() AlarmruleInsufficientdataActionOutput {
	return i.ToAlarmruleInsufficientdataActionOutputWithContext(context.Background())
}

func (i AlarmruleInsufficientdataActionArgs) ToAlarmruleInsufficientdataActionOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleInsufficientdataActionOutput)
}

// AlarmruleInsufficientdataActionArrayInput is an input type that accepts AlarmruleInsufficientdataActionArray and AlarmruleInsufficientdataActionArrayOutput values.
// You can construct a concrete instance of `AlarmruleInsufficientdataActionArrayInput` via:
//
//	AlarmruleInsufficientdataActionArray{ AlarmruleInsufficientdataActionArgs{...} }
type AlarmruleInsufficientdataActionArrayInput interface {
	pulumi.Input

	ToAlarmruleInsufficientdataActionArrayOutput() AlarmruleInsufficientdataActionArrayOutput
	ToAlarmruleInsufficientdataActionArrayOutputWithContext(context.Context) AlarmruleInsufficientdataActionArrayOutput
}

type AlarmruleInsufficientdataActionArray []AlarmruleInsufficientdataActionInput

func (AlarmruleInsufficientdataActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (i AlarmruleInsufficientdataActionArray) ToAlarmruleInsufficientdataActionArrayOutput() AlarmruleInsufficientdataActionArrayOutput {
	return i.ToAlarmruleInsufficientdataActionArrayOutputWithContext(context.Background())
}

func (i AlarmruleInsufficientdataActionArray) ToAlarmruleInsufficientdataActionArrayOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleInsufficientdataActionArrayOutput)
}

type AlarmruleInsufficientdataActionOutput struct{ *pulumi.OutputState }

func (AlarmruleInsufficientdataActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (o AlarmruleInsufficientdataActionOutput) ToAlarmruleInsufficientdataActionOutput() AlarmruleInsufficientdataActionOutput {
	return o
}

func (o AlarmruleInsufficientdataActionOutput) ToAlarmruleInsufficientdataActionOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionOutput {
	return o
}

func (o AlarmruleInsufficientdataActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmruleInsufficientdataAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

func (o AlarmruleInsufficientdataActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleInsufficientdataAction) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmruleInsufficientdataActionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleInsufficientdataActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (o AlarmruleInsufficientdataActionArrayOutput) ToAlarmruleInsufficientdataActionArrayOutput() AlarmruleInsufficientdataActionArrayOutput {
	return o
}

func (o AlarmruleInsufficientdataActionArrayOutput) ToAlarmruleInsufficientdataActionArrayOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionArrayOutput {
	return o
}

func (o AlarmruleInsufficientdataActionArrayOutput) Index(i pulumi.IntInput) AlarmruleInsufficientdataActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleInsufficientdataAction {
		return vs[0].([]AlarmruleInsufficientdataAction)[vs[1].(int)]
	}).(AlarmruleInsufficientdataActionOutput)
}

type AlarmruleMetric struct {
	Dimensions []AlarmruleMetricDimension `pulumi:"dimensions"`
	MetricName string                     `pulumi:"metricName"`
	Namespace  string                     `pulumi:"namespace"`
}

// AlarmruleMetricInput is an input type that accepts AlarmruleMetricArgs and AlarmruleMetricOutput values.
// You can construct a concrete instance of `AlarmruleMetricInput` via:
//
//	AlarmruleMetricArgs{...}
type AlarmruleMetricInput interface {
	pulumi.Input

	ToAlarmruleMetricOutput() AlarmruleMetricOutput
	ToAlarmruleMetricOutputWithContext(context.Context) AlarmruleMetricOutput
}

type AlarmruleMetricArgs struct {
	Dimensions AlarmruleMetricDimensionArrayInput `pulumi:"dimensions"`
	MetricName pulumi.StringInput                 `pulumi:"metricName"`
	Namespace  pulumi.StringInput                 `pulumi:"namespace"`
}

func (AlarmruleMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetric)(nil)).Elem()
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricOutput() AlarmruleMetricOutput {
	return i.ToAlarmruleMetricOutputWithContext(context.Background())
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricOutputWithContext(ctx context.Context) AlarmruleMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricOutput)
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return i.ToAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricOutput).ToAlarmruleMetricPtrOutputWithContext(ctx)
}

// AlarmruleMetricPtrInput is an input type that accepts AlarmruleMetricArgs, AlarmruleMetricPtr and AlarmruleMetricPtrOutput values.
// You can construct a concrete instance of `AlarmruleMetricPtrInput` via:
//
//	        AlarmruleMetricArgs{...}
//
//	or:
//
//	        nil
type AlarmruleMetricPtrInput interface {
	pulumi.Input

	ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput
	ToAlarmruleMetricPtrOutputWithContext(context.Context) AlarmruleMetricPtrOutput
}

type alarmruleMetricPtrType AlarmruleMetricArgs

func AlarmruleMetricPtr(v *AlarmruleMetricArgs) AlarmruleMetricPtrInput {
	return (*alarmruleMetricPtrType)(v)
}

func (*alarmruleMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmruleMetric)(nil)).Elem()
}

func (i *alarmruleMetricPtrType) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return i.ToAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (i *alarmruleMetricPtrType) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricPtrOutput)
}

type AlarmruleMetricOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetric)(nil)).Elem()
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricOutput() AlarmruleMetricOutput {
	return o
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricOutputWithContext(ctx context.Context) AlarmruleMetricOutput {
	return o
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return o.ToAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmruleMetric) *AlarmruleMetric {
		return &v
	}).(AlarmruleMetricPtrOutput)
}

func (o AlarmruleMetricOutput) Dimensions() AlarmruleMetricDimensionArrayOutput {
	return o.ApplyT(func(v AlarmruleMetric) []AlarmruleMetricDimension { return v.Dimensions }).(AlarmruleMetricDimensionArrayOutput)
}

func (o AlarmruleMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o AlarmruleMetricOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleMetric) string { return v.Namespace }).(pulumi.StringOutput)
}

type AlarmruleMetricPtrOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmruleMetric)(nil)).Elem()
}

func (o AlarmruleMetricPtrOutput) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return o
}

func (o AlarmruleMetricPtrOutput) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return o
}

func (o AlarmruleMetricPtrOutput) Elem() AlarmruleMetricOutput {
	return o.ApplyT(func(v *AlarmruleMetric) AlarmruleMetric {
		if v != nil {
			return *v
		}
		var ret AlarmruleMetric
		return ret
	}).(AlarmruleMetricOutput)
}

func (o AlarmruleMetricPtrOutput) Dimensions() AlarmruleMetricDimensionArrayOutput {
	return o.ApplyT(func(v *AlarmruleMetric) []AlarmruleMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(AlarmruleMetricDimensionArrayOutput)
}

func (o AlarmruleMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

func (o AlarmruleMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleMetric) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AlarmruleMetricDimension struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// AlarmruleMetricDimensionInput is an input type that accepts AlarmruleMetricDimensionArgs and AlarmruleMetricDimensionOutput values.
// You can construct a concrete instance of `AlarmruleMetricDimensionInput` via:
//
//	AlarmruleMetricDimensionArgs{...}
type AlarmruleMetricDimensionInput interface {
	pulumi.Input

	ToAlarmruleMetricDimensionOutput() AlarmruleMetricDimensionOutput
	ToAlarmruleMetricDimensionOutputWithContext(context.Context) AlarmruleMetricDimensionOutput
}

type AlarmruleMetricDimensionArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlarmruleMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetricDimension)(nil)).Elem()
}

func (i AlarmruleMetricDimensionArgs) ToAlarmruleMetricDimensionOutput() AlarmruleMetricDimensionOutput {
	return i.ToAlarmruleMetricDimensionOutputWithContext(context.Background())
}

func (i AlarmruleMetricDimensionArgs) ToAlarmruleMetricDimensionOutputWithContext(ctx context.Context) AlarmruleMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricDimensionOutput)
}

// AlarmruleMetricDimensionArrayInput is an input type that accepts AlarmruleMetricDimensionArray and AlarmruleMetricDimensionArrayOutput values.
// You can construct a concrete instance of `AlarmruleMetricDimensionArrayInput` via:
//
//	AlarmruleMetricDimensionArray{ AlarmruleMetricDimensionArgs{...} }
type AlarmruleMetricDimensionArrayInput interface {
	pulumi.Input

	ToAlarmruleMetricDimensionArrayOutput() AlarmruleMetricDimensionArrayOutput
	ToAlarmruleMetricDimensionArrayOutputWithContext(context.Context) AlarmruleMetricDimensionArrayOutput
}

type AlarmruleMetricDimensionArray []AlarmruleMetricDimensionInput

func (AlarmruleMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleMetricDimension)(nil)).Elem()
}

func (i AlarmruleMetricDimensionArray) ToAlarmruleMetricDimensionArrayOutput() AlarmruleMetricDimensionArrayOutput {
	return i.ToAlarmruleMetricDimensionArrayOutputWithContext(context.Background())
}

func (i AlarmruleMetricDimensionArray) ToAlarmruleMetricDimensionArrayOutputWithContext(ctx context.Context) AlarmruleMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricDimensionArrayOutput)
}

type AlarmruleMetricDimensionOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetricDimension)(nil)).Elem()
}

func (o AlarmruleMetricDimensionOutput) ToAlarmruleMetricDimensionOutput() AlarmruleMetricDimensionOutput {
	return o
}

func (o AlarmruleMetricDimensionOutput) ToAlarmruleMetricDimensionOutputWithContext(ctx context.Context) AlarmruleMetricDimensionOutput {
	return o
}

func (o AlarmruleMetricDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleMetricDimension) string { return v.Name }).(pulumi.StringOutput)
}

func (o AlarmruleMetricDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleMetricDimension) string { return v.Value }).(pulumi.StringOutput)
}

type AlarmruleMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleMetricDimension)(nil)).Elem()
}

func (o AlarmruleMetricDimensionArrayOutput) ToAlarmruleMetricDimensionArrayOutput() AlarmruleMetricDimensionArrayOutput {
	return o
}

func (o AlarmruleMetricDimensionArrayOutput) ToAlarmruleMetricDimensionArrayOutputWithContext(ctx context.Context) AlarmruleMetricDimensionArrayOutput {
	return o
}

func (o AlarmruleMetricDimensionArrayOutput) Index(i pulumi.IntInput) AlarmruleMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleMetricDimension {
		return vs[0].([]AlarmruleMetricDimension)[vs[1].(int)]
	}).(AlarmruleMetricDimensionOutput)
}

type AlarmruleOkAction struct {
	NotificationLists []string `pulumi:"notificationLists"`
	Type              string   `pulumi:"type"`
}

// AlarmruleOkActionInput is an input type that accepts AlarmruleOkActionArgs and AlarmruleOkActionOutput values.
// You can construct a concrete instance of `AlarmruleOkActionInput` via:
//
//	AlarmruleOkActionArgs{...}
type AlarmruleOkActionInput interface {
	pulumi.Input

	ToAlarmruleOkActionOutput() AlarmruleOkActionOutput
	ToAlarmruleOkActionOutputWithContext(context.Context) AlarmruleOkActionOutput
}

type AlarmruleOkActionArgs struct {
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	Type              pulumi.StringInput      `pulumi:"type"`
}

func (AlarmruleOkActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleOkAction)(nil)).Elem()
}

func (i AlarmruleOkActionArgs) ToAlarmruleOkActionOutput() AlarmruleOkActionOutput {
	return i.ToAlarmruleOkActionOutputWithContext(context.Background())
}

func (i AlarmruleOkActionArgs) ToAlarmruleOkActionOutputWithContext(ctx context.Context) AlarmruleOkActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleOkActionOutput)
}

// AlarmruleOkActionArrayInput is an input type that accepts AlarmruleOkActionArray and AlarmruleOkActionArrayOutput values.
// You can construct a concrete instance of `AlarmruleOkActionArrayInput` via:
//
//	AlarmruleOkActionArray{ AlarmruleOkActionArgs{...} }
type AlarmruleOkActionArrayInput interface {
	pulumi.Input

	ToAlarmruleOkActionArrayOutput() AlarmruleOkActionArrayOutput
	ToAlarmruleOkActionArrayOutputWithContext(context.Context) AlarmruleOkActionArrayOutput
}

type AlarmruleOkActionArray []AlarmruleOkActionInput

func (AlarmruleOkActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleOkAction)(nil)).Elem()
}

func (i AlarmruleOkActionArray) ToAlarmruleOkActionArrayOutput() AlarmruleOkActionArrayOutput {
	return i.ToAlarmruleOkActionArrayOutputWithContext(context.Background())
}

func (i AlarmruleOkActionArray) ToAlarmruleOkActionArrayOutputWithContext(ctx context.Context) AlarmruleOkActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleOkActionArrayOutput)
}

type AlarmruleOkActionOutput struct{ *pulumi.OutputState }

func (AlarmruleOkActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleOkAction)(nil)).Elem()
}

func (o AlarmruleOkActionOutput) ToAlarmruleOkActionOutput() AlarmruleOkActionOutput {
	return o
}

func (o AlarmruleOkActionOutput) ToAlarmruleOkActionOutputWithContext(ctx context.Context) AlarmruleOkActionOutput {
	return o
}

func (o AlarmruleOkActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmruleOkAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

func (o AlarmruleOkActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleOkAction) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmruleOkActionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleOkActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleOkAction)(nil)).Elem()
}

func (o AlarmruleOkActionArrayOutput) ToAlarmruleOkActionArrayOutput() AlarmruleOkActionArrayOutput {
	return o
}

func (o AlarmruleOkActionArrayOutput) ToAlarmruleOkActionArrayOutputWithContext(ctx context.Context) AlarmruleOkActionArrayOutput {
	return o
}

func (o AlarmruleOkActionArrayOutput) Index(i pulumi.IntInput) AlarmruleOkActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleOkAction {
		return vs[0].([]AlarmruleOkAction)[vs[1].(int)]
	}).(AlarmruleOkActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleAlarmActionInput)(nil)).Elem(), AlarmruleAlarmActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleAlarmActionArrayInput)(nil)).Elem(), AlarmruleAlarmActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleConditionInput)(nil)).Elem(), AlarmruleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleConditionPtrInput)(nil)).Elem(), AlarmruleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleInsufficientdataActionInput)(nil)).Elem(), AlarmruleInsufficientdataActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleInsufficientdataActionArrayInput)(nil)).Elem(), AlarmruleInsufficientdataActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricInput)(nil)).Elem(), AlarmruleMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricPtrInput)(nil)).Elem(), AlarmruleMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricDimensionInput)(nil)).Elem(), AlarmruleMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricDimensionArrayInput)(nil)).Elem(), AlarmruleMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleOkActionInput)(nil)).Elem(), AlarmruleOkActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleOkActionArrayInput)(nil)).Elem(), AlarmruleOkActionArray{})
	pulumi.RegisterOutputType(AlarmruleAlarmActionOutput{})
	pulumi.RegisterOutputType(AlarmruleAlarmActionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleConditionOutput{})
	pulumi.RegisterOutputType(AlarmruleConditionPtrOutput{})
	pulumi.RegisterOutputType(AlarmruleInsufficientdataActionOutput{})
	pulumi.RegisterOutputType(AlarmruleInsufficientdataActionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricPtrOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricDimensionOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleOkActionOutput{})
	pulumi.RegisterOutputType(AlarmruleOkActionArrayOutput{})
}
