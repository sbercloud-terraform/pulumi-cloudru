// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a network ACL resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const subnet = sbercloud.Vpc.getSubnet({
 *     name: "subnet-default",
 * });
 * const rule1 = new sbercloud.networkacl.AclRule("rule_1", {
 *     name: "my-rule-1",
 *     description: "drop TELNET traffic",
 *     action: "deny",
 *     protocol: "tcp",
 *     destinationPort: "23",
 *     enabled: true,
 * });
 * const rule2 = new sbercloud.networkacl.AclRule("rule_2", {
 *     name: "my-rule-2",
 *     description: "drop NTP traffic",
 *     action: "deny",
 *     protocol: "udp",
 *     destinationPort: "123",
 *     enabled: false,
 * });
 * const fwAcl = new sbercloud.networkacl.Acl("fw_acl", {
 *     name: "my-fw-acl",
 *     subnets: [subnet.then(subnet => subnet.id)],
 *     inboundRules: [
 *         rule1.id,
 *         rule2.id,
 *     ],
 * });
 * ```
 */
export class Acl extends pulumi.CustomResource {
    /**
     * Get an existing Acl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AclState, opts?: pulumi.CustomResourceOptions): Acl {
        return new Acl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:NetworkAcl/acl:Acl';

    /**
     * Returns true if the given object is an instance of Acl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Acl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Acl.__pulumiType;
    }

    /**
     * Specifies the supplementary information about the network ACL. This parameter can
     * contain a maximum of 255 characters and cannot contain angle brackets (< or >).
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of the ingress firewall policy for the network ACL.
     */
    declare public /*out*/ readonly inboundPolicyId: pulumi.Output<string>;
    /**
     * A list of the IDs of ingress rules associated with the network ACL.
     */
    declare public readonly inboundRules: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the network ACL name. This parameter can contain a maximum of 64 characters,
     * which may consist of letters, digits, underscores (_), and hyphens (-).
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The ID of the egress firewall policy for the network ACL.
     */
    declare public /*out*/ readonly outboundPolicyId: pulumi.Output<string>;
    /**
     * A list of the IDs of egress rules associated with the network ACL.
     */
    declare public readonly outboundRules: pulumi.Output<string[] | undefined>;
    /**
     * A list of the port IDs of the subnet gateway.
     */
    declare public /*out*/ readonly ports: pulumi.Output<string[]>;
    /**
     * The region in which to create the network acl resource. If omitted, the
     * provider-level region will be used. Changing this creates a new network acl resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The status of the network ACL.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A list of the IDs of networks associated with the network ACL.
     */
    declare public readonly subnets: pulumi.Output<string[] | undefined>;

    /**
     * Create a Acl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AclArgs | AclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AclState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["inboundPolicyId"] = state?.inboundPolicyId;
            resourceInputs["inboundRules"] = state?.inboundRules;
            resourceInputs["name"] = state?.name;
            resourceInputs["outboundPolicyId"] = state?.outboundPolicyId;
            resourceInputs["outboundRules"] = state?.outboundRules;
            resourceInputs["ports"] = state?.ports;
            resourceInputs["region"] = state?.region;
            resourceInputs["status"] = state?.status;
            resourceInputs["subnets"] = state?.subnets;
        } else {
            const args = argsOrState as AclArgs | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["inboundRules"] = args?.inboundRules;
            resourceInputs["name"] = args?.name;
            resourceInputs["outboundRules"] = args?.outboundRules;
            resourceInputs["region"] = args?.region;
            resourceInputs["subnets"] = args?.subnets;
            resourceInputs["inboundPolicyId"] = undefined /*out*/;
            resourceInputs["outboundPolicyId"] = undefined /*out*/;
            resourceInputs["ports"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Acl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Acl resources.
 */
export interface AclState {
    /**
     * Specifies the supplementary information about the network ACL. This parameter can
     * contain a maximum of 255 characters and cannot contain angle brackets (< or >).
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the ingress firewall policy for the network ACL.
     */
    inboundPolicyId?: pulumi.Input<string>;
    /**
     * A list of the IDs of ingress rules associated with the network ACL.
     */
    inboundRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the network ACL name. This parameter can contain a maximum of 64 characters,
     * which may consist of letters, digits, underscores (_), and hyphens (-).
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the egress firewall policy for the network ACL.
     */
    outboundPolicyId?: pulumi.Input<string>;
    /**
     * A list of the IDs of egress rules associated with the network ACL.
     */
    outboundRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of the port IDs of the subnet gateway.
     */
    ports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which to create the network acl resource. If omitted, the
     * provider-level region will be used. Changing this creates a new network acl resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The status of the network ACL.
     */
    status?: pulumi.Input<string>;
    /**
     * A list of the IDs of networks associated with the network ACL.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Acl resource.
 */
export interface AclArgs {
    /**
     * Specifies the supplementary information about the network ACL. This parameter can
     * contain a maximum of 255 characters and cannot contain angle brackets (< or >).
     */
    description?: pulumi.Input<string>;
    /**
     * A list of the IDs of ingress rules associated with the network ACL.
     */
    inboundRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the network ACL name. This parameter can contain a maximum of 64 characters,
     * which may consist of letters, digits, underscores (_), and hyphens (-).
     */
    name?: pulumi.Input<string>;
    /**
     * A list of the IDs of egress rules associated with the network ACL.
     */
    outboundRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which to create the network acl resource. If omitted, the
     * provider-level region will be used. Changing this creates a new network acl resource.
     */
    region?: pulumi.Input<string>;
    /**
     * A list of the IDs of networks associated with the network ACL.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
}
