// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigSignatureAssociate struct {
	pulumi.CustomResourceState

	// The ID of the dedicated instance to which the APIs and the signature belong.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The publish IDs corresponding to the APIs bound by the signature.
	PublishIds pulumi.StringArrayOutput `pulumi:"publishIds"`
	// The region where the signature and the APIs are located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The signature ID for APIs binding.
	SignatureId pulumi.StringOutput `pulumi:"signatureId"`
}

// NewApigSignatureAssociate registers a new resource with the given unique name, arguments, and options.
func NewApigSignatureAssociate(ctx *pulumi.Context,
	name string, args *ApigSignatureAssociateArgs, opts ...pulumi.ResourceOption) (*ApigSignatureAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PublishIds == nil {
		return nil, errors.New("invalid value for required argument 'PublishIds'")
	}
	if args.SignatureId == nil {
		return nil, errors.New("invalid value for required argument 'SignatureId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigSignatureAssociate
	err := ctx.RegisterResource("cloudru:index/apigSignatureAssociate:ApigSignatureAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigSignatureAssociate gets an existing ApigSignatureAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigSignatureAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigSignatureAssociateState, opts ...pulumi.ResourceOption) (*ApigSignatureAssociate, error) {
	var resource ApigSignatureAssociate
	err := ctx.ReadResource("cloudru:index/apigSignatureAssociate:ApigSignatureAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigSignatureAssociate resources.
type apigSignatureAssociateState struct {
	// The ID of the dedicated instance to which the APIs and the signature belong.
	InstanceId *string `pulumi:"instanceId"`
	// The publish IDs corresponding to the APIs bound by the signature.
	PublishIds []string `pulumi:"publishIds"`
	// The region where the signature and the APIs are located.
	Region *string `pulumi:"region"`
	// The signature ID for APIs binding.
	SignatureId *string `pulumi:"signatureId"`
}

type ApigSignatureAssociateState struct {
	// The ID of the dedicated instance to which the APIs and the signature belong.
	InstanceId pulumi.StringPtrInput
	// The publish IDs corresponding to the APIs bound by the signature.
	PublishIds pulumi.StringArrayInput
	// The region where the signature and the APIs are located.
	Region pulumi.StringPtrInput
	// The signature ID for APIs binding.
	SignatureId pulumi.StringPtrInput
}

func (ApigSignatureAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigSignatureAssociateState)(nil)).Elem()
}

type apigSignatureAssociateArgs struct {
	// The ID of the dedicated instance to which the APIs and the signature belong.
	InstanceId string `pulumi:"instanceId"`
	// The publish IDs corresponding to the APIs bound by the signature.
	PublishIds []string `pulumi:"publishIds"`
	// The region where the signature and the APIs are located.
	Region *string `pulumi:"region"`
	// The signature ID for APIs binding.
	SignatureId string `pulumi:"signatureId"`
}

// The set of arguments for constructing a ApigSignatureAssociate resource.
type ApigSignatureAssociateArgs struct {
	// The ID of the dedicated instance to which the APIs and the signature belong.
	InstanceId pulumi.StringInput
	// The publish IDs corresponding to the APIs bound by the signature.
	PublishIds pulumi.StringArrayInput
	// The region where the signature and the APIs are located.
	Region pulumi.StringPtrInput
	// The signature ID for APIs binding.
	SignatureId pulumi.StringInput
}

func (ApigSignatureAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigSignatureAssociateArgs)(nil)).Elem()
}

type ApigSignatureAssociateInput interface {
	pulumi.Input

	ToApigSignatureAssociateOutput() ApigSignatureAssociateOutput
	ToApigSignatureAssociateOutputWithContext(ctx context.Context) ApigSignatureAssociateOutput
}

func (*ApigSignatureAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigSignatureAssociate)(nil)).Elem()
}

func (i *ApigSignatureAssociate) ToApigSignatureAssociateOutput() ApigSignatureAssociateOutput {
	return i.ToApigSignatureAssociateOutputWithContext(context.Background())
}

func (i *ApigSignatureAssociate) ToApigSignatureAssociateOutputWithContext(ctx context.Context) ApigSignatureAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigSignatureAssociateOutput)
}

// ApigSignatureAssociateArrayInput is an input type that accepts ApigSignatureAssociateArray and ApigSignatureAssociateArrayOutput values.
// You can construct a concrete instance of `ApigSignatureAssociateArrayInput` via:
//
//	ApigSignatureAssociateArray{ ApigSignatureAssociateArgs{...} }
type ApigSignatureAssociateArrayInput interface {
	pulumi.Input

	ToApigSignatureAssociateArrayOutput() ApigSignatureAssociateArrayOutput
	ToApigSignatureAssociateArrayOutputWithContext(context.Context) ApigSignatureAssociateArrayOutput
}

type ApigSignatureAssociateArray []ApigSignatureAssociateInput

func (ApigSignatureAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigSignatureAssociate)(nil)).Elem()
}

func (i ApigSignatureAssociateArray) ToApigSignatureAssociateArrayOutput() ApigSignatureAssociateArrayOutput {
	return i.ToApigSignatureAssociateArrayOutputWithContext(context.Background())
}

func (i ApigSignatureAssociateArray) ToApigSignatureAssociateArrayOutputWithContext(ctx context.Context) ApigSignatureAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigSignatureAssociateArrayOutput)
}

// ApigSignatureAssociateMapInput is an input type that accepts ApigSignatureAssociateMap and ApigSignatureAssociateMapOutput values.
// You can construct a concrete instance of `ApigSignatureAssociateMapInput` via:
//
//	ApigSignatureAssociateMap{ "key": ApigSignatureAssociateArgs{...} }
type ApigSignatureAssociateMapInput interface {
	pulumi.Input

	ToApigSignatureAssociateMapOutput() ApigSignatureAssociateMapOutput
	ToApigSignatureAssociateMapOutputWithContext(context.Context) ApigSignatureAssociateMapOutput
}

type ApigSignatureAssociateMap map[string]ApigSignatureAssociateInput

func (ApigSignatureAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigSignatureAssociate)(nil)).Elem()
}

func (i ApigSignatureAssociateMap) ToApigSignatureAssociateMapOutput() ApigSignatureAssociateMapOutput {
	return i.ToApigSignatureAssociateMapOutputWithContext(context.Background())
}

func (i ApigSignatureAssociateMap) ToApigSignatureAssociateMapOutputWithContext(ctx context.Context) ApigSignatureAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigSignatureAssociateMapOutput)
}

type ApigSignatureAssociateOutput struct{ *pulumi.OutputState }

func (ApigSignatureAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigSignatureAssociate)(nil)).Elem()
}

func (o ApigSignatureAssociateOutput) ToApigSignatureAssociateOutput() ApigSignatureAssociateOutput {
	return o
}

func (o ApigSignatureAssociateOutput) ToApigSignatureAssociateOutputWithContext(ctx context.Context) ApigSignatureAssociateOutput {
	return o
}

// The ID of the dedicated instance to which the APIs and the signature belong.
func (o ApigSignatureAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigSignatureAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The publish IDs corresponding to the APIs bound by the signature.
func (o ApigSignatureAssociateOutput) PublishIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigSignatureAssociate) pulumi.StringArrayOutput { return v.PublishIds }).(pulumi.StringArrayOutput)
}

// The region where the signature and the APIs are located.
func (o ApigSignatureAssociateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigSignatureAssociate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The signature ID for APIs binding.
func (o ApigSignatureAssociateOutput) SignatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigSignatureAssociate) pulumi.StringOutput { return v.SignatureId }).(pulumi.StringOutput)
}

type ApigSignatureAssociateArrayOutput struct{ *pulumi.OutputState }

func (ApigSignatureAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigSignatureAssociate)(nil)).Elem()
}

func (o ApigSignatureAssociateArrayOutput) ToApigSignatureAssociateArrayOutput() ApigSignatureAssociateArrayOutput {
	return o
}

func (o ApigSignatureAssociateArrayOutput) ToApigSignatureAssociateArrayOutputWithContext(ctx context.Context) ApigSignatureAssociateArrayOutput {
	return o
}

func (o ApigSignatureAssociateArrayOutput) Index(i pulumi.IntInput) ApigSignatureAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigSignatureAssociate {
		return vs[0].([]*ApigSignatureAssociate)[vs[1].(int)]
	}).(ApigSignatureAssociateOutput)
}

type ApigSignatureAssociateMapOutput struct{ *pulumi.OutputState }

func (ApigSignatureAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigSignatureAssociate)(nil)).Elem()
}

func (o ApigSignatureAssociateMapOutput) ToApigSignatureAssociateMapOutput() ApigSignatureAssociateMapOutput {
	return o
}

func (o ApigSignatureAssociateMapOutput) ToApigSignatureAssociateMapOutputWithContext(ctx context.Context) ApigSignatureAssociateMapOutput {
	return o
}

func (o ApigSignatureAssociateMapOutput) MapIndex(k pulumi.StringInput) ApigSignatureAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigSignatureAssociate {
		return vs[0].(map[string]*ApigSignatureAssociate)[vs[1].(string)]
	}).(ApigSignatureAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigSignatureAssociateInput)(nil)).Elem(), &ApigSignatureAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigSignatureAssociateArrayInput)(nil)).Elem(), ApigSignatureAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigSignatureAssociateMapInput)(nil)).Elem(), ApigSignatureAssociateMap{})
	pulumi.RegisterOutputType(ApigSignatureAssociateOutput{})
	pulumi.RegisterOutputType(ApigSignatureAssociateArrayOutput{})
	pulumi.RegisterOutputType(ApigSignatureAssociateMapOutput{})
}
