// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetSubnets(ctx *pulumi.Context, args *GetSubnetsArgs, opts ...pulumi.InvokeOption) (*GetSubnetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubnetsResult
	err := ctx.Invoke("sbercloud:Vpc/getSubnets:getSubnets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnets.
type GetSubnetsArgs struct {
	AvailabilityZone *string           `pulumi:"availabilityZone"`
	Cidr             *string           `pulumi:"cidr"`
	GatewayIp        *string           `pulumi:"gatewayIp"`
	Id               *string           `pulumi:"id"`
	Name             *string           `pulumi:"name"`
	PrimaryDns       *string           `pulumi:"primaryDns"`
	Region           *string           `pulumi:"region"`
	SecondaryDns     *string           `pulumi:"secondaryDns"`
	Status           *string           `pulumi:"status"`
	Tags             map[string]string `pulumi:"tags"`
	VpcId            *string           `pulumi:"vpcId"`
}

// A collection of values returned by getSubnets.
type GetSubnetsResult struct {
	AvailabilityZone *string            `pulumi:"availabilityZone"`
	Cidr             *string            `pulumi:"cidr"`
	GatewayIp        *string            `pulumi:"gatewayIp"`
	Id               string             `pulumi:"id"`
	Name             *string            `pulumi:"name"`
	PrimaryDns       *string            `pulumi:"primaryDns"`
	Region           string             `pulumi:"region"`
	SecondaryDns     *string            `pulumi:"secondaryDns"`
	Status           *string            `pulumi:"status"`
	Subnets          []GetSubnetsSubnet `pulumi:"subnets"`
	Tags             map[string]string  `pulumi:"tags"`
	VpcId            *string            `pulumi:"vpcId"`
}

func GetSubnetsOutput(ctx *pulumi.Context, args GetSubnetsOutputArgs, opts ...pulumi.InvokeOption) GetSubnetsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSubnetsResultOutput, error) {
			args := v.(GetSubnetsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Vpc/getSubnets:getSubnets", args, GetSubnetsResultOutput{}, options).(GetSubnetsResultOutput), nil
		}).(GetSubnetsResultOutput)
}

// A collection of arguments for invoking getSubnets.
type GetSubnetsOutputArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	Cidr             pulumi.StringPtrInput `pulumi:"cidr"`
	GatewayIp        pulumi.StringPtrInput `pulumi:"gatewayIp"`
	Id               pulumi.StringPtrInput `pulumi:"id"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PrimaryDns       pulumi.StringPtrInput `pulumi:"primaryDns"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	SecondaryDns     pulumi.StringPtrInput `pulumi:"secondaryDns"`
	Status           pulumi.StringPtrInput `pulumi:"status"`
	Tags             pulumi.StringMapInput `pulumi:"tags"`
	VpcId            pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetSubnetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsArgs)(nil)).Elem()
}

// A collection of values returned by getSubnets.
type GetSubnetsResultOutput struct{ *pulumi.OutputState }

func (GetSubnetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsResult)(nil)).Elem()
}

func (o GetSubnetsResultOutput) ToGetSubnetsResultOutput() GetSubnetsResultOutput {
	return o
}

func (o GetSubnetsResultOutput) ToGetSubnetsResultOutputWithContext(ctx context.Context) GetSubnetsResultOutput {
	return o
}

func (o GetSubnetsResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) GatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.GatewayIp }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubnetsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) PrimaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.PrimaryDns }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetSubnetsResultOutput) SecondaryDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.SecondaryDns }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) Subnets() GetSubnetsSubnetArrayOutput {
	return o.ApplyT(func(v GetSubnetsResult) []GetSubnetsSubnet { return v.Subnets }).(GetSubnetsSubnetArrayOutput)
}

func (o GetSubnetsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubnetsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetSubnetsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubnetsResultOutput{})
}
