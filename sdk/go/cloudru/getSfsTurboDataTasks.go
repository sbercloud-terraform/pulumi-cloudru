// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetSfsTurboDataTasks(ctx *pulumi.Context, args *GetSfsTurboDataTasksArgs, opts ...pulumi.InvokeOption) (*GetSfsTurboDataTasksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSfsTurboDataTasksResult
	err := ctx.Invoke("cloudru:index/getSfsTurboDataTasks:getSfsTurboDataTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSfsTurboDataTasks.
type GetSfsTurboDataTasksArgs struct {
	Region  *string `pulumi:"region"`
	ShareId string  `pulumi:"shareId"`
	Status  *string `pulumi:"status"`
	Type    *string `pulumi:"type"`
}

// A collection of values returned by getSfsTurboDataTasks.
type GetSfsTurboDataTasksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string                     `pulumi:"id"`
	Region  string                     `pulumi:"region"`
	ShareId string                     `pulumi:"shareId"`
	Status  *string                    `pulumi:"status"`
	Tasks   []GetSfsTurboDataTasksTask `pulumi:"tasks"`
	Type    *string                    `pulumi:"type"`
}

func GetSfsTurboDataTasksOutput(ctx *pulumi.Context, args GetSfsTurboDataTasksOutputArgs, opts ...pulumi.InvokeOption) GetSfsTurboDataTasksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSfsTurboDataTasksResultOutput, error) {
			args := v.(GetSfsTurboDataTasksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:index/getSfsTurboDataTasks:getSfsTurboDataTasks", args, GetSfsTurboDataTasksResultOutput{}, options).(GetSfsTurboDataTasksResultOutput), nil
		}).(GetSfsTurboDataTasksResultOutput)
}

// A collection of arguments for invoking getSfsTurboDataTasks.
type GetSfsTurboDataTasksOutputArgs struct {
	Region  pulumi.StringPtrInput `pulumi:"region"`
	ShareId pulumi.StringInput    `pulumi:"shareId"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSfsTurboDataTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDataTasksArgs)(nil)).Elem()
}

// A collection of values returned by getSfsTurboDataTasks.
type GetSfsTurboDataTasksResultOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDataTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDataTasksResult)(nil)).Elem()
}

func (o GetSfsTurboDataTasksResultOutput) ToGetSfsTurboDataTasksResultOutput() GetSfsTurboDataTasksResultOutput {
	return o
}

func (o GetSfsTurboDataTasksResultOutput) ToGetSfsTurboDataTasksResultOutputWithContext(ctx context.Context) GetSfsTurboDataTasksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSfsTurboDataTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSfsTurboDataTasksResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetSfsTurboDataTasksResultOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksResult) string { return v.ShareId }).(pulumi.StringOutput)
}

func (o GetSfsTurboDataTasksResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetSfsTurboDataTasksResultOutput) Tasks() GetSfsTurboDataTasksTaskArrayOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksResult) []GetSfsTurboDataTasksTask { return v.Tasks }).(GetSfsTurboDataTasksTaskArrayOutput)
}

func (o GetSfsTurboDataTasksResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSfsTurboDataTasksResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSfsTurboDataTasksResultOutput{})
}
