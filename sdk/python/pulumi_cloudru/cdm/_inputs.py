# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ClusterInstanceArgs',
    'ClusterInstanceArgsDict',
]

MYPY = False

if not MYPY:
    class ClusterInstanceArgsDict(TypedDict):
        id: NotRequired[pulumi.Input[builtins.str]]
        """
        Instance ID.
        """
        manage_ip: NotRequired[pulumi.Input[builtins.str]]
        """
        Management IP address.
        """
        name: NotRequired[pulumi.Input[builtins.str]]
        """
        Specifies cluster name. Changing this parameter will create a new resource.
        """
        private_ip: NotRequired[pulumi.Input[builtins.str]]
        """
        Private IP.
        """
        public_ip: NotRequired[pulumi.Input[builtins.str]]
        """
        Public IP.
        """
        role: NotRequired[pulumi.Input[builtins.str]]
        """
        Instance role.
        """
        traffic_ip: NotRequired[pulumi.Input[builtins.str]]
        """
        Traffic IP.
        """
        type: NotRequired[pulumi.Input[builtins.str]]
        """
        Instance type.
        """
elif False:
    ClusterInstanceArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ClusterInstanceArgs:
    def __init__(__self__, *,
                 id: Optional[pulumi.Input[builtins.str]] = None,
                 manage_ip: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 private_ip: Optional[pulumi.Input[builtins.str]] = None,
                 public_ip: Optional[pulumi.Input[builtins.str]] = None,
                 role: Optional[pulumi.Input[builtins.str]] = None,
                 traffic_ip: Optional[pulumi.Input[builtins.str]] = None,
                 type: Optional[pulumi.Input[builtins.str]] = None):
        """
        :param pulumi.Input[builtins.str] id: Instance ID.
        :param pulumi.Input[builtins.str] manage_ip: Management IP address.
        :param pulumi.Input[builtins.str] name: Specifies cluster name. Changing this parameter will create a new resource.
        :param pulumi.Input[builtins.str] private_ip: Private IP.
        :param pulumi.Input[builtins.str] public_ip: Public IP.
        :param pulumi.Input[builtins.str] role: Instance role.
        :param pulumi.Input[builtins.str] traffic_ip: Traffic IP.
        :param pulumi.Input[builtins.str] type: Instance type.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if manage_ip is not None:
            pulumi.set(__self__, "manage_ip", manage_ip)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if private_ip is not None:
            pulumi.set(__self__, "private_ip", private_ip)
        if public_ip is not None:
            pulumi.set(__self__, "public_ip", public_ip)
        if role is not None:
            pulumi.set(__self__, "role", role)
        if traffic_ip is not None:
            pulumi.set(__self__, "traffic_ip", traffic_ip)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Instance ID.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter(name="manageIp")
    def manage_ip(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Management IP address.
        """
        return pulumi.get(self, "manage_ip")

    @manage_ip.setter
    def manage_ip(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "manage_ip", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Specifies cluster name. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="privateIp")
    def private_ip(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Private IP.
        """
        return pulumi.get(self, "private_ip")

    @private_ip.setter
    def private_ip(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "private_ip", value)

    @property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Public IP.
        """
        return pulumi.get(self, "public_ip")

    @public_ip.setter
    def public_ip(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "public_ip", value)

    @property
    @pulumi.getter
    def role(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Instance role.
        """
        return pulumi.get(self, "role")

    @role.setter
    def role(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "role", value)

    @property
    @pulumi.getter(name="trafficIp")
    def traffic_ip(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Traffic IP.
        """
        return pulumi.get(self, "traffic_ip")

    @traffic_ip.setter
    def traffic_ip(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "traffic_ip", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Instance type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "type", value)


