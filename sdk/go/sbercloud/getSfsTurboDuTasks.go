// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

func GetSfsTurboDuTasks(ctx *pulumi.Context, args *GetSfsTurboDuTasksArgs, opts ...pulumi.InvokeOption) (*GetSfsTurboDuTasksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSfsTurboDuTasksResult
	err := ctx.Invoke("sbercloud:index/getSfsTurboDuTasks:getSfsTurboDuTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSfsTurboDuTasks.
type GetSfsTurboDuTasksArgs struct {
	Region  *string `pulumi:"region"`
	ShareId string  `pulumi:"shareId"`
}

// A collection of values returned by getSfsTurboDuTasks.
type GetSfsTurboDuTasksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string                   `pulumi:"id"`
	Region  string                   `pulumi:"region"`
	ShareId string                   `pulumi:"shareId"`
	Tasks   []GetSfsTurboDuTasksTask `pulumi:"tasks"`
}

func GetSfsTurboDuTasksOutput(ctx *pulumi.Context, args GetSfsTurboDuTasksOutputArgs, opts ...pulumi.InvokeOption) GetSfsTurboDuTasksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSfsTurboDuTasksResultOutput, error) {
			args := v.(GetSfsTurboDuTasksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getSfsTurboDuTasks:getSfsTurboDuTasks", args, GetSfsTurboDuTasksResultOutput{}, options).(GetSfsTurboDuTasksResultOutput), nil
		}).(GetSfsTurboDuTasksResultOutput)
}

// A collection of arguments for invoking getSfsTurboDuTasks.
type GetSfsTurboDuTasksOutputArgs struct {
	Region  pulumi.StringPtrInput `pulumi:"region"`
	ShareId pulumi.StringInput    `pulumi:"shareId"`
}

func (GetSfsTurboDuTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksArgs)(nil)).Elem()
}

// A collection of values returned by getSfsTurboDuTasks.
type GetSfsTurboDuTasksResultOutput struct{ *pulumi.OutputState }

func (GetSfsTurboDuTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboDuTasksResult)(nil)).Elem()
}

func (o GetSfsTurboDuTasksResultOutput) ToGetSfsTurboDuTasksResultOutput() GetSfsTurboDuTasksResultOutput {
	return o
}

func (o GetSfsTurboDuTasksResultOutput) ToGetSfsTurboDuTasksResultOutputWithContext(ctx context.Context) GetSfsTurboDuTasksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSfsTurboDuTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSfsTurboDuTasksResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetSfsTurboDuTasksResultOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksResult) string { return v.ShareId }).(pulumi.StringOutput)
}

func (o GetSfsTurboDuTasksResultOutput) Tasks() GetSfsTurboDuTasksTaskArrayOutput {
	return o.ApplyT(func(v GetSfsTurboDuTasksResult) []GetSfsTurboDuTasksTask { return v.Tasks }).(GetSfsTurboDuTasksTaskArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSfsTurboDuTasksResultOutput{})
}
