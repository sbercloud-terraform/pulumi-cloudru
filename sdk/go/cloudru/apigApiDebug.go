// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigApiDebug struct {
	pulumi.CustomResourceState

	// The ID of the API to be debugged.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The request message body of the API.
	Body           pulumi.StringPtrOutput `pulumi:"body"`
	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// The request header parameters of the API, in JSON format.
	Header pulumi.StringPtrOutput `pulumi:"header"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The debug latency in milliseconds.
	Latency pulumi.IntOutput `pulumi:"latency"`
	// The request method of the API.
	Method pulumi.StringOutput `pulumi:"method"`
	// The debug mode.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// The request path of the API.
	Path pulumi.StringOutput `pulumi:"path"`
	// The request query parameters of the API, in JSON format.
	Query pulumi.StringPtrOutput `pulumi:"query"`
	// The region where the dedicated instance to which the API belongs is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The debug request message content.
	Request pulumi.StringOutput `pulumi:"request"`
	// The debug response message content.
	Response pulumi.StringOutput `pulumi:"response"`
	// The request protocol.
	Scheme pulumi.StringOutput `pulumi:"scheme"`
	// The runtime environment for debug request.
	Stage pulumi.StringPtrOutput `pulumi:"stage"`
}

// NewApigApiDebug registers a new resource with the given unique name, arguments, and options.
func NewApigApiDebug(ctx *pulumi.Context,
	name string, args *ApigApiDebugArgs, opts ...pulumi.ResourceOption) (*ApigApiDebug, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Method == nil {
		return nil, errors.New("invalid value for required argument 'Method'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	if args.Scheme == nil {
		return nil, errors.New("invalid value for required argument 'Scheme'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApiDebug
	err := ctx.RegisterResource("cloudru:index/apigApiDebug:ApigApiDebug", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApiDebug gets an existing ApigApiDebug resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApiDebug(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApiDebugState, opts ...pulumi.ResourceOption) (*ApigApiDebug, error) {
	var resource ApigApiDebug
	err := ctx.ReadResource("cloudru:index/apigApiDebug:ApigApiDebug", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApiDebug resources.
type apigApiDebugState struct {
	// The ID of the API to be debugged.
	ApiId *string `pulumi:"apiId"`
	// The request message body of the API.
	Body           *string `pulumi:"body"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The request header parameters of the API, in JSON format.
	Header *string `pulumi:"header"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The debug latency in milliseconds.
	Latency *int `pulumi:"latency"`
	// The request method of the API.
	Method *string `pulumi:"method"`
	// The debug mode.
	Mode *string `pulumi:"mode"`
	// The request path of the API.
	Path *string `pulumi:"path"`
	// The request query parameters of the API, in JSON format.
	Query *string `pulumi:"query"`
	// The region where the dedicated instance to which the API belongs is located.
	Region *string `pulumi:"region"`
	// The debug request message content.
	Request *string `pulumi:"request"`
	// The debug response message content.
	Response *string `pulumi:"response"`
	// The request protocol.
	Scheme *string `pulumi:"scheme"`
	// The runtime environment for debug request.
	Stage *string `pulumi:"stage"`
}

type ApigApiDebugState struct {
	// The ID of the API to be debugged.
	ApiId pulumi.StringPtrInput
	// The request message body of the API.
	Body           pulumi.StringPtrInput
	EnableForceNew pulumi.StringPtrInput
	// The request header parameters of the API, in JSON format.
	Header pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringPtrInput
	// The debug latency in milliseconds.
	Latency pulumi.IntPtrInput
	// The request method of the API.
	Method pulumi.StringPtrInput
	// The debug mode.
	Mode pulumi.StringPtrInput
	// The request path of the API.
	Path pulumi.StringPtrInput
	// The request query parameters of the API, in JSON format.
	Query pulumi.StringPtrInput
	// The region where the dedicated instance to which the API belongs is located.
	Region pulumi.StringPtrInput
	// The debug request message content.
	Request pulumi.StringPtrInput
	// The debug response message content.
	Response pulumi.StringPtrInput
	// The request protocol.
	Scheme pulumi.StringPtrInput
	// The runtime environment for debug request.
	Stage pulumi.StringPtrInput
}

func (ApigApiDebugState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiDebugState)(nil)).Elem()
}

type apigApiDebugArgs struct {
	// The ID of the API to be debugged.
	ApiId string `pulumi:"apiId"`
	// The request message body of the API.
	Body           *string `pulumi:"body"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The request header parameters of the API, in JSON format.
	Header *string `pulumi:"header"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId string `pulumi:"instanceId"`
	// The request method of the API.
	Method string `pulumi:"method"`
	// The debug mode.
	Mode string `pulumi:"mode"`
	// The request path of the API.
	Path string `pulumi:"path"`
	// The request query parameters of the API, in JSON format.
	Query *string `pulumi:"query"`
	// The region where the dedicated instance to which the API belongs is located.
	Region *string `pulumi:"region"`
	// The request protocol.
	Scheme string `pulumi:"scheme"`
	// The runtime environment for debug request.
	Stage *string `pulumi:"stage"`
}

// The set of arguments for constructing a ApigApiDebug resource.
type ApigApiDebugArgs struct {
	// The ID of the API to be debugged.
	ApiId pulumi.StringInput
	// The request message body of the API.
	Body           pulumi.StringPtrInput
	EnableForceNew pulumi.StringPtrInput
	// The request header parameters of the API, in JSON format.
	Header pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringInput
	// The request method of the API.
	Method pulumi.StringInput
	// The debug mode.
	Mode pulumi.StringInput
	// The request path of the API.
	Path pulumi.StringInput
	// The request query parameters of the API, in JSON format.
	Query pulumi.StringPtrInput
	// The region where the dedicated instance to which the API belongs is located.
	Region pulumi.StringPtrInput
	// The request protocol.
	Scheme pulumi.StringInput
	// The runtime environment for debug request.
	Stage pulumi.StringPtrInput
}

func (ApigApiDebugArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiDebugArgs)(nil)).Elem()
}

type ApigApiDebugInput interface {
	pulumi.Input

	ToApigApiDebugOutput() ApigApiDebugOutput
	ToApigApiDebugOutputWithContext(ctx context.Context) ApigApiDebugOutput
}

func (*ApigApiDebug) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiDebug)(nil)).Elem()
}

func (i *ApigApiDebug) ToApigApiDebugOutput() ApigApiDebugOutput {
	return i.ToApigApiDebugOutputWithContext(context.Background())
}

func (i *ApigApiDebug) ToApigApiDebugOutputWithContext(ctx context.Context) ApigApiDebugOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiDebugOutput)
}

// ApigApiDebugArrayInput is an input type that accepts ApigApiDebugArray and ApigApiDebugArrayOutput values.
// You can construct a concrete instance of `ApigApiDebugArrayInput` via:
//
//	ApigApiDebugArray{ ApigApiDebugArgs{...} }
type ApigApiDebugArrayInput interface {
	pulumi.Input

	ToApigApiDebugArrayOutput() ApigApiDebugArrayOutput
	ToApigApiDebugArrayOutputWithContext(context.Context) ApigApiDebugArrayOutput
}

type ApigApiDebugArray []ApigApiDebugInput

func (ApigApiDebugArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiDebug)(nil)).Elem()
}

func (i ApigApiDebugArray) ToApigApiDebugArrayOutput() ApigApiDebugArrayOutput {
	return i.ToApigApiDebugArrayOutputWithContext(context.Background())
}

func (i ApigApiDebugArray) ToApigApiDebugArrayOutputWithContext(ctx context.Context) ApigApiDebugArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiDebugArrayOutput)
}

// ApigApiDebugMapInput is an input type that accepts ApigApiDebugMap and ApigApiDebugMapOutput values.
// You can construct a concrete instance of `ApigApiDebugMapInput` via:
//
//	ApigApiDebugMap{ "key": ApigApiDebugArgs{...} }
type ApigApiDebugMapInput interface {
	pulumi.Input

	ToApigApiDebugMapOutput() ApigApiDebugMapOutput
	ToApigApiDebugMapOutputWithContext(context.Context) ApigApiDebugMapOutput
}

type ApigApiDebugMap map[string]ApigApiDebugInput

func (ApigApiDebugMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiDebug)(nil)).Elem()
}

func (i ApigApiDebugMap) ToApigApiDebugMapOutput() ApigApiDebugMapOutput {
	return i.ToApigApiDebugMapOutputWithContext(context.Background())
}

func (i ApigApiDebugMap) ToApigApiDebugMapOutputWithContext(ctx context.Context) ApigApiDebugMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiDebugMapOutput)
}

type ApigApiDebugOutput struct{ *pulumi.OutputState }

func (ApigApiDebugOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiDebug)(nil)).Elem()
}

func (o ApigApiDebugOutput) ToApigApiDebugOutput() ApigApiDebugOutput {
	return o
}

func (o ApigApiDebugOutput) ToApigApiDebugOutputWithContext(ctx context.Context) ApigApiDebugOutput {
	return o
}

// The ID of the API to be debugged.
func (o ApigApiDebugOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The request message body of the API.
func (o ApigApiDebugOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringPtrOutput { return v.Body }).(pulumi.StringPtrOutput)
}

func (o ApigApiDebugOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// The request header parameters of the API, in JSON format.
func (o ApigApiDebugOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringPtrOutput { return v.Header }).(pulumi.StringPtrOutput)
}

// The ID of the dedicated instance to which the API belongs.
func (o ApigApiDebugOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The debug latency in milliseconds.
func (o ApigApiDebugOutput) Latency() pulumi.IntOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.IntOutput { return v.Latency }).(pulumi.IntOutput)
}

// The request method of the API.
func (o ApigApiDebugOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

// The debug mode.
func (o ApigApiDebugOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// The request path of the API.
func (o ApigApiDebugOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

// The request query parameters of the API, in JSON format.
func (o ApigApiDebugOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringPtrOutput { return v.Query }).(pulumi.StringPtrOutput)
}

// The region where the dedicated instance to which the API belongs is located.
func (o ApigApiDebugOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The debug request message content.
func (o ApigApiDebugOutput) Request() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Request }).(pulumi.StringOutput)
}

// The debug response message content.
func (o ApigApiDebugOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Response }).(pulumi.StringOutput)
}

// The request protocol.
func (o ApigApiDebugOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringOutput { return v.Scheme }).(pulumi.StringOutput)
}

// The runtime environment for debug request.
func (o ApigApiDebugOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiDebug) pulumi.StringPtrOutput { return v.Stage }).(pulumi.StringPtrOutput)
}

type ApigApiDebugArrayOutput struct{ *pulumi.OutputState }

func (ApigApiDebugArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiDebug)(nil)).Elem()
}

func (o ApigApiDebugArrayOutput) ToApigApiDebugArrayOutput() ApigApiDebugArrayOutput {
	return o
}

func (o ApigApiDebugArrayOutput) ToApigApiDebugArrayOutputWithContext(ctx context.Context) ApigApiDebugArrayOutput {
	return o
}

func (o ApigApiDebugArrayOutput) Index(i pulumi.IntInput) ApigApiDebugOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApiDebug {
		return vs[0].([]*ApigApiDebug)[vs[1].(int)]
	}).(ApigApiDebugOutput)
}

type ApigApiDebugMapOutput struct{ *pulumi.OutputState }

func (ApigApiDebugMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiDebug)(nil)).Elem()
}

func (o ApigApiDebugMapOutput) ToApigApiDebugMapOutput() ApigApiDebugMapOutput {
	return o
}

func (o ApigApiDebugMapOutput) ToApigApiDebugMapOutputWithContext(ctx context.Context) ApigApiDebugMapOutput {
	return o
}

func (o ApigApiDebugMapOutput) MapIndex(k pulumi.StringInput) ApigApiDebugOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApiDebug {
		return vs[0].(map[string]*ApigApiDebug)[vs[1].(string)]
	}).(ApigApiDebugOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiDebugInput)(nil)).Elem(), &ApigApiDebug{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiDebugArrayInput)(nil)).Elem(), ApigApiDebugArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiDebugMapInput)(nil)).Elem(), ApigApiDebugMap{})
	pulumi.RegisterOutputType(ApigApiDebugOutput{})
	pulumi.RegisterOutputType(ApigApiDebugArrayOutput{})
	pulumi.RegisterOutputType(ApigApiDebugMapOutput{})
}
