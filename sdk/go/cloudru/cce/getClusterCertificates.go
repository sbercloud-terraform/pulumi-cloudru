// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetClusterCertificates(ctx *pulumi.Context, args *GetClusterCertificatesArgs, opts ...pulumi.InvokeOption) (*GetClusterCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClusterCertificatesResult
	err := ctx.Invoke("cloudru:Cce/getClusterCertificates:getClusterCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterCertificates.
type GetClusterCertificatesArgs struct {
	ClusterId string  `pulumi:"clusterId"`
	Duration  int     `pulumi:"duration"`
	Region    *string `pulumi:"region"`
}

// A collection of values returned by getClusterCertificates.
type GetClusterCertificatesResult struct {
	ClusterId      string                          `pulumi:"clusterId"`
	Clusters       []GetClusterCertificatesCluster `pulumi:"clusters"`
	Contexts       []GetClusterCertificatesContext `pulumi:"contexts"`
	CurrentContext string                          `pulumi:"currentContext"`
	Duration       int                             `pulumi:"duration"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                       `pulumi:"id"`
	KubeConfigRaw string                       `pulumi:"kubeConfigRaw"`
	Region        string                       `pulumi:"region"`
	Users         []GetClusterCertificatesUser `pulumi:"users"`
}

func GetClusterCertificatesOutput(ctx *pulumi.Context, args GetClusterCertificatesOutputArgs, opts ...pulumi.InvokeOption) GetClusterCertificatesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetClusterCertificatesResultOutput, error) {
			args := v.(GetClusterCertificatesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Cce/getClusterCertificates:getClusterCertificates", args, GetClusterCertificatesResultOutput{}, options).(GetClusterCertificatesResultOutput), nil
		}).(GetClusterCertificatesResultOutput)
}

// A collection of arguments for invoking getClusterCertificates.
type GetClusterCertificatesOutputArgs struct {
	ClusterId pulumi.StringInput    `pulumi:"clusterId"`
	Duration  pulumi.IntInput       `pulumi:"duration"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
}

func (GetClusterCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCertificatesArgs)(nil)).Elem()
}

// A collection of values returned by getClusterCertificates.
type GetClusterCertificatesResultOutput struct{ *pulumi.OutputState }

func (GetClusterCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterCertificatesResult)(nil)).Elem()
}

func (o GetClusterCertificatesResultOutput) ToGetClusterCertificatesResultOutput() GetClusterCertificatesResultOutput {
	return o
}

func (o GetClusterCertificatesResultOutput) ToGetClusterCertificatesResultOutputWithContext(ctx context.Context) GetClusterCertificatesResultOutput {
	return o
}

func (o GetClusterCertificatesResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClusterCertificatesResultOutput) Clusters() GetClusterCertificatesClusterArrayOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) []GetClusterCertificatesCluster { return v.Clusters }).(GetClusterCertificatesClusterArrayOutput)
}

func (o GetClusterCertificatesResultOutput) Contexts() GetClusterCertificatesContextArrayOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) []GetClusterCertificatesContext { return v.Contexts }).(GetClusterCertificatesContextArrayOutput)
}

func (o GetClusterCertificatesResultOutput) CurrentContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) string { return v.CurrentContext }).(pulumi.StringOutput)
}

func (o GetClusterCertificatesResultOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) int { return v.Duration }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterCertificatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterCertificatesResultOutput) KubeConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) string { return v.KubeConfigRaw }).(pulumi.StringOutput)
}

func (o GetClusterCertificatesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetClusterCertificatesResultOutput) Users() GetClusterCertificatesUserArrayOutput {
	return o.ApplyT(func(v GetClusterCertificatesResult) []GetClusterCertificatesUser { return v.Users }).(GetClusterCertificatesUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterCertificatesResultOutput{})
}
