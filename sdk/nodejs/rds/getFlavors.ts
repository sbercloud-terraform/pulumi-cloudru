// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get available SberCloud rds flavors.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const flavor = sbercloud.Rds.getFlavors({
 *     dbType: "PostgreSQL",
 *     dbVersion: "12",
 *     instanceMode: "ha",
 * });
 * ```
 */
export function getFlavors(args: GetFlavorsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlavorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Rds/getFlavors:getFlavors", {
        "availabilityZone": args.availabilityZone,
        "dbType": args.dbType,
        "dbVersion": args.dbVersion,
        "groupType": args.groupType,
        "instanceMode": args.instanceMode,
        "memory": args.memory,
        "region": args.region,
        "vcpus": args.vcpus,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlavors.
 */
export interface GetFlavorsArgs {
    /**
     * Specifies the availability zone which the RDS flavor belongs to.
     */
    availabilityZone?: string;
    /**
     * Specifies the DB engine. Value: MySQL, PostgreSQL, SQLServer.
     */
    dbType: string;
    /**
     * Specifies the database version. Available value:
     *
     * type | version
     * ---- | ---
     * MySQL| 5.6 <br>5.7 <br>8.0
     * PostgreSQL | 9.5 <br> 9.6 <br>10 <br>11 <br>12 <br>13 <br>14
     * SQLServer| 2012_SE <br>2014_SE <br>2016_SE <br>2017_SE <br>2012_EE <br>2014_EE <br>2016_EE <br>2017_EE <br>2017_WEB
     */
    dbVersion?: string;
    /**
     * Specifies the performance specification, the valid values are as follows:
     * + **normal**: General enhanced.
     * + **normal2**: General enhanced type II.
     */
    groupType?: string;
    /**
     * The mode of instance. Value: *ha*(indicates primary/standby instance),
     * *single*(indicates single instance) and *replica*(indicates read replicas).
     */
    instanceMode?: string;
    /**
     * Specifies the memory size(GB) in the RDS flavor.
     */
    memory?: number;
    /**
     * The region in which to obtain the RDS flavors. If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the number of vCPUs in the RDS flavor.
     */
    vcpus?: number;
}

/**
 * A collection of values returned by getFlavors.
 */
export interface GetFlavorsResult {
    readonly availabilityZone?: string;
    readonly dbType: string;
    readonly dbVersion?: string;
    /**
     * Indicates the flavors information. Structure is documented below.
     */
    readonly flavors: outputs.Rds.GetFlavorsFlavor[];
    /**
     * The performance specification.
     */
    readonly groupType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The mode of instance.
     */
    readonly instanceMode?: string;
    /**
     * Indicates the memory size in GB.
     */
    readonly memory?: number;
    readonly region: string;
    /**
     * Indicates the CPU size.
     */
    readonly vcpus?: number;
}
/**
 * Use this data source to get available SberCloud rds flavors.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const flavor = sbercloud.Rds.getFlavors({
 *     dbType: "PostgreSQL",
 *     dbVersion: "12",
 *     instanceMode: "ha",
 * });
 * ```
 */
export function getFlavorsOutput(args: GetFlavorsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlavorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Rds/getFlavors:getFlavors", {
        "availabilityZone": args.availabilityZone,
        "dbType": args.dbType,
        "dbVersion": args.dbVersion,
        "groupType": args.groupType,
        "instanceMode": args.instanceMode,
        "memory": args.memory,
        "region": args.region,
        "vcpus": args.vcpus,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlavors.
 */
export interface GetFlavorsOutputArgs {
    /**
     * Specifies the availability zone which the RDS flavor belongs to.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Specifies the DB engine. Value: MySQL, PostgreSQL, SQLServer.
     */
    dbType: pulumi.Input<string>;
    /**
     * Specifies the database version. Available value:
     *
     * type | version
     * ---- | ---
     * MySQL| 5.6 <br>5.7 <br>8.0
     * PostgreSQL | 9.5 <br> 9.6 <br>10 <br>11 <br>12 <br>13 <br>14
     * SQLServer| 2012_SE <br>2014_SE <br>2016_SE <br>2017_SE <br>2012_EE <br>2014_EE <br>2016_EE <br>2017_EE <br>2017_WEB
     */
    dbVersion?: pulumi.Input<string>;
    /**
     * Specifies the performance specification, the valid values are as follows:
     * + **normal**: General enhanced.
     * + **normal2**: General enhanced type II.
     */
    groupType?: pulumi.Input<string>;
    /**
     * The mode of instance. Value: *ha*(indicates primary/standby instance),
     * *single*(indicates single instance) and *replica*(indicates read replicas).
     */
    instanceMode?: pulumi.Input<string>;
    /**
     * Specifies the memory size(GB) in the RDS flavor.
     */
    memory?: pulumi.Input<number>;
    /**
     * The region in which to obtain the RDS flavors. If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the number of vCPUs in the RDS flavor.
     */
    vcpus?: pulumi.Input<number>;
}
