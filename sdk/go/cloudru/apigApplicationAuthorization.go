// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigApplicationAuthorization struct {
	pulumi.CustomResourceState

	// The list of API IDs to be authorized for the application.
	ApiIds pulumi.StringArrayOutput `pulumi:"apiIds"`
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins pulumi.StringArrayOutput `pulumi:"apiIdsOrigins"`
	// The ID of the application authorized to access the APIs.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// The environment ID where the APIs were published.
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// The ID of the dedicated instance to which the application and APIs belong.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The region where the application and APPCODEs are located.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewApigApplicationAuthorization registers a new resource with the given unique name, arguments, and options.
func NewApigApplicationAuthorization(ctx *pulumi.Context,
	name string, args *ApigApplicationAuthorizationArgs, opts ...pulumi.ResourceOption) (*ApigApplicationAuthorization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiIds == nil {
		return nil, errors.New("invalid value for required argument 'ApiIds'")
	}
	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApplicationAuthorization
	err := ctx.RegisterResource("cloudru:index/apigApplicationAuthorization:ApigApplicationAuthorization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApplicationAuthorization gets an existing ApigApplicationAuthorization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApplicationAuthorization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApplicationAuthorizationState, opts ...pulumi.ResourceOption) (*ApigApplicationAuthorization, error) {
	var resource ApigApplicationAuthorization
	err := ctx.ReadResource("cloudru:index/apigApplicationAuthorization:ApigApplicationAuthorization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApplicationAuthorization resources.
type apigApplicationAuthorizationState struct {
	// The list of API IDs to be authorized for the application.
	ApiIds []string `pulumi:"apiIds"`
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins []string `pulumi:"apiIdsOrigins"`
	// The ID of the application authorized to access the APIs.
	ApplicationId *string `pulumi:"applicationId"`
	// The environment ID where the APIs were published.
	EnvId *string `pulumi:"envId"`
	// The ID of the dedicated instance to which the application and APIs belong.
	InstanceId *string `pulumi:"instanceId"`
	// The region where the application and APPCODEs are located.
	Region *string `pulumi:"region"`
}

type ApigApplicationAuthorizationState struct {
	// The list of API IDs to be authorized for the application.
	ApiIds pulumi.StringArrayInput
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins pulumi.StringArrayInput
	// The ID of the application authorized to access the APIs.
	ApplicationId pulumi.StringPtrInput
	// The environment ID where the APIs were published.
	EnvId pulumi.StringPtrInput
	// The ID of the dedicated instance to which the application and APIs belong.
	InstanceId pulumi.StringPtrInput
	// The region where the application and APPCODEs are located.
	Region pulumi.StringPtrInput
}

func (ApigApplicationAuthorizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApplicationAuthorizationState)(nil)).Elem()
}

type apigApplicationAuthorizationArgs struct {
	// The list of API IDs to be authorized for the application.
	ApiIds []string `pulumi:"apiIds"`
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins []string `pulumi:"apiIdsOrigins"`
	// The ID of the application authorized to access the APIs.
	ApplicationId string `pulumi:"applicationId"`
	// The environment ID where the APIs were published.
	EnvId string `pulumi:"envId"`
	// The ID of the dedicated instance to which the application and APIs belong.
	InstanceId string `pulumi:"instanceId"`
	// The region where the application and APPCODEs are located.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ApigApplicationAuthorization resource.
type ApigApplicationAuthorizationArgs struct {
	// The list of API IDs to be authorized for the application.
	ApiIds pulumi.StringArrayInput
	// The script configuration value of this change is also the original value used for comparison with
	// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
	ApiIdsOrigins pulumi.StringArrayInput
	// The ID of the application authorized to access the APIs.
	ApplicationId pulumi.StringInput
	// The environment ID where the APIs were published.
	EnvId pulumi.StringInput
	// The ID of the dedicated instance to which the application and APIs belong.
	InstanceId pulumi.StringInput
	// The region where the application and APPCODEs are located.
	Region pulumi.StringPtrInput
}

func (ApigApplicationAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApplicationAuthorizationArgs)(nil)).Elem()
}

type ApigApplicationAuthorizationInput interface {
	pulumi.Input

	ToApigApplicationAuthorizationOutput() ApigApplicationAuthorizationOutput
	ToApigApplicationAuthorizationOutputWithContext(ctx context.Context) ApigApplicationAuthorizationOutput
}

func (*ApigApplicationAuthorization) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApplicationAuthorization)(nil)).Elem()
}

func (i *ApigApplicationAuthorization) ToApigApplicationAuthorizationOutput() ApigApplicationAuthorizationOutput {
	return i.ToApigApplicationAuthorizationOutputWithContext(context.Background())
}

func (i *ApigApplicationAuthorization) ToApigApplicationAuthorizationOutputWithContext(ctx context.Context) ApigApplicationAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationAuthorizationOutput)
}

// ApigApplicationAuthorizationArrayInput is an input type that accepts ApigApplicationAuthorizationArray and ApigApplicationAuthorizationArrayOutput values.
// You can construct a concrete instance of `ApigApplicationAuthorizationArrayInput` via:
//
//	ApigApplicationAuthorizationArray{ ApigApplicationAuthorizationArgs{...} }
type ApigApplicationAuthorizationArrayInput interface {
	pulumi.Input

	ToApigApplicationAuthorizationArrayOutput() ApigApplicationAuthorizationArrayOutput
	ToApigApplicationAuthorizationArrayOutputWithContext(context.Context) ApigApplicationAuthorizationArrayOutput
}

type ApigApplicationAuthorizationArray []ApigApplicationAuthorizationInput

func (ApigApplicationAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApplicationAuthorization)(nil)).Elem()
}

func (i ApigApplicationAuthorizationArray) ToApigApplicationAuthorizationArrayOutput() ApigApplicationAuthorizationArrayOutput {
	return i.ToApigApplicationAuthorizationArrayOutputWithContext(context.Background())
}

func (i ApigApplicationAuthorizationArray) ToApigApplicationAuthorizationArrayOutputWithContext(ctx context.Context) ApigApplicationAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationAuthorizationArrayOutput)
}

// ApigApplicationAuthorizationMapInput is an input type that accepts ApigApplicationAuthorizationMap and ApigApplicationAuthorizationMapOutput values.
// You can construct a concrete instance of `ApigApplicationAuthorizationMapInput` via:
//
//	ApigApplicationAuthorizationMap{ "key": ApigApplicationAuthorizationArgs{...} }
type ApigApplicationAuthorizationMapInput interface {
	pulumi.Input

	ToApigApplicationAuthorizationMapOutput() ApigApplicationAuthorizationMapOutput
	ToApigApplicationAuthorizationMapOutputWithContext(context.Context) ApigApplicationAuthorizationMapOutput
}

type ApigApplicationAuthorizationMap map[string]ApigApplicationAuthorizationInput

func (ApigApplicationAuthorizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApplicationAuthorization)(nil)).Elem()
}

func (i ApigApplicationAuthorizationMap) ToApigApplicationAuthorizationMapOutput() ApigApplicationAuthorizationMapOutput {
	return i.ToApigApplicationAuthorizationMapOutputWithContext(context.Background())
}

func (i ApigApplicationAuthorizationMap) ToApigApplicationAuthorizationMapOutputWithContext(ctx context.Context) ApigApplicationAuthorizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApplicationAuthorizationMapOutput)
}

type ApigApplicationAuthorizationOutput struct{ *pulumi.OutputState }

func (ApigApplicationAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApplicationAuthorization)(nil)).Elem()
}

func (o ApigApplicationAuthorizationOutput) ToApigApplicationAuthorizationOutput() ApigApplicationAuthorizationOutput {
	return o
}

func (o ApigApplicationAuthorizationOutput) ToApigApplicationAuthorizationOutputWithContext(ctx context.Context) ApigApplicationAuthorizationOutput {
	return o
}

// The list of API IDs to be authorized for the application.
func (o ApigApplicationAuthorizationOutput) ApiIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigApplicationAuthorization) pulumi.StringArrayOutput { return v.ApiIds }).(pulumi.StringArrayOutput)
}

// The script configuration value of this change is also the original value used for comparison with
// the new value next time the change is made. The corresponding parameter name is 'api_ids'.
func (o ApigApplicationAuthorizationOutput) ApiIdsOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigApplicationAuthorization) pulumi.StringArrayOutput { return v.ApiIdsOrigins }).(pulumi.StringArrayOutput)
}

// The ID of the application authorized to access the APIs.
func (o ApigApplicationAuthorizationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplicationAuthorization) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// The environment ID where the APIs were published.
func (o ApigApplicationAuthorizationOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplicationAuthorization) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// The ID of the dedicated instance to which the application and APIs belong.
func (o ApigApplicationAuthorizationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplicationAuthorization) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The region where the application and APPCODEs are located.
func (o ApigApplicationAuthorizationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApplicationAuthorization) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type ApigApplicationAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (ApigApplicationAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApplicationAuthorization)(nil)).Elem()
}

func (o ApigApplicationAuthorizationArrayOutput) ToApigApplicationAuthorizationArrayOutput() ApigApplicationAuthorizationArrayOutput {
	return o
}

func (o ApigApplicationAuthorizationArrayOutput) ToApigApplicationAuthorizationArrayOutputWithContext(ctx context.Context) ApigApplicationAuthorizationArrayOutput {
	return o
}

func (o ApigApplicationAuthorizationArrayOutput) Index(i pulumi.IntInput) ApigApplicationAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApplicationAuthorization {
		return vs[0].([]*ApigApplicationAuthorization)[vs[1].(int)]
	}).(ApigApplicationAuthorizationOutput)
}

type ApigApplicationAuthorizationMapOutput struct{ *pulumi.OutputState }

func (ApigApplicationAuthorizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApplicationAuthorization)(nil)).Elem()
}

func (o ApigApplicationAuthorizationMapOutput) ToApigApplicationAuthorizationMapOutput() ApigApplicationAuthorizationMapOutput {
	return o
}

func (o ApigApplicationAuthorizationMapOutput) ToApigApplicationAuthorizationMapOutputWithContext(ctx context.Context) ApigApplicationAuthorizationMapOutput {
	return o
}

func (o ApigApplicationAuthorizationMapOutput) MapIndex(k pulumi.StringInput) ApigApplicationAuthorizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApplicationAuthorization {
		return vs[0].(map[string]*ApigApplicationAuthorization)[vs[1].(string)]
	}).(ApigApplicationAuthorizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationAuthorizationInput)(nil)).Elem(), &ApigApplicationAuthorization{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationAuthorizationArrayInput)(nil)).Elem(), ApigApplicationAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApplicationAuthorizationMapInput)(nil)).Elem(), ApigApplicationAuthorizationMap{})
	pulumi.RegisterOutputType(ApigApplicationAuthorizationOutput{})
	pulumi.RegisterOutputType(ApigApplicationAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(ApigApplicationAuthorizationMapOutput{})
}
