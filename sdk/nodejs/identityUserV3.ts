// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IdentityUserV3 extends pulumi.CustomResource {
    /**
     * Get an existing IdentityUserV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityUserV3State, opts?: pulumi.CustomResourceOptions): IdentityUserV3 {
        return new IdentityUserV3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/identityUserV3:IdentityUserV3';

    /**
     * Returns true if the given object is an instance of IdentityUserV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityUserV3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityUserV3.__pulumiType;
    }

    public readonly accessType!: pulumi.Output<string>;
    public readonly countryCode!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly email!: pulumi.Output<string | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly externalIdentityId!: pulumi.Output<string | undefined>;
    public readonly externalIdentityType!: pulumi.Output<string>;
    public /*out*/ readonly lastLogin!: pulumi.Output<string>;
    public readonly loginProtectVerificationMethod!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public /*out*/ readonly passwordStrength!: pulumi.Output<string>;
    public readonly phone!: pulumi.Output<string | undefined>;
    public readonly pwdReset!: pulumi.Output<boolean | undefined>;

    /**
     * Create a IdentityUserV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IdentityUserV3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityUserV3Args | IdentityUserV3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityUserV3State | undefined;
            resourceInputs["accessType"] = state ? state.accessType : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["externalIdentityId"] = state ? state.externalIdentityId : undefined;
            resourceInputs["externalIdentityType"] = state ? state.externalIdentityType : undefined;
            resourceInputs["lastLogin"] = state ? state.lastLogin : undefined;
            resourceInputs["loginProtectVerificationMethod"] = state ? state.loginProtectVerificationMethod : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordStrength"] = state ? state.passwordStrength : undefined;
            resourceInputs["phone"] = state ? state.phone : undefined;
            resourceInputs["pwdReset"] = state ? state.pwdReset : undefined;
        } else {
            const args = argsOrState as IdentityUserV3Args | undefined;
            resourceInputs["accessType"] = args ? args.accessType : undefined;
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["externalIdentityId"] = args ? args.externalIdentityId : undefined;
            resourceInputs["externalIdentityType"] = args ? args.externalIdentityType : undefined;
            resourceInputs["loginProtectVerificationMethod"] = args ? args.loginProtectVerificationMethod : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["phone"] = args ? args.phone : undefined;
            resourceInputs["pwdReset"] = args ? args.pwdReset : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["lastLogin"] = undefined /*out*/;
            resourceInputs["passwordStrength"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IdentityUserV3.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IdentityUserV3 resources.
 */
export interface IdentityUserV3State {
    accessType?: pulumi.Input<string>;
    countryCode?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    externalIdentityId?: pulumi.Input<string>;
    externalIdentityType?: pulumi.Input<string>;
    lastLogin?: pulumi.Input<string>;
    loginProtectVerificationMethod?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    passwordStrength?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    pwdReset?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a IdentityUserV3 resource.
 */
export interface IdentityUserV3Args {
    accessType?: pulumi.Input<string>;
    countryCode?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    externalIdentityId?: pulumi.Input<string>;
    externalIdentityType?: pulumi.Input<string>;
    loginProtectVerificationMethod?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    pwdReset?: pulumi.Input<boolean>;
}
