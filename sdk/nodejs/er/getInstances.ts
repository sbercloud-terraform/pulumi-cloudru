// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Er/getInstances:getInstances", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "instanceId": args.instanceId,
        "name": args.name,
        "ownedBySelf": args.ownedBySelf,
        "region": args.region,
        "status": args.status,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    enterpriseProjectId?: string;
    instanceId?: string;
    name?: string;
    ownedBySelf?: boolean;
    region?: string;
    status?: string;
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    readonly instances: outputs.Er.GetInstancesInstance[];
    readonly name?: string;
    readonly ownedBySelf?: boolean;
    readonly region?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
}
export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Er/getInstances:getInstances", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "instanceId": args.instanceId,
        "name": args.name,
        "ownedBySelf": args.ownedBySelf,
        "region": args.region,
        "status": args.status,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    enterpriseProjectId?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ownedBySelf?: pulumi.Input<boolean>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
