// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get the list of DMS rocketMQ broker.
 */
export function getDmsRocketmqBroker(args: GetDmsRocketmqBrokerArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsRocketmqBrokerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDmsRocketmqBroker:getDmsRocketmqBroker", {
        "instanceId": args.instanceId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqBroker.
 */
export interface GetDmsRocketmqBrokerArgs {
    /**
     * Specifies the ID of the rocketMQ instance.
     */
    instanceId: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getDmsRocketmqBroker.
 */
export interface GetDmsRocketmqBrokerResult {
    /**
     * Indicates the list of the brokers.
     */
    readonly brokers: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly region: string;
}
/**
 * Use this data source to get the list of DMS rocketMQ broker.
 */
export function getDmsRocketmqBrokerOutput(args: GetDmsRocketmqBrokerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDmsRocketmqBrokerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDmsRocketmqBroker:getDmsRocketmqBroker", {
        "instanceId": args.instanceId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqBroker.
 */
export interface GetDmsRocketmqBrokerOutputArgs {
    /**
     * Specifies the ID of the rocketMQ instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
