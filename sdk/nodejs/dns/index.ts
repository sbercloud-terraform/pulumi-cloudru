// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { RecordsetArgs, RecordsetState } from "./recordset";
export type Recordset = import("./recordset").Recordset;
export const Recordset: typeof import("./recordset").Recordset = null as any;
utilities.lazyLoad(exports, ["Recordset"], () => require("./recordset"));

export { ZoneArgs, ZoneState } from "./zone";
export type Zone = import("./zone").Zone;
export const Zone: typeof import("./zone").Zone = null as any;
utilities.lazyLoad(exports, ["Zone"], () => require("./zone"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sbercloud:Dns/recordset:Recordset":
                return new Recordset(name, <any>undefined, { urn })
            case "sbercloud:Dns/zone:Zone":
                return new Zone(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sbercloud", "Dns/recordset", _module)
pulumi.runtime.registerResourceModule("sbercloud", "Dns/zone", _module)
