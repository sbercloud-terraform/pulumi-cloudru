// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a CBH HA instance resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const name = config.requireObject<any>("name");
 * const flavorId = config.requireObject<any>("flavorId");
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const securityGroupId = config.requireObject<any>("securityGroupId");
 * const masterAvailabilityZone = config.requireObject<any>("masterAvailabilityZone");
 * const slaveAvailabilityZone = config.requireObject<any>("slaveAvailabilityZone");
 * const password = config.requireObject<any>("password");
 * const test = new sbercloud.CbhHaInstance("test", {
 *     name: name,
 *     flavorId: flavorId,
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: securityGroupId,
 *     masterAvailabilityZone: masterAvailabilityZone,
 *     slaveAvailabilityZone: slaveAvailabilityZone,
 *     password: password,
 *     chargingMode: "prePaid",
 *     periodUnit: "month",
 *     period: 1,
 * });
 * ```
 *
 * ## Import
 *
 * The CBH HA instance can be imported using the master instance ID and the slave instance ID, separated by a slash, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/cbhHaInstance:CbhHaInstance test <master_id>/<slave_id>
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason. The missing attributes include: `charging_mode`, `period`, `period_unit`,
 *
 * `auto_renew`, `password`, `ipv6_enable`, `attach_disk_size`, `power_action`.
 *
 * It is generally recommended running `pulumi preview` after importing an instance.
 *
 * You can then decide if changes should be applied to the instance, or the resource definition should be updated
 *
 * to align with the instance. Also, you can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_cbh_ha_instance" "test" {
 *
 *     ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       charging_mode, period, period_unit, auto_renew, password, ipv6_enable, attach_disk_size, power_action,
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class CbhHaInstance extends pulumi.CustomResource {
    /**
     * Get an existing CbhHaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CbhHaInstanceState, opts?: pulumi.CustomResourceOptions): CbhHaInstance {
        return new CbhHaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/cbhHaInstance:CbhHaInstance';

    /**
     * Returns true if the given object is an instance of CbhHaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CbhHaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CbhHaInstance.__pulumiType;
    }

    /**
     * Specifies the size of the additional data disk for the CBH HA instance.
     * The unit is TB. It refers to the additional disk size added on top of the existing disk. And the sum of the built-in
     * disk of the instance flavor and the additional disk cannot exceed **300TB**.
     *
     * > 1. Storage expansion is a high-risk operation, with a certain risk of failure.
     * <br/>2. Expansion failure may affect the usability of the instance. Please ensure to back up your data.
     */
    public readonly attachDiskSize!: pulumi.Output<number | undefined>;
    /**
     * Specifies whether auto-renew is enabled.
     * Valid values are **true** and **false**. Defaults to **false**.
     */
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * Specifies the charging mode of the CBH HA instance.
     * The options are as follows:
     * + **postPaid**: pas-as-you-go.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly chargingMode!: pulumi.Output<string>;
    /**
     * The data disk size of the CBH HA instance. The unit is TB. It represents the sum of the
     * disks that come with the flavor and the disks that have already been expanded.
     */
    public /*out*/ readonly dataDiskSize!: pulumi.Output<number>;
    /**
     * Specifies the enterprise project ID to which the CBH HA instance belongs.
     * For enterprise users, if omitted, default enterprise project will be used.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the product ID of the CBH server. When updating the flavor, it can only be
     * changed to a higher flavor.
     *
     * > 1. The flavor change is a high-risk operation, with a certain risk of failure.
     * <br/>2. Flavor change failing may impact the usability of the instance. Please be sure to back up your data.
     */
    public readonly flavorId!: pulumi.Output<string>;
    /**
     * Specifies the floating IP address of the CBH HA instance.
     *
     * > 1. For the parameters `masterPrivateIp`, `slavePrivateIp`, and `floatingIp`, if none of them are specified,
     * a new IP address will be assigned to each. If one is specified, then the other two must also be specified.
     * <br>2. The CBH HA instance will automatically create two elastic network card based on `masterPrivateIp` and
     * `slavePrivateIp`, they will be deleted as the CBH HA instance is deleted. But if the `masterPrivateIp` and
     * `slavePrivateIp` parameters is updated, the elastic network card resources corresponding to the original master
     * private IP and slave private IP will remain, you need to manually delete them in the console.
     */
    public readonly floatingIp!: pulumi.Output<string>;
    /**
     * Specifies whether the IPv6 network is enabled. Defaults to **false**.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly ipv6Enable!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the availability zone name of the master instance.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly masterAvailabilityZone!: pulumi.Output<string>;
    /**
     * The ID of the master instance.
     */
    public /*out*/ readonly masterId!: pulumi.Output<string>;
    /**
     * Specifies the private IP address of the master instance.
     */
    public readonly masterPrivateIp!: pulumi.Output<string>;
    /**
     * Specifies the name of the CBH HA instance. The field can contain `1` to `64`
     * characters. Only letters, digits, underscores (_), and hyphens (-) are allowed.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the password for logging in to the management console. The value of the
     * field has the following restrictions:
     * + The value of the field must contain `8` to `32` characters.
     * + The value of the field must contain at least three of the following: letters, digits, and special characters
     * (!@$%^-_=+[{}]:,./?~#*).
     * + The value of the field cannot contain the username or the username spelled backwards.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Specifies the charging period of the CBH HA instance.
     * If `periodUnit` is set to **month**, the value ranges from 1 to 9.
     * If `periodUnit` is set to **year**, the value ranges from 1 to 3.
     *
     * This parameter is required, but it has no effect, since sbercloud doesn't have pre-paid billing type
     * Changing this parameter will create a new resource.
     */
    public readonly period!: pulumi.Output<number>;
    /**
     * Specifies the charging period unit of the CBH HA instance.
     * Valid values are *month* and *year*.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly periodUnit!: pulumi.Output<string>;
    /**
     * Specifies the power action after the CBH HA instance is created.
     * The valid values are as follows:
     * + **start**: Startup instance.
     * + **stop**: Shutdown instance.
     * + **soft-reboot**: Normal reboot, shut down virtual machine service.
     * + **hard-reboot**: Force reboot, reboot virtual machine.
     *
     * > The usage of `powerAction` has some limitations:
     * <br/>1. The **start** operation can only be performed when the instance status is **SHUTOFF**.
     * <br/>2. The **stop**, **soft-reboot**, and **hard-reboot** operations can only be performed when the instance status
     * is **ACTIVE**.
     */
    public readonly powerAction!: pulumi.Output<string | undefined>;
    /**
     * The elastic IP address.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    public readonly publicIpId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the region in which to create the CBH HA instance.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the IDs of the security group. Multiple security group IDs are
     * separated by commas (,) without spaces.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Specifies the availability zone name of the slave instance.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly slaveAvailabilityZone!: pulumi.Output<string>;
    /**
     * The ID of the slave instance.
     */
    public /*out*/ readonly slaveId!: pulumi.Output<string>;
    /**
     * Specifies the private IP address of the slave instance.
     */
    public readonly slavePrivateIp!: pulumi.Output<string>;
    /**
     * The status of the CBH HA instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the ID of a subnet.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the CBH HA instance.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The current version of the CBH HA instance image.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * Specifies the ID of a VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a CbhHaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CbhHaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CbhHaInstanceArgs | CbhHaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CbhHaInstanceState | undefined;
            resourceInputs["attachDiskSize"] = state ? state.attachDiskSize : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["dataDiskSize"] = state ? state.dataDiskSize : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = state ? state.flavorId : undefined;
            resourceInputs["floatingIp"] = state ? state.floatingIp : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["masterAvailabilityZone"] = state ? state.masterAvailabilityZone : undefined;
            resourceInputs["masterId"] = state ? state.masterId : undefined;
            resourceInputs["masterPrivateIp"] = state ? state.masterPrivateIp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["powerAction"] = state ? state.powerAction : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["publicIpId"] = state ? state.publicIpId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["slaveAvailabilityZone"] = state ? state.slaveAvailabilityZone : undefined;
            resourceInputs["slaveId"] = state ? state.slaveId : undefined;
            resourceInputs["slavePrivateIp"] = state ? state.slavePrivateIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as CbhHaInstanceArgs | undefined;
            if ((!args || args.chargingMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'chargingMode'");
            }
            if ((!args || args.flavorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flavorId'");
            }
            if ((!args || args.masterAvailabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterAvailabilityZone'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.period === undefined) && !opts.urn) {
                throw new Error("Missing required property 'period'");
            }
            if ((!args || args.periodUnit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'periodUnit'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.slaveAvailabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slaveAvailabilityZone'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["attachDiskSize"] = args ? args.attachDiskSize : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = args ? args.flavorId : undefined;
            resourceInputs["floatingIp"] = args ? args.floatingIp : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["masterAvailabilityZone"] = args ? args.masterAvailabilityZone : undefined;
            resourceInputs["masterPrivateIp"] = args ? args.masterPrivateIp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["powerAction"] = args ? args.powerAction : undefined;
            resourceInputs["publicIpId"] = args ? args.publicIpId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["slaveAvailabilityZone"] = args ? args.slaveAvailabilityZone : undefined;
            resourceInputs["slavePrivateIp"] = args ? args.slavePrivateIp : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["dataDiskSize"] = undefined /*out*/;
            resourceInputs["masterId"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["slaveId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CbhHaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CbhHaInstance resources.
 */
export interface CbhHaInstanceState {
    /**
     * Specifies the size of the additional data disk for the CBH HA instance.
     * The unit is TB. It refers to the additional disk size added on top of the existing disk. And the sum of the built-in
     * disk of the instance flavor and the additional disk cannot exceed **300TB**.
     *
     * > 1. Storage expansion is a high-risk operation, with a certain risk of failure.
     * <br/>2. Expansion failure may affect the usability of the instance. Please ensure to back up your data.
     */
    attachDiskSize?: pulumi.Input<number>;
    /**
     * Specifies whether auto-renew is enabled.
     * Valid values are **true** and **false**. Defaults to **false**.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the charging mode of the CBH HA instance.
     * The options are as follows:
     * + **postPaid**: pas-as-you-go.
     *
     * Changing this parameter will create a new resource.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * The data disk size of the CBH HA instance. The unit is TB. It represents the sum of the
     * disks that come with the flavor and the disks that have already been expanded.
     */
    dataDiskSize?: pulumi.Input<number>;
    /**
     * Specifies the enterprise project ID to which the CBH HA instance belongs.
     * For enterprise users, if omitted, default enterprise project will be used.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the product ID of the CBH server. When updating the flavor, it can only be
     * changed to a higher flavor.
     *
     * > 1. The flavor change is a high-risk operation, with a certain risk of failure.
     * <br/>2. Flavor change failing may impact the usability of the instance. Please be sure to back up your data.
     */
    flavorId?: pulumi.Input<string>;
    /**
     * Specifies the floating IP address of the CBH HA instance.
     *
     * > 1. For the parameters `masterPrivateIp`, `slavePrivateIp`, and `floatingIp`, if none of them are specified,
     * a new IP address will be assigned to each. If one is specified, then the other two must also be specified.
     * <br>2. The CBH HA instance will automatically create two elastic network card based on `masterPrivateIp` and
     * `slavePrivateIp`, they will be deleted as the CBH HA instance is deleted. But if the `masterPrivateIp` and
     * `slavePrivateIp` parameters is updated, the elastic network card resources corresponding to the original master
     * private IP and slave private IP will remain, you need to manually delete them in the console.
     */
    floatingIp?: pulumi.Input<string>;
    /**
     * Specifies whether the IPv6 network is enabled. Defaults to **false**.
     *
     * Changing this parameter will create a new resource.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the availability zone name of the master instance.
     *
     * Changing this parameter will create a new resource.
     */
    masterAvailabilityZone?: pulumi.Input<string>;
    /**
     * The ID of the master instance.
     */
    masterId?: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the master instance.
     */
    masterPrivateIp?: pulumi.Input<string>;
    /**
     * Specifies the name of the CBH HA instance. The field can contain `1` to `64`
     * characters. Only letters, digits, underscores (_), and hyphens (-) are allowed.
     *
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password for logging in to the management console. The value of the
     * field has the following restrictions:
     * + The value of the field must contain `8` to `32` characters.
     * + The value of the field must contain at least three of the following: letters, digits, and special characters
     * (!@$%^-_=+[{}]:,./?~#*).
     * + The value of the field cannot contain the username or the username spelled backwards.
     */
    password?: pulumi.Input<string>;
    /**
     * Specifies the charging period of the CBH HA instance.
     * If `periodUnit` is set to **month**, the value ranges from 1 to 9.
     * If `periodUnit` is set to **year**, the value ranges from 1 to 3.
     *
     * This parameter is required, but it has no effect, since sbercloud doesn't have pre-paid billing type
     * Changing this parameter will create a new resource.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the CBH HA instance.
     * Valid values are *month* and *year*.
     *
     * Changing this parameter will create a new resource.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the power action after the CBH HA instance is created.
     * The valid values are as follows:
     * + **start**: Startup instance.
     * + **stop**: Shutdown instance.
     * + **soft-reboot**: Normal reboot, shut down virtual machine service.
     * + **hard-reboot**: Force reboot, reboot virtual machine.
     *
     * > The usage of `powerAction` has some limitations:
     * <br/>1. The **start** operation can only be performed when the instance status is **SHUTOFF**.
     * <br/>2. The **stop**, **soft-reboot**, and **hard-reboot** operations can only be performed when the instance status
     * is **ACTIVE**.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * The elastic IP address.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the CBH HA instance.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the security group. Multiple security group IDs are
     * separated by commas (,) without spaces.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Specifies the availability zone name of the slave instance.
     *
     * Changing this parameter will create a new resource.
     */
    slaveAvailabilityZone?: pulumi.Input<string>;
    /**
     * The ID of the slave instance.
     */
    slaveId?: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the slave instance.
     */
    slavePrivateIp?: pulumi.Input<string>;
    /**
     * The status of the CBH HA instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the CBH HA instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current version of the CBH HA instance image.
     */
    version?: pulumi.Input<string>;
    /**
     * Specifies the ID of a VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CbhHaInstance resource.
 */
export interface CbhHaInstanceArgs {
    /**
     * Specifies the size of the additional data disk for the CBH HA instance.
     * The unit is TB. It refers to the additional disk size added on top of the existing disk. And the sum of the built-in
     * disk of the instance flavor and the additional disk cannot exceed **300TB**.
     *
     * > 1. Storage expansion is a high-risk operation, with a certain risk of failure.
     * <br/>2. Expansion failure may affect the usability of the instance. Please ensure to back up your data.
     */
    attachDiskSize?: pulumi.Input<number>;
    /**
     * Specifies whether auto-renew is enabled.
     * Valid values are **true** and **false**. Defaults to **false**.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the charging mode of the CBH HA instance.
     * The options are as follows:
     * + **postPaid**: pas-as-you-go.
     *
     * Changing this parameter will create a new resource.
     */
    chargingMode: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the CBH HA instance belongs.
     * For enterprise users, if omitted, default enterprise project will be used.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the product ID of the CBH server. When updating the flavor, it can only be
     * changed to a higher flavor.
     *
     * > 1. The flavor change is a high-risk operation, with a certain risk of failure.
     * <br/>2. Flavor change failing may impact the usability of the instance. Please be sure to back up your data.
     */
    flavorId: pulumi.Input<string>;
    /**
     * Specifies the floating IP address of the CBH HA instance.
     *
     * > 1. For the parameters `masterPrivateIp`, `slavePrivateIp`, and `floatingIp`, if none of them are specified,
     * a new IP address will be assigned to each. If one is specified, then the other two must also be specified.
     * <br>2. The CBH HA instance will automatically create two elastic network card based on `masterPrivateIp` and
     * `slavePrivateIp`, they will be deleted as the CBH HA instance is deleted. But if the `masterPrivateIp` and
     * `slavePrivateIp` parameters is updated, the elastic network card resources corresponding to the original master
     * private IP and slave private IP will remain, you need to manually delete them in the console.
     */
    floatingIp?: pulumi.Input<string>;
    /**
     * Specifies whether the IPv6 network is enabled. Defaults to **false**.
     *
     * Changing this parameter will create a new resource.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the availability zone name of the master instance.
     *
     * Changing this parameter will create a new resource.
     */
    masterAvailabilityZone: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the master instance.
     */
    masterPrivateIp?: pulumi.Input<string>;
    /**
     * Specifies the name of the CBH HA instance. The field can contain `1` to `64`
     * characters. Only letters, digits, underscores (_), and hyphens (-) are allowed.
     *
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password for logging in to the management console. The value of the
     * field has the following restrictions:
     * + The value of the field must contain `8` to `32` characters.
     * + The value of the field must contain at least three of the following: letters, digits, and special characters
     * (!@$%^-_=+[{}]:,./?~#*).
     * + The value of the field cannot contain the username or the username spelled backwards.
     */
    password: pulumi.Input<string>;
    /**
     * Specifies the charging period of the CBH HA instance.
     * If `periodUnit` is set to **month**, the value ranges from 1 to 9.
     * If `periodUnit` is set to **year**, the value ranges from 1 to 3.
     *
     * This parameter is required, but it has no effect, since sbercloud doesn't have pre-paid billing type
     * Changing this parameter will create a new resource.
     */
    period: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the CBH HA instance.
     * Valid values are *month* and *year*.
     *
     * Changing this parameter will create a new resource.
     */
    periodUnit: pulumi.Input<string>;
    /**
     * Specifies the power action after the CBH HA instance is created.
     * The valid values are as follows:
     * + **start**: Startup instance.
     * + **stop**: Shutdown instance.
     * + **soft-reboot**: Normal reboot, shut down virtual machine service.
     * + **hard-reboot**: Force reboot, reboot virtual machine.
     *
     * > The usage of `powerAction` has some limitations:
     * <br/>1. The **start** operation can only be performed when the instance status is **SHUTOFF**.
     * <br/>2. The **stop**, **soft-reboot**, and **hard-reboot** operations can only be performed when the instance status
     * is **ACTIVE**.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the CBH HA instance.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the security group. Multiple security group IDs are
     * separated by commas (,) without spaces.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies the availability zone name of the slave instance.
     *
     * Changing this parameter will create a new resource.
     */
    slaveAvailabilityZone: pulumi.Input<string>;
    /**
     * Specifies the private IP address of the slave instance.
     */
    slavePrivateIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the CBH HA instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of a VPC.
     */
    vpcId: pulumi.Input<string>;
}
