// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getFlowLogs(args: GetFlowLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Cfw/getFlowLogs:getFlowLogs", {
        "app": args.app,
        "direction": args.direction,
        "dstCityName": args.dstCityName,
        "dstIp": args.dstIp,
        "dstPort": args.dstPort,
        "dstProvinceName": args.dstProvinceName,
        "dstRegionName": args.dstRegionName,
        "endTime": args.endTime,
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "region": args.region,
        "srcCityName": args.srcCityName,
        "srcIp": args.srcIp,
        "srcPort": args.srcPort,
        "srcProvinceName": args.srcProvinceName,
        "srcRegionName": args.srcRegionName,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowLogs.
 */
export interface GetFlowLogsArgs {
    app?: string;
    direction?: string;
    dstCityName?: string;
    dstIp?: string;
    dstPort?: number;
    dstProvinceName?: string;
    dstRegionName?: string;
    endTime: string;
    enterpriseProjectId?: string;
    fwInstanceId: string;
    region?: string;
    srcCityName?: string;
    srcIp?: string;
    srcPort?: number;
    srcProvinceName?: string;
    srcRegionName?: string;
    startTime: string;
}

/**
 * A collection of values returned by getFlowLogs.
 */
export interface GetFlowLogsResult {
    readonly app?: string;
    readonly direction?: string;
    readonly dstCityName?: string;
    readonly dstIp?: string;
    readonly dstPort?: number;
    readonly dstProvinceName?: string;
    readonly dstRegionName?: string;
    readonly endTime: string;
    readonly enterpriseProjectId?: string;
    readonly fwInstanceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly records: outputs.Cfw.GetFlowLogsRecord[];
    readonly region: string;
    readonly srcCityName?: string;
    readonly srcIp?: string;
    readonly srcPort?: number;
    readonly srcProvinceName?: string;
    readonly srcRegionName?: string;
    readonly startTime: string;
}
export function getFlowLogsOutput(args: GetFlowLogsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Cfw/getFlowLogs:getFlowLogs", {
        "app": args.app,
        "direction": args.direction,
        "dstCityName": args.dstCityName,
        "dstIp": args.dstIp,
        "dstPort": args.dstPort,
        "dstProvinceName": args.dstProvinceName,
        "dstRegionName": args.dstRegionName,
        "endTime": args.endTime,
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "region": args.region,
        "srcCityName": args.srcCityName,
        "srcIp": args.srcIp,
        "srcPort": args.srcPort,
        "srcProvinceName": args.srcProvinceName,
        "srcRegionName": args.srcRegionName,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowLogs.
 */
export interface GetFlowLogsOutputArgs {
    app?: pulumi.Input<string>;
    direction?: pulumi.Input<string>;
    dstCityName?: pulumi.Input<string>;
    dstIp?: pulumi.Input<string>;
    dstPort?: pulumi.Input<number>;
    dstProvinceName?: pulumi.Input<string>;
    dstRegionName?: pulumi.Input<string>;
    endTime: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    fwInstanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    srcCityName?: pulumi.Input<string>;
    srcIp?: pulumi.Input<string>;
    srcPort?: pulumi.Input<number>;
    srcProvinceName?: pulumi.Input<string>;
    srcRegionName?: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
