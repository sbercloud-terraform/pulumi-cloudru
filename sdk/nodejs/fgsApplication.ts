// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages an application within SberCloud.
 *
 * > Currently, only available in `cn-north-4` and `cn-east-3` regions.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Application can be imported using the `id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/fgsApplication:FgsApplication test <id>
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response.
 *
 * The missing attributes include: `template_id`, `agency_name`, `params`.
 *
 * It is generally recommended running `pulumi preview` after importing the application.
 *
 * You can then decide if changes should be applied to the application, or the resource definition should be updated to
 *
 * align with the application. Also you can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_fgs_application" "test" {
 *
 *   ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       template_id, agency_name,
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class FgsApplication extends pulumi.CustomResource {
    /**
     * Get an existing FgsApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FgsApplicationState, opts?: pulumi.CustomResourceOptions): FgsApplication {
        return new FgsApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/fgsApplication:FgsApplication';

    /**
     * Returns true if the given object is an instance of FgsApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FgsApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FgsApplication.__pulumiType;
    }

    /**
     * Specifies the agency name used by the application.  
     * Changing this parameter will create a new resource.
     *
     * > If omitted, the service will automatically create an agency, please ensure that the tenant has IAM related
     * permissions. The agency will be deleted when the application is deleted.
     */
    public readonly agencyName!: pulumi.Output<string | undefined>;
    /**
     * Specifies the description of the application.  
     * The description can contain a maximum of `1,024` characters.
     * Changing this parameter will create a new resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the application name.  
     * The name can contain a maximum of 60 characters and must start with a letter and end with a letter or digit.
     * Only letters, digits, underscores (_) and hyphens (-) are allowed.
     * Changing this parameter will create a new resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the template parameters, in JSON format.  
     * Changing this parameter will create a new resource.
     */
    public readonly params!: pulumi.Output<string | undefined>;
    /**
     * Specifies the region in which to create an application.  
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The repository information.  
     * The repository structure is documented below.
     */
    public /*out*/ readonly repositories!: pulumi.Output<outputs.FgsApplicationRepository[]>;
    /**
     * The ID of the stack where the application is deployed.
     */
    public /*out*/ readonly stackId!: pulumi.Output<string>;
    /**
     * The list of the stack resources information.  
     * The stackResources structure is documented below.
     */
    public /*out*/ readonly stackResources!: pulumi.Output<outputs.FgsApplicationStackResource[]>;
    /**
     * The repository status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the ID of the template used by the application.  
     * Changing this parameter will create a new resource.
     */
    public readonly templateId!: pulumi.Output<string | undefined>;

    /**
     * Create a FgsApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FgsApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FgsApplicationArgs | FgsApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FgsApplicationState | undefined;
            resourceInputs["agencyName"] = state ? state.agencyName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["params"] = state ? state.params : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["repositories"] = state ? state.repositories : undefined;
            resourceInputs["stackId"] = state ? state.stackId : undefined;
            resourceInputs["stackResources"] = state ? state.stackResources : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
        } else {
            const args = argsOrState as FgsApplicationArgs | undefined;
            resourceInputs["agencyName"] = args ? args.agencyName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["params"] = args ? args.params : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["repositories"] = undefined /*out*/;
            resourceInputs["stackId"] = undefined /*out*/;
            resourceInputs["stackResources"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FgsApplication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FgsApplication resources.
 */
export interface FgsApplicationState {
    /**
     * Specifies the agency name used by the application.  
     * Changing this parameter will create a new resource.
     *
     * > If omitted, the service will automatically create an agency, please ensure that the tenant has IAM related
     * permissions. The agency will be deleted when the application is deleted.
     */
    agencyName?: pulumi.Input<string>;
    /**
     * Specifies the description of the application.  
     * The description can contain a maximum of `1,024` characters.
     * Changing this parameter will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the application name.  
     * The name can contain a maximum of 60 characters and must start with a letter and end with a letter or digit.
     * Only letters, digits, underscores (_) and hyphens (-) are allowed.
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the template parameters, in JSON format.  
     * Changing this parameter will create a new resource.
     */
    params?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create an application.  
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The repository information.  
     * The repository structure is documented below.
     */
    repositories?: pulumi.Input<pulumi.Input<inputs.FgsApplicationRepository>[]>;
    /**
     * The ID of the stack where the application is deployed.
     */
    stackId?: pulumi.Input<string>;
    /**
     * The list of the stack resources information.  
     * The stackResources structure is documented below.
     */
    stackResources?: pulumi.Input<pulumi.Input<inputs.FgsApplicationStackResource>[]>;
    /**
     * The repository status.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the ID of the template used by the application.  
     * Changing this parameter will create a new resource.
     */
    templateId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FgsApplication resource.
 */
export interface FgsApplicationArgs {
    /**
     * Specifies the agency name used by the application.  
     * Changing this parameter will create a new resource.
     *
     * > If omitted, the service will automatically create an agency, please ensure that the tenant has IAM related
     * permissions. The agency will be deleted when the application is deleted.
     */
    agencyName?: pulumi.Input<string>;
    /**
     * Specifies the description of the application.  
     * The description can contain a maximum of `1,024` characters.
     * Changing this parameter will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the application name.  
     * The name can contain a maximum of 60 characters and must start with a letter and end with a letter or digit.
     * Only letters, digits, underscores (_) and hyphens (-) are allowed.
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the template parameters, in JSON format.  
     * Changing this parameter will create a new resource.
     */
    params?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create an application.  
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the template used by the application.  
     * Changing this parameter will create a new resource.
     */
    templateId?: pulumi.Input<string>;
}
