// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functiongraph

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a Function resource within SberCloud.
//
// ## Example Usage
//
// ### With base64 func code
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/functiongraph"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := functiongraph.NewFunction(ctx, "f_1", &functiongraph.FunctionArgs{
//				Name:        pulumi.String("func_1"),
//				App:         pulumi.String("default"),
//				Agency:      pulumi.String("test"),
//				Description: pulumi.String("fuction test"),
//				Handler:     pulumi.String("test.handler"),
//				MemorySize:  pulumi.Int(128),
//				Timeout:     pulumi.Int(3),
//				Runtime:     pulumi.String("Python2.7"),
//				CodeType:    pulumi.String("inline"),
//				FuncCode:    pulumi.String("aW1wb3J0IGpzb24KZGVmIGhhbmRsZXIgKGV2ZW50LCBjb250ZXh0KToKICAgIG91dHB1dCA9ICdIZWxsbyBtZXNzYWdlOiAnICsganNvbi5kdW1wcyhldmVudCkKICAgIHJldHVybiBvdXRwdXQ="),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With text code
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/functiongraph"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := functiongraph.NewFunction(ctx, "f_1", &functiongraph.FunctionArgs{
//				Name:        pulumi.String("func_1"),
//				App:         pulumi.String("default"),
//				Agency:      pulumi.String("test"),
//				Description: pulumi.String("fuction test"),
//				Handler:     pulumi.String("test.handler"),
//				MemorySize:  pulumi.Int(128),
//				Timeout:     pulumi.Int(3),
//				Runtime:     pulumi.String("Python2.7"),
//				CodeType:    pulumi.String("inline"),
//				FuncCode: pulumi.String(`# -*- coding:utf-8 -*-
//
// import json
// def handler (event, context):
//
//	return {
//	    "statusCode": 200,
//	    "isBase64Encoded": False,
//	    "body": json.dumps(event),
//	    "headers": {
//	        "Content-Type": "application/json"
//	    }
//	}
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Functions can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import sbercloud:FunctionGraph/function:Function my-func 7117d38e-4c8f-4624-a505-bd96b97d024c
// ```
type Function struct {
	pulumi.CustomResourceState

	// Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
	Agency pulumi.StringPtrOutput `pulumi:"agency"`
	// Specifies the group to which the function belongs.
	App pulumi.StringPtrOutput `pulumi:"app"`
	// Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
	AppAgency pulumi.StringOutput `pulumi:"appAgency"`
	// The KMS key ID for encrypting the function code.
	CodeEncryptKmsKeyId pulumi.StringPtrOutput `pulumi:"codeEncryptKmsKeyId"`
	// Specifies the name of a function file, This field is mandatory only when coeType is
	// set to jar or zip.
	CodeFilename pulumi.StringOutput `pulumi:"codeFilename"`
	// Specifies the function code type, which can be inline: inline code, zip: ZIP file,
	// jar: JAR file or java functions, obs: function code stored in an OBS bucket.
	CodeType pulumi.StringOutput `pulumi:"codeType"`
	// Specifies the code url. This parameter is mandatory when codeType is set to obs.
	CodeUrl pulumi.StringPtrOutput `pulumi:"codeUrl"`
	// The number of concurrent requests of the function.
	ConcurrencyNum pulumi.IntOutput `pulumi:"concurrencyNum"`
	// The custom image configuration of the function.
	CustomImage FunctionCustomImageOutput `pulumi:"customImage"`
	// Specifies the dependencies of the function.
	DependLists pulumi.StringArrayOutput `pulumi:"dependLists"`
	// Specifies the description of the function.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The private DNS configuration of the function network.
	DnsList pulumi.StringOutput `pulumi:"dnsList"`
	// Whether the authentication in the request header is enabled.
	EnableAuthInHeader pulumi.BoolPtrOutput `pulumi:"enableAuthInHeader"`
	// Whether the class isolation is enabled for the JAVA runtime functions.
	EnableClassIsolation pulumi.BoolPtrOutput `pulumi:"enableClassIsolation"`
	// Whether the dynamic memory configuration is enabled.
	EnableDynamicMemory pulumi.BoolPtrOutput `pulumi:"enableDynamicMemory"`
	// Whether to enable the LTS log.
	EnableLtsLog pulumi.BoolPtrOutput `pulumi:"enableLtsLog"`
	// The key/value information defined to be encrypted for the function.
	EncryptedUserData pulumi.StringPtrOutput `pulumi:"encryptedUserData"`
	// Specifies the enterprise project id of the function.
	// Changing this creates a new function.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// The size of the function ephemeral storage.
	EphemeralStorage pulumi.IntOutput `pulumi:"ephemeralStorage"`
	// Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
	// and the code can be encoded using Base64 or just with the text code.
	FuncCode pulumi.StringPtrOutput `pulumi:"funcCode"`
	// Specifies the file system list. The `funcMounts` object structure is documented below.
	FuncMounts FunctionFuncMountArrayOutput `pulumi:"funcMounts"`
	// The description of the function.
	FunctiongraphVersion pulumi.StringOutput `pulumi:"functiongraphVersion"`
	// The GPU memory size allocated to the function, in MByte (MB).
	GpuMemory pulumi.IntPtrOutput `pulumi:"gpuMemory"`
	// The GPU type of the function.
	GpuType pulumi.StringPtrOutput `pulumi:"gpuType"`
	// Specifies the entry point of the function.
	Handler pulumi.StringOutput `pulumi:"handler"`
	// The heartbeat handler of the function.
	HeartbeatHandler pulumi.StringPtrOutput `pulumi:"heartbeatHandler"`
	// Specifies the initializer of the function.
	InitializerHandler pulumi.StringOutput `pulumi:"initializerHandler"`
	// Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
	InitializerTimeout pulumi.IntOutput `pulumi:"initializerTimeout"`
	// Whether the function is a stateful function.
	IsStatefulFunction pulumi.BoolPtrOutput `pulumi:"isStatefulFunction"`
	// The LTS group ID for collecting logs.
	LogGroupId pulumi.StringOutput `pulumi:"logGroupId"`
	// The LTS group name for collecting logs.
	LogGroupName pulumi.StringOutput `pulumi:"logGroupName"`
	// The LTS stream ID for collecting logs.
	LogStreamId pulumi.StringOutput `pulumi:"logStreamId"`
	// The LTS stream name for collecting logs.
	LogStreamName pulumi.StringOutput `pulumi:"logStreamName"`
	// The custom tags configuration that used to filter the LTS logs.
	LtsCustomTag pulumi.StringMapOutput `pulumi:"ltsCustomTag"`
	// The script configuration value of this change is also the original value used for comparison with
	//  the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'.
	LtsCustomTagOrigin pulumi.StringMapOutput `pulumi:"ltsCustomTagOrigin"`
	// The maximum number of instances of the function.
	MaxInstanceNum pulumi.StringOutput `pulumi:"maxInstanceNum"`
	// Specifies the memory size(MB) allocated to the function.
	MemorySize pulumi.IntOutput `pulumi:"memorySize"`
	// Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserGroupId pulumi.IntOutput `pulumi:"mountUserGroupId"`
	// Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserId pulumi.IntOutput `pulumi:"mountUserId"`
	// Specifies the name of the function.
	Name pulumi.StringOutput `pulumi:"name"`
	// The network configuration of the function.
	NetworkController FunctionNetworkControllerPtrOutput `pulumi:"networkController"`
	// Specifies the ID of subnet.
	NetworkId pulumi.StringPtrOutput `pulumi:"networkId"`
	// Deprecated: use app instead
	Package pulumi.StringPtrOutput `pulumi:"package"`
	// The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
	// CIDR blocks used by the service.
	PeeringCidr pulumi.StringPtrOutput `pulumi:"peeringCidr"`
	// The pre-stop handler of a function.
	PreStopHandler pulumi.StringPtrOutput `pulumi:"preStopHandler"`
	// The maximum duration that the function can be initialized.
	PreStopTimeout pulumi.IntPtrOutput `pulumi:"preStopTimeout"`
	// Specifies the region in which to create the Function resource.
	// If omitted, the provider-level region will be used. Changing this creates a new Function resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The reserved instance policies of the function.
	ReservedInstances FunctionReservedInstanceArrayOutput `pulumi:"reservedInstances"`
	// The restore hook handler of the function.
	RestoreHookHandler pulumi.StringPtrOutput `pulumi:"restoreHookHandler"`
	// The timeout of the function restore hook.
	RestoreHookTimeout pulumi.IntPtrOutput `pulumi:"restoreHookTimeout"`
	// Specifies the environment for executing the function.
	Runtime pulumi.StringOutput `pulumi:"runtime"`
	// The key/value pairs to associate with the function.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the timeout interval of the function, ranges from 3s to 900s.
	Timeout pulumi.IntOutput `pulumi:"timeout"`
	// Uniform Resource Name
	Urn pulumi.StringOutput `pulumi:"urn"`
	// The key/value information defined for the function.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// The KMS key ID for encrypting the user data.
	UserDataEncryptKmsKeyId pulumi.StringPtrOutput `pulumi:"userDataEncryptKmsKeyId"`
	// The version of the function
	Version pulumi.StringOutput `pulumi:"version"`
	// The versions management of the function.
	Versions FunctionVersionArrayOutput `pulumi:"versions"`
	// Specifies the ID of VPC.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
	// Deprecated: use agency instead
	Xrole pulumi.StringPtrOutput `pulumi:"xrole"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MemorySize == nil {
		return nil, errors.New("invalid value for required argument 'MemorySize'")
	}
	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	if args.Timeout == nil {
		return nil, errors.New("invalid value for required argument 'Timeout'")
	}
	if args.EncryptedUserData != nil {
		args.EncryptedUserData = pulumi.ToSecret(args.EncryptedUserData).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"encryptedUserData",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Function
	err := ctx.RegisterResource("sbercloud:FunctionGraph/function:Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	var resource Function
	err := ctx.ReadResource("sbercloud:FunctionGraph/function:Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type functionState struct {
	// Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
	Agency *string `pulumi:"agency"`
	// Specifies the group to which the function belongs.
	App *string `pulumi:"app"`
	// Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
	AppAgency *string `pulumi:"appAgency"`
	// The KMS key ID for encrypting the function code.
	CodeEncryptKmsKeyId *string `pulumi:"codeEncryptKmsKeyId"`
	// Specifies the name of a function file, This field is mandatory only when coeType is
	// set to jar or zip.
	CodeFilename *string `pulumi:"codeFilename"`
	// Specifies the function code type, which can be inline: inline code, zip: ZIP file,
	// jar: JAR file or java functions, obs: function code stored in an OBS bucket.
	CodeType *string `pulumi:"codeType"`
	// Specifies the code url. This parameter is mandatory when codeType is set to obs.
	CodeUrl *string `pulumi:"codeUrl"`
	// The number of concurrent requests of the function.
	ConcurrencyNum *int `pulumi:"concurrencyNum"`
	// The custom image configuration of the function.
	CustomImage *FunctionCustomImage `pulumi:"customImage"`
	// Specifies the dependencies of the function.
	DependLists []string `pulumi:"dependLists"`
	// Specifies the description of the function.
	Description *string `pulumi:"description"`
	// The private DNS configuration of the function network.
	DnsList *string `pulumi:"dnsList"`
	// Whether the authentication in the request header is enabled.
	EnableAuthInHeader *bool `pulumi:"enableAuthInHeader"`
	// Whether the class isolation is enabled for the JAVA runtime functions.
	EnableClassIsolation *bool `pulumi:"enableClassIsolation"`
	// Whether the dynamic memory configuration is enabled.
	EnableDynamicMemory *bool `pulumi:"enableDynamicMemory"`
	// Whether to enable the LTS log.
	EnableLtsLog *bool `pulumi:"enableLtsLog"`
	// The key/value information defined to be encrypted for the function.
	EncryptedUserData *string `pulumi:"encryptedUserData"`
	// Specifies the enterprise project id of the function.
	// Changing this creates a new function.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The size of the function ephemeral storage.
	EphemeralStorage *int `pulumi:"ephemeralStorage"`
	// Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
	// and the code can be encoded using Base64 or just with the text code.
	FuncCode *string `pulumi:"funcCode"`
	// Specifies the file system list. The `funcMounts` object structure is documented below.
	FuncMounts []FunctionFuncMount `pulumi:"funcMounts"`
	// The description of the function.
	FunctiongraphVersion *string `pulumi:"functiongraphVersion"`
	// The GPU memory size allocated to the function, in MByte (MB).
	GpuMemory *int `pulumi:"gpuMemory"`
	// The GPU type of the function.
	GpuType *string `pulumi:"gpuType"`
	// Specifies the entry point of the function.
	Handler *string `pulumi:"handler"`
	// The heartbeat handler of the function.
	HeartbeatHandler *string `pulumi:"heartbeatHandler"`
	// Specifies the initializer of the function.
	InitializerHandler *string `pulumi:"initializerHandler"`
	// Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
	InitializerTimeout *int `pulumi:"initializerTimeout"`
	// Whether the function is a stateful function.
	IsStatefulFunction *bool `pulumi:"isStatefulFunction"`
	// The LTS group ID for collecting logs.
	LogGroupId *string `pulumi:"logGroupId"`
	// The LTS group name for collecting logs.
	LogGroupName *string `pulumi:"logGroupName"`
	// The LTS stream ID for collecting logs.
	LogStreamId *string `pulumi:"logStreamId"`
	// The LTS stream name for collecting logs.
	LogStreamName *string `pulumi:"logStreamName"`
	// The custom tags configuration that used to filter the LTS logs.
	LtsCustomTag map[string]string `pulumi:"ltsCustomTag"`
	// The script configuration value of this change is also the original value used for comparison with
	//  the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'.
	LtsCustomTagOrigin map[string]string `pulumi:"ltsCustomTagOrigin"`
	// The maximum number of instances of the function.
	MaxInstanceNum *string `pulumi:"maxInstanceNum"`
	// Specifies the memory size(MB) allocated to the function.
	MemorySize *int `pulumi:"memorySize"`
	// Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserGroupId *int `pulumi:"mountUserGroupId"`
	// Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserId *int `pulumi:"mountUserId"`
	// Specifies the name of the function.
	Name *string `pulumi:"name"`
	// The network configuration of the function.
	NetworkController *FunctionNetworkController `pulumi:"networkController"`
	// Specifies the ID of subnet.
	NetworkId *string `pulumi:"networkId"`
	// Deprecated: use app instead
	Package *string `pulumi:"package"`
	// The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
	// CIDR blocks used by the service.
	PeeringCidr *string `pulumi:"peeringCidr"`
	// The pre-stop handler of a function.
	PreStopHandler *string `pulumi:"preStopHandler"`
	// The maximum duration that the function can be initialized.
	PreStopTimeout *int `pulumi:"preStopTimeout"`
	// Specifies the region in which to create the Function resource.
	// If omitted, the provider-level region will be used. Changing this creates a new Function resource.
	Region *string `pulumi:"region"`
	// The reserved instance policies of the function.
	ReservedInstances []FunctionReservedInstance `pulumi:"reservedInstances"`
	// The restore hook handler of the function.
	RestoreHookHandler *string `pulumi:"restoreHookHandler"`
	// The timeout of the function restore hook.
	RestoreHookTimeout *int `pulumi:"restoreHookTimeout"`
	// Specifies the environment for executing the function.
	Runtime *string `pulumi:"runtime"`
	// The key/value pairs to associate with the function.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the timeout interval of the function, ranges from 3s to 900s.
	Timeout *int `pulumi:"timeout"`
	// Uniform Resource Name
	Urn *string `pulumi:"urn"`
	// The key/value information defined for the function.
	UserData *string `pulumi:"userData"`
	// The KMS key ID for encrypting the user data.
	UserDataEncryptKmsKeyId *string `pulumi:"userDataEncryptKmsKeyId"`
	// The version of the function
	Version *string `pulumi:"version"`
	// The versions management of the function.
	Versions []FunctionVersion `pulumi:"versions"`
	// Specifies the ID of VPC.
	VpcId *string `pulumi:"vpcId"`
	// Deprecated: use agency instead
	Xrole *string `pulumi:"xrole"`
}

type FunctionState struct {
	// Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
	Agency pulumi.StringPtrInput
	// Specifies the group to which the function belongs.
	App pulumi.StringPtrInput
	// Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
	AppAgency pulumi.StringPtrInput
	// The KMS key ID for encrypting the function code.
	CodeEncryptKmsKeyId pulumi.StringPtrInput
	// Specifies the name of a function file, This field is mandatory only when coeType is
	// set to jar or zip.
	CodeFilename pulumi.StringPtrInput
	// Specifies the function code type, which can be inline: inline code, zip: ZIP file,
	// jar: JAR file or java functions, obs: function code stored in an OBS bucket.
	CodeType pulumi.StringPtrInput
	// Specifies the code url. This parameter is mandatory when codeType is set to obs.
	CodeUrl pulumi.StringPtrInput
	// The number of concurrent requests of the function.
	ConcurrencyNum pulumi.IntPtrInput
	// The custom image configuration of the function.
	CustomImage FunctionCustomImagePtrInput
	// Specifies the dependencies of the function.
	DependLists pulumi.StringArrayInput
	// Specifies the description of the function.
	Description pulumi.StringPtrInput
	// The private DNS configuration of the function network.
	DnsList pulumi.StringPtrInput
	// Whether the authentication in the request header is enabled.
	EnableAuthInHeader pulumi.BoolPtrInput
	// Whether the class isolation is enabled for the JAVA runtime functions.
	EnableClassIsolation pulumi.BoolPtrInput
	// Whether the dynamic memory configuration is enabled.
	EnableDynamicMemory pulumi.BoolPtrInput
	// Whether to enable the LTS log.
	EnableLtsLog pulumi.BoolPtrInput
	// The key/value information defined to be encrypted for the function.
	EncryptedUserData pulumi.StringPtrInput
	// Specifies the enterprise project id of the function.
	// Changing this creates a new function.
	EnterpriseProjectId pulumi.StringPtrInput
	// The size of the function ephemeral storage.
	EphemeralStorage pulumi.IntPtrInput
	// Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
	// and the code can be encoded using Base64 or just with the text code.
	FuncCode pulumi.StringPtrInput
	// Specifies the file system list. The `funcMounts` object structure is documented below.
	FuncMounts FunctionFuncMountArrayInput
	// The description of the function.
	FunctiongraphVersion pulumi.StringPtrInput
	// The GPU memory size allocated to the function, in MByte (MB).
	GpuMemory pulumi.IntPtrInput
	// The GPU type of the function.
	GpuType pulumi.StringPtrInput
	// Specifies the entry point of the function.
	Handler pulumi.StringPtrInput
	// The heartbeat handler of the function.
	HeartbeatHandler pulumi.StringPtrInput
	// Specifies the initializer of the function.
	InitializerHandler pulumi.StringPtrInput
	// Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
	InitializerTimeout pulumi.IntPtrInput
	// Whether the function is a stateful function.
	IsStatefulFunction pulumi.BoolPtrInput
	// The LTS group ID for collecting logs.
	LogGroupId pulumi.StringPtrInput
	// The LTS group name for collecting logs.
	LogGroupName pulumi.StringPtrInput
	// The LTS stream ID for collecting logs.
	LogStreamId pulumi.StringPtrInput
	// The LTS stream name for collecting logs.
	LogStreamName pulumi.StringPtrInput
	// The custom tags configuration that used to filter the LTS logs.
	LtsCustomTag pulumi.StringMapInput
	// The script configuration value of this change is also the original value used for comparison with
	//  the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'.
	LtsCustomTagOrigin pulumi.StringMapInput
	// The maximum number of instances of the function.
	MaxInstanceNum pulumi.StringPtrInput
	// Specifies the memory size(MB) allocated to the function.
	MemorySize pulumi.IntPtrInput
	// Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserGroupId pulumi.IntPtrInput
	// Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserId pulumi.IntPtrInput
	// Specifies the name of the function.
	Name pulumi.StringPtrInput
	// The network configuration of the function.
	NetworkController FunctionNetworkControllerPtrInput
	// Specifies the ID of subnet.
	NetworkId pulumi.StringPtrInput
	// Deprecated: use app instead
	Package pulumi.StringPtrInput
	// The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
	// CIDR blocks used by the service.
	PeeringCidr pulumi.StringPtrInput
	// The pre-stop handler of a function.
	PreStopHandler pulumi.StringPtrInput
	// The maximum duration that the function can be initialized.
	PreStopTimeout pulumi.IntPtrInput
	// Specifies the region in which to create the Function resource.
	// If omitted, the provider-level region will be used. Changing this creates a new Function resource.
	Region pulumi.StringPtrInput
	// The reserved instance policies of the function.
	ReservedInstances FunctionReservedInstanceArrayInput
	// The restore hook handler of the function.
	RestoreHookHandler pulumi.StringPtrInput
	// The timeout of the function restore hook.
	RestoreHookTimeout pulumi.IntPtrInput
	// Specifies the environment for executing the function.
	Runtime pulumi.StringPtrInput
	// The key/value pairs to associate with the function.
	Tags pulumi.StringMapInput
	// Specifies the timeout interval of the function, ranges from 3s to 900s.
	Timeout pulumi.IntPtrInput
	// Uniform Resource Name
	Urn pulumi.StringPtrInput
	// The key/value information defined for the function.
	UserData pulumi.StringPtrInput
	// The KMS key ID for encrypting the user data.
	UserDataEncryptKmsKeyId pulumi.StringPtrInput
	// The version of the function
	Version pulumi.StringPtrInput
	// The versions management of the function.
	Versions FunctionVersionArrayInput
	// Specifies the ID of VPC.
	VpcId pulumi.StringPtrInput
	// Deprecated: use agency instead
	Xrole pulumi.StringPtrInput
}

func (FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionState)(nil)).Elem()
}

type functionArgs struct {
	// Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
	Agency *string `pulumi:"agency"`
	// Specifies the group to which the function belongs.
	App *string `pulumi:"app"`
	// Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
	AppAgency *string `pulumi:"appAgency"`
	// The KMS key ID for encrypting the function code.
	CodeEncryptKmsKeyId *string `pulumi:"codeEncryptKmsKeyId"`
	// Specifies the name of a function file, This field is mandatory only when coeType is
	// set to jar or zip.
	CodeFilename *string `pulumi:"codeFilename"`
	// Specifies the function code type, which can be inline: inline code, zip: ZIP file,
	// jar: JAR file or java functions, obs: function code stored in an OBS bucket.
	CodeType *string `pulumi:"codeType"`
	// Specifies the code url. This parameter is mandatory when codeType is set to obs.
	CodeUrl *string `pulumi:"codeUrl"`
	// The number of concurrent requests of the function.
	ConcurrencyNum *int `pulumi:"concurrencyNum"`
	// The custom image configuration of the function.
	CustomImage *FunctionCustomImage `pulumi:"customImage"`
	// Specifies the dependencies of the function.
	DependLists []string `pulumi:"dependLists"`
	// Specifies the description of the function.
	Description *string `pulumi:"description"`
	// The private DNS configuration of the function network.
	DnsList *string `pulumi:"dnsList"`
	// Whether the authentication in the request header is enabled.
	EnableAuthInHeader *bool `pulumi:"enableAuthInHeader"`
	// Whether the class isolation is enabled for the JAVA runtime functions.
	EnableClassIsolation *bool `pulumi:"enableClassIsolation"`
	// Whether the dynamic memory configuration is enabled.
	EnableDynamicMemory *bool `pulumi:"enableDynamicMemory"`
	// Whether to enable the LTS log.
	EnableLtsLog *bool `pulumi:"enableLtsLog"`
	// The key/value information defined to be encrypted for the function.
	EncryptedUserData *string `pulumi:"encryptedUserData"`
	// Specifies the enterprise project id of the function.
	// Changing this creates a new function.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The size of the function ephemeral storage.
	EphemeralStorage *int `pulumi:"ephemeralStorage"`
	// Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
	// and the code can be encoded using Base64 or just with the text code.
	FuncCode *string `pulumi:"funcCode"`
	// Specifies the file system list. The `funcMounts` object structure is documented below.
	FuncMounts []FunctionFuncMount `pulumi:"funcMounts"`
	// The description of the function.
	FunctiongraphVersion *string `pulumi:"functiongraphVersion"`
	// The GPU memory size allocated to the function, in MByte (MB).
	GpuMemory *int `pulumi:"gpuMemory"`
	// The GPU type of the function.
	GpuType *string `pulumi:"gpuType"`
	// Specifies the entry point of the function.
	Handler *string `pulumi:"handler"`
	// The heartbeat handler of the function.
	HeartbeatHandler *string `pulumi:"heartbeatHandler"`
	// Specifies the initializer of the function.
	InitializerHandler *string `pulumi:"initializerHandler"`
	// Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
	InitializerTimeout *int `pulumi:"initializerTimeout"`
	// Whether the function is a stateful function.
	IsStatefulFunction *bool `pulumi:"isStatefulFunction"`
	// The LTS group ID for collecting logs.
	LogGroupId *string `pulumi:"logGroupId"`
	// The LTS group name for collecting logs.
	LogGroupName *string `pulumi:"logGroupName"`
	// The LTS stream ID for collecting logs.
	LogStreamId *string `pulumi:"logStreamId"`
	// The LTS stream name for collecting logs.
	LogStreamName *string `pulumi:"logStreamName"`
	// The custom tags configuration that used to filter the LTS logs.
	LtsCustomTag map[string]string `pulumi:"ltsCustomTag"`
	// The maximum number of instances of the function.
	MaxInstanceNum *string `pulumi:"maxInstanceNum"`
	// Specifies the memory size(MB) allocated to the function.
	MemorySize int `pulumi:"memorySize"`
	// Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserGroupId *int `pulumi:"mountUserGroupId"`
	// Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserId *int `pulumi:"mountUserId"`
	// Specifies the name of the function.
	Name *string `pulumi:"name"`
	// The network configuration of the function.
	NetworkController *FunctionNetworkController `pulumi:"networkController"`
	// Specifies the ID of subnet.
	NetworkId *string `pulumi:"networkId"`
	// Deprecated: use app instead
	Package *string `pulumi:"package"`
	// The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
	// CIDR blocks used by the service.
	PeeringCidr *string `pulumi:"peeringCidr"`
	// The pre-stop handler of a function.
	PreStopHandler *string `pulumi:"preStopHandler"`
	// The maximum duration that the function can be initialized.
	PreStopTimeout *int `pulumi:"preStopTimeout"`
	// Specifies the region in which to create the Function resource.
	// If omitted, the provider-level region will be used. Changing this creates a new Function resource.
	Region *string `pulumi:"region"`
	// The reserved instance policies of the function.
	ReservedInstances []FunctionReservedInstance `pulumi:"reservedInstances"`
	// The restore hook handler of the function.
	RestoreHookHandler *string `pulumi:"restoreHookHandler"`
	// The timeout of the function restore hook.
	RestoreHookTimeout *int `pulumi:"restoreHookTimeout"`
	// Specifies the environment for executing the function.
	Runtime string `pulumi:"runtime"`
	// The key/value pairs to associate with the function.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the timeout interval of the function, ranges from 3s to 900s.
	Timeout int `pulumi:"timeout"`
	// The key/value information defined for the function.
	UserData *string `pulumi:"userData"`
	// The KMS key ID for encrypting the user data.
	UserDataEncryptKmsKeyId *string `pulumi:"userDataEncryptKmsKeyId"`
	// The versions management of the function.
	Versions []FunctionVersion `pulumi:"versions"`
	// Specifies the ID of VPC.
	VpcId *string `pulumi:"vpcId"`
	// Deprecated: use agency instead
	Xrole *string `pulumi:"xrole"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
	Agency pulumi.StringPtrInput
	// Specifies the group to which the function belongs.
	App pulumi.StringPtrInput
	// Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
	AppAgency pulumi.StringPtrInput
	// The KMS key ID for encrypting the function code.
	CodeEncryptKmsKeyId pulumi.StringPtrInput
	// Specifies the name of a function file, This field is mandatory only when coeType is
	// set to jar or zip.
	CodeFilename pulumi.StringPtrInput
	// Specifies the function code type, which can be inline: inline code, zip: ZIP file,
	// jar: JAR file or java functions, obs: function code stored in an OBS bucket.
	CodeType pulumi.StringPtrInput
	// Specifies the code url. This parameter is mandatory when codeType is set to obs.
	CodeUrl pulumi.StringPtrInput
	// The number of concurrent requests of the function.
	ConcurrencyNum pulumi.IntPtrInput
	// The custom image configuration of the function.
	CustomImage FunctionCustomImagePtrInput
	// Specifies the dependencies of the function.
	DependLists pulumi.StringArrayInput
	// Specifies the description of the function.
	Description pulumi.StringPtrInput
	// The private DNS configuration of the function network.
	DnsList pulumi.StringPtrInput
	// Whether the authentication in the request header is enabled.
	EnableAuthInHeader pulumi.BoolPtrInput
	// Whether the class isolation is enabled for the JAVA runtime functions.
	EnableClassIsolation pulumi.BoolPtrInput
	// Whether the dynamic memory configuration is enabled.
	EnableDynamicMemory pulumi.BoolPtrInput
	// Whether to enable the LTS log.
	EnableLtsLog pulumi.BoolPtrInput
	// The key/value information defined to be encrypted for the function.
	EncryptedUserData pulumi.StringPtrInput
	// Specifies the enterprise project id of the function.
	// Changing this creates a new function.
	EnterpriseProjectId pulumi.StringPtrInput
	// The size of the function ephemeral storage.
	EphemeralStorage pulumi.IntPtrInput
	// Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
	// and the code can be encoded using Base64 or just with the text code.
	FuncCode pulumi.StringPtrInput
	// Specifies the file system list. The `funcMounts` object structure is documented below.
	FuncMounts FunctionFuncMountArrayInput
	// The description of the function.
	FunctiongraphVersion pulumi.StringPtrInput
	// The GPU memory size allocated to the function, in MByte (MB).
	GpuMemory pulumi.IntPtrInput
	// The GPU type of the function.
	GpuType pulumi.StringPtrInput
	// Specifies the entry point of the function.
	Handler pulumi.StringPtrInput
	// The heartbeat handler of the function.
	HeartbeatHandler pulumi.StringPtrInput
	// Specifies the initializer of the function.
	InitializerHandler pulumi.StringPtrInput
	// Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
	InitializerTimeout pulumi.IntPtrInput
	// Whether the function is a stateful function.
	IsStatefulFunction pulumi.BoolPtrInput
	// The LTS group ID for collecting logs.
	LogGroupId pulumi.StringPtrInput
	// The LTS group name for collecting logs.
	LogGroupName pulumi.StringPtrInput
	// The LTS stream ID for collecting logs.
	LogStreamId pulumi.StringPtrInput
	// The LTS stream name for collecting logs.
	LogStreamName pulumi.StringPtrInput
	// The custom tags configuration that used to filter the LTS logs.
	LtsCustomTag pulumi.StringMapInput
	// The maximum number of instances of the function.
	MaxInstanceNum pulumi.StringPtrInput
	// Specifies the memory size(MB) allocated to the function.
	MemorySize pulumi.IntInput
	// Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserGroupId pulumi.IntPtrInput
	// Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
	MountUserId pulumi.IntPtrInput
	// Specifies the name of the function.
	Name pulumi.StringPtrInput
	// The network configuration of the function.
	NetworkController FunctionNetworkControllerPtrInput
	// Specifies the ID of subnet.
	NetworkId pulumi.StringPtrInput
	// Deprecated: use app instead
	Package pulumi.StringPtrInput
	// The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
	// CIDR blocks used by the service.
	PeeringCidr pulumi.StringPtrInput
	// The pre-stop handler of a function.
	PreStopHandler pulumi.StringPtrInput
	// The maximum duration that the function can be initialized.
	PreStopTimeout pulumi.IntPtrInput
	// Specifies the region in which to create the Function resource.
	// If omitted, the provider-level region will be used. Changing this creates a new Function resource.
	Region pulumi.StringPtrInput
	// The reserved instance policies of the function.
	ReservedInstances FunctionReservedInstanceArrayInput
	// The restore hook handler of the function.
	RestoreHookHandler pulumi.StringPtrInput
	// The timeout of the function restore hook.
	RestoreHookTimeout pulumi.IntPtrInput
	// Specifies the environment for executing the function.
	Runtime pulumi.StringInput
	// The key/value pairs to associate with the function.
	Tags pulumi.StringMapInput
	// Specifies the timeout interval of the function, ranges from 3s to 900s.
	Timeout pulumi.IntInput
	// The key/value information defined for the function.
	UserData pulumi.StringPtrInput
	// The KMS key ID for encrypting the user data.
	UserDataEncryptKmsKeyId pulumi.StringPtrInput
	// The versions management of the function.
	Versions FunctionVersionArrayInput
	// Specifies the ID of VPC.
	VpcId pulumi.StringPtrInput
	// Deprecated: use agency instead
	Xrole pulumi.StringPtrInput
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionArgs)(nil)).Elem()
}

type FunctionInput interface {
	pulumi.Input

	ToFunctionOutput() FunctionOutput
	ToFunctionOutputWithContext(ctx context.Context) FunctionOutput
}

func (*Function) ElementType() reflect.Type {
	return reflect.TypeOf((**Function)(nil)).Elem()
}

func (i *Function) ToFunctionOutput() FunctionOutput {
	return i.ToFunctionOutputWithContext(context.Background())
}

func (i *Function) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutput)
}

// FunctionArrayInput is an input type that accepts FunctionArray and FunctionArrayOutput values.
// You can construct a concrete instance of `FunctionArrayInput` via:
//
//	FunctionArray{ FunctionArgs{...} }
type FunctionArrayInput interface {
	pulumi.Input

	ToFunctionArrayOutput() FunctionArrayOutput
	ToFunctionArrayOutputWithContext(context.Context) FunctionArrayOutput
}

type FunctionArray []FunctionInput

func (FunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Function)(nil)).Elem()
}

func (i FunctionArray) ToFunctionArrayOutput() FunctionArrayOutput {
	return i.ToFunctionArrayOutputWithContext(context.Background())
}

func (i FunctionArray) ToFunctionArrayOutputWithContext(ctx context.Context) FunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionArrayOutput)
}

// FunctionMapInput is an input type that accepts FunctionMap and FunctionMapOutput values.
// You can construct a concrete instance of `FunctionMapInput` via:
//
//	FunctionMap{ "key": FunctionArgs{...} }
type FunctionMapInput interface {
	pulumi.Input

	ToFunctionMapOutput() FunctionMapOutput
	ToFunctionMapOutputWithContext(context.Context) FunctionMapOutput
}

type FunctionMap map[string]FunctionInput

func (FunctionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Function)(nil)).Elem()
}

func (i FunctionMap) ToFunctionMapOutput() FunctionMapOutput {
	return i.ToFunctionMapOutputWithContext(context.Background())
}

func (i FunctionMap) ToFunctionMapOutputWithContext(ctx context.Context) FunctionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionMapOutput)
}

type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

// Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
func (o FunctionOutput) Agency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.Agency }).(pulumi.StringPtrOutput)
}

// Specifies the group to which the function belongs.
func (o FunctionOutput) App() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.App }).(pulumi.StringPtrOutput)
}

// Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
func (o FunctionOutput) AppAgency() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.AppAgency }).(pulumi.StringOutput)
}

// The KMS key ID for encrypting the function code.
func (o FunctionOutput) CodeEncryptKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.CodeEncryptKmsKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the name of a function file, This field is mandatory only when coeType is
// set to jar or zip.
func (o FunctionOutput) CodeFilename() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.CodeFilename }).(pulumi.StringOutput)
}

// Specifies the function code type, which can be inline: inline code, zip: ZIP file,
// jar: JAR file or java functions, obs: function code stored in an OBS bucket.
func (o FunctionOutput) CodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.CodeType }).(pulumi.StringOutput)
}

// Specifies the code url. This parameter is mandatory when codeType is set to obs.
func (o FunctionOutput) CodeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.CodeUrl }).(pulumi.StringPtrOutput)
}

// The number of concurrent requests of the function.
func (o FunctionOutput) ConcurrencyNum() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.ConcurrencyNum }).(pulumi.IntOutput)
}

// The custom image configuration of the function.
func (o FunctionOutput) CustomImage() FunctionCustomImageOutput {
	return o.ApplyT(func(v *Function) FunctionCustomImageOutput { return v.CustomImage }).(FunctionCustomImageOutput)
}

// Specifies the dependencies of the function.
func (o FunctionOutput) DependLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Function) pulumi.StringArrayOutput { return v.DependLists }).(pulumi.StringArrayOutput)
}

// Specifies the description of the function.
func (o FunctionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The private DNS configuration of the function network.
func (o FunctionOutput) DnsList() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.DnsList }).(pulumi.StringOutput)
}

// Whether the authentication in the request header is enabled.
func (o FunctionOutput) EnableAuthInHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.BoolPtrOutput { return v.EnableAuthInHeader }).(pulumi.BoolPtrOutput)
}

// Whether the class isolation is enabled for the JAVA runtime functions.
func (o FunctionOutput) EnableClassIsolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.BoolPtrOutput { return v.EnableClassIsolation }).(pulumi.BoolPtrOutput)
}

// Whether the dynamic memory configuration is enabled.
func (o FunctionOutput) EnableDynamicMemory() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.BoolPtrOutput { return v.EnableDynamicMemory }).(pulumi.BoolPtrOutput)
}

// Whether to enable the LTS log.
func (o FunctionOutput) EnableLtsLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.BoolPtrOutput { return v.EnableLtsLog }).(pulumi.BoolPtrOutput)
}

// The key/value information defined to be encrypted for the function.
func (o FunctionOutput) EncryptedUserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.EncryptedUserData }).(pulumi.StringPtrOutput)
}

// Specifies the enterprise project id of the function.
// Changing this creates a new function.
func (o FunctionOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The size of the function ephemeral storage.
func (o FunctionOutput) EphemeralStorage() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.EphemeralStorage }).(pulumi.IntOutput)
}

// Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
// and the code can be encoded using Base64 or just with the text code.
func (o FunctionOutput) FuncCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.FuncCode }).(pulumi.StringPtrOutput)
}

// Specifies the file system list. The `funcMounts` object structure is documented below.
func (o FunctionOutput) FuncMounts() FunctionFuncMountArrayOutput {
	return o.ApplyT(func(v *Function) FunctionFuncMountArrayOutput { return v.FuncMounts }).(FunctionFuncMountArrayOutput)
}

// The description of the function.
func (o FunctionOutput) FunctiongraphVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.FunctiongraphVersion }).(pulumi.StringOutput)
}

// The GPU memory size allocated to the function, in MByte (MB).
func (o FunctionOutput) GpuMemory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.IntPtrOutput { return v.GpuMemory }).(pulumi.IntPtrOutput)
}

// The GPU type of the function.
func (o FunctionOutput) GpuType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.GpuType }).(pulumi.StringPtrOutput)
}

// Specifies the entry point of the function.
func (o FunctionOutput) Handler() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Handler }).(pulumi.StringOutput)
}

// The heartbeat handler of the function.
func (o FunctionOutput) HeartbeatHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.HeartbeatHandler }).(pulumi.StringPtrOutput)
}

// Specifies the initializer of the function.
func (o FunctionOutput) InitializerHandler() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.InitializerHandler }).(pulumi.StringOutput)
}

// Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
func (o FunctionOutput) InitializerTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.InitializerTimeout }).(pulumi.IntOutput)
}

// Whether the function is a stateful function.
func (o FunctionOutput) IsStatefulFunction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.BoolPtrOutput { return v.IsStatefulFunction }).(pulumi.BoolPtrOutput)
}

// The LTS group ID for collecting logs.
func (o FunctionOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.LogGroupId }).(pulumi.StringOutput)
}

// The LTS group name for collecting logs.
func (o FunctionOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.LogGroupName }).(pulumi.StringOutput)
}

// The LTS stream ID for collecting logs.
func (o FunctionOutput) LogStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.LogStreamId }).(pulumi.StringOutput)
}

// The LTS stream name for collecting logs.
func (o FunctionOutput) LogStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.LogStreamName }).(pulumi.StringOutput)
}

// The custom tags configuration that used to filter the LTS logs.
func (o FunctionOutput) LtsCustomTag() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Function) pulumi.StringMapOutput { return v.LtsCustomTag }).(pulumi.StringMapOutput)
}

// The script configuration value of this change is also the original value used for comparison with
//
//	the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'.
func (o FunctionOutput) LtsCustomTagOrigin() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Function) pulumi.StringMapOutput { return v.LtsCustomTagOrigin }).(pulumi.StringMapOutput)
}

// The maximum number of instances of the function.
func (o FunctionOutput) MaxInstanceNum() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.MaxInstanceNum }).(pulumi.StringOutput)
}

// Specifies the memory size(MB) allocated to the function.
func (o FunctionOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.MemorySize }).(pulumi.IntOutput)
}

// Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
func (o FunctionOutput) MountUserGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.MountUserGroupId }).(pulumi.IntOutput)
}

// Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
func (o FunctionOutput) MountUserId() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.MountUserId }).(pulumi.IntOutput)
}

// Specifies the name of the function.
func (o FunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The network configuration of the function.
func (o FunctionOutput) NetworkController() FunctionNetworkControllerPtrOutput {
	return o.ApplyT(func(v *Function) FunctionNetworkControllerPtrOutput { return v.NetworkController }).(FunctionNetworkControllerPtrOutput)
}

// Specifies the ID of subnet.
func (o FunctionOutput) NetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.NetworkId }).(pulumi.StringPtrOutput)
}

// Deprecated: use app instead
func (o FunctionOutput) Package() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.Package }).(pulumi.StringPtrOutput)
}

// The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
// CIDR blocks used by the service.
func (o FunctionOutput) PeeringCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.PeeringCidr }).(pulumi.StringPtrOutput)
}

// The pre-stop handler of a function.
func (o FunctionOutput) PreStopHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.PreStopHandler }).(pulumi.StringPtrOutput)
}

// The maximum duration that the function can be initialized.
func (o FunctionOutput) PreStopTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.IntPtrOutput { return v.PreStopTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the region in which to create the Function resource.
// If omitted, the provider-level region will be used. Changing this creates a new Function resource.
func (o FunctionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The reserved instance policies of the function.
func (o FunctionOutput) ReservedInstances() FunctionReservedInstanceArrayOutput {
	return o.ApplyT(func(v *Function) FunctionReservedInstanceArrayOutput { return v.ReservedInstances }).(FunctionReservedInstanceArrayOutput)
}

// The restore hook handler of the function.
func (o FunctionOutput) RestoreHookHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.RestoreHookHandler }).(pulumi.StringPtrOutput)
}

// The timeout of the function restore hook.
func (o FunctionOutput) RestoreHookTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.IntPtrOutput { return v.RestoreHookTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the environment for executing the function.
func (o FunctionOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

// The key/value pairs to associate with the function.
func (o FunctionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Function) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the timeout interval of the function, ranges from 3s to 900s.
func (o FunctionOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v *Function) pulumi.IntOutput { return v.Timeout }).(pulumi.IntOutput)
}

// Uniform Resource Name
func (o FunctionOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Urn }).(pulumi.StringOutput)
}

// The key/value information defined for the function.
func (o FunctionOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

// The KMS key ID for encrypting the user data.
func (o FunctionOutput) UserDataEncryptKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.UserDataEncryptKmsKeyId }).(pulumi.StringPtrOutput)
}

// The version of the function
func (o FunctionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The versions management of the function.
func (o FunctionOutput) Versions() FunctionVersionArrayOutput {
	return o.ApplyT(func(v *Function) FunctionVersionArrayOutput { return v.Versions }).(FunctionVersionArrayOutput)
}

// Specifies the ID of VPC.
func (o FunctionOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

// Deprecated: use agency instead
func (o FunctionOutput) Xrole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.StringPtrOutput { return v.Xrole }).(pulumi.StringPtrOutput)
}

type FunctionArrayOutput struct{ *pulumi.OutputState }

func (FunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Function)(nil)).Elem()
}

func (o FunctionArrayOutput) ToFunctionArrayOutput() FunctionArrayOutput {
	return o
}

func (o FunctionArrayOutput) ToFunctionArrayOutputWithContext(ctx context.Context) FunctionArrayOutput {
	return o
}

func (o FunctionArrayOutput) Index(i pulumi.IntInput) FunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Function {
		return vs[0].([]*Function)[vs[1].(int)]
	}).(FunctionOutput)
}

type FunctionMapOutput struct{ *pulumi.OutputState }

func (FunctionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Function)(nil)).Elem()
}

func (o FunctionMapOutput) ToFunctionMapOutput() FunctionMapOutput {
	return o
}

func (o FunctionMapOutput) ToFunctionMapOutputWithContext(ctx context.Context) FunctionMapOutput {
	return o
}

func (o FunctionMapOutput) MapIndex(k pulumi.StringInput) FunctionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Function {
		return vs[0].(map[string]*Function)[vs[1].(string)]
	}).(FunctionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionInput)(nil)).Elem(), &Function{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionArrayInput)(nil)).Elem(), FunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionMapInput)(nil)).Elem(), FunctionMap{})
	pulumi.RegisterOutputType(FunctionOutput{})
	pulumi.RegisterOutputType(FunctionArrayOutput{})
	pulumi.RegisterOutputType(FunctionMapOutput{})
}
