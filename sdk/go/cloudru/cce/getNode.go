// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func LookupNode(ctx *pulumi.Context, args *LookupNodeArgs, opts ...pulumi.InvokeOption) (*LookupNodeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNodeResult
	err := ctx.Invoke("sbercloud:Cce/getNode:getNode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNode.
type LookupNodeArgs struct {
	ClusterId string  `pulumi:"clusterId"`
	Name      *string `pulumi:"name"`
	NodeId    *string `pulumi:"nodeId"`
	Region    *string `pulumi:"region"`
	Status    *string `pulumi:"status"`
}

// A collection of values returned by getNode.
type LookupNodeResult struct {
	AvailabilityZone    string                  `pulumi:"availabilityZone"`
	BillingMode         int                     `pulumi:"billingMode"`
	ClusterId           string                  `pulumi:"clusterId"`
	DataVolumes         []GetNodeDataVolume     `pulumi:"dataVolumes"`
	EcsGroupId          string                  `pulumi:"ecsGroupId"`
	EnterpriseProjectId string                  `pulumi:"enterpriseProjectId"`
	FlavorId            string                  `pulumi:"flavorId"`
	HostnameConfigs     []GetNodeHostnameConfig `pulumi:"hostnameConfigs"`
	// The provider-assigned unique ID for this managed resource.
	Id          string              `pulumi:"id"`
	KeyPair     string              `pulumi:"keyPair"`
	Name        string              `pulumi:"name"`
	NodeId      string              `pulumi:"nodeId"`
	Os          string              `pulumi:"os"`
	PrivateIp   string              `pulumi:"privateIp"`
	PublicIp    string              `pulumi:"publicIp"`
	Region      string              `pulumi:"region"`
	RootVolumes []GetNodeRootVolume `pulumi:"rootVolumes"`
	ServerId    string              `pulumi:"serverId"`
	Status      string              `pulumi:"status"`
	SubnetId    string              `pulumi:"subnetId"`
	Tags        map[string]string   `pulumi:"tags"`
}

func LookupNodeOutput(ctx *pulumi.Context, args LookupNodeOutputArgs, opts ...pulumi.InvokeOption) LookupNodeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNodeResultOutput, error) {
			args := v.(LookupNodeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Cce/getNode:getNode", args, LookupNodeResultOutput{}, options).(LookupNodeResultOutput), nil
		}).(LookupNodeResultOutput)
}

// A collection of arguments for invoking getNode.
type LookupNodeOutputArgs struct {
	ClusterId pulumi.StringInput    `pulumi:"clusterId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	NodeId    pulumi.StringPtrInput `pulumi:"nodeId"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupNodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodeArgs)(nil)).Elem()
}

// A collection of values returned by getNode.
type LookupNodeResultOutput struct{ *pulumi.OutputState }

func (LookupNodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNodeResult)(nil)).Elem()
}

func (o LookupNodeResultOutput) ToLookupNodeResultOutput() LookupNodeResultOutput {
	return o
}

func (o LookupNodeResultOutput) ToLookupNodeResultOutputWithContext(ctx context.Context) LookupNodeResultOutput {
	return o
}

func (o LookupNodeResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNodeResult) int { return v.BillingMode }).(pulumi.IntOutput)
}

func (o LookupNodeResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) DataVolumes() GetNodeDataVolumeArrayOutput {
	return o.ApplyT(func(v LookupNodeResult) []GetNodeDataVolume { return v.DataVolumes }).(GetNodeDataVolumeArrayOutput)
}

func (o LookupNodeResultOutput) EcsGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.EcsGroupId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) HostnameConfigs() GetNodeHostnameConfigArrayOutput {
	return o.ApplyT(func(v LookupNodeResult) []GetNodeHostnameConfig { return v.HostnameConfigs }).(GetNodeHostnameConfigArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.KeyPair }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.NodeId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.Os }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) RootVolumes() GetNodeRootVolumeArrayOutput {
	return o.ApplyT(func(v LookupNodeResult) []GetNodeRootVolume { return v.RootVolumes }).(GetNodeRootVolumeArrayOutput)
}

func (o LookupNodeResultOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.ServerId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNodeResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o LookupNodeResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNodeResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNodeResultOutput{})
}
