// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get the list of RocketMQ topic access users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const topic = config.requireObject<any>("topic");
 * const test = sbercloud.getDmsRocketmqTopicAccessUsers({
 *     instanceId: instanceId,
 *     topic: topic,
 * });
 * ```
 */
export function getDmsRocketmqTopicAccessUsers(args: GetDmsRocketmqTopicAccessUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsRocketmqTopicAccessUsersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDmsRocketmqTopicAccessUsers:getDmsRocketmqTopicAccessUsers", {
        "instanceId": args.instanceId,
        "region": args.region,
        "topic": args.topic,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqTopicAccessUsers.
 */
export interface GetDmsRocketmqTopicAccessUsersArgs {
    /**
     * Specifies the instance ID.
     */
    instanceId: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the topic name.
     */
    topic: string;
}

/**
 * A collection of values returned by getDmsRocketmqTopicAccessUsers.
 */
export interface GetDmsRocketmqTopicAccessUsersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Indicates the user list.
     */
    readonly policies: outputs.GetDmsRocketmqTopicAccessUsersPolicy[];
    readonly region: string;
    readonly topic: string;
}
/**
 * Use this data source to get the list of RocketMQ topic access users.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const topic = config.requireObject<any>("topic");
 * const test = sbercloud.getDmsRocketmqTopicAccessUsers({
 *     instanceId: instanceId,
 *     topic: topic,
 * });
 * ```
 */
export function getDmsRocketmqTopicAccessUsersOutput(args: GetDmsRocketmqTopicAccessUsersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDmsRocketmqTopicAccessUsersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDmsRocketmqTopicAccessUsers:getDmsRocketmqTopicAccessUsers", {
        "instanceId": args.instanceId,
        "region": args.region,
        "topic": args.topic,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqTopicAccessUsers.
 */
export interface GetDmsRocketmqTopicAccessUsersOutputArgs {
    /**
     * Specifies the instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the topic name.
     */
    topic: pulumi.Input<string>;
}
