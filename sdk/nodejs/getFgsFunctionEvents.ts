// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFgsFunctionEvents(args: GetFgsFunctionEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetFgsFunctionEventsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:index/getFgsFunctionEvents:getFgsFunctionEvents", {
        "functionUrn": args.functionUrn,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFgsFunctionEvents.
 */
export interface GetFgsFunctionEventsArgs {
    functionUrn: string;
    region?: string;
}

/**
 * A collection of values returned by getFgsFunctionEvents.
 */
export interface GetFgsFunctionEventsResult {
    readonly events: outputs.GetFgsFunctionEventsEvent[];
    readonly functionUrn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
}
export function getFgsFunctionEventsOutput(args: GetFgsFunctionEventsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFgsFunctionEventsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:index/getFgsFunctionEvents:getFgsFunctionEvents", {
        "functionUrn": args.functionUrn,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFgsFunctionEvents.
 */
export interface GetFgsFunctionEventsOutputArgs {
    functionUrn: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
