// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of CFW protection rules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const objectId = config.requireObject<any>("objectId");
 * const name = config.requireObject<any>("name");
 * const test = sbercloud.Cfw.getProtectionRules({
 *     objectId: objectId,
 *     name: name,
 * });
 * ```
 */
export function getProtectionRules(args: GetProtectionRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetProtectionRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Cfw/getProtectionRules:getProtectionRules", {
        "actionType": args.actionType,
        "destination": args.destination,
        "direction": args.direction,
        "fwInstanceId": args.fwInstanceId,
        "name": args.name,
        "objectId": args.objectId,
        "region": args.region,
        "ruleId": args.ruleId,
        "source": args.source,
        "status": args.status,
        "tags": args.tags,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionRules.
 */
export interface GetProtectionRulesArgs {
    /**
     * Specifies the rule action type.
     * The options are as follows:
     * + **0**: allow;
     * + **1**: deny.
     */
    actionType?: string;
    /**
     * Specifies the destination address.
     */
    destination?: string;
    /**
     * Specifies the rule direction.
     * The options are as follows:
     * + **0**: inbound;
     * + **1**: outbound.
     */
    direction?: string;
    /**
     * Specifies the firewall instance ID.
     */
    fwInstanceId?: string;
    /**
     * Specifies the rule name.
     */
    name?: string;
    /**
     * Specifies the protected object ID.
     */
    objectId: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the rule ID.
     */
    ruleId?: string;
    /**
     * Specifies the source address.
     */
    source?: string;
    /**
     * Specifies the rule status.
     * The options are as follows:
     * + **0**: disabled;
     * + **1**: enabled.
     */
    status?: string;
    /**
     * Specifies the key/value pairs to associate with the protection rule.
     * Tags should have only one key/value pair.
     */
    tags?: {[key: string]: string};
    /**
     * Specifies the rule type.
     * The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
     */
    type?: string;
}

/**
 * A collection of values returned by getProtectionRules.
 */
export interface GetProtectionRulesResult {
    /**
     * The rule action type.
     */
    readonly actionType?: string;
    /**
     * The destination configuration.
     */
    readonly destination?: string;
    /**
     * The direction of a rule.
     */
    readonly direction?: string;
    readonly fwInstanceId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The custom service name.
     */
    readonly name?: string;
    readonly objectId: string;
    /**
     * The protection rule list.
     */
    readonly records: outputs.Cfw.GetProtectionRulesRecord[];
    readonly region: string;
    /**
     * The rule ID.
     */
    readonly ruleId?: string;
    /**
     * The source configuration.
     */
    readonly source?: string;
    /**
     * The rule status.
     */
    readonly status?: string;
    /**
     * The tag of a rule.
     */
    readonly tags?: {[key: string]: string};
    /**
     * The source type.
     */
    readonly type?: string;
}
/**
 * Use this data source to get the list of CFW protection rules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const objectId = config.requireObject<any>("objectId");
 * const name = config.requireObject<any>("name");
 * const test = sbercloud.Cfw.getProtectionRules({
 *     objectId: objectId,
 *     name: name,
 * });
 * ```
 */
export function getProtectionRulesOutput(args: GetProtectionRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProtectionRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Cfw/getProtectionRules:getProtectionRules", {
        "actionType": args.actionType,
        "destination": args.destination,
        "direction": args.direction,
        "fwInstanceId": args.fwInstanceId,
        "name": args.name,
        "objectId": args.objectId,
        "region": args.region,
        "ruleId": args.ruleId,
        "source": args.source,
        "status": args.status,
        "tags": args.tags,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionRules.
 */
export interface GetProtectionRulesOutputArgs {
    /**
     * Specifies the rule action type.
     * The options are as follows:
     * + **0**: allow;
     * + **1**: deny.
     */
    actionType?: pulumi.Input<string>;
    /**
     * Specifies the destination address.
     */
    destination?: pulumi.Input<string>;
    /**
     * Specifies the rule direction.
     * The options are as follows:
     * + **0**: inbound;
     * + **1**: outbound.
     */
    direction?: pulumi.Input<string>;
    /**
     * Specifies the firewall instance ID.
     */
    fwInstanceId?: pulumi.Input<string>;
    /**
     * Specifies the rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protected object ID.
     */
    objectId: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the rule ID.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Specifies the source address.
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies the rule status.
     * The options are as follows:
     * + **0**: disabled;
     * + **1**: enabled.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the protection rule.
     * Tags should have only one key/value pair.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the rule type.
     * The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
     */
    type?: pulumi.Input<string>;
}
