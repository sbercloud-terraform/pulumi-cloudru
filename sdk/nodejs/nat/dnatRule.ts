// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DnatRule extends pulumi.CustomResource {
    /**
     * Get an existing DnatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnatRuleState, opts?: pulumi.CustomResourceOptions): DnatRule {
        return new DnatRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:Nat/dnatRule:DnatRule';

    /**
     * Returns true if the given object is an instance of DnatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnatRule.__pulumiType;
    }

    /**
     * The creation time of the DNAT rule.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The description of the DNAT rule.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The port range used by Floating IP provide services for external systems.
     */
    declare public readonly externalServicePort: pulumi.Output<number | undefined>;
    /**
     * The port range used by ECSs or BMSs to provide services for external systems.
     */
    declare public readonly externalServicePortRange: pulumi.Output<string | undefined>;
    /**
     * The floating IP address of the DNAT rule.
     */
    declare public /*out*/ readonly floatingIpAddress: pulumi.Output<string>;
    /**
     * The ID of the floating IP address.
     */
    declare public readonly floatingIpId: pulumi.Output<string | undefined>;
    /**
     * The global EIP address connected by the DNAT rule.
     */
    declare public /*out*/ readonly globalEipAddress: pulumi.Output<string>;
    /**
     * The ID of the global EIP connected by the DNAT rule.
     */
    declare public readonly globalEipId: pulumi.Output<string | undefined>;
    /**
     * The port used by Floating IP provide services for external systems.
     */
    declare public readonly internalServicePort: pulumi.Output<number | undefined>;
    /**
     * The port used by ECSs or BMSs to provide services for external systems.
     */
    declare public readonly internalServicePortRange: pulumi.Output<string | undefined>;
    /**
     * The ID of the NAT gateway to which the DNAT rule belongs.
     */
    declare public readonly natGatewayId: pulumi.Output<string>;
    /**
     * The port ID of network.
     */
    declare public readonly portId: pulumi.Output<string>;
    /**
     * The private IP address of a user.
     */
    declare public readonly privateIp: pulumi.Output<string>;
    /**
     * The protocol type.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * The region where the DNAT rule is located.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The current status of the DNAT rule.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;

    /**
     * Create a DnatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnatRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnatRuleArgs | DnatRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnatRuleState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["description"] = state?.description;
            resourceInputs["externalServicePort"] = state?.externalServicePort;
            resourceInputs["externalServicePortRange"] = state?.externalServicePortRange;
            resourceInputs["floatingIpAddress"] = state?.floatingIpAddress;
            resourceInputs["floatingIpId"] = state?.floatingIpId;
            resourceInputs["globalEipAddress"] = state?.globalEipAddress;
            resourceInputs["globalEipId"] = state?.globalEipId;
            resourceInputs["internalServicePort"] = state?.internalServicePort;
            resourceInputs["internalServicePortRange"] = state?.internalServicePortRange;
            resourceInputs["natGatewayId"] = state?.natGatewayId;
            resourceInputs["portId"] = state?.portId;
            resourceInputs["privateIp"] = state?.privateIp;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["region"] = state?.region;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as DnatRuleArgs | undefined;
            if (args?.natGatewayId === undefined && !opts.urn) {
                throw new Error("Missing required property 'natGatewayId'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["externalServicePort"] = args?.externalServicePort;
            resourceInputs["externalServicePortRange"] = args?.externalServicePortRange;
            resourceInputs["floatingIpId"] = args?.floatingIpId;
            resourceInputs["globalEipId"] = args?.globalEipId;
            resourceInputs["internalServicePort"] = args?.internalServicePort;
            resourceInputs["internalServicePortRange"] = args?.internalServicePortRange;
            resourceInputs["natGatewayId"] = args?.natGatewayId;
            resourceInputs["portId"] = args?.portId;
            resourceInputs["privateIp"] = args?.privateIp;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["region"] = args?.region;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["floatingIpAddress"] = undefined /*out*/;
            resourceInputs["globalEipAddress"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnatRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DnatRule resources.
 */
export interface DnatRuleState {
    /**
     * The creation time of the DNAT rule.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the DNAT rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The port range used by Floating IP provide services for external systems.
     */
    externalServicePort?: pulumi.Input<number>;
    /**
     * The port range used by ECSs or BMSs to provide services for external systems.
     */
    externalServicePortRange?: pulumi.Input<string>;
    /**
     * The floating IP address of the DNAT rule.
     */
    floatingIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the floating IP address.
     */
    floatingIpId?: pulumi.Input<string>;
    /**
     * The global EIP address connected by the DNAT rule.
     */
    globalEipAddress?: pulumi.Input<string>;
    /**
     * The ID of the global EIP connected by the DNAT rule.
     */
    globalEipId?: pulumi.Input<string>;
    /**
     * The port used by Floating IP provide services for external systems.
     */
    internalServicePort?: pulumi.Input<number>;
    /**
     * The port used by ECSs or BMSs to provide services for external systems.
     */
    internalServicePortRange?: pulumi.Input<string>;
    /**
     * The ID of the NAT gateway to which the DNAT rule belongs.
     */
    natGatewayId?: pulumi.Input<string>;
    /**
     * The port ID of network.
     */
    portId?: pulumi.Input<string>;
    /**
     * The private IP address of a user.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * The protocol type.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The region where the DNAT rule is located.
     */
    region?: pulumi.Input<string>;
    /**
     * The current status of the DNAT rule.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DnatRule resource.
 */
export interface DnatRuleArgs {
    /**
     * The description of the DNAT rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The port range used by Floating IP provide services for external systems.
     */
    externalServicePort?: pulumi.Input<number>;
    /**
     * The port range used by ECSs or BMSs to provide services for external systems.
     */
    externalServicePortRange?: pulumi.Input<string>;
    /**
     * The ID of the floating IP address.
     */
    floatingIpId?: pulumi.Input<string>;
    /**
     * The ID of the global EIP connected by the DNAT rule.
     */
    globalEipId?: pulumi.Input<string>;
    /**
     * The port used by Floating IP provide services for external systems.
     */
    internalServicePort?: pulumi.Input<number>;
    /**
     * The port used by ECSs or BMSs to provide services for external systems.
     */
    internalServicePortRange?: pulumi.Input<string>;
    /**
     * The ID of the NAT gateway to which the DNAT rule belongs.
     */
    natGatewayId: pulumi.Input<string>;
    /**
     * The port ID of network.
     */
    portId?: pulumi.Input<string>;
    /**
     * The private IP address of a user.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * The protocol type.
     */
    protocol: pulumi.Input<string>;
    /**
     * The region where the DNAT rule is located.
     */
    region?: pulumi.Input<string>;
}
