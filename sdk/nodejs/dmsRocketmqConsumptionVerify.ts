// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DmsRocketmqConsumptionVerify extends pulumi.CustomResource {
    /**
     * Get an existing DmsRocketmqConsumptionVerify resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsRocketmqConsumptionVerifyState, opts?: pulumi.CustomResourceOptions): DmsRocketmqConsumptionVerify {
        return new DmsRocketmqConsumptionVerify(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:index/dmsRocketmqConsumptionVerify:DmsRocketmqConsumptionVerify';

    /**
     * Returns true if the given object is an instance of DmsRocketmqConsumptionVerify.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsRocketmqConsumptionVerify {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsRocketmqConsumptionVerify.__pulumiType;
    }

    declare public readonly clientId: pulumi.Output<string | undefined>;
    declare public readonly group: pulumi.Output<string | undefined>;
    declare public readonly instanceId: pulumi.Output<string>;
    declare public readonly messageIdLists: pulumi.Output<string[] | undefined>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * Indicates the verify results.
     */
    declare public /*out*/ readonly resendResults: pulumi.Output<outputs.DmsRocketmqConsumptionVerifyResendResult[]>;
    declare public readonly topic: pulumi.Output<string | undefined>;

    /**
     * Create a DmsRocketmqConsumptionVerify resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsRocketmqConsumptionVerifyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsRocketmqConsumptionVerifyArgs | DmsRocketmqConsumptionVerifyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsRocketmqConsumptionVerifyState | undefined;
            resourceInputs["clientId"] = state?.clientId;
            resourceInputs["group"] = state?.group;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["messageIdLists"] = state?.messageIdLists;
            resourceInputs["region"] = state?.region;
            resourceInputs["resendResults"] = state?.resendResults;
            resourceInputs["topic"] = state?.topic;
        } else {
            const args = argsOrState as DmsRocketmqConsumptionVerifyArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["group"] = args?.group;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["messageIdLists"] = args?.messageIdLists;
            resourceInputs["region"] = args?.region;
            resourceInputs["topic"] = args?.topic;
            resourceInputs["resendResults"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsRocketmqConsumptionVerify.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DmsRocketmqConsumptionVerify resources.
 */
export interface DmsRocketmqConsumptionVerifyState {
    clientId?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    messageIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    /**
     * Indicates the verify results.
     */
    resendResults?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqConsumptionVerifyResendResult>[]>;
    topic?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmsRocketmqConsumptionVerify resource.
 */
export interface DmsRocketmqConsumptionVerifyArgs {
    clientId?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    messageIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
}
