// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetVaultsArgs, GetVaultsResult, GetVaultsOutputArgs } from "./getVaults";
export const getVaults: typeof import("./getVaults").getVaults = null as any;
export const getVaultsOutput: typeof import("./getVaults").getVaultsOutput = null as any;
utilities.lazyLoad(exports, ["getVaults","getVaultsOutput"], () => require("./getVaults"));

export { PolicyArgs, PolicyState } from "./policy";
export type Policy = import("./policy").Policy;
export const Policy: typeof import("./policy").Policy = null as any;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));

export { VaultArgs, VaultState } from "./vault";
export type Vault = import("./vault").Vault;
export const Vault: typeof import("./vault").Vault = null as any;
utilities.lazyLoad(exports, ["Vault"], () => require("./vault"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudru:Cbr/policy:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "cloudru:Cbr/vault:Vault":
                return new Vault(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudru", "Cbr/policy", _module)
pulumi.runtime.registerResourceModule("cloudru", "Cbr/vault", _module)
