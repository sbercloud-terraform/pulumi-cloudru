// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DependencyArgs, DependencyState } from "./dependency";
export type Dependency = import("./dependency").Dependency;
export const Dependency: typeof import("./dependency").Dependency = null as any;
utilities.lazyLoad(exports, ["Dependency"], () => require("./dependency"));

export { FunctionArgs, FunctionState } from "./function";
export type Function = import("./function").Function;
export const Function: typeof import("./function").Function = null as any;
utilities.lazyLoad(exports, ["Function"], () => require("./function"));

export { GetDependenciesArgs, GetDependenciesResult, GetDependenciesOutputArgs } from "./getDependencies";
export const getDependencies: typeof import("./getDependencies").getDependencies = null as any;
export const getDependenciesOutput: typeof import("./getDependencies").getDependenciesOutput = null as any;
utilities.lazyLoad(exports, ["getDependencies","getDependenciesOutput"], () => require("./getDependencies"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sbercloud:FunctionGraph/dependency:Dependency":
                return new Dependency(name, <any>undefined, { urn })
            case "sbercloud:FunctionGraph/function:Function":
                return new Function(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sbercloud", "FunctionGraph/dependency", _module)
pulumi.runtime.registerResourceModule("sbercloud", "FunctionGraph/function", _module)
