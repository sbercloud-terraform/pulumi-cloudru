// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getPgAccounts(args: GetPgAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetPgAccountsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Rds/getPgAccounts:getPgAccounts", {
        "instanceId": args.instanceId,
        "region": args.region,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPgAccounts.
 */
export interface GetPgAccountsArgs {
    instanceId: string;
    region?: string;
    userName?: string;
}

/**
 * A collection of values returned by getPgAccounts.
 */
export interface GetPgAccountsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly region: string;
    readonly userName?: string;
    readonly users: outputs.Rds.GetPgAccountsUser[];
}
export function getPgAccountsOutput(args: GetPgAccountsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPgAccountsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Rds/getPgAccounts:getPgAccounts", {
        "instanceId": args.instanceId,
        "region": args.region,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPgAccounts.
 */
export interface GetPgAccountsOutputArgs {
    instanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
