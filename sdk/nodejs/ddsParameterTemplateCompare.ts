// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a DDS parameter template compare resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const sourceConfigurationId = config.requireObject<any>("sourceConfigurationId");
 * const targetConfigurationId = config.requireObject<any>("targetConfigurationId");
 * const test = new sbercloud.DdsParameterTemplateCompare("test", {
 *     sourceConfigurationId: sourceConfigurationId,
 *     targetConfigurationId: targetConfigurationId,
 * });
 * ```
 */
export class DdsParameterTemplateCompare extends pulumi.CustomResource {
    /**
     * Get an existing DdsParameterTemplateCompare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdsParameterTemplateCompareState, opts?: pulumi.CustomResourceOptions): DdsParameterTemplateCompare {
        return new DdsParameterTemplateCompare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/ddsParameterTemplateCompare:DdsParameterTemplateCompare';

    /**
     * Returns true if the given object is an instance of DdsParameterTemplateCompare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdsParameterTemplateCompare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdsParameterTemplateCompare.__pulumiType;
    }

    /**
     * Indicates the differences between parameters.
     * The differences structure is documented below.
     */
    declare public /*out*/ readonly differences: pulumi.Output<outputs.DdsParameterTemplateCompareDifference[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the ID of the source parameter template to be
     * compared. Changing this parameter will create a new resource.
     */
    declare public readonly sourceConfigurationId: pulumi.Output<string>;
    /**
     * Specifies the ID of the destination parameter template to be
     * compared. Changing this parameter will create a new resource.
     */
    declare public readonly targetConfigurationId: pulumi.Output<string>;

    /**
     * Create a DdsParameterTemplateCompare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdsParameterTemplateCompareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdsParameterTemplateCompareArgs | DdsParameterTemplateCompareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdsParameterTemplateCompareState | undefined;
            resourceInputs["differences"] = state?.differences;
            resourceInputs["region"] = state?.region;
            resourceInputs["sourceConfigurationId"] = state?.sourceConfigurationId;
            resourceInputs["targetConfigurationId"] = state?.targetConfigurationId;
        } else {
            const args = argsOrState as DdsParameterTemplateCompareArgs | undefined;
            if (args?.sourceConfigurationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceConfigurationId'");
            }
            if (args?.targetConfigurationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetConfigurationId'");
            }
            resourceInputs["region"] = args?.region;
            resourceInputs["sourceConfigurationId"] = args?.sourceConfigurationId;
            resourceInputs["targetConfigurationId"] = args?.targetConfigurationId;
            resourceInputs["differences"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdsParameterTemplateCompare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DdsParameterTemplateCompare resources.
 */
export interface DdsParameterTemplateCompareState {
    /**
     * Indicates the differences between parameters.
     * The differences structure is documented below.
     */
    differences?: pulumi.Input<pulumi.Input<inputs.DdsParameterTemplateCompareDifference>[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the source parameter template to be
     * compared. Changing this parameter will create a new resource.
     */
    sourceConfigurationId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the destination parameter template to be
     * compared. Changing this parameter will create a new resource.
     */
    targetConfigurationId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdsParameterTemplateCompare resource.
 */
export interface DdsParameterTemplateCompareArgs {
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the source parameter template to be
     * compared. Changing this parameter will create a new resource.
     */
    sourceConfigurationId: pulumi.Input<string>;
    /**
     * Specifies the ID of the destination parameter template to be
     * compared. Changing this parameter will create a new resource.
     */
    targetConfigurationId: pulumi.Input<string>;
}
