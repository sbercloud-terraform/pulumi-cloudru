// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a custom dependency version within SberCloud.
 *
 * > We recommend using this resource to replace the `sbercloud.FunctionGraph.Dependency` resource for managing dependency
 * packages. You can migrate smoothly because the parameter behavior of the two resources is consistent.
 *
 * ## Example Usage
 *
 * ### Create a custom dependency version using an OBS bucket path where the ZIP file is located
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const dependencyName = config.requireObject<any>("dependencyName");
 * const customDependencyLocation = config.requireObject<any>("customDependencyLocation");
 * const test = new sbercloud.FgsDependencyVersion("test", {
 *     name: dependencyName,
 *     runtime: "Python3.6",
 *     link: customDependencyLocation,
 * });
 * ```
 *
 * ## Import
 *
 * Dependency version can be imported using the resource `id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/fgsDependencyVersion:FgsDependencyVersion test <id>
 * ```
 *
 * Or using related dependency package `name` and the `version` number, separated by a slash (/), e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/fgsDependencyVersion:FgsDependencyVersion test <name>/<version>
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason. The missing attributes include: `link`.
 *
 * It is generally recommended running `pulumi preview` after importing a dependency package.
 *
 * You can then decide if changes should be applied to the resource, or the resource definition should be updated to
 *
 * align with the dependency package. Also you can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_fgs_dependency_version" "test" {
 *
 *   ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       link,
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class FgsDependencyVersion extends pulumi.CustomResource {
    /**
     * Get an existing FgsDependencyVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FgsDependencyVersionState, opts?: pulumi.CustomResourceOptions): FgsDependencyVersion {
        return new FgsDependencyVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/fgsDependencyVersion:FgsDependencyVersion';

    /**
     * Returns true if the given object is an instance of FgsDependencyVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FgsDependencyVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FgsDependencyVersion.__pulumiType;
    }

    /**
     * The ID of the dependency package corresponding to the version.
     */
    declare public /*out*/ readonly dependencyId: pulumi.Output<string>;
    /**
     * Specifies the description of the custom dependency version.  
     * The description can contain a maximum of `512` characters.
     * Changing this will create a new resource.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * The unique ID of the dependency.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The OBS bucket path where the dependency package is located.
     */
    declare public readonly link: pulumi.Output<string>;
    /**
     * Specifies the name of the custom dependency package to which the version
     * belongs.
     * The name can contain a maximum of `96` characters and must start with a letter and end with a letter or digit.
     * Only letters, digits, underscores (_), periods (.), and hyphens (-) are allowed.
     * Changing this will create a new resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The dependency owner, **public** indicates a public dependency.
     */
    declare public /*out*/ readonly owner: pulumi.Output<string>;
    /**
     * Specifies the region where the custom dependency version is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the runtime of the custom dependency version.
     * The valid values are as follows:
     * + **Java8**
     * + **Java11**
     * + **Node.js6.10**
     * + **Node.js8.10**
     * + **Node.js10.16**
     * + **Node.js12.13**
     * + **Node.js14.18**
     * + **Python2.7**
     * + **Python3.6**
     * + **Python3.9**
     * + **Go1.8**
     * + **Go1.x**
     * + **C#(.NET Core 2.0)**
     * + **C#(.NET Core 2.1)**
     * + **C#(.NET Core 3.1)**
     * + **Custom**
     * + **PHP 7.3**
     * + **http**
     *
     * Changing this will create a new resource.
     */
    declare public readonly runtime: pulumi.Output<string>;
    /**
     * The dependency size, in bytes.
     */
    declare public /*out*/ readonly size: pulumi.Output<number>;
    /**
     * The dependency package version.
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;
    /**
     * The ID of the dependency package version.
     */
    declare public /*out*/ readonly versionId: pulumi.Output<string>;

    /**
     * Create a FgsDependencyVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FgsDependencyVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FgsDependencyVersionArgs | FgsDependencyVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FgsDependencyVersionState | undefined;
            resourceInputs["dependencyId"] = state?.dependencyId;
            resourceInputs["description"] = state?.description;
            resourceInputs["etag"] = state?.etag;
            resourceInputs["link"] = state?.link;
            resourceInputs["name"] = state?.name;
            resourceInputs["owner"] = state?.owner;
            resourceInputs["region"] = state?.region;
            resourceInputs["runtime"] = state?.runtime;
            resourceInputs["size"] = state?.size;
            resourceInputs["version"] = state?.version;
            resourceInputs["versionId"] = state?.versionId;
        } else {
            const args = argsOrState as FgsDependencyVersionArgs | undefined;
            if (args?.link === undefined && !opts.urn) {
                throw new Error("Missing required property 'link'");
            }
            if (args?.runtime === undefined && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["link"] = args?.link;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["runtime"] = args?.runtime;
            resourceInputs["dependencyId"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FgsDependencyVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FgsDependencyVersion resources.
 */
export interface FgsDependencyVersionState {
    /**
     * The ID of the dependency package corresponding to the version.
     */
    dependencyId?: pulumi.Input<string>;
    /**
     * Specifies the description of the custom dependency version.  
     * The description can contain a maximum of `512` characters.
     * Changing this will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique ID of the dependency.
     */
    etag?: pulumi.Input<string>;
    /**
     * The OBS bucket path where the dependency package is located.
     */
    link?: pulumi.Input<string>;
    /**
     * Specifies the name of the custom dependency package to which the version
     * belongs.
     * The name can contain a maximum of `96` characters and must start with a letter and end with a letter or digit.
     * Only letters, digits, underscores (_), periods (.), and hyphens (-) are allowed.
     * Changing this will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The dependency owner, **public** indicates a public dependency.
     */
    owner?: pulumi.Input<string>;
    /**
     * Specifies the region where the custom dependency version is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the runtime of the custom dependency version.
     * The valid values are as follows:
     * + **Java8**
     * + **Java11**
     * + **Node.js6.10**
     * + **Node.js8.10**
     * + **Node.js10.16**
     * + **Node.js12.13**
     * + **Node.js14.18**
     * + **Python2.7**
     * + **Python3.6**
     * + **Python3.9**
     * + **Go1.8**
     * + **Go1.x**
     * + **C#(.NET Core 2.0)**
     * + **C#(.NET Core 2.1)**
     * + **C#(.NET Core 3.1)**
     * + **Custom**
     * + **PHP 7.3**
     * + **http**
     *
     * Changing this will create a new resource.
     */
    runtime?: pulumi.Input<string>;
    /**
     * The dependency size, in bytes.
     */
    size?: pulumi.Input<number>;
    /**
     * The dependency package version.
     */
    version?: pulumi.Input<number>;
    /**
     * The ID of the dependency package version.
     */
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FgsDependencyVersion resource.
 */
export interface FgsDependencyVersionArgs {
    /**
     * Specifies the description of the custom dependency version.  
     * The description can contain a maximum of `512` characters.
     * Changing this will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The OBS bucket path where the dependency package is located.
     */
    link: pulumi.Input<string>;
    /**
     * Specifies the name of the custom dependency package to which the version
     * belongs.
     * The name can contain a maximum of `96` characters and must start with a letter and end with a letter or digit.
     * Only letters, digits, underscores (_), periods (.), and hyphens (-) are allowed.
     * Changing this will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the custom dependency version is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the runtime of the custom dependency version.
     * The valid values are as follows:
     * + **Java8**
     * + **Java11**
     * + **Node.js6.10**
     * + **Node.js8.10**
     * + **Node.js10.16**
     * + **Node.js12.13**
     * + **Node.js14.18**
     * + **Python2.7**
     * + **Python3.6**
     * + **Python3.9**
     * + **Go1.8**
     * + **Go1.x**
     * + **C#(.NET Core 2.0)**
     * + **C#(.NET Core 2.1)**
     * + **C#(.NET Core 3.1)**
     * + **Custom**
     * + **PHP 7.3**
     * + **http**
     *
     * Changing this will create a new resource.
     */
    runtime: pulumi.Input<string>;
}
