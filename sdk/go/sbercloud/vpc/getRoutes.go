// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Use this data source to get the list of VPC routes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetRoutes(ctx, &vpc.GetRoutesArgs{
//				Type: pulumi.StringRef("peering"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRoutes(ctx *pulumi.Context, args *GetRoutesArgs, opts ...pulumi.InvokeOption) (*GetRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRoutesResult
	err := ctx.Invoke("sbercloud:Vpc/getRoutes:getRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoutes.
type GetRoutesArgs struct {
	// Specifies the route destination.
	Destination *string `pulumi:"destination"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the route type.
	Type *string `pulumi:"type"`
	// Specifies the ID of the VPC to which the route belongs.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getRoutes.
type GetRoutesResult struct {
	// The route destination.
	Destination *string `pulumi:"destination"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
	// The list of routes.
	Routes []GetRoutesRoute `pulumi:"routes"`
	// The route type.
	Type *string `pulumi:"type"`
	// The ID of the VPC to which the route belongs.
	VpcId *string `pulumi:"vpcId"`
}

func GetRoutesOutput(ctx *pulumi.Context, args GetRoutesOutputArgs, opts ...pulumi.InvokeOption) GetRoutesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRoutesResultOutput, error) {
			args := v.(GetRoutesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Vpc/getRoutes:getRoutes", args, GetRoutesResultOutput{}, options).(GetRoutesResultOutput), nil
		}).(GetRoutesResultOutput)
}

// A collection of arguments for invoking getRoutes.
type GetRoutesOutputArgs struct {
	// Specifies the route destination.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the route type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the ID of the VPC to which the route belongs.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesArgs)(nil)).Elem()
}

// A collection of values returned by getRoutes.
type GetRoutesResultOutput struct{ *pulumi.OutputState }

func (GetRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoutesResult)(nil)).Elem()
}

func (o GetRoutesResultOutput) ToGetRoutesResultOutput() GetRoutesResultOutput {
	return o
}

func (o GetRoutesResultOutput) ToGetRoutesResultOutputWithContext(ctx context.Context) GetRoutesResultOutput {
	return o
}

// The route destination.
func (o GetRoutesResultOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRoutesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoutesResult) string { return v.Region }).(pulumi.StringOutput)
}

// The list of routes.
func (o GetRoutesResultOutput) Routes() GetRoutesRouteArrayOutput {
	return o.ApplyT(func(v GetRoutesResult) []GetRoutesRoute { return v.Routes }).(GetRoutesRouteArrayOutput)
}

// The route type.
func (o GetRoutesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The ID of the VPC to which the route belongs.
func (o GetRoutesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoutesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRoutesResultOutput{})
}
