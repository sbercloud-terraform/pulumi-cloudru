// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetDmsRocketmqFlavors(ctx *pulumi.Context, args *GetDmsRocketmqFlavorsArgs, opts ...pulumi.InvokeOption) (*GetDmsRocketmqFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsRocketmqFlavorsResult
	err := ctx.Invoke("cloudru:index/getDmsRocketmqFlavors:getDmsRocketmqFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsRocketmqFlavors.
type GetDmsRocketmqFlavorsArgs struct {
	ArchType          *string  `pulumi:"archType"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	ChargingMode      *string  `pulumi:"chargingMode"`
	FlavorId          *string  `pulumi:"flavorId"`
	Region            *string  `pulumi:"region"`
	StorageSpecCode   *string  `pulumi:"storageSpecCode"`
	Type              *string  `pulumi:"type"`
}

// A collection of values returned by getDmsRocketmqFlavors.
type GetDmsRocketmqFlavorsResult struct {
	ArchType          *string                       `pulumi:"archType"`
	AvailabilityZones []string                      `pulumi:"availabilityZones"`
	ChargingMode      *string                       `pulumi:"chargingMode"`
	FlavorId          *string                       `pulumi:"flavorId"`
	Flavors           []GetDmsRocketmqFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Region          string   `pulumi:"region"`
	StorageSpecCode *string  `pulumi:"storageSpecCode"`
	Type            *string  `pulumi:"type"`
	Versions        []string `pulumi:"versions"`
}

func GetDmsRocketmqFlavorsOutput(ctx *pulumi.Context, args GetDmsRocketmqFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetDmsRocketmqFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsRocketmqFlavorsResultOutput, error) {
			args := v.(GetDmsRocketmqFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:index/getDmsRocketmqFlavors:getDmsRocketmqFlavors", args, GetDmsRocketmqFlavorsResultOutput{}, options).(GetDmsRocketmqFlavorsResultOutput), nil
		}).(GetDmsRocketmqFlavorsResultOutput)
}

// A collection of arguments for invoking getDmsRocketmqFlavors.
type GetDmsRocketmqFlavorsOutputArgs struct {
	ArchType          pulumi.StringPtrInput   `pulumi:"archType"`
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	ChargingMode      pulumi.StringPtrInput   `pulumi:"chargingMode"`
	FlavorId          pulumi.StringPtrInput   `pulumi:"flavorId"`
	Region            pulumi.StringPtrInput   `pulumi:"region"`
	StorageSpecCode   pulumi.StringPtrInput   `pulumi:"storageSpecCode"`
	Type              pulumi.StringPtrInput   `pulumi:"type"`
}

func (GetDmsRocketmqFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRocketmqFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getDmsRocketmqFlavors.
type GetDmsRocketmqFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetDmsRocketmqFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRocketmqFlavorsResult)(nil)).Elem()
}

func (o GetDmsRocketmqFlavorsResultOutput) ToGetDmsRocketmqFlavorsResultOutput() GetDmsRocketmqFlavorsResultOutput {
	return o
}

func (o GetDmsRocketmqFlavorsResultOutput) ToGetDmsRocketmqFlavorsResultOutputWithContext(ctx context.Context) GetDmsRocketmqFlavorsResultOutput {
	return o
}

func (o GetDmsRocketmqFlavorsResultOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) *string { return v.FlavorId }).(pulumi.StringPtrOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) Flavors() GetDmsRocketmqFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) []GetDmsRocketmqFlavorsFlavor { return v.Flavors }).(GetDmsRocketmqFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsRocketmqFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) StorageSpecCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) *string { return v.StorageSpecCode }).(pulumi.StringPtrOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetDmsRocketmqFlavorsResultOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRocketmqFlavorsResult) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsRocketmqFlavorsResultOutput{})
}
