// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetRouteTables(ctx *pulumi.Context, args *GetRouteTablesArgs, opts ...pulumi.InvokeOption) (*GetRouteTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteTablesResult
	err := ctx.Invoke("cloudru:Er/getRouteTables:getRouteTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTables.
type GetRouteTablesArgs struct {
	InstanceId   string            `pulumi:"instanceId"`
	Name         *string           `pulumi:"name"`
	Region       *string           `pulumi:"region"`
	RouteTableId *string           `pulumi:"routeTableId"`
	Tags         map[string]string `pulumi:"tags"`
}

// A collection of values returned by getRouteTables.
type GetRouteTablesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string                     `pulumi:"id"`
	InstanceId   string                     `pulumi:"instanceId"`
	Name         *string                    `pulumi:"name"`
	Region       string                     `pulumi:"region"`
	RouteTableId *string                    `pulumi:"routeTableId"`
	RouteTables  []GetRouteTablesRouteTable `pulumi:"routeTables"`
	Tags         map[string]string          `pulumi:"tags"`
}

func GetRouteTablesOutput(ctx *pulumi.Context, args GetRouteTablesOutputArgs, opts ...pulumi.InvokeOption) GetRouteTablesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRouteTablesResultOutput, error) {
			args := v.(GetRouteTablesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Er/getRouteTables:getRouteTables", args, GetRouteTablesResultOutput{}, options).(GetRouteTablesResultOutput), nil
		}).(GetRouteTablesResultOutput)
}

// A collection of arguments for invoking getRouteTables.
type GetRouteTablesOutputArgs struct {
	InstanceId   pulumi.StringInput    `pulumi:"instanceId"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
	Tags         pulumi.StringMapInput `pulumi:"tags"`
}

func (GetRouteTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesArgs)(nil)).Elem()
}

// A collection of values returned by getRouteTables.
type GetRouteTablesResultOutput struct{ *pulumi.OutputState }

func (GetRouteTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesResult)(nil)).Elem()
}

func (o GetRouteTablesResultOutput) ToGetRouteTablesResultOutput() GetRouteTablesResultOutput {
	return o
}

func (o GetRouteTablesResultOutput) ToGetRouteTablesResultOutputWithContext(ctx context.Context) GetRouteTablesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRouteTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRouteTablesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetRouteTablesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRouteTablesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRouteTablesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRouteTablesResultOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRouteTablesResult) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

func (o GetRouteTablesResultOutput) RouteTables() GetRouteTablesRouteTableArrayOutput {
	return o.ApplyT(func(v GetRouteTablesResult) []GetRouteTablesRouteTable { return v.RouteTables }).(GetRouteTablesRouteTableArrayOutput)
}

func (o GetRouteTablesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRouteTablesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteTablesResultOutput{})
}
