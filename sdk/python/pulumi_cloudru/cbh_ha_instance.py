# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['CbhHaInstanceArgs', 'CbhHaInstance']

@pulumi.input_type
class CbhHaInstanceArgs:
    def __init__(__self__, *,
                 charging_mode: pulumi.Input[_builtins.str],
                 flavor_id: pulumi.Input[_builtins.str],
                 master_availability_zone: pulumi.Input[_builtins.str],
                 password: pulumi.Input[_builtins.str],
                 period: pulumi.Input[_builtins.int],
                 period_unit: pulumi.Input[_builtins.str],
                 security_group_id: pulumi.Input[_builtins.str],
                 slave_availability_zone: pulumi.Input[_builtins.str],
                 subnet_id: pulumi.Input[_builtins.str],
                 vpc_id: pulumi.Input[_builtins.str],
                 attach_disk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 floating_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv6_enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 master_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 power_action: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None):
        """
        The set of arguments for constructing a CbhHaInstance resource.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the CBH HA instance.
        :param pulumi.Input[_builtins.str] flavor_id: Specifies the product ID of the CBH server.
        :param pulumi.Input[_builtins.str] master_availability_zone: Specifies the availability zone name of the master instance.
        :param pulumi.Input[_builtins.str] password: Specifies the password for logging in to the management console.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the CBH HA instance.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the CBH HA instance.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the IDs of the security group.
        :param pulumi.Input[_builtins.str] slave_availability_zone: Specifies the availability zone name of the slave instance.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the ID of a subnet.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the ID of a VPC.
        :param pulumi.Input[_builtins.int] attach_disk_size: Specifies the size of the additional data disk for the CBH HA instance.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto renew is enabled.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the CBH HA instance belongs.
        :param pulumi.Input[_builtins.str] floating_ip: Specifies the floating IP address of the CBH HA instance.
        :param pulumi.Input[_builtins.bool] ipv6_enable: Specifies whether the IPv6 network is enabled.
        :param pulumi.Input[_builtins.str] master_private_ip: Specifies the private IP address of the master instance.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the CBH HA instance.
        :param pulumi.Input[_builtins.str] power_action: Specifies the power action after the CBH HA instance is created.
        :param pulumi.Input[_builtins.str] public_ip_id: Specifies the ID of the elastic IP.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the CBH HA instance.
        :param pulumi.Input[_builtins.str] slave_private_ip: Specifies the private IP address of the slave instance.
        """
        pulumi.set(__self__, "charging_mode", charging_mode)
        pulumi.set(__self__, "flavor_id", flavor_id)
        pulumi.set(__self__, "master_availability_zone", master_availability_zone)
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "period", period)
        pulumi.set(__self__, "period_unit", period_unit)
        pulumi.set(__self__, "security_group_id", security_group_id)
        pulumi.set(__self__, "slave_availability_zone", slave_availability_zone)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        if attach_disk_size is not None:
            pulumi.set(__self__, "attach_disk_size", attach_disk_size)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if floating_ip is not None:
            pulumi.set(__self__, "floating_ip", floating_ip)
        if ipv6_enable is not None:
            pulumi.set(__self__, "ipv6_enable", ipv6_enable)
        if master_private_ip is not None:
            pulumi.set(__self__, "master_private_ip", master_private_ip)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if power_action is not None:
            pulumi.set(__self__, "power_action", power_action)
        if public_ip_id is not None:
            pulumi.set(__self__, "public_ip_id", public_ip_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if slave_private_ip is not None:
            pulumi.set(__self__, "slave_private_ip", slave_private_ip)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging mode of the CBH HA instance.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="flavorId")
    def flavor_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the product ID of the CBH server.
        """
        return pulumi.get(self, "flavor_id")

    @flavor_id.setter
    def flavor_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "flavor_id", value)

    @_builtins.property
    @pulumi.getter(name="masterAvailabilityZone")
    def master_availability_zone(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the availability zone name of the master instance.
        """
        return pulumi.get(self, "master_availability_zone")

    @master_availability_zone.setter
    def master_availability_zone(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "master_availability_zone", value)

    @_builtins.property
    @pulumi.getter
    def password(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the password for logging in to the management console.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "password", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Input[_builtins.int]:
        """
        Specifies the charging period of the CBH HA instance.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: pulumi.Input[_builtins.int]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the charging period unit of the CBH HA instance.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the IDs of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @security_group_id.setter
    def security_group_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "security_group_id", value)

    @_builtins.property
    @pulumi.getter(name="slaveAvailabilityZone")
    def slave_availability_zone(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the availability zone name of the slave instance.
        """
        return pulumi.get(self, "slave_availability_zone")

    @slave_availability_zone.setter
    def slave_availability_zone(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "slave_availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a subnet.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[_builtins.str]:
        """
        Specifies the ID of a VPC.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "vpc_id", value)

    @_builtins.property
    @pulumi.getter(name="attachDiskSize")
    def attach_disk_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the size of the additional data disk for the CBH HA instance.
        """
        return pulumi.get(self, "attach_disk_size")

    @attach_disk_size.setter
    def attach_disk_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "attach_disk_size", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto renew is enabled.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the CBH HA instance belongs.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="floatingIp")
    def floating_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the floating IP address of the CBH HA instance.
        """
        return pulumi.get(self, "floating_ip")

    @floating_ip.setter
    def floating_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "floating_ip", value)

    @_builtins.property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the IPv6 network is enabled.
        """
        return pulumi.get(self, "ipv6_enable")

    @ipv6_enable.setter
    def ipv6_enable(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ipv6_enable", value)

    @_builtins.property
    @pulumi.getter(name="masterPrivateIp")
    def master_private_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the private IP address of the master instance.
        """
        return pulumi.get(self, "master_private_ip")

    @master_private_ip.setter
    def master_private_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "master_private_ip", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the CBH HA instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="powerAction")
    def power_action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the power action after the CBH HA instance is created.
        """
        return pulumi.get(self, "power_action")

    @power_action.setter
    def power_action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "power_action", value)

    @_builtins.property
    @pulumi.getter(name="publicIpId")
    def public_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the elastic IP.
        """
        return pulumi.get(self, "public_ip_id")

    @public_ip_id.setter
    def public_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ip_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the CBH HA instance.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="slavePrivateIp")
    def slave_private_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the private IP address of the slave instance.
        """
        return pulumi.get(self, "slave_private_ip")

    @slave_private_ip.setter
    def slave_private_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "slave_private_ip", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _CbhHaInstanceState:
    def __init__(__self__, *,
                 attach_disk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 data_disk_size: Optional[pulumi.Input[_builtins.float]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_id: Optional[pulumi.Input[_builtins.str]] = None,
                 floating_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv6_enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 master_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 master_id: Optional[pulumi.Input[_builtins.str]] = None,
                 master_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 power_action: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_id: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 status: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 version: Optional[pulumi.Input[_builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering CbhHaInstance resources.
        :param pulumi.Input[_builtins.int] attach_disk_size: Specifies the size of the additional data disk for the CBH HA instance.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto renew is enabled.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the CBH HA instance.
        :param pulumi.Input[_builtins.float] data_disk_size: The data disk size of the CBH HA instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the CBH HA instance belongs.
        :param pulumi.Input[_builtins.str] flavor_id: Specifies the product ID of the CBH server.
        :param pulumi.Input[_builtins.str] floating_ip: Specifies the floating IP address of the CBH HA instance.
        :param pulumi.Input[_builtins.bool] ipv6_enable: Specifies whether the IPv6 network is enabled.
        :param pulumi.Input[_builtins.str] master_availability_zone: Specifies the availability zone name of the master instance.
        :param pulumi.Input[_builtins.str] master_id: The ID of the master instance.
        :param pulumi.Input[_builtins.str] master_private_ip: Specifies the private IP address of the master instance.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the CBH HA instance.
        :param pulumi.Input[_builtins.str] password: Specifies the password for logging in to the management console.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the CBH HA instance.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the CBH HA instance.
        :param pulumi.Input[_builtins.str] power_action: Specifies the power action after the CBH HA instance is created.
        :param pulumi.Input[_builtins.str] public_ip: The elastic IP address.
        :param pulumi.Input[_builtins.str] public_ip_id: Specifies the ID of the elastic IP.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the CBH HA instance.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the IDs of the security group.
        :param pulumi.Input[_builtins.str] slave_availability_zone: Specifies the availability zone name of the slave instance.
        :param pulumi.Input[_builtins.str] slave_id: The ID of the slave instance.
        :param pulumi.Input[_builtins.str] slave_private_ip: Specifies the private IP address of the slave instance.
        :param pulumi.Input[_builtins.str] status: The status of the CBH HA instance.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the ID of a subnet.
        :param pulumi.Input[_builtins.str] version: The current version of the CBH HA instance image.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the ID of a VPC.
        """
        if attach_disk_size is not None:
            pulumi.set(__self__, "attach_disk_size", attach_disk_size)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if charging_mode is not None:
            pulumi.set(__self__, "charging_mode", charging_mode)
        if data_disk_size is not None:
            pulumi.set(__self__, "data_disk_size", data_disk_size)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if flavor_id is not None:
            pulumi.set(__self__, "flavor_id", flavor_id)
        if floating_ip is not None:
            pulumi.set(__self__, "floating_ip", floating_ip)
        if ipv6_enable is not None:
            pulumi.set(__self__, "ipv6_enable", ipv6_enable)
        if master_availability_zone is not None:
            pulumi.set(__self__, "master_availability_zone", master_availability_zone)
        if master_id is not None:
            pulumi.set(__self__, "master_id", master_id)
        if master_private_ip is not None:
            pulumi.set(__self__, "master_private_ip", master_private_ip)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if power_action is not None:
            pulumi.set(__self__, "power_action", power_action)
        if public_ip is not None:
            pulumi.set(__self__, "public_ip", public_ip)
        if public_ip_id is not None:
            pulumi.set(__self__, "public_ip_id", public_ip_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if security_group_id is not None:
            pulumi.set(__self__, "security_group_id", security_group_id)
        if slave_availability_zone is not None:
            pulumi.set(__self__, "slave_availability_zone", slave_availability_zone)
        if slave_id is not None:
            pulumi.set(__self__, "slave_id", slave_id)
        if slave_private_ip is not None:
            pulumi.set(__self__, "slave_private_ip", slave_private_ip)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if version is not None:
            pulumi.set(__self__, "version", version)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @_builtins.property
    @pulumi.getter(name="attachDiskSize")
    def attach_disk_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the size of the additional data disk for the CBH HA instance.
        """
        return pulumi.get(self, "attach_disk_size")

    @attach_disk_size.setter
    def attach_disk_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "attach_disk_size", value)

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies whether auto renew is enabled.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "auto_renew", value)

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging mode of the CBH HA instance.
        """
        return pulumi.get(self, "charging_mode")

    @charging_mode.setter
    def charging_mode(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "charging_mode", value)

    @_builtins.property
    @pulumi.getter(name="dataDiskSize")
    def data_disk_size(self) -> Optional[pulumi.Input[_builtins.float]]:
        """
        The data disk size of the CBH HA instance.
        """
        return pulumi.get(self, "data_disk_size")

    @data_disk_size.setter
    def data_disk_size(self, value: Optional[pulumi.Input[_builtins.float]]):
        pulumi.set(self, "data_disk_size", value)

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the enterprise project ID to which the CBH HA instance belongs.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @_builtins.property
    @pulumi.getter(name="flavorId")
    def flavor_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the product ID of the CBH server.
        """
        return pulumi.get(self, "flavor_id")

    @flavor_id.setter
    def flavor_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "flavor_id", value)

    @_builtins.property
    @pulumi.getter(name="floatingIp")
    def floating_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the floating IP address of the CBH HA instance.
        """
        return pulumi.get(self, "floating_ip")

    @floating_ip.setter
    def floating_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "floating_ip", value)

    @_builtins.property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the IPv6 network is enabled.
        """
        return pulumi.get(self, "ipv6_enable")

    @ipv6_enable.setter
    def ipv6_enable(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ipv6_enable", value)

    @_builtins.property
    @pulumi.getter(name="masterAvailabilityZone")
    def master_availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the availability zone name of the master instance.
        """
        return pulumi.get(self, "master_availability_zone")

    @master_availability_zone.setter
    def master_availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "master_availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="masterId")
    def master_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the master instance.
        """
        return pulumi.get(self, "master_id")

    @master_id.setter
    def master_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "master_id", value)

    @_builtins.property
    @pulumi.getter(name="masterPrivateIp")
    def master_private_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the private IP address of the master instance.
        """
        return pulumi.get(self, "master_private_ip")

    @master_private_ip.setter
    def master_private_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "master_private_ip", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the CBH HA instance.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the password for logging in to the management console.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "password", value)

    @_builtins.property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the charging period of the CBH HA instance.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "period", value)

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the charging period unit of the CBH HA instance.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "period_unit", value)

    @_builtins.property
    @pulumi.getter(name="powerAction")
    def power_action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the power action after the CBH HA instance is created.
        """
        return pulumi.get(self, "power_action")

    @power_action.setter
    def power_action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "power_action", value)

    @_builtins.property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The elastic IP address.
        """
        return pulumi.get(self, "public_ip")

    @public_ip.setter
    def public_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ip", value)

    @_builtins.property
    @pulumi.getter(name="publicIpId")
    def public_ip_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of the elastic IP.
        """
        return pulumi.get(self, "public_ip_id")

    @public_ip_id.setter
    def public_ip_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "public_ip_id", value)

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the region in which to create the CBH HA instance.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "region", value)

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the IDs of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @security_group_id.setter
    def security_group_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "security_group_id", value)

    @_builtins.property
    @pulumi.getter(name="slaveAvailabilityZone")
    def slave_availability_zone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the availability zone name of the slave instance.
        """
        return pulumi.get(self, "slave_availability_zone")

    @slave_availability_zone.setter
    def slave_availability_zone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "slave_availability_zone", value)

    @_builtins.property
    @pulumi.getter(name="slaveId")
    def slave_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The ID of the slave instance.
        """
        return pulumi.get(self, "slave_id")

    @slave_id.setter
    def slave_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "slave_id", value)

    @_builtins.property
    @pulumi.getter(name="slavePrivateIp")
    def slave_private_ip(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the private IP address of the slave instance.
        """
        return pulumi.get(self, "slave_private_ip")

    @slave_private_ip.setter
    def slave_private_ip(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "slave_private_ip", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The status of the CBH HA instance.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "status", value)

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a subnet.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "subnet_id", value)

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]]):
        pulumi.set(self, "tags", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The current version of the CBH HA instance image.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the ID of a VPC.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.type_token("cloudru:index/cbhHaInstance:CbhHaInstance")
class CbhHaInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attach_disk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_id: Optional[pulumi.Input[_builtins.str]] = None,
                 floating_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv6_enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 master_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 master_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 power_action: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        Create a CbhHaInstance resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] attach_disk_size: Specifies the size of the additional data disk for the CBH HA instance.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto renew is enabled.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the CBH HA instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the CBH HA instance belongs.
        :param pulumi.Input[_builtins.str] flavor_id: Specifies the product ID of the CBH server.
        :param pulumi.Input[_builtins.str] floating_ip: Specifies the floating IP address of the CBH HA instance.
        :param pulumi.Input[_builtins.bool] ipv6_enable: Specifies whether the IPv6 network is enabled.
        :param pulumi.Input[_builtins.str] master_availability_zone: Specifies the availability zone name of the master instance.
        :param pulumi.Input[_builtins.str] master_private_ip: Specifies the private IP address of the master instance.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the CBH HA instance.
        :param pulumi.Input[_builtins.str] password: Specifies the password for logging in to the management console.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the CBH HA instance.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the CBH HA instance.
        :param pulumi.Input[_builtins.str] power_action: Specifies the power action after the CBH HA instance is created.
        :param pulumi.Input[_builtins.str] public_ip_id: Specifies the ID of the elastic IP.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the CBH HA instance.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the IDs of the security group.
        :param pulumi.Input[_builtins.str] slave_availability_zone: Specifies the availability zone name of the slave instance.
        :param pulumi.Input[_builtins.str] slave_private_ip: Specifies the private IP address of the slave instance.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the ID of a subnet.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the ID of a VPC.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CbhHaInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CbhHaInstance resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CbhHaInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CbhHaInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attach_disk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
                 charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
                 flavor_id: Optional[pulumi.Input[_builtins.str]] = None,
                 floating_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv6_enable: Optional[pulumi.Input[_builtins.bool]] = None,
                 master_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 master_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 password: Optional[pulumi.Input[_builtins.str]] = None,
                 period: Optional[pulumi.Input[_builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[_builtins.str]] = None,
                 power_action: Optional[pulumi.Input[_builtins.str]] = None,
                 public_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
                 region: Optional[pulumi.Input[_builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
                 slave_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
                 vpc_id: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CbhHaInstanceArgs.__new__(CbhHaInstanceArgs)

            __props__.__dict__["attach_disk_size"] = attach_disk_size
            __props__.__dict__["auto_renew"] = auto_renew
            if charging_mode is None and not opts.urn:
                raise TypeError("Missing required property 'charging_mode'")
            __props__.__dict__["charging_mode"] = charging_mode
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            if flavor_id is None and not opts.urn:
                raise TypeError("Missing required property 'flavor_id'")
            __props__.__dict__["flavor_id"] = flavor_id
            __props__.__dict__["floating_ip"] = floating_ip
            __props__.__dict__["ipv6_enable"] = ipv6_enable
            if master_availability_zone is None and not opts.urn:
                raise TypeError("Missing required property 'master_availability_zone'")
            __props__.__dict__["master_availability_zone"] = master_availability_zone
            __props__.__dict__["master_private_ip"] = master_private_ip
            __props__.__dict__["name"] = name
            if password is None and not opts.urn:
                raise TypeError("Missing required property 'password'")
            __props__.__dict__["password"] = None if password is None else pulumi.Output.secret(password)
            if period is None and not opts.urn:
                raise TypeError("Missing required property 'period'")
            __props__.__dict__["period"] = period
            if period_unit is None and not opts.urn:
                raise TypeError("Missing required property 'period_unit'")
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["power_action"] = power_action
            __props__.__dict__["public_ip_id"] = public_ip_id
            __props__.__dict__["region"] = region
            if security_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'security_group_id'")
            __props__.__dict__["security_group_id"] = security_group_id
            if slave_availability_zone is None and not opts.urn:
                raise TypeError("Missing required property 'slave_availability_zone'")
            __props__.__dict__["slave_availability_zone"] = slave_availability_zone
            __props__.__dict__["slave_private_ip"] = slave_private_ip
            if subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'subnet_id'")
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["tags"] = tags
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["data_disk_size"] = None
            __props__.__dict__["master_id"] = None
            __props__.__dict__["public_ip"] = None
            __props__.__dict__["slave_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["version"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["password"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(CbhHaInstance, __self__).__init__(
            'cloudru:index/cbhHaInstance:CbhHaInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            attach_disk_size: Optional[pulumi.Input[_builtins.int]] = None,
            auto_renew: Optional[pulumi.Input[_builtins.str]] = None,
            charging_mode: Optional[pulumi.Input[_builtins.str]] = None,
            data_disk_size: Optional[pulumi.Input[_builtins.float]] = None,
            enterprise_project_id: Optional[pulumi.Input[_builtins.str]] = None,
            flavor_id: Optional[pulumi.Input[_builtins.str]] = None,
            floating_ip: Optional[pulumi.Input[_builtins.str]] = None,
            ipv6_enable: Optional[pulumi.Input[_builtins.bool]] = None,
            master_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
            master_id: Optional[pulumi.Input[_builtins.str]] = None,
            master_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            password: Optional[pulumi.Input[_builtins.str]] = None,
            period: Optional[pulumi.Input[_builtins.int]] = None,
            period_unit: Optional[pulumi.Input[_builtins.str]] = None,
            power_action: Optional[pulumi.Input[_builtins.str]] = None,
            public_ip: Optional[pulumi.Input[_builtins.str]] = None,
            public_ip_id: Optional[pulumi.Input[_builtins.str]] = None,
            region: Optional[pulumi.Input[_builtins.str]] = None,
            security_group_id: Optional[pulumi.Input[_builtins.str]] = None,
            slave_availability_zone: Optional[pulumi.Input[_builtins.str]] = None,
            slave_id: Optional[pulumi.Input[_builtins.str]] = None,
            slave_private_ip: Optional[pulumi.Input[_builtins.str]] = None,
            status: Optional[pulumi.Input[_builtins.str]] = None,
            subnet_id: Optional[pulumi.Input[_builtins.str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[_builtins.str]]]] = None,
            version: Optional[pulumi.Input[_builtins.str]] = None,
            vpc_id: Optional[pulumi.Input[_builtins.str]] = None) -> 'CbhHaInstance':
        """
        Get an existing CbhHaInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.int] attach_disk_size: Specifies the size of the additional data disk for the CBH HA instance.
        :param pulumi.Input[_builtins.str] auto_renew: Specifies whether auto renew is enabled.
        :param pulumi.Input[_builtins.str] charging_mode: Specifies the charging mode of the CBH HA instance.
        :param pulumi.Input[_builtins.float] data_disk_size: The data disk size of the CBH HA instance.
        :param pulumi.Input[_builtins.str] enterprise_project_id: Specifies the enterprise project ID to which the CBH HA instance belongs.
        :param pulumi.Input[_builtins.str] flavor_id: Specifies the product ID of the CBH server.
        :param pulumi.Input[_builtins.str] floating_ip: Specifies the floating IP address of the CBH HA instance.
        :param pulumi.Input[_builtins.bool] ipv6_enable: Specifies whether the IPv6 network is enabled.
        :param pulumi.Input[_builtins.str] master_availability_zone: Specifies the availability zone name of the master instance.
        :param pulumi.Input[_builtins.str] master_id: The ID of the master instance.
        :param pulumi.Input[_builtins.str] master_private_ip: Specifies the private IP address of the master instance.
        :param pulumi.Input[_builtins.str] name: Specifies the name of the CBH HA instance.
        :param pulumi.Input[_builtins.str] password: Specifies the password for logging in to the management console.
        :param pulumi.Input[_builtins.int] period: Specifies the charging period of the CBH HA instance.
        :param pulumi.Input[_builtins.str] period_unit: Specifies the charging period unit of the CBH HA instance.
        :param pulumi.Input[_builtins.str] power_action: Specifies the power action after the CBH HA instance is created.
        :param pulumi.Input[_builtins.str] public_ip: The elastic IP address.
        :param pulumi.Input[_builtins.str] public_ip_id: Specifies the ID of the elastic IP.
        :param pulumi.Input[_builtins.str] region: Specifies the region in which to create the CBH HA instance.
        :param pulumi.Input[_builtins.str] security_group_id: Specifies the IDs of the security group.
        :param pulumi.Input[_builtins.str] slave_availability_zone: Specifies the availability zone name of the slave instance.
        :param pulumi.Input[_builtins.str] slave_id: The ID of the slave instance.
        :param pulumi.Input[_builtins.str] slave_private_ip: Specifies the private IP address of the slave instance.
        :param pulumi.Input[_builtins.str] status: The status of the CBH HA instance.
        :param pulumi.Input[_builtins.str] subnet_id: Specifies the ID of a subnet.
        :param pulumi.Input[_builtins.str] version: The current version of the CBH HA instance image.
        :param pulumi.Input[_builtins.str] vpc_id: Specifies the ID of a VPC.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CbhHaInstanceState.__new__(_CbhHaInstanceState)

        __props__.__dict__["attach_disk_size"] = attach_disk_size
        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["charging_mode"] = charging_mode
        __props__.__dict__["data_disk_size"] = data_disk_size
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["flavor_id"] = flavor_id
        __props__.__dict__["floating_ip"] = floating_ip
        __props__.__dict__["ipv6_enable"] = ipv6_enable
        __props__.__dict__["master_availability_zone"] = master_availability_zone
        __props__.__dict__["master_id"] = master_id
        __props__.__dict__["master_private_ip"] = master_private_ip
        __props__.__dict__["name"] = name
        __props__.__dict__["password"] = password
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["power_action"] = power_action
        __props__.__dict__["public_ip"] = public_ip
        __props__.__dict__["public_ip_id"] = public_ip_id
        __props__.__dict__["region"] = region
        __props__.__dict__["security_group_id"] = security_group_id
        __props__.__dict__["slave_availability_zone"] = slave_availability_zone
        __props__.__dict__["slave_id"] = slave_id
        __props__.__dict__["slave_private_ip"] = slave_private_ip
        __props__.__dict__["status"] = status
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["tags"] = tags
        __props__.__dict__["version"] = version
        __props__.__dict__["vpc_id"] = vpc_id
        return CbhHaInstance(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="attachDiskSize")
    def attach_disk_size(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Specifies the size of the additional data disk for the CBH HA instance.
        """
        return pulumi.get(self, "attach_disk_size")

    @_builtins.property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies whether auto renew is enabled.
        """
        return pulumi.get(self, "auto_renew")

    @_builtins.property
    @pulumi.getter(name="chargingMode")
    def charging_mode(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging mode of the CBH HA instance.
        """
        return pulumi.get(self, "charging_mode")

    @_builtins.property
    @pulumi.getter(name="dataDiskSize")
    def data_disk_size(self) -> pulumi.Output[_builtins.float]:
        """
        The data disk size of the CBH HA instance.
        """
        return pulumi.get(self, "data_disk_size")

    @_builtins.property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the enterprise project ID to which the CBH HA instance belongs.
        """
        return pulumi.get(self, "enterprise_project_id")

    @_builtins.property
    @pulumi.getter(name="flavorId")
    def flavor_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the product ID of the CBH server.
        """
        return pulumi.get(self, "flavor_id")

    @_builtins.property
    @pulumi.getter(name="floatingIp")
    def floating_ip(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the floating IP address of the CBH HA instance.
        """
        return pulumi.get(self, "floating_ip")

    @_builtins.property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Specifies whether the IPv6 network is enabled.
        """
        return pulumi.get(self, "ipv6_enable")

    @_builtins.property
    @pulumi.getter(name="masterAvailabilityZone")
    def master_availability_zone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the availability zone name of the master instance.
        """
        return pulumi.get(self, "master_availability_zone")

    @_builtins.property
    @pulumi.getter(name="masterId")
    def master_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the master instance.
        """
        return pulumi.get(self, "master_id")

    @_builtins.property
    @pulumi.getter(name="masterPrivateIp")
    def master_private_ip(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the private IP address of the master instance.
        """
        return pulumi.get(self, "master_private_ip")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the CBH HA instance.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def password(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the password for logging in to the management console.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def period(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the charging period of the CBH HA instance.
        """
        return pulumi.get(self, "period")

    @_builtins.property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the charging period unit of the CBH HA instance.
        """
        return pulumi.get(self, "period_unit")

    @_builtins.property
    @pulumi.getter(name="powerAction")
    def power_action(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the power action after the CBH HA instance is created.
        """
        return pulumi.get(self, "power_action")

    @_builtins.property
    @pulumi.getter(name="publicIp")
    def public_ip(self) -> pulumi.Output[_builtins.str]:
        """
        The elastic IP address.
        """
        return pulumi.get(self, "public_ip")

    @_builtins.property
    @pulumi.getter(name="publicIpId")
    def public_ip_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies the ID of the elastic IP.
        """
        return pulumi.get(self, "public_ip_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the region in which to create the CBH HA instance.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the IDs of the security group.
        """
        return pulumi.get(self, "security_group_id")

    @_builtins.property
    @pulumi.getter(name="slaveAvailabilityZone")
    def slave_availability_zone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the availability zone name of the slave instance.
        """
        return pulumi.get(self, "slave_availability_zone")

    @_builtins.property
    @pulumi.getter(name="slaveId")
    def slave_id(self) -> pulumi.Output[_builtins.str]:
        """
        The ID of the slave instance.
        """
        return pulumi.get(self, "slave_id")

    @_builtins.property
    @pulumi.getter(name="slavePrivateIp")
    def slave_private_ip(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the private IP address of the slave instance.
        """
        return pulumi.get(self, "slave_private_ip")

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Output[_builtins.str]:
        """
        The status of the CBH HA instance.
        """
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a subnet.
        """
        return pulumi.get(self, "subnet_id")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, _builtins.str]]]:
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.str]:
        """
        The current version of the CBH HA instance image.
        """
        return pulumi.get(self, "version")

    @_builtins.property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the ID of a VPC.
        """
        return pulumi.get(self, "vpc_id")

