// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { EndpointArgs, EndpointState } from "./endpoint";
export type Endpoint = import("./endpoint").Endpoint;
export const Endpoint: typeof import("./endpoint").Endpoint = null as any;
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));

export { GetPublicServicesArgs, GetPublicServicesResult, GetPublicServicesOutputArgs } from "./getPublicServices";
export const getPublicServices: typeof import("./getPublicServices").getPublicServices = null as any;
export const getPublicServicesOutput: typeof import("./getPublicServices").getPublicServicesOutput = null as any;
utilities.lazyLoad(exports, ["getPublicServices","getPublicServicesOutput"], () => require("./getPublicServices"));

export { ServiceArgs, ServiceState } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudru:Vpcep/endpoint:Endpoint":
                return new Endpoint(name, <any>undefined, { urn })
            case "cloudru:Vpcep/service:Service":
                return new Service(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudru", "Vpcep/endpoint", _module)
pulumi.runtime.registerResourceModule("cloudru", "Vpcep/service", _module)
