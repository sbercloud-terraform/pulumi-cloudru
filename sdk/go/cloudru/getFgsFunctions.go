// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Use this data source to filter FGS functions within SberCloud.
//
// ## Example Usage
//
// ### Obtain all public functions
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	sbercloud "github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sbercloud.GetFgsFunctions(ctx, &cloudru.GetFgsFunctionsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Obtain specific public function by package name
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	sbercloud "github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sbercloud.GetFgsFunctions(ctx, &cloudru.GetFgsFunctionsArgs{
//				PackageName: pulumi.StringRef("default"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFgsFunctions(ctx *pulumi.Context, args *GetFgsFunctionsArgs, opts ...pulumi.InvokeOption) (*GetFgsFunctionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFgsFunctionsResult
	err := ctx.Invoke("sbercloud:index/getFgsFunctions:getFgsFunctions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFgsFunctions.
type GetFgsFunctionsArgs struct {
	// Specifies the ID of the enterprise project to which the functions belong.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the function name used to query the specified function.
	Name *string `pulumi:"name"`
	// Specifies the package name used to query the functions.
	PackageName *string `pulumi:"packageName"`
	// Specifies the region in which to obtain the functions.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the dependency package runtime used to query the functions.\
	// The valid values are as follows:
	// + **Java8**
	// + **Java11**
	// + **Node.js6.10**
	// + **Node.js8.10**
	// + **Node.js10.16**
	// + **Node.js12.13**
	// + **Node.js14.18**
	// + **Node.js16.17**
	// + **Node.js18.15**
	// + **Python2.7**
	// + **Python3.6**
	// + **Python3.9**
	// + **Python3.10**
	// + **Go1.x**
	// + **C#(.NET Core 2.1)**
	// + **C#(.NET Core 3.1)**
	// + **Custom**
	// + **PHP7.3**
	// + **http**
	// + **Custom Image**
	// + **Cangjie1.0**
	Runtime *string `pulumi:"runtime"`
	// Specifies the function URN used to query the specified function.
	Urn *string `pulumi:"urn"`
}

// A collection of values returned by getFgsFunctions.
type GetFgsFunctionsResult struct {
	// The enterprise project ID to which the function belongs.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// All functions that match the filter parameters.\
	// The functions structure is documented below.
	Functions []GetFgsFunctionsFunction `pulumi:"functions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The function name.
	Name        *string `pulumi:"name"`
	PackageName *string `pulumi:"packageName"`
	Region      string  `pulumi:"region"`
	// The dependency package runtime of the function.
	Runtime *string `pulumi:"runtime"`
	// The function URN.
	Urn *string `pulumi:"urn"`
}

func GetFgsFunctionsOutput(ctx *pulumi.Context, args GetFgsFunctionsOutputArgs, opts ...pulumi.InvokeOption) GetFgsFunctionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFgsFunctionsResultOutput, error) {
			args := v.(GetFgsFunctionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getFgsFunctions:getFgsFunctions", args, GetFgsFunctionsResultOutput{}, options).(GetFgsFunctionsResultOutput), nil
		}).(GetFgsFunctionsResultOutput)
}

// A collection of arguments for invoking getFgsFunctions.
type GetFgsFunctionsOutputArgs struct {
	// Specifies the ID of the enterprise project to which the functions belong.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the function name used to query the specified function.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the package name used to query the functions.
	PackageName pulumi.StringPtrInput `pulumi:"packageName"`
	// Specifies the region in which to obtain the functions.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the dependency package runtime used to query the functions.\
	// The valid values are as follows:
	// + **Java8**
	// + **Java11**
	// + **Node.js6.10**
	// + **Node.js8.10**
	// + **Node.js10.16**
	// + **Node.js12.13**
	// + **Node.js14.18**
	// + **Node.js16.17**
	// + **Node.js18.15**
	// + **Python2.7**
	// + **Python3.6**
	// + **Python3.9**
	// + **Python3.10**
	// + **Go1.x**
	// + **C#(.NET Core 2.1)**
	// + **C#(.NET Core 3.1)**
	// + **Custom**
	// + **PHP7.3**
	// + **http**
	// + **Custom Image**
	// + **Cangjie1.0**
	Runtime pulumi.StringPtrInput `pulumi:"runtime"`
	// Specifies the function URN used to query the specified function.
	Urn pulumi.StringPtrInput `pulumi:"urn"`
}

func (GetFgsFunctionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFgsFunctionsArgs)(nil)).Elem()
}

// A collection of values returned by getFgsFunctions.
type GetFgsFunctionsResultOutput struct{ *pulumi.OutputState }

func (GetFgsFunctionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFgsFunctionsResult)(nil)).Elem()
}

func (o GetFgsFunctionsResultOutput) ToGetFgsFunctionsResultOutput() GetFgsFunctionsResultOutput {
	return o
}

func (o GetFgsFunctionsResultOutput) ToGetFgsFunctionsResultOutputWithContext(ctx context.Context) GetFgsFunctionsResultOutput {
	return o
}

// The enterprise project ID to which the function belongs.
func (o GetFgsFunctionsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// All functions that match the filter parameters.\
// The functions structure is documented below.
func (o GetFgsFunctionsResultOutput) Functions() GetFgsFunctionsFunctionArrayOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) []GetFgsFunctionsFunction { return v.Functions }).(GetFgsFunctionsFunctionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFgsFunctionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The function name.
func (o GetFgsFunctionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetFgsFunctionsResultOutput) PackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) *string { return v.PackageName }).(pulumi.StringPtrOutput)
}

func (o GetFgsFunctionsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) string { return v.Region }).(pulumi.StringOutput)
}

// The dependency package runtime of the function.
func (o GetFgsFunctionsResultOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

// The function URN.
func (o GetFgsFunctionsResultOutput) Urn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFgsFunctionsResult) *string { return v.Urn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFgsFunctionsResultOutput{})
}
