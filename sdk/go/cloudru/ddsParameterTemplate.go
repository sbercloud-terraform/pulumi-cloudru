// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type DdsParameterTemplate struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the parameter template description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the parameter template name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the node type of parameter template.
	NodeType pulumi.StringOutput `pulumi:"nodeType"`
	// Specifies the database version.
	NodeVersion pulumi.StringOutput `pulumi:"nodeVersion"`
	// Specifies the mapping between parameter names and parameter values.
	ParameterValues pulumi.StringMapOutput `pulumi:"parameterValues"`
	// Indicates the parameters defined by users based on the default parameter templates.
	Parameters DdsParameterTemplateParameterArrayOutput `pulumi:"parameters"`
	Region     pulumi.StringOutput                      `pulumi:"region"`
	UpdatedAt  pulumi.StringOutput                      `pulumi:"updatedAt"`
}

// NewDdsParameterTemplate registers a new resource with the given unique name, arguments, and options.
func NewDdsParameterTemplate(ctx *pulumi.Context,
	name string, args *DdsParameterTemplateArgs, opts ...pulumi.ResourceOption) (*DdsParameterTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NodeType == nil {
		return nil, errors.New("invalid value for required argument 'NodeType'")
	}
	if args.NodeVersion == nil {
		return nil, errors.New("invalid value for required argument 'NodeVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DdsParameterTemplate
	err := ctx.RegisterResource("sbercloud:index/ddsParameterTemplate:DdsParameterTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDdsParameterTemplate gets an existing DdsParameterTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDdsParameterTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DdsParameterTemplateState, opts ...pulumi.ResourceOption) (*DdsParameterTemplate, error) {
	var resource DdsParameterTemplate
	err := ctx.ReadResource("sbercloud:index/ddsParameterTemplate:DdsParameterTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DdsParameterTemplate resources.
type ddsParameterTemplateState struct {
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the parameter template description.
	Description *string `pulumi:"description"`
	// Specifies the parameter template name.
	Name *string `pulumi:"name"`
	// Specifies the node type of parameter template.
	NodeType *string `pulumi:"nodeType"`
	// Specifies the database version.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Specifies the mapping between parameter names and parameter values.
	ParameterValues map[string]string `pulumi:"parameterValues"`
	// Indicates the parameters defined by users based on the default parameter templates.
	Parameters []DdsParameterTemplateParameter `pulumi:"parameters"`
	Region     *string                         `pulumi:"region"`
	UpdatedAt  *string                         `pulumi:"updatedAt"`
}

type DdsParameterTemplateState struct {
	CreatedAt pulumi.StringPtrInput
	// Specifies the parameter template description.
	Description pulumi.StringPtrInput
	// Specifies the parameter template name.
	Name pulumi.StringPtrInput
	// Specifies the node type of parameter template.
	NodeType pulumi.StringPtrInput
	// Specifies the database version.
	NodeVersion pulumi.StringPtrInput
	// Specifies the mapping between parameter names and parameter values.
	ParameterValues pulumi.StringMapInput
	// Indicates the parameters defined by users based on the default parameter templates.
	Parameters DdsParameterTemplateParameterArrayInput
	Region     pulumi.StringPtrInput
	UpdatedAt  pulumi.StringPtrInput
}

func (DdsParameterTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ddsParameterTemplateState)(nil)).Elem()
}

type ddsParameterTemplateArgs struct {
	// Specifies the parameter template description.
	Description *string `pulumi:"description"`
	// Specifies the parameter template name.
	Name *string `pulumi:"name"`
	// Specifies the node type of parameter template.
	NodeType string `pulumi:"nodeType"`
	// Specifies the database version.
	NodeVersion string `pulumi:"nodeVersion"`
	// Specifies the mapping between parameter names and parameter values.
	ParameterValues map[string]string `pulumi:"parameterValues"`
	Region          *string           `pulumi:"region"`
}

// The set of arguments for constructing a DdsParameterTemplate resource.
type DdsParameterTemplateArgs struct {
	// Specifies the parameter template description.
	Description pulumi.StringPtrInput
	// Specifies the parameter template name.
	Name pulumi.StringPtrInput
	// Specifies the node type of parameter template.
	NodeType pulumi.StringInput
	// Specifies the database version.
	NodeVersion pulumi.StringInput
	// Specifies the mapping between parameter names and parameter values.
	ParameterValues pulumi.StringMapInput
	Region          pulumi.StringPtrInput
}

func (DdsParameterTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ddsParameterTemplateArgs)(nil)).Elem()
}

type DdsParameterTemplateInput interface {
	pulumi.Input

	ToDdsParameterTemplateOutput() DdsParameterTemplateOutput
	ToDdsParameterTemplateOutputWithContext(ctx context.Context) DdsParameterTemplateOutput
}

func (*DdsParameterTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsParameterTemplate)(nil)).Elem()
}

func (i *DdsParameterTemplate) ToDdsParameterTemplateOutput() DdsParameterTemplateOutput {
	return i.ToDdsParameterTemplateOutputWithContext(context.Background())
}

func (i *DdsParameterTemplate) ToDdsParameterTemplateOutputWithContext(ctx context.Context) DdsParameterTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsParameterTemplateOutput)
}

// DdsParameterTemplateArrayInput is an input type that accepts DdsParameterTemplateArray and DdsParameterTemplateArrayOutput values.
// You can construct a concrete instance of `DdsParameterTemplateArrayInput` via:
//
//	DdsParameterTemplateArray{ DdsParameterTemplateArgs{...} }
type DdsParameterTemplateArrayInput interface {
	pulumi.Input

	ToDdsParameterTemplateArrayOutput() DdsParameterTemplateArrayOutput
	ToDdsParameterTemplateArrayOutputWithContext(context.Context) DdsParameterTemplateArrayOutput
}

type DdsParameterTemplateArray []DdsParameterTemplateInput

func (DdsParameterTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdsParameterTemplate)(nil)).Elem()
}

func (i DdsParameterTemplateArray) ToDdsParameterTemplateArrayOutput() DdsParameterTemplateArrayOutput {
	return i.ToDdsParameterTemplateArrayOutputWithContext(context.Background())
}

func (i DdsParameterTemplateArray) ToDdsParameterTemplateArrayOutputWithContext(ctx context.Context) DdsParameterTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsParameterTemplateArrayOutput)
}

// DdsParameterTemplateMapInput is an input type that accepts DdsParameterTemplateMap and DdsParameterTemplateMapOutput values.
// You can construct a concrete instance of `DdsParameterTemplateMapInput` via:
//
//	DdsParameterTemplateMap{ "key": DdsParameterTemplateArgs{...} }
type DdsParameterTemplateMapInput interface {
	pulumi.Input

	ToDdsParameterTemplateMapOutput() DdsParameterTemplateMapOutput
	ToDdsParameterTemplateMapOutputWithContext(context.Context) DdsParameterTemplateMapOutput
}

type DdsParameterTemplateMap map[string]DdsParameterTemplateInput

func (DdsParameterTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdsParameterTemplate)(nil)).Elem()
}

func (i DdsParameterTemplateMap) ToDdsParameterTemplateMapOutput() DdsParameterTemplateMapOutput {
	return i.ToDdsParameterTemplateMapOutputWithContext(context.Background())
}

func (i DdsParameterTemplateMap) ToDdsParameterTemplateMapOutputWithContext(ctx context.Context) DdsParameterTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdsParameterTemplateMapOutput)
}

type DdsParameterTemplateOutput struct{ *pulumi.OutputState }

func (DdsParameterTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdsParameterTemplate)(nil)).Elem()
}

func (o DdsParameterTemplateOutput) ToDdsParameterTemplateOutput() DdsParameterTemplateOutput {
	return o
}

func (o DdsParameterTemplateOutput) ToDdsParameterTemplateOutputWithContext(ctx context.Context) DdsParameterTemplateOutput {
	return o
}

func (o DdsParameterTemplateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the parameter template description.
func (o DdsParameterTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the parameter template name.
func (o DdsParameterTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the node type of parameter template.
func (o DdsParameterTemplateOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringOutput { return v.NodeType }).(pulumi.StringOutput)
}

// Specifies the database version.
func (o DdsParameterTemplateOutput) NodeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringOutput { return v.NodeVersion }).(pulumi.StringOutput)
}

// Specifies the mapping between parameter names and parameter values.
func (o DdsParameterTemplateOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringMapOutput { return v.ParameterValues }).(pulumi.StringMapOutput)
}

// Indicates the parameters defined by users based on the default parameter templates.
func (o DdsParameterTemplateOutput) Parameters() DdsParameterTemplateParameterArrayOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) DdsParameterTemplateParameterArrayOutput { return v.Parameters }).(DdsParameterTemplateParameterArrayOutput)
}

func (o DdsParameterTemplateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DdsParameterTemplateOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DdsParameterTemplate) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type DdsParameterTemplateArrayOutput struct{ *pulumi.OutputState }

func (DdsParameterTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DdsParameterTemplate)(nil)).Elem()
}

func (o DdsParameterTemplateArrayOutput) ToDdsParameterTemplateArrayOutput() DdsParameterTemplateArrayOutput {
	return o
}

func (o DdsParameterTemplateArrayOutput) ToDdsParameterTemplateArrayOutputWithContext(ctx context.Context) DdsParameterTemplateArrayOutput {
	return o
}

func (o DdsParameterTemplateArrayOutput) Index(i pulumi.IntInput) DdsParameterTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DdsParameterTemplate {
		return vs[0].([]*DdsParameterTemplate)[vs[1].(int)]
	}).(DdsParameterTemplateOutput)
}

type DdsParameterTemplateMapOutput struct{ *pulumi.OutputState }

func (DdsParameterTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DdsParameterTemplate)(nil)).Elem()
}

func (o DdsParameterTemplateMapOutput) ToDdsParameterTemplateMapOutput() DdsParameterTemplateMapOutput {
	return o
}

func (o DdsParameterTemplateMapOutput) ToDdsParameterTemplateMapOutputWithContext(ctx context.Context) DdsParameterTemplateMapOutput {
	return o
}

func (o DdsParameterTemplateMapOutput) MapIndex(k pulumi.StringInput) DdsParameterTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DdsParameterTemplate {
		return vs[0].(map[string]*DdsParameterTemplate)[vs[1].(string)]
	}).(DdsParameterTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DdsParameterTemplateInput)(nil)).Elem(), &DdsParameterTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsParameterTemplateArrayInput)(nil)).Elem(), DdsParameterTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DdsParameterTemplateMapInput)(nil)).Elem(), DdsParameterTemplateMap{})
	pulumi.RegisterOutputType(DdsParameterTemplateOutput{})
	pulumi.RegisterOutputType(DdsParameterTemplateArrayOutput{})
	pulumi.RegisterOutputType(DdsParameterTemplateMapOutput{})
}
