// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package drs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type JobDestinationDb struct {
	EngineType      string  `pulumi:"engineType"`
	InstanceId      *string `pulumi:"instanceId"`
	Ip              string  `pulumi:"ip"`
	Name            *string `pulumi:"name"`
	Password        string  `pulumi:"password"`
	Port            int     `pulumi:"port"`
	Region          *string `pulumi:"region"`
	SslCertCheckSum *string `pulumi:"sslCertCheckSum"`
	SslCertKey      *string `pulumi:"sslCertKey"`
	SslCertName     *string `pulumi:"sslCertName"`
	SslCertPassword *string `pulumi:"sslCertPassword"`
	SslEnabled      *bool   `pulumi:"sslEnabled"`
	SubnetId        *string `pulumi:"subnetId"`
	User            string  `pulumi:"user"`
}

// JobDestinationDbInput is an input type that accepts JobDestinationDbArgs and JobDestinationDbOutput values.
// You can construct a concrete instance of `JobDestinationDbInput` via:
//
//	JobDestinationDbArgs{...}
type JobDestinationDbInput interface {
	pulumi.Input

	ToJobDestinationDbOutput() JobDestinationDbOutput
	ToJobDestinationDbOutputWithContext(context.Context) JobDestinationDbOutput
}

type JobDestinationDbArgs struct {
	EngineType      pulumi.StringInput    `pulumi:"engineType"`
	InstanceId      pulumi.StringPtrInput `pulumi:"instanceId"`
	Ip              pulumi.StringInput    `pulumi:"ip"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
	Password        pulumi.StringInput    `pulumi:"password"`
	Port            pulumi.IntInput       `pulumi:"port"`
	Region          pulumi.StringPtrInput `pulumi:"region"`
	SslCertCheckSum pulumi.StringPtrInput `pulumi:"sslCertCheckSum"`
	SslCertKey      pulumi.StringPtrInput `pulumi:"sslCertKey"`
	SslCertName     pulumi.StringPtrInput `pulumi:"sslCertName"`
	SslCertPassword pulumi.StringPtrInput `pulumi:"sslCertPassword"`
	SslEnabled      pulumi.BoolPtrInput   `pulumi:"sslEnabled"`
	SubnetId        pulumi.StringPtrInput `pulumi:"subnetId"`
	User            pulumi.StringInput    `pulumi:"user"`
}

func (JobDestinationDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDestinationDb)(nil)).Elem()
}

func (i JobDestinationDbArgs) ToJobDestinationDbOutput() JobDestinationDbOutput {
	return i.ToJobDestinationDbOutputWithContext(context.Background())
}

func (i JobDestinationDbArgs) ToJobDestinationDbOutputWithContext(ctx context.Context) JobDestinationDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDestinationDbOutput)
}

func (i JobDestinationDbArgs) ToJobDestinationDbPtrOutput() JobDestinationDbPtrOutput {
	return i.ToJobDestinationDbPtrOutputWithContext(context.Background())
}

func (i JobDestinationDbArgs) ToJobDestinationDbPtrOutputWithContext(ctx context.Context) JobDestinationDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDestinationDbOutput).ToJobDestinationDbPtrOutputWithContext(ctx)
}

// JobDestinationDbPtrInput is an input type that accepts JobDestinationDbArgs, JobDestinationDbPtr and JobDestinationDbPtrOutput values.
// You can construct a concrete instance of `JobDestinationDbPtrInput` via:
//
//	        JobDestinationDbArgs{...}
//
//	or:
//
//	        nil
type JobDestinationDbPtrInput interface {
	pulumi.Input

	ToJobDestinationDbPtrOutput() JobDestinationDbPtrOutput
	ToJobDestinationDbPtrOutputWithContext(context.Context) JobDestinationDbPtrOutput
}

type jobDestinationDbPtrType JobDestinationDbArgs

func JobDestinationDbPtr(v *JobDestinationDbArgs) JobDestinationDbPtrInput {
	return (*jobDestinationDbPtrType)(v)
}

func (*jobDestinationDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDestinationDb)(nil)).Elem()
}

func (i *jobDestinationDbPtrType) ToJobDestinationDbPtrOutput() JobDestinationDbPtrOutput {
	return i.ToJobDestinationDbPtrOutputWithContext(context.Background())
}

func (i *jobDestinationDbPtrType) ToJobDestinationDbPtrOutputWithContext(ctx context.Context) JobDestinationDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDestinationDbPtrOutput)
}

type JobDestinationDbOutput struct{ *pulumi.OutputState }

func (JobDestinationDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDestinationDb)(nil)).Elem()
}

func (o JobDestinationDbOutput) ToJobDestinationDbOutput() JobDestinationDbOutput {
	return o
}

func (o JobDestinationDbOutput) ToJobDestinationDbOutputWithContext(ctx context.Context) JobDestinationDbOutput {
	return o
}

func (o JobDestinationDbOutput) ToJobDestinationDbPtrOutput() JobDestinationDbPtrOutput {
	return o.ToJobDestinationDbPtrOutputWithContext(context.Background())
}

func (o JobDestinationDbOutput) ToJobDestinationDbPtrOutputWithContext(ctx context.Context) JobDestinationDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDestinationDb) *JobDestinationDb {
		return &v
	}).(JobDestinationDbPtrOutput)
}

func (o JobDestinationDbOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v JobDestinationDb) string { return v.EngineType }).(pulumi.StringOutput)
}

func (o JobDestinationDbOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v JobDestinationDb) string { return v.Ip }).(pulumi.StringOutput)
}

func (o JobDestinationDbOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v JobDestinationDb) string { return v.Password }).(pulumi.StringOutput)
}

func (o JobDestinationDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobDestinationDb) int { return v.Port }).(pulumi.IntOutput)
}

func (o JobDestinationDbOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.SslCertCheckSum }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.SslCertKey }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.SslCertName }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.SslCertPassword }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

func (o JobDestinationDbOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDestinationDb) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v JobDestinationDb) string { return v.User }).(pulumi.StringOutput)
}

type JobDestinationDbPtrOutput struct{ *pulumi.OutputState }

func (JobDestinationDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDestinationDb)(nil)).Elem()
}

func (o JobDestinationDbPtrOutput) ToJobDestinationDbPtrOutput() JobDestinationDbPtrOutput {
	return o
}

func (o JobDestinationDbPtrOutput) ToJobDestinationDbPtrOutputWithContext(ctx context.Context) JobDestinationDbPtrOutput {
	return o
}

func (o JobDestinationDbPtrOutput) Elem() JobDestinationDbOutput {
	return o.ApplyT(func(v *JobDestinationDb) JobDestinationDb {
		if v != nil {
			return *v
		}
		var ret JobDestinationDb
		return ret
	}).(JobDestinationDbOutput)
}

func (o JobDestinationDbPtrOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.EngineType
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o JobDestinationDbPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertCheckSum
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertKey
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertName
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertPassword
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o JobDestinationDbPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func (o JobDestinationDbPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobDestinationDb) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type JobLimitSpeed struct {
	EndTime   string `pulumi:"endTime"`
	Speed     string `pulumi:"speed"`
	StartTime string `pulumi:"startTime"`
}

// JobLimitSpeedInput is an input type that accepts JobLimitSpeedArgs and JobLimitSpeedOutput values.
// You can construct a concrete instance of `JobLimitSpeedInput` via:
//
//	JobLimitSpeedArgs{...}
type JobLimitSpeedInput interface {
	pulumi.Input

	ToJobLimitSpeedOutput() JobLimitSpeedOutput
	ToJobLimitSpeedOutputWithContext(context.Context) JobLimitSpeedOutput
}

type JobLimitSpeedArgs struct {
	EndTime   pulumi.StringInput `pulumi:"endTime"`
	Speed     pulumi.StringInput `pulumi:"speed"`
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (JobLimitSpeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLimitSpeed)(nil)).Elem()
}

func (i JobLimitSpeedArgs) ToJobLimitSpeedOutput() JobLimitSpeedOutput {
	return i.ToJobLimitSpeedOutputWithContext(context.Background())
}

func (i JobLimitSpeedArgs) ToJobLimitSpeedOutputWithContext(ctx context.Context) JobLimitSpeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLimitSpeedOutput)
}

// JobLimitSpeedArrayInput is an input type that accepts JobLimitSpeedArray and JobLimitSpeedArrayOutput values.
// You can construct a concrete instance of `JobLimitSpeedArrayInput` via:
//
//	JobLimitSpeedArray{ JobLimitSpeedArgs{...} }
type JobLimitSpeedArrayInput interface {
	pulumi.Input

	ToJobLimitSpeedArrayOutput() JobLimitSpeedArrayOutput
	ToJobLimitSpeedArrayOutputWithContext(context.Context) JobLimitSpeedArrayOutput
}

type JobLimitSpeedArray []JobLimitSpeedInput

func (JobLimitSpeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLimitSpeed)(nil)).Elem()
}

func (i JobLimitSpeedArray) ToJobLimitSpeedArrayOutput() JobLimitSpeedArrayOutput {
	return i.ToJobLimitSpeedArrayOutputWithContext(context.Background())
}

func (i JobLimitSpeedArray) ToJobLimitSpeedArrayOutputWithContext(ctx context.Context) JobLimitSpeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLimitSpeedArrayOutput)
}

type JobLimitSpeedOutput struct{ *pulumi.OutputState }

func (JobLimitSpeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLimitSpeed)(nil)).Elem()
}

func (o JobLimitSpeedOutput) ToJobLimitSpeedOutput() JobLimitSpeedOutput {
	return o
}

func (o JobLimitSpeedOutput) ToJobLimitSpeedOutputWithContext(ctx context.Context) JobLimitSpeedOutput {
	return o
}

func (o JobLimitSpeedOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobLimitSpeed) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o JobLimitSpeedOutput) Speed() pulumi.StringOutput {
	return o.ApplyT(func(v JobLimitSpeed) string { return v.Speed }).(pulumi.StringOutput)
}

func (o JobLimitSpeedOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v JobLimitSpeed) string { return v.StartTime }).(pulumi.StringOutput)
}

type JobLimitSpeedArrayOutput struct{ *pulumi.OutputState }

func (JobLimitSpeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLimitSpeed)(nil)).Elem()
}

func (o JobLimitSpeedArrayOutput) ToJobLimitSpeedArrayOutput() JobLimitSpeedArrayOutput {
	return o
}

func (o JobLimitSpeedArrayOutput) ToJobLimitSpeedArrayOutputWithContext(ctx context.Context) JobLimitSpeedArrayOutput {
	return o
}

func (o JobLimitSpeedArrayOutput) Index(i pulumi.IntInput) JobLimitSpeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobLimitSpeed {
		return vs[0].([]JobLimitSpeed)[vs[1].(int)]
	}).(JobLimitSpeedOutput)
}

type JobSourceDb struct {
	EngineType      string  `pulumi:"engineType"`
	InstanceId      *string `pulumi:"instanceId"`
	Ip              string  `pulumi:"ip"`
	Name            *string `pulumi:"name"`
	Password        string  `pulumi:"password"`
	Port            int     `pulumi:"port"`
	Region          *string `pulumi:"region"`
	SslCertCheckSum *string `pulumi:"sslCertCheckSum"`
	SslCertKey      *string `pulumi:"sslCertKey"`
	SslCertName     *string `pulumi:"sslCertName"`
	SslCertPassword *string `pulumi:"sslCertPassword"`
	SslEnabled      *bool   `pulumi:"sslEnabled"`
	SubnetId        *string `pulumi:"subnetId"`
	User            string  `pulumi:"user"`
}

// JobSourceDbInput is an input type that accepts JobSourceDbArgs and JobSourceDbOutput values.
// You can construct a concrete instance of `JobSourceDbInput` via:
//
//	JobSourceDbArgs{...}
type JobSourceDbInput interface {
	pulumi.Input

	ToJobSourceDbOutput() JobSourceDbOutput
	ToJobSourceDbOutputWithContext(context.Context) JobSourceDbOutput
}

type JobSourceDbArgs struct {
	EngineType      pulumi.StringInput    `pulumi:"engineType"`
	InstanceId      pulumi.StringPtrInput `pulumi:"instanceId"`
	Ip              pulumi.StringInput    `pulumi:"ip"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
	Password        pulumi.StringInput    `pulumi:"password"`
	Port            pulumi.IntInput       `pulumi:"port"`
	Region          pulumi.StringPtrInput `pulumi:"region"`
	SslCertCheckSum pulumi.StringPtrInput `pulumi:"sslCertCheckSum"`
	SslCertKey      pulumi.StringPtrInput `pulumi:"sslCertKey"`
	SslCertName     pulumi.StringPtrInput `pulumi:"sslCertName"`
	SslCertPassword pulumi.StringPtrInput `pulumi:"sslCertPassword"`
	SslEnabled      pulumi.BoolPtrInput   `pulumi:"sslEnabled"`
	SubnetId        pulumi.StringPtrInput `pulumi:"subnetId"`
	User            pulumi.StringInput    `pulumi:"user"`
}

func (JobSourceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceDb)(nil)).Elem()
}

func (i JobSourceDbArgs) ToJobSourceDbOutput() JobSourceDbOutput {
	return i.ToJobSourceDbOutputWithContext(context.Background())
}

func (i JobSourceDbArgs) ToJobSourceDbOutputWithContext(ctx context.Context) JobSourceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDbOutput)
}

func (i JobSourceDbArgs) ToJobSourceDbPtrOutput() JobSourceDbPtrOutput {
	return i.ToJobSourceDbPtrOutputWithContext(context.Background())
}

func (i JobSourceDbArgs) ToJobSourceDbPtrOutputWithContext(ctx context.Context) JobSourceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDbOutput).ToJobSourceDbPtrOutputWithContext(ctx)
}

// JobSourceDbPtrInput is an input type that accepts JobSourceDbArgs, JobSourceDbPtr and JobSourceDbPtrOutput values.
// You can construct a concrete instance of `JobSourceDbPtrInput` via:
//
//	        JobSourceDbArgs{...}
//
//	or:
//
//	        nil
type JobSourceDbPtrInput interface {
	pulumi.Input

	ToJobSourceDbPtrOutput() JobSourceDbPtrOutput
	ToJobSourceDbPtrOutputWithContext(context.Context) JobSourceDbPtrOutput
}

type jobSourceDbPtrType JobSourceDbArgs

func JobSourceDbPtr(v *JobSourceDbArgs) JobSourceDbPtrInput {
	return (*jobSourceDbPtrType)(v)
}

func (*jobSourceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceDb)(nil)).Elem()
}

func (i *jobSourceDbPtrType) ToJobSourceDbPtrOutput() JobSourceDbPtrOutput {
	return i.ToJobSourceDbPtrOutputWithContext(context.Background())
}

func (i *jobSourceDbPtrType) ToJobSourceDbPtrOutputWithContext(ctx context.Context) JobSourceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobSourceDbPtrOutput)
}

type JobSourceDbOutput struct{ *pulumi.OutputState }

func (JobSourceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSourceDb)(nil)).Elem()
}

func (o JobSourceDbOutput) ToJobSourceDbOutput() JobSourceDbOutput {
	return o
}

func (o JobSourceDbOutput) ToJobSourceDbOutputWithContext(ctx context.Context) JobSourceDbOutput {
	return o
}

func (o JobSourceDbOutput) ToJobSourceDbPtrOutput() JobSourceDbPtrOutput {
	return o.ToJobSourceDbPtrOutputWithContext(context.Background())
}

func (o JobSourceDbOutput) ToJobSourceDbPtrOutputWithContext(ctx context.Context) JobSourceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSourceDb) *JobSourceDb {
		return &v
	}).(JobSourceDbPtrOutput)
}

func (o JobSourceDbOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceDb) string { return v.EngineType }).(pulumi.StringOutput)
}

func (o JobSourceDbOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceDb) string { return v.Ip }).(pulumi.StringOutput)
}

func (o JobSourceDbOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceDb) string { return v.Password }).(pulumi.StringOutput)
}

func (o JobSourceDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v JobSourceDb) int { return v.Port }).(pulumi.IntOutput)
}

func (o JobSourceDbOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.SslCertCheckSum }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.SslCertKey }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.SslCertName }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.SslCertPassword }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

func (o JobSourceDbOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobSourceDb) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o JobSourceDbOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v JobSourceDb) string { return v.User }).(pulumi.StringOutput)
}

type JobSourceDbPtrOutput struct{ *pulumi.OutputState }

func (JobSourceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSourceDb)(nil)).Elem()
}

func (o JobSourceDbPtrOutput) ToJobSourceDbPtrOutput() JobSourceDbPtrOutput {
	return o
}

func (o JobSourceDbPtrOutput) ToJobSourceDbPtrOutputWithContext(ctx context.Context) JobSourceDbPtrOutput {
	return o
}

func (o JobSourceDbPtrOutput) Elem() JobSourceDbOutput {
	return o.ApplyT(func(v *JobSourceDb) JobSourceDb {
		if v != nil {
			return *v
		}
		var ret JobSourceDb
		return ret
	}).(JobSourceDbOutput)
}

func (o JobSourceDbPtrOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.EngineType
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o JobSourceDbPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) SslCertCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertCheckSum
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) SslCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertKey
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) SslCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertName
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) SslCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SslCertPassword
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o JobSourceDbPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func (o JobSourceDbPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobSourceDb) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobDestinationDbInput)(nil)).Elem(), JobDestinationDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDestinationDbPtrInput)(nil)).Elem(), JobDestinationDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLimitSpeedInput)(nil)).Elem(), JobLimitSpeedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLimitSpeedArrayInput)(nil)).Elem(), JobLimitSpeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceDbInput)(nil)).Elem(), JobSourceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobSourceDbPtrInput)(nil)).Elem(), JobSourceDbArgs{})
	pulumi.RegisterOutputType(JobDestinationDbOutput{})
	pulumi.RegisterOutputType(JobDestinationDbPtrOutput{})
	pulumi.RegisterOutputType(JobLimitSpeedOutput{})
	pulumi.RegisterOutputType(JobLimitSpeedArrayOutput{})
	pulumi.RegisterOutputType(JobSourceDbOutput{})
	pulumi.RegisterOutputType(JobSourceDbPtrOutput{})
}
