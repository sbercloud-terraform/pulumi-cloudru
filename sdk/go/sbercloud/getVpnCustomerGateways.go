// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Use this data source to get a list of VPN customer gateways.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			routeMode := cfg.RequireObject("routeMode")
//			name := cfg.RequireObject("name")
//			asn := cfg.RequireObject("asn")
//			ip := cfg.RequireObject("ip")
//			_, err := sbercloud.GetVpnCustomerGateways(ctx, &sbercloud.GetVpnCustomerGatewaysArgs{
//				RouteMode: pulumi.StringRef(routeMode),
//				Name:      pulumi.StringRef(name),
//				Asn:       pulumi.IntRef(asn),
//				Ip:        pulumi.StringRef(ip),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVpnCustomerGateways(ctx *pulumi.Context, args *GetVpnCustomerGatewaysArgs, opts ...pulumi.InvokeOption) (*GetVpnCustomerGatewaysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpnCustomerGatewaysResult
	err := ctx.Invoke("sbercloud:index/getVpnCustomerGateways:getVpnCustomerGateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnCustomerGateways.
type GetVpnCustomerGatewaysArgs struct {
	// Specifies the BGP ASN number of the customer gateway, only works when the routeMode is
	// **bgp**. The value ranges from **1** to **4294967295**.
	Asn *int `pulumi:"asn"`
	// Specifies the customer gateway ID used as the query filter.
	CustomerGatewayId *string `pulumi:"customerGatewayId"`
	// Specifies the IP address of the customer gateway.
	Ip *string `pulumi:"ip"`
	// Specifies the customer gateway name.
	Name *string `pulumi:"name"`
	// Specifies the region in which to obtain the VPN customer gateways.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the route mode of the customer gateway. The value can be **static** and **bgp**.
	RouteMode *string `pulumi:"routeMode"`
}

// A collection of values returned by getVpnCustomerGateways.
type GetVpnCustomerGatewaysResult struct {
	// Indicates the asn of the customer gateway.
	Asn               *int    `pulumi:"asn"`
	CustomerGatewayId *string `pulumi:"customerGatewayId"`
	// All resource customer gateways that match the filter parameters.
	// The customerGateways structure is documented below.
	CustomerGateways []GetVpnCustomerGatewaysCustomerGateway `pulumi:"customerGateways"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates the IP of the customer gateway.
	Ip *string `pulumi:"ip"`
	// Indicates the name of the customer gateway.
	Name   *string `pulumi:"name"`
	Region string  `pulumi:"region"`
	// Indicates the route mode of the customer gateway.
	RouteMode *string `pulumi:"routeMode"`
}

func GetVpnCustomerGatewaysOutput(ctx *pulumi.Context, args GetVpnCustomerGatewaysOutputArgs, opts ...pulumi.InvokeOption) GetVpnCustomerGatewaysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVpnCustomerGatewaysResultOutput, error) {
			args := v.(GetVpnCustomerGatewaysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpnCustomerGateways:getVpnCustomerGateways", args, GetVpnCustomerGatewaysResultOutput{}, options).(GetVpnCustomerGatewaysResultOutput), nil
		}).(GetVpnCustomerGatewaysResultOutput)
}

// A collection of arguments for invoking getVpnCustomerGateways.
type GetVpnCustomerGatewaysOutputArgs struct {
	// Specifies the BGP ASN number of the customer gateway, only works when the routeMode is
	// **bgp**. The value ranges from **1** to **4294967295**.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// Specifies the customer gateway ID used as the query filter.
	CustomerGatewayId pulumi.StringPtrInput `pulumi:"customerGatewayId"`
	// Specifies the IP address of the customer gateway.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Specifies the customer gateway name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to obtain the VPN customer gateways.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the route mode of the customer gateway. The value can be **static** and **bgp**.
	RouteMode pulumi.StringPtrInput `pulumi:"routeMode"`
}

func (GetVpnCustomerGatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnCustomerGatewaysArgs)(nil)).Elem()
}

// A collection of values returned by getVpnCustomerGateways.
type GetVpnCustomerGatewaysResultOutput struct{ *pulumi.OutputState }

func (GetVpnCustomerGatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnCustomerGatewaysResult)(nil)).Elem()
}

func (o GetVpnCustomerGatewaysResultOutput) ToGetVpnCustomerGatewaysResultOutput() GetVpnCustomerGatewaysResultOutput {
	return o
}

func (o GetVpnCustomerGatewaysResultOutput) ToGetVpnCustomerGatewaysResultOutputWithContext(ctx context.Context) GetVpnCustomerGatewaysResultOutput {
	return o
}

// Indicates the asn of the customer gateway.
func (o GetVpnCustomerGatewaysResultOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

func (o GetVpnCustomerGatewaysResultOutput) CustomerGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) *string { return v.CustomerGatewayId }).(pulumi.StringPtrOutput)
}

// All resource customer gateways that match the filter parameters.
// The customerGateways structure is documented below.
func (o GetVpnCustomerGatewaysResultOutput) CustomerGateways() GetVpnCustomerGatewaysCustomerGatewayArrayOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) []GetVpnCustomerGatewaysCustomerGateway {
		return v.CustomerGateways
	}).(GetVpnCustomerGatewaysCustomerGatewayArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpnCustomerGatewaysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates the IP of the customer gateway.
func (o GetVpnCustomerGatewaysResultOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Indicates the name of the customer gateway.
func (o GetVpnCustomerGatewaysResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetVpnCustomerGatewaysResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the route mode of the customer gateway.
func (o GetVpnCustomerGatewaysResultOutput) RouteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnCustomerGatewaysResult) *string { return v.RouteMode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpnCustomerGatewaysResultOutput{})
}
