// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ReadReplicaInstance struct {
	pulumi.CustomResourceState

	AutoRenew           pulumi.StringPtrOutput                  `pulumi:"autoRenew"`
	AvailabilityZone    pulumi.StringOutput                     `pulumi:"availabilityZone"`
	ChargingMode        pulumi.StringOutput                     `pulumi:"chargingMode"`
	Db                  ReadReplicaInstanceDbOutput             `pulumi:"db"`
	Description         pulumi.StringPtrOutput                  `pulumi:"description"`
	EnterpriseProjectId pulumi.StringOutput                     `pulumi:"enterpriseProjectId"`
	FixedIp             pulumi.StringOutput                     `pulumi:"fixedIp"`
	Flavor              pulumi.StringOutput                     `pulumi:"flavor"`
	MaintainBegin       pulumi.StringOutput                     `pulumi:"maintainBegin"`
	MaintainEnd         pulumi.StringOutput                     `pulumi:"maintainEnd"`
	Name                pulumi.StringOutput                     `pulumi:"name"`
	Parameters          ReadReplicaInstanceParameterArrayOutput `pulumi:"parameters"`
	Period              pulumi.IntPtrOutput                     `pulumi:"period"`
	PeriodUnit          pulumi.StringPtrOutput                  `pulumi:"periodUnit"`
	PrimaryInstanceId   pulumi.StringOutput                     `pulumi:"primaryInstanceId"`
	PrivateIps          pulumi.StringArrayOutput                `pulumi:"privateIps"`
	PublicIps           pulumi.StringArrayOutput                `pulumi:"publicIps"`
	Region              pulumi.StringOutput                     `pulumi:"region"`
	SecurityGroupId     pulumi.StringOutput                     `pulumi:"securityGroupId"`
	SslEnable           pulumi.BoolOutput                       `pulumi:"sslEnable"`
	Status              pulumi.StringOutput                     `pulumi:"status"`
	SubnetId            pulumi.StringOutput                     `pulumi:"subnetId"`
	Tags                pulumi.StringMapOutput                  `pulumi:"tags"`
	Type                pulumi.StringOutput                     `pulumi:"type"`
	Volume              ReadReplicaInstanceVolumeOutput         `pulumi:"volume"`
	VpcId               pulumi.StringOutput                     `pulumi:"vpcId"`
}

// NewReadReplicaInstance registers a new resource with the given unique name, arguments, and options.
func NewReadReplicaInstance(ctx *pulumi.Context,
	name string, args *ReadReplicaInstanceArgs, opts ...pulumi.ResourceOption) (*ReadReplicaInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.PrimaryInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryInstanceId'")
	}
	if args.Volume == nil {
		return nil, errors.New("invalid value for required argument 'Volume'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReadReplicaInstance
	err := ctx.RegisterResource("sbercloud:Rds/readReplicaInstance:ReadReplicaInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReadReplicaInstance gets an existing ReadReplicaInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReadReplicaInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReadReplicaInstanceState, opts ...pulumi.ResourceOption) (*ReadReplicaInstance, error) {
	var resource ReadReplicaInstance
	err := ctx.ReadResource("sbercloud:Rds/readReplicaInstance:ReadReplicaInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReadReplicaInstance resources.
type readReplicaInstanceState struct {
	AutoRenew           *string                        `pulumi:"autoRenew"`
	AvailabilityZone    *string                        `pulumi:"availabilityZone"`
	ChargingMode        *string                        `pulumi:"chargingMode"`
	Db                  *ReadReplicaInstanceDb         `pulumi:"db"`
	Description         *string                        `pulumi:"description"`
	EnterpriseProjectId *string                        `pulumi:"enterpriseProjectId"`
	FixedIp             *string                        `pulumi:"fixedIp"`
	Flavor              *string                        `pulumi:"flavor"`
	MaintainBegin       *string                        `pulumi:"maintainBegin"`
	MaintainEnd         *string                        `pulumi:"maintainEnd"`
	Name                *string                        `pulumi:"name"`
	Parameters          []ReadReplicaInstanceParameter `pulumi:"parameters"`
	Period              *int                           `pulumi:"period"`
	PeriodUnit          *string                        `pulumi:"periodUnit"`
	PrimaryInstanceId   *string                        `pulumi:"primaryInstanceId"`
	PrivateIps          []string                       `pulumi:"privateIps"`
	PublicIps           []string                       `pulumi:"publicIps"`
	Region              *string                        `pulumi:"region"`
	SecurityGroupId     *string                        `pulumi:"securityGroupId"`
	SslEnable           *bool                          `pulumi:"sslEnable"`
	Status              *string                        `pulumi:"status"`
	SubnetId            *string                        `pulumi:"subnetId"`
	Tags                map[string]string              `pulumi:"tags"`
	Type                *string                        `pulumi:"type"`
	Volume              *ReadReplicaInstanceVolume     `pulumi:"volume"`
	VpcId               *string                        `pulumi:"vpcId"`
}

type ReadReplicaInstanceState struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	ChargingMode        pulumi.StringPtrInput
	Db                  ReadReplicaInstanceDbPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	FixedIp             pulumi.StringPtrInput
	Flavor              pulumi.StringPtrInput
	MaintainBegin       pulumi.StringPtrInput
	MaintainEnd         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Parameters          ReadReplicaInstanceParameterArrayInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PrimaryInstanceId   pulumi.StringPtrInput
	PrivateIps          pulumi.StringArrayInput
	PublicIps           pulumi.StringArrayInput
	Region              pulumi.StringPtrInput
	SecurityGroupId     pulumi.StringPtrInput
	SslEnable           pulumi.BoolPtrInput
	Status              pulumi.StringPtrInput
	SubnetId            pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	Type                pulumi.StringPtrInput
	Volume              ReadReplicaInstanceVolumePtrInput
	VpcId               pulumi.StringPtrInput
}

func (ReadReplicaInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*readReplicaInstanceState)(nil)).Elem()
}

type readReplicaInstanceArgs struct {
	AutoRenew           *string                        `pulumi:"autoRenew"`
	AvailabilityZone    string                         `pulumi:"availabilityZone"`
	ChargingMode        *string                        `pulumi:"chargingMode"`
	Db                  *ReadReplicaInstanceDb         `pulumi:"db"`
	Description         *string                        `pulumi:"description"`
	EnterpriseProjectId *string                        `pulumi:"enterpriseProjectId"`
	FixedIp             *string                        `pulumi:"fixedIp"`
	Flavor              string                         `pulumi:"flavor"`
	MaintainBegin       *string                        `pulumi:"maintainBegin"`
	MaintainEnd         *string                        `pulumi:"maintainEnd"`
	Name                *string                        `pulumi:"name"`
	Parameters          []ReadReplicaInstanceParameter `pulumi:"parameters"`
	Period              *int                           `pulumi:"period"`
	PeriodUnit          *string                        `pulumi:"periodUnit"`
	PrimaryInstanceId   string                         `pulumi:"primaryInstanceId"`
	Region              *string                        `pulumi:"region"`
	SecurityGroupId     *string                        `pulumi:"securityGroupId"`
	SslEnable           *bool                          `pulumi:"sslEnable"`
	Tags                map[string]string              `pulumi:"tags"`
	Volume              ReadReplicaInstanceVolume      `pulumi:"volume"`
}

// The set of arguments for constructing a ReadReplicaInstance resource.
type ReadReplicaInstanceArgs struct {
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringInput
	ChargingMode        pulumi.StringPtrInput
	Db                  ReadReplicaInstanceDbPtrInput
	Description         pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	FixedIp             pulumi.StringPtrInput
	Flavor              pulumi.StringInput
	MaintainBegin       pulumi.StringPtrInput
	MaintainEnd         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Parameters          ReadReplicaInstanceParameterArrayInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	PrimaryInstanceId   pulumi.StringInput
	Region              pulumi.StringPtrInput
	SecurityGroupId     pulumi.StringPtrInput
	SslEnable           pulumi.BoolPtrInput
	Tags                pulumi.StringMapInput
	Volume              ReadReplicaInstanceVolumeInput
}

func (ReadReplicaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*readReplicaInstanceArgs)(nil)).Elem()
}

type ReadReplicaInstanceInput interface {
	pulumi.Input

	ToReadReplicaInstanceOutput() ReadReplicaInstanceOutput
	ToReadReplicaInstanceOutputWithContext(ctx context.Context) ReadReplicaInstanceOutput
}

func (*ReadReplicaInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstance)(nil)).Elem()
}

func (i *ReadReplicaInstance) ToReadReplicaInstanceOutput() ReadReplicaInstanceOutput {
	return i.ToReadReplicaInstanceOutputWithContext(context.Background())
}

func (i *ReadReplicaInstance) ToReadReplicaInstanceOutputWithContext(ctx context.Context) ReadReplicaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceOutput)
}

// ReadReplicaInstanceArrayInput is an input type that accepts ReadReplicaInstanceArray and ReadReplicaInstanceArrayOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceArrayInput` via:
//
//	ReadReplicaInstanceArray{ ReadReplicaInstanceArgs{...} }
type ReadReplicaInstanceArrayInput interface {
	pulumi.Input

	ToReadReplicaInstanceArrayOutput() ReadReplicaInstanceArrayOutput
	ToReadReplicaInstanceArrayOutputWithContext(context.Context) ReadReplicaInstanceArrayOutput
}

type ReadReplicaInstanceArray []ReadReplicaInstanceInput

func (ReadReplicaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReadReplicaInstance)(nil)).Elem()
}

func (i ReadReplicaInstanceArray) ToReadReplicaInstanceArrayOutput() ReadReplicaInstanceArrayOutput {
	return i.ToReadReplicaInstanceArrayOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceArray) ToReadReplicaInstanceArrayOutputWithContext(ctx context.Context) ReadReplicaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceArrayOutput)
}

// ReadReplicaInstanceMapInput is an input type that accepts ReadReplicaInstanceMap and ReadReplicaInstanceMapOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceMapInput` via:
//
//	ReadReplicaInstanceMap{ "key": ReadReplicaInstanceArgs{...} }
type ReadReplicaInstanceMapInput interface {
	pulumi.Input

	ToReadReplicaInstanceMapOutput() ReadReplicaInstanceMapOutput
	ToReadReplicaInstanceMapOutputWithContext(context.Context) ReadReplicaInstanceMapOutput
}

type ReadReplicaInstanceMap map[string]ReadReplicaInstanceInput

func (ReadReplicaInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReadReplicaInstance)(nil)).Elem()
}

func (i ReadReplicaInstanceMap) ToReadReplicaInstanceMapOutput() ReadReplicaInstanceMapOutput {
	return i.ToReadReplicaInstanceMapOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceMap) ToReadReplicaInstanceMapOutputWithContext(ctx context.Context) ReadReplicaInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceMapOutput)
}

type ReadReplicaInstanceOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstance)(nil)).Elem()
}

func (o ReadReplicaInstanceOutput) ToReadReplicaInstanceOutput() ReadReplicaInstanceOutput {
	return o
}

func (o ReadReplicaInstanceOutput) ToReadReplicaInstanceOutputWithContext(ctx context.Context) ReadReplicaInstanceOutput {
	return o
}

func (o ReadReplicaInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) Db() ReadReplicaInstanceDbOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) ReadReplicaInstanceDbOutput { return v.Db }).(ReadReplicaInstanceDbOutput)
}

func (o ReadReplicaInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.FixedIp }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) Parameters() ReadReplicaInstanceParameterArrayOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) ReadReplicaInstanceParameterArrayOutput { return v.Parameters }).(ReadReplicaInstanceParameterArrayOutput)
}

func (o ReadReplicaInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o ReadReplicaInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceOutput) PrimaryInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.PrimaryInstanceId }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

func (o ReadReplicaInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

func (o ReadReplicaInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.BoolOutput { return v.SslEnable }).(pulumi.BoolOutput)
}

func (o ReadReplicaInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ReadReplicaInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceOutput) Volume() ReadReplicaInstanceVolumeOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) ReadReplicaInstanceVolumeOutput { return v.Volume }).(ReadReplicaInstanceVolumeOutput)
}

func (o ReadReplicaInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReadReplicaInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type ReadReplicaInstanceArrayOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReadReplicaInstance)(nil)).Elem()
}

func (o ReadReplicaInstanceArrayOutput) ToReadReplicaInstanceArrayOutput() ReadReplicaInstanceArrayOutput {
	return o
}

func (o ReadReplicaInstanceArrayOutput) ToReadReplicaInstanceArrayOutputWithContext(ctx context.Context) ReadReplicaInstanceArrayOutput {
	return o
}

func (o ReadReplicaInstanceArrayOutput) Index(i pulumi.IntInput) ReadReplicaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReadReplicaInstance {
		return vs[0].([]*ReadReplicaInstance)[vs[1].(int)]
	}).(ReadReplicaInstanceOutput)
}

type ReadReplicaInstanceMapOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReadReplicaInstance)(nil)).Elem()
}

func (o ReadReplicaInstanceMapOutput) ToReadReplicaInstanceMapOutput() ReadReplicaInstanceMapOutput {
	return o
}

func (o ReadReplicaInstanceMapOutput) ToReadReplicaInstanceMapOutputWithContext(ctx context.Context) ReadReplicaInstanceMapOutput {
	return o
}

func (o ReadReplicaInstanceMapOutput) MapIndex(k pulumi.StringInput) ReadReplicaInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReadReplicaInstance {
		return vs[0].(map[string]*ReadReplicaInstance)[vs[1].(string)]
	}).(ReadReplicaInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceInput)(nil)).Elem(), &ReadReplicaInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceArrayInput)(nil)).Elem(), ReadReplicaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceMapInput)(nil)).Elem(), ReadReplicaInstanceMap{})
	pulumi.RegisterOutputType(ReadReplicaInstanceOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceArrayOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceMapOutput{})
}
