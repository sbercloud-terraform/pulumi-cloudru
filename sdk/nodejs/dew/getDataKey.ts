// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getDataKey(args: GetDataKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetDataKeyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Dew/getDataKey:getDataKey", {
        "datakeyLength": args.datakeyLength,
        "encryptionContext": args.encryptionContext,
        "keyId": args.keyId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataKey.
 */
export interface GetDataKeyArgs {
    datakeyLength: string;
    encryptionContext?: string;
    keyId: string;
    region?: string;
}

/**
 * A collection of values returned by getDataKey.
 */
export interface GetDataKeyResult {
    readonly cipherText: string;
    readonly datakeyLength: string;
    readonly encryptionContext?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyId: string;
    readonly plainText: string;
    readonly region: string;
}
export function getDataKeyOutput(args: GetDataKeyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDataKeyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Dew/getDataKey:getDataKey", {
        "datakeyLength": args.datakeyLength,
        "encryptionContext": args.encryptionContext,
        "keyId": args.keyId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataKey.
 */
export interface GetDataKeyOutputArgs {
    datakeyLength: pulumi.Input<string>;
    encryptionContext?: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
