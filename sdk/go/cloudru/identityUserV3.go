// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type IdentityUserV3 struct {
	pulumi.CustomResourceState

	AccessType                     pulumi.StringOutput    `pulumi:"accessType"`
	CountryCode                    pulumi.StringPtrOutput `pulumi:"countryCode"`
	CreateTime                     pulumi.StringOutput    `pulumi:"createTime"`
	Description                    pulumi.StringPtrOutput `pulumi:"description"`
	Email                          pulumi.StringPtrOutput `pulumi:"email"`
	Enabled                        pulumi.BoolPtrOutput   `pulumi:"enabled"`
	ExternalIdentityId             pulumi.StringPtrOutput `pulumi:"externalIdentityId"`
	ExternalIdentityType           pulumi.StringOutput    `pulumi:"externalIdentityType"`
	LastLogin                      pulumi.StringOutput    `pulumi:"lastLogin"`
	LoginProtectVerificationMethod pulumi.StringPtrOutput `pulumi:"loginProtectVerificationMethod"`
	Name                           pulumi.StringOutput    `pulumi:"name"`
	Password                       pulumi.StringPtrOutput `pulumi:"password"`
	PasswordStrength               pulumi.StringOutput    `pulumi:"passwordStrength"`
	Phone                          pulumi.StringPtrOutput `pulumi:"phone"`
	PwdReset                       pulumi.BoolPtrOutput   `pulumi:"pwdReset"`
}

// NewIdentityUserV3 registers a new resource with the given unique name, arguments, and options.
func NewIdentityUserV3(ctx *pulumi.Context,
	name string, args *IdentityUserV3Args, opts ...pulumi.ResourceOption) (*IdentityUserV3, error) {
	if args == nil {
		args = &IdentityUserV3Args{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityUserV3
	err := ctx.RegisterResource("cloudru:index/identityUserV3:IdentityUserV3", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityUserV3 gets an existing IdentityUserV3 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityUserV3(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityUserV3State, opts ...pulumi.ResourceOption) (*IdentityUserV3, error) {
	var resource IdentityUserV3
	err := ctx.ReadResource("cloudru:index/identityUserV3:IdentityUserV3", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityUserV3 resources.
type identityUserV3State struct {
	AccessType                     *string `pulumi:"accessType"`
	CountryCode                    *string `pulumi:"countryCode"`
	CreateTime                     *string `pulumi:"createTime"`
	Description                    *string `pulumi:"description"`
	Email                          *string `pulumi:"email"`
	Enabled                        *bool   `pulumi:"enabled"`
	ExternalIdentityId             *string `pulumi:"externalIdentityId"`
	ExternalIdentityType           *string `pulumi:"externalIdentityType"`
	LastLogin                      *string `pulumi:"lastLogin"`
	LoginProtectVerificationMethod *string `pulumi:"loginProtectVerificationMethod"`
	Name                           *string `pulumi:"name"`
	Password                       *string `pulumi:"password"`
	PasswordStrength               *string `pulumi:"passwordStrength"`
	Phone                          *string `pulumi:"phone"`
	PwdReset                       *bool   `pulumi:"pwdReset"`
}

type IdentityUserV3State struct {
	AccessType                     pulumi.StringPtrInput
	CountryCode                    pulumi.StringPtrInput
	CreateTime                     pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	Email                          pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	ExternalIdentityId             pulumi.StringPtrInput
	ExternalIdentityType           pulumi.StringPtrInput
	LastLogin                      pulumi.StringPtrInput
	LoginProtectVerificationMethod pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Password                       pulumi.StringPtrInput
	PasswordStrength               pulumi.StringPtrInput
	Phone                          pulumi.StringPtrInput
	PwdReset                       pulumi.BoolPtrInput
}

func (IdentityUserV3State) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUserV3State)(nil)).Elem()
}

type identityUserV3Args struct {
	AccessType                     *string `pulumi:"accessType"`
	CountryCode                    *string `pulumi:"countryCode"`
	Description                    *string `pulumi:"description"`
	Email                          *string `pulumi:"email"`
	Enabled                        *bool   `pulumi:"enabled"`
	ExternalIdentityId             *string `pulumi:"externalIdentityId"`
	ExternalIdentityType           *string `pulumi:"externalIdentityType"`
	LoginProtectVerificationMethod *string `pulumi:"loginProtectVerificationMethod"`
	Name                           *string `pulumi:"name"`
	Password                       *string `pulumi:"password"`
	Phone                          *string `pulumi:"phone"`
	PwdReset                       *bool   `pulumi:"pwdReset"`
}

// The set of arguments for constructing a IdentityUserV3 resource.
type IdentityUserV3Args struct {
	AccessType                     pulumi.StringPtrInput
	CountryCode                    pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	Email                          pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	ExternalIdentityId             pulumi.StringPtrInput
	ExternalIdentityType           pulumi.StringPtrInput
	LoginProtectVerificationMethod pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Password                       pulumi.StringPtrInput
	Phone                          pulumi.StringPtrInput
	PwdReset                       pulumi.BoolPtrInput
}

func (IdentityUserV3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUserV3Args)(nil)).Elem()
}

type IdentityUserV3Input interface {
	pulumi.Input

	ToIdentityUserV3Output() IdentityUserV3Output
	ToIdentityUserV3OutputWithContext(ctx context.Context) IdentityUserV3Output
}

func (*IdentityUserV3) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUserV3)(nil)).Elem()
}

func (i *IdentityUserV3) ToIdentityUserV3Output() IdentityUserV3Output {
	return i.ToIdentityUserV3OutputWithContext(context.Background())
}

func (i *IdentityUserV3) ToIdentityUserV3OutputWithContext(ctx context.Context) IdentityUserV3Output {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserV3Output)
}

// IdentityUserV3ArrayInput is an input type that accepts IdentityUserV3Array and IdentityUserV3ArrayOutput values.
// You can construct a concrete instance of `IdentityUserV3ArrayInput` via:
//
//	IdentityUserV3Array{ IdentityUserV3Args{...} }
type IdentityUserV3ArrayInput interface {
	pulumi.Input

	ToIdentityUserV3ArrayOutput() IdentityUserV3ArrayOutput
	ToIdentityUserV3ArrayOutputWithContext(context.Context) IdentityUserV3ArrayOutput
}

type IdentityUserV3Array []IdentityUserV3Input

func (IdentityUserV3Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUserV3)(nil)).Elem()
}

func (i IdentityUserV3Array) ToIdentityUserV3ArrayOutput() IdentityUserV3ArrayOutput {
	return i.ToIdentityUserV3ArrayOutputWithContext(context.Background())
}

func (i IdentityUserV3Array) ToIdentityUserV3ArrayOutputWithContext(ctx context.Context) IdentityUserV3ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserV3ArrayOutput)
}

// IdentityUserV3MapInput is an input type that accepts IdentityUserV3Map and IdentityUserV3MapOutput values.
// You can construct a concrete instance of `IdentityUserV3MapInput` via:
//
//	IdentityUserV3Map{ "key": IdentityUserV3Args{...} }
type IdentityUserV3MapInput interface {
	pulumi.Input

	ToIdentityUserV3MapOutput() IdentityUserV3MapOutput
	ToIdentityUserV3MapOutputWithContext(context.Context) IdentityUserV3MapOutput
}

type IdentityUserV3Map map[string]IdentityUserV3Input

func (IdentityUserV3Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUserV3)(nil)).Elem()
}

func (i IdentityUserV3Map) ToIdentityUserV3MapOutput() IdentityUserV3MapOutput {
	return i.ToIdentityUserV3MapOutputWithContext(context.Background())
}

func (i IdentityUserV3Map) ToIdentityUserV3MapOutputWithContext(ctx context.Context) IdentityUserV3MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUserV3MapOutput)
}

type IdentityUserV3Output struct{ *pulumi.OutputState }

func (IdentityUserV3Output) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUserV3)(nil)).Elem()
}

func (o IdentityUserV3Output) ToIdentityUserV3Output() IdentityUserV3Output {
	return o
}

func (o IdentityUserV3Output) ToIdentityUserV3OutputWithContext(ctx context.Context) IdentityUserV3Output {
	return o
}

func (o IdentityUserV3Output) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringOutput { return v.AccessType }).(pulumi.StringOutput)
}

func (o IdentityUserV3Output) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o IdentityUserV3Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IdentityUserV3Output) ExternalIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.ExternalIdentityId }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) ExternalIdentityType() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringOutput { return v.ExternalIdentityType }).(pulumi.StringOutput)
}

func (o IdentityUserV3Output) LastLogin() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringOutput { return v.LastLogin }).(pulumi.StringOutput)
}

func (o IdentityUserV3Output) LoginProtectVerificationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.LoginProtectVerificationMethod }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityUserV3Output) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) PasswordStrength() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringOutput { return v.PasswordStrength }).(pulumi.StringOutput)
}

func (o IdentityUserV3Output) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.StringPtrOutput { return v.Phone }).(pulumi.StringPtrOutput)
}

func (o IdentityUserV3Output) PwdReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityUserV3) pulumi.BoolPtrOutput { return v.PwdReset }).(pulumi.BoolPtrOutput)
}

type IdentityUserV3ArrayOutput struct{ *pulumi.OutputState }

func (IdentityUserV3ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUserV3)(nil)).Elem()
}

func (o IdentityUserV3ArrayOutput) ToIdentityUserV3ArrayOutput() IdentityUserV3ArrayOutput {
	return o
}

func (o IdentityUserV3ArrayOutput) ToIdentityUserV3ArrayOutputWithContext(ctx context.Context) IdentityUserV3ArrayOutput {
	return o
}

func (o IdentityUserV3ArrayOutput) Index(i pulumi.IntInput) IdentityUserV3Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityUserV3 {
		return vs[0].([]*IdentityUserV3)[vs[1].(int)]
	}).(IdentityUserV3Output)
}

type IdentityUserV3MapOutput struct{ *pulumi.OutputState }

func (IdentityUserV3MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUserV3)(nil)).Elem()
}

func (o IdentityUserV3MapOutput) ToIdentityUserV3MapOutput() IdentityUserV3MapOutput {
	return o
}

func (o IdentityUserV3MapOutput) ToIdentityUserV3MapOutputWithContext(ctx context.Context) IdentityUserV3MapOutput {
	return o
}

func (o IdentityUserV3MapOutput) MapIndex(k pulumi.StringInput) IdentityUserV3Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityUserV3 {
		return vs[0].(map[string]*IdentityUserV3)[vs[1].(string)]
	}).(IdentityUserV3Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUserV3Input)(nil)).Elem(), &IdentityUserV3{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUserV3ArrayInput)(nil)).Elem(), IdentityUserV3Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUserV3MapInput)(nil)).Elem(), IdentityUserV3Map{})
	pulumi.RegisterOutputType(IdentityUserV3Output{})
	pulumi.RegisterOutputType(IdentityUserV3ArrayOutput{})
	pulumi.RegisterOutputType(IdentityUserV3MapOutput{})
}
