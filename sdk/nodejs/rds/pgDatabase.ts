// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages RDS PostgreSQL database resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = new sbercloud.rds.PgDatabase("test", {
 *     instanceId: instanceId,
 *     name: "test",
 * });
 * ```
 *
 * ## Import
 *
 * The RDS postgresql database can be imported using the `instance_id` and `name` separated by a slash, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Rds/pgDatabase:PgDatabase test <instance_id>/<name>
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason. The missing attributes include: `template`, `is_revoke_public_privilege`
 *
 * `lc_ctype`. It is generally recommended running `pulumi preview` after importing the RDS PostgreSQL database. You can
 *
 * then decide if changes should be applied to the RDS PostgreSQL database, or the resource definition should be updated
 *
 * to align with the RDS PostgreSQL database. Also you can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_rds_pg_database" "account_1" {
 *
 *     ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       template, is_revoke_public_privilege, lc_ctype,
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class PgDatabase extends pulumi.CustomResource {
    /**
     * Get an existing PgDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PgDatabaseState, opts?: pulumi.CustomResourceOptions): PgDatabase {
        return new PgDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Rds/pgDatabase:PgDatabase';

    /**
     * Returns true if the given object is an instance of PgDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PgDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PgDatabase.__pulumiType;
    }

    /**
     * Specifies the database character set.
     * For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
     * Defaults to **UTF8**.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly characterSet: pulumi.Output<string>;
    /**
     * Specifies the database description. The value contains 0 to 512 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the RDS PostgreSQL instance.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * Specifies whether to revoke the PUBLIC CREATE permission of
     * the public schema.
     * + **true**: indicates that the permission will be revoked.
     * + **false**: indicates that the permission will not be revoked.
     *
     * Defaults to **false**.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly isRevokePublicPrivilege: pulumi.Output<boolean>;
    /**
     * Specifies the database collocation.
     * Defaults to **en_US.UTF-8**.
     *
     * > **NOTE:** For different collation rules, the execution result of a statement may be different.
     * <br/> For example, the execution result of select 'a'>'A'; is false when this parameter is set to
     * **en_US.utf8** and is true when this parameter is set to 'C'. If a database is migrated from "O" to
     * PostgreSQL, this parameter needs to be set to 'C' to meet your expectations. You can query the supported
     * collation rules from the pgCollation table.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly lcCollate: pulumi.Output<string>;
    /**
     * Specifies the database classification.
     * Defaults to: **en_US.UTF-8**.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly lcCtype: pulumi.Output<string>;
    /**
     * Specifies the database name. The value contains 1 to 63 characters, including
     * letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
     * PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
     * **template1**.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the database user. The value must be an existing username and must be different
     * from system usernames. Defaults to **root**.
     */
    declare public readonly owner: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Indicates the database size, in bytes.
     */
    declare public /*out*/ readonly size: pulumi.Output<number>;
    /**
     * Specifies the name of the database template. Value options: **template0**,
     * **template1**. Defaults to **template1**.
     *
     * Changing this parameter will create a new resource.
     */
    declare public readonly template: pulumi.Output<string>;

    /**
     * Create a PgDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PgDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PgDatabaseArgs | PgDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PgDatabaseState | undefined;
            resourceInputs["characterSet"] = state?.characterSet;
            resourceInputs["description"] = state?.description;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["isRevokePublicPrivilege"] = state?.isRevokePublicPrivilege;
            resourceInputs["lcCollate"] = state?.lcCollate;
            resourceInputs["lcCtype"] = state?.lcCtype;
            resourceInputs["name"] = state?.name;
            resourceInputs["owner"] = state?.owner;
            resourceInputs["region"] = state?.region;
            resourceInputs["size"] = state?.size;
            resourceInputs["template"] = state?.template;
        } else {
            const args = argsOrState as PgDatabaseArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["characterSet"] = args?.characterSet;
            resourceInputs["description"] = args?.description;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["isRevokePublicPrivilege"] = args?.isRevokePublicPrivilege;
            resourceInputs["lcCollate"] = args?.lcCollate;
            resourceInputs["lcCtype"] = args?.lcCtype;
            resourceInputs["name"] = args?.name;
            resourceInputs["owner"] = args?.owner;
            resourceInputs["region"] = args?.region;
            resourceInputs["template"] = args?.template;
            resourceInputs["size"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PgDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PgDatabase resources.
 */
export interface PgDatabaseState {
    /**
     * Specifies the database character set.
     * For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
     * Defaults to **UTF8**.
     *
     * Changing this parameter will create a new resource.
     */
    characterSet?: pulumi.Input<string>;
    /**
     * Specifies the database description. The value contains 0 to 512 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS PostgreSQL instance.
     *
     * Changing this parameter will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies whether to revoke the PUBLIC CREATE permission of
     * the public schema.
     * + **true**: indicates that the permission will be revoked.
     * + **false**: indicates that the permission will not be revoked.
     *
     * Defaults to **false**.
     *
     * Changing this parameter will create a new resource.
     */
    isRevokePublicPrivilege?: pulumi.Input<boolean>;
    /**
     * Specifies the database collocation.
     * Defaults to **en_US.UTF-8**.
     *
     * > **NOTE:** For different collation rules, the execution result of a statement may be different.
     * <br/> For example, the execution result of select 'a'>'A'; is false when this parameter is set to
     * **en_US.utf8** and is true when this parameter is set to 'C'. If a database is migrated from "O" to
     * PostgreSQL, this parameter needs to be set to 'C' to meet your expectations. You can query the supported
     * collation rules from the pgCollation table.
     *
     * Changing this parameter will create a new resource.
     */
    lcCollate?: pulumi.Input<string>;
    /**
     * Specifies the database classification.
     * Defaults to: **en_US.UTF-8**.
     *
     * Changing this parameter will create a new resource.
     */
    lcCtype?: pulumi.Input<string>;
    /**
     * Specifies the database name. The value contains 1 to 63 characters, including
     * letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
     * PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
     * **template1**.
     *
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the database user. The value must be an existing username and must be different
     * from system usernames. Defaults to **root**.
     */
    owner?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Indicates the database size, in bytes.
     */
    size?: pulumi.Input<number>;
    /**
     * Specifies the name of the database template. Value options: **template0**,
     * **template1**. Defaults to **template1**.
     *
     * Changing this parameter will create a new resource.
     */
    template?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PgDatabase resource.
 */
export interface PgDatabaseArgs {
    /**
     * Specifies the database character set.
     * For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
     * Defaults to **UTF8**.
     *
     * Changing this parameter will create a new resource.
     */
    characterSet?: pulumi.Input<string>;
    /**
     * Specifies the database description. The value contains 0 to 512 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS PostgreSQL instance.
     *
     * Changing this parameter will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies whether to revoke the PUBLIC CREATE permission of
     * the public schema.
     * + **true**: indicates that the permission will be revoked.
     * + **false**: indicates that the permission will not be revoked.
     *
     * Defaults to **false**.
     *
     * Changing this parameter will create a new resource.
     */
    isRevokePublicPrivilege?: pulumi.Input<boolean>;
    /**
     * Specifies the database collocation.
     * Defaults to **en_US.UTF-8**.
     *
     * > **NOTE:** For different collation rules, the execution result of a statement may be different.
     * <br/> For example, the execution result of select 'a'>'A'; is false when this parameter is set to
     * **en_US.utf8** and is true when this parameter is set to 'C'. If a database is migrated from "O" to
     * PostgreSQL, this parameter needs to be set to 'C' to meet your expectations. You can query the supported
     * collation rules from the pgCollation table.
     *
     * Changing this parameter will create a new resource.
     */
    lcCollate?: pulumi.Input<string>;
    /**
     * Specifies the database classification.
     * Defaults to: **en_US.UTF-8**.
     *
     * Changing this parameter will create a new resource.
     */
    lcCtype?: pulumi.Input<string>;
    /**
     * Specifies the database name. The value contains 1 to 63 characters, including
     * letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
     * PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
     * **template1**.
     *
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the database user. The value must be an existing username and must be different
     * from system usernames. Defaults to **root**.
     */
    owner?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the name of the database template. Value options: **template0**,
     * **template1**. Defaults to **template1**.
     *
     * Changing this parameter will create a new resource.
     */
    template?: pulumi.Input<string>;
}
