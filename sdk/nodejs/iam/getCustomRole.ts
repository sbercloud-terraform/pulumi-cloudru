// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getCustomRole(args?: GetCustomRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Iam/getCustomRole:getCustomRole", {
        "description": args.description,
        "domainId": args.domainId,
        "id": args.id,
        "name": args.name,
        "references": args.references,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomRole.
 */
export interface GetCustomRoleArgs {
    description?: string;
    domainId?: string;
    id?: string;
    name?: string;
    references?: number;
    type?: string;
}

/**
 * A collection of values returned by getCustomRole.
 */
export interface GetCustomRoleResult {
    readonly catalog: string;
    readonly description: string;
    readonly domainId: string;
    readonly id: string;
    readonly name: string;
    readonly policy: string;
    readonly references: number;
    readonly type: string;
}
export function getCustomRoleOutput(args?: GetCustomRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCustomRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Iam/getCustomRole:getCustomRole", {
        "description": args.description,
        "domainId": args.domainId,
        "id": args.id,
        "name": args.name,
        "references": args.references,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomRole.
 */
export interface GetCustomRoleOutputArgs {
    description?: pulumi.Input<string>;
    domainId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    references?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}
