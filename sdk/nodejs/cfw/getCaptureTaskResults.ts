// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getCaptureTaskResults(args: GetCaptureTaskResultsArgs, opts?: pulumi.InvokeOptions): Promise<GetCaptureTaskResultsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Cfw/getCaptureTaskResults:getCaptureTaskResults", {
        "fwInstanceId": args.fwInstanceId,
        "ips": args.ips,
        "region": args.region,
        "taskId": args.taskId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getCaptureTaskResults.
 */
export interface GetCaptureTaskResultsArgs {
    fwInstanceId: string;
    ips?: string[];
    region?: string;
    taskId: string;
    type?: number;
}

/**
 * A collection of values returned by getCaptureTaskResults.
 */
export interface GetCaptureTaskResultsResult {
    readonly captcha: string;
    readonly expires: number;
    readonly fileLists: outputs.Cfw.GetCaptureTaskResultsFileList[];
    readonly fwInstanceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ips?: string[];
    readonly region: string;
    readonly requestHeaders: outputs.Cfw.GetCaptureTaskResultsRequestHeader[];
    readonly taskId: string;
    readonly type?: number;
    readonly url: string;
}
export function getCaptureTaskResultsOutput(args: GetCaptureTaskResultsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCaptureTaskResultsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Cfw/getCaptureTaskResults:getCaptureTaskResults", {
        "fwInstanceId": args.fwInstanceId,
        "ips": args.ips,
        "region": args.region,
        "taskId": args.taskId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getCaptureTaskResults.
 */
export interface GetCaptureTaskResultsOutputArgs {
    fwInstanceId: pulumi.Input<string>;
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    region?: pulumi.Input<string>;
    taskId: pulumi.Input<string>;
    type?: pulumi.Input<number>;
}
