// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package drs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Manages DRS job resource within SberCloud.
//
// ## Example Usage
//
// ## Import
//
// The DRS job can be imported by `id`. For example,
//
// ```sh
// $ pulumi import sbercloud:Drs/job:Job test b11b407c-e604-4e8d-8bc4-92398320b847
// ```
//
// # Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
//
// API response, security or some other reason. The missing attributes include: `enterprise_project_id`, `tags`,
//
// `force_destroy`, `source_db.0.password` and `destination_db.0.password`.It is generally recommended running
//
// `pulumi preview` after importing a job. You can then decide if changes should be applied to the job, or the resource
//
// definition should be updated to align with the job. Also you can ignore changes as below.
//
// resource "sbercloud_drs_job" "test" {
//
//	  ...
//
//	lifecycle {
//
//	  ignore_changes = [
//
//	    source_db.0.password,destination_db.0.password
//
//	  ]
//
//	}
//
// }
type Job struct {
	pulumi.CustomResourceState

	// Create time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the description of the job, which contain a
	// maximum of 256 characters, and certain special characters (including !<>&'"\\) are not allowed.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the destination database configuration.
	// The `dbInfo` object structure of the `destinationDb` is documented below.
	// Changing this parameter will create a new resource.
	DestinationDb JobDestinationDbOutput `pulumi:"destinationDb"`
	// Specifies the destination DB instance as read-only helps
	// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
	// Read/Write. The default value is `true`. Changing this parameter will create a new resource.
	DestinationDbReadnoly pulumi.BoolPtrOutput `pulumi:"destinationDbReadnoly"`
	// Specifies the direction of data flow.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **up**: To the cloud. The destination database must be a database in the current cloud.
	// + **down**: Out of the cloud. The source database must be a database in the current cloud.
	// + **non-dbs**: self-built database.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **mysql**:  MySQL migration, MySQL synchronization use.
	// + **mongodb**: Mongodb migration use.
	// + **cloudDataGuard-mysql**: Disaster recovery use.
	// + **gaussdbv5**: GaussDB (for openGauss) synchronization use.
	// + **mysql-to-kafka**: Synchronization from MySQL to Kafka use.
	// + **taurus-to-kafka**: Synchronization from GaussDB(for MySQL) to Kafka use.
	// + **gaussdbv5ha-to-kafka**: Synchronization from GaussDB primary/standby to Kafka use.
	// + **postgresql**: Synchronization from PostgreSQL to PostgreSQL use.
	EngineType pulumi.StringOutput `pulumi:"engineType"`
	// Specifies the enterprise project id.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrOutput `pulumi:"enterpriseProjectId"`
	// Specifies how many days after the task is abnormal, it will automatically
	// end. The value ranges from 14 to 100. the default value is `14`. Changing this parameter will create a new resource.
	ExpiredDays pulumi.IntPtrOutput `pulumi:"expiredDays"`
	// Specifies whether to forcibly destroy the job even if it is running.
	// The default value is `false`.
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// Specifies the migration speed by setting a time period.
	// The default is no speed limit. The maximum length is 3. Structure is documented below.
	// Changing this parameter will create a new resource.
	LimitSpeeds JobLimitSpeedArrayOutput `pulumi:"limitSpeeds"`
	// Specifies whether to migrate the definers of all source database
	// objects to the `user` of `destinationDb`. The default value is `true`.
	// Changing this parameter will create a new resource.
	MigrateDefiner pulumi.BoolPtrOutput `pulumi:"migrateDefiner"`
	// Specifies migration type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **FULL_TRANS**: Full migration. Suitable for scenarios where services can be interrupted. It migrates all database
	//   objects and data, in a non-system database, to a destination database at a time.
	// + **INCR_TRANS**: Incremental migration. Suitable for migration from an on-premises self-built database to a
	//   destination cloud database, or from one cloud database to another in a different region.
	// + **FULL_INCR_TRANS**:  Full+Incremental migration. This allows to migrate data with minimal downtime. After a full
	//   migration initializes the destination database, an incremental migration parses logs to ensure data consistency
	//   between the source and destination databases.
	//
	// The default value is `FULL_INCR_TRANS`.
	MigrationType pulumi.StringPtrOutput `pulumi:"migrationType"`
	// Specifies whether to enable multi write. It is mandatory when `type`
	// is `cloudDataGuard`. When the disaster recovery type is dual-active disaster recovery, set `multiWrite` to `true`,
	// otherwise to `false`. The default value is `false`. Changing this parameter will create a new resource.
	MultiWrite pulumi.BoolPtrOutput `pulumi:"multiWrite"`
	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the network type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **eip**: suitable for migration from an on-premises or other cloud database to a destination cloud database.
	//   An EIP will be automatically bound to the replication instance and released after the replication task is complete.
	// + **vpc**: suitable for migration from one cloud database to another.
	// + **vpn**: suitable for migration from an on-premises self-built database to a destination cloud database,
	//   or from one cloud database to another in a different region.
	//
	// The default value is `eip`.
	NetType pulumi.StringPtrOutput `pulumi:"netType"`
	// Private IP.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// Public IP.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the source database configuration.
	// The `dbInfo` object structure of the `sourceDb` is documented below.
	// Changing this parameter will create a new resource.
	SourceDb JobSourceDbOutput `pulumi:"sourceDb"`
	// Specifies the time to start the job. The time format
	// is `yyyy-MM-dd HH:mm:ss`. Start immediately by default. Changing this parameter will create a new resource.
	StartTime pulumi.StringPtrOutput `pulumi:"startTime"`
	// Status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the DRS job.
	// Changing this parameter will create a new resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the job type. Changing this parameter will create a new
	// resource. The options are as follows:
	// + **migration**: Online Migration.
	// + **sync**: Data Synchronization.
	// + **cloudDataGuard**: Disaster Recovery.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationDb == nil {
		return nil, errors.New("invalid value for required argument 'DestinationDb'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.EngineType == nil {
		return nil, errors.New("invalid value for required argument 'EngineType'")
	}
	if args.SourceDb == nil {
		return nil, errors.New("invalid value for required argument 'SourceDb'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Job
	err := ctx.RegisterResource("sbercloud:Drs/job:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("sbercloud:Drs/job:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
	// Create time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the description of the job, which contain a
	// maximum of 256 characters, and certain special characters (including !<>&'"\\) are not allowed.
	Description *string `pulumi:"description"`
	// Specifies the destination database configuration.
	// The `dbInfo` object structure of the `destinationDb` is documented below.
	// Changing this parameter will create a new resource.
	DestinationDb *JobDestinationDb `pulumi:"destinationDb"`
	// Specifies the destination DB instance as read-only helps
	// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
	// Read/Write. The default value is `true`. Changing this parameter will create a new resource.
	DestinationDbReadnoly *bool `pulumi:"destinationDbReadnoly"`
	// Specifies the direction of data flow.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **up**: To the cloud. The destination database must be a database in the current cloud.
	// + **down**: Out of the cloud. The source database must be a database in the current cloud.
	// + **non-dbs**: self-built database.
	Direction *string `pulumi:"direction"`
	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **mysql**:  MySQL migration, MySQL synchronization use.
	// + **mongodb**: Mongodb migration use.
	// + **cloudDataGuard-mysql**: Disaster recovery use.
	// + **gaussdbv5**: GaussDB (for openGauss) synchronization use.
	// + **mysql-to-kafka**: Synchronization from MySQL to Kafka use.
	// + **taurus-to-kafka**: Synchronization from GaussDB(for MySQL) to Kafka use.
	// + **gaussdbv5ha-to-kafka**: Synchronization from GaussDB primary/standby to Kafka use.
	// + **postgresql**: Synchronization from PostgreSQL to PostgreSQL use.
	EngineType *string `pulumi:"engineType"`
	// Specifies the enterprise project id.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies how many days after the task is abnormal, it will automatically
	// end. The value ranges from 14 to 100. the default value is `14`. Changing this parameter will create a new resource.
	ExpiredDays *int `pulumi:"expiredDays"`
	// Specifies whether to forcibly destroy the job even if it is running.
	// The default value is `false`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Specifies the migration speed by setting a time period.
	// The default is no speed limit. The maximum length is 3. Structure is documented below.
	// Changing this parameter will create a new resource.
	LimitSpeeds []JobLimitSpeed `pulumi:"limitSpeeds"`
	// Specifies whether to migrate the definers of all source database
	// objects to the `user` of `destinationDb`. The default value is `true`.
	// Changing this parameter will create a new resource.
	MigrateDefiner *bool `pulumi:"migrateDefiner"`
	// Specifies migration type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **FULL_TRANS**: Full migration. Suitable for scenarios where services can be interrupted. It migrates all database
	//   objects and data, in a non-system database, to a destination database at a time.
	// + **INCR_TRANS**: Incremental migration. Suitable for migration from an on-premises self-built database to a
	//   destination cloud database, or from one cloud database to another in a different region.
	// + **FULL_INCR_TRANS**:  Full+Incremental migration. This allows to migrate data with minimal downtime. After a full
	//   migration initializes the destination database, an incremental migration parses logs to ensure data consistency
	//   between the source and destination databases.
	//
	// The default value is `FULL_INCR_TRANS`.
	MigrationType *string `pulumi:"migrationType"`
	// Specifies whether to enable multi write. It is mandatory when `type`
	// is `cloudDataGuard`. When the disaster recovery type is dual-active disaster recovery, set `multiWrite` to `true`,
	// otherwise to `false`. The default value is `false`. Changing this parameter will create a new resource.
	MultiWrite *bool `pulumi:"multiWrite"`
	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
	Name *string `pulumi:"name"`
	// Specifies the network type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **eip**: suitable for migration from an on-premises or other cloud database to a destination cloud database.
	//   An EIP will be automatically bound to the replication instance and released after the replication task is complete.
	// + **vpc**: suitable for migration from one cloud database to another.
	// + **vpn**: suitable for migration from an on-premises self-built database to a destination cloud database,
	//   or from one cloud database to another in a different region.
	//
	// The default value is `eip`.
	NetType *string `pulumi:"netType"`
	// Private IP.
	PrivateIp *string `pulumi:"privateIp"`
	// Public IP.
	PublicIp *string `pulumi:"publicIp"`
	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the source database configuration.
	// The `dbInfo` object structure of the `sourceDb` is documented below.
	// Changing this parameter will create a new resource.
	SourceDb *JobSourceDb `pulumi:"sourceDb"`
	// Specifies the time to start the job. The time format
	// is `yyyy-MM-dd HH:mm:ss`. Start immediately by default. Changing this parameter will create a new resource.
	StartTime *string `pulumi:"startTime"`
	// Status.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the DRS job.
	// Changing this parameter will create a new resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the job type. Changing this parameter will create a new
	// resource. The options are as follows:
	// + **migration**: Online Migration.
	// + **sync**: Data Synchronization.
	// + **cloudDataGuard**: Disaster Recovery.
	Type *string `pulumi:"type"`
}

type JobState struct {
	// Create time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
	CreatedAt pulumi.StringPtrInput
	// Specifies the description of the job, which contain a
	// maximum of 256 characters, and certain special characters (including !<>&'"\\) are not allowed.
	Description pulumi.StringPtrInput
	// Specifies the destination database configuration.
	// The `dbInfo` object structure of the `destinationDb` is documented below.
	// Changing this parameter will create a new resource.
	DestinationDb JobDestinationDbPtrInput
	// Specifies the destination DB instance as read-only helps
	// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
	// Read/Write. The default value is `true`. Changing this parameter will create a new resource.
	DestinationDbReadnoly pulumi.BoolPtrInput
	// Specifies the direction of data flow.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **up**: To the cloud. The destination database must be a database in the current cloud.
	// + **down**: Out of the cloud. The source database must be a database in the current cloud.
	// + **non-dbs**: self-built database.
	Direction pulumi.StringPtrInput
	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **mysql**:  MySQL migration, MySQL synchronization use.
	// + **mongodb**: Mongodb migration use.
	// + **cloudDataGuard-mysql**: Disaster recovery use.
	// + **gaussdbv5**: GaussDB (for openGauss) synchronization use.
	// + **mysql-to-kafka**: Synchronization from MySQL to Kafka use.
	// + **taurus-to-kafka**: Synchronization from GaussDB(for MySQL) to Kafka use.
	// + **gaussdbv5ha-to-kafka**: Synchronization from GaussDB primary/standby to Kafka use.
	// + **postgresql**: Synchronization from PostgreSQL to PostgreSQL use.
	EngineType pulumi.StringPtrInput
	// Specifies the enterprise project id.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies how many days after the task is abnormal, it will automatically
	// end. The value ranges from 14 to 100. the default value is `14`. Changing this parameter will create a new resource.
	ExpiredDays pulumi.IntPtrInput
	// Specifies whether to forcibly destroy the job even if it is running.
	// The default value is `false`.
	ForceDestroy pulumi.BoolPtrInput
	// Specifies the migration speed by setting a time period.
	// The default is no speed limit. The maximum length is 3. Structure is documented below.
	// Changing this parameter will create a new resource.
	LimitSpeeds JobLimitSpeedArrayInput
	// Specifies whether to migrate the definers of all source database
	// objects to the `user` of `destinationDb`. The default value is `true`.
	// Changing this parameter will create a new resource.
	MigrateDefiner pulumi.BoolPtrInput
	// Specifies migration type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **FULL_TRANS**: Full migration. Suitable for scenarios where services can be interrupted. It migrates all database
	//   objects and data, in a non-system database, to a destination database at a time.
	// + **INCR_TRANS**: Incremental migration. Suitable for migration from an on-premises self-built database to a
	//   destination cloud database, or from one cloud database to another in a different region.
	// + **FULL_INCR_TRANS**:  Full+Incremental migration. This allows to migrate data with minimal downtime. After a full
	//   migration initializes the destination database, an incremental migration parses logs to ensure data consistency
	//   between the source and destination databases.
	//
	// The default value is `FULL_INCR_TRANS`.
	MigrationType pulumi.StringPtrInput
	// Specifies whether to enable multi write. It is mandatory when `type`
	// is `cloudDataGuard`. When the disaster recovery type is dual-active disaster recovery, set `multiWrite` to `true`,
	// otherwise to `false`. The default value is `false`. Changing this parameter will create a new resource.
	MultiWrite pulumi.BoolPtrInput
	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
	Name pulumi.StringPtrInput
	// Specifies the network type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **eip**: suitable for migration from an on-premises or other cloud database to a destination cloud database.
	//   An EIP will be automatically bound to the replication instance and released after the replication task is complete.
	// + **vpc**: suitable for migration from one cloud database to another.
	// + **vpn**: suitable for migration from an on-premises self-built database to a destination cloud database,
	//   or from one cloud database to another in a different region.
	//
	// The default value is `eip`.
	NetType pulumi.StringPtrInput
	// Private IP.
	PrivateIp pulumi.StringPtrInput
	// Public IP.
	PublicIp pulumi.StringPtrInput
	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the source database configuration.
	// The `dbInfo` object structure of the `sourceDb` is documented below.
	// Changing this parameter will create a new resource.
	SourceDb JobSourceDbPtrInput
	// Specifies the time to start the job. The time format
	// is `yyyy-MM-dd HH:mm:ss`. Start immediately by default. Changing this parameter will create a new resource.
	StartTime pulumi.StringPtrInput
	// Status.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the DRS job.
	// Changing this parameter will create a new resource.
	Tags pulumi.StringMapInput
	// Specifies the job type. Changing this parameter will create a new
	// resource. The options are as follows:
	// + **migration**: Online Migration.
	// + **sync**: Data Synchronization.
	// + **cloudDataGuard**: Disaster Recovery.
	Type pulumi.StringPtrInput
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	// Specifies the description of the job, which contain a
	// maximum of 256 characters, and certain special characters (including !<>&'"\\) are not allowed.
	Description *string `pulumi:"description"`
	// Specifies the destination database configuration.
	// The `dbInfo` object structure of the `destinationDb` is documented below.
	// Changing this parameter will create a new resource.
	DestinationDb JobDestinationDb `pulumi:"destinationDb"`
	// Specifies the destination DB instance as read-only helps
	// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
	// Read/Write. The default value is `true`. Changing this parameter will create a new resource.
	DestinationDbReadnoly *bool `pulumi:"destinationDbReadnoly"`
	// Specifies the direction of data flow.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **up**: To the cloud. The destination database must be a database in the current cloud.
	// + **down**: Out of the cloud. The source database must be a database in the current cloud.
	// + **non-dbs**: self-built database.
	Direction string `pulumi:"direction"`
	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **mysql**:  MySQL migration, MySQL synchronization use.
	// + **mongodb**: Mongodb migration use.
	// + **cloudDataGuard-mysql**: Disaster recovery use.
	// + **gaussdbv5**: GaussDB (for openGauss) synchronization use.
	// + **mysql-to-kafka**: Synchronization from MySQL to Kafka use.
	// + **taurus-to-kafka**: Synchronization from GaussDB(for MySQL) to Kafka use.
	// + **gaussdbv5ha-to-kafka**: Synchronization from GaussDB primary/standby to Kafka use.
	// + **postgresql**: Synchronization from PostgreSQL to PostgreSQL use.
	EngineType string `pulumi:"engineType"`
	// Specifies the enterprise project id.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies how many days after the task is abnormal, it will automatically
	// end. The value ranges from 14 to 100. the default value is `14`. Changing this parameter will create a new resource.
	ExpiredDays *int `pulumi:"expiredDays"`
	// Specifies whether to forcibly destroy the job even if it is running.
	// The default value is `false`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Specifies the migration speed by setting a time period.
	// The default is no speed limit. The maximum length is 3. Structure is documented below.
	// Changing this parameter will create a new resource.
	LimitSpeeds []JobLimitSpeed `pulumi:"limitSpeeds"`
	// Specifies whether to migrate the definers of all source database
	// objects to the `user` of `destinationDb`. The default value is `true`.
	// Changing this parameter will create a new resource.
	MigrateDefiner *bool `pulumi:"migrateDefiner"`
	// Specifies migration type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **FULL_TRANS**: Full migration. Suitable for scenarios where services can be interrupted. It migrates all database
	//   objects and data, in a non-system database, to a destination database at a time.
	// + **INCR_TRANS**: Incremental migration. Suitable for migration from an on-premises self-built database to a
	//   destination cloud database, or from one cloud database to another in a different region.
	// + **FULL_INCR_TRANS**:  Full+Incremental migration. This allows to migrate data with minimal downtime. After a full
	//   migration initializes the destination database, an incremental migration parses logs to ensure data consistency
	//   between the source and destination databases.
	//
	// The default value is `FULL_INCR_TRANS`.
	MigrationType *string `pulumi:"migrationType"`
	// Specifies whether to enable multi write. It is mandatory when `type`
	// is `cloudDataGuard`. When the disaster recovery type is dual-active disaster recovery, set `multiWrite` to `true`,
	// otherwise to `false`. The default value is `false`. Changing this parameter will create a new resource.
	MultiWrite *bool `pulumi:"multiWrite"`
	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
	Name *string `pulumi:"name"`
	// Specifies the network type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **eip**: suitable for migration from an on-premises or other cloud database to a destination cloud database.
	//   An EIP will be automatically bound to the replication instance and released after the replication task is complete.
	// + **vpc**: suitable for migration from one cloud database to another.
	// + **vpn**: suitable for migration from an on-premises self-built database to a destination cloud database,
	//   or from one cloud database to another in a different region.
	//
	// The default value is `eip`.
	NetType *string `pulumi:"netType"`
	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the source database configuration.
	// The `dbInfo` object structure of the `sourceDb` is documented below.
	// Changing this parameter will create a new resource.
	SourceDb JobSourceDb `pulumi:"sourceDb"`
	// Specifies the time to start the job. The time format
	// is `yyyy-MM-dd HH:mm:ss`. Start immediately by default. Changing this parameter will create a new resource.
	StartTime *string `pulumi:"startTime"`
	// Specifies the key/value pairs to associate with the DRS job.
	// Changing this parameter will create a new resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the job type. Changing this parameter will create a new
	// resource. The options are as follows:
	// + **migration**: Online Migration.
	// + **sync**: Data Synchronization.
	// + **cloudDataGuard**: Disaster Recovery.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	// Specifies the description of the job, which contain a
	// maximum of 256 characters, and certain special characters (including !<>&'"\\) are not allowed.
	Description pulumi.StringPtrInput
	// Specifies the destination database configuration.
	// The `dbInfo` object structure of the `destinationDb` is documented below.
	// Changing this parameter will create a new resource.
	DestinationDb JobDestinationDbInput
	// Specifies the destination DB instance as read-only helps
	// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
	// Read/Write. The default value is `true`. Changing this parameter will create a new resource.
	DestinationDbReadnoly pulumi.BoolPtrInput
	// Specifies the direction of data flow.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **up**: To the cloud. The destination database must be a database in the current cloud.
	// + **down**: Out of the cloud. The source database must be a database in the current cloud.
	// + **non-dbs**: self-built database.
	Direction pulumi.StringInput
	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **mysql**:  MySQL migration, MySQL synchronization use.
	// + **mongodb**: Mongodb migration use.
	// + **cloudDataGuard-mysql**: Disaster recovery use.
	// + **gaussdbv5**: GaussDB (for openGauss) synchronization use.
	// + **mysql-to-kafka**: Synchronization from MySQL to Kafka use.
	// + **taurus-to-kafka**: Synchronization from GaussDB(for MySQL) to Kafka use.
	// + **gaussdbv5ha-to-kafka**: Synchronization from GaussDB primary/standby to Kafka use.
	// + **postgresql**: Synchronization from PostgreSQL to PostgreSQL use.
	EngineType pulumi.StringInput
	// Specifies the enterprise project id.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies how many days after the task is abnormal, it will automatically
	// end. The value ranges from 14 to 100. the default value is `14`. Changing this parameter will create a new resource.
	ExpiredDays pulumi.IntPtrInput
	// Specifies whether to forcibly destroy the job even if it is running.
	// The default value is `false`.
	ForceDestroy pulumi.BoolPtrInput
	// Specifies the migration speed by setting a time period.
	// The default is no speed limit. The maximum length is 3. Structure is documented below.
	// Changing this parameter will create a new resource.
	LimitSpeeds JobLimitSpeedArrayInput
	// Specifies whether to migrate the definers of all source database
	// objects to the `user` of `destinationDb`. The default value is `true`.
	// Changing this parameter will create a new resource.
	MigrateDefiner pulumi.BoolPtrInput
	// Specifies migration type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **FULL_TRANS**: Full migration. Suitable for scenarios where services can be interrupted. It migrates all database
	//   objects and data, in a non-system database, to a destination database at a time.
	// + **INCR_TRANS**: Incremental migration. Suitable for migration from an on-premises self-built database to a
	//   destination cloud database, or from one cloud database to another in a different region.
	// + **FULL_INCR_TRANS**:  Full+Incremental migration. This allows to migrate data with minimal downtime. After a full
	//   migration initializes the destination database, an incremental migration parses logs to ensure data consistency
	//   between the source and destination databases.
	//
	// The default value is `FULL_INCR_TRANS`.
	MigrationType pulumi.StringPtrInput
	// Specifies whether to enable multi write. It is mandatory when `type`
	// is `cloudDataGuard`. When the disaster recovery type is dual-active disaster recovery, set `multiWrite` to `true`,
	// otherwise to `false`. The default value is `false`. Changing this parameter will create a new resource.
	MultiWrite pulumi.BoolPtrInput
	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
	Name pulumi.StringPtrInput
	// Specifies the network type.
	// Changing this parameter will create a new resource. The options are as follows:
	// + **eip**: suitable for migration from an on-premises or other cloud database to a destination cloud database.
	//   An EIP will be automatically bound to the replication instance and released after the replication task is complete.
	// + **vpc**: suitable for migration from one cloud database to another.
	// + **vpn**: suitable for migration from an on-premises self-built database to a destination cloud database,
	//   or from one cloud database to another in a different region.
	//
	// The default value is `eip`.
	NetType pulumi.StringPtrInput
	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the source database configuration.
	// The `dbInfo` object structure of the `sourceDb` is documented below.
	// Changing this parameter will create a new resource.
	SourceDb JobSourceDbInput
	// Specifies the time to start the job. The time format
	// is `yyyy-MM-dd HH:mm:ss`. Start immediately by default. Changing this parameter will create a new resource.
	StartTime pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the DRS job.
	// Changing this parameter will create a new resource.
	Tags pulumi.StringMapInput
	// Specifies the job type. Changing this parameter will create a new
	// resource. The options are as follows:
	// + **migration**: Online Migration.
	// + **sync**: Data Synchronization.
	// + **cloudDataGuard**: Disaster Recovery.
	Type pulumi.StringInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

// JobArrayInput is an input type that accepts JobArray and JobArrayOutput values.
// You can construct a concrete instance of `JobArrayInput` via:
//
//	JobArray{ JobArgs{...} }
type JobArrayInput interface {
	pulumi.Input

	ToJobArrayOutput() JobArrayOutput
	ToJobArrayOutputWithContext(context.Context) JobArrayOutput
}

type JobArray []JobInput

func (JobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Job)(nil)).Elem()
}

func (i JobArray) ToJobArrayOutput() JobArrayOutput {
	return i.ToJobArrayOutputWithContext(context.Background())
}

func (i JobArray) ToJobArrayOutputWithContext(ctx context.Context) JobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobArrayOutput)
}

// JobMapInput is an input type that accepts JobMap and JobMapOutput values.
// You can construct a concrete instance of `JobMapInput` via:
//
//	JobMap{ "key": JobArgs{...} }
type JobMapInput interface {
	pulumi.Input

	ToJobMapOutput() JobMapOutput
	ToJobMapOutputWithContext(context.Context) JobMapOutput
}

type JobMap map[string]JobInput

func (JobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Job)(nil)).Elem()
}

func (i JobMap) ToJobMapOutput() JobMapOutput {
	return i.ToJobMapOutputWithContext(context.Background())
}

func (i JobMap) ToJobMapOutputWithContext(ctx context.Context) JobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobMapOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

// Create time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
func (o JobOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the description of the job, which contain a
// maximum of 256 characters, and certain special characters (including !<>&'"\\) are not allowed.
func (o JobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the destination database configuration.
// The `dbInfo` object structure of the `destinationDb` is documented below.
// Changing this parameter will create a new resource.
func (o JobOutput) DestinationDb() JobDestinationDbOutput {
	return o.ApplyT(func(v *Job) JobDestinationDbOutput { return v.DestinationDb }).(JobDestinationDbOutput)
}

// Specifies the destination DB instance as read-only helps
// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
// Read/Write. The default value is `true`. Changing this parameter will create a new resource.
func (o JobOutput) DestinationDbReadnoly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.DestinationDbReadnoly }).(pulumi.BoolPtrOutput)
}

// Specifies the direction of data flow.
// Changing this parameter will create a new resource. The options are as follows:
// + **up**: To the cloud. The destination database must be a database in the current cloud.
// + **down**: Out of the cloud. The source database must be a database in the current cloud.
// + **non-dbs**: self-built database.
func (o JobOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the migration engine type.
// Changing this parameter will create a new resource. The options are as follows:
// + **mysql**:  MySQL migration, MySQL synchronization use.
// + **mongodb**: Mongodb migration use.
// + **cloudDataGuard-mysql**: Disaster recovery use.
// + **gaussdbv5**: GaussDB (for openGauss) synchronization use.
// + **mysql-to-kafka**: Synchronization from MySQL to Kafka use.
// + **taurus-to-kafka**: Synchronization from GaussDB(for MySQL) to Kafka use.
// + **gaussdbv5ha-to-kafka**: Synchronization from GaussDB primary/standby to Kafka use.
// + **postgresql**: Synchronization from PostgreSQL to PostgreSQL use.
func (o JobOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.EngineType }).(pulumi.StringOutput)
}

// Specifies the enterprise project id.
// Changing this parameter will create a new resource.
func (o JobOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// Specifies how many days after the task is abnormal, it will automatically
// end. The value ranges from 14 to 100. the default value is `14`. Changing this parameter will create a new resource.
func (o JobOutput) ExpiredDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.ExpiredDays }).(pulumi.IntPtrOutput)
}

// Specifies whether to forcibly destroy the job even if it is running.
// The default value is `false`.
func (o JobOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// Specifies the migration speed by setting a time period.
// The default is no speed limit. The maximum length is 3. Structure is documented below.
// Changing this parameter will create a new resource.
func (o JobOutput) LimitSpeeds() JobLimitSpeedArrayOutput {
	return o.ApplyT(func(v *Job) JobLimitSpeedArrayOutput { return v.LimitSpeeds }).(JobLimitSpeedArrayOutput)
}

// Specifies whether to migrate the definers of all source database
// objects to the `user` of `destinationDb`. The default value is `true`.
// Changing this parameter will create a new resource.
func (o JobOutput) MigrateDefiner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.MigrateDefiner }).(pulumi.BoolPtrOutput)
}

// Specifies migration type.
// Changing this parameter will create a new resource. The options are as follows:
//   - **FULL_TRANS**: Full migration. Suitable for scenarios where services can be interrupted. It migrates all database
//     objects and data, in a non-system database, to a destination database at a time.
//   - **INCR_TRANS**: Incremental migration. Suitable for migration from an on-premises self-built database to a
//     destination cloud database, or from one cloud database to another in a different region.
//   - **FULL_INCR_TRANS**:  Full+Incremental migration. This allows to migrate data with minimal downtime. After a full
//     migration initializes the destination database, an incremental migration parses logs to ensure data consistency
//     between the source and destination databases.
//
// The default value is `FULL_INCR_TRANS`.
func (o JobOutput) MigrationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.MigrationType }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable multi write. It is mandatory when `type`
// is `cloudDataGuard`. When the disaster recovery type is dual-active disaster recovery, set `multiWrite` to `true`,
// otherwise to `false`. The default value is `false`. Changing this parameter will create a new resource.
func (o JobOutput) MultiWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.BoolPtrOutput { return v.MultiWrite }).(pulumi.BoolPtrOutput)
}

// Specifies the job name. The name consists of 4 to 50 characters, starting with
// a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
func (o JobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the network type.
// Changing this parameter will create a new resource. The options are as follows:
//   - **eip**: suitable for migration from an on-premises or other cloud database to a destination cloud database.
//     An EIP will be automatically bound to the replication instance and released after the replication task is complete.
//   - **vpc**: suitable for migration from one cloud database to another.
//   - **vpn**: suitable for migration from an on-premises self-built database to a destination cloud database,
//     or from one cloud database to another in a different region.
//
// The default value is `eip`.
func (o JobOutput) NetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.NetType }).(pulumi.StringPtrOutput)
}

// Private IP.
func (o JobOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

// Public IP.
func (o JobOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// The region in which to create the resource. If omitted, the
// provider-level region will be used. Changing this parameter will create a new resource.
func (o JobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the source database configuration.
// The `dbInfo` object structure of the `sourceDb` is documented below.
// Changing this parameter will create a new resource.
func (o JobOutput) SourceDb() JobSourceDbOutput {
	return o.ApplyT(func(v *Job) JobSourceDbOutput { return v.SourceDb }).(JobSourceDbOutput)
}

// Specifies the time to start the job. The time format
// is `yyyy-MM-dd HH:mm:ss`. Start immediately by default. Changing this parameter will create a new resource.
func (o JobOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Status.
func (o JobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the DRS job.
// Changing this parameter will create a new resource.
func (o JobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Job) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the job type. Changing this parameter will create a new
// resource. The options are as follows:
// + **migration**: Online Migration.
// + **sync**: Data Synchronization.
// + **cloudDataGuard**: Disaster Recovery.
func (o JobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type JobArrayOutput struct{ *pulumi.OutputState }

func (JobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Job)(nil)).Elem()
}

func (o JobArrayOutput) ToJobArrayOutput() JobArrayOutput {
	return o
}

func (o JobArrayOutput) ToJobArrayOutputWithContext(ctx context.Context) JobArrayOutput {
	return o
}

func (o JobArrayOutput) Index(i pulumi.IntInput) JobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Job {
		return vs[0].([]*Job)[vs[1].(int)]
	}).(JobOutput)
}

type JobMapOutput struct{ *pulumi.OutputState }

func (JobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Job)(nil)).Elem()
}

func (o JobMapOutput) ToJobMapOutput() JobMapOutput {
	return o
}

func (o JobMapOutput) ToJobMapOutputWithContext(ctx context.Context) JobMapOutput {
	return o
}

func (o JobMapOutput) MapIndex(k pulumi.StringInput) JobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Job {
		return vs[0].(map[string]*Job)[vs[1].(string)]
	}).(JobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobArrayInput)(nil)).Elem(), JobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobMapInput)(nil)).Elem(), JobMap{})
	pulumi.RegisterOutputType(JobOutput{})
	pulumi.RegisterOutputType(JobArrayOutput{})
	pulumi.RegisterOutputType(JobMapOutput{})
}
