// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BucketArgs, BucketState } from "./bucket";
export type Bucket = import("./bucket").Bucket;
export const Bucket: typeof import("./bucket").Bucket = null as any;
utilities.lazyLoad(exports, ["Bucket"], () => require("./bucket"));

export { BucketObjectArgs, BucketObjectState } from "./bucketObject";
export type BucketObject = import("./bucketObject").BucketObject;
export const BucketObject: typeof import("./bucketObject").BucketObject = null as any;
utilities.lazyLoad(exports, ["BucketObject"], () => require("./bucketObject"));

export { BucketPolicyArgs, BucketPolicyState } from "./bucketPolicy";
export type BucketPolicy = import("./bucketPolicy").BucketPolicy;
export const BucketPolicy: typeof import("./bucketPolicy").BucketPolicy = null as any;
utilities.lazyLoad(exports, ["BucketPolicy"], () => require("./bucketPolicy"));

export { GetBucketObjectArgs, GetBucketObjectResult, GetBucketObjectOutputArgs } from "./getBucketObject";
export const getBucketObject: typeof import("./getBucketObject").getBucketObject = null as any;
export const getBucketObjectOutput: typeof import("./getBucketObject").getBucketObjectOutput = null as any;
utilities.lazyLoad(exports, ["getBucketObject","getBucketObjectOutput"], () => require("./getBucketObject"));

export { GetBucketsArgs, GetBucketsResult, GetBucketsOutputArgs } from "./getBuckets";
export const getBuckets: typeof import("./getBuckets").getBuckets = null as any;
export const getBucketsOutput: typeof import("./getBuckets").getBucketsOutput = null as any;
utilities.lazyLoad(exports, ["getBuckets","getBucketsOutput"], () => require("./getBuckets"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sbercloud:Obs/bucket:Bucket":
                return new Bucket(name, <any>undefined, { urn })
            case "sbercloud:Obs/bucketObject:BucketObject":
                return new BucketObject(name, <any>undefined, { urn })
            case "sbercloud:Obs/bucketPolicy:BucketPolicy":
                return new BucketPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sbercloud", "Obs/bucket", _module)
pulumi.runtime.registerResourceModule("sbercloud", "Obs/bucketObject", _module)
pulumi.runtime.registerResourceModule("sbercloud", "Obs/bucketPolicy", _module)
