// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSfsTurboPermRules(args: GetSfsTurboPermRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetSfsTurboPermRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:index/getSfsTurboPermRules:getSfsTurboPermRules", {
        "region": args.region,
        "shareId": args.shareId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSfsTurboPermRules.
 */
export interface GetSfsTurboPermRulesArgs {
    region?: string;
    shareId: string;
}

/**
 * A collection of values returned by getSfsTurboPermRules.
 */
export interface GetSfsTurboPermRulesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly rules: outputs.GetSfsTurboPermRulesRule[];
    readonly shareId: string;
}
export function getSfsTurboPermRulesOutput(args: GetSfsTurboPermRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSfsTurboPermRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:index/getSfsTurboPermRules:getSfsTurboPermRules", {
        "region": args.region,
        "shareId": args.shareId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSfsTurboPermRules.
 */
export interface GetSfsTurboPermRulesOutputArgs {
    region?: pulumi.Input<string>;
    shareId: pulumi.Input<string>;
}
