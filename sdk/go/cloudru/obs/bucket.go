// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package obs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type Bucket struct {
	pulumi.CustomResourceState

	Acl                 pulumi.StringPtrOutput         `pulumi:"acl"`
	Bucket              pulumi.StringOutput            `pulumi:"bucket"`
	BucketDomainName    pulumi.StringOutput            `pulumi:"bucketDomainName"`
	BucketVersion       pulumi.StringOutput            `pulumi:"bucketVersion"`
	CorsRules           BucketCorsRuleArrayOutput      `pulumi:"corsRules"`
	Encryption          pulumi.BoolPtrOutput           `pulumi:"encryption"`
	EnterpriseProjectId pulumi.StringOutput            `pulumi:"enterpriseProjectId"`
	ForceDestroy        pulumi.BoolPtrOutput           `pulumi:"forceDestroy"`
	KmsKeyId            pulumi.StringPtrOutput         `pulumi:"kmsKeyId"`
	KmsKeyProjectId     pulumi.StringOutput            `pulumi:"kmsKeyProjectId"`
	LifecycleRules      BucketLifecycleRuleArrayOutput `pulumi:"lifecycleRules"`
	Loggings            BucketLoggingArrayOutput       `pulumi:"loggings"`
	MultiAz             pulumi.BoolOutput              `pulumi:"multiAz"`
	ParallelFs          pulumi.BoolPtrOutput           `pulumi:"parallelFs"`
	Policy              pulumi.StringOutput            `pulumi:"policy"`
	PolicyFormat        pulumi.StringPtrOutput         `pulumi:"policyFormat"`
	Quota               pulumi.IntPtrOutput            `pulumi:"quota"`
	Region              pulumi.StringOutput            `pulumi:"region"`
	SseAlgorithm        pulumi.StringOutput            `pulumi:"sseAlgorithm"`
	StorageClass        pulumi.StringPtrOutput         `pulumi:"storageClass"`
	StorageInfos        BucketStorageInfoArrayOutput   `pulumi:"storageInfos"`
	Tags                pulumi.StringMapOutput         `pulumi:"tags"`
	UserDomainNames     pulumi.StringArrayOutput       `pulumi:"userDomainNames"`
	Versioning          pulumi.BoolPtrOutput           `pulumi:"versioning"`
	Website             BucketWebsitePtrOutput         `pulumi:"website"`
}

// NewBucket registers a new resource with the given unique name, arguments, and options.
func NewBucket(ctx *pulumi.Context,
	name string, args *BucketArgs, opts ...pulumi.ResourceOption) (*Bucket, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bucket
	err := ctx.RegisterResource("sbercloud:Obs/bucket:Bucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucket gets an existing Bucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error) {
	var resource Bucket
	err := ctx.ReadResource("sbercloud:Obs/bucket:Bucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bucket resources.
type bucketState struct {
	Acl                 *string               `pulumi:"acl"`
	Bucket              *string               `pulumi:"bucket"`
	BucketDomainName    *string               `pulumi:"bucketDomainName"`
	BucketVersion       *string               `pulumi:"bucketVersion"`
	CorsRules           []BucketCorsRule      `pulumi:"corsRules"`
	Encryption          *bool                 `pulumi:"encryption"`
	EnterpriseProjectId *string               `pulumi:"enterpriseProjectId"`
	ForceDestroy        *bool                 `pulumi:"forceDestroy"`
	KmsKeyId            *string               `pulumi:"kmsKeyId"`
	KmsKeyProjectId     *string               `pulumi:"kmsKeyProjectId"`
	LifecycleRules      []BucketLifecycleRule `pulumi:"lifecycleRules"`
	Loggings            []BucketLogging       `pulumi:"loggings"`
	MultiAz             *bool                 `pulumi:"multiAz"`
	ParallelFs          *bool                 `pulumi:"parallelFs"`
	Policy              *string               `pulumi:"policy"`
	PolicyFormat        *string               `pulumi:"policyFormat"`
	Quota               *int                  `pulumi:"quota"`
	Region              *string               `pulumi:"region"`
	SseAlgorithm        *string               `pulumi:"sseAlgorithm"`
	StorageClass        *string               `pulumi:"storageClass"`
	StorageInfos        []BucketStorageInfo   `pulumi:"storageInfos"`
	Tags                map[string]string     `pulumi:"tags"`
	UserDomainNames     []string              `pulumi:"userDomainNames"`
	Versioning          *bool                 `pulumi:"versioning"`
	Website             *BucketWebsite        `pulumi:"website"`
}

type BucketState struct {
	Acl                 pulumi.StringPtrInput
	Bucket              pulumi.StringPtrInput
	BucketDomainName    pulumi.StringPtrInput
	BucketVersion       pulumi.StringPtrInput
	CorsRules           BucketCorsRuleArrayInput
	Encryption          pulumi.BoolPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ForceDestroy        pulumi.BoolPtrInput
	KmsKeyId            pulumi.StringPtrInput
	KmsKeyProjectId     pulumi.StringPtrInput
	LifecycleRules      BucketLifecycleRuleArrayInput
	Loggings            BucketLoggingArrayInput
	MultiAz             pulumi.BoolPtrInput
	ParallelFs          pulumi.BoolPtrInput
	Policy              pulumi.StringPtrInput
	PolicyFormat        pulumi.StringPtrInput
	Quota               pulumi.IntPtrInput
	Region              pulumi.StringPtrInput
	SseAlgorithm        pulumi.StringPtrInput
	StorageClass        pulumi.StringPtrInput
	StorageInfos        BucketStorageInfoArrayInput
	Tags                pulumi.StringMapInput
	UserDomainNames     pulumi.StringArrayInput
	Versioning          pulumi.BoolPtrInput
	Website             BucketWebsitePtrInput
}

func (BucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketState)(nil)).Elem()
}

type bucketArgs struct {
	Acl                 *string               `pulumi:"acl"`
	Bucket              string                `pulumi:"bucket"`
	CorsRules           []BucketCorsRule      `pulumi:"corsRules"`
	Encryption          *bool                 `pulumi:"encryption"`
	EnterpriseProjectId *string               `pulumi:"enterpriseProjectId"`
	ForceDestroy        *bool                 `pulumi:"forceDestroy"`
	KmsKeyId            *string               `pulumi:"kmsKeyId"`
	KmsKeyProjectId     *string               `pulumi:"kmsKeyProjectId"`
	LifecycleRules      []BucketLifecycleRule `pulumi:"lifecycleRules"`
	Loggings            []BucketLogging       `pulumi:"loggings"`
	MultiAz             *bool                 `pulumi:"multiAz"`
	ParallelFs          *bool                 `pulumi:"parallelFs"`
	Policy              *string               `pulumi:"policy"`
	PolicyFormat        *string               `pulumi:"policyFormat"`
	Quota               *int                  `pulumi:"quota"`
	Region              *string               `pulumi:"region"`
	SseAlgorithm        *string               `pulumi:"sseAlgorithm"`
	StorageClass        *string               `pulumi:"storageClass"`
	Tags                map[string]string     `pulumi:"tags"`
	UserDomainNames     []string              `pulumi:"userDomainNames"`
	Versioning          *bool                 `pulumi:"versioning"`
	Website             *BucketWebsite        `pulumi:"website"`
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	Acl                 pulumi.StringPtrInput
	Bucket              pulumi.StringInput
	CorsRules           BucketCorsRuleArrayInput
	Encryption          pulumi.BoolPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	ForceDestroy        pulumi.BoolPtrInput
	KmsKeyId            pulumi.StringPtrInput
	KmsKeyProjectId     pulumi.StringPtrInput
	LifecycleRules      BucketLifecycleRuleArrayInput
	Loggings            BucketLoggingArrayInput
	MultiAz             pulumi.BoolPtrInput
	ParallelFs          pulumi.BoolPtrInput
	Policy              pulumi.StringPtrInput
	PolicyFormat        pulumi.StringPtrInput
	Quota               pulumi.IntPtrInput
	Region              pulumi.StringPtrInput
	SseAlgorithm        pulumi.StringPtrInput
	StorageClass        pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	UserDomainNames     pulumi.StringArrayInput
	Versioning          pulumi.BoolPtrInput
	Website             BucketWebsitePtrInput
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketArgs)(nil)).Elem()
}

type BucketInput interface {
	pulumi.Input

	ToBucketOutput() BucketOutput
	ToBucketOutputWithContext(ctx context.Context) BucketOutput
}

func (*Bucket) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (i *Bucket) ToBucketOutput() BucketOutput {
	return i.ToBucketOutputWithContext(context.Background())
}

func (i *Bucket) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput)
}

// BucketArrayInput is an input type that accepts BucketArray and BucketArrayOutput values.
// You can construct a concrete instance of `BucketArrayInput` via:
//
//	BucketArray{ BucketArgs{...} }
type BucketArrayInput interface {
	pulumi.Input

	ToBucketArrayOutput() BucketArrayOutput
	ToBucketArrayOutputWithContext(context.Context) BucketArrayOutput
}

type BucketArray []BucketInput

func (BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bucket)(nil)).Elem()
}

func (i BucketArray) ToBucketArrayOutput() BucketArrayOutput {
	return i.ToBucketArrayOutputWithContext(context.Background())
}

func (i BucketArray) ToBucketArrayOutputWithContext(ctx context.Context) BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketArrayOutput)
}

// BucketMapInput is an input type that accepts BucketMap and BucketMapOutput values.
// You can construct a concrete instance of `BucketMapInput` via:
//
//	BucketMap{ "key": BucketArgs{...} }
type BucketMapInput interface {
	pulumi.Input

	ToBucketMapOutput() BucketMapOutput
	ToBucketMapOutputWithContext(context.Context) BucketMapOutput
}

type BucketMap map[string]BucketInput

func (BucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bucket)(nil)).Elem()
}

func (i BucketMap) ToBucketMapOutput() BucketMapOutput {
	return i.ToBucketMapOutputWithContext(context.Background())
}

func (i BucketMap) ToBucketMapOutputWithContext(ctx context.Context) BucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMapOutput)
}

type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

func (o BucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o BucketOutput) BucketDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.BucketDomainName }).(pulumi.StringOutput)
}

func (o BucketOutput) BucketVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.BucketVersion }).(pulumi.StringOutput)
}

func (o BucketOutput) CorsRules() BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketCorsRuleArrayOutput { return v.CorsRules }).(BucketCorsRuleArrayOutput)
}

func (o BucketOutput) Encryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.Encryption }).(pulumi.BoolPtrOutput)
}

func (o BucketOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o BucketOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o BucketOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) KmsKeyProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.KmsKeyProjectId }).(pulumi.StringOutput)
}

func (o BucketOutput) LifecycleRules() BucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketLifecycleRuleArrayOutput { return v.LifecycleRules }).(BucketLifecycleRuleArrayOutput)
}

func (o BucketOutput) Loggings() BucketLoggingArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketLoggingArrayOutput { return v.Loggings }).(BucketLoggingArrayOutput)
}

func (o BucketOutput) MultiAz() pulumi.BoolOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolOutput { return v.MultiAz }).(pulumi.BoolOutput)
}

func (o BucketOutput) ParallelFs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.ParallelFs }).(pulumi.BoolPtrOutput)
}

func (o BucketOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

func (o BucketOutput) PolicyFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.PolicyFormat }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) Quota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.IntPtrOutput { return v.Quota }).(pulumi.IntPtrOutput)
}

func (o BucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o BucketOutput) SseAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.SseAlgorithm }).(pulumi.StringOutput)
}

func (o BucketOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.StorageClass }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) StorageInfos() BucketStorageInfoArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketStorageInfoArrayOutput { return v.StorageInfos }).(BucketStorageInfoArrayOutput)
}

func (o BucketOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o BucketOutput) UserDomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringArrayOutput { return v.UserDomainNames }).(pulumi.StringArrayOutput)
}

func (o BucketOutput) Versioning() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.Versioning }).(pulumi.BoolPtrOutput)
}

func (o BucketOutput) Website() BucketWebsitePtrOutput {
	return o.ApplyT(func(v *Bucket) BucketWebsitePtrOutput { return v.Website }).(BucketWebsitePtrOutput)
}

type BucketArrayOutput struct{ *pulumi.OutputState }

func (BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bucket)(nil)).Elem()
}

func (o BucketArrayOutput) ToBucketArrayOutput() BucketArrayOutput {
	return o
}

func (o BucketArrayOutput) ToBucketArrayOutputWithContext(ctx context.Context) BucketArrayOutput {
	return o
}

func (o BucketArrayOutput) Index(i pulumi.IntInput) BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bucket {
		return vs[0].([]*Bucket)[vs[1].(int)]
	}).(BucketOutput)
}

type BucketMapOutput struct{ *pulumi.OutputState }

func (BucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bucket)(nil)).Elem()
}

func (o BucketMapOutput) ToBucketMapOutput() BucketMapOutput {
	return o
}

func (o BucketMapOutput) ToBucketMapOutputWithContext(ctx context.Context) BucketMapOutput {
	return o
}

func (o BucketMapOutput) MapIndex(k pulumi.StringInput) BucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bucket {
		return vs[0].(map[string]*Bucket)[vs[1].(string)]
	}).(BucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInput)(nil)).Elem(), &Bucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketArrayInput)(nil)).Elem(), BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMapInput)(nil)).Elem(), BucketMap{})
	pulumi.RegisterOutputType(BucketOutput{})
	pulumi.RegisterOutputType(BucketArrayOutput{})
	pulumi.RegisterOutputType(BucketMapOutput{})
}
