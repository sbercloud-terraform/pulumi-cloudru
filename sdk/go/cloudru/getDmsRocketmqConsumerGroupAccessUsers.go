// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Use this data source to get the list of RocketMQ consumer group access users.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	sbercloud "github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			group := cfg.RequireObject("group")
//			_, err := sbercloud.GetDmsRocketmqConsumerGroupAccessUsers(ctx, &cloudru.GetDmsRocketmqConsumerGroupAccessUsersArgs{
//				InstanceId: instanceId,
//				Group:      group,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDmsRocketmqConsumerGroupAccessUsers(ctx *pulumi.Context, args *GetDmsRocketmqConsumerGroupAccessUsersArgs, opts ...pulumi.InvokeOption) (*GetDmsRocketmqConsumerGroupAccessUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsRocketmqConsumerGroupAccessUsersResult
	err := ctx.Invoke("sbercloud:index/getDmsRocketmqConsumerGroupAccessUsers:getDmsRocketmqConsumerGroupAccessUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsRocketmqConsumerGroupAccessUsers.
type GetDmsRocketmqConsumerGroupAccessUsersArgs struct {
	// Specifies the consumer group.
	Group string `pulumi:"group"`
	// Specifies the instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getDmsRocketmqConsumerGroupAccessUsers.
type GetDmsRocketmqConsumerGroupAccessUsersResult struct {
	Group string `pulumi:"group"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Indicates the user list.
	Policies []GetDmsRocketmqConsumerGroupAccessUsersPolicy `pulumi:"policies"`
	Region   string                                         `pulumi:"region"`
}

func GetDmsRocketmqConsumerGroupAccessUsersOutput(ctx *pulumi.Context, args GetDmsRocketmqConsumerGroupAccessUsersOutputArgs, opts ...pulumi.InvokeOption) GetDmsRocketmqConsumerGroupAccessUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsRocketmqConsumerGroupAccessUsersResultOutput, error) {
			args := v.(GetDmsRocketmqConsumerGroupAccessUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDmsRocketmqConsumerGroupAccessUsers:getDmsRocketmqConsumerGroupAccessUsers", args, GetDmsRocketmqConsumerGroupAccessUsersResultOutput{}, options).(GetDmsRocketmqConsumerGroupAccessUsersResultOutput), nil
		}).(GetDmsRocketmqConsumerGroupAccessUsersResultOutput)
}

// A collection of arguments for invoking getDmsRocketmqConsumerGroupAccessUsers.
type GetDmsRocketmqConsumerGroupAccessUsersOutputArgs struct {
	// Specifies the consumer group.
	Group pulumi.StringInput `pulumi:"group"`
	// Specifies the instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetDmsRocketmqConsumerGroupAccessUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRocketmqConsumerGroupAccessUsersArgs)(nil)).Elem()
}

// A collection of values returned by getDmsRocketmqConsumerGroupAccessUsers.
type GetDmsRocketmqConsumerGroupAccessUsersResultOutput struct{ *pulumi.OutputState }

func (GetDmsRocketmqConsumerGroupAccessUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRocketmqConsumerGroupAccessUsersResult)(nil)).Elem()
}

func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) ToGetDmsRocketmqConsumerGroupAccessUsersResultOutput() GetDmsRocketmqConsumerGroupAccessUsersResultOutput {
	return o
}

func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) ToGetDmsRocketmqConsumerGroupAccessUsersResultOutputWithContext(ctx context.Context) GetDmsRocketmqConsumerGroupAccessUsersResultOutput {
	return o
}

func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupAccessUsersResult) string { return v.Group }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupAccessUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupAccessUsersResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates the user list.
func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) Policies() GetDmsRocketmqConsumerGroupAccessUsersPolicyArrayOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupAccessUsersResult) []GetDmsRocketmqConsumerGroupAccessUsersPolicy {
		return v.Policies
	}).(GetDmsRocketmqConsumerGroupAccessUsersPolicyArrayOutput)
}

func (o GetDmsRocketmqConsumerGroupAccessUsersResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRocketmqConsumerGroupAccessUsersResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsRocketmqConsumerGroupAccessUsersResultOutput{})
}
