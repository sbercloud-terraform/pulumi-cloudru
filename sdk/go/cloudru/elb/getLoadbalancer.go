// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func LookupLoadbalancer(ctx *pulumi.Context, args *LookupLoadbalancerArgs, opts ...pulumi.InvokeOption) (*LookupLoadbalancerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadbalancerResult
	err := ctx.Invoke("cloudru:Elb/getLoadbalancer:getLoadbalancer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadbalancer.
type LookupLoadbalancerArgs struct {
	Description         *string `pulumi:"description"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	Id                  *string `pulumi:"id"`
	Name                *string `pulumi:"name"`
	Region              *string `pulumi:"region"`
	Status              *string `pulumi:"status"`
	VipAddress          *string `pulumi:"vipAddress"`
	VipSubnetId         *string `pulumi:"vipSubnetId"`
}

// A collection of values returned by getLoadbalancer.
type LookupLoadbalancerResult struct {
	Description         string            `pulumi:"description"`
	EnterpriseProjectId string            `pulumi:"enterpriseProjectId"`
	Id                  string            `pulumi:"id"`
	Name                string            `pulumi:"name"`
	PublicIp            string            `pulumi:"publicIp"`
	Region              string            `pulumi:"region"`
	Status              string            `pulumi:"status"`
	Tags                map[string]string `pulumi:"tags"`
	VipAddress          string            `pulumi:"vipAddress"`
	VipPortId           string            `pulumi:"vipPortId"`
	VipSubnetId         string            `pulumi:"vipSubnetId"`
}

func LookupLoadbalancerOutput(ctx *pulumi.Context, args LookupLoadbalancerOutputArgs, opts ...pulumi.InvokeOption) LookupLoadbalancerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLoadbalancerResultOutput, error) {
			args := v.(LookupLoadbalancerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Elb/getLoadbalancer:getLoadbalancer", args, LookupLoadbalancerResultOutput{}, options).(LookupLoadbalancerResultOutput), nil
		}).(LookupLoadbalancerResultOutput)
}

// A collection of arguments for invoking getLoadbalancer.
type LookupLoadbalancerOutputArgs struct {
	Description         pulumi.StringPtrInput `pulumi:"description"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Id                  pulumi.StringPtrInput `pulumi:"id"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
	VipAddress          pulumi.StringPtrInput `pulumi:"vipAddress"`
	VipSubnetId         pulumi.StringPtrInput `pulumi:"vipSubnetId"`
}

func (LookupLoadbalancerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadbalancerArgs)(nil)).Elem()
}

// A collection of values returned by getLoadbalancer.
type LookupLoadbalancerResultOutput struct{ *pulumi.OutputState }

func (LookupLoadbalancerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadbalancerResult)(nil)).Elem()
}

func (o LookupLoadbalancerResultOutput) ToLookupLoadbalancerResultOutput() LookupLoadbalancerResultOutput {
	return o
}

func (o LookupLoadbalancerResultOutput) ToLookupLoadbalancerResultOutputWithContext(ctx context.Context) LookupLoadbalancerResultOutput {
	return o
}

func (o LookupLoadbalancerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupLoadbalancerResultOutput) VipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.VipAddress }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) VipPortId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.VipPortId }).(pulumi.StringOutput)
}

func (o LookupLoadbalancerResultOutput) VipSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadbalancerResult) string { return v.VipSubnetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadbalancerResultOutput{})
}
