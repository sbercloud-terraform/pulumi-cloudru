// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getSubnet(args?: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Vpc/getSubnet:getSubnet", {
        "availabilityZone": args.availabilityZone,
        "cidr": args.cidr,
        "gatewayIp": args.gatewayIp,
        "id": args.id,
        "name": args.name,
        "primaryDns": args.primaryDns,
        "region": args.region,
        "secondaryDns": args.secondaryDns,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    availabilityZone?: string;
    cidr?: string;
    gatewayIp?: string;
    id?: string;
    name?: string;
    primaryDns?: string;
    region?: string;
    secondaryDns?: string;
    status?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly availabilityZone: string;
    readonly cidr: string;
    readonly description: string;
    readonly dhcpEnable: boolean;
    readonly dnsLists: string[];
    readonly gatewayIp: string;
    readonly id: string;
    readonly ipv4SubnetId: string;
    readonly ipv6Cidr: string;
    readonly ipv6Enable: boolean;
    readonly ipv6Gateway: string;
    readonly ipv6SubnetId: string;
    readonly name: string;
    readonly primaryDns: string;
    readonly region: string;
    readonly secondaryDns: string;
    readonly status: string;
    readonly subnetId: string;
    readonly vpcId: string;
}
export function getSubnetOutput(args?: GetSubnetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSubnetResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Vpc/getSubnet:getSubnet", {
        "availabilityZone": args.availabilityZone,
        "cidr": args.cidr,
        "gatewayIp": args.gatewayIp,
        "id": args.id,
        "name": args.name,
        "primaryDns": args.primaryDns,
        "region": args.region,
        "secondaryDns": args.secondaryDns,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    availabilityZone?: pulumi.Input<string>;
    cidr?: pulumi.Input<string>;
    gatewayIp?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    primaryDns?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    secondaryDns?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
