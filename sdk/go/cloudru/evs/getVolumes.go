// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package evs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetVolumes(ctx *pulumi.Context, args *GetVolumesArgs, opts ...pulumi.InvokeOption) (*GetVolumesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumesResult
	err := ctx.Invoke("cloudru:Evs/getVolumes:getVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumes.
type GetVolumesArgs struct {
	AvailabilityZone     *string           `pulumi:"availabilityZone"`
	DedicatedStorageId   *string           `pulumi:"dedicatedStorageId"`
	DedicatedStorageName *string           `pulumi:"dedicatedStorageName"`
	EnterpriseProjectId  *string           `pulumi:"enterpriseProjectId"`
	Ids                  *string           `pulumi:"ids"`
	Metadata             *string           `pulumi:"metadata"`
	Name                 *string           `pulumi:"name"`
	Region               *string           `pulumi:"region"`
	ServerId             *string           `pulumi:"serverId"`
	ServiceType          *string           `pulumi:"serviceType"`
	Shareable            *bool             `pulumi:"shareable"`
	SortDir              *string           `pulumi:"sortDir"`
	SortKey              *string           `pulumi:"sortKey"`
	Status               *string           `pulumi:"status"`
	Tags                 map[string]string `pulumi:"tags"`
	VolumeId             *string           `pulumi:"volumeId"`
	VolumeTypeId         *string           `pulumi:"volumeTypeId"`
}

// A collection of values returned by getVolumes.
type GetVolumesResult struct {
	AvailabilityZone     *string `pulumi:"availabilityZone"`
	DedicatedStorageId   *string `pulumi:"dedicatedStorageId"`
	DedicatedStorageName *string `pulumi:"dedicatedStorageName"`
	EnterpriseProjectId  *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string             `pulumi:"id"`
	Ids          *string            `pulumi:"ids"`
	Metadata     *string            `pulumi:"metadata"`
	Name         *string            `pulumi:"name"`
	Region       *string            `pulumi:"region"`
	ServerId     *string            `pulumi:"serverId"`
	ServiceType  *string            `pulumi:"serviceType"`
	Shareable    *bool              `pulumi:"shareable"`
	SortDir      *string            `pulumi:"sortDir"`
	SortKey      *string            `pulumi:"sortKey"`
	Status       *string            `pulumi:"status"`
	Tags         map[string]string  `pulumi:"tags"`
	VolumeId     *string            `pulumi:"volumeId"`
	VolumeTypeId *string            `pulumi:"volumeTypeId"`
	Volumes      []GetVolumesVolume `pulumi:"volumes"`
}

func GetVolumesOutput(ctx *pulumi.Context, args GetVolumesOutputArgs, opts ...pulumi.InvokeOption) GetVolumesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVolumesResultOutput, error) {
			args := v.(GetVolumesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Evs/getVolumes:getVolumes", args, GetVolumesResultOutput{}, options).(GetVolumesResultOutput), nil
		}).(GetVolumesResultOutput)
}

// A collection of arguments for invoking getVolumes.
type GetVolumesOutputArgs struct {
	AvailabilityZone     pulumi.StringPtrInput `pulumi:"availabilityZone"`
	DedicatedStorageId   pulumi.StringPtrInput `pulumi:"dedicatedStorageId"`
	DedicatedStorageName pulumi.StringPtrInput `pulumi:"dedicatedStorageName"`
	EnterpriseProjectId  pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Ids                  pulumi.StringPtrInput `pulumi:"ids"`
	Metadata             pulumi.StringPtrInput `pulumi:"metadata"`
	Name                 pulumi.StringPtrInput `pulumi:"name"`
	Region               pulumi.StringPtrInput `pulumi:"region"`
	ServerId             pulumi.StringPtrInput `pulumi:"serverId"`
	ServiceType          pulumi.StringPtrInput `pulumi:"serviceType"`
	Shareable            pulumi.BoolPtrInput   `pulumi:"shareable"`
	SortDir              pulumi.StringPtrInput `pulumi:"sortDir"`
	SortKey              pulumi.StringPtrInput `pulumi:"sortKey"`
	Status               pulumi.StringPtrInput `pulumi:"status"`
	Tags                 pulumi.StringMapInput `pulumi:"tags"`
	VolumeId             pulumi.StringPtrInput `pulumi:"volumeId"`
	VolumeTypeId         pulumi.StringPtrInput `pulumi:"volumeTypeId"`
}

func (GetVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesArgs)(nil)).Elem()
}

// A collection of values returned by getVolumes.
type GetVolumesResultOutput struct{ *pulumi.OutputState }

func (GetVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumesResult)(nil)).Elem()
}

func (o GetVolumesResultOutput) ToGetVolumesResultOutput() GetVolumesResultOutput {
	return o
}

func (o GetVolumesResultOutput) ToGetVolumesResultOutputWithContext(ctx context.Context) GetVolumesResultOutput {
	return o
}

func (o GetVolumesResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) DedicatedStorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.DedicatedStorageId }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) DedicatedStorageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.DedicatedStorageName }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVolumesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVolumesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVolumesResultOutput) Ids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.Ids }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Metadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.Metadata }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) ServiceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.ServiceType }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Shareable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *bool { return v.Shareable }).(pulumi.BoolPtrOutput)
}

func (o GetVolumesResultOutput) SortDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.SortDir }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) SortKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.SortKey }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVolumesResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetVolumesResultOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) VolumeTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVolumesResult) *string { return v.VolumeTypeId }).(pulumi.StringPtrOutput)
}

func (o GetVolumesResultOutput) Volumes() GetVolumesVolumeArrayOutput {
	return o.ApplyT(func(v GetVolumesResult) []GetVolumesVolume { return v.Volumes }).(GetVolumesVolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumesResultOutput{})
}
