// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type AclRuleCustomService struct {
	// The destination port.
	DestPort string `pulumi:"destPort"`
	// The protocol type.
	Protocol int `pulumi:"protocol"`
	// The source port.
	//
	// <a name="CustomServiceGroups"></a>
	// The `customServiceGroups` block supports:
	SourcePort string `pulumi:"sourcePort"`
}

// AclRuleCustomServiceInput is an input type that accepts AclRuleCustomServiceArgs and AclRuleCustomServiceOutput values.
// You can construct a concrete instance of `AclRuleCustomServiceInput` via:
//
//	AclRuleCustomServiceArgs{...}
type AclRuleCustomServiceInput interface {
	pulumi.Input

	ToAclRuleCustomServiceOutput() AclRuleCustomServiceOutput
	ToAclRuleCustomServiceOutputWithContext(context.Context) AclRuleCustomServiceOutput
}

type AclRuleCustomServiceArgs struct {
	// The destination port.
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// The protocol type.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// The source port.
	//
	// <a name="CustomServiceGroups"></a>
	// The `customServiceGroups` block supports:
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (AclRuleCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleCustomService)(nil)).Elem()
}

func (i AclRuleCustomServiceArgs) ToAclRuleCustomServiceOutput() AclRuleCustomServiceOutput {
	return i.ToAclRuleCustomServiceOutputWithContext(context.Background())
}

func (i AclRuleCustomServiceArgs) ToAclRuleCustomServiceOutputWithContext(ctx context.Context) AclRuleCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleCustomServiceOutput)
}

// AclRuleCustomServiceArrayInput is an input type that accepts AclRuleCustomServiceArray and AclRuleCustomServiceArrayOutput values.
// You can construct a concrete instance of `AclRuleCustomServiceArrayInput` via:
//
//	AclRuleCustomServiceArray{ AclRuleCustomServiceArgs{...} }
type AclRuleCustomServiceArrayInput interface {
	pulumi.Input

	ToAclRuleCustomServiceArrayOutput() AclRuleCustomServiceArrayOutput
	ToAclRuleCustomServiceArrayOutputWithContext(context.Context) AclRuleCustomServiceArrayOutput
}

type AclRuleCustomServiceArray []AclRuleCustomServiceInput

func (AclRuleCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleCustomService)(nil)).Elem()
}

func (i AclRuleCustomServiceArray) ToAclRuleCustomServiceArrayOutput() AclRuleCustomServiceArrayOutput {
	return i.ToAclRuleCustomServiceArrayOutputWithContext(context.Background())
}

func (i AclRuleCustomServiceArray) ToAclRuleCustomServiceArrayOutputWithContext(ctx context.Context) AclRuleCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleCustomServiceArrayOutput)
}

type AclRuleCustomServiceOutput struct{ *pulumi.OutputState }

func (AclRuleCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleCustomService)(nil)).Elem()
}

func (o AclRuleCustomServiceOutput) ToAclRuleCustomServiceOutput() AclRuleCustomServiceOutput {
	return o
}

func (o AclRuleCustomServiceOutput) ToAclRuleCustomServiceOutputWithContext(ctx context.Context) AclRuleCustomServiceOutput {
	return o
}

// The destination port.
func (o AclRuleCustomServiceOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleCustomService) string { return v.DestPort }).(pulumi.StringOutput)
}

// The protocol type.
func (o AclRuleCustomServiceOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v AclRuleCustomService) int { return v.Protocol }).(pulumi.IntOutput)
}

// The source port.
//
// <a name="CustomServiceGroups"></a>
// The `customServiceGroups` block supports:
func (o AclRuleCustomServiceOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleCustomService) string { return v.SourcePort }).(pulumi.StringOutput)
}

type AclRuleCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (AclRuleCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleCustomService)(nil)).Elem()
}

func (o AclRuleCustomServiceArrayOutput) ToAclRuleCustomServiceArrayOutput() AclRuleCustomServiceArrayOutput {
	return o
}

func (o AclRuleCustomServiceArrayOutput) ToAclRuleCustomServiceArrayOutputWithContext(ctx context.Context) AclRuleCustomServiceArrayOutput {
	return o
}

func (o AclRuleCustomServiceArrayOutput) Index(i pulumi.IntInput) AclRuleCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRuleCustomService {
		return vs[0].([]AclRuleCustomService)[vs[1].(int)]
	}).(AclRuleCustomServiceOutput)
}

type AclRuleCustomServiceGroups struct {
	// The IDs of the predefined service groups.
	GroupIds []string `pulumi:"groupIds"`
	// The protocols used in the predefined service groups.
	//
	// <a name="SourceRegionList"></a>
	// The `sourceRegionList` block supports:
	Protocols []int `pulumi:"protocols"`
}

// AclRuleCustomServiceGroupsInput is an input type that accepts AclRuleCustomServiceGroupsArgs and AclRuleCustomServiceGroupsOutput values.
// You can construct a concrete instance of `AclRuleCustomServiceGroupsInput` via:
//
//	AclRuleCustomServiceGroupsArgs{...}
type AclRuleCustomServiceGroupsInput interface {
	pulumi.Input

	ToAclRuleCustomServiceGroupsOutput() AclRuleCustomServiceGroupsOutput
	ToAclRuleCustomServiceGroupsOutputWithContext(context.Context) AclRuleCustomServiceGroupsOutput
}

type AclRuleCustomServiceGroupsArgs struct {
	// The IDs of the predefined service groups.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// The protocols used in the predefined service groups.
	//
	// <a name="SourceRegionList"></a>
	// The `sourceRegionList` block supports:
	Protocols pulumi.IntArrayInput `pulumi:"protocols"`
}

func (AclRuleCustomServiceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleCustomServiceGroups)(nil)).Elem()
}

func (i AclRuleCustomServiceGroupsArgs) ToAclRuleCustomServiceGroupsOutput() AclRuleCustomServiceGroupsOutput {
	return i.ToAclRuleCustomServiceGroupsOutputWithContext(context.Background())
}

func (i AclRuleCustomServiceGroupsArgs) ToAclRuleCustomServiceGroupsOutputWithContext(ctx context.Context) AclRuleCustomServiceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleCustomServiceGroupsOutput)
}

func (i AclRuleCustomServiceGroupsArgs) ToAclRuleCustomServiceGroupsPtrOutput() AclRuleCustomServiceGroupsPtrOutput {
	return i.ToAclRuleCustomServiceGroupsPtrOutputWithContext(context.Background())
}

func (i AclRuleCustomServiceGroupsArgs) ToAclRuleCustomServiceGroupsPtrOutputWithContext(ctx context.Context) AclRuleCustomServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleCustomServiceGroupsOutput).ToAclRuleCustomServiceGroupsPtrOutputWithContext(ctx)
}

// AclRuleCustomServiceGroupsPtrInput is an input type that accepts AclRuleCustomServiceGroupsArgs, AclRuleCustomServiceGroupsPtr and AclRuleCustomServiceGroupsPtrOutput values.
// You can construct a concrete instance of `AclRuleCustomServiceGroupsPtrInput` via:
//
//	        AclRuleCustomServiceGroupsArgs{...}
//
//	or:
//
//	        nil
type AclRuleCustomServiceGroupsPtrInput interface {
	pulumi.Input

	ToAclRuleCustomServiceGroupsPtrOutput() AclRuleCustomServiceGroupsPtrOutput
	ToAclRuleCustomServiceGroupsPtrOutputWithContext(context.Context) AclRuleCustomServiceGroupsPtrOutput
}

type aclRuleCustomServiceGroupsPtrType AclRuleCustomServiceGroupsArgs

func AclRuleCustomServiceGroupsPtr(v *AclRuleCustomServiceGroupsArgs) AclRuleCustomServiceGroupsPtrInput {
	return (*aclRuleCustomServiceGroupsPtrType)(v)
}

func (*aclRuleCustomServiceGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRuleCustomServiceGroups)(nil)).Elem()
}

func (i *aclRuleCustomServiceGroupsPtrType) ToAclRuleCustomServiceGroupsPtrOutput() AclRuleCustomServiceGroupsPtrOutput {
	return i.ToAclRuleCustomServiceGroupsPtrOutputWithContext(context.Background())
}

func (i *aclRuleCustomServiceGroupsPtrType) ToAclRuleCustomServiceGroupsPtrOutputWithContext(ctx context.Context) AclRuleCustomServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleCustomServiceGroupsPtrOutput)
}

type AclRuleCustomServiceGroupsOutput struct{ *pulumi.OutputState }

func (AclRuleCustomServiceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleCustomServiceGroups)(nil)).Elem()
}

func (o AclRuleCustomServiceGroupsOutput) ToAclRuleCustomServiceGroupsOutput() AclRuleCustomServiceGroupsOutput {
	return o
}

func (o AclRuleCustomServiceGroupsOutput) ToAclRuleCustomServiceGroupsOutputWithContext(ctx context.Context) AclRuleCustomServiceGroupsOutput {
	return o
}

func (o AclRuleCustomServiceGroupsOutput) ToAclRuleCustomServiceGroupsPtrOutput() AclRuleCustomServiceGroupsPtrOutput {
	return o.ToAclRuleCustomServiceGroupsPtrOutputWithContext(context.Background())
}

func (o AclRuleCustomServiceGroupsOutput) ToAclRuleCustomServiceGroupsPtrOutputWithContext(ctx context.Context) AclRuleCustomServiceGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AclRuleCustomServiceGroups) *AclRuleCustomServiceGroups {
		return &v
	}).(AclRuleCustomServiceGroupsPtrOutput)
}

// The IDs of the predefined service groups.
func (o AclRuleCustomServiceGroupsOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclRuleCustomServiceGroups) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The protocols used in the predefined service groups.
//
// <a name="SourceRegionList"></a>
// The `sourceRegionList` block supports:
func (o AclRuleCustomServiceGroupsOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AclRuleCustomServiceGroups) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

type AclRuleCustomServiceGroupsPtrOutput struct{ *pulumi.OutputState }

func (AclRuleCustomServiceGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRuleCustomServiceGroups)(nil)).Elem()
}

func (o AclRuleCustomServiceGroupsPtrOutput) ToAclRuleCustomServiceGroupsPtrOutput() AclRuleCustomServiceGroupsPtrOutput {
	return o
}

func (o AclRuleCustomServiceGroupsPtrOutput) ToAclRuleCustomServiceGroupsPtrOutputWithContext(ctx context.Context) AclRuleCustomServiceGroupsPtrOutput {
	return o
}

func (o AclRuleCustomServiceGroupsPtrOutput) Elem() AclRuleCustomServiceGroupsOutput {
	return o.ApplyT(func(v *AclRuleCustomServiceGroups) AclRuleCustomServiceGroups {
		if v != nil {
			return *v
		}
		var ret AclRuleCustomServiceGroups
		return ret
	}).(AclRuleCustomServiceGroupsOutput)
}

// The IDs of the predefined service groups.
func (o AclRuleCustomServiceGroupsPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AclRuleCustomServiceGroups) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The protocols used in the predefined service groups.
//
// <a name="SourceRegionList"></a>
// The `sourceRegionList` block supports:
func (o AclRuleCustomServiceGroupsPtrOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AclRuleCustomServiceGroups) []int {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(pulumi.IntArrayOutput)
}

type AclRuleDestinationRegionList struct {
	// The Chinese description of the region.
	DescriptionCn *string `pulumi:"descriptionCn"`
	// The English description of the region.
	DescriptionEn *string `pulumi:"descriptionEn"`
	// The region ID.
	RegionId string `pulumi:"regionId"`
	// The region type.
	RegionType int `pulumi:"regionType"`
}

// AclRuleDestinationRegionListInput is an input type that accepts AclRuleDestinationRegionListArgs and AclRuleDestinationRegionListOutput values.
// You can construct a concrete instance of `AclRuleDestinationRegionListInput` via:
//
//	AclRuleDestinationRegionListArgs{...}
type AclRuleDestinationRegionListInput interface {
	pulumi.Input

	ToAclRuleDestinationRegionListOutput() AclRuleDestinationRegionListOutput
	ToAclRuleDestinationRegionListOutputWithContext(context.Context) AclRuleDestinationRegionListOutput
}

type AclRuleDestinationRegionListArgs struct {
	// The Chinese description of the region.
	DescriptionCn pulumi.StringPtrInput `pulumi:"descriptionCn"`
	// The English description of the region.
	DescriptionEn pulumi.StringPtrInput `pulumi:"descriptionEn"`
	// The region ID.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The region type.
	RegionType pulumi.IntInput `pulumi:"regionType"`
}

func (AclRuleDestinationRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleDestinationRegionList)(nil)).Elem()
}

func (i AclRuleDestinationRegionListArgs) ToAclRuleDestinationRegionListOutput() AclRuleDestinationRegionListOutput {
	return i.ToAclRuleDestinationRegionListOutputWithContext(context.Background())
}

func (i AclRuleDestinationRegionListArgs) ToAclRuleDestinationRegionListOutputWithContext(ctx context.Context) AclRuleDestinationRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleDestinationRegionListOutput)
}

// AclRuleDestinationRegionListArrayInput is an input type that accepts AclRuleDestinationRegionListArray and AclRuleDestinationRegionListArrayOutput values.
// You can construct a concrete instance of `AclRuleDestinationRegionListArrayInput` via:
//
//	AclRuleDestinationRegionListArray{ AclRuleDestinationRegionListArgs{...} }
type AclRuleDestinationRegionListArrayInput interface {
	pulumi.Input

	ToAclRuleDestinationRegionListArrayOutput() AclRuleDestinationRegionListArrayOutput
	ToAclRuleDestinationRegionListArrayOutputWithContext(context.Context) AclRuleDestinationRegionListArrayOutput
}

type AclRuleDestinationRegionListArray []AclRuleDestinationRegionListInput

func (AclRuleDestinationRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleDestinationRegionList)(nil)).Elem()
}

func (i AclRuleDestinationRegionListArray) ToAclRuleDestinationRegionListArrayOutput() AclRuleDestinationRegionListArrayOutput {
	return i.ToAclRuleDestinationRegionListArrayOutputWithContext(context.Background())
}

func (i AclRuleDestinationRegionListArray) ToAclRuleDestinationRegionListArrayOutputWithContext(ctx context.Context) AclRuleDestinationRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleDestinationRegionListArrayOutput)
}

type AclRuleDestinationRegionListOutput struct{ *pulumi.OutputState }

func (AclRuleDestinationRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleDestinationRegionList)(nil)).Elem()
}

func (o AclRuleDestinationRegionListOutput) ToAclRuleDestinationRegionListOutput() AclRuleDestinationRegionListOutput {
	return o
}

func (o AclRuleDestinationRegionListOutput) ToAclRuleDestinationRegionListOutputWithContext(ctx context.Context) AclRuleDestinationRegionListOutput {
	return o
}

// The Chinese description of the region.
func (o AclRuleDestinationRegionListOutput) DescriptionCn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRuleDestinationRegionList) *string { return v.DescriptionCn }).(pulumi.StringPtrOutput)
}

// The English description of the region.
func (o AclRuleDestinationRegionListOutput) DescriptionEn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRuleDestinationRegionList) *string { return v.DescriptionEn }).(pulumi.StringPtrOutput)
}

// The region ID.
func (o AclRuleDestinationRegionListOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleDestinationRegionList) string { return v.RegionId }).(pulumi.StringOutput)
}

// The region type.
func (o AclRuleDestinationRegionListOutput) RegionType() pulumi.IntOutput {
	return o.ApplyT(func(v AclRuleDestinationRegionList) int { return v.RegionType }).(pulumi.IntOutput)
}

type AclRuleDestinationRegionListArrayOutput struct{ *pulumi.OutputState }

func (AclRuleDestinationRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleDestinationRegionList)(nil)).Elem()
}

func (o AclRuleDestinationRegionListArrayOutput) ToAclRuleDestinationRegionListArrayOutput() AclRuleDestinationRegionListArrayOutput {
	return o
}

func (o AclRuleDestinationRegionListArrayOutput) ToAclRuleDestinationRegionListArrayOutputWithContext(ctx context.Context) AclRuleDestinationRegionListArrayOutput {
	return o
}

func (o AclRuleDestinationRegionListArrayOutput) Index(i pulumi.IntInput) AclRuleDestinationRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRuleDestinationRegionList {
		return vs[0].([]AclRuleDestinationRegionList)[vs[1].(int)]
	}).(AclRuleDestinationRegionListOutput)
}

type AclRulePredefinedServiceGroups struct {
	// The IDs of the predefined service groups.
	GroupIds []string `pulumi:"groupIds"`
	// The protocols used in the predefined service groups.
	//
	// <a name="SourceRegionList"></a>
	// The `sourceRegionList` block supports:
	Protocols []int `pulumi:"protocols"`
}

// AclRulePredefinedServiceGroupsInput is an input type that accepts AclRulePredefinedServiceGroupsArgs and AclRulePredefinedServiceGroupsOutput values.
// You can construct a concrete instance of `AclRulePredefinedServiceGroupsInput` via:
//
//	AclRulePredefinedServiceGroupsArgs{...}
type AclRulePredefinedServiceGroupsInput interface {
	pulumi.Input

	ToAclRulePredefinedServiceGroupsOutput() AclRulePredefinedServiceGroupsOutput
	ToAclRulePredefinedServiceGroupsOutputWithContext(context.Context) AclRulePredefinedServiceGroupsOutput
}

type AclRulePredefinedServiceGroupsArgs struct {
	// The IDs of the predefined service groups.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// The protocols used in the predefined service groups.
	//
	// <a name="SourceRegionList"></a>
	// The `sourceRegionList` block supports:
	Protocols pulumi.IntArrayInput `pulumi:"protocols"`
}

func (AclRulePredefinedServiceGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRulePredefinedServiceGroups)(nil)).Elem()
}

func (i AclRulePredefinedServiceGroupsArgs) ToAclRulePredefinedServiceGroupsOutput() AclRulePredefinedServiceGroupsOutput {
	return i.ToAclRulePredefinedServiceGroupsOutputWithContext(context.Background())
}

func (i AclRulePredefinedServiceGroupsArgs) ToAclRulePredefinedServiceGroupsOutputWithContext(ctx context.Context) AclRulePredefinedServiceGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRulePredefinedServiceGroupsOutput)
}

func (i AclRulePredefinedServiceGroupsArgs) ToAclRulePredefinedServiceGroupsPtrOutput() AclRulePredefinedServiceGroupsPtrOutput {
	return i.ToAclRulePredefinedServiceGroupsPtrOutputWithContext(context.Background())
}

func (i AclRulePredefinedServiceGroupsArgs) ToAclRulePredefinedServiceGroupsPtrOutputWithContext(ctx context.Context) AclRulePredefinedServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRulePredefinedServiceGroupsOutput).ToAclRulePredefinedServiceGroupsPtrOutputWithContext(ctx)
}

// AclRulePredefinedServiceGroupsPtrInput is an input type that accepts AclRulePredefinedServiceGroupsArgs, AclRulePredefinedServiceGroupsPtr and AclRulePredefinedServiceGroupsPtrOutput values.
// You can construct a concrete instance of `AclRulePredefinedServiceGroupsPtrInput` via:
//
//	        AclRulePredefinedServiceGroupsArgs{...}
//
//	or:
//
//	        nil
type AclRulePredefinedServiceGroupsPtrInput interface {
	pulumi.Input

	ToAclRulePredefinedServiceGroupsPtrOutput() AclRulePredefinedServiceGroupsPtrOutput
	ToAclRulePredefinedServiceGroupsPtrOutputWithContext(context.Context) AclRulePredefinedServiceGroupsPtrOutput
}

type aclRulePredefinedServiceGroupsPtrType AclRulePredefinedServiceGroupsArgs

func AclRulePredefinedServiceGroupsPtr(v *AclRulePredefinedServiceGroupsArgs) AclRulePredefinedServiceGroupsPtrInput {
	return (*aclRulePredefinedServiceGroupsPtrType)(v)
}

func (*aclRulePredefinedServiceGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRulePredefinedServiceGroups)(nil)).Elem()
}

func (i *aclRulePredefinedServiceGroupsPtrType) ToAclRulePredefinedServiceGroupsPtrOutput() AclRulePredefinedServiceGroupsPtrOutput {
	return i.ToAclRulePredefinedServiceGroupsPtrOutputWithContext(context.Background())
}

func (i *aclRulePredefinedServiceGroupsPtrType) ToAclRulePredefinedServiceGroupsPtrOutputWithContext(ctx context.Context) AclRulePredefinedServiceGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRulePredefinedServiceGroupsPtrOutput)
}

type AclRulePredefinedServiceGroupsOutput struct{ *pulumi.OutputState }

func (AclRulePredefinedServiceGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRulePredefinedServiceGroups)(nil)).Elem()
}

func (o AclRulePredefinedServiceGroupsOutput) ToAclRulePredefinedServiceGroupsOutput() AclRulePredefinedServiceGroupsOutput {
	return o
}

func (o AclRulePredefinedServiceGroupsOutput) ToAclRulePredefinedServiceGroupsOutputWithContext(ctx context.Context) AclRulePredefinedServiceGroupsOutput {
	return o
}

func (o AclRulePredefinedServiceGroupsOutput) ToAclRulePredefinedServiceGroupsPtrOutput() AclRulePredefinedServiceGroupsPtrOutput {
	return o.ToAclRulePredefinedServiceGroupsPtrOutputWithContext(context.Background())
}

func (o AclRulePredefinedServiceGroupsOutput) ToAclRulePredefinedServiceGroupsPtrOutputWithContext(ctx context.Context) AclRulePredefinedServiceGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AclRulePredefinedServiceGroups) *AclRulePredefinedServiceGroups {
		return &v
	}).(AclRulePredefinedServiceGroupsPtrOutput)
}

// The IDs of the predefined service groups.
func (o AclRulePredefinedServiceGroupsOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclRulePredefinedServiceGroups) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// The protocols used in the predefined service groups.
//
// <a name="SourceRegionList"></a>
// The `sourceRegionList` block supports:
func (o AclRulePredefinedServiceGroupsOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AclRulePredefinedServiceGroups) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

type AclRulePredefinedServiceGroupsPtrOutput struct{ *pulumi.OutputState }

func (AclRulePredefinedServiceGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRulePredefinedServiceGroups)(nil)).Elem()
}

func (o AclRulePredefinedServiceGroupsPtrOutput) ToAclRulePredefinedServiceGroupsPtrOutput() AclRulePredefinedServiceGroupsPtrOutput {
	return o
}

func (o AclRulePredefinedServiceGroupsPtrOutput) ToAclRulePredefinedServiceGroupsPtrOutputWithContext(ctx context.Context) AclRulePredefinedServiceGroupsPtrOutput {
	return o
}

func (o AclRulePredefinedServiceGroupsPtrOutput) Elem() AclRulePredefinedServiceGroupsOutput {
	return o.ApplyT(func(v *AclRulePredefinedServiceGroups) AclRulePredefinedServiceGroups {
		if v != nil {
			return *v
		}
		var ret AclRulePredefinedServiceGroups
		return ret
	}).(AclRulePredefinedServiceGroupsOutput)
}

// The IDs of the predefined service groups.
func (o AclRulePredefinedServiceGroupsPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AclRulePredefinedServiceGroups) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// The protocols used in the predefined service groups.
//
// <a name="SourceRegionList"></a>
// The `sourceRegionList` block supports:
func (o AclRulePredefinedServiceGroupsPtrOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AclRulePredefinedServiceGroups) []int {
		if v == nil {
			return nil
		}
		return v.Protocols
	}).(pulumi.IntArrayOutput)
}

type AclRuleSequence struct {
	// Whether to pin on bottom.
	// The options are as follows:
	// + **0**: no;
	// + **1**: yes;
	Bottom *int `pulumi:"bottom"`
	// The ID of the rule that the added rule will follow.
	DestRuleId *string `pulumi:"destRuleId"`
	// Whether to pin on top.
	// The options are as follows:
	// + **0**: no;
	// + **1**: yes;
	//
	// <a name="CustomServices"></a>
	// The `customServices` block supports:
	Top *int `pulumi:"top"`
}

// AclRuleSequenceInput is an input type that accepts AclRuleSequenceArgs and AclRuleSequenceOutput values.
// You can construct a concrete instance of `AclRuleSequenceInput` via:
//
//	AclRuleSequenceArgs{...}
type AclRuleSequenceInput interface {
	pulumi.Input

	ToAclRuleSequenceOutput() AclRuleSequenceOutput
	ToAclRuleSequenceOutputWithContext(context.Context) AclRuleSequenceOutput
}

type AclRuleSequenceArgs struct {
	// Whether to pin on bottom.
	// The options are as follows:
	// + **0**: no;
	// + **1**: yes;
	Bottom pulumi.IntPtrInput `pulumi:"bottom"`
	// The ID of the rule that the added rule will follow.
	DestRuleId pulumi.StringPtrInput `pulumi:"destRuleId"`
	// Whether to pin on top.
	// The options are as follows:
	// + **0**: no;
	// + **1**: yes;
	//
	// <a name="CustomServices"></a>
	// The `customServices` block supports:
	Top pulumi.IntPtrInput `pulumi:"top"`
}

func (AclRuleSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleSequence)(nil)).Elem()
}

func (i AclRuleSequenceArgs) ToAclRuleSequenceOutput() AclRuleSequenceOutput {
	return i.ToAclRuleSequenceOutputWithContext(context.Background())
}

func (i AclRuleSequenceArgs) ToAclRuleSequenceOutputWithContext(ctx context.Context) AclRuleSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleSequenceOutput)
}

func (i AclRuleSequenceArgs) ToAclRuleSequencePtrOutput() AclRuleSequencePtrOutput {
	return i.ToAclRuleSequencePtrOutputWithContext(context.Background())
}

func (i AclRuleSequenceArgs) ToAclRuleSequencePtrOutputWithContext(ctx context.Context) AclRuleSequencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleSequenceOutput).ToAclRuleSequencePtrOutputWithContext(ctx)
}

// AclRuleSequencePtrInput is an input type that accepts AclRuleSequenceArgs, AclRuleSequencePtr and AclRuleSequencePtrOutput values.
// You can construct a concrete instance of `AclRuleSequencePtrInput` via:
//
//	        AclRuleSequenceArgs{...}
//
//	or:
//
//	        nil
type AclRuleSequencePtrInput interface {
	pulumi.Input

	ToAclRuleSequencePtrOutput() AclRuleSequencePtrOutput
	ToAclRuleSequencePtrOutputWithContext(context.Context) AclRuleSequencePtrOutput
}

type aclRuleSequencePtrType AclRuleSequenceArgs

func AclRuleSequencePtr(v *AclRuleSequenceArgs) AclRuleSequencePtrInput {
	return (*aclRuleSequencePtrType)(v)
}

func (*aclRuleSequencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRuleSequence)(nil)).Elem()
}

func (i *aclRuleSequencePtrType) ToAclRuleSequencePtrOutput() AclRuleSequencePtrOutput {
	return i.ToAclRuleSequencePtrOutputWithContext(context.Background())
}

func (i *aclRuleSequencePtrType) ToAclRuleSequencePtrOutputWithContext(ctx context.Context) AclRuleSequencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleSequencePtrOutput)
}

type AclRuleSequenceOutput struct{ *pulumi.OutputState }

func (AclRuleSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleSequence)(nil)).Elem()
}

func (o AclRuleSequenceOutput) ToAclRuleSequenceOutput() AclRuleSequenceOutput {
	return o
}

func (o AclRuleSequenceOutput) ToAclRuleSequenceOutputWithContext(ctx context.Context) AclRuleSequenceOutput {
	return o
}

func (o AclRuleSequenceOutput) ToAclRuleSequencePtrOutput() AclRuleSequencePtrOutput {
	return o.ToAclRuleSequencePtrOutputWithContext(context.Background())
}

func (o AclRuleSequenceOutput) ToAclRuleSequencePtrOutputWithContext(ctx context.Context) AclRuleSequencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AclRuleSequence) *AclRuleSequence {
		return &v
	}).(AclRuleSequencePtrOutput)
}

// Whether to pin on bottom.
// The options are as follows:
// + **0**: no;
// + **1**: yes;
func (o AclRuleSequenceOutput) Bottom() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AclRuleSequence) *int { return v.Bottom }).(pulumi.IntPtrOutput)
}

// The ID of the rule that the added rule will follow.
func (o AclRuleSequenceOutput) DestRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRuleSequence) *string { return v.DestRuleId }).(pulumi.StringPtrOutput)
}

// Whether to pin on top.
// The options are as follows:
// + **0**: no;
// + **1**: yes;
//
// <a name="CustomServices"></a>
// The `customServices` block supports:
func (o AclRuleSequenceOutput) Top() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AclRuleSequence) *int { return v.Top }).(pulumi.IntPtrOutput)
}

type AclRuleSequencePtrOutput struct{ *pulumi.OutputState }

func (AclRuleSequencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AclRuleSequence)(nil)).Elem()
}

func (o AclRuleSequencePtrOutput) ToAclRuleSequencePtrOutput() AclRuleSequencePtrOutput {
	return o
}

func (o AclRuleSequencePtrOutput) ToAclRuleSequencePtrOutputWithContext(ctx context.Context) AclRuleSequencePtrOutput {
	return o
}

func (o AclRuleSequencePtrOutput) Elem() AclRuleSequenceOutput {
	return o.ApplyT(func(v *AclRuleSequence) AclRuleSequence {
		if v != nil {
			return *v
		}
		var ret AclRuleSequence
		return ret
	}).(AclRuleSequenceOutput)
}

// Whether to pin on bottom.
// The options are as follows:
// + **0**: no;
// + **1**: yes;
func (o AclRuleSequencePtrOutput) Bottom() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AclRuleSequence) *int {
		if v == nil {
			return nil
		}
		return v.Bottom
	}).(pulumi.IntPtrOutput)
}

// The ID of the rule that the added rule will follow.
func (o AclRuleSequencePtrOutput) DestRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AclRuleSequence) *string {
		if v == nil {
			return nil
		}
		return v.DestRuleId
	}).(pulumi.StringPtrOutput)
}

// Whether to pin on top.
// The options are as follows:
// + **0**: no;
// + **1**: yes;
//
// <a name="CustomServices"></a>
// The `customServices` block supports:
func (o AclRuleSequencePtrOutput) Top() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AclRuleSequence) *int {
		if v == nil {
			return nil
		}
		return v.Top
	}).(pulumi.IntPtrOutput)
}

type AclRuleSourceRegionList struct {
	// The Chinese description of the region.
	DescriptionCn *string `pulumi:"descriptionCn"`
	// The English description of the region.
	DescriptionEn *string `pulumi:"descriptionEn"`
	// The region ID.
	RegionId string `pulumi:"regionId"`
	// The region type.
	RegionType int `pulumi:"regionType"`
}

// AclRuleSourceRegionListInput is an input type that accepts AclRuleSourceRegionListArgs and AclRuleSourceRegionListOutput values.
// You can construct a concrete instance of `AclRuleSourceRegionListInput` via:
//
//	AclRuleSourceRegionListArgs{...}
type AclRuleSourceRegionListInput interface {
	pulumi.Input

	ToAclRuleSourceRegionListOutput() AclRuleSourceRegionListOutput
	ToAclRuleSourceRegionListOutputWithContext(context.Context) AclRuleSourceRegionListOutput
}

type AclRuleSourceRegionListArgs struct {
	// The Chinese description of the region.
	DescriptionCn pulumi.StringPtrInput `pulumi:"descriptionCn"`
	// The English description of the region.
	DescriptionEn pulumi.StringPtrInput `pulumi:"descriptionEn"`
	// The region ID.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The region type.
	RegionType pulumi.IntInput `pulumi:"regionType"`
}

func (AclRuleSourceRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleSourceRegionList)(nil)).Elem()
}

func (i AclRuleSourceRegionListArgs) ToAclRuleSourceRegionListOutput() AclRuleSourceRegionListOutput {
	return i.ToAclRuleSourceRegionListOutputWithContext(context.Background())
}

func (i AclRuleSourceRegionListArgs) ToAclRuleSourceRegionListOutputWithContext(ctx context.Context) AclRuleSourceRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleSourceRegionListOutput)
}

// AclRuleSourceRegionListArrayInput is an input type that accepts AclRuleSourceRegionListArray and AclRuleSourceRegionListArrayOutput values.
// You can construct a concrete instance of `AclRuleSourceRegionListArrayInput` via:
//
//	AclRuleSourceRegionListArray{ AclRuleSourceRegionListArgs{...} }
type AclRuleSourceRegionListArrayInput interface {
	pulumi.Input

	ToAclRuleSourceRegionListArrayOutput() AclRuleSourceRegionListArrayOutput
	ToAclRuleSourceRegionListArrayOutputWithContext(context.Context) AclRuleSourceRegionListArrayOutput
}

type AclRuleSourceRegionListArray []AclRuleSourceRegionListInput

func (AclRuleSourceRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleSourceRegionList)(nil)).Elem()
}

func (i AclRuleSourceRegionListArray) ToAclRuleSourceRegionListArrayOutput() AclRuleSourceRegionListArrayOutput {
	return i.ToAclRuleSourceRegionListArrayOutputWithContext(context.Background())
}

func (i AclRuleSourceRegionListArray) ToAclRuleSourceRegionListArrayOutputWithContext(ctx context.Context) AclRuleSourceRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclRuleSourceRegionListArrayOutput)
}

type AclRuleSourceRegionListOutput struct{ *pulumi.OutputState }

func (AclRuleSourceRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclRuleSourceRegionList)(nil)).Elem()
}

func (o AclRuleSourceRegionListOutput) ToAclRuleSourceRegionListOutput() AclRuleSourceRegionListOutput {
	return o
}

func (o AclRuleSourceRegionListOutput) ToAclRuleSourceRegionListOutputWithContext(ctx context.Context) AclRuleSourceRegionListOutput {
	return o
}

// The Chinese description of the region.
func (o AclRuleSourceRegionListOutput) DescriptionCn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRuleSourceRegionList) *string { return v.DescriptionCn }).(pulumi.StringPtrOutput)
}

// The English description of the region.
func (o AclRuleSourceRegionListOutput) DescriptionEn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclRuleSourceRegionList) *string { return v.DescriptionEn }).(pulumi.StringPtrOutput)
}

// The region ID.
func (o AclRuleSourceRegionListOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v AclRuleSourceRegionList) string { return v.RegionId }).(pulumi.StringOutput)
}

// The region type.
func (o AclRuleSourceRegionListOutput) RegionType() pulumi.IntOutput {
	return o.ApplyT(func(v AclRuleSourceRegionList) int { return v.RegionType }).(pulumi.IntOutput)
}

type AclRuleSourceRegionListArrayOutput struct{ *pulumi.OutputState }

func (AclRuleSourceRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclRuleSourceRegionList)(nil)).Elem()
}

func (o AclRuleSourceRegionListArrayOutput) ToAclRuleSourceRegionListArrayOutput() AclRuleSourceRegionListArrayOutput {
	return o
}

func (o AclRuleSourceRegionListArrayOutput) ToAclRuleSourceRegionListArrayOutputWithContext(ctx context.Context) AclRuleSourceRegionListArrayOutput {
	return o
}

func (o AclRuleSourceRegionListArrayOutput) Index(i pulumi.IntInput) AclRuleSourceRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclRuleSourceRegionList {
		return vs[0].([]AclRuleSourceRegionList)[vs[1].(int)]
	}).(AclRuleSourceRegionListOutput)
}

type AntiVirusScanProtocolConfig struct {
	// The anti virus action. The valid value can be **0** (observe) or **1** (block).
	Action int `pulumi:"action"`
	// The protocol type.
	// The valid values are as follows:
	// + **0**: HTTP;
	// + **1**: SMTP;
	// + **2**: POP3;
	// + **3**: IMAP4;
	// + **4**: FTP;
	// + **5**: SMB;
	// + **6**: Malicious Access Control;
	ProtocolType int `pulumi:"protocolType"`
}

// AntiVirusScanProtocolConfigInput is an input type that accepts AntiVirusScanProtocolConfigArgs and AntiVirusScanProtocolConfigOutput values.
// You can construct a concrete instance of `AntiVirusScanProtocolConfigInput` via:
//
//	AntiVirusScanProtocolConfigArgs{...}
type AntiVirusScanProtocolConfigInput interface {
	pulumi.Input

	ToAntiVirusScanProtocolConfigOutput() AntiVirusScanProtocolConfigOutput
	ToAntiVirusScanProtocolConfigOutputWithContext(context.Context) AntiVirusScanProtocolConfigOutput
}

type AntiVirusScanProtocolConfigArgs struct {
	// The anti virus action. The valid value can be **0** (observe) or **1** (block).
	Action pulumi.IntInput `pulumi:"action"`
	// The protocol type.
	// The valid values are as follows:
	// + **0**: HTTP;
	// + **1**: SMTP;
	// + **2**: POP3;
	// + **3**: IMAP4;
	// + **4**: FTP;
	// + **5**: SMB;
	// + **6**: Malicious Access Control;
	ProtocolType pulumi.IntInput `pulumi:"protocolType"`
}

func (AntiVirusScanProtocolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntiVirusScanProtocolConfig)(nil)).Elem()
}

func (i AntiVirusScanProtocolConfigArgs) ToAntiVirusScanProtocolConfigOutput() AntiVirusScanProtocolConfigOutput {
	return i.ToAntiVirusScanProtocolConfigOutputWithContext(context.Background())
}

func (i AntiVirusScanProtocolConfigArgs) ToAntiVirusScanProtocolConfigOutputWithContext(ctx context.Context) AntiVirusScanProtocolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiVirusScanProtocolConfigOutput)
}

// AntiVirusScanProtocolConfigArrayInput is an input type that accepts AntiVirusScanProtocolConfigArray and AntiVirusScanProtocolConfigArrayOutput values.
// You can construct a concrete instance of `AntiVirusScanProtocolConfigArrayInput` via:
//
//	AntiVirusScanProtocolConfigArray{ AntiVirusScanProtocolConfigArgs{...} }
type AntiVirusScanProtocolConfigArrayInput interface {
	pulumi.Input

	ToAntiVirusScanProtocolConfigArrayOutput() AntiVirusScanProtocolConfigArrayOutput
	ToAntiVirusScanProtocolConfigArrayOutputWithContext(context.Context) AntiVirusScanProtocolConfigArrayOutput
}

type AntiVirusScanProtocolConfigArray []AntiVirusScanProtocolConfigInput

func (AntiVirusScanProtocolConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntiVirusScanProtocolConfig)(nil)).Elem()
}

func (i AntiVirusScanProtocolConfigArray) ToAntiVirusScanProtocolConfigArrayOutput() AntiVirusScanProtocolConfigArrayOutput {
	return i.ToAntiVirusScanProtocolConfigArrayOutputWithContext(context.Background())
}

func (i AntiVirusScanProtocolConfigArray) ToAntiVirusScanProtocolConfigArrayOutputWithContext(ctx context.Context) AntiVirusScanProtocolConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiVirusScanProtocolConfigArrayOutput)
}

type AntiVirusScanProtocolConfigOutput struct{ *pulumi.OutputState }

func (AntiVirusScanProtocolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntiVirusScanProtocolConfig)(nil)).Elem()
}

func (o AntiVirusScanProtocolConfigOutput) ToAntiVirusScanProtocolConfigOutput() AntiVirusScanProtocolConfigOutput {
	return o
}

func (o AntiVirusScanProtocolConfigOutput) ToAntiVirusScanProtocolConfigOutputWithContext(ctx context.Context) AntiVirusScanProtocolConfigOutput {
	return o
}

// The anti virus action. The valid value can be **0** (observe) or **1** (block).
func (o AntiVirusScanProtocolConfigOutput) Action() pulumi.IntOutput {
	return o.ApplyT(func(v AntiVirusScanProtocolConfig) int { return v.Action }).(pulumi.IntOutput)
}

// The protocol type.
// The valid values are as follows:
// + **0**: HTTP;
// + **1**: SMTP;
// + **2**: POP3;
// + **3**: IMAP4;
// + **4**: FTP;
// + **5**: SMB;
// + **6**: Malicious Access Control;
func (o AntiVirusScanProtocolConfigOutput) ProtocolType() pulumi.IntOutput {
	return o.ApplyT(func(v AntiVirusScanProtocolConfig) int { return v.ProtocolType }).(pulumi.IntOutput)
}

type AntiVirusScanProtocolConfigArrayOutput struct{ *pulumi.OutputState }

func (AntiVirusScanProtocolConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntiVirusScanProtocolConfig)(nil)).Elem()
}

func (o AntiVirusScanProtocolConfigArrayOutput) ToAntiVirusScanProtocolConfigArrayOutput() AntiVirusScanProtocolConfigArrayOutput {
	return o
}

func (o AntiVirusScanProtocolConfigArrayOutput) ToAntiVirusScanProtocolConfigArrayOutputWithContext(ctx context.Context) AntiVirusScanProtocolConfigArrayOutput {
	return o
}

func (o AntiVirusScanProtocolConfigArrayOutput) Index(i pulumi.IntInput) AntiVirusScanProtocolConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AntiVirusScanProtocolConfig {
		return vs[0].([]AntiVirusScanProtocolConfig)[vs[1].(int)]
	}).(AntiVirusScanProtocolConfigOutput)
}

type CaptureTaskDestination struct {
	// Specifies the address.
	Address string `pulumi:"address"`
	// Specifies the address type.
	// The valid values are:
	// + **0**: indicates IPv4;
	// + **1**: indicates IPv6.
	//
	// <a name="Service"></a>
	// The `service` block supports:
	AddressType int `pulumi:"addressType"`
}

// CaptureTaskDestinationInput is an input type that accepts CaptureTaskDestinationArgs and CaptureTaskDestinationOutput values.
// You can construct a concrete instance of `CaptureTaskDestinationInput` via:
//
//	CaptureTaskDestinationArgs{...}
type CaptureTaskDestinationInput interface {
	pulumi.Input

	ToCaptureTaskDestinationOutput() CaptureTaskDestinationOutput
	ToCaptureTaskDestinationOutputWithContext(context.Context) CaptureTaskDestinationOutput
}

type CaptureTaskDestinationArgs struct {
	// Specifies the address.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the address type.
	// The valid values are:
	// + **0**: indicates IPv4;
	// + **1**: indicates IPv6.
	//
	// <a name="Service"></a>
	// The `service` block supports:
	AddressType pulumi.IntInput `pulumi:"addressType"`
}

func (CaptureTaskDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureTaskDestination)(nil)).Elem()
}

func (i CaptureTaskDestinationArgs) ToCaptureTaskDestinationOutput() CaptureTaskDestinationOutput {
	return i.ToCaptureTaskDestinationOutputWithContext(context.Background())
}

func (i CaptureTaskDestinationArgs) ToCaptureTaskDestinationOutputWithContext(ctx context.Context) CaptureTaskDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskDestinationOutput)
}

func (i CaptureTaskDestinationArgs) ToCaptureTaskDestinationPtrOutput() CaptureTaskDestinationPtrOutput {
	return i.ToCaptureTaskDestinationPtrOutputWithContext(context.Background())
}

func (i CaptureTaskDestinationArgs) ToCaptureTaskDestinationPtrOutputWithContext(ctx context.Context) CaptureTaskDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskDestinationOutput).ToCaptureTaskDestinationPtrOutputWithContext(ctx)
}

// CaptureTaskDestinationPtrInput is an input type that accepts CaptureTaskDestinationArgs, CaptureTaskDestinationPtr and CaptureTaskDestinationPtrOutput values.
// You can construct a concrete instance of `CaptureTaskDestinationPtrInput` via:
//
//	        CaptureTaskDestinationArgs{...}
//
//	or:
//
//	        nil
type CaptureTaskDestinationPtrInput interface {
	pulumi.Input

	ToCaptureTaskDestinationPtrOutput() CaptureTaskDestinationPtrOutput
	ToCaptureTaskDestinationPtrOutputWithContext(context.Context) CaptureTaskDestinationPtrOutput
}

type captureTaskDestinationPtrType CaptureTaskDestinationArgs

func CaptureTaskDestinationPtr(v *CaptureTaskDestinationArgs) CaptureTaskDestinationPtrInput {
	return (*captureTaskDestinationPtrType)(v)
}

func (*captureTaskDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureTaskDestination)(nil)).Elem()
}

func (i *captureTaskDestinationPtrType) ToCaptureTaskDestinationPtrOutput() CaptureTaskDestinationPtrOutput {
	return i.ToCaptureTaskDestinationPtrOutputWithContext(context.Background())
}

func (i *captureTaskDestinationPtrType) ToCaptureTaskDestinationPtrOutputWithContext(ctx context.Context) CaptureTaskDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskDestinationPtrOutput)
}

type CaptureTaskDestinationOutput struct{ *pulumi.OutputState }

func (CaptureTaskDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureTaskDestination)(nil)).Elem()
}

func (o CaptureTaskDestinationOutput) ToCaptureTaskDestinationOutput() CaptureTaskDestinationOutput {
	return o
}

func (o CaptureTaskDestinationOutput) ToCaptureTaskDestinationOutputWithContext(ctx context.Context) CaptureTaskDestinationOutput {
	return o
}

func (o CaptureTaskDestinationOutput) ToCaptureTaskDestinationPtrOutput() CaptureTaskDestinationPtrOutput {
	return o.ToCaptureTaskDestinationPtrOutputWithContext(context.Background())
}

func (o CaptureTaskDestinationOutput) ToCaptureTaskDestinationPtrOutputWithContext(ctx context.Context) CaptureTaskDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaptureTaskDestination) *CaptureTaskDestination {
		return &v
	}).(CaptureTaskDestinationPtrOutput)
}

// Specifies the address.
func (o CaptureTaskDestinationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v CaptureTaskDestination) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the address type.
// The valid values are:
// + **0**: indicates IPv4;
// + **1**: indicates IPv6.
//
// <a name="Service"></a>
// The `service` block supports:
func (o CaptureTaskDestinationOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v CaptureTaskDestination) int { return v.AddressType }).(pulumi.IntOutput)
}

type CaptureTaskDestinationPtrOutput struct{ *pulumi.OutputState }

func (CaptureTaskDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureTaskDestination)(nil)).Elem()
}

func (o CaptureTaskDestinationPtrOutput) ToCaptureTaskDestinationPtrOutput() CaptureTaskDestinationPtrOutput {
	return o
}

func (o CaptureTaskDestinationPtrOutput) ToCaptureTaskDestinationPtrOutputWithContext(ctx context.Context) CaptureTaskDestinationPtrOutput {
	return o
}

func (o CaptureTaskDestinationPtrOutput) Elem() CaptureTaskDestinationOutput {
	return o.ApplyT(func(v *CaptureTaskDestination) CaptureTaskDestination {
		if v != nil {
			return *v
		}
		var ret CaptureTaskDestination
		return ret
	}).(CaptureTaskDestinationOutput)
}

// Specifies the address.
func (o CaptureTaskDestinationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaptureTaskDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// Specifies the address type.
// The valid values are:
// + **0**: indicates IPv4;
// + **1**: indicates IPv6.
//
// <a name="Service"></a>
// The `service` block supports:
func (o CaptureTaskDestinationPtrOutput) AddressType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureTaskDestination) *int {
		if v == nil {
			return nil
		}
		return &v.AddressType
	}).(pulumi.IntPtrOutput)
}

type CaptureTaskService struct {
	// Specifies the destination port.
	DestPort *string `pulumi:"destPort"`
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	Protocol int `pulumi:"protocol"`
	// Specifies the source port.
	SourcePort *string `pulumi:"sourcePort"`
}

// CaptureTaskServiceInput is an input type that accepts CaptureTaskServiceArgs and CaptureTaskServiceOutput values.
// You can construct a concrete instance of `CaptureTaskServiceInput` via:
//
//	CaptureTaskServiceArgs{...}
type CaptureTaskServiceInput interface {
	pulumi.Input

	ToCaptureTaskServiceOutput() CaptureTaskServiceOutput
	ToCaptureTaskServiceOutputWithContext(context.Context) CaptureTaskServiceOutput
}

type CaptureTaskServiceArgs struct {
	// Specifies the destination port.
	DestPort pulumi.StringPtrInput `pulumi:"destPort"`
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Specifies the source port.
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
}

func (CaptureTaskServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureTaskService)(nil)).Elem()
}

func (i CaptureTaskServiceArgs) ToCaptureTaskServiceOutput() CaptureTaskServiceOutput {
	return i.ToCaptureTaskServiceOutputWithContext(context.Background())
}

func (i CaptureTaskServiceArgs) ToCaptureTaskServiceOutputWithContext(ctx context.Context) CaptureTaskServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskServiceOutput)
}

func (i CaptureTaskServiceArgs) ToCaptureTaskServicePtrOutput() CaptureTaskServicePtrOutput {
	return i.ToCaptureTaskServicePtrOutputWithContext(context.Background())
}

func (i CaptureTaskServiceArgs) ToCaptureTaskServicePtrOutputWithContext(ctx context.Context) CaptureTaskServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskServiceOutput).ToCaptureTaskServicePtrOutputWithContext(ctx)
}

// CaptureTaskServicePtrInput is an input type that accepts CaptureTaskServiceArgs, CaptureTaskServicePtr and CaptureTaskServicePtrOutput values.
// You can construct a concrete instance of `CaptureTaskServicePtrInput` via:
//
//	        CaptureTaskServiceArgs{...}
//
//	or:
//
//	        nil
type CaptureTaskServicePtrInput interface {
	pulumi.Input

	ToCaptureTaskServicePtrOutput() CaptureTaskServicePtrOutput
	ToCaptureTaskServicePtrOutputWithContext(context.Context) CaptureTaskServicePtrOutput
}

type captureTaskServicePtrType CaptureTaskServiceArgs

func CaptureTaskServicePtr(v *CaptureTaskServiceArgs) CaptureTaskServicePtrInput {
	return (*captureTaskServicePtrType)(v)
}

func (*captureTaskServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureTaskService)(nil)).Elem()
}

func (i *captureTaskServicePtrType) ToCaptureTaskServicePtrOutput() CaptureTaskServicePtrOutput {
	return i.ToCaptureTaskServicePtrOutputWithContext(context.Background())
}

func (i *captureTaskServicePtrType) ToCaptureTaskServicePtrOutputWithContext(ctx context.Context) CaptureTaskServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskServicePtrOutput)
}

type CaptureTaskServiceOutput struct{ *pulumi.OutputState }

func (CaptureTaskServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureTaskService)(nil)).Elem()
}

func (o CaptureTaskServiceOutput) ToCaptureTaskServiceOutput() CaptureTaskServiceOutput {
	return o
}

func (o CaptureTaskServiceOutput) ToCaptureTaskServiceOutputWithContext(ctx context.Context) CaptureTaskServiceOutput {
	return o
}

func (o CaptureTaskServiceOutput) ToCaptureTaskServicePtrOutput() CaptureTaskServicePtrOutput {
	return o.ToCaptureTaskServicePtrOutputWithContext(context.Background())
}

func (o CaptureTaskServiceOutput) ToCaptureTaskServicePtrOutputWithContext(ctx context.Context) CaptureTaskServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaptureTaskService) *CaptureTaskService {
		return &v
	}).(CaptureTaskServicePtrOutput)
}

// Specifies the destination port.
func (o CaptureTaskServiceOutput) DestPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaptureTaskService) *string { return v.DestPort }).(pulumi.StringPtrOutput)
}

// Specifies the protocol type.
// The valid values are:
// + **6**: indicates TCP;
// + **17**: indicates UDP;
// + **1**: indicates ICMP;
// + **58**: indicates ICMPv6;
// + **-1**: indicates any protocol.
func (o CaptureTaskServiceOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v CaptureTaskService) int { return v.Protocol }).(pulumi.IntOutput)
}

// Specifies the source port.
func (o CaptureTaskServiceOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CaptureTaskService) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

type CaptureTaskServicePtrOutput struct{ *pulumi.OutputState }

func (CaptureTaskServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureTaskService)(nil)).Elem()
}

func (o CaptureTaskServicePtrOutput) ToCaptureTaskServicePtrOutput() CaptureTaskServicePtrOutput {
	return o
}

func (o CaptureTaskServicePtrOutput) ToCaptureTaskServicePtrOutputWithContext(ctx context.Context) CaptureTaskServicePtrOutput {
	return o
}

func (o CaptureTaskServicePtrOutput) Elem() CaptureTaskServiceOutput {
	return o.ApplyT(func(v *CaptureTaskService) CaptureTaskService {
		if v != nil {
			return *v
		}
		var ret CaptureTaskService
		return ret
	}).(CaptureTaskServiceOutput)
}

// Specifies the destination port.
func (o CaptureTaskServicePtrOutput) DestPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaptureTaskService) *string {
		if v == nil {
			return nil
		}
		return v.DestPort
	}).(pulumi.StringPtrOutput)
}

// Specifies the protocol type.
// The valid values are:
// + **6**: indicates TCP;
// + **17**: indicates UDP;
// + **1**: indicates ICMP;
// + **58**: indicates ICMPv6;
// + **-1**: indicates any protocol.
func (o CaptureTaskServicePtrOutput) Protocol() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureTaskService) *int {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.IntPtrOutput)
}

// Specifies the source port.
func (o CaptureTaskServicePtrOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaptureTaskService) *string {
		if v == nil {
			return nil
		}
		return v.SourcePort
	}).(pulumi.StringPtrOutput)
}

type CaptureTaskSource struct {
	// Specifies the address.
	Address string `pulumi:"address"`
	// Specifies the address type.
	// The valid values are:
	// + **0**: indicates IPv4;
	// + **1**: indicates IPv6.
	//
	// <a name="Service"></a>
	// The `service` block supports:
	AddressType int `pulumi:"addressType"`
}

// CaptureTaskSourceInput is an input type that accepts CaptureTaskSourceArgs and CaptureTaskSourceOutput values.
// You can construct a concrete instance of `CaptureTaskSourceInput` via:
//
//	CaptureTaskSourceArgs{...}
type CaptureTaskSourceInput interface {
	pulumi.Input

	ToCaptureTaskSourceOutput() CaptureTaskSourceOutput
	ToCaptureTaskSourceOutputWithContext(context.Context) CaptureTaskSourceOutput
}

type CaptureTaskSourceArgs struct {
	// Specifies the address.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the address type.
	// The valid values are:
	// + **0**: indicates IPv4;
	// + **1**: indicates IPv6.
	//
	// <a name="Service"></a>
	// The `service` block supports:
	AddressType pulumi.IntInput `pulumi:"addressType"`
}

func (CaptureTaskSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureTaskSource)(nil)).Elem()
}

func (i CaptureTaskSourceArgs) ToCaptureTaskSourceOutput() CaptureTaskSourceOutput {
	return i.ToCaptureTaskSourceOutputWithContext(context.Background())
}

func (i CaptureTaskSourceArgs) ToCaptureTaskSourceOutputWithContext(ctx context.Context) CaptureTaskSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskSourceOutput)
}

func (i CaptureTaskSourceArgs) ToCaptureTaskSourcePtrOutput() CaptureTaskSourcePtrOutput {
	return i.ToCaptureTaskSourcePtrOutputWithContext(context.Background())
}

func (i CaptureTaskSourceArgs) ToCaptureTaskSourcePtrOutputWithContext(ctx context.Context) CaptureTaskSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskSourceOutput).ToCaptureTaskSourcePtrOutputWithContext(ctx)
}

// CaptureTaskSourcePtrInput is an input type that accepts CaptureTaskSourceArgs, CaptureTaskSourcePtr and CaptureTaskSourcePtrOutput values.
// You can construct a concrete instance of `CaptureTaskSourcePtrInput` via:
//
//	        CaptureTaskSourceArgs{...}
//
//	or:
//
//	        nil
type CaptureTaskSourcePtrInput interface {
	pulumi.Input

	ToCaptureTaskSourcePtrOutput() CaptureTaskSourcePtrOutput
	ToCaptureTaskSourcePtrOutputWithContext(context.Context) CaptureTaskSourcePtrOutput
}

type captureTaskSourcePtrType CaptureTaskSourceArgs

func CaptureTaskSourcePtr(v *CaptureTaskSourceArgs) CaptureTaskSourcePtrInput {
	return (*captureTaskSourcePtrType)(v)
}

func (*captureTaskSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureTaskSource)(nil)).Elem()
}

func (i *captureTaskSourcePtrType) ToCaptureTaskSourcePtrOutput() CaptureTaskSourcePtrOutput {
	return i.ToCaptureTaskSourcePtrOutputWithContext(context.Background())
}

func (i *captureTaskSourcePtrType) ToCaptureTaskSourcePtrOutputWithContext(ctx context.Context) CaptureTaskSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaptureTaskSourcePtrOutput)
}

type CaptureTaskSourceOutput struct{ *pulumi.OutputState }

func (CaptureTaskSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaptureTaskSource)(nil)).Elem()
}

func (o CaptureTaskSourceOutput) ToCaptureTaskSourceOutput() CaptureTaskSourceOutput {
	return o
}

func (o CaptureTaskSourceOutput) ToCaptureTaskSourceOutputWithContext(ctx context.Context) CaptureTaskSourceOutput {
	return o
}

func (o CaptureTaskSourceOutput) ToCaptureTaskSourcePtrOutput() CaptureTaskSourcePtrOutput {
	return o.ToCaptureTaskSourcePtrOutputWithContext(context.Background())
}

func (o CaptureTaskSourceOutput) ToCaptureTaskSourcePtrOutputWithContext(ctx context.Context) CaptureTaskSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaptureTaskSource) *CaptureTaskSource {
		return &v
	}).(CaptureTaskSourcePtrOutput)
}

// Specifies the address.
func (o CaptureTaskSourceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v CaptureTaskSource) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the address type.
// The valid values are:
// + **0**: indicates IPv4;
// + **1**: indicates IPv6.
//
// <a name="Service"></a>
// The `service` block supports:
func (o CaptureTaskSourceOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v CaptureTaskSource) int { return v.AddressType }).(pulumi.IntOutput)
}

type CaptureTaskSourcePtrOutput struct{ *pulumi.OutputState }

func (CaptureTaskSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaptureTaskSource)(nil)).Elem()
}

func (o CaptureTaskSourcePtrOutput) ToCaptureTaskSourcePtrOutput() CaptureTaskSourcePtrOutput {
	return o
}

func (o CaptureTaskSourcePtrOutput) ToCaptureTaskSourcePtrOutputWithContext(ctx context.Context) CaptureTaskSourcePtrOutput {
	return o
}

func (o CaptureTaskSourcePtrOutput) Elem() CaptureTaskSourceOutput {
	return o.ApplyT(func(v *CaptureTaskSource) CaptureTaskSource {
		if v != nil {
			return *v
		}
		var ret CaptureTaskSource
		return ret
	}).(CaptureTaskSourceOutput)
}

// Specifies the address.
func (o CaptureTaskSourcePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CaptureTaskSource) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// Specifies the address type.
// The valid values are:
// + **0**: indicates IPv4;
// + **1**: indicates IPv6.
//
// <a name="Service"></a>
// The `service` block supports:
func (o CaptureTaskSourcePtrOutput) AddressType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CaptureTaskSource) *int {
		if v == nil {
			return nil
		}
		return &v.AddressType
	}).(pulumi.IntPtrOutput)
}

type DomainNameGroupDomainName struct {
	// Specifies the description.
	Description *string `pulumi:"description"`
	// The DNS IP list.
	DnsIps *string `pulumi:"dnsIps"`
	// The domain address ID.
	DomainAddressId *string `pulumi:"domainAddressId"`
	// Specifies the domain name.
	DomainName string `pulumi:"domainName"`
}

// DomainNameGroupDomainNameInput is an input type that accepts DomainNameGroupDomainNameArgs and DomainNameGroupDomainNameOutput values.
// You can construct a concrete instance of `DomainNameGroupDomainNameInput` via:
//
//	DomainNameGroupDomainNameArgs{...}
type DomainNameGroupDomainNameInput interface {
	pulumi.Input

	ToDomainNameGroupDomainNameOutput() DomainNameGroupDomainNameOutput
	ToDomainNameGroupDomainNameOutputWithContext(context.Context) DomainNameGroupDomainNameOutput
}

type DomainNameGroupDomainNameArgs struct {
	// Specifies the description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The DNS IP list.
	DnsIps pulumi.StringPtrInput `pulumi:"dnsIps"`
	// The domain address ID.
	DomainAddressId pulumi.StringPtrInput `pulumi:"domainAddressId"`
	// Specifies the domain name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (DomainNameGroupDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameGroupDomainName)(nil)).Elem()
}

func (i DomainNameGroupDomainNameArgs) ToDomainNameGroupDomainNameOutput() DomainNameGroupDomainNameOutput {
	return i.ToDomainNameGroupDomainNameOutputWithContext(context.Background())
}

func (i DomainNameGroupDomainNameArgs) ToDomainNameGroupDomainNameOutputWithContext(ctx context.Context) DomainNameGroupDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameGroupDomainNameOutput)
}

// DomainNameGroupDomainNameArrayInput is an input type that accepts DomainNameGroupDomainNameArray and DomainNameGroupDomainNameArrayOutput values.
// You can construct a concrete instance of `DomainNameGroupDomainNameArrayInput` via:
//
//	DomainNameGroupDomainNameArray{ DomainNameGroupDomainNameArgs{...} }
type DomainNameGroupDomainNameArrayInput interface {
	pulumi.Input

	ToDomainNameGroupDomainNameArrayOutput() DomainNameGroupDomainNameArrayOutput
	ToDomainNameGroupDomainNameArrayOutputWithContext(context.Context) DomainNameGroupDomainNameArrayOutput
}

type DomainNameGroupDomainNameArray []DomainNameGroupDomainNameInput

func (DomainNameGroupDomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainNameGroupDomainName)(nil)).Elem()
}

func (i DomainNameGroupDomainNameArray) ToDomainNameGroupDomainNameArrayOutput() DomainNameGroupDomainNameArrayOutput {
	return i.ToDomainNameGroupDomainNameArrayOutputWithContext(context.Background())
}

func (i DomainNameGroupDomainNameArray) ToDomainNameGroupDomainNameArrayOutputWithContext(ctx context.Context) DomainNameGroupDomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameGroupDomainNameArrayOutput)
}

type DomainNameGroupDomainNameOutput struct{ *pulumi.OutputState }

func (DomainNameGroupDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameGroupDomainName)(nil)).Elem()
}

func (o DomainNameGroupDomainNameOutput) ToDomainNameGroupDomainNameOutput() DomainNameGroupDomainNameOutput {
	return o
}

func (o DomainNameGroupDomainNameOutput) ToDomainNameGroupDomainNameOutputWithContext(ctx context.Context) DomainNameGroupDomainNameOutput {
	return o
}

// Specifies the description.
func (o DomainNameGroupDomainNameOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameGroupDomainName) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The DNS IP list.
func (o DomainNameGroupDomainNameOutput) DnsIps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameGroupDomainName) *string { return v.DnsIps }).(pulumi.StringPtrOutput)
}

// The domain address ID.
func (o DomainNameGroupDomainNameOutput) DomainAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameGroupDomainName) *string { return v.DomainAddressId }).(pulumi.StringPtrOutput)
}

// Specifies the domain name.
func (o DomainNameGroupDomainNameOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainNameGroupDomainName) string { return v.DomainName }).(pulumi.StringOutput)
}

type DomainNameGroupDomainNameArrayOutput struct{ *pulumi.OutputState }

func (DomainNameGroupDomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainNameGroupDomainName)(nil)).Elem()
}

func (o DomainNameGroupDomainNameArrayOutput) ToDomainNameGroupDomainNameArrayOutput() DomainNameGroupDomainNameArrayOutput {
	return o
}

func (o DomainNameGroupDomainNameArrayOutput) ToDomainNameGroupDomainNameArrayOutputWithContext(ctx context.Context) DomainNameGroupDomainNameArrayOutput {
	return o
}

func (o DomainNameGroupDomainNameArrayOutput) Index(i pulumi.IntInput) DomainNameGroupDomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainNameGroupDomainName {
		return vs[0].([]DomainNameGroupDomainName)[vs[1].(int)]
	}).(DomainNameGroupDomainNameOutput)
}

type EipProtectionProtectedEip struct {
	// The ID of the protected EIP.
	Id string `pulumi:"id"`
	// The IPv4 address of the protected EIP.
	PublicIpv4 *string `pulumi:"publicIpv4"`
	// The IPv6 address of the protected EIP.
	//
	// > At least one of `publicIpv4` and `publicIpv6` must be set.
	PublicIpv6 *string `pulumi:"publicIpv6"`
}

// EipProtectionProtectedEipInput is an input type that accepts EipProtectionProtectedEipArgs and EipProtectionProtectedEipOutput values.
// You can construct a concrete instance of `EipProtectionProtectedEipInput` via:
//
//	EipProtectionProtectedEipArgs{...}
type EipProtectionProtectedEipInput interface {
	pulumi.Input

	ToEipProtectionProtectedEipOutput() EipProtectionProtectedEipOutput
	ToEipProtectionProtectedEipOutputWithContext(context.Context) EipProtectionProtectedEipOutput
}

type EipProtectionProtectedEipArgs struct {
	// The ID of the protected EIP.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv4 address of the protected EIP.
	PublicIpv4 pulumi.StringPtrInput `pulumi:"publicIpv4"`
	// The IPv6 address of the protected EIP.
	//
	// > At least one of `publicIpv4` and `publicIpv6` must be set.
	PublicIpv6 pulumi.StringPtrInput `pulumi:"publicIpv6"`
}

func (EipProtectionProtectedEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EipProtectionProtectedEip)(nil)).Elem()
}

func (i EipProtectionProtectedEipArgs) ToEipProtectionProtectedEipOutput() EipProtectionProtectedEipOutput {
	return i.ToEipProtectionProtectedEipOutputWithContext(context.Background())
}

func (i EipProtectionProtectedEipArgs) ToEipProtectionProtectedEipOutputWithContext(ctx context.Context) EipProtectionProtectedEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipProtectionProtectedEipOutput)
}

// EipProtectionProtectedEipArrayInput is an input type that accepts EipProtectionProtectedEipArray and EipProtectionProtectedEipArrayOutput values.
// You can construct a concrete instance of `EipProtectionProtectedEipArrayInput` via:
//
//	EipProtectionProtectedEipArray{ EipProtectionProtectedEipArgs{...} }
type EipProtectionProtectedEipArrayInput interface {
	pulumi.Input

	ToEipProtectionProtectedEipArrayOutput() EipProtectionProtectedEipArrayOutput
	ToEipProtectionProtectedEipArrayOutputWithContext(context.Context) EipProtectionProtectedEipArrayOutput
}

type EipProtectionProtectedEipArray []EipProtectionProtectedEipInput

func (EipProtectionProtectedEipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EipProtectionProtectedEip)(nil)).Elem()
}

func (i EipProtectionProtectedEipArray) ToEipProtectionProtectedEipArrayOutput() EipProtectionProtectedEipArrayOutput {
	return i.ToEipProtectionProtectedEipArrayOutputWithContext(context.Background())
}

func (i EipProtectionProtectedEipArray) ToEipProtectionProtectedEipArrayOutputWithContext(ctx context.Context) EipProtectionProtectedEipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipProtectionProtectedEipArrayOutput)
}

type EipProtectionProtectedEipOutput struct{ *pulumi.OutputState }

func (EipProtectionProtectedEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EipProtectionProtectedEip)(nil)).Elem()
}

func (o EipProtectionProtectedEipOutput) ToEipProtectionProtectedEipOutput() EipProtectionProtectedEipOutput {
	return o
}

func (o EipProtectionProtectedEipOutput) ToEipProtectionProtectedEipOutputWithContext(ctx context.Context) EipProtectionProtectedEipOutput {
	return o
}

// The ID of the protected EIP.
func (o EipProtectionProtectedEipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EipProtectionProtectedEip) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv4 address of the protected EIP.
func (o EipProtectionProtectedEipOutput) PublicIpv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EipProtectionProtectedEip) *string { return v.PublicIpv4 }).(pulumi.StringPtrOutput)
}

// The IPv6 address of the protected EIP.
//
// > At least one of `publicIpv4` and `publicIpv6` must be set.
func (o EipProtectionProtectedEipOutput) PublicIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EipProtectionProtectedEip) *string { return v.PublicIpv6 }).(pulumi.StringPtrOutput)
}

type EipProtectionProtectedEipArrayOutput struct{ *pulumi.OutputState }

func (EipProtectionProtectedEipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EipProtectionProtectedEip)(nil)).Elem()
}

func (o EipProtectionProtectedEipArrayOutput) ToEipProtectionProtectedEipArrayOutput() EipProtectionProtectedEipArrayOutput {
	return o
}

func (o EipProtectionProtectedEipArrayOutput) ToEipProtectionProtectedEipArrayOutputWithContext(ctx context.Context) EipProtectionProtectedEipArrayOutput {
	return o
}

func (o EipProtectionProtectedEipArrayOutput) Index(i pulumi.IntInput) EipProtectionProtectedEipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EipProtectionProtectedEip {
		return vs[0].([]EipProtectionProtectedEip)[vs[1].(int)]
	}).(EipProtectionProtectedEipOutput)
}

type FirewallFlavor struct {
	// The bandwidth of the firewall.
	Bandwidth *int `pulumi:"bandwidth"`
	// The default bandwidth of the firewall.
	DefaultBandwidth *int `pulumi:"defaultBandwidth"`
	// The default EIP number of the firewall.
	DefaultEipCount *int `pulumi:"defaultEipCount"`
	// The default log storage of the firewall.
	DefaultLogStorage *int `pulumi:"defaultLogStorage"`
	// The default VPC number of the firewall.
	DefaultVpcCount *int `pulumi:"defaultVpcCount"`
	// The EIP number of the firewall.
	EipCount *int `pulumi:"eipCount"`
	// Specifies the extend bandwidth of the firewall.
	// Only works when the chargingMode is **prePaid**.
	// Changing this parameter will create a new resource.
	ExtendBandwidth *int `pulumi:"extendBandwidth"`
	// Specifies the extend EIP number of the firewall.
	// Only works when the chargingMode is **prePaid**.
	// Changing this parameter will create a new resource.
	ExtendEipCount *int `pulumi:"extendEipCount"`
	// Specifies the extend VPC number of the firewall.
	// Only works when the chargingMode is **prePaid**.
	// Changing this parameter will create a new resource.
	ExtendVpcCount *int `pulumi:"extendVpcCount"`
	// The log storage of the firewall.
	LogStorage *int `pulumi:"logStorage"`
	// The total rule count of the firewall.
	TotalRuleCount *int `pulumi:"totalRuleCount"`
	// The used rule count of the firewall.
	UsedRuleCount *int `pulumi:"usedRuleCount"`
	// Specifies the version of the firewall.
	// When the chargingMode is **prePaid**: the value can be **Standard** and **Prefessional**.
	// When the chargingMode is **postPaid**: the value can be **Prefessional**.
	// Changing this parameter will create a new resource.
	Version string `pulumi:"version"`
	// The VPC bandwidth of the firewall.
	VpcBandwidth *int `pulumi:"vpcBandwidth"`
	// The VPC number of the firewall.
	VpcCount *int `pulumi:"vpcCount"`
}

// FirewallFlavorInput is an input type that accepts FirewallFlavorArgs and FirewallFlavorOutput values.
// You can construct a concrete instance of `FirewallFlavorInput` via:
//
//	FirewallFlavorArgs{...}
type FirewallFlavorInput interface {
	pulumi.Input

	ToFirewallFlavorOutput() FirewallFlavorOutput
	ToFirewallFlavorOutputWithContext(context.Context) FirewallFlavorOutput
}

type FirewallFlavorArgs struct {
	// The bandwidth of the firewall.
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// The default bandwidth of the firewall.
	DefaultBandwidth pulumi.IntPtrInput `pulumi:"defaultBandwidth"`
	// The default EIP number of the firewall.
	DefaultEipCount pulumi.IntPtrInput `pulumi:"defaultEipCount"`
	// The default log storage of the firewall.
	DefaultLogStorage pulumi.IntPtrInput `pulumi:"defaultLogStorage"`
	// The default VPC number of the firewall.
	DefaultVpcCount pulumi.IntPtrInput `pulumi:"defaultVpcCount"`
	// The EIP number of the firewall.
	EipCount pulumi.IntPtrInput `pulumi:"eipCount"`
	// Specifies the extend bandwidth of the firewall.
	// Only works when the chargingMode is **prePaid**.
	// Changing this parameter will create a new resource.
	ExtendBandwidth pulumi.IntPtrInput `pulumi:"extendBandwidth"`
	// Specifies the extend EIP number of the firewall.
	// Only works when the chargingMode is **prePaid**.
	// Changing this parameter will create a new resource.
	ExtendEipCount pulumi.IntPtrInput `pulumi:"extendEipCount"`
	// Specifies the extend VPC number of the firewall.
	// Only works when the chargingMode is **prePaid**.
	// Changing this parameter will create a new resource.
	ExtendVpcCount pulumi.IntPtrInput `pulumi:"extendVpcCount"`
	// The log storage of the firewall.
	LogStorage pulumi.IntPtrInput `pulumi:"logStorage"`
	// The total rule count of the firewall.
	TotalRuleCount pulumi.IntPtrInput `pulumi:"totalRuleCount"`
	// The used rule count of the firewall.
	UsedRuleCount pulumi.IntPtrInput `pulumi:"usedRuleCount"`
	// Specifies the version of the firewall.
	// When the chargingMode is **prePaid**: the value can be **Standard** and **Prefessional**.
	// When the chargingMode is **postPaid**: the value can be **Prefessional**.
	// Changing this parameter will create a new resource.
	Version pulumi.StringInput `pulumi:"version"`
	// The VPC bandwidth of the firewall.
	VpcBandwidth pulumi.IntPtrInput `pulumi:"vpcBandwidth"`
	// The VPC number of the firewall.
	VpcCount pulumi.IntPtrInput `pulumi:"vpcCount"`
}

func (FirewallFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFlavor)(nil)).Elem()
}

func (i FirewallFlavorArgs) ToFirewallFlavorOutput() FirewallFlavorOutput {
	return i.ToFirewallFlavorOutputWithContext(context.Background())
}

func (i FirewallFlavorArgs) ToFirewallFlavorOutputWithContext(ctx context.Context) FirewallFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFlavorOutput)
}

func (i FirewallFlavorArgs) ToFirewallFlavorPtrOutput() FirewallFlavorPtrOutput {
	return i.ToFirewallFlavorPtrOutputWithContext(context.Background())
}

func (i FirewallFlavorArgs) ToFirewallFlavorPtrOutputWithContext(ctx context.Context) FirewallFlavorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFlavorOutput).ToFirewallFlavorPtrOutputWithContext(ctx)
}

// FirewallFlavorPtrInput is an input type that accepts FirewallFlavorArgs, FirewallFlavorPtr and FirewallFlavorPtrOutput values.
// You can construct a concrete instance of `FirewallFlavorPtrInput` via:
//
//	        FirewallFlavorArgs{...}
//
//	or:
//
//	        nil
type FirewallFlavorPtrInput interface {
	pulumi.Input

	ToFirewallFlavorPtrOutput() FirewallFlavorPtrOutput
	ToFirewallFlavorPtrOutputWithContext(context.Context) FirewallFlavorPtrOutput
}

type firewallFlavorPtrType FirewallFlavorArgs

func FirewallFlavorPtr(v *FirewallFlavorArgs) FirewallFlavorPtrInput {
	return (*firewallFlavorPtrType)(v)
}

func (*firewallFlavorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFlavor)(nil)).Elem()
}

func (i *firewallFlavorPtrType) ToFirewallFlavorPtrOutput() FirewallFlavorPtrOutput {
	return i.ToFirewallFlavorPtrOutputWithContext(context.Background())
}

func (i *firewallFlavorPtrType) ToFirewallFlavorPtrOutputWithContext(ctx context.Context) FirewallFlavorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallFlavorPtrOutput)
}

type FirewallFlavorOutput struct{ *pulumi.OutputState }

func (FirewallFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallFlavor)(nil)).Elem()
}

func (o FirewallFlavorOutput) ToFirewallFlavorOutput() FirewallFlavorOutput {
	return o
}

func (o FirewallFlavorOutput) ToFirewallFlavorOutputWithContext(ctx context.Context) FirewallFlavorOutput {
	return o
}

func (o FirewallFlavorOutput) ToFirewallFlavorPtrOutput() FirewallFlavorPtrOutput {
	return o.ToFirewallFlavorPtrOutputWithContext(context.Background())
}

func (o FirewallFlavorOutput) ToFirewallFlavorPtrOutputWithContext(ctx context.Context) FirewallFlavorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallFlavor) *FirewallFlavor {
		return &v
	}).(FirewallFlavorPtrOutput)
}

// The bandwidth of the firewall.
func (o FirewallFlavorOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// The default bandwidth of the firewall.
func (o FirewallFlavorOutput) DefaultBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.DefaultBandwidth }).(pulumi.IntPtrOutput)
}

// The default EIP number of the firewall.
func (o FirewallFlavorOutput) DefaultEipCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.DefaultEipCount }).(pulumi.IntPtrOutput)
}

// The default log storage of the firewall.
func (o FirewallFlavorOutput) DefaultLogStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.DefaultLogStorage }).(pulumi.IntPtrOutput)
}

// The default VPC number of the firewall.
func (o FirewallFlavorOutput) DefaultVpcCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.DefaultVpcCount }).(pulumi.IntPtrOutput)
}

// The EIP number of the firewall.
func (o FirewallFlavorOutput) EipCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.EipCount }).(pulumi.IntPtrOutput)
}

// Specifies the extend bandwidth of the firewall.
// Only works when the chargingMode is **prePaid**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorOutput) ExtendBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.ExtendBandwidth }).(pulumi.IntPtrOutput)
}

// Specifies the extend EIP number of the firewall.
// Only works when the chargingMode is **prePaid**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorOutput) ExtendEipCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.ExtendEipCount }).(pulumi.IntPtrOutput)
}

// Specifies the extend VPC number of the firewall.
// Only works when the chargingMode is **prePaid**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorOutput) ExtendVpcCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.ExtendVpcCount }).(pulumi.IntPtrOutput)
}

// The log storage of the firewall.
func (o FirewallFlavorOutput) LogStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.LogStorage }).(pulumi.IntPtrOutput)
}

// The total rule count of the firewall.
func (o FirewallFlavorOutput) TotalRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.TotalRuleCount }).(pulumi.IntPtrOutput)
}

// The used rule count of the firewall.
func (o FirewallFlavorOutput) UsedRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.UsedRuleCount }).(pulumi.IntPtrOutput)
}

// Specifies the version of the firewall.
// When the chargingMode is **prePaid**: the value can be **Standard** and **Prefessional**.
// When the chargingMode is **postPaid**: the value can be **Prefessional**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallFlavor) string { return v.Version }).(pulumi.StringOutput)
}

// The VPC bandwidth of the firewall.
func (o FirewallFlavorOutput) VpcBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.VpcBandwidth }).(pulumi.IntPtrOutput)
}

// The VPC number of the firewall.
func (o FirewallFlavorOutput) VpcCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallFlavor) *int { return v.VpcCount }).(pulumi.IntPtrOutput)
}

type FirewallFlavorPtrOutput struct{ *pulumi.OutputState }

func (FirewallFlavorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallFlavor)(nil)).Elem()
}

func (o FirewallFlavorPtrOutput) ToFirewallFlavorPtrOutput() FirewallFlavorPtrOutput {
	return o
}

func (o FirewallFlavorPtrOutput) ToFirewallFlavorPtrOutputWithContext(ctx context.Context) FirewallFlavorPtrOutput {
	return o
}

func (o FirewallFlavorPtrOutput) Elem() FirewallFlavorOutput {
	return o.ApplyT(func(v *FirewallFlavor) FirewallFlavor {
		if v != nil {
			return *v
		}
		var ret FirewallFlavor
		return ret
	}).(FirewallFlavorOutput)
}

// The bandwidth of the firewall.
func (o FirewallFlavorPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// The default bandwidth of the firewall.
func (o FirewallFlavorPtrOutput) DefaultBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.DefaultBandwidth
	}).(pulumi.IntPtrOutput)
}

// The default EIP number of the firewall.
func (o FirewallFlavorPtrOutput) DefaultEipCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.DefaultEipCount
	}).(pulumi.IntPtrOutput)
}

// The default log storage of the firewall.
func (o FirewallFlavorPtrOutput) DefaultLogStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.DefaultLogStorage
	}).(pulumi.IntPtrOutput)
}

// The default VPC number of the firewall.
func (o FirewallFlavorPtrOutput) DefaultVpcCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.DefaultVpcCount
	}).(pulumi.IntPtrOutput)
}

// The EIP number of the firewall.
func (o FirewallFlavorPtrOutput) EipCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.EipCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the extend bandwidth of the firewall.
// Only works when the chargingMode is **prePaid**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorPtrOutput) ExtendBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.ExtendBandwidth
	}).(pulumi.IntPtrOutput)
}

// Specifies the extend EIP number of the firewall.
// Only works when the chargingMode is **prePaid**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorPtrOutput) ExtendEipCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.ExtendEipCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the extend VPC number of the firewall.
// Only works when the chargingMode is **prePaid**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorPtrOutput) ExtendVpcCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.ExtendVpcCount
	}).(pulumi.IntPtrOutput)
}

// The log storage of the firewall.
func (o FirewallFlavorPtrOutput) LogStorage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.LogStorage
	}).(pulumi.IntPtrOutput)
}

// The total rule count of the firewall.
func (o FirewallFlavorPtrOutput) TotalRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.TotalRuleCount
	}).(pulumi.IntPtrOutput)
}

// The used rule count of the firewall.
func (o FirewallFlavorPtrOutput) UsedRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.UsedRuleCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the version of the firewall.
// When the chargingMode is **prePaid**: the value can be **Standard** and **Prefessional**.
// When the chargingMode is **postPaid**: the value can be **Prefessional**.
// Changing this parameter will create a new resource.
func (o FirewallFlavorPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// The VPC bandwidth of the firewall.
func (o FirewallFlavorPtrOutput) VpcBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.VpcBandwidth
	}).(pulumi.IntPtrOutput)
}

// The VPC number of the firewall.
func (o FirewallFlavorPtrOutput) VpcCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FirewallFlavor) *int {
		if v == nil {
			return nil
		}
		return v.VpcCount
	}).(pulumi.IntPtrOutput)
}

type FirewallProtectObject struct {
	// The protected object ID.
	ObjectId *string `pulumi:"objectId"`
	// The protected object name.
	ObjectName *string `pulumi:"objectName"`
	// The object type.
	// The options are as follows: 0: north-south; 1: east-west.
	Type *int `pulumi:"type"`
}

// FirewallProtectObjectInput is an input type that accepts FirewallProtectObjectArgs and FirewallProtectObjectOutput values.
// You can construct a concrete instance of `FirewallProtectObjectInput` via:
//
//	FirewallProtectObjectArgs{...}
type FirewallProtectObjectInput interface {
	pulumi.Input

	ToFirewallProtectObjectOutput() FirewallProtectObjectOutput
	ToFirewallProtectObjectOutputWithContext(context.Context) FirewallProtectObjectOutput
}

type FirewallProtectObjectArgs struct {
	// The protected object ID.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The protected object name.
	ObjectName pulumi.StringPtrInput `pulumi:"objectName"`
	// The object type.
	// The options are as follows: 0: north-south; 1: east-west.
	Type pulumi.IntPtrInput `pulumi:"type"`
}

func (FirewallProtectObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProtectObject)(nil)).Elem()
}

func (i FirewallProtectObjectArgs) ToFirewallProtectObjectOutput() FirewallProtectObjectOutput {
	return i.ToFirewallProtectObjectOutputWithContext(context.Background())
}

func (i FirewallProtectObjectArgs) ToFirewallProtectObjectOutputWithContext(ctx context.Context) FirewallProtectObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProtectObjectOutput)
}

// FirewallProtectObjectArrayInput is an input type that accepts FirewallProtectObjectArray and FirewallProtectObjectArrayOutput values.
// You can construct a concrete instance of `FirewallProtectObjectArrayInput` via:
//
//	FirewallProtectObjectArray{ FirewallProtectObjectArgs{...} }
type FirewallProtectObjectArrayInput interface {
	pulumi.Input

	ToFirewallProtectObjectArrayOutput() FirewallProtectObjectArrayOutput
	ToFirewallProtectObjectArrayOutputWithContext(context.Context) FirewallProtectObjectArrayOutput
}

type FirewallProtectObjectArray []FirewallProtectObjectInput

func (FirewallProtectObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProtectObject)(nil)).Elem()
}

func (i FirewallProtectObjectArray) ToFirewallProtectObjectArrayOutput() FirewallProtectObjectArrayOutput {
	return i.ToFirewallProtectObjectArrayOutputWithContext(context.Background())
}

func (i FirewallProtectObjectArray) ToFirewallProtectObjectArrayOutputWithContext(ctx context.Context) FirewallProtectObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallProtectObjectArrayOutput)
}

type FirewallProtectObjectOutput struct{ *pulumi.OutputState }

func (FirewallProtectObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallProtectObject)(nil)).Elem()
}

func (o FirewallProtectObjectOutput) ToFirewallProtectObjectOutput() FirewallProtectObjectOutput {
	return o
}

func (o FirewallProtectObjectOutput) ToFirewallProtectObjectOutputWithContext(ctx context.Context) FirewallProtectObjectOutput {
	return o
}

// The protected object ID.
func (o FirewallProtectObjectOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProtectObject) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The protected object name.
func (o FirewallProtectObjectOutput) ObjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallProtectObject) *string { return v.ObjectName }).(pulumi.StringPtrOutput)
}

// The object type.
// The options are as follows: 0: north-south; 1: east-west.
func (o FirewallProtectObjectOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallProtectObject) *int { return v.Type }).(pulumi.IntPtrOutput)
}

type FirewallProtectObjectArrayOutput struct{ *pulumi.OutputState }

func (FirewallProtectObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallProtectObject)(nil)).Elem()
}

func (o FirewallProtectObjectArrayOutput) ToFirewallProtectObjectArrayOutput() FirewallProtectObjectArrayOutput {
	return o
}

func (o FirewallProtectObjectArrayOutput) ToFirewallProtectObjectArrayOutputWithContext(ctx context.Context) FirewallProtectObjectArrayOutput {
	return o
}

func (o FirewallProtectObjectArrayOutput) Index(i pulumi.IntInput) FirewallProtectObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallProtectObject {
		return vs[0].([]FirewallProtectObject)[vs[1].(int)]
	}).(FirewallProtectObjectOutput)
}

type GetAccessControlLogsRecord struct {
	// Specifies the action. The values can be **allow** and **deny**.
	Action string `pulumi:"action"`
	// Specifies the application protocol.
	App string `pulumi:"app"`
	// The destination city ID.
	DstCityId string `pulumi:"dstCityId"`
	// Specifies the destination city name.
	DstCityName string `pulumi:"dstCityName"`
	// The destination host.
	DstHost string `pulumi:"dstHost"`
	// Specifies the destination IP address.
	DstIp string `pulumi:"dstIp"`
	// Specifies the destination port.
	DstPort int `pulumi:"dstPort"`
	// The destination province ID.
	DstProvinceId string `pulumi:"dstProvinceId"`
	// Specifies the destination province name.
	DstProvinceName string `pulumi:"dstProvinceName"`
	// The destination region ID.
	DstRegionId string `pulumi:"dstRegionId"`
	// Specifies the destination region name.
	DstRegionName string `pulumi:"dstRegionName"`
	// The hit time.
	HitTime string `pulumi:"hitTime"`
	// The document ID.
	LogId string `pulumi:"logId"`
	// The protocol type.
	Protocol string `pulumi:"protocol"`
	// The rule ID.
	RuleId string `pulumi:"ruleId"`
	// Specifies the rule name.
	RuleName string `pulumi:"ruleName"`
	// The source city ID.
	SrcCityId string `pulumi:"srcCityId"`
	// Specifies the source city name.
	SrcCityName string `pulumi:"srcCityName"`
	// Specifies the source IP address.
	SrcIp string `pulumi:"srcIp"`
	// Specifies the source port.
	SrcPort int `pulumi:"srcPort"`
	// The source province ID.
	SrcProvinceId string `pulumi:"srcProvinceId"`
	// Specifies the source province name.
	SrcProvinceName string `pulumi:"srcProvinceName"`
	// The source region ID.
	SrcRegionId string `pulumi:"srcRegionId"`
	// Specifies the source region name.
	SrcRegionName string `pulumi:"srcRegionName"`
}

// GetAccessControlLogsRecordInput is an input type that accepts GetAccessControlLogsRecordArgs and GetAccessControlLogsRecordOutput values.
// You can construct a concrete instance of `GetAccessControlLogsRecordInput` via:
//
//	GetAccessControlLogsRecordArgs{...}
type GetAccessControlLogsRecordInput interface {
	pulumi.Input

	ToGetAccessControlLogsRecordOutput() GetAccessControlLogsRecordOutput
	ToGetAccessControlLogsRecordOutputWithContext(context.Context) GetAccessControlLogsRecordOutput
}

type GetAccessControlLogsRecordArgs struct {
	// Specifies the action. The values can be **allow** and **deny**.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies the application protocol.
	App pulumi.StringInput `pulumi:"app"`
	// The destination city ID.
	DstCityId pulumi.StringInput `pulumi:"dstCityId"`
	// Specifies the destination city name.
	DstCityName pulumi.StringInput `pulumi:"dstCityName"`
	// The destination host.
	DstHost pulumi.StringInput `pulumi:"dstHost"`
	// Specifies the destination IP address.
	DstIp pulumi.StringInput `pulumi:"dstIp"`
	// Specifies the destination port.
	DstPort pulumi.IntInput `pulumi:"dstPort"`
	// The destination province ID.
	DstProvinceId pulumi.StringInput `pulumi:"dstProvinceId"`
	// Specifies the destination province name.
	DstProvinceName pulumi.StringInput `pulumi:"dstProvinceName"`
	// The destination region ID.
	DstRegionId pulumi.StringInput `pulumi:"dstRegionId"`
	// Specifies the destination region name.
	DstRegionName pulumi.StringInput `pulumi:"dstRegionName"`
	// The hit time.
	HitTime pulumi.StringInput `pulumi:"hitTime"`
	// The document ID.
	LogId pulumi.StringInput `pulumi:"logId"`
	// The protocol type.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule ID.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// Specifies the rule name.
	RuleName pulumi.StringInput `pulumi:"ruleName"`
	// The source city ID.
	SrcCityId pulumi.StringInput `pulumi:"srcCityId"`
	// Specifies the source city name.
	SrcCityName pulumi.StringInput `pulumi:"srcCityName"`
	// Specifies the source IP address.
	SrcIp pulumi.StringInput `pulumi:"srcIp"`
	// Specifies the source port.
	SrcPort pulumi.IntInput `pulumi:"srcPort"`
	// The source province ID.
	SrcProvinceId pulumi.StringInput `pulumi:"srcProvinceId"`
	// Specifies the source province name.
	SrcProvinceName pulumi.StringInput `pulumi:"srcProvinceName"`
	// The source region ID.
	SrcRegionId pulumi.StringInput `pulumi:"srcRegionId"`
	// Specifies the source region name.
	SrcRegionName pulumi.StringInput `pulumi:"srcRegionName"`
}

func (GetAccessControlLogsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessControlLogsRecord)(nil)).Elem()
}

func (i GetAccessControlLogsRecordArgs) ToGetAccessControlLogsRecordOutput() GetAccessControlLogsRecordOutput {
	return i.ToGetAccessControlLogsRecordOutputWithContext(context.Background())
}

func (i GetAccessControlLogsRecordArgs) ToGetAccessControlLogsRecordOutputWithContext(ctx context.Context) GetAccessControlLogsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessControlLogsRecordOutput)
}

// GetAccessControlLogsRecordArrayInput is an input type that accepts GetAccessControlLogsRecordArray and GetAccessControlLogsRecordArrayOutput values.
// You can construct a concrete instance of `GetAccessControlLogsRecordArrayInput` via:
//
//	GetAccessControlLogsRecordArray{ GetAccessControlLogsRecordArgs{...} }
type GetAccessControlLogsRecordArrayInput interface {
	pulumi.Input

	ToGetAccessControlLogsRecordArrayOutput() GetAccessControlLogsRecordArrayOutput
	ToGetAccessControlLogsRecordArrayOutputWithContext(context.Context) GetAccessControlLogsRecordArrayOutput
}

type GetAccessControlLogsRecordArray []GetAccessControlLogsRecordInput

func (GetAccessControlLogsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessControlLogsRecord)(nil)).Elem()
}

func (i GetAccessControlLogsRecordArray) ToGetAccessControlLogsRecordArrayOutput() GetAccessControlLogsRecordArrayOutput {
	return i.ToGetAccessControlLogsRecordArrayOutputWithContext(context.Background())
}

func (i GetAccessControlLogsRecordArray) ToGetAccessControlLogsRecordArrayOutputWithContext(ctx context.Context) GetAccessControlLogsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessControlLogsRecordArrayOutput)
}

type GetAccessControlLogsRecordOutput struct{ *pulumi.OutputState }

func (GetAccessControlLogsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessControlLogsRecord)(nil)).Elem()
}

func (o GetAccessControlLogsRecordOutput) ToGetAccessControlLogsRecordOutput() GetAccessControlLogsRecordOutput {
	return o
}

func (o GetAccessControlLogsRecordOutput) ToGetAccessControlLogsRecordOutputWithContext(ctx context.Context) GetAccessControlLogsRecordOutput {
	return o
}

// Specifies the action. The values can be **allow** and **deny**.
func (o GetAccessControlLogsRecordOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies the application protocol.
func (o GetAccessControlLogsRecordOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.App }).(pulumi.StringOutput)
}

// The destination city ID.
func (o GetAccessControlLogsRecordOutput) DstCityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstCityId }).(pulumi.StringOutput)
}

// Specifies the destination city name.
func (o GetAccessControlLogsRecordOutput) DstCityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstCityName }).(pulumi.StringOutput)
}

// The destination host.
func (o GetAccessControlLogsRecordOutput) DstHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstHost }).(pulumi.StringOutput)
}

// Specifies the destination IP address.
func (o GetAccessControlLogsRecordOutput) DstIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstIp }).(pulumi.StringOutput)
}

// Specifies the destination port.
func (o GetAccessControlLogsRecordOutput) DstPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) int { return v.DstPort }).(pulumi.IntOutput)
}

// The destination province ID.
func (o GetAccessControlLogsRecordOutput) DstProvinceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstProvinceId }).(pulumi.StringOutput)
}

// Specifies the destination province name.
func (o GetAccessControlLogsRecordOutput) DstProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstProvinceName }).(pulumi.StringOutput)
}

// The destination region ID.
func (o GetAccessControlLogsRecordOutput) DstRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstRegionId }).(pulumi.StringOutput)
}

// Specifies the destination region name.
func (o GetAccessControlLogsRecordOutput) DstRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.DstRegionName }).(pulumi.StringOutput)
}

// The hit time.
func (o GetAccessControlLogsRecordOutput) HitTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.HitTime }).(pulumi.StringOutput)
}

// The document ID.
func (o GetAccessControlLogsRecordOutput) LogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.LogId }).(pulumi.StringOutput)
}

// The protocol type.
func (o GetAccessControlLogsRecordOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule ID.
func (o GetAccessControlLogsRecordOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.RuleId }).(pulumi.StringOutput)
}

// Specifies the rule name.
func (o GetAccessControlLogsRecordOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.RuleName }).(pulumi.StringOutput)
}

// The source city ID.
func (o GetAccessControlLogsRecordOutput) SrcCityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcCityId }).(pulumi.StringOutput)
}

// Specifies the source city name.
func (o GetAccessControlLogsRecordOutput) SrcCityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcCityName }).(pulumi.StringOutput)
}

// Specifies the source IP address.
func (o GetAccessControlLogsRecordOutput) SrcIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcIp }).(pulumi.StringOutput)
}

// Specifies the source port.
func (o GetAccessControlLogsRecordOutput) SrcPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) int { return v.SrcPort }).(pulumi.IntOutput)
}

// The source province ID.
func (o GetAccessControlLogsRecordOutput) SrcProvinceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcProvinceId }).(pulumi.StringOutput)
}

// Specifies the source province name.
func (o GetAccessControlLogsRecordOutput) SrcProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcProvinceName }).(pulumi.StringOutput)
}

// The source region ID.
func (o GetAccessControlLogsRecordOutput) SrcRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcRegionId }).(pulumi.StringOutput)
}

// Specifies the source region name.
func (o GetAccessControlLogsRecordOutput) SrcRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessControlLogsRecord) string { return v.SrcRegionName }).(pulumi.StringOutput)
}

type GetAccessControlLogsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetAccessControlLogsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessControlLogsRecord)(nil)).Elem()
}

func (o GetAccessControlLogsRecordArrayOutput) ToGetAccessControlLogsRecordArrayOutput() GetAccessControlLogsRecordArrayOutput {
	return o
}

func (o GetAccessControlLogsRecordArrayOutput) ToGetAccessControlLogsRecordArrayOutputWithContext(ctx context.Context) GetAccessControlLogsRecordArrayOutput {
	return o
}

func (o GetAccessControlLogsRecordArrayOutput) Index(i pulumi.IntInput) GetAccessControlLogsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessControlLogsRecord {
		return vs[0].([]GetAccessControlLogsRecord)[vs[1].(int)]
	}).(GetAccessControlLogsRecordOutput)
}

type GetAddressGroupMembersRecord struct {
	// Specifies the IP address
	Address string `pulumi:"address"`
	// The address type.
	AddressType int `pulumi:"addressType"`
	// The address group member description.
	Description string `pulumi:"description"`
	// Specifies the address group member ID.
	ItemId string `pulumi:"itemId"`
}

// GetAddressGroupMembersRecordInput is an input type that accepts GetAddressGroupMembersRecordArgs and GetAddressGroupMembersRecordOutput values.
// You can construct a concrete instance of `GetAddressGroupMembersRecordInput` via:
//
//	GetAddressGroupMembersRecordArgs{...}
type GetAddressGroupMembersRecordInput interface {
	pulumi.Input

	ToGetAddressGroupMembersRecordOutput() GetAddressGroupMembersRecordOutput
	ToGetAddressGroupMembersRecordOutputWithContext(context.Context) GetAddressGroupMembersRecordOutput
}

type GetAddressGroupMembersRecordArgs struct {
	// Specifies the IP address
	Address pulumi.StringInput `pulumi:"address"`
	// The address type.
	AddressType pulumi.IntInput `pulumi:"addressType"`
	// The address group member description.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the address group member ID.
	ItemId pulumi.StringInput `pulumi:"itemId"`
}

func (GetAddressGroupMembersRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressGroupMembersRecord)(nil)).Elem()
}

func (i GetAddressGroupMembersRecordArgs) ToGetAddressGroupMembersRecordOutput() GetAddressGroupMembersRecordOutput {
	return i.ToGetAddressGroupMembersRecordOutputWithContext(context.Background())
}

func (i GetAddressGroupMembersRecordArgs) ToGetAddressGroupMembersRecordOutputWithContext(ctx context.Context) GetAddressGroupMembersRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressGroupMembersRecordOutput)
}

// GetAddressGroupMembersRecordArrayInput is an input type that accepts GetAddressGroupMembersRecordArray and GetAddressGroupMembersRecordArrayOutput values.
// You can construct a concrete instance of `GetAddressGroupMembersRecordArrayInput` via:
//
//	GetAddressGroupMembersRecordArray{ GetAddressGroupMembersRecordArgs{...} }
type GetAddressGroupMembersRecordArrayInput interface {
	pulumi.Input

	ToGetAddressGroupMembersRecordArrayOutput() GetAddressGroupMembersRecordArrayOutput
	ToGetAddressGroupMembersRecordArrayOutputWithContext(context.Context) GetAddressGroupMembersRecordArrayOutput
}

type GetAddressGroupMembersRecordArray []GetAddressGroupMembersRecordInput

func (GetAddressGroupMembersRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressGroupMembersRecord)(nil)).Elem()
}

func (i GetAddressGroupMembersRecordArray) ToGetAddressGroupMembersRecordArrayOutput() GetAddressGroupMembersRecordArrayOutput {
	return i.ToGetAddressGroupMembersRecordArrayOutputWithContext(context.Background())
}

func (i GetAddressGroupMembersRecordArray) ToGetAddressGroupMembersRecordArrayOutputWithContext(ctx context.Context) GetAddressGroupMembersRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressGroupMembersRecordArrayOutput)
}

type GetAddressGroupMembersRecordOutput struct{ *pulumi.OutputState }

func (GetAddressGroupMembersRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressGroupMembersRecord)(nil)).Elem()
}

func (o GetAddressGroupMembersRecordOutput) ToGetAddressGroupMembersRecordOutput() GetAddressGroupMembersRecordOutput {
	return o
}

func (o GetAddressGroupMembersRecordOutput) ToGetAddressGroupMembersRecordOutputWithContext(ctx context.Context) GetAddressGroupMembersRecordOutput {
	return o
}

// Specifies the IP address
func (o GetAddressGroupMembersRecordOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupMembersRecord) string { return v.Address }).(pulumi.StringOutput)
}

// The address type.
func (o GetAddressGroupMembersRecordOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAddressGroupMembersRecord) int { return v.AddressType }).(pulumi.IntOutput)
}

// The address group member description.
func (o GetAddressGroupMembersRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupMembersRecord) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the address group member ID.
func (o GetAddressGroupMembersRecordOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupMembersRecord) string { return v.ItemId }).(pulumi.StringOutput)
}

type GetAddressGroupMembersRecordArrayOutput struct{ *pulumi.OutputState }

func (GetAddressGroupMembersRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressGroupMembersRecord)(nil)).Elem()
}

func (o GetAddressGroupMembersRecordArrayOutput) ToGetAddressGroupMembersRecordArrayOutput() GetAddressGroupMembersRecordArrayOutput {
	return o
}

func (o GetAddressGroupMembersRecordArrayOutput) ToGetAddressGroupMembersRecordArrayOutputWithContext(ctx context.Context) GetAddressGroupMembersRecordArrayOutput {
	return o
}

func (o GetAddressGroupMembersRecordArrayOutput) Index(i pulumi.IntInput) GetAddressGroupMembersRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressGroupMembersRecord {
		return vs[0].([]GetAddressGroupMembersRecord)[vs[1].(int)]
	}).(GetAddressGroupMembersRecordOutput)
}

type GetAddressGroupsAddressGroup struct {
	// Specifies the IP address type.
	// The value can be **0** (IPv4) or **1** (IPv6).
	AddressType int `pulumi:"addressType"`
	// The address groups description.
	Description string `pulumi:"description"`
	// The ID of the IP address group.
	Id string `pulumi:"id"`
	// Specifies the name of the address group.
	Name string `pulumi:"name"`
	// Specifies the protected object ID.
	ObjectId string `pulumi:"objectId"`
	// The number of times this address group has been referenced.
	RefCount int `pulumi:"refCount"`
	// The address group type.
	Type int `pulumi:"type"`
}

// GetAddressGroupsAddressGroupInput is an input type that accepts GetAddressGroupsAddressGroupArgs and GetAddressGroupsAddressGroupOutput values.
// You can construct a concrete instance of `GetAddressGroupsAddressGroupInput` via:
//
//	GetAddressGroupsAddressGroupArgs{...}
type GetAddressGroupsAddressGroupInput interface {
	pulumi.Input

	ToGetAddressGroupsAddressGroupOutput() GetAddressGroupsAddressGroupOutput
	ToGetAddressGroupsAddressGroupOutputWithContext(context.Context) GetAddressGroupsAddressGroupOutput
}

type GetAddressGroupsAddressGroupArgs struct {
	// Specifies the IP address type.
	// The value can be **0** (IPv4) or **1** (IPv6).
	AddressType pulumi.IntInput `pulumi:"addressType"`
	// The address groups description.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the IP address group.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the address group.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the protected object ID.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The number of times this address group has been referenced.
	RefCount pulumi.IntInput `pulumi:"refCount"`
	// The address group type.
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetAddressGroupsAddressGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressGroupsAddressGroup)(nil)).Elem()
}

func (i GetAddressGroupsAddressGroupArgs) ToGetAddressGroupsAddressGroupOutput() GetAddressGroupsAddressGroupOutput {
	return i.ToGetAddressGroupsAddressGroupOutputWithContext(context.Background())
}

func (i GetAddressGroupsAddressGroupArgs) ToGetAddressGroupsAddressGroupOutputWithContext(ctx context.Context) GetAddressGroupsAddressGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressGroupsAddressGroupOutput)
}

// GetAddressGroupsAddressGroupArrayInput is an input type that accepts GetAddressGroupsAddressGroupArray and GetAddressGroupsAddressGroupArrayOutput values.
// You can construct a concrete instance of `GetAddressGroupsAddressGroupArrayInput` via:
//
//	GetAddressGroupsAddressGroupArray{ GetAddressGroupsAddressGroupArgs{...} }
type GetAddressGroupsAddressGroupArrayInput interface {
	pulumi.Input

	ToGetAddressGroupsAddressGroupArrayOutput() GetAddressGroupsAddressGroupArrayOutput
	ToGetAddressGroupsAddressGroupArrayOutputWithContext(context.Context) GetAddressGroupsAddressGroupArrayOutput
}

type GetAddressGroupsAddressGroupArray []GetAddressGroupsAddressGroupInput

func (GetAddressGroupsAddressGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressGroupsAddressGroup)(nil)).Elem()
}

func (i GetAddressGroupsAddressGroupArray) ToGetAddressGroupsAddressGroupArrayOutput() GetAddressGroupsAddressGroupArrayOutput {
	return i.ToGetAddressGroupsAddressGroupArrayOutputWithContext(context.Background())
}

func (i GetAddressGroupsAddressGroupArray) ToGetAddressGroupsAddressGroupArrayOutputWithContext(ctx context.Context) GetAddressGroupsAddressGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAddressGroupsAddressGroupArrayOutput)
}

type GetAddressGroupsAddressGroupOutput struct{ *pulumi.OutputState }

func (GetAddressGroupsAddressGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddressGroupsAddressGroup)(nil)).Elem()
}

func (o GetAddressGroupsAddressGroupOutput) ToGetAddressGroupsAddressGroupOutput() GetAddressGroupsAddressGroupOutput {
	return o
}

func (o GetAddressGroupsAddressGroupOutput) ToGetAddressGroupsAddressGroupOutputWithContext(ctx context.Context) GetAddressGroupsAddressGroupOutput {
	return o
}

// Specifies the IP address type.
// The value can be **0** (IPv4) or **1** (IPv6).
func (o GetAddressGroupsAddressGroupOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) int { return v.AddressType }).(pulumi.IntOutput)
}

// The address groups description.
func (o GetAddressGroupsAddressGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the IP address group.
func (o GetAddressGroupsAddressGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the address group.
func (o GetAddressGroupsAddressGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the protected object ID.
func (o GetAddressGroupsAddressGroupOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The number of times this address group has been referenced.
func (o GetAddressGroupsAddressGroupOutput) RefCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) int { return v.RefCount }).(pulumi.IntOutput)
}

// The address group type.
func (o GetAddressGroupsAddressGroupOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetAddressGroupsAddressGroup) int { return v.Type }).(pulumi.IntOutput)
}

type GetAddressGroupsAddressGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAddressGroupsAddressGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAddressGroupsAddressGroup)(nil)).Elem()
}

func (o GetAddressGroupsAddressGroupArrayOutput) ToGetAddressGroupsAddressGroupArrayOutput() GetAddressGroupsAddressGroupArrayOutput {
	return o
}

func (o GetAddressGroupsAddressGroupArrayOutput) ToGetAddressGroupsAddressGroupArrayOutputWithContext(ctx context.Context) GetAddressGroupsAddressGroupArrayOutput {
	return o
}

func (o GetAddressGroupsAddressGroupArrayOutput) Index(i pulumi.IntInput) GetAddressGroupsAddressGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAddressGroupsAddressGroup {
		return vs[0].([]GetAddressGroupsAddressGroup)[vs[1].(int)]
	}).(GetAddressGroupsAddressGroupOutput)
}

type GetAttackLogsRecord struct {
	// The action.
	Action string `pulumi:"action"`
	// Specifies the application protocol.
	App string `pulumi:"app"`
	// Specifies the intrusion event rule.
	AttackRule string `pulumi:"attackRule"`
	// Specifies the attack rule ID.
	AttackRuleId string `pulumi:"attackRuleId"`
	// Specifies the intrusion event type.
	AttackType string `pulumi:"attackType"`
	// The direction.
	Direction string `pulumi:"direction"`
	// The destination city ID.
	DstCityId string `pulumi:"dstCityId"`
	// Specifies the destination city name.
	DstCityName string `pulumi:"dstCityName"`
	// Specifies the destination IP address.
	DstIp string `pulumi:"dstIp"`
	// Specifies the destination port.
	DstPort int `pulumi:"dstPort"`
	// The destination province ID.
	DstProvinceId string `pulumi:"dstProvinceId"`
	// Specifies the destination province name.
	DstProvinceName string `pulumi:"dstProvinceName"`
	// The destination region ID.
	DstRegionId string `pulumi:"dstRegionId"`
	// Specifies the destination region name.
	DstRegionName string `pulumi:"dstRegionName"`
	// The event time.
	EventTime string `pulumi:"eventTime"`
	// Specifies the threat level.
	Level string `pulumi:"level"`
	// The log ID.
	LogId string `pulumi:"logId"`
	// The attack log packet.
	Packet string `pulumi:"packet"`
	// The packet length.
	PacketLength int `pulumi:"packetLength"`
	// The packet messages.
	PacketMessages []GetAttackLogsRecordPacketMessage `pulumi:"packetMessages"`
	// The protocol.
	Protocol string `pulumi:"protocol"`
	// The source.
	Source string `pulumi:"source"`
	// The source city ID.
	SrcCityId string `pulumi:"srcCityId"`
	// Specifies the source city name.
	SrcCityName string `pulumi:"srcCityName"`
	// Specifies the source IP address.
	SrcIp string `pulumi:"srcIp"`
	// Specifies the source port.
	SrcPort int `pulumi:"srcPort"`
	// The source province ID.
	SrcProvinceId string `pulumi:"srcProvinceId"`
	// Specifies the source province name.
	SrcProvinceName string `pulumi:"srcProvinceName"`
	// The source region ID.
	SrcRegionId string `pulumi:"srcRegionId"`
	// Specifies the source region name.
	SrcRegionName string `pulumi:"srcRegionName"`
}

// GetAttackLogsRecordInput is an input type that accepts GetAttackLogsRecordArgs and GetAttackLogsRecordOutput values.
// You can construct a concrete instance of `GetAttackLogsRecordInput` via:
//
//	GetAttackLogsRecordArgs{...}
type GetAttackLogsRecordInput interface {
	pulumi.Input

	ToGetAttackLogsRecordOutput() GetAttackLogsRecordOutput
	ToGetAttackLogsRecordOutputWithContext(context.Context) GetAttackLogsRecordOutput
}

type GetAttackLogsRecordArgs struct {
	// The action.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies the application protocol.
	App pulumi.StringInput `pulumi:"app"`
	// Specifies the intrusion event rule.
	AttackRule pulumi.StringInput `pulumi:"attackRule"`
	// Specifies the attack rule ID.
	AttackRuleId pulumi.StringInput `pulumi:"attackRuleId"`
	// Specifies the intrusion event type.
	AttackType pulumi.StringInput `pulumi:"attackType"`
	// The direction.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The destination city ID.
	DstCityId pulumi.StringInput `pulumi:"dstCityId"`
	// Specifies the destination city name.
	DstCityName pulumi.StringInput `pulumi:"dstCityName"`
	// Specifies the destination IP address.
	DstIp pulumi.StringInput `pulumi:"dstIp"`
	// Specifies the destination port.
	DstPort pulumi.IntInput `pulumi:"dstPort"`
	// The destination province ID.
	DstProvinceId pulumi.StringInput `pulumi:"dstProvinceId"`
	// Specifies the destination province name.
	DstProvinceName pulumi.StringInput `pulumi:"dstProvinceName"`
	// The destination region ID.
	DstRegionId pulumi.StringInput `pulumi:"dstRegionId"`
	// Specifies the destination region name.
	DstRegionName pulumi.StringInput `pulumi:"dstRegionName"`
	// The event time.
	EventTime pulumi.StringInput `pulumi:"eventTime"`
	// Specifies the threat level.
	Level pulumi.StringInput `pulumi:"level"`
	// The log ID.
	LogId pulumi.StringInput `pulumi:"logId"`
	// The attack log packet.
	Packet pulumi.StringInput `pulumi:"packet"`
	// The packet length.
	PacketLength pulumi.IntInput `pulumi:"packetLength"`
	// The packet messages.
	PacketMessages GetAttackLogsRecordPacketMessageArrayInput `pulumi:"packetMessages"`
	// The protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source.
	Source pulumi.StringInput `pulumi:"source"`
	// The source city ID.
	SrcCityId pulumi.StringInput `pulumi:"srcCityId"`
	// Specifies the source city name.
	SrcCityName pulumi.StringInput `pulumi:"srcCityName"`
	// Specifies the source IP address.
	SrcIp pulumi.StringInput `pulumi:"srcIp"`
	// Specifies the source port.
	SrcPort pulumi.IntInput `pulumi:"srcPort"`
	// The source province ID.
	SrcProvinceId pulumi.StringInput `pulumi:"srcProvinceId"`
	// Specifies the source province name.
	SrcProvinceName pulumi.StringInput `pulumi:"srcProvinceName"`
	// The source region ID.
	SrcRegionId pulumi.StringInput `pulumi:"srcRegionId"`
	// Specifies the source region name.
	SrcRegionName pulumi.StringInput `pulumi:"srcRegionName"`
}

func (GetAttackLogsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogsRecord)(nil)).Elem()
}

func (i GetAttackLogsRecordArgs) ToGetAttackLogsRecordOutput() GetAttackLogsRecordOutput {
	return i.ToGetAttackLogsRecordOutputWithContext(context.Background())
}

func (i GetAttackLogsRecordArgs) ToGetAttackLogsRecordOutputWithContext(ctx context.Context) GetAttackLogsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogsRecordOutput)
}

// GetAttackLogsRecordArrayInput is an input type that accepts GetAttackLogsRecordArray and GetAttackLogsRecordArrayOutput values.
// You can construct a concrete instance of `GetAttackLogsRecordArrayInput` via:
//
//	GetAttackLogsRecordArray{ GetAttackLogsRecordArgs{...} }
type GetAttackLogsRecordArrayInput interface {
	pulumi.Input

	ToGetAttackLogsRecordArrayOutput() GetAttackLogsRecordArrayOutput
	ToGetAttackLogsRecordArrayOutputWithContext(context.Context) GetAttackLogsRecordArrayOutput
}

type GetAttackLogsRecordArray []GetAttackLogsRecordInput

func (GetAttackLogsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogsRecord)(nil)).Elem()
}

func (i GetAttackLogsRecordArray) ToGetAttackLogsRecordArrayOutput() GetAttackLogsRecordArrayOutput {
	return i.ToGetAttackLogsRecordArrayOutputWithContext(context.Background())
}

func (i GetAttackLogsRecordArray) ToGetAttackLogsRecordArrayOutputWithContext(ctx context.Context) GetAttackLogsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogsRecordArrayOutput)
}

type GetAttackLogsRecordOutput struct{ *pulumi.OutputState }

func (GetAttackLogsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogsRecord)(nil)).Elem()
}

func (o GetAttackLogsRecordOutput) ToGetAttackLogsRecordOutput() GetAttackLogsRecordOutput {
	return o
}

func (o GetAttackLogsRecordOutput) ToGetAttackLogsRecordOutputWithContext(ctx context.Context) GetAttackLogsRecordOutput {
	return o
}

// The action.
func (o GetAttackLogsRecordOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies the application protocol.
func (o GetAttackLogsRecordOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.App }).(pulumi.StringOutput)
}

// Specifies the intrusion event rule.
func (o GetAttackLogsRecordOutput) AttackRule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.AttackRule }).(pulumi.StringOutput)
}

// Specifies the attack rule ID.
func (o GetAttackLogsRecordOutput) AttackRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.AttackRuleId }).(pulumi.StringOutput)
}

// Specifies the intrusion event type.
func (o GetAttackLogsRecordOutput) AttackType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.AttackType }).(pulumi.StringOutput)
}

// The direction.
func (o GetAttackLogsRecordOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.Direction }).(pulumi.StringOutput)
}

// The destination city ID.
func (o GetAttackLogsRecordOutput) DstCityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstCityId }).(pulumi.StringOutput)
}

// Specifies the destination city name.
func (o GetAttackLogsRecordOutput) DstCityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstCityName }).(pulumi.StringOutput)
}

// Specifies the destination IP address.
func (o GetAttackLogsRecordOutput) DstIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstIp }).(pulumi.StringOutput)
}

// Specifies the destination port.
func (o GetAttackLogsRecordOutput) DstPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) int { return v.DstPort }).(pulumi.IntOutput)
}

// The destination province ID.
func (o GetAttackLogsRecordOutput) DstProvinceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstProvinceId }).(pulumi.StringOutput)
}

// Specifies the destination province name.
func (o GetAttackLogsRecordOutput) DstProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstProvinceName }).(pulumi.StringOutput)
}

// The destination region ID.
func (o GetAttackLogsRecordOutput) DstRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstRegionId }).(pulumi.StringOutput)
}

// Specifies the destination region name.
func (o GetAttackLogsRecordOutput) DstRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.DstRegionName }).(pulumi.StringOutput)
}

// The event time.
func (o GetAttackLogsRecordOutput) EventTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.EventTime }).(pulumi.StringOutput)
}

// Specifies the threat level.
func (o GetAttackLogsRecordOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.Level }).(pulumi.StringOutput)
}

// The log ID.
func (o GetAttackLogsRecordOutput) LogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.LogId }).(pulumi.StringOutput)
}

// The attack log packet.
func (o GetAttackLogsRecordOutput) Packet() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.Packet }).(pulumi.StringOutput)
}

// The packet length.
func (o GetAttackLogsRecordOutput) PacketLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) int { return v.PacketLength }).(pulumi.IntOutput)
}

// The packet messages.
func (o GetAttackLogsRecordOutput) PacketMessages() GetAttackLogsRecordPacketMessageArrayOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) []GetAttackLogsRecordPacketMessage { return v.PacketMessages }).(GetAttackLogsRecordPacketMessageArrayOutput)
}

// The protocol.
func (o GetAttackLogsRecordOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source.
func (o GetAttackLogsRecordOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.Source }).(pulumi.StringOutput)
}

// The source city ID.
func (o GetAttackLogsRecordOutput) SrcCityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcCityId }).(pulumi.StringOutput)
}

// Specifies the source city name.
func (o GetAttackLogsRecordOutput) SrcCityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcCityName }).(pulumi.StringOutput)
}

// Specifies the source IP address.
func (o GetAttackLogsRecordOutput) SrcIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcIp }).(pulumi.StringOutput)
}

// Specifies the source port.
func (o GetAttackLogsRecordOutput) SrcPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) int { return v.SrcPort }).(pulumi.IntOutput)
}

// The source province ID.
func (o GetAttackLogsRecordOutput) SrcProvinceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcProvinceId }).(pulumi.StringOutput)
}

// Specifies the source province name.
func (o GetAttackLogsRecordOutput) SrcProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcProvinceName }).(pulumi.StringOutput)
}

// The source region ID.
func (o GetAttackLogsRecordOutput) SrcRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcRegionId }).(pulumi.StringOutput)
}

// Specifies the source region name.
func (o GetAttackLogsRecordOutput) SrcRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecord) string { return v.SrcRegionName }).(pulumi.StringOutput)
}

type GetAttackLogsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetAttackLogsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogsRecord)(nil)).Elem()
}

func (o GetAttackLogsRecordArrayOutput) ToGetAttackLogsRecordArrayOutput() GetAttackLogsRecordArrayOutput {
	return o
}

func (o GetAttackLogsRecordArrayOutput) ToGetAttackLogsRecordArrayOutputWithContext(ctx context.Context) GetAttackLogsRecordArrayOutput {
	return o
}

func (o GetAttackLogsRecordArrayOutput) Index(i pulumi.IntInput) GetAttackLogsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackLogsRecord {
		return vs[0].([]GetAttackLogsRecord)[vs[1].(int)]
	}).(GetAttackLogsRecordOutput)
}

type GetAttackLogsRecordPacketMessage struct {
	// The hexadecimal index.
	HexIndex string `pulumi:"hexIndex"`
	// The hexadecimal series.
	Hexs []string `pulumi:"hexs"`
	// The utf-8 string.
	Utf8String string `pulumi:"utf8String"`
}

// GetAttackLogsRecordPacketMessageInput is an input type that accepts GetAttackLogsRecordPacketMessageArgs and GetAttackLogsRecordPacketMessageOutput values.
// You can construct a concrete instance of `GetAttackLogsRecordPacketMessageInput` via:
//
//	GetAttackLogsRecordPacketMessageArgs{...}
type GetAttackLogsRecordPacketMessageInput interface {
	pulumi.Input

	ToGetAttackLogsRecordPacketMessageOutput() GetAttackLogsRecordPacketMessageOutput
	ToGetAttackLogsRecordPacketMessageOutputWithContext(context.Context) GetAttackLogsRecordPacketMessageOutput
}

type GetAttackLogsRecordPacketMessageArgs struct {
	// The hexadecimal index.
	HexIndex pulumi.StringInput `pulumi:"hexIndex"`
	// The hexadecimal series.
	Hexs pulumi.StringArrayInput `pulumi:"hexs"`
	// The utf-8 string.
	Utf8String pulumi.StringInput `pulumi:"utf8String"`
}

func (GetAttackLogsRecordPacketMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogsRecordPacketMessage)(nil)).Elem()
}

func (i GetAttackLogsRecordPacketMessageArgs) ToGetAttackLogsRecordPacketMessageOutput() GetAttackLogsRecordPacketMessageOutput {
	return i.ToGetAttackLogsRecordPacketMessageOutputWithContext(context.Background())
}

func (i GetAttackLogsRecordPacketMessageArgs) ToGetAttackLogsRecordPacketMessageOutputWithContext(ctx context.Context) GetAttackLogsRecordPacketMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogsRecordPacketMessageOutput)
}

// GetAttackLogsRecordPacketMessageArrayInput is an input type that accepts GetAttackLogsRecordPacketMessageArray and GetAttackLogsRecordPacketMessageArrayOutput values.
// You can construct a concrete instance of `GetAttackLogsRecordPacketMessageArrayInput` via:
//
//	GetAttackLogsRecordPacketMessageArray{ GetAttackLogsRecordPacketMessageArgs{...} }
type GetAttackLogsRecordPacketMessageArrayInput interface {
	pulumi.Input

	ToGetAttackLogsRecordPacketMessageArrayOutput() GetAttackLogsRecordPacketMessageArrayOutput
	ToGetAttackLogsRecordPacketMessageArrayOutputWithContext(context.Context) GetAttackLogsRecordPacketMessageArrayOutput
}

type GetAttackLogsRecordPacketMessageArray []GetAttackLogsRecordPacketMessageInput

func (GetAttackLogsRecordPacketMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogsRecordPacketMessage)(nil)).Elem()
}

func (i GetAttackLogsRecordPacketMessageArray) ToGetAttackLogsRecordPacketMessageArrayOutput() GetAttackLogsRecordPacketMessageArrayOutput {
	return i.ToGetAttackLogsRecordPacketMessageArrayOutputWithContext(context.Background())
}

func (i GetAttackLogsRecordPacketMessageArray) ToGetAttackLogsRecordPacketMessageArrayOutputWithContext(ctx context.Context) GetAttackLogsRecordPacketMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogsRecordPacketMessageArrayOutput)
}

type GetAttackLogsRecordPacketMessageOutput struct{ *pulumi.OutputState }

func (GetAttackLogsRecordPacketMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogsRecordPacketMessage)(nil)).Elem()
}

func (o GetAttackLogsRecordPacketMessageOutput) ToGetAttackLogsRecordPacketMessageOutput() GetAttackLogsRecordPacketMessageOutput {
	return o
}

func (o GetAttackLogsRecordPacketMessageOutput) ToGetAttackLogsRecordPacketMessageOutputWithContext(ctx context.Context) GetAttackLogsRecordPacketMessageOutput {
	return o
}

// The hexadecimal index.
func (o GetAttackLogsRecordPacketMessageOutput) HexIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecordPacketMessage) string { return v.HexIndex }).(pulumi.StringOutput)
}

// The hexadecimal series.
func (o GetAttackLogsRecordPacketMessageOutput) Hexs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackLogsRecordPacketMessage) []string { return v.Hexs }).(pulumi.StringArrayOutput)
}

// The utf-8 string.
func (o GetAttackLogsRecordPacketMessageOutput) Utf8String() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogsRecordPacketMessage) string { return v.Utf8String }).(pulumi.StringOutput)
}

type GetAttackLogsRecordPacketMessageArrayOutput struct{ *pulumi.OutputState }

func (GetAttackLogsRecordPacketMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogsRecordPacketMessage)(nil)).Elem()
}

func (o GetAttackLogsRecordPacketMessageArrayOutput) ToGetAttackLogsRecordPacketMessageArrayOutput() GetAttackLogsRecordPacketMessageArrayOutput {
	return o
}

func (o GetAttackLogsRecordPacketMessageArrayOutput) ToGetAttackLogsRecordPacketMessageArrayOutputWithContext(ctx context.Context) GetAttackLogsRecordPacketMessageArrayOutput {
	return o
}

func (o GetAttackLogsRecordPacketMessageArrayOutput) Index(i pulumi.IntInput) GetAttackLogsRecordPacketMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackLogsRecordPacketMessage {
		return vs[0].([]GetAttackLogsRecordPacketMessage)[vs[1].(int)]
	}).(GetAttackLogsRecordPacketMessageOutput)
}

type GetBlackWhiteListsRecord struct {
	// Specifies the IP address.
	Address string `pulumi:"address"`
	// Specifies the IP address type.
	// The valid value can be **0** (IPv4).
	AddressType string `pulumi:"addressType"`
	// Specifies the description.
	Description string `pulumi:"description"`
	// Specifies the direction of a black or white address.
	// The options are as follows:
	// + **0**: source address;
	// + **1**: destination address;
	Direction string `pulumi:"direction"`
	// Specifies the blacklist/whitelist ID.
	ListId string `pulumi:"listId"`
	// Specifies the port.
	Port string `pulumi:"port"`
	// Specifies The protocol type.
	// The options are as follows:
	// + **6**: TCP;
	// + **17**: UDP;
	// + **1**: ICMP;
	// + **-1**: any protocol;
	Protocol int `pulumi:"protocol"`
}

// GetBlackWhiteListsRecordInput is an input type that accepts GetBlackWhiteListsRecordArgs and GetBlackWhiteListsRecordOutput values.
// You can construct a concrete instance of `GetBlackWhiteListsRecordInput` via:
//
//	GetBlackWhiteListsRecordArgs{...}
type GetBlackWhiteListsRecordInput interface {
	pulumi.Input

	ToGetBlackWhiteListsRecordOutput() GetBlackWhiteListsRecordOutput
	ToGetBlackWhiteListsRecordOutputWithContext(context.Context) GetBlackWhiteListsRecordOutput
}

type GetBlackWhiteListsRecordArgs struct {
	// Specifies the IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the IP address type.
	// The valid value can be **0** (IPv4).
	AddressType pulumi.StringInput `pulumi:"addressType"`
	// Specifies the description.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the direction of a black or white address.
	// The options are as follows:
	// + **0**: source address;
	// + **1**: destination address;
	Direction pulumi.StringInput `pulumi:"direction"`
	// Specifies the blacklist/whitelist ID.
	ListId pulumi.StringInput `pulumi:"listId"`
	// Specifies the port.
	Port pulumi.StringInput `pulumi:"port"`
	// Specifies The protocol type.
	// The options are as follows:
	// + **6**: TCP;
	// + **17**: UDP;
	// + **1**: ICMP;
	// + **-1**: any protocol;
	Protocol pulumi.IntInput `pulumi:"protocol"`
}

func (GetBlackWhiteListsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlackWhiteListsRecord)(nil)).Elem()
}

func (i GetBlackWhiteListsRecordArgs) ToGetBlackWhiteListsRecordOutput() GetBlackWhiteListsRecordOutput {
	return i.ToGetBlackWhiteListsRecordOutputWithContext(context.Background())
}

func (i GetBlackWhiteListsRecordArgs) ToGetBlackWhiteListsRecordOutputWithContext(ctx context.Context) GetBlackWhiteListsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlackWhiteListsRecordOutput)
}

// GetBlackWhiteListsRecordArrayInput is an input type that accepts GetBlackWhiteListsRecordArray and GetBlackWhiteListsRecordArrayOutput values.
// You can construct a concrete instance of `GetBlackWhiteListsRecordArrayInput` via:
//
//	GetBlackWhiteListsRecordArray{ GetBlackWhiteListsRecordArgs{...} }
type GetBlackWhiteListsRecordArrayInput interface {
	pulumi.Input

	ToGetBlackWhiteListsRecordArrayOutput() GetBlackWhiteListsRecordArrayOutput
	ToGetBlackWhiteListsRecordArrayOutputWithContext(context.Context) GetBlackWhiteListsRecordArrayOutput
}

type GetBlackWhiteListsRecordArray []GetBlackWhiteListsRecordInput

func (GetBlackWhiteListsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlackWhiteListsRecord)(nil)).Elem()
}

func (i GetBlackWhiteListsRecordArray) ToGetBlackWhiteListsRecordArrayOutput() GetBlackWhiteListsRecordArrayOutput {
	return i.ToGetBlackWhiteListsRecordArrayOutputWithContext(context.Background())
}

func (i GetBlackWhiteListsRecordArray) ToGetBlackWhiteListsRecordArrayOutputWithContext(ctx context.Context) GetBlackWhiteListsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBlackWhiteListsRecordArrayOutput)
}

type GetBlackWhiteListsRecordOutput struct{ *pulumi.OutputState }

func (GetBlackWhiteListsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBlackWhiteListsRecord)(nil)).Elem()
}

func (o GetBlackWhiteListsRecordOutput) ToGetBlackWhiteListsRecordOutput() GetBlackWhiteListsRecordOutput {
	return o
}

func (o GetBlackWhiteListsRecordOutput) ToGetBlackWhiteListsRecordOutputWithContext(ctx context.Context) GetBlackWhiteListsRecordOutput {
	return o
}

// Specifies the IP address.
func (o GetBlackWhiteListsRecordOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the IP address type.
// The valid value can be **0** (IPv4).
func (o GetBlackWhiteListsRecordOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) string { return v.AddressType }).(pulumi.StringOutput)
}

// Specifies the description.
func (o GetBlackWhiteListsRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the direction of a black or white address.
// The options are as follows:
// + **0**: source address;
// + **1**: destination address;
func (o GetBlackWhiteListsRecordOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) string { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the blacklist/whitelist ID.
func (o GetBlackWhiteListsRecordOutput) ListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) string { return v.ListId }).(pulumi.StringOutput)
}

// Specifies the port.
func (o GetBlackWhiteListsRecordOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) string { return v.Port }).(pulumi.StringOutput)
}

// Specifies The protocol type.
// The options are as follows:
// + **6**: TCP;
// + **17**: UDP;
// + **1**: ICMP;
// + **-1**: any protocol;
func (o GetBlackWhiteListsRecordOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetBlackWhiteListsRecord) int { return v.Protocol }).(pulumi.IntOutput)
}

type GetBlackWhiteListsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetBlackWhiteListsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBlackWhiteListsRecord)(nil)).Elem()
}

func (o GetBlackWhiteListsRecordArrayOutput) ToGetBlackWhiteListsRecordArrayOutput() GetBlackWhiteListsRecordArrayOutput {
	return o
}

func (o GetBlackWhiteListsRecordArrayOutput) ToGetBlackWhiteListsRecordArrayOutputWithContext(ctx context.Context) GetBlackWhiteListsRecordArrayOutput {
	return o
}

func (o GetBlackWhiteListsRecordArrayOutput) Index(i pulumi.IntInput) GetBlackWhiteListsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBlackWhiteListsRecord {
		return vs[0].([]GetBlackWhiteListsRecord)[vs[1].(int)]
	}).(GetBlackWhiteListsRecordOutput)
}

type GetCaptureTaskResultsFileList struct {
	// The file name.
	FileName string `pulumi:"fileName"`
	// The file path.
	FilePath string `pulumi:"filePath"`
	// The download link.
	Url string `pulumi:"url"`
}

// GetCaptureTaskResultsFileListInput is an input type that accepts GetCaptureTaskResultsFileListArgs and GetCaptureTaskResultsFileListOutput values.
// You can construct a concrete instance of `GetCaptureTaskResultsFileListInput` via:
//
//	GetCaptureTaskResultsFileListArgs{...}
type GetCaptureTaskResultsFileListInput interface {
	pulumi.Input

	ToGetCaptureTaskResultsFileListOutput() GetCaptureTaskResultsFileListOutput
	ToGetCaptureTaskResultsFileListOutputWithContext(context.Context) GetCaptureTaskResultsFileListOutput
}

type GetCaptureTaskResultsFileListArgs struct {
	// The file name.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// The file path.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// The download link.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetCaptureTaskResultsFileListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTaskResultsFileList)(nil)).Elem()
}

func (i GetCaptureTaskResultsFileListArgs) ToGetCaptureTaskResultsFileListOutput() GetCaptureTaskResultsFileListOutput {
	return i.ToGetCaptureTaskResultsFileListOutputWithContext(context.Background())
}

func (i GetCaptureTaskResultsFileListArgs) ToGetCaptureTaskResultsFileListOutputWithContext(ctx context.Context) GetCaptureTaskResultsFileListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaptureTaskResultsFileListOutput)
}

// GetCaptureTaskResultsFileListArrayInput is an input type that accepts GetCaptureTaskResultsFileListArray and GetCaptureTaskResultsFileListArrayOutput values.
// You can construct a concrete instance of `GetCaptureTaskResultsFileListArrayInput` via:
//
//	GetCaptureTaskResultsFileListArray{ GetCaptureTaskResultsFileListArgs{...} }
type GetCaptureTaskResultsFileListArrayInput interface {
	pulumi.Input

	ToGetCaptureTaskResultsFileListArrayOutput() GetCaptureTaskResultsFileListArrayOutput
	ToGetCaptureTaskResultsFileListArrayOutputWithContext(context.Context) GetCaptureTaskResultsFileListArrayOutput
}

type GetCaptureTaskResultsFileListArray []GetCaptureTaskResultsFileListInput

func (GetCaptureTaskResultsFileListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaptureTaskResultsFileList)(nil)).Elem()
}

func (i GetCaptureTaskResultsFileListArray) ToGetCaptureTaskResultsFileListArrayOutput() GetCaptureTaskResultsFileListArrayOutput {
	return i.ToGetCaptureTaskResultsFileListArrayOutputWithContext(context.Background())
}

func (i GetCaptureTaskResultsFileListArray) ToGetCaptureTaskResultsFileListArrayOutputWithContext(ctx context.Context) GetCaptureTaskResultsFileListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaptureTaskResultsFileListArrayOutput)
}

type GetCaptureTaskResultsFileListOutput struct{ *pulumi.OutputState }

func (GetCaptureTaskResultsFileListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTaskResultsFileList)(nil)).Elem()
}

func (o GetCaptureTaskResultsFileListOutput) ToGetCaptureTaskResultsFileListOutput() GetCaptureTaskResultsFileListOutput {
	return o
}

func (o GetCaptureTaskResultsFileListOutput) ToGetCaptureTaskResultsFileListOutputWithContext(ctx context.Context) GetCaptureTaskResultsFileListOutput {
	return o
}

// The file name.
func (o GetCaptureTaskResultsFileListOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsFileList) string { return v.FileName }).(pulumi.StringOutput)
}

// The file path.
func (o GetCaptureTaskResultsFileListOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsFileList) string { return v.FilePath }).(pulumi.StringOutput)
}

// The download link.
func (o GetCaptureTaskResultsFileListOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsFileList) string { return v.Url }).(pulumi.StringOutput)
}

type GetCaptureTaskResultsFileListArrayOutput struct{ *pulumi.OutputState }

func (GetCaptureTaskResultsFileListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaptureTaskResultsFileList)(nil)).Elem()
}

func (o GetCaptureTaskResultsFileListArrayOutput) ToGetCaptureTaskResultsFileListArrayOutput() GetCaptureTaskResultsFileListArrayOutput {
	return o
}

func (o GetCaptureTaskResultsFileListArrayOutput) ToGetCaptureTaskResultsFileListArrayOutputWithContext(ctx context.Context) GetCaptureTaskResultsFileListArrayOutput {
	return o
}

func (o GetCaptureTaskResultsFileListArrayOutput) Index(i pulumi.IntInput) GetCaptureTaskResultsFileListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaptureTaskResultsFileList {
		return vs[0].([]GetCaptureTaskResultsFileList)[vs[1].(int)]
	}).(GetCaptureTaskResultsFileListOutput)
}

type GetCaptureTaskResultsRequestHeader struct {
	// The host header information.
	Host string `pulumi:"host"`
}

// GetCaptureTaskResultsRequestHeaderInput is an input type that accepts GetCaptureTaskResultsRequestHeaderArgs and GetCaptureTaskResultsRequestHeaderOutput values.
// You can construct a concrete instance of `GetCaptureTaskResultsRequestHeaderInput` via:
//
//	GetCaptureTaskResultsRequestHeaderArgs{...}
type GetCaptureTaskResultsRequestHeaderInput interface {
	pulumi.Input

	ToGetCaptureTaskResultsRequestHeaderOutput() GetCaptureTaskResultsRequestHeaderOutput
	ToGetCaptureTaskResultsRequestHeaderOutputWithContext(context.Context) GetCaptureTaskResultsRequestHeaderOutput
}

type GetCaptureTaskResultsRequestHeaderArgs struct {
	// The host header information.
	Host pulumi.StringInput `pulumi:"host"`
}

func (GetCaptureTaskResultsRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTaskResultsRequestHeader)(nil)).Elem()
}

func (i GetCaptureTaskResultsRequestHeaderArgs) ToGetCaptureTaskResultsRequestHeaderOutput() GetCaptureTaskResultsRequestHeaderOutput {
	return i.ToGetCaptureTaskResultsRequestHeaderOutputWithContext(context.Background())
}

func (i GetCaptureTaskResultsRequestHeaderArgs) ToGetCaptureTaskResultsRequestHeaderOutputWithContext(ctx context.Context) GetCaptureTaskResultsRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaptureTaskResultsRequestHeaderOutput)
}

// GetCaptureTaskResultsRequestHeaderArrayInput is an input type that accepts GetCaptureTaskResultsRequestHeaderArray and GetCaptureTaskResultsRequestHeaderArrayOutput values.
// You can construct a concrete instance of `GetCaptureTaskResultsRequestHeaderArrayInput` via:
//
//	GetCaptureTaskResultsRequestHeaderArray{ GetCaptureTaskResultsRequestHeaderArgs{...} }
type GetCaptureTaskResultsRequestHeaderArrayInput interface {
	pulumi.Input

	ToGetCaptureTaskResultsRequestHeaderArrayOutput() GetCaptureTaskResultsRequestHeaderArrayOutput
	ToGetCaptureTaskResultsRequestHeaderArrayOutputWithContext(context.Context) GetCaptureTaskResultsRequestHeaderArrayOutput
}

type GetCaptureTaskResultsRequestHeaderArray []GetCaptureTaskResultsRequestHeaderInput

func (GetCaptureTaskResultsRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaptureTaskResultsRequestHeader)(nil)).Elem()
}

func (i GetCaptureTaskResultsRequestHeaderArray) ToGetCaptureTaskResultsRequestHeaderArrayOutput() GetCaptureTaskResultsRequestHeaderArrayOutput {
	return i.ToGetCaptureTaskResultsRequestHeaderArrayOutputWithContext(context.Background())
}

func (i GetCaptureTaskResultsRequestHeaderArray) ToGetCaptureTaskResultsRequestHeaderArrayOutputWithContext(ctx context.Context) GetCaptureTaskResultsRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaptureTaskResultsRequestHeaderArrayOutput)
}

type GetCaptureTaskResultsRequestHeaderOutput struct{ *pulumi.OutputState }

func (GetCaptureTaskResultsRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTaskResultsRequestHeader)(nil)).Elem()
}

func (o GetCaptureTaskResultsRequestHeaderOutput) ToGetCaptureTaskResultsRequestHeaderOutput() GetCaptureTaskResultsRequestHeaderOutput {
	return o
}

func (o GetCaptureTaskResultsRequestHeaderOutput) ToGetCaptureTaskResultsRequestHeaderOutputWithContext(ctx context.Context) GetCaptureTaskResultsRequestHeaderOutput {
	return o
}

// The host header information.
func (o GetCaptureTaskResultsRequestHeaderOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTaskResultsRequestHeader) string { return v.Host }).(pulumi.StringOutput)
}

type GetCaptureTaskResultsRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetCaptureTaskResultsRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaptureTaskResultsRequestHeader)(nil)).Elem()
}

func (o GetCaptureTaskResultsRequestHeaderArrayOutput) ToGetCaptureTaskResultsRequestHeaderArrayOutput() GetCaptureTaskResultsRequestHeaderArrayOutput {
	return o
}

func (o GetCaptureTaskResultsRequestHeaderArrayOutput) ToGetCaptureTaskResultsRequestHeaderArrayOutputWithContext(ctx context.Context) GetCaptureTaskResultsRequestHeaderArrayOutput {
	return o
}

func (o GetCaptureTaskResultsRequestHeaderArrayOutput) Index(i pulumi.IntInput) GetCaptureTaskResultsRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaptureTaskResultsRequestHeader {
		return vs[0].([]GetCaptureTaskResultsRequestHeader)[vs[1].(int)]
	}).(GetCaptureTaskResultsRequestHeaderOutput)
}

type GetCaptureTasksRecord struct {
	// The capture task size.
	CaptureSize string `pulumi:"captureSize"`
	// The creation time of the capture task.
	CreatedAt string `pulumi:"createdAt"`
	// The destination address.
	DestAddress string `pulumi:"destAddress"`
	// The destination address type.
	DestAddressType int `pulumi:"destAddressType"`
	// The destination port.
	DestPort string `pulumi:"destPort"`
	// The capture task duration.
	Duration int `pulumi:"duration"`
	// Whether is deleted.
	IsDeleted int `pulumi:"isDeleted"`
	// The max packets.
	MaxPackets int `pulumi:"maxPackets"`
	// The capture task name.
	Name string `pulumi:"name"`
	// The protocol type.
	Protocol int `pulumi:"protocol"`
	// The remaining days.
	RemainingDays int `pulumi:"remainingDays"`
	// The source address.
	SourceAddress string `pulumi:"sourceAddress"`
	// The source address type.
	SourceAddressType int `pulumi:"sourceAddressType"`
	// The source port.
	SourcePort string `pulumi:"sourcePort"`
	// The capture task status.
	Status int `pulumi:"status"`
	// The capture task ID.
	TaskId string `pulumi:"taskId"`
	// The update time of the capture task.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetCaptureTasksRecordInput is an input type that accepts GetCaptureTasksRecordArgs and GetCaptureTasksRecordOutput values.
// You can construct a concrete instance of `GetCaptureTasksRecordInput` via:
//
//	GetCaptureTasksRecordArgs{...}
type GetCaptureTasksRecordInput interface {
	pulumi.Input

	ToGetCaptureTasksRecordOutput() GetCaptureTasksRecordOutput
	ToGetCaptureTasksRecordOutputWithContext(context.Context) GetCaptureTasksRecordOutput
}

type GetCaptureTasksRecordArgs struct {
	// The capture task size.
	CaptureSize pulumi.StringInput `pulumi:"captureSize"`
	// The creation time of the capture task.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The destination address.
	DestAddress pulumi.StringInput `pulumi:"destAddress"`
	// The destination address type.
	DestAddressType pulumi.IntInput `pulumi:"destAddressType"`
	// The destination port.
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// The capture task duration.
	Duration pulumi.IntInput `pulumi:"duration"`
	// Whether is deleted.
	IsDeleted pulumi.IntInput `pulumi:"isDeleted"`
	// The max packets.
	MaxPackets pulumi.IntInput `pulumi:"maxPackets"`
	// The capture task name.
	Name pulumi.StringInput `pulumi:"name"`
	// The protocol type.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// The remaining days.
	RemainingDays pulumi.IntInput `pulumi:"remainingDays"`
	// The source address.
	SourceAddress pulumi.StringInput `pulumi:"sourceAddress"`
	// The source address type.
	SourceAddressType pulumi.IntInput `pulumi:"sourceAddressType"`
	// The source port.
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
	// The capture task status.
	Status pulumi.IntInput `pulumi:"status"`
	// The capture task ID.
	TaskId pulumi.StringInput `pulumi:"taskId"`
	// The update time of the capture task.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetCaptureTasksRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTasksRecord)(nil)).Elem()
}

func (i GetCaptureTasksRecordArgs) ToGetCaptureTasksRecordOutput() GetCaptureTasksRecordOutput {
	return i.ToGetCaptureTasksRecordOutputWithContext(context.Background())
}

func (i GetCaptureTasksRecordArgs) ToGetCaptureTasksRecordOutputWithContext(ctx context.Context) GetCaptureTasksRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaptureTasksRecordOutput)
}

// GetCaptureTasksRecordArrayInput is an input type that accepts GetCaptureTasksRecordArray and GetCaptureTasksRecordArrayOutput values.
// You can construct a concrete instance of `GetCaptureTasksRecordArrayInput` via:
//
//	GetCaptureTasksRecordArray{ GetCaptureTasksRecordArgs{...} }
type GetCaptureTasksRecordArrayInput interface {
	pulumi.Input

	ToGetCaptureTasksRecordArrayOutput() GetCaptureTasksRecordArrayOutput
	ToGetCaptureTasksRecordArrayOutputWithContext(context.Context) GetCaptureTasksRecordArrayOutput
}

type GetCaptureTasksRecordArray []GetCaptureTasksRecordInput

func (GetCaptureTasksRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaptureTasksRecord)(nil)).Elem()
}

func (i GetCaptureTasksRecordArray) ToGetCaptureTasksRecordArrayOutput() GetCaptureTasksRecordArrayOutput {
	return i.ToGetCaptureTasksRecordArrayOutputWithContext(context.Background())
}

func (i GetCaptureTasksRecordArray) ToGetCaptureTasksRecordArrayOutputWithContext(ctx context.Context) GetCaptureTasksRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCaptureTasksRecordArrayOutput)
}

type GetCaptureTasksRecordOutput struct{ *pulumi.OutputState }

func (GetCaptureTasksRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCaptureTasksRecord)(nil)).Elem()
}

func (o GetCaptureTasksRecordOutput) ToGetCaptureTasksRecordOutput() GetCaptureTasksRecordOutput {
	return o
}

func (o GetCaptureTasksRecordOutput) ToGetCaptureTasksRecordOutputWithContext(ctx context.Context) GetCaptureTasksRecordOutput {
	return o
}

// The capture task size.
func (o GetCaptureTasksRecordOutput) CaptureSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.CaptureSize }).(pulumi.StringOutput)
}

// The creation time of the capture task.
func (o GetCaptureTasksRecordOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The destination address.
func (o GetCaptureTasksRecordOutput) DestAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.DestAddress }).(pulumi.StringOutput)
}

// The destination address type.
func (o GetCaptureTasksRecordOutput) DestAddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.DestAddressType }).(pulumi.IntOutput)
}

// The destination port.
func (o GetCaptureTasksRecordOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.DestPort }).(pulumi.StringOutput)
}

// The capture task duration.
func (o GetCaptureTasksRecordOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.Duration }).(pulumi.IntOutput)
}

// Whether is deleted.
func (o GetCaptureTasksRecordOutput) IsDeleted() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.IsDeleted }).(pulumi.IntOutput)
}

// The max packets.
func (o GetCaptureTasksRecordOutput) MaxPackets() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.MaxPackets }).(pulumi.IntOutput)
}

// The capture task name.
func (o GetCaptureTasksRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.Name }).(pulumi.StringOutput)
}

// The protocol type.
func (o GetCaptureTasksRecordOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.Protocol }).(pulumi.IntOutput)
}

// The remaining days.
func (o GetCaptureTasksRecordOutput) RemainingDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.RemainingDays }).(pulumi.IntOutput)
}

// The source address.
func (o GetCaptureTasksRecordOutput) SourceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.SourceAddress }).(pulumi.StringOutput)
}

// The source address type.
func (o GetCaptureTasksRecordOutput) SourceAddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.SourceAddressType }).(pulumi.IntOutput)
}

// The source port.
func (o GetCaptureTasksRecordOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.SourcePort }).(pulumi.StringOutput)
}

// The capture task status.
func (o GetCaptureTasksRecordOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) int { return v.Status }).(pulumi.IntOutput)
}

// The capture task ID.
func (o GetCaptureTasksRecordOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.TaskId }).(pulumi.StringOutput)
}

// The update time of the capture task.
func (o GetCaptureTasksRecordOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCaptureTasksRecord) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetCaptureTasksRecordArrayOutput struct{ *pulumi.OutputState }

func (GetCaptureTasksRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCaptureTasksRecord)(nil)).Elem()
}

func (o GetCaptureTasksRecordArrayOutput) ToGetCaptureTasksRecordArrayOutput() GetCaptureTasksRecordArrayOutput {
	return o
}

func (o GetCaptureTasksRecordArrayOutput) ToGetCaptureTasksRecordArrayOutputWithContext(ctx context.Context) GetCaptureTasksRecordArrayOutput {
	return o
}

func (o GetCaptureTasksRecordArrayOutput) Index(i pulumi.IntInput) GetCaptureTasksRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCaptureTasksRecord {
		return vs[0].([]GetCaptureTasksRecord)[vs[1].(int)]
	}).(GetCaptureTasksRecordOutput)
}

type GetDomainNameGroupsRecord struct {
	// Specifies the configuration status.
	// The valid values are as follows:
	// + **-1**: not configured.
	// + **0**: configuration failed.
	// + **1**: configuration succeeded.
	// + **2**: configuration in progress.
	// + **3**: normal.
	// + **4**: configuration exception - domain group usage.
	ConfigStatus string `pulumi:"configStatus"`
	// The description.
	Description string `pulumi:"description"`
	// The list of domain names.
	DomainNames []GetDomainNameGroupsRecordDomainName `pulumi:"domainNames"`
	// Specifies the domain name group ID.
	GroupId string `pulumi:"groupId"`
	// The configuration message.
	Message string `pulumi:"message"`
	// Specifies the name of a domain name group.
	Name string `pulumi:"name"`
	// Specifies the domain name group reference count.
	RefCount string `pulumi:"refCount"`
	// The used rule list.
	Rules []GetDomainNameGroupsRecordRule `pulumi:"rules"`
	// Specifies the domain name group type.
	// The value can be:
	// + **0**: means application type;
	// + **1**: means network type.
	Type string `pulumi:"type"`
}

// GetDomainNameGroupsRecordInput is an input type that accepts GetDomainNameGroupsRecordArgs and GetDomainNameGroupsRecordOutput values.
// You can construct a concrete instance of `GetDomainNameGroupsRecordInput` via:
//
//	GetDomainNameGroupsRecordArgs{...}
type GetDomainNameGroupsRecordInput interface {
	pulumi.Input

	ToGetDomainNameGroupsRecordOutput() GetDomainNameGroupsRecordOutput
	ToGetDomainNameGroupsRecordOutputWithContext(context.Context) GetDomainNameGroupsRecordOutput
}

type GetDomainNameGroupsRecordArgs struct {
	// Specifies the configuration status.
	// The valid values are as follows:
	// + **-1**: not configured.
	// + **0**: configuration failed.
	// + **1**: configuration succeeded.
	// + **2**: configuration in progress.
	// + **3**: normal.
	// + **4**: configuration exception - domain group usage.
	ConfigStatus pulumi.StringInput `pulumi:"configStatus"`
	// The description.
	Description pulumi.StringInput `pulumi:"description"`
	// The list of domain names.
	DomainNames GetDomainNameGroupsRecordDomainNameArrayInput `pulumi:"domainNames"`
	// Specifies the domain name group ID.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The configuration message.
	Message pulumi.StringInput `pulumi:"message"`
	// Specifies the name of a domain name group.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the domain name group reference count.
	RefCount pulumi.StringInput `pulumi:"refCount"`
	// The used rule list.
	Rules GetDomainNameGroupsRecordRuleArrayInput `pulumi:"rules"`
	// Specifies the domain name group type.
	// The value can be:
	// + **0**: means application type;
	// + **1**: means network type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDomainNameGroupsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameGroupsRecord)(nil)).Elem()
}

func (i GetDomainNameGroupsRecordArgs) ToGetDomainNameGroupsRecordOutput() GetDomainNameGroupsRecordOutput {
	return i.ToGetDomainNameGroupsRecordOutputWithContext(context.Background())
}

func (i GetDomainNameGroupsRecordArgs) ToGetDomainNameGroupsRecordOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNameGroupsRecordOutput)
}

// GetDomainNameGroupsRecordArrayInput is an input type that accepts GetDomainNameGroupsRecordArray and GetDomainNameGroupsRecordArrayOutput values.
// You can construct a concrete instance of `GetDomainNameGroupsRecordArrayInput` via:
//
//	GetDomainNameGroupsRecordArray{ GetDomainNameGroupsRecordArgs{...} }
type GetDomainNameGroupsRecordArrayInput interface {
	pulumi.Input

	ToGetDomainNameGroupsRecordArrayOutput() GetDomainNameGroupsRecordArrayOutput
	ToGetDomainNameGroupsRecordArrayOutputWithContext(context.Context) GetDomainNameGroupsRecordArrayOutput
}

type GetDomainNameGroupsRecordArray []GetDomainNameGroupsRecordInput

func (GetDomainNameGroupsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNameGroupsRecord)(nil)).Elem()
}

func (i GetDomainNameGroupsRecordArray) ToGetDomainNameGroupsRecordArrayOutput() GetDomainNameGroupsRecordArrayOutput {
	return i.ToGetDomainNameGroupsRecordArrayOutputWithContext(context.Background())
}

func (i GetDomainNameGroupsRecordArray) ToGetDomainNameGroupsRecordArrayOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNameGroupsRecordArrayOutput)
}

type GetDomainNameGroupsRecordOutput struct{ *pulumi.OutputState }

func (GetDomainNameGroupsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameGroupsRecord)(nil)).Elem()
}

func (o GetDomainNameGroupsRecordOutput) ToGetDomainNameGroupsRecordOutput() GetDomainNameGroupsRecordOutput {
	return o
}

func (o GetDomainNameGroupsRecordOutput) ToGetDomainNameGroupsRecordOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordOutput {
	return o
}

// Specifies the configuration status.
// The valid values are as follows:
// + **-1**: not configured.
// + **0**: configuration failed.
// + **1**: configuration succeeded.
// + **2**: configuration in progress.
// + **3**: normal.
// + **4**: configuration exception - domain group usage.
func (o GetDomainNameGroupsRecordOutput) ConfigStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.ConfigStatus }).(pulumi.StringOutput)
}

// The description.
func (o GetDomainNameGroupsRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.Description }).(pulumi.StringOutput)
}

// The list of domain names.
func (o GetDomainNameGroupsRecordOutput) DomainNames() GetDomainNameGroupsRecordDomainNameArrayOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) []GetDomainNameGroupsRecordDomainName { return v.DomainNames }).(GetDomainNameGroupsRecordDomainNameArrayOutput)
}

// Specifies the domain name group ID.
func (o GetDomainNameGroupsRecordOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.GroupId }).(pulumi.StringOutput)
}

// The configuration message.
func (o GetDomainNameGroupsRecordOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.Message }).(pulumi.StringOutput)
}

// Specifies the name of a domain name group.
func (o GetDomainNameGroupsRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the domain name group reference count.
func (o GetDomainNameGroupsRecordOutput) RefCount() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.RefCount }).(pulumi.StringOutput)
}

// The used rule list.
func (o GetDomainNameGroupsRecordOutput) Rules() GetDomainNameGroupsRecordRuleArrayOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) []GetDomainNameGroupsRecordRule { return v.Rules }).(GetDomainNameGroupsRecordRuleArrayOutput)
}

// Specifies the domain name group type.
// The value can be:
// + **0**: means application type;
// + **1**: means network type.
func (o GetDomainNameGroupsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecord) string { return v.Type }).(pulumi.StringOutput)
}

type GetDomainNameGroupsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetDomainNameGroupsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNameGroupsRecord)(nil)).Elem()
}

func (o GetDomainNameGroupsRecordArrayOutput) ToGetDomainNameGroupsRecordArrayOutput() GetDomainNameGroupsRecordArrayOutput {
	return o
}

func (o GetDomainNameGroupsRecordArrayOutput) ToGetDomainNameGroupsRecordArrayOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordArrayOutput {
	return o
}

func (o GetDomainNameGroupsRecordArrayOutput) Index(i pulumi.IntInput) GetDomainNameGroupsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainNameGroupsRecord {
		return vs[0].([]GetDomainNameGroupsRecord)[vs[1].(int)]
	}).(GetDomainNameGroupsRecordOutput)
}

type GetDomainNameGroupsRecordDomainName struct {
	// The description.
	Description string `pulumi:"description"`
	// The domain address ID.
	DomainAddressId string `pulumi:"domainAddressId"`
	// The domain name.
	DomainName string `pulumi:"domainName"`
}

// GetDomainNameGroupsRecordDomainNameInput is an input type that accepts GetDomainNameGroupsRecordDomainNameArgs and GetDomainNameGroupsRecordDomainNameOutput values.
// You can construct a concrete instance of `GetDomainNameGroupsRecordDomainNameInput` via:
//
//	GetDomainNameGroupsRecordDomainNameArgs{...}
type GetDomainNameGroupsRecordDomainNameInput interface {
	pulumi.Input

	ToGetDomainNameGroupsRecordDomainNameOutput() GetDomainNameGroupsRecordDomainNameOutput
	ToGetDomainNameGroupsRecordDomainNameOutputWithContext(context.Context) GetDomainNameGroupsRecordDomainNameOutput
}

type GetDomainNameGroupsRecordDomainNameArgs struct {
	// The description.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain address ID.
	DomainAddressId pulumi.StringInput `pulumi:"domainAddressId"`
	// The domain name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (GetDomainNameGroupsRecordDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameGroupsRecordDomainName)(nil)).Elem()
}

func (i GetDomainNameGroupsRecordDomainNameArgs) ToGetDomainNameGroupsRecordDomainNameOutput() GetDomainNameGroupsRecordDomainNameOutput {
	return i.ToGetDomainNameGroupsRecordDomainNameOutputWithContext(context.Background())
}

func (i GetDomainNameGroupsRecordDomainNameArgs) ToGetDomainNameGroupsRecordDomainNameOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNameGroupsRecordDomainNameOutput)
}

// GetDomainNameGroupsRecordDomainNameArrayInput is an input type that accepts GetDomainNameGroupsRecordDomainNameArray and GetDomainNameGroupsRecordDomainNameArrayOutput values.
// You can construct a concrete instance of `GetDomainNameGroupsRecordDomainNameArrayInput` via:
//
//	GetDomainNameGroupsRecordDomainNameArray{ GetDomainNameGroupsRecordDomainNameArgs{...} }
type GetDomainNameGroupsRecordDomainNameArrayInput interface {
	pulumi.Input

	ToGetDomainNameGroupsRecordDomainNameArrayOutput() GetDomainNameGroupsRecordDomainNameArrayOutput
	ToGetDomainNameGroupsRecordDomainNameArrayOutputWithContext(context.Context) GetDomainNameGroupsRecordDomainNameArrayOutput
}

type GetDomainNameGroupsRecordDomainNameArray []GetDomainNameGroupsRecordDomainNameInput

func (GetDomainNameGroupsRecordDomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNameGroupsRecordDomainName)(nil)).Elem()
}

func (i GetDomainNameGroupsRecordDomainNameArray) ToGetDomainNameGroupsRecordDomainNameArrayOutput() GetDomainNameGroupsRecordDomainNameArrayOutput {
	return i.ToGetDomainNameGroupsRecordDomainNameArrayOutputWithContext(context.Background())
}

func (i GetDomainNameGroupsRecordDomainNameArray) ToGetDomainNameGroupsRecordDomainNameArrayOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordDomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNameGroupsRecordDomainNameArrayOutput)
}

type GetDomainNameGroupsRecordDomainNameOutput struct{ *pulumi.OutputState }

func (GetDomainNameGroupsRecordDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameGroupsRecordDomainName)(nil)).Elem()
}

func (o GetDomainNameGroupsRecordDomainNameOutput) ToGetDomainNameGroupsRecordDomainNameOutput() GetDomainNameGroupsRecordDomainNameOutput {
	return o
}

func (o GetDomainNameGroupsRecordDomainNameOutput) ToGetDomainNameGroupsRecordDomainNameOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordDomainNameOutput {
	return o
}

// The description.
func (o GetDomainNameGroupsRecordDomainNameOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecordDomainName) string { return v.Description }).(pulumi.StringOutput)
}

// The domain address ID.
func (o GetDomainNameGroupsRecordDomainNameOutput) DomainAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecordDomainName) string { return v.DomainAddressId }).(pulumi.StringOutput)
}

// The domain name.
func (o GetDomainNameGroupsRecordDomainNameOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecordDomainName) string { return v.DomainName }).(pulumi.StringOutput)
}

type GetDomainNameGroupsRecordDomainNameArrayOutput struct{ *pulumi.OutputState }

func (GetDomainNameGroupsRecordDomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNameGroupsRecordDomainName)(nil)).Elem()
}

func (o GetDomainNameGroupsRecordDomainNameArrayOutput) ToGetDomainNameGroupsRecordDomainNameArrayOutput() GetDomainNameGroupsRecordDomainNameArrayOutput {
	return o
}

func (o GetDomainNameGroupsRecordDomainNameArrayOutput) ToGetDomainNameGroupsRecordDomainNameArrayOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordDomainNameArrayOutput {
	return o
}

func (o GetDomainNameGroupsRecordDomainNameArrayOutput) Index(i pulumi.IntInput) GetDomainNameGroupsRecordDomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainNameGroupsRecordDomainName {
		return vs[0].([]GetDomainNameGroupsRecordDomainName)[vs[1].(int)]
	}).(GetDomainNameGroupsRecordDomainNameOutput)
}

type GetDomainNameGroupsRecordRule struct {
	// The rule ID.
	Id string `pulumi:"id"`
	// Specifies the name of a domain name group.
	Name string `pulumi:"name"`
}

// GetDomainNameGroupsRecordRuleInput is an input type that accepts GetDomainNameGroupsRecordRuleArgs and GetDomainNameGroupsRecordRuleOutput values.
// You can construct a concrete instance of `GetDomainNameGroupsRecordRuleInput` via:
//
//	GetDomainNameGroupsRecordRuleArgs{...}
type GetDomainNameGroupsRecordRuleInput interface {
	pulumi.Input

	ToGetDomainNameGroupsRecordRuleOutput() GetDomainNameGroupsRecordRuleOutput
	ToGetDomainNameGroupsRecordRuleOutputWithContext(context.Context) GetDomainNameGroupsRecordRuleOutput
}

type GetDomainNameGroupsRecordRuleArgs struct {
	// The rule ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of a domain name group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDomainNameGroupsRecordRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameGroupsRecordRule)(nil)).Elem()
}

func (i GetDomainNameGroupsRecordRuleArgs) ToGetDomainNameGroupsRecordRuleOutput() GetDomainNameGroupsRecordRuleOutput {
	return i.ToGetDomainNameGroupsRecordRuleOutputWithContext(context.Background())
}

func (i GetDomainNameGroupsRecordRuleArgs) ToGetDomainNameGroupsRecordRuleOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNameGroupsRecordRuleOutput)
}

// GetDomainNameGroupsRecordRuleArrayInput is an input type that accepts GetDomainNameGroupsRecordRuleArray and GetDomainNameGroupsRecordRuleArrayOutput values.
// You can construct a concrete instance of `GetDomainNameGroupsRecordRuleArrayInput` via:
//
//	GetDomainNameGroupsRecordRuleArray{ GetDomainNameGroupsRecordRuleArgs{...} }
type GetDomainNameGroupsRecordRuleArrayInput interface {
	pulumi.Input

	ToGetDomainNameGroupsRecordRuleArrayOutput() GetDomainNameGroupsRecordRuleArrayOutput
	ToGetDomainNameGroupsRecordRuleArrayOutputWithContext(context.Context) GetDomainNameGroupsRecordRuleArrayOutput
}

type GetDomainNameGroupsRecordRuleArray []GetDomainNameGroupsRecordRuleInput

func (GetDomainNameGroupsRecordRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNameGroupsRecordRule)(nil)).Elem()
}

func (i GetDomainNameGroupsRecordRuleArray) ToGetDomainNameGroupsRecordRuleArrayOutput() GetDomainNameGroupsRecordRuleArrayOutput {
	return i.ToGetDomainNameGroupsRecordRuleArrayOutputWithContext(context.Background())
}

func (i GetDomainNameGroupsRecordRuleArray) ToGetDomainNameGroupsRecordRuleArrayOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNameGroupsRecordRuleArrayOutput)
}

type GetDomainNameGroupsRecordRuleOutput struct{ *pulumi.OutputState }

func (GetDomainNameGroupsRecordRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameGroupsRecordRule)(nil)).Elem()
}

func (o GetDomainNameGroupsRecordRuleOutput) ToGetDomainNameGroupsRecordRuleOutput() GetDomainNameGroupsRecordRuleOutput {
	return o
}

func (o GetDomainNameGroupsRecordRuleOutput) ToGetDomainNameGroupsRecordRuleOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordRuleOutput {
	return o
}

// The rule ID.
func (o GetDomainNameGroupsRecordRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecordRule) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of a domain name group.
func (o GetDomainNameGroupsRecordRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameGroupsRecordRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetDomainNameGroupsRecordRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDomainNameGroupsRecordRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNameGroupsRecordRule)(nil)).Elem()
}

func (o GetDomainNameGroupsRecordRuleArrayOutput) ToGetDomainNameGroupsRecordRuleArrayOutput() GetDomainNameGroupsRecordRuleArrayOutput {
	return o
}

func (o GetDomainNameGroupsRecordRuleArrayOutput) ToGetDomainNameGroupsRecordRuleArrayOutputWithContext(ctx context.Context) GetDomainNameGroupsRecordRuleArrayOutput {
	return o
}

func (o GetDomainNameGroupsRecordRuleArrayOutput) Index(i pulumi.IntInput) GetDomainNameGroupsRecordRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainNameGroupsRecordRule {
		return vs[0].([]GetDomainNameGroupsRecordRule)[vs[1].(int)]
	}).(GetDomainNameGroupsRecordRuleOutput)
}

type GetFirewallsRecord struct {
	// The billing mode. The value can be 0 (yearly/monthly) or 1 (pay-per-use).
	ChargeMode int `pulumi:"chargeMode"`
	// The engine type.
	EngineType int `pulumi:"engineType"`
	// The map of feature toggle.
	FeatureToggle map[string]bool `pulumi:"featureToggle"`
	// The flavor of the firewall.
	// The Flavor structure is documented below.
	Flavors []GetFirewallsRecordFlavor `pulumi:"flavors"`
	// Specifies the firewall instance ID.
	// If not specified, the first instance will be returned.
	FwInstanceId string `pulumi:"fwInstanceId"`
	// The cluster type.
	HaType int `pulumi:"haType"`
	// Whether the engine is an old engine.
	IsOldFirewallInstance bool `pulumi:"isOldFirewallInstance"`
	// The firewall name.
	Name string `pulumi:"name"`
	// The project list.
	// The Protect Object structure is documented below.
	ProtectObjects []GetFirewallsRecordProtectObject `pulumi:"protectObjects"`
	// The firewall instance resources.
	// The Firewall Instance Resource structure is
	// documented below.
	Resources []GetFirewallsRecordResource `pulumi:"resources"`
	// Specifies the service type. The value can be:
	// + **0**: North-south firewall;
	// + **1**: East-west firewall;
	ServiceType int `pulumi:"serviceType"`
	// The firewall status. The options are as follows:
	// + **-1**: waiting for payment;
	// + **0**: creating;
	// + **1**: deleting;
	// + **2**: running;
	// + **3**: upgrading;
	// + **4**: deletion completed;
	// + **5**: freezing;
	// + **6**: creation failed;
	// + **7**: deletion failed;
	// + **8**: freezing failed;
	// + **9**: storage in progress;
	// + **10**: storage failed;
	// + **11**: upgrade failed;
	Status int `pulumi:"status"`
	// Whether IPv6 is supported.
	SupportIpv6 bool `pulumi:"supportIpv6"`
}

// GetFirewallsRecordInput is an input type that accepts GetFirewallsRecordArgs and GetFirewallsRecordOutput values.
// You can construct a concrete instance of `GetFirewallsRecordInput` via:
//
//	GetFirewallsRecordArgs{...}
type GetFirewallsRecordInput interface {
	pulumi.Input

	ToGetFirewallsRecordOutput() GetFirewallsRecordOutput
	ToGetFirewallsRecordOutputWithContext(context.Context) GetFirewallsRecordOutput
}

type GetFirewallsRecordArgs struct {
	// The billing mode. The value can be 0 (yearly/monthly) or 1 (pay-per-use).
	ChargeMode pulumi.IntInput `pulumi:"chargeMode"`
	// The engine type.
	EngineType pulumi.IntInput `pulumi:"engineType"`
	// The map of feature toggle.
	FeatureToggle pulumi.BoolMapInput `pulumi:"featureToggle"`
	// The flavor of the firewall.
	// The Flavor structure is documented below.
	Flavors GetFirewallsRecordFlavorArrayInput `pulumi:"flavors"`
	// Specifies the firewall instance ID.
	// If not specified, the first instance will be returned.
	FwInstanceId pulumi.StringInput `pulumi:"fwInstanceId"`
	// The cluster type.
	HaType pulumi.IntInput `pulumi:"haType"`
	// Whether the engine is an old engine.
	IsOldFirewallInstance pulumi.BoolInput `pulumi:"isOldFirewallInstance"`
	// The firewall name.
	Name pulumi.StringInput `pulumi:"name"`
	// The project list.
	// The Protect Object structure is documented below.
	ProtectObjects GetFirewallsRecordProtectObjectArrayInput `pulumi:"protectObjects"`
	// The firewall instance resources.
	// The Firewall Instance Resource structure is
	// documented below.
	Resources GetFirewallsRecordResourceArrayInput `pulumi:"resources"`
	// Specifies the service type. The value can be:
	// + **0**: North-south firewall;
	// + **1**: East-west firewall;
	ServiceType pulumi.IntInput `pulumi:"serviceType"`
	// The firewall status. The options are as follows:
	// + **-1**: waiting for payment;
	// + **0**: creating;
	// + **1**: deleting;
	// + **2**: running;
	// + **3**: upgrading;
	// + **4**: deletion completed;
	// + **5**: freezing;
	// + **6**: creation failed;
	// + **7**: deletion failed;
	// + **8**: freezing failed;
	// + **9**: storage in progress;
	// + **10**: storage failed;
	// + **11**: upgrade failed;
	Status pulumi.IntInput `pulumi:"status"`
	// Whether IPv6 is supported.
	SupportIpv6 pulumi.BoolInput `pulumi:"supportIpv6"`
}

func (GetFirewallsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecord)(nil)).Elem()
}

func (i GetFirewallsRecordArgs) ToGetFirewallsRecordOutput() GetFirewallsRecordOutput {
	return i.ToGetFirewallsRecordOutputWithContext(context.Background())
}

func (i GetFirewallsRecordArgs) ToGetFirewallsRecordOutputWithContext(ctx context.Context) GetFirewallsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordOutput)
}

// GetFirewallsRecordArrayInput is an input type that accepts GetFirewallsRecordArray and GetFirewallsRecordArrayOutput values.
// You can construct a concrete instance of `GetFirewallsRecordArrayInput` via:
//
//	GetFirewallsRecordArray{ GetFirewallsRecordArgs{...} }
type GetFirewallsRecordArrayInput interface {
	pulumi.Input

	ToGetFirewallsRecordArrayOutput() GetFirewallsRecordArrayOutput
	ToGetFirewallsRecordArrayOutputWithContext(context.Context) GetFirewallsRecordArrayOutput
}

type GetFirewallsRecordArray []GetFirewallsRecordInput

func (GetFirewallsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecord)(nil)).Elem()
}

func (i GetFirewallsRecordArray) ToGetFirewallsRecordArrayOutput() GetFirewallsRecordArrayOutput {
	return i.ToGetFirewallsRecordArrayOutputWithContext(context.Background())
}

func (i GetFirewallsRecordArray) ToGetFirewallsRecordArrayOutputWithContext(ctx context.Context) GetFirewallsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordArrayOutput)
}

type GetFirewallsRecordOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecord)(nil)).Elem()
}

func (o GetFirewallsRecordOutput) ToGetFirewallsRecordOutput() GetFirewallsRecordOutput {
	return o
}

func (o GetFirewallsRecordOutput) ToGetFirewallsRecordOutputWithContext(ctx context.Context) GetFirewallsRecordOutput {
	return o
}

// The billing mode. The value can be 0 (yearly/monthly) or 1 (pay-per-use).
func (o GetFirewallsRecordOutput) ChargeMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecord) int { return v.ChargeMode }).(pulumi.IntOutput)
}

// The engine type.
func (o GetFirewallsRecordOutput) EngineType() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecord) int { return v.EngineType }).(pulumi.IntOutput)
}

// The map of feature toggle.
func (o GetFirewallsRecordOutput) FeatureToggle() pulumi.BoolMapOutput {
	return o.ApplyT(func(v GetFirewallsRecord) map[string]bool { return v.FeatureToggle }).(pulumi.BoolMapOutput)
}

// The flavor of the firewall.
// The Flavor structure is documented below.
func (o GetFirewallsRecordOutput) Flavors() GetFirewallsRecordFlavorArrayOutput {
	return o.ApplyT(func(v GetFirewallsRecord) []GetFirewallsRecordFlavor { return v.Flavors }).(GetFirewallsRecordFlavorArrayOutput)
}

// Specifies the firewall instance ID.
// If not specified, the first instance will be returned.
func (o GetFirewallsRecordOutput) FwInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecord) string { return v.FwInstanceId }).(pulumi.StringOutput)
}

// The cluster type.
func (o GetFirewallsRecordOutput) HaType() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecord) int { return v.HaType }).(pulumi.IntOutput)
}

// Whether the engine is an old engine.
func (o GetFirewallsRecordOutput) IsOldFirewallInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallsRecord) bool { return v.IsOldFirewallInstance }).(pulumi.BoolOutput)
}

// The firewall name.
func (o GetFirewallsRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecord) string { return v.Name }).(pulumi.StringOutput)
}

// The project list.
// The Protect Object structure is documented below.
func (o GetFirewallsRecordOutput) ProtectObjects() GetFirewallsRecordProtectObjectArrayOutput {
	return o.ApplyT(func(v GetFirewallsRecord) []GetFirewallsRecordProtectObject { return v.ProtectObjects }).(GetFirewallsRecordProtectObjectArrayOutput)
}

// The firewall instance resources.
// The Firewall Instance Resource structure is
// documented below.
func (o GetFirewallsRecordOutput) Resources() GetFirewallsRecordResourceArrayOutput {
	return o.ApplyT(func(v GetFirewallsRecord) []GetFirewallsRecordResource { return v.Resources }).(GetFirewallsRecordResourceArrayOutput)
}

// Specifies the service type. The value can be:
// + **0**: North-south firewall;
// + **1**: East-west firewall;
func (o GetFirewallsRecordOutput) ServiceType() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecord) int { return v.ServiceType }).(pulumi.IntOutput)
}

// The firewall status. The options are as follows:
// + **-1**: waiting for payment;
// + **0**: creating;
// + **1**: deleting;
// + **2**: running;
// + **3**: upgrading;
// + **4**: deletion completed;
// + **5**: freezing;
// + **6**: creation failed;
// + **7**: deletion failed;
// + **8**: freezing failed;
// + **9**: storage in progress;
// + **10**: storage failed;
// + **11**: upgrade failed;
func (o GetFirewallsRecordOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecord) int { return v.Status }).(pulumi.IntOutput)
}

// Whether IPv6 is supported.
func (o GetFirewallsRecordOutput) SupportIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFirewallsRecord) bool { return v.SupportIpv6 }).(pulumi.BoolOutput)
}

type GetFirewallsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecord)(nil)).Elem()
}

func (o GetFirewallsRecordArrayOutput) ToGetFirewallsRecordArrayOutput() GetFirewallsRecordArrayOutput {
	return o
}

func (o GetFirewallsRecordArrayOutput) ToGetFirewallsRecordArrayOutputWithContext(ctx context.Context) GetFirewallsRecordArrayOutput {
	return o
}

func (o GetFirewallsRecordArrayOutput) Index(i pulumi.IntInput) GetFirewallsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsRecord {
		return vs[0].([]GetFirewallsRecord)[vs[1].(int)]
	}).(GetFirewallsRecordOutput)
}

type GetFirewallsRecordFlavor struct {
	// The bandwidth.
	Bandwidth int `pulumi:"bandwidth"`
	// The number of EIPs.
	EipCount int `pulumi:"eipCount"`
	// The log storage.
	LogStorage int `pulumi:"logStorage"`
	// The firewall version. The value can be 0 (standard edition), 1 (professional edition),
	// 2 (platinum edition), or 3 (basic edition).
	Version int `pulumi:"version"`
	// The number of VPCs.
	VpcCount int `pulumi:"vpcCount"`
}

// GetFirewallsRecordFlavorInput is an input type that accepts GetFirewallsRecordFlavorArgs and GetFirewallsRecordFlavorOutput values.
// You can construct a concrete instance of `GetFirewallsRecordFlavorInput` via:
//
//	GetFirewallsRecordFlavorArgs{...}
type GetFirewallsRecordFlavorInput interface {
	pulumi.Input

	ToGetFirewallsRecordFlavorOutput() GetFirewallsRecordFlavorOutput
	ToGetFirewallsRecordFlavorOutputWithContext(context.Context) GetFirewallsRecordFlavorOutput
}

type GetFirewallsRecordFlavorArgs struct {
	// The bandwidth.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The number of EIPs.
	EipCount pulumi.IntInput `pulumi:"eipCount"`
	// The log storage.
	LogStorage pulumi.IntInput `pulumi:"logStorage"`
	// The firewall version. The value can be 0 (standard edition), 1 (professional edition),
	// 2 (platinum edition), or 3 (basic edition).
	Version pulumi.IntInput `pulumi:"version"`
	// The number of VPCs.
	VpcCount pulumi.IntInput `pulumi:"vpcCount"`
}

func (GetFirewallsRecordFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecordFlavor)(nil)).Elem()
}

func (i GetFirewallsRecordFlavorArgs) ToGetFirewallsRecordFlavorOutput() GetFirewallsRecordFlavorOutput {
	return i.ToGetFirewallsRecordFlavorOutputWithContext(context.Background())
}

func (i GetFirewallsRecordFlavorArgs) ToGetFirewallsRecordFlavorOutputWithContext(ctx context.Context) GetFirewallsRecordFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordFlavorOutput)
}

// GetFirewallsRecordFlavorArrayInput is an input type that accepts GetFirewallsRecordFlavorArray and GetFirewallsRecordFlavorArrayOutput values.
// You can construct a concrete instance of `GetFirewallsRecordFlavorArrayInput` via:
//
//	GetFirewallsRecordFlavorArray{ GetFirewallsRecordFlavorArgs{...} }
type GetFirewallsRecordFlavorArrayInput interface {
	pulumi.Input

	ToGetFirewallsRecordFlavorArrayOutput() GetFirewallsRecordFlavorArrayOutput
	ToGetFirewallsRecordFlavorArrayOutputWithContext(context.Context) GetFirewallsRecordFlavorArrayOutput
}

type GetFirewallsRecordFlavorArray []GetFirewallsRecordFlavorInput

func (GetFirewallsRecordFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecordFlavor)(nil)).Elem()
}

func (i GetFirewallsRecordFlavorArray) ToGetFirewallsRecordFlavorArrayOutput() GetFirewallsRecordFlavorArrayOutput {
	return i.ToGetFirewallsRecordFlavorArrayOutputWithContext(context.Background())
}

func (i GetFirewallsRecordFlavorArray) ToGetFirewallsRecordFlavorArrayOutputWithContext(ctx context.Context) GetFirewallsRecordFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordFlavorArrayOutput)
}

type GetFirewallsRecordFlavorOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecordFlavor)(nil)).Elem()
}

func (o GetFirewallsRecordFlavorOutput) ToGetFirewallsRecordFlavorOutput() GetFirewallsRecordFlavorOutput {
	return o
}

func (o GetFirewallsRecordFlavorOutput) ToGetFirewallsRecordFlavorOutputWithContext(ctx context.Context) GetFirewallsRecordFlavorOutput {
	return o
}

// The bandwidth.
func (o GetFirewallsRecordFlavorOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordFlavor) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The number of EIPs.
func (o GetFirewallsRecordFlavorOutput) EipCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordFlavor) int { return v.EipCount }).(pulumi.IntOutput)
}

// The log storage.
func (o GetFirewallsRecordFlavorOutput) LogStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordFlavor) int { return v.LogStorage }).(pulumi.IntOutput)
}

// The firewall version. The value can be 0 (standard edition), 1 (professional edition),
// 2 (platinum edition), or 3 (basic edition).
func (o GetFirewallsRecordFlavorOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordFlavor) int { return v.Version }).(pulumi.IntOutput)
}

// The number of VPCs.
func (o GetFirewallsRecordFlavorOutput) VpcCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordFlavor) int { return v.VpcCount }).(pulumi.IntOutput)
}

type GetFirewallsRecordFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecordFlavor)(nil)).Elem()
}

func (o GetFirewallsRecordFlavorArrayOutput) ToGetFirewallsRecordFlavorArrayOutput() GetFirewallsRecordFlavorArrayOutput {
	return o
}

func (o GetFirewallsRecordFlavorArrayOutput) ToGetFirewallsRecordFlavorArrayOutputWithContext(ctx context.Context) GetFirewallsRecordFlavorArrayOutput {
	return o
}

func (o GetFirewallsRecordFlavorArrayOutput) Index(i pulumi.IntInput) GetFirewallsRecordFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsRecordFlavor {
		return vs[0].([]GetFirewallsRecordFlavor)[vs[1].(int)]
	}).(GetFirewallsRecordFlavorOutput)
}

type GetFirewallsRecordProtectObject struct {
	// The protected object ID.
	ObjectId string `pulumi:"objectId"`
	// The protected object name.
	ObjectName string `pulumi:"objectName"`
	// The project type. The options are as follows:
	// + **0**: north-south;
	// + **1**: east-west;
	Type int `pulumi:"type"`
}

// GetFirewallsRecordProtectObjectInput is an input type that accepts GetFirewallsRecordProtectObjectArgs and GetFirewallsRecordProtectObjectOutput values.
// You can construct a concrete instance of `GetFirewallsRecordProtectObjectInput` via:
//
//	GetFirewallsRecordProtectObjectArgs{...}
type GetFirewallsRecordProtectObjectInput interface {
	pulumi.Input

	ToGetFirewallsRecordProtectObjectOutput() GetFirewallsRecordProtectObjectOutput
	ToGetFirewallsRecordProtectObjectOutputWithContext(context.Context) GetFirewallsRecordProtectObjectOutput
}

type GetFirewallsRecordProtectObjectArgs struct {
	// The protected object ID.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// The protected object name.
	ObjectName pulumi.StringInput `pulumi:"objectName"`
	// The project type. The options are as follows:
	// + **0**: north-south;
	// + **1**: east-west;
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetFirewallsRecordProtectObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecordProtectObject)(nil)).Elem()
}

func (i GetFirewallsRecordProtectObjectArgs) ToGetFirewallsRecordProtectObjectOutput() GetFirewallsRecordProtectObjectOutput {
	return i.ToGetFirewallsRecordProtectObjectOutputWithContext(context.Background())
}

func (i GetFirewallsRecordProtectObjectArgs) ToGetFirewallsRecordProtectObjectOutputWithContext(ctx context.Context) GetFirewallsRecordProtectObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordProtectObjectOutput)
}

// GetFirewallsRecordProtectObjectArrayInput is an input type that accepts GetFirewallsRecordProtectObjectArray and GetFirewallsRecordProtectObjectArrayOutput values.
// You can construct a concrete instance of `GetFirewallsRecordProtectObjectArrayInput` via:
//
//	GetFirewallsRecordProtectObjectArray{ GetFirewallsRecordProtectObjectArgs{...} }
type GetFirewallsRecordProtectObjectArrayInput interface {
	pulumi.Input

	ToGetFirewallsRecordProtectObjectArrayOutput() GetFirewallsRecordProtectObjectArrayOutput
	ToGetFirewallsRecordProtectObjectArrayOutputWithContext(context.Context) GetFirewallsRecordProtectObjectArrayOutput
}

type GetFirewallsRecordProtectObjectArray []GetFirewallsRecordProtectObjectInput

func (GetFirewallsRecordProtectObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecordProtectObject)(nil)).Elem()
}

func (i GetFirewallsRecordProtectObjectArray) ToGetFirewallsRecordProtectObjectArrayOutput() GetFirewallsRecordProtectObjectArrayOutput {
	return i.ToGetFirewallsRecordProtectObjectArrayOutputWithContext(context.Background())
}

func (i GetFirewallsRecordProtectObjectArray) ToGetFirewallsRecordProtectObjectArrayOutputWithContext(ctx context.Context) GetFirewallsRecordProtectObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordProtectObjectArrayOutput)
}

type GetFirewallsRecordProtectObjectOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordProtectObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecordProtectObject)(nil)).Elem()
}

func (o GetFirewallsRecordProtectObjectOutput) ToGetFirewallsRecordProtectObjectOutput() GetFirewallsRecordProtectObjectOutput {
	return o
}

func (o GetFirewallsRecordProtectObjectOutput) ToGetFirewallsRecordProtectObjectOutputWithContext(ctx context.Context) GetFirewallsRecordProtectObjectOutput {
	return o
}

// The protected object ID.
func (o GetFirewallsRecordProtectObjectOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecordProtectObject) string { return v.ObjectId }).(pulumi.StringOutput)
}

// The protected object name.
func (o GetFirewallsRecordProtectObjectOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecordProtectObject) string { return v.ObjectName }).(pulumi.StringOutput)
}

// The project type. The options are as follows:
// + **0**: north-south;
// + **1**: east-west;
func (o GetFirewallsRecordProtectObjectOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordProtectObject) int { return v.Type }).(pulumi.IntOutput)
}

type GetFirewallsRecordProtectObjectArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordProtectObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecordProtectObject)(nil)).Elem()
}

func (o GetFirewallsRecordProtectObjectArrayOutput) ToGetFirewallsRecordProtectObjectArrayOutput() GetFirewallsRecordProtectObjectArrayOutput {
	return o
}

func (o GetFirewallsRecordProtectObjectArrayOutput) ToGetFirewallsRecordProtectObjectArrayOutputWithContext(ctx context.Context) GetFirewallsRecordProtectObjectArrayOutput {
	return o
}

func (o GetFirewallsRecordProtectObjectArrayOutput) Index(i pulumi.IntInput) GetFirewallsRecordProtectObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsRecordProtectObject {
		return vs[0].([]GetFirewallsRecordProtectObject)[vs[1].(int)]
	}).(GetFirewallsRecordProtectObjectOutput)
}

type GetFirewallsRecordResource struct {
	// Service type, which is used by CBC. The value is **hws.service.type.cfw**.
	CloudServiceType string `pulumi:"cloudServiceType"`
	// Resource ID.
	ResourceId string `pulumi:"resourceId"`
	// Resource quantity.
	ResourceSize int `pulumi:"resourceSize"`
	// Resource unit name.
	ResourceSizeMeasureId int `pulumi:"resourceSizeMeasureId"`
	// Inventory unit code.
	ResourceSpecCode string `pulumi:"resourceSpecCode"`
	// Resource type. The options are as follows:
	// + **CFW**: hws.resource.type.cfw;
	// + **EIP**: hws.resource.type.cfw.exp.eip;
	// + **Bandwidth**: hws.resource.type.cfw.exp.bandwidth;
	// + **VPC**: hws.resource.type.cfw.exp.vpc;
	// + **Log storage**: hws.resource.type.cfw.exp.logaudit;
	ResourceType string `pulumi:"resourceType"`
}

// GetFirewallsRecordResourceInput is an input type that accepts GetFirewallsRecordResourceArgs and GetFirewallsRecordResourceOutput values.
// You can construct a concrete instance of `GetFirewallsRecordResourceInput` via:
//
//	GetFirewallsRecordResourceArgs{...}
type GetFirewallsRecordResourceInput interface {
	pulumi.Input

	ToGetFirewallsRecordResourceOutput() GetFirewallsRecordResourceOutput
	ToGetFirewallsRecordResourceOutputWithContext(context.Context) GetFirewallsRecordResourceOutput
}

type GetFirewallsRecordResourceArgs struct {
	// Service type, which is used by CBC. The value is **hws.service.type.cfw**.
	CloudServiceType pulumi.StringInput `pulumi:"cloudServiceType"`
	// Resource ID.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Resource quantity.
	ResourceSize pulumi.IntInput `pulumi:"resourceSize"`
	// Resource unit name.
	ResourceSizeMeasureId pulumi.IntInput `pulumi:"resourceSizeMeasureId"`
	// Inventory unit code.
	ResourceSpecCode pulumi.StringInput `pulumi:"resourceSpecCode"`
	// Resource type. The options are as follows:
	// + **CFW**: hws.resource.type.cfw;
	// + **EIP**: hws.resource.type.cfw.exp.eip;
	// + **Bandwidth**: hws.resource.type.cfw.exp.bandwidth;
	// + **VPC**: hws.resource.type.cfw.exp.vpc;
	// + **Log storage**: hws.resource.type.cfw.exp.logaudit;
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetFirewallsRecordResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecordResource)(nil)).Elem()
}

func (i GetFirewallsRecordResourceArgs) ToGetFirewallsRecordResourceOutput() GetFirewallsRecordResourceOutput {
	return i.ToGetFirewallsRecordResourceOutputWithContext(context.Background())
}

func (i GetFirewallsRecordResourceArgs) ToGetFirewallsRecordResourceOutputWithContext(ctx context.Context) GetFirewallsRecordResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordResourceOutput)
}

// GetFirewallsRecordResourceArrayInput is an input type that accepts GetFirewallsRecordResourceArray and GetFirewallsRecordResourceArrayOutput values.
// You can construct a concrete instance of `GetFirewallsRecordResourceArrayInput` via:
//
//	GetFirewallsRecordResourceArray{ GetFirewallsRecordResourceArgs{...} }
type GetFirewallsRecordResourceArrayInput interface {
	pulumi.Input

	ToGetFirewallsRecordResourceArrayOutput() GetFirewallsRecordResourceArrayOutput
	ToGetFirewallsRecordResourceArrayOutputWithContext(context.Context) GetFirewallsRecordResourceArrayOutput
}

type GetFirewallsRecordResourceArray []GetFirewallsRecordResourceInput

func (GetFirewallsRecordResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecordResource)(nil)).Elem()
}

func (i GetFirewallsRecordResourceArray) ToGetFirewallsRecordResourceArrayOutput() GetFirewallsRecordResourceArrayOutput {
	return i.ToGetFirewallsRecordResourceArrayOutputWithContext(context.Background())
}

func (i GetFirewallsRecordResourceArray) ToGetFirewallsRecordResourceArrayOutputWithContext(ctx context.Context) GetFirewallsRecordResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallsRecordResourceArrayOutput)
}

type GetFirewallsRecordResourceOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallsRecordResource)(nil)).Elem()
}

func (o GetFirewallsRecordResourceOutput) ToGetFirewallsRecordResourceOutput() GetFirewallsRecordResourceOutput {
	return o
}

func (o GetFirewallsRecordResourceOutput) ToGetFirewallsRecordResourceOutputWithContext(ctx context.Context) GetFirewallsRecordResourceOutput {
	return o
}

// Service type, which is used by CBC. The value is **hws.service.type.cfw**.
func (o GetFirewallsRecordResourceOutput) CloudServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecordResource) string { return v.CloudServiceType }).(pulumi.StringOutput)
}

// Resource ID.
func (o GetFirewallsRecordResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecordResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Resource quantity.
func (o GetFirewallsRecordResourceOutput) ResourceSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordResource) int { return v.ResourceSize }).(pulumi.IntOutput)
}

// Resource unit name.
func (o GetFirewallsRecordResourceOutput) ResourceSizeMeasureId() pulumi.IntOutput {
	return o.ApplyT(func(v GetFirewallsRecordResource) int { return v.ResourceSizeMeasureId }).(pulumi.IntOutput)
}

// Inventory unit code.
func (o GetFirewallsRecordResourceOutput) ResourceSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecordResource) string { return v.ResourceSpecCode }).(pulumi.StringOutput)
}

// Resource type. The options are as follows:
// + **CFW**: hws.resource.type.cfw;
// + **EIP**: hws.resource.type.cfw.exp.eip;
// + **Bandwidth**: hws.resource.type.cfw.exp.bandwidth;
// + **VPC**: hws.resource.type.cfw.exp.vpc;
// + **Log storage**: hws.resource.type.cfw.exp.logaudit;
func (o GetFirewallsRecordResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallsRecordResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetFirewallsRecordResourceArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallsRecordResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallsRecordResource)(nil)).Elem()
}

func (o GetFirewallsRecordResourceArrayOutput) ToGetFirewallsRecordResourceArrayOutput() GetFirewallsRecordResourceArrayOutput {
	return o
}

func (o GetFirewallsRecordResourceArrayOutput) ToGetFirewallsRecordResourceArrayOutputWithContext(ctx context.Context) GetFirewallsRecordResourceArrayOutput {
	return o
}

func (o GetFirewallsRecordResourceArrayOutput) Index(i pulumi.IntInput) GetFirewallsRecordResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallsRecordResource {
		return vs[0].([]GetFirewallsRecordResource)[vs[1].(int)]
	}).(GetFirewallsRecordResourceOutput)
}

type GetFlowLogsRecord struct {
	// Specifies the application protocol.
	App string `pulumi:"app"`
	// The flow log bytes.
	Bytes float64 `pulumi:"bytes"`
	// Specifies the direction. The values can be **out2in** and **in2out**.
	Direction string `pulumi:"direction"`
	// The destination city ID.
	DstCityId string `pulumi:"dstCityId"`
	// Specifies the destination city name.
	DstCityName string `pulumi:"dstCityName"`
	// The destination host.
	DstHost string `pulumi:"dstHost"`
	// Specifies the destination IP address.
	DstIp string `pulumi:"dstIp"`
	// Specifies the destination port.
	DstPort int `pulumi:"dstPort"`
	// The destination province ID.
	DstProvinceId string `pulumi:"dstProvinceId"`
	// Specifies the destination province name.
	DstProvinceName string `pulumi:"dstProvinceName"`
	// The destination region ID.
	DstRegionId string `pulumi:"dstRegionId"`
	// Specifies the destination region name.
	DstRegionName string `pulumi:"dstRegionName"`
	// Specifies the end time. The time is in UTC.
	// The format is **yyyy-MM-dd HH:mm:ss**.
	EndTime string `pulumi:"endTime"`
	// The document ID.
	LogId string `pulumi:"logId"`
	// The number of packets.
	Packets int `pulumi:"packets"`
	// The protocol type.
	Protocol string `pulumi:"protocol"`
	// The source city ID.
	SrcCityId string `pulumi:"srcCityId"`
	// Specifies the source city name.
	SrcCityName string `pulumi:"srcCityName"`
	// Specifies the source IP address.
	SrcIp string `pulumi:"srcIp"`
	// Specifies the source port.
	SrcPort int `pulumi:"srcPort"`
	// The source province ID.
	SrcProvinceId string `pulumi:"srcProvinceId"`
	// Specifies the source province name.
	SrcProvinceName string `pulumi:"srcProvinceName"`
	// The source region ID.
	SrcRegionId string `pulumi:"srcRegionId"`
	// Specifies the source region name.
	SrcRegionName string `pulumi:"srcRegionName"`
	// Specifies the start time. The time is in UTC.
	// The format is **yyyy-MM-dd HH:mm:ss**.
	StartTime string `pulumi:"startTime"`
}

// GetFlowLogsRecordInput is an input type that accepts GetFlowLogsRecordArgs and GetFlowLogsRecordOutput values.
// You can construct a concrete instance of `GetFlowLogsRecordInput` via:
//
//	GetFlowLogsRecordArgs{...}
type GetFlowLogsRecordInput interface {
	pulumi.Input

	ToGetFlowLogsRecordOutput() GetFlowLogsRecordOutput
	ToGetFlowLogsRecordOutputWithContext(context.Context) GetFlowLogsRecordOutput
}

type GetFlowLogsRecordArgs struct {
	// Specifies the application protocol.
	App pulumi.StringInput `pulumi:"app"`
	// The flow log bytes.
	Bytes pulumi.Float64Input `pulumi:"bytes"`
	// Specifies the direction. The values can be **out2in** and **in2out**.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The destination city ID.
	DstCityId pulumi.StringInput `pulumi:"dstCityId"`
	// Specifies the destination city name.
	DstCityName pulumi.StringInput `pulumi:"dstCityName"`
	// The destination host.
	DstHost pulumi.StringInput `pulumi:"dstHost"`
	// Specifies the destination IP address.
	DstIp pulumi.StringInput `pulumi:"dstIp"`
	// Specifies the destination port.
	DstPort pulumi.IntInput `pulumi:"dstPort"`
	// The destination province ID.
	DstProvinceId pulumi.StringInput `pulumi:"dstProvinceId"`
	// Specifies the destination province name.
	DstProvinceName pulumi.StringInput `pulumi:"dstProvinceName"`
	// The destination region ID.
	DstRegionId pulumi.StringInput `pulumi:"dstRegionId"`
	// Specifies the destination region name.
	DstRegionName pulumi.StringInput `pulumi:"dstRegionName"`
	// Specifies the end time. The time is in UTC.
	// The format is **yyyy-MM-dd HH:mm:ss**.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The document ID.
	LogId pulumi.StringInput `pulumi:"logId"`
	// The number of packets.
	Packets pulumi.IntInput `pulumi:"packets"`
	// The protocol type.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source city ID.
	SrcCityId pulumi.StringInput `pulumi:"srcCityId"`
	// Specifies the source city name.
	SrcCityName pulumi.StringInput `pulumi:"srcCityName"`
	// Specifies the source IP address.
	SrcIp pulumi.StringInput `pulumi:"srcIp"`
	// Specifies the source port.
	SrcPort pulumi.IntInput `pulumi:"srcPort"`
	// The source province ID.
	SrcProvinceId pulumi.StringInput `pulumi:"srcProvinceId"`
	// Specifies the source province name.
	SrcProvinceName pulumi.StringInput `pulumi:"srcProvinceName"`
	// The source region ID.
	SrcRegionId pulumi.StringInput `pulumi:"srcRegionId"`
	// Specifies the source region name.
	SrcRegionName pulumi.StringInput `pulumi:"srcRegionName"`
	// Specifies the start time. The time is in UTC.
	// The format is **yyyy-MM-dd HH:mm:ss**.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetFlowLogsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsRecord)(nil)).Elem()
}

func (i GetFlowLogsRecordArgs) ToGetFlowLogsRecordOutput() GetFlowLogsRecordOutput {
	return i.ToGetFlowLogsRecordOutputWithContext(context.Background())
}

func (i GetFlowLogsRecordArgs) ToGetFlowLogsRecordOutputWithContext(ctx context.Context) GetFlowLogsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsRecordOutput)
}

// GetFlowLogsRecordArrayInput is an input type that accepts GetFlowLogsRecordArray and GetFlowLogsRecordArrayOutput values.
// You can construct a concrete instance of `GetFlowLogsRecordArrayInput` via:
//
//	GetFlowLogsRecordArray{ GetFlowLogsRecordArgs{...} }
type GetFlowLogsRecordArrayInput interface {
	pulumi.Input

	ToGetFlowLogsRecordArrayOutput() GetFlowLogsRecordArrayOutput
	ToGetFlowLogsRecordArrayOutputWithContext(context.Context) GetFlowLogsRecordArrayOutput
}

type GetFlowLogsRecordArray []GetFlowLogsRecordInput

func (GetFlowLogsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsRecord)(nil)).Elem()
}

func (i GetFlowLogsRecordArray) ToGetFlowLogsRecordArrayOutput() GetFlowLogsRecordArrayOutput {
	return i.ToGetFlowLogsRecordArrayOutputWithContext(context.Background())
}

func (i GetFlowLogsRecordArray) ToGetFlowLogsRecordArrayOutputWithContext(ctx context.Context) GetFlowLogsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsRecordArrayOutput)
}

type GetFlowLogsRecordOutput struct{ *pulumi.OutputState }

func (GetFlowLogsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsRecord)(nil)).Elem()
}

func (o GetFlowLogsRecordOutput) ToGetFlowLogsRecordOutput() GetFlowLogsRecordOutput {
	return o
}

func (o GetFlowLogsRecordOutput) ToGetFlowLogsRecordOutputWithContext(ctx context.Context) GetFlowLogsRecordOutput {
	return o
}

// Specifies the application protocol.
func (o GetFlowLogsRecordOutput) App() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.App }).(pulumi.StringOutput)
}

// The flow log bytes.
func (o GetFlowLogsRecordOutput) Bytes() pulumi.Float64Output {
	return o.ApplyT(func(v GetFlowLogsRecord) float64 { return v.Bytes }).(pulumi.Float64Output)
}

// Specifies the direction. The values can be **out2in** and **in2out**.
func (o GetFlowLogsRecordOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.Direction }).(pulumi.StringOutput)
}

// The destination city ID.
func (o GetFlowLogsRecordOutput) DstCityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstCityId }).(pulumi.StringOutput)
}

// Specifies the destination city name.
func (o GetFlowLogsRecordOutput) DstCityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstCityName }).(pulumi.StringOutput)
}

// The destination host.
func (o GetFlowLogsRecordOutput) DstHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstHost }).(pulumi.StringOutput)
}

// Specifies the destination IP address.
func (o GetFlowLogsRecordOutput) DstIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstIp }).(pulumi.StringOutput)
}

// Specifies the destination port.
func (o GetFlowLogsRecordOutput) DstPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) int { return v.DstPort }).(pulumi.IntOutput)
}

// The destination province ID.
func (o GetFlowLogsRecordOutput) DstProvinceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstProvinceId }).(pulumi.StringOutput)
}

// Specifies the destination province name.
func (o GetFlowLogsRecordOutput) DstProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstProvinceName }).(pulumi.StringOutput)
}

// The destination region ID.
func (o GetFlowLogsRecordOutput) DstRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstRegionId }).(pulumi.StringOutput)
}

// Specifies the destination region name.
func (o GetFlowLogsRecordOutput) DstRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.DstRegionName }).(pulumi.StringOutput)
}

// Specifies the end time. The time is in UTC.
// The format is **yyyy-MM-dd HH:mm:ss**.
func (o GetFlowLogsRecordOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.EndTime }).(pulumi.StringOutput)
}

// The document ID.
func (o GetFlowLogsRecordOutput) LogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.LogId }).(pulumi.StringOutput)
}

// The number of packets.
func (o GetFlowLogsRecordOutput) Packets() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) int { return v.Packets }).(pulumi.IntOutput)
}

// The protocol type.
func (o GetFlowLogsRecordOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source city ID.
func (o GetFlowLogsRecordOutput) SrcCityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcCityId }).(pulumi.StringOutput)
}

// Specifies the source city name.
func (o GetFlowLogsRecordOutput) SrcCityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcCityName }).(pulumi.StringOutput)
}

// Specifies the source IP address.
func (o GetFlowLogsRecordOutput) SrcIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcIp }).(pulumi.StringOutput)
}

// Specifies the source port.
func (o GetFlowLogsRecordOutput) SrcPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) int { return v.SrcPort }).(pulumi.IntOutput)
}

// The source province ID.
func (o GetFlowLogsRecordOutput) SrcProvinceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcProvinceId }).(pulumi.StringOutput)
}

// Specifies the source province name.
func (o GetFlowLogsRecordOutput) SrcProvinceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcProvinceName }).(pulumi.StringOutput)
}

// The source region ID.
func (o GetFlowLogsRecordOutput) SrcRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcRegionId }).(pulumi.StringOutput)
}

// Specifies the source region name.
func (o GetFlowLogsRecordOutput) SrcRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.SrcRegionName }).(pulumi.StringOutput)
}

// Specifies the start time. The time is in UTC.
// The format is **yyyy-MM-dd HH:mm:ss**.
func (o GetFlowLogsRecordOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsRecord) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetFlowLogsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetFlowLogsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsRecord)(nil)).Elem()
}

func (o GetFlowLogsRecordArrayOutput) ToGetFlowLogsRecordArrayOutput() GetFlowLogsRecordArrayOutput {
	return o
}

func (o GetFlowLogsRecordArrayOutput) ToGetFlowLogsRecordArrayOutputWithContext(ctx context.Context) GetFlowLogsRecordArrayOutput {
	return o
}

func (o GetFlowLogsRecordArrayOutput) Index(i pulumi.IntInput) GetFlowLogsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowLogsRecord {
		return vs[0].([]GetFlowLogsRecord)[vs[1].(int)]
	}).(GetFlowLogsRecordOutput)
}

type GetIpsCustomRulesRecord struct {
	// The action.
	Action int `pulumi:"action"`
	// Specifies the affected OS.
	// The valid values are as follows:
	// + **1**: Windows;
	// + **2**: Linux;
	// + **3**: FreeBSD;
	// + **4**: Solaris;
	// + **5**: Other Unix;
	// + **6**: Network device;
	// + **7**: MAC OS;
	// + **8**: IOS;
	// + **9**: Android;
	// + **10**: Other;
	AffectedOs int `pulumi:"affectedOs"`
	// Specifies the attack type.
	// The valid values are as follows:
	// + **1**: access control;
	// + **2**: vulnerability scan;
	// + **3**: email phishing;
	// + **4**: vulnerability exploits;
	// + **5**: web attack;
	// + **6**: password cracking;
	// + **7**: hijacking attack;
	// + **8**: protocol exception;
	// + **9**: trojan;
	// + **10**: worm;
	// + **11**: buffer overflow;
	// + **12**: hacker tool;
	// + **13**: spyware;
	// + **14**: DDoS flood;
	// + **15**: application-layer DDoS attack;
	// + **16**: other suspicious behavior;
	// + **17**: suspicious DNS activity;
	// + **18**: phishing;
	// + **19**: spam;
	AttackType int `pulumi:"attackType"`
	// The rule status.
	ConfigStatus int `pulumi:"configStatus"`
	// The content storage in JSON format.
	Content string `pulumi:"content"`
	// The destination port type.
	DstPortType int `pulumi:"dstPortType"`
	// The destination port.
	DstPorts string `pulumi:"dstPorts"`
	// The firewall cluster ID.
	GroupId string `pulumi:"groupId"`
	// The ID of a custom IPS rule in CFW.
	IpsCfwId string `pulumi:"ipsCfwId"`
	// The ID of a rule in Hillstone.
	IpsId string `pulumi:"ipsId"`
	// Specifies the IPS custom rule name.
	IpsName string `pulumi:"ipsName"`
	// Specifies the protocol.
	// The valid values are as follows:
	// + **1**: FTP;
	// + **2**: TELNET;
	// + **3**: SMTP;
	// + **4**: DNS-TCP;
	// + **5**: DNS-UDP;
	// + **6**: DHCP;
	// + **7**: TFTP;
	// + **8**: FINGER;
	// + **9**: HTTP;
	// + **10**: POP3;
	// + **11**: SUNRPC-TCP;
	// + **12**: SUNRPC-UDP;
	// + **13**: NNTP;
	// + **14**: MSRPC-TCP;
	// + **15**: MSRPC-UDP;
	// + **16**: NETBIOS-NAME_TCP;
	// + **17**: NETBIOS-NAME_UDP;
	// + **18**: NETBIOS-SMB;
	// + **19**: NETBIOS-DATAGRAM;
	// + **20**: IMAP4;
	// + **21**: SNMP;
	// + **22**: LDAP;
	// + **23**: MSSQL;
	// + **24**: ORACLE;
	// + **25**: MYSQL;
	// + **26**: VOIP-SIP-TCP;
	// + **27**: VOIP-SIP-UDP;
	// + **28**: VOIP-H245;
	// + **29**: VOIP-Q931;
	// + **30**: OTHER-TCP;
	// + **31**: OTHER-UDP;
	Protocol int `pulumi:"protocol"`
	// Specifies the severity.
	// The valid values are as follows:
	// + **0**: critical;
	// + **1**: high;
	// + **2**: medium;
	// + **3**: low;
	Severity int `pulumi:"severity"`
	// Specifies the affected software.
	// The valid values are as follows:
	// + **1**: ADOBE;
	// + **2**: APACHE;
	// + **3**: APPLE;
	// + **4**: CA;
	// + **5**: CISCO;
	// + **6**: GOOGLE CHROME;
	// + **7**: HP;
	// + **8**: IBM;
	// + **9**: IE;
	// + **10**: IIS;
	// + **11**: MCAFEE;
	// + **12**: MEDIAPLAYER;
	// + **13**: MICROSOFT.NET;
	// + **14**: MICROSOFT EDGE;
	// + **15**: MICROSOFT EXCHANGE;
	// + **16**: MICROSOFT OFFICE;
	// + **17**: MICROSOFT OUTLOOK;
	// + **18**: MICROSOFT SHAREPOINT;
	// + **19**: MICROSOFT WINDOWS;
	// + **20**: MOZILLA;
	// + **21**: MSSQL;
	// + **22**: MYSQL;
	// + **23**: NOVELL;
	// + **24**: ORACLE;
	// + **25**: SAMBA;
	// + **26**: SAMSUNG;
	// + **27**: SAP;
	// + **28**: SCADA;
	// + **29**: SQUID;
	// + **30**: SUN;
	// + **31**: SYMANTEC;
	// + **32**: TREND MICRO;
	// + **33**: VMWARE;
	// + **34**: WORDPRESS;
	// + **35**: OTHER;
	Software int `pulumi:"software"`
	// The source port type.
	SrcPortType int `pulumi:"srcPortType"`
	// The source port.
	SrcPorts string `pulumi:"srcPorts"`
}

// GetIpsCustomRulesRecordInput is an input type that accepts GetIpsCustomRulesRecordArgs and GetIpsCustomRulesRecordOutput values.
// You can construct a concrete instance of `GetIpsCustomRulesRecordInput` via:
//
//	GetIpsCustomRulesRecordArgs{...}
type GetIpsCustomRulesRecordInput interface {
	pulumi.Input

	ToGetIpsCustomRulesRecordOutput() GetIpsCustomRulesRecordOutput
	ToGetIpsCustomRulesRecordOutputWithContext(context.Context) GetIpsCustomRulesRecordOutput
}

type GetIpsCustomRulesRecordArgs struct {
	// The action.
	Action pulumi.IntInput `pulumi:"action"`
	// Specifies the affected OS.
	// The valid values are as follows:
	// + **1**: Windows;
	// + **2**: Linux;
	// + **3**: FreeBSD;
	// + **4**: Solaris;
	// + **5**: Other Unix;
	// + **6**: Network device;
	// + **7**: MAC OS;
	// + **8**: IOS;
	// + **9**: Android;
	// + **10**: Other;
	AffectedOs pulumi.IntInput `pulumi:"affectedOs"`
	// Specifies the attack type.
	// The valid values are as follows:
	// + **1**: access control;
	// + **2**: vulnerability scan;
	// + **3**: email phishing;
	// + **4**: vulnerability exploits;
	// + **5**: web attack;
	// + **6**: password cracking;
	// + **7**: hijacking attack;
	// + **8**: protocol exception;
	// + **9**: trojan;
	// + **10**: worm;
	// + **11**: buffer overflow;
	// + **12**: hacker tool;
	// + **13**: spyware;
	// + **14**: DDoS flood;
	// + **15**: application-layer DDoS attack;
	// + **16**: other suspicious behavior;
	// + **17**: suspicious DNS activity;
	// + **18**: phishing;
	// + **19**: spam;
	AttackType pulumi.IntInput `pulumi:"attackType"`
	// The rule status.
	ConfigStatus pulumi.IntInput `pulumi:"configStatus"`
	// The content storage in JSON format.
	Content pulumi.StringInput `pulumi:"content"`
	// The destination port type.
	DstPortType pulumi.IntInput `pulumi:"dstPortType"`
	// The destination port.
	DstPorts pulumi.StringInput `pulumi:"dstPorts"`
	// The firewall cluster ID.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of a custom IPS rule in CFW.
	IpsCfwId pulumi.StringInput `pulumi:"ipsCfwId"`
	// The ID of a rule in Hillstone.
	IpsId pulumi.StringInput `pulumi:"ipsId"`
	// Specifies the IPS custom rule name.
	IpsName pulumi.StringInput `pulumi:"ipsName"`
	// Specifies the protocol.
	// The valid values are as follows:
	// + **1**: FTP;
	// + **2**: TELNET;
	// + **3**: SMTP;
	// + **4**: DNS-TCP;
	// + **5**: DNS-UDP;
	// + **6**: DHCP;
	// + **7**: TFTP;
	// + **8**: FINGER;
	// + **9**: HTTP;
	// + **10**: POP3;
	// + **11**: SUNRPC-TCP;
	// + **12**: SUNRPC-UDP;
	// + **13**: NNTP;
	// + **14**: MSRPC-TCP;
	// + **15**: MSRPC-UDP;
	// + **16**: NETBIOS-NAME_TCP;
	// + **17**: NETBIOS-NAME_UDP;
	// + **18**: NETBIOS-SMB;
	// + **19**: NETBIOS-DATAGRAM;
	// + **20**: IMAP4;
	// + **21**: SNMP;
	// + **22**: LDAP;
	// + **23**: MSSQL;
	// + **24**: ORACLE;
	// + **25**: MYSQL;
	// + **26**: VOIP-SIP-TCP;
	// + **27**: VOIP-SIP-UDP;
	// + **28**: VOIP-H245;
	// + **29**: VOIP-Q931;
	// + **30**: OTHER-TCP;
	// + **31**: OTHER-UDP;
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Specifies the severity.
	// The valid values are as follows:
	// + **0**: critical;
	// + **1**: high;
	// + **2**: medium;
	// + **3**: low;
	Severity pulumi.IntInput `pulumi:"severity"`
	// Specifies the affected software.
	// The valid values are as follows:
	// + **1**: ADOBE;
	// + **2**: APACHE;
	// + **3**: APPLE;
	// + **4**: CA;
	// + **5**: CISCO;
	// + **6**: GOOGLE CHROME;
	// + **7**: HP;
	// + **8**: IBM;
	// + **9**: IE;
	// + **10**: IIS;
	// + **11**: MCAFEE;
	// + **12**: MEDIAPLAYER;
	// + **13**: MICROSOFT.NET;
	// + **14**: MICROSOFT EDGE;
	// + **15**: MICROSOFT EXCHANGE;
	// + **16**: MICROSOFT OFFICE;
	// + **17**: MICROSOFT OUTLOOK;
	// + **18**: MICROSOFT SHAREPOINT;
	// + **19**: MICROSOFT WINDOWS;
	// + **20**: MOZILLA;
	// + **21**: MSSQL;
	// + **22**: MYSQL;
	// + **23**: NOVELL;
	// + **24**: ORACLE;
	// + **25**: SAMBA;
	// + **26**: SAMSUNG;
	// + **27**: SAP;
	// + **28**: SCADA;
	// + **29**: SQUID;
	// + **30**: SUN;
	// + **31**: SYMANTEC;
	// + **32**: TREND MICRO;
	// + **33**: VMWARE;
	// + **34**: WORDPRESS;
	// + **35**: OTHER;
	Software pulumi.IntInput `pulumi:"software"`
	// The source port type.
	SrcPortType pulumi.IntInput `pulumi:"srcPortType"`
	// The source port.
	SrcPorts pulumi.StringInput `pulumi:"srcPorts"`
}

func (GetIpsCustomRulesRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsCustomRulesRecord)(nil)).Elem()
}

func (i GetIpsCustomRulesRecordArgs) ToGetIpsCustomRulesRecordOutput() GetIpsCustomRulesRecordOutput {
	return i.ToGetIpsCustomRulesRecordOutputWithContext(context.Background())
}

func (i GetIpsCustomRulesRecordArgs) ToGetIpsCustomRulesRecordOutputWithContext(ctx context.Context) GetIpsCustomRulesRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsCustomRulesRecordOutput)
}

// GetIpsCustomRulesRecordArrayInput is an input type that accepts GetIpsCustomRulesRecordArray and GetIpsCustomRulesRecordArrayOutput values.
// You can construct a concrete instance of `GetIpsCustomRulesRecordArrayInput` via:
//
//	GetIpsCustomRulesRecordArray{ GetIpsCustomRulesRecordArgs{...} }
type GetIpsCustomRulesRecordArrayInput interface {
	pulumi.Input

	ToGetIpsCustomRulesRecordArrayOutput() GetIpsCustomRulesRecordArrayOutput
	ToGetIpsCustomRulesRecordArrayOutputWithContext(context.Context) GetIpsCustomRulesRecordArrayOutput
}

type GetIpsCustomRulesRecordArray []GetIpsCustomRulesRecordInput

func (GetIpsCustomRulesRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsCustomRulesRecord)(nil)).Elem()
}

func (i GetIpsCustomRulesRecordArray) ToGetIpsCustomRulesRecordArrayOutput() GetIpsCustomRulesRecordArrayOutput {
	return i.ToGetIpsCustomRulesRecordArrayOutputWithContext(context.Background())
}

func (i GetIpsCustomRulesRecordArray) ToGetIpsCustomRulesRecordArrayOutputWithContext(ctx context.Context) GetIpsCustomRulesRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsCustomRulesRecordArrayOutput)
}

type GetIpsCustomRulesRecordOutput struct{ *pulumi.OutputState }

func (GetIpsCustomRulesRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsCustomRulesRecord)(nil)).Elem()
}

func (o GetIpsCustomRulesRecordOutput) ToGetIpsCustomRulesRecordOutput() GetIpsCustomRulesRecordOutput {
	return o
}

func (o GetIpsCustomRulesRecordOutput) ToGetIpsCustomRulesRecordOutputWithContext(ctx context.Context) GetIpsCustomRulesRecordOutput {
	return o
}

// The action.
func (o GetIpsCustomRulesRecordOutput) Action() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.Action }).(pulumi.IntOutput)
}

// Specifies the affected OS.
// The valid values are as follows:
// + **1**: Windows;
// + **2**: Linux;
// + **3**: FreeBSD;
// + **4**: Solaris;
// + **5**: Other Unix;
// + **6**: Network device;
// + **7**: MAC OS;
// + **8**: IOS;
// + **9**: Android;
// + **10**: Other;
func (o GetIpsCustomRulesRecordOutput) AffectedOs() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.AffectedOs }).(pulumi.IntOutput)
}

// Specifies the attack type.
// The valid values are as follows:
// + **1**: access control;
// + **2**: vulnerability scan;
// + **3**: email phishing;
// + **4**: vulnerability exploits;
// + **5**: web attack;
// + **6**: password cracking;
// + **7**: hijacking attack;
// + **8**: protocol exception;
// + **9**: trojan;
// + **10**: worm;
// + **11**: buffer overflow;
// + **12**: hacker tool;
// + **13**: spyware;
// + **14**: DDoS flood;
// + **15**: application-layer DDoS attack;
// + **16**: other suspicious behavior;
// + **17**: suspicious DNS activity;
// + **18**: phishing;
// + **19**: spam;
func (o GetIpsCustomRulesRecordOutput) AttackType() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.AttackType }).(pulumi.IntOutput)
}

// The rule status.
func (o GetIpsCustomRulesRecordOutput) ConfigStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.ConfigStatus }).(pulumi.IntOutput)
}

// The content storage in JSON format.
func (o GetIpsCustomRulesRecordOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.Content }).(pulumi.StringOutput)
}

// The destination port type.
func (o GetIpsCustomRulesRecordOutput) DstPortType() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.DstPortType }).(pulumi.IntOutput)
}

// The destination port.
func (o GetIpsCustomRulesRecordOutput) DstPorts() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.DstPorts }).(pulumi.StringOutput)
}

// The firewall cluster ID.
func (o GetIpsCustomRulesRecordOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of a custom IPS rule in CFW.
func (o GetIpsCustomRulesRecordOutput) IpsCfwId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.IpsCfwId }).(pulumi.StringOutput)
}

// The ID of a rule in Hillstone.
func (o GetIpsCustomRulesRecordOutput) IpsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.IpsId }).(pulumi.StringOutput)
}

// Specifies the IPS custom rule name.
func (o GetIpsCustomRulesRecordOutput) IpsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.IpsName }).(pulumi.StringOutput)
}

// Specifies the protocol.
// The valid values are as follows:
// + **1**: FTP;
// + **2**: TELNET;
// + **3**: SMTP;
// + **4**: DNS-TCP;
// + **5**: DNS-UDP;
// + **6**: DHCP;
// + **7**: TFTP;
// + **8**: FINGER;
// + **9**: HTTP;
// + **10**: POP3;
// + **11**: SUNRPC-TCP;
// + **12**: SUNRPC-UDP;
// + **13**: NNTP;
// + **14**: MSRPC-TCP;
// + **15**: MSRPC-UDP;
// + **16**: NETBIOS-NAME_TCP;
// + **17**: NETBIOS-NAME_UDP;
// + **18**: NETBIOS-SMB;
// + **19**: NETBIOS-DATAGRAM;
// + **20**: IMAP4;
// + **21**: SNMP;
// + **22**: LDAP;
// + **23**: MSSQL;
// + **24**: ORACLE;
// + **25**: MYSQL;
// + **26**: VOIP-SIP-TCP;
// + **27**: VOIP-SIP-UDP;
// + **28**: VOIP-H245;
// + **29**: VOIP-Q931;
// + **30**: OTHER-TCP;
// + **31**: OTHER-UDP;
func (o GetIpsCustomRulesRecordOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.Protocol }).(pulumi.IntOutput)
}

// Specifies the severity.
// The valid values are as follows:
// + **0**: critical;
// + **1**: high;
// + **2**: medium;
// + **3**: low;
func (o GetIpsCustomRulesRecordOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.Severity }).(pulumi.IntOutput)
}

// Specifies the affected software.
// The valid values are as follows:
// + **1**: ADOBE;
// + **2**: APACHE;
// + **3**: APPLE;
// + **4**: CA;
// + **5**: CISCO;
// + **6**: GOOGLE CHROME;
// + **7**: HP;
// + **8**: IBM;
// + **9**: IE;
// + **10**: IIS;
// + **11**: MCAFEE;
// + **12**: MEDIAPLAYER;
// + **13**: MICROSOFT.NET;
// + **14**: MICROSOFT EDGE;
// + **15**: MICROSOFT EXCHANGE;
// + **16**: MICROSOFT OFFICE;
// + **17**: MICROSOFT OUTLOOK;
// + **18**: MICROSOFT SHAREPOINT;
// + **19**: MICROSOFT WINDOWS;
// + **20**: MOZILLA;
// + **21**: MSSQL;
// + **22**: MYSQL;
// + **23**: NOVELL;
// + **24**: ORACLE;
// + **25**: SAMBA;
// + **26**: SAMSUNG;
// + **27**: SAP;
// + **28**: SCADA;
// + **29**: SQUID;
// + **30**: SUN;
// + **31**: SYMANTEC;
// + **32**: TREND MICRO;
// + **33**: VMWARE;
// + **34**: WORDPRESS;
// + **35**: OTHER;
func (o GetIpsCustomRulesRecordOutput) Software() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.Software }).(pulumi.IntOutput)
}

// The source port type.
func (o GetIpsCustomRulesRecordOutput) SrcPortType() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) int { return v.SrcPortType }).(pulumi.IntOutput)
}

// The source port.
func (o GetIpsCustomRulesRecordOutput) SrcPorts() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsCustomRulesRecord) string { return v.SrcPorts }).(pulumi.StringOutput)
}

type GetIpsCustomRulesRecordArrayOutput struct{ *pulumi.OutputState }

func (GetIpsCustomRulesRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsCustomRulesRecord)(nil)).Elem()
}

func (o GetIpsCustomRulesRecordArrayOutput) ToGetIpsCustomRulesRecordArrayOutput() GetIpsCustomRulesRecordArrayOutput {
	return o
}

func (o GetIpsCustomRulesRecordArrayOutput) ToGetIpsCustomRulesRecordArrayOutputWithContext(ctx context.Context) GetIpsCustomRulesRecordArrayOutput {
	return o
}

func (o GetIpsCustomRulesRecordArrayOutput) Index(i pulumi.IntInput) GetIpsCustomRulesRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpsCustomRulesRecord {
		return vs[0].([]GetIpsCustomRulesRecord)[vs[1].(int)]
	}).(GetIpsCustomRulesRecordOutput)
}

type GetIpsRuleDetailsData struct {
	// The IPS type.
	IpsType int `pulumi:"ipsType"`
	// The IPS version.
	IpsVersion string `pulumi:"ipsVersion"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
}

// GetIpsRuleDetailsDataInput is an input type that accepts GetIpsRuleDetailsDataArgs and GetIpsRuleDetailsDataOutput values.
// You can construct a concrete instance of `GetIpsRuleDetailsDataInput` via:
//
//	GetIpsRuleDetailsDataArgs{...}
type GetIpsRuleDetailsDataInput interface {
	pulumi.Input

	ToGetIpsRuleDetailsDataOutput() GetIpsRuleDetailsDataOutput
	ToGetIpsRuleDetailsDataOutputWithContext(context.Context) GetIpsRuleDetailsDataOutput
}

type GetIpsRuleDetailsDataArgs struct {
	// The IPS type.
	IpsType pulumi.IntInput `pulumi:"ipsType"`
	// The IPS version.
	IpsVersion pulumi.StringInput `pulumi:"ipsVersion"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetIpsRuleDetailsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsRuleDetailsData)(nil)).Elem()
}

func (i GetIpsRuleDetailsDataArgs) ToGetIpsRuleDetailsDataOutput() GetIpsRuleDetailsDataOutput {
	return i.ToGetIpsRuleDetailsDataOutputWithContext(context.Background())
}

func (i GetIpsRuleDetailsDataArgs) ToGetIpsRuleDetailsDataOutputWithContext(ctx context.Context) GetIpsRuleDetailsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsRuleDetailsDataOutput)
}

// GetIpsRuleDetailsDataArrayInput is an input type that accepts GetIpsRuleDetailsDataArray and GetIpsRuleDetailsDataArrayOutput values.
// You can construct a concrete instance of `GetIpsRuleDetailsDataArrayInput` via:
//
//	GetIpsRuleDetailsDataArray{ GetIpsRuleDetailsDataArgs{...} }
type GetIpsRuleDetailsDataArrayInput interface {
	pulumi.Input

	ToGetIpsRuleDetailsDataArrayOutput() GetIpsRuleDetailsDataArrayOutput
	ToGetIpsRuleDetailsDataArrayOutputWithContext(context.Context) GetIpsRuleDetailsDataArrayOutput
}

type GetIpsRuleDetailsDataArray []GetIpsRuleDetailsDataInput

func (GetIpsRuleDetailsDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsRuleDetailsData)(nil)).Elem()
}

func (i GetIpsRuleDetailsDataArray) ToGetIpsRuleDetailsDataArrayOutput() GetIpsRuleDetailsDataArrayOutput {
	return i.ToGetIpsRuleDetailsDataArrayOutputWithContext(context.Background())
}

func (i GetIpsRuleDetailsDataArray) ToGetIpsRuleDetailsDataArrayOutputWithContext(ctx context.Context) GetIpsRuleDetailsDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsRuleDetailsDataArrayOutput)
}

type GetIpsRuleDetailsDataOutput struct{ *pulumi.OutputState }

func (GetIpsRuleDetailsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsRuleDetailsData)(nil)).Elem()
}

func (o GetIpsRuleDetailsDataOutput) ToGetIpsRuleDetailsDataOutput() GetIpsRuleDetailsDataOutput {
	return o
}

func (o GetIpsRuleDetailsDataOutput) ToGetIpsRuleDetailsDataOutputWithContext(ctx context.Context) GetIpsRuleDetailsDataOutput {
	return o
}

// The IPS type.
func (o GetIpsRuleDetailsDataOutput) IpsType() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpsRuleDetailsData) int { return v.IpsType }).(pulumi.IntOutput)
}

// The IPS version.
func (o GetIpsRuleDetailsDataOutput) IpsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRuleDetailsData) string { return v.IpsVersion }).(pulumi.StringOutput)
}

// The update time.
func (o GetIpsRuleDetailsDataOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRuleDetailsData) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetIpsRuleDetailsDataArrayOutput struct{ *pulumi.OutputState }

func (GetIpsRuleDetailsDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsRuleDetailsData)(nil)).Elem()
}

func (o GetIpsRuleDetailsDataArrayOutput) ToGetIpsRuleDetailsDataArrayOutput() GetIpsRuleDetailsDataArrayOutput {
	return o
}

func (o GetIpsRuleDetailsDataArrayOutput) ToGetIpsRuleDetailsDataArrayOutputWithContext(ctx context.Context) GetIpsRuleDetailsDataArrayOutput {
	return o
}

func (o GetIpsRuleDetailsDataArrayOutput) Index(i pulumi.IntInput) GetIpsRuleDetailsDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpsRuleDetailsData {
		return vs[0].([]GetIpsRuleDetailsData)[vs[1].(int)]
	}).(GetIpsRuleDetailsDataOutput)
}

type GetIpsRulesRecord struct {
	// The application affected by the rule.
	AffectedApplication string `pulumi:"affectedApplication"`
	// The creation time.
	CreateTime string `pulumi:"createTime"`
	// The default status of the IPS rule.
	DefaultStatus string `pulumi:"defaultStatus"`
	// The CVE.
	IpsCve string `pulumi:"ipsCve"`
	// The IPS rule group.
	IpsGroup string `pulumi:"ipsGroup"`
	// Specifies the IPS rule ID.
	IpsId string `pulumi:"ipsId"`
	// The risk level.
	IpsLevel string `pulumi:"ipsLevel"`
	// The IPS rule name.
	IpsName string `pulumi:"ipsName"`
	// The IPS rule type.
	IpsRulesType string `pulumi:"ipsRulesType"`
	// Specifies the IPS rule status.
	// The valid value can be **OBSERVE**, **ENABLE**, or **CLOSE**.
	IpsStatus string `pulumi:"ipsStatus"`
}

// GetIpsRulesRecordInput is an input type that accepts GetIpsRulesRecordArgs and GetIpsRulesRecordOutput values.
// You can construct a concrete instance of `GetIpsRulesRecordInput` via:
//
//	GetIpsRulesRecordArgs{...}
type GetIpsRulesRecordInput interface {
	pulumi.Input

	ToGetIpsRulesRecordOutput() GetIpsRulesRecordOutput
	ToGetIpsRulesRecordOutputWithContext(context.Context) GetIpsRulesRecordOutput
}

type GetIpsRulesRecordArgs struct {
	// The application affected by the rule.
	AffectedApplication pulumi.StringInput `pulumi:"affectedApplication"`
	// The creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The default status of the IPS rule.
	DefaultStatus pulumi.StringInput `pulumi:"defaultStatus"`
	// The CVE.
	IpsCve pulumi.StringInput `pulumi:"ipsCve"`
	// The IPS rule group.
	IpsGroup pulumi.StringInput `pulumi:"ipsGroup"`
	// Specifies the IPS rule ID.
	IpsId pulumi.StringInput `pulumi:"ipsId"`
	// The risk level.
	IpsLevel pulumi.StringInput `pulumi:"ipsLevel"`
	// The IPS rule name.
	IpsName pulumi.StringInput `pulumi:"ipsName"`
	// The IPS rule type.
	IpsRulesType pulumi.StringInput `pulumi:"ipsRulesType"`
	// Specifies the IPS rule status.
	// The valid value can be **OBSERVE**, **ENABLE**, or **CLOSE**.
	IpsStatus pulumi.StringInput `pulumi:"ipsStatus"`
}

func (GetIpsRulesRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsRulesRecord)(nil)).Elem()
}

func (i GetIpsRulesRecordArgs) ToGetIpsRulesRecordOutput() GetIpsRulesRecordOutput {
	return i.ToGetIpsRulesRecordOutputWithContext(context.Background())
}

func (i GetIpsRulesRecordArgs) ToGetIpsRulesRecordOutputWithContext(ctx context.Context) GetIpsRulesRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsRulesRecordOutput)
}

// GetIpsRulesRecordArrayInput is an input type that accepts GetIpsRulesRecordArray and GetIpsRulesRecordArrayOutput values.
// You can construct a concrete instance of `GetIpsRulesRecordArrayInput` via:
//
//	GetIpsRulesRecordArray{ GetIpsRulesRecordArgs{...} }
type GetIpsRulesRecordArrayInput interface {
	pulumi.Input

	ToGetIpsRulesRecordArrayOutput() GetIpsRulesRecordArrayOutput
	ToGetIpsRulesRecordArrayOutputWithContext(context.Context) GetIpsRulesRecordArrayOutput
}

type GetIpsRulesRecordArray []GetIpsRulesRecordInput

func (GetIpsRulesRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsRulesRecord)(nil)).Elem()
}

func (i GetIpsRulesRecordArray) ToGetIpsRulesRecordArrayOutput() GetIpsRulesRecordArrayOutput {
	return i.ToGetIpsRulesRecordArrayOutputWithContext(context.Background())
}

func (i GetIpsRulesRecordArray) ToGetIpsRulesRecordArrayOutputWithContext(ctx context.Context) GetIpsRulesRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpsRulesRecordArrayOutput)
}

type GetIpsRulesRecordOutput struct{ *pulumi.OutputState }

func (GetIpsRulesRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsRulesRecord)(nil)).Elem()
}

func (o GetIpsRulesRecordOutput) ToGetIpsRulesRecordOutput() GetIpsRulesRecordOutput {
	return o
}

func (o GetIpsRulesRecordOutput) ToGetIpsRulesRecordOutputWithContext(ctx context.Context) GetIpsRulesRecordOutput {
	return o
}

// The application affected by the rule.
func (o GetIpsRulesRecordOutput) AffectedApplication() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.AffectedApplication }).(pulumi.StringOutput)
}

// The creation time.
func (o GetIpsRulesRecordOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The default status of the IPS rule.
func (o GetIpsRulesRecordOutput) DefaultStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.DefaultStatus }).(pulumi.StringOutput)
}

// The CVE.
func (o GetIpsRulesRecordOutput) IpsCve() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsCve }).(pulumi.StringOutput)
}

// The IPS rule group.
func (o GetIpsRulesRecordOutput) IpsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsGroup }).(pulumi.StringOutput)
}

// Specifies the IPS rule ID.
func (o GetIpsRulesRecordOutput) IpsId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsId }).(pulumi.StringOutput)
}

// The risk level.
func (o GetIpsRulesRecordOutput) IpsLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsLevel }).(pulumi.StringOutput)
}

// The IPS rule name.
func (o GetIpsRulesRecordOutput) IpsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsName }).(pulumi.StringOutput)
}

// The IPS rule type.
func (o GetIpsRulesRecordOutput) IpsRulesType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsRulesType }).(pulumi.StringOutput)
}

// Specifies the IPS rule status.
// The valid value can be **OBSERVE**, **ENABLE**, or **CLOSE**.
func (o GetIpsRulesRecordOutput) IpsStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpsRulesRecord) string { return v.IpsStatus }).(pulumi.StringOutput)
}

type GetIpsRulesRecordArrayOutput struct{ *pulumi.OutputState }

func (GetIpsRulesRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpsRulesRecord)(nil)).Elem()
}

func (o GetIpsRulesRecordArrayOutput) ToGetIpsRulesRecordArrayOutput() GetIpsRulesRecordArrayOutput {
	return o
}

func (o GetIpsRulesRecordArrayOutput) ToGetIpsRulesRecordArrayOutputWithContext(ctx context.Context) GetIpsRulesRecordArrayOutput {
	return o
}

func (o GetIpsRulesRecordArrayOutput) Index(i pulumi.IntInput) GetIpsRulesRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpsRulesRecord {
		return vs[0].([]GetIpsRulesRecord)[vs[1].(int)]
	}).(GetIpsRulesRecordOutput)
}

type GetProtectionRulesRecord struct {
	// Specifies the rule action type.
	// The options are as follows:
	// + **0**: allow;
	// + **1**: deny.
	ActionType string `pulumi:"actionType"`
	// The address type.
	AddressType int `pulumi:"addressType"`
	// The created time of a rule.
	CreatedDate string `pulumi:"createdDate"`
	// The custom service description.
	Description string `pulumi:"description"`
	// Specifies the destination address.
	Destinations []GetProtectionRulesRecordDestination `pulumi:"destinations"`
	// Specifies the rule direction.
	// The options are as follows:
	// + **0**: inbound;
	// + **1**: outbound.
	Direction string `pulumi:"direction"`
	// The last open time.
	LastOpenTime string `pulumi:"lastOpenTime"`
	// Whether to support persistent connections.
	LongConnectEnable int `pulumi:"longConnectEnable"`
	// The persistent connection duration.
	LongConnectTime int `pulumi:"longConnectTime"`
	// The persistent connection duration (hour).
	LongConnectTimeHour int `pulumi:"longConnectTimeHour"`
	// The persistent connection duration (minute).
	LongConnectTimeMinute int `pulumi:"longConnectTimeMinute"`
	// The persistent connection duration (second).
	LongConnectTimeSecond int `pulumi:"longConnectTimeSecond"`
	// Specifies the rule name.
	Name string `pulumi:"name"`
	// Specifies the rule ID.
	RuleId string `pulumi:"ruleId"`
	// The service.
	Services []GetProtectionRulesRecordService `pulumi:"services"`
	// Specifies the source address.
	Sources []GetProtectionRulesRecordSource `pulumi:"sources"`
	// Specifies the rule status.
	// The options are as follows:
	// + **0**: disabled;
	// + **1**: enabled.
	Status string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the protection rule.
	// Tags should have only one key/value pair.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type string `pulumi:"type"`
}

// GetProtectionRulesRecordInput is an input type that accepts GetProtectionRulesRecordArgs and GetProtectionRulesRecordOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordInput` via:
//
//	GetProtectionRulesRecordArgs{...}
type GetProtectionRulesRecordInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordOutput() GetProtectionRulesRecordOutput
	ToGetProtectionRulesRecordOutputWithContext(context.Context) GetProtectionRulesRecordOutput
}

type GetProtectionRulesRecordArgs struct {
	// Specifies the rule action type.
	// The options are as follows:
	// + **0**: allow;
	// + **1**: deny.
	ActionType pulumi.StringInput `pulumi:"actionType"`
	// The address type.
	AddressType pulumi.IntInput `pulumi:"addressType"`
	// The created time of a rule.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The custom service description.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the destination address.
	Destinations GetProtectionRulesRecordDestinationArrayInput `pulumi:"destinations"`
	// Specifies the rule direction.
	// The options are as follows:
	// + **0**: inbound;
	// + **1**: outbound.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The last open time.
	LastOpenTime pulumi.StringInput `pulumi:"lastOpenTime"`
	// Whether to support persistent connections.
	LongConnectEnable pulumi.IntInput `pulumi:"longConnectEnable"`
	// The persistent connection duration.
	LongConnectTime pulumi.IntInput `pulumi:"longConnectTime"`
	// The persistent connection duration (hour).
	LongConnectTimeHour pulumi.IntInput `pulumi:"longConnectTimeHour"`
	// The persistent connection duration (minute).
	LongConnectTimeMinute pulumi.IntInput `pulumi:"longConnectTimeMinute"`
	// The persistent connection duration (second).
	LongConnectTimeSecond pulumi.IntInput `pulumi:"longConnectTimeSecond"`
	// Specifies the rule name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the rule ID.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The service.
	Services GetProtectionRulesRecordServiceArrayInput `pulumi:"services"`
	// Specifies the source address.
	Sources GetProtectionRulesRecordSourceArrayInput `pulumi:"sources"`
	// Specifies the rule status.
	// The options are as follows:
	// + **0**: disabled;
	// + **1**: enabled.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the protection rule.
	// Tags should have only one key/value pair.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetProtectionRulesRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecord)(nil)).Elem()
}

func (i GetProtectionRulesRecordArgs) ToGetProtectionRulesRecordOutput() GetProtectionRulesRecordOutput {
	return i.ToGetProtectionRulesRecordOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordArgs) ToGetProtectionRulesRecordOutputWithContext(ctx context.Context) GetProtectionRulesRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordOutput)
}

// GetProtectionRulesRecordArrayInput is an input type that accepts GetProtectionRulesRecordArray and GetProtectionRulesRecordArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordArrayInput` via:
//
//	GetProtectionRulesRecordArray{ GetProtectionRulesRecordArgs{...} }
type GetProtectionRulesRecordArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordArrayOutput() GetProtectionRulesRecordArrayOutput
	ToGetProtectionRulesRecordArrayOutputWithContext(context.Context) GetProtectionRulesRecordArrayOutput
}

type GetProtectionRulesRecordArray []GetProtectionRulesRecordInput

func (GetProtectionRulesRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecord)(nil)).Elem()
}

func (i GetProtectionRulesRecordArray) ToGetProtectionRulesRecordArrayOutput() GetProtectionRulesRecordArrayOutput {
	return i.ToGetProtectionRulesRecordArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordArray) ToGetProtectionRulesRecordArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordArrayOutput)
}

type GetProtectionRulesRecordOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecord)(nil)).Elem()
}

func (o GetProtectionRulesRecordOutput) ToGetProtectionRulesRecordOutput() GetProtectionRulesRecordOutput {
	return o
}

func (o GetProtectionRulesRecordOutput) ToGetProtectionRulesRecordOutputWithContext(ctx context.Context) GetProtectionRulesRecordOutput {
	return o
}

// Specifies the rule action type.
// The options are as follows:
// + **0**: allow;
// + **1**: deny.
func (o GetProtectionRulesRecordOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.ActionType }).(pulumi.StringOutput)
}

// The address type.
func (o GetProtectionRulesRecordOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) int { return v.AddressType }).(pulumi.IntOutput)
}

// The created time of a rule.
func (o GetProtectionRulesRecordOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The custom service description.
func (o GetProtectionRulesRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the destination address.
func (o GetProtectionRulesRecordOutput) Destinations() GetProtectionRulesRecordDestinationArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) []GetProtectionRulesRecordDestination { return v.Destinations }).(GetProtectionRulesRecordDestinationArrayOutput)
}

// Specifies the rule direction.
// The options are as follows:
// + **0**: inbound;
// + **1**: outbound.
func (o GetProtectionRulesRecordOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.Direction }).(pulumi.StringOutput)
}

// The last open time.
func (o GetProtectionRulesRecordOutput) LastOpenTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.LastOpenTime }).(pulumi.StringOutput)
}

// Whether to support persistent connections.
func (o GetProtectionRulesRecordOutput) LongConnectEnable() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) int { return v.LongConnectEnable }).(pulumi.IntOutput)
}

// The persistent connection duration.
func (o GetProtectionRulesRecordOutput) LongConnectTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) int { return v.LongConnectTime }).(pulumi.IntOutput)
}

// The persistent connection duration (hour).
func (o GetProtectionRulesRecordOutput) LongConnectTimeHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) int { return v.LongConnectTimeHour }).(pulumi.IntOutput)
}

// The persistent connection duration (minute).
func (o GetProtectionRulesRecordOutput) LongConnectTimeMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) int { return v.LongConnectTimeMinute }).(pulumi.IntOutput)
}

// The persistent connection duration (second).
func (o GetProtectionRulesRecordOutput) LongConnectTimeSecond() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) int { return v.LongConnectTimeSecond }).(pulumi.IntOutput)
}

// Specifies the rule name.
func (o GetProtectionRulesRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the rule ID.
func (o GetProtectionRulesRecordOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.RuleId }).(pulumi.StringOutput)
}

// The service.
func (o GetProtectionRulesRecordOutput) Services() GetProtectionRulesRecordServiceArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) []GetProtectionRulesRecordService { return v.Services }).(GetProtectionRulesRecordServiceArrayOutput)
}

// Specifies the source address.
func (o GetProtectionRulesRecordOutput) Sources() GetProtectionRulesRecordSourceArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) []GetProtectionRulesRecordSource { return v.Sources }).(GetProtectionRulesRecordSourceArrayOutput)
}

// Specifies the rule status.
// The options are as follows:
// + **0**: disabled;
// + **1**: enabled.
func (o GetProtectionRulesRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the protection rule.
// Tags should have only one key/value pair.
func (o GetProtectionRulesRecordOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the rule type.
// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
func (o GetProtectionRulesRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecord) string { return v.Type }).(pulumi.StringOutput)
}

type GetProtectionRulesRecordArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecord)(nil)).Elem()
}

func (o GetProtectionRulesRecordArrayOutput) ToGetProtectionRulesRecordArrayOutput() GetProtectionRulesRecordArrayOutput {
	return o
}

func (o GetProtectionRulesRecordArrayOutput) ToGetProtectionRulesRecordArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordArrayOutput {
	return o
}

func (o GetProtectionRulesRecordArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecord {
		return vs[0].([]GetProtectionRulesRecord)[vs[1].(int)]
	}).(GetProtectionRulesRecordOutput)
}

type GetProtectionRulesRecordDestination struct {
	// The source IP address.
	Address string `pulumi:"address"`
	// The address group.
	AddressGroups []string `pulumi:"addressGroups"`
	// The ID of the associated IP address group.
	AddressSetId string `pulumi:"addressSetId"`
	// The IP address group name.
	AddressSetName string `pulumi:"addressSetName"`
	// The address set type.
	AddressSetType int `pulumi:"addressSetType"`
	// The address type.
	AddressType int `pulumi:"addressType"`
	// The name of the domain address.
	DomainAddressName string `pulumi:"domainAddressName"`
	// The ID of the domain group.
	DomainSetId string `pulumi:"domainSetId"`
	// The name of domain group.
	DomainSetName string `pulumi:"domainSetName"`
	// The IP address list.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The region list of a rule.
	RegionLists []GetProtectionRulesRecordDestinationRegionList `pulumi:"regionLists"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type int `pulumi:"type"`
}

// GetProtectionRulesRecordDestinationInput is an input type that accepts GetProtectionRulesRecordDestinationArgs and GetProtectionRulesRecordDestinationOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordDestinationInput` via:
//
//	GetProtectionRulesRecordDestinationArgs{...}
type GetProtectionRulesRecordDestinationInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordDestinationOutput() GetProtectionRulesRecordDestinationOutput
	ToGetProtectionRulesRecordDestinationOutputWithContext(context.Context) GetProtectionRulesRecordDestinationOutput
}

type GetProtectionRulesRecordDestinationArgs struct {
	// The source IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// The address group.
	AddressGroups pulumi.StringArrayInput `pulumi:"addressGroups"`
	// The ID of the associated IP address group.
	AddressSetId pulumi.StringInput `pulumi:"addressSetId"`
	// The IP address group name.
	AddressSetName pulumi.StringInput `pulumi:"addressSetName"`
	// The address set type.
	AddressSetType pulumi.IntInput `pulumi:"addressSetType"`
	// The address type.
	AddressType pulumi.IntInput `pulumi:"addressType"`
	// The name of the domain address.
	DomainAddressName pulumi.StringInput `pulumi:"domainAddressName"`
	// The ID of the domain group.
	DomainSetId pulumi.StringInput `pulumi:"domainSetId"`
	// The name of domain group.
	DomainSetName pulumi.StringInput `pulumi:"domainSetName"`
	// The IP address list.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// The region list of a rule.
	RegionLists GetProtectionRulesRecordDestinationRegionListArrayInput `pulumi:"regionLists"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetProtectionRulesRecordDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordDestination)(nil)).Elem()
}

func (i GetProtectionRulesRecordDestinationArgs) ToGetProtectionRulesRecordDestinationOutput() GetProtectionRulesRecordDestinationOutput {
	return i.ToGetProtectionRulesRecordDestinationOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordDestinationArgs) ToGetProtectionRulesRecordDestinationOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordDestinationOutput)
}

// GetProtectionRulesRecordDestinationArrayInput is an input type that accepts GetProtectionRulesRecordDestinationArray and GetProtectionRulesRecordDestinationArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordDestinationArrayInput` via:
//
//	GetProtectionRulesRecordDestinationArray{ GetProtectionRulesRecordDestinationArgs{...} }
type GetProtectionRulesRecordDestinationArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordDestinationArrayOutput() GetProtectionRulesRecordDestinationArrayOutput
	ToGetProtectionRulesRecordDestinationArrayOutputWithContext(context.Context) GetProtectionRulesRecordDestinationArrayOutput
}

type GetProtectionRulesRecordDestinationArray []GetProtectionRulesRecordDestinationInput

func (GetProtectionRulesRecordDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordDestination)(nil)).Elem()
}

func (i GetProtectionRulesRecordDestinationArray) ToGetProtectionRulesRecordDestinationArrayOutput() GetProtectionRulesRecordDestinationArrayOutput {
	return i.ToGetProtectionRulesRecordDestinationArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordDestinationArray) ToGetProtectionRulesRecordDestinationArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordDestinationArrayOutput)
}

type GetProtectionRulesRecordDestinationOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordDestination)(nil)).Elem()
}

func (o GetProtectionRulesRecordDestinationOutput) ToGetProtectionRulesRecordDestinationOutput() GetProtectionRulesRecordDestinationOutput {
	return o
}

func (o GetProtectionRulesRecordDestinationOutput) ToGetProtectionRulesRecordDestinationOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationOutput {
	return o
}

// The source IP address.
func (o GetProtectionRulesRecordDestinationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) string { return v.Address }).(pulumi.StringOutput)
}

// The address group.
func (o GetProtectionRulesRecordDestinationOutput) AddressGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) []string { return v.AddressGroups }).(pulumi.StringArrayOutput)
}

// The ID of the associated IP address group.
func (o GetProtectionRulesRecordDestinationOutput) AddressSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) string { return v.AddressSetId }).(pulumi.StringOutput)
}

// The IP address group name.
func (o GetProtectionRulesRecordDestinationOutput) AddressSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) string { return v.AddressSetName }).(pulumi.StringOutput)
}

// The address set type.
func (o GetProtectionRulesRecordDestinationOutput) AddressSetType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) int { return v.AddressSetType }).(pulumi.IntOutput)
}

// The address type.
func (o GetProtectionRulesRecordDestinationOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) int { return v.AddressType }).(pulumi.IntOutput)
}

// The name of the domain address.
func (o GetProtectionRulesRecordDestinationOutput) DomainAddressName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) string { return v.DomainAddressName }).(pulumi.StringOutput)
}

// The ID of the domain group.
func (o GetProtectionRulesRecordDestinationOutput) DomainSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) string { return v.DomainSetId }).(pulumi.StringOutput)
}

// The name of domain group.
func (o GetProtectionRulesRecordDestinationOutput) DomainSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) string { return v.DomainSetName }).(pulumi.StringOutput)
}

// The IP address list.
func (o GetProtectionRulesRecordDestinationOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The region list of a rule.
func (o GetProtectionRulesRecordDestinationOutput) RegionLists() GetProtectionRulesRecordDestinationRegionListArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) []GetProtectionRulesRecordDestinationRegionList {
		return v.RegionLists
	}).(GetProtectionRulesRecordDestinationRegionListArrayOutput)
}

// Specifies the rule type.
// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
func (o GetProtectionRulesRecordDestinationOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestination) int { return v.Type }).(pulumi.IntOutput)
}

type GetProtectionRulesRecordDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordDestination)(nil)).Elem()
}

func (o GetProtectionRulesRecordDestinationArrayOutput) ToGetProtectionRulesRecordDestinationArrayOutput() GetProtectionRulesRecordDestinationArrayOutput {
	return o
}

func (o GetProtectionRulesRecordDestinationArrayOutput) ToGetProtectionRulesRecordDestinationArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationArrayOutput {
	return o
}

func (o GetProtectionRulesRecordDestinationArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecordDestination {
		return vs[0].([]GetProtectionRulesRecordDestination)[vs[1].(int)]
	}).(GetProtectionRulesRecordDestinationOutput)
}

type GetProtectionRulesRecordDestinationRegionList struct {
	// The Chinese description of a region.
	DescriptionCn string `pulumi:"descriptionCn"`
	// The English description of a region.
	DescriptionEn string `pulumi:"descriptionEn"`
	// The region ID.
	RegionId string `pulumi:"regionId"`
	// The region type.
	RegionType int `pulumi:"regionType"`
}

// GetProtectionRulesRecordDestinationRegionListInput is an input type that accepts GetProtectionRulesRecordDestinationRegionListArgs and GetProtectionRulesRecordDestinationRegionListOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordDestinationRegionListInput` via:
//
//	GetProtectionRulesRecordDestinationRegionListArgs{...}
type GetProtectionRulesRecordDestinationRegionListInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordDestinationRegionListOutput() GetProtectionRulesRecordDestinationRegionListOutput
	ToGetProtectionRulesRecordDestinationRegionListOutputWithContext(context.Context) GetProtectionRulesRecordDestinationRegionListOutput
}

type GetProtectionRulesRecordDestinationRegionListArgs struct {
	// The Chinese description of a region.
	DescriptionCn pulumi.StringInput `pulumi:"descriptionCn"`
	// The English description of a region.
	DescriptionEn pulumi.StringInput `pulumi:"descriptionEn"`
	// The region ID.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The region type.
	RegionType pulumi.IntInput `pulumi:"regionType"`
}

func (GetProtectionRulesRecordDestinationRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordDestinationRegionList)(nil)).Elem()
}

func (i GetProtectionRulesRecordDestinationRegionListArgs) ToGetProtectionRulesRecordDestinationRegionListOutput() GetProtectionRulesRecordDestinationRegionListOutput {
	return i.ToGetProtectionRulesRecordDestinationRegionListOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordDestinationRegionListArgs) ToGetProtectionRulesRecordDestinationRegionListOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordDestinationRegionListOutput)
}

// GetProtectionRulesRecordDestinationRegionListArrayInput is an input type that accepts GetProtectionRulesRecordDestinationRegionListArray and GetProtectionRulesRecordDestinationRegionListArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordDestinationRegionListArrayInput` via:
//
//	GetProtectionRulesRecordDestinationRegionListArray{ GetProtectionRulesRecordDestinationRegionListArgs{...} }
type GetProtectionRulesRecordDestinationRegionListArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordDestinationRegionListArrayOutput() GetProtectionRulesRecordDestinationRegionListArrayOutput
	ToGetProtectionRulesRecordDestinationRegionListArrayOutputWithContext(context.Context) GetProtectionRulesRecordDestinationRegionListArrayOutput
}

type GetProtectionRulesRecordDestinationRegionListArray []GetProtectionRulesRecordDestinationRegionListInput

func (GetProtectionRulesRecordDestinationRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordDestinationRegionList)(nil)).Elem()
}

func (i GetProtectionRulesRecordDestinationRegionListArray) ToGetProtectionRulesRecordDestinationRegionListArrayOutput() GetProtectionRulesRecordDestinationRegionListArrayOutput {
	return i.ToGetProtectionRulesRecordDestinationRegionListArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordDestinationRegionListArray) ToGetProtectionRulesRecordDestinationRegionListArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordDestinationRegionListArrayOutput)
}

type GetProtectionRulesRecordDestinationRegionListOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordDestinationRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordDestinationRegionList)(nil)).Elem()
}

func (o GetProtectionRulesRecordDestinationRegionListOutput) ToGetProtectionRulesRecordDestinationRegionListOutput() GetProtectionRulesRecordDestinationRegionListOutput {
	return o
}

func (o GetProtectionRulesRecordDestinationRegionListOutput) ToGetProtectionRulesRecordDestinationRegionListOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationRegionListOutput {
	return o
}

// The Chinese description of a region.
func (o GetProtectionRulesRecordDestinationRegionListOutput) DescriptionCn() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestinationRegionList) string { return v.DescriptionCn }).(pulumi.StringOutput)
}

// The English description of a region.
func (o GetProtectionRulesRecordDestinationRegionListOutput) DescriptionEn() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestinationRegionList) string { return v.DescriptionEn }).(pulumi.StringOutput)
}

// The region ID.
func (o GetProtectionRulesRecordDestinationRegionListOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestinationRegionList) string { return v.RegionId }).(pulumi.StringOutput)
}

// The region type.
func (o GetProtectionRulesRecordDestinationRegionListOutput) RegionType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordDestinationRegionList) int { return v.RegionType }).(pulumi.IntOutput)
}

type GetProtectionRulesRecordDestinationRegionListArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordDestinationRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordDestinationRegionList)(nil)).Elem()
}

func (o GetProtectionRulesRecordDestinationRegionListArrayOutput) ToGetProtectionRulesRecordDestinationRegionListArrayOutput() GetProtectionRulesRecordDestinationRegionListArrayOutput {
	return o
}

func (o GetProtectionRulesRecordDestinationRegionListArrayOutput) ToGetProtectionRulesRecordDestinationRegionListArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordDestinationRegionListArrayOutput {
	return o
}

func (o GetProtectionRulesRecordDestinationRegionListArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordDestinationRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecordDestinationRegionList {
		return vs[0].([]GetProtectionRulesRecordDestinationRegionList)[vs[1].(int)]
	}).(GetProtectionRulesRecordDestinationRegionListOutput)
}

type GetProtectionRulesRecordService struct {
	// The custom service.
	CustomServices []GetProtectionRulesRecordServiceCustomService `pulumi:"customServices"`
	// The destination port.
	DestPort string `pulumi:"destPort"`
	// The protocol type of the custom service.
	Protocol int `pulumi:"protocol"`
	// The protocols.
	Protocols []int `pulumi:"protocols"`
	// The service group list.
	ServiceGroups []string `pulumi:"serviceGroups"`
	// The service group ID.
	ServiceSetId string `pulumi:"serviceSetId"`
	// The service group name.
	ServiceSetName string `pulumi:"serviceSetName"`
	// The service set type.
	ServiceSetType int `pulumi:"serviceSetType"`
	// The source port of the custom service.
	SourcePort string `pulumi:"sourcePort"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type int `pulumi:"type"`
}

// GetProtectionRulesRecordServiceInput is an input type that accepts GetProtectionRulesRecordServiceArgs and GetProtectionRulesRecordServiceOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordServiceInput` via:
//
//	GetProtectionRulesRecordServiceArgs{...}
type GetProtectionRulesRecordServiceInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordServiceOutput() GetProtectionRulesRecordServiceOutput
	ToGetProtectionRulesRecordServiceOutputWithContext(context.Context) GetProtectionRulesRecordServiceOutput
}

type GetProtectionRulesRecordServiceArgs struct {
	// The custom service.
	CustomServices GetProtectionRulesRecordServiceCustomServiceArrayInput `pulumi:"customServices"`
	// The destination port.
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// The protocol type of the custom service.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// The protocols.
	Protocols pulumi.IntArrayInput `pulumi:"protocols"`
	// The service group list.
	ServiceGroups pulumi.StringArrayInput `pulumi:"serviceGroups"`
	// The service group ID.
	ServiceSetId pulumi.StringInput `pulumi:"serviceSetId"`
	// The service group name.
	ServiceSetName pulumi.StringInput `pulumi:"serviceSetName"`
	// The service set type.
	ServiceSetType pulumi.IntInput `pulumi:"serviceSetType"`
	// The source port of the custom service.
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetProtectionRulesRecordServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordService)(nil)).Elem()
}

func (i GetProtectionRulesRecordServiceArgs) ToGetProtectionRulesRecordServiceOutput() GetProtectionRulesRecordServiceOutput {
	return i.ToGetProtectionRulesRecordServiceOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordServiceArgs) ToGetProtectionRulesRecordServiceOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordServiceOutput)
}

// GetProtectionRulesRecordServiceArrayInput is an input type that accepts GetProtectionRulesRecordServiceArray and GetProtectionRulesRecordServiceArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordServiceArrayInput` via:
//
//	GetProtectionRulesRecordServiceArray{ GetProtectionRulesRecordServiceArgs{...} }
type GetProtectionRulesRecordServiceArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordServiceArrayOutput() GetProtectionRulesRecordServiceArrayOutput
	ToGetProtectionRulesRecordServiceArrayOutputWithContext(context.Context) GetProtectionRulesRecordServiceArrayOutput
}

type GetProtectionRulesRecordServiceArray []GetProtectionRulesRecordServiceInput

func (GetProtectionRulesRecordServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordService)(nil)).Elem()
}

func (i GetProtectionRulesRecordServiceArray) ToGetProtectionRulesRecordServiceArrayOutput() GetProtectionRulesRecordServiceArrayOutput {
	return i.ToGetProtectionRulesRecordServiceArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordServiceArray) ToGetProtectionRulesRecordServiceArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordServiceArrayOutput)
}

type GetProtectionRulesRecordServiceOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordService)(nil)).Elem()
}

func (o GetProtectionRulesRecordServiceOutput) ToGetProtectionRulesRecordServiceOutput() GetProtectionRulesRecordServiceOutput {
	return o
}

func (o GetProtectionRulesRecordServiceOutput) ToGetProtectionRulesRecordServiceOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceOutput {
	return o
}

// The custom service.
func (o GetProtectionRulesRecordServiceOutput) CustomServices() GetProtectionRulesRecordServiceCustomServiceArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) []GetProtectionRulesRecordServiceCustomService {
		return v.CustomServices
	}).(GetProtectionRulesRecordServiceCustomServiceArrayOutput)
}

// The destination port.
func (o GetProtectionRulesRecordServiceOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) string { return v.DestPort }).(pulumi.StringOutput)
}

// The protocol type of the custom service.
func (o GetProtectionRulesRecordServiceOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) int { return v.Protocol }).(pulumi.IntOutput)
}

// The protocols.
func (o GetProtectionRulesRecordServiceOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

// The service group list.
func (o GetProtectionRulesRecordServiceOutput) ServiceGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) []string { return v.ServiceGroups }).(pulumi.StringArrayOutput)
}

// The service group ID.
func (o GetProtectionRulesRecordServiceOutput) ServiceSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) string { return v.ServiceSetId }).(pulumi.StringOutput)
}

// The service group name.
func (o GetProtectionRulesRecordServiceOutput) ServiceSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) string { return v.ServiceSetName }).(pulumi.StringOutput)
}

// The service set type.
func (o GetProtectionRulesRecordServiceOutput) ServiceSetType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) int { return v.ServiceSetType }).(pulumi.IntOutput)
}

// The source port of the custom service.
func (o GetProtectionRulesRecordServiceOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) string { return v.SourcePort }).(pulumi.StringOutput)
}

// Specifies the rule type.
// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
func (o GetProtectionRulesRecordServiceOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordService) int { return v.Type }).(pulumi.IntOutput)
}

type GetProtectionRulesRecordServiceArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordService)(nil)).Elem()
}

func (o GetProtectionRulesRecordServiceArrayOutput) ToGetProtectionRulesRecordServiceArrayOutput() GetProtectionRulesRecordServiceArrayOutput {
	return o
}

func (o GetProtectionRulesRecordServiceArrayOutput) ToGetProtectionRulesRecordServiceArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceArrayOutput {
	return o
}

func (o GetProtectionRulesRecordServiceArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecordService {
		return vs[0].([]GetProtectionRulesRecordService)[vs[1].(int)]
	}).(GetProtectionRulesRecordServiceOutput)
}

type GetProtectionRulesRecordServiceCustomService struct {
	// The custom service description.
	Description string `pulumi:"description"`
	// The destination port.
	DestPort string `pulumi:"destPort"`
	// Specifies the rule name.
	Name string `pulumi:"name"`
	// The protocol type of the custom service.
	Protocol int `pulumi:"protocol"`
	// The source port of the custom service.
	SourcePort string `pulumi:"sourcePort"`
}

// GetProtectionRulesRecordServiceCustomServiceInput is an input type that accepts GetProtectionRulesRecordServiceCustomServiceArgs and GetProtectionRulesRecordServiceCustomServiceOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordServiceCustomServiceInput` via:
//
//	GetProtectionRulesRecordServiceCustomServiceArgs{...}
type GetProtectionRulesRecordServiceCustomServiceInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordServiceCustomServiceOutput() GetProtectionRulesRecordServiceCustomServiceOutput
	ToGetProtectionRulesRecordServiceCustomServiceOutputWithContext(context.Context) GetProtectionRulesRecordServiceCustomServiceOutput
}

type GetProtectionRulesRecordServiceCustomServiceArgs struct {
	// The custom service description.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination port.
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// Specifies the rule name.
	Name pulumi.StringInput `pulumi:"name"`
	// The protocol type of the custom service.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// The source port of the custom service.
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetProtectionRulesRecordServiceCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordServiceCustomService)(nil)).Elem()
}

func (i GetProtectionRulesRecordServiceCustomServiceArgs) ToGetProtectionRulesRecordServiceCustomServiceOutput() GetProtectionRulesRecordServiceCustomServiceOutput {
	return i.ToGetProtectionRulesRecordServiceCustomServiceOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordServiceCustomServiceArgs) ToGetProtectionRulesRecordServiceCustomServiceOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordServiceCustomServiceOutput)
}

// GetProtectionRulesRecordServiceCustomServiceArrayInput is an input type that accepts GetProtectionRulesRecordServiceCustomServiceArray and GetProtectionRulesRecordServiceCustomServiceArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordServiceCustomServiceArrayInput` via:
//
//	GetProtectionRulesRecordServiceCustomServiceArray{ GetProtectionRulesRecordServiceCustomServiceArgs{...} }
type GetProtectionRulesRecordServiceCustomServiceArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordServiceCustomServiceArrayOutput() GetProtectionRulesRecordServiceCustomServiceArrayOutput
	ToGetProtectionRulesRecordServiceCustomServiceArrayOutputWithContext(context.Context) GetProtectionRulesRecordServiceCustomServiceArrayOutput
}

type GetProtectionRulesRecordServiceCustomServiceArray []GetProtectionRulesRecordServiceCustomServiceInput

func (GetProtectionRulesRecordServiceCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordServiceCustomService)(nil)).Elem()
}

func (i GetProtectionRulesRecordServiceCustomServiceArray) ToGetProtectionRulesRecordServiceCustomServiceArrayOutput() GetProtectionRulesRecordServiceCustomServiceArrayOutput {
	return i.ToGetProtectionRulesRecordServiceCustomServiceArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordServiceCustomServiceArray) ToGetProtectionRulesRecordServiceCustomServiceArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordServiceCustomServiceArrayOutput)
}

type GetProtectionRulesRecordServiceCustomServiceOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordServiceCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordServiceCustomService)(nil)).Elem()
}

func (o GetProtectionRulesRecordServiceCustomServiceOutput) ToGetProtectionRulesRecordServiceCustomServiceOutput() GetProtectionRulesRecordServiceCustomServiceOutput {
	return o
}

func (o GetProtectionRulesRecordServiceCustomServiceOutput) ToGetProtectionRulesRecordServiceCustomServiceOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceCustomServiceOutput {
	return o
}

// The custom service description.
func (o GetProtectionRulesRecordServiceCustomServiceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordServiceCustomService) string { return v.Description }).(pulumi.StringOutput)
}

// The destination port.
func (o GetProtectionRulesRecordServiceCustomServiceOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordServiceCustomService) string { return v.DestPort }).(pulumi.StringOutput)
}

// Specifies the rule name.
func (o GetProtectionRulesRecordServiceCustomServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordServiceCustomService) string { return v.Name }).(pulumi.StringOutput)
}

// The protocol type of the custom service.
func (o GetProtectionRulesRecordServiceCustomServiceOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordServiceCustomService) int { return v.Protocol }).(pulumi.IntOutput)
}

// The source port of the custom service.
func (o GetProtectionRulesRecordServiceCustomServiceOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordServiceCustomService) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetProtectionRulesRecordServiceCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordServiceCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordServiceCustomService)(nil)).Elem()
}

func (o GetProtectionRulesRecordServiceCustomServiceArrayOutput) ToGetProtectionRulesRecordServiceCustomServiceArrayOutput() GetProtectionRulesRecordServiceCustomServiceArrayOutput {
	return o
}

func (o GetProtectionRulesRecordServiceCustomServiceArrayOutput) ToGetProtectionRulesRecordServiceCustomServiceArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordServiceCustomServiceArrayOutput {
	return o
}

func (o GetProtectionRulesRecordServiceCustomServiceArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordServiceCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecordServiceCustomService {
		return vs[0].([]GetProtectionRulesRecordServiceCustomService)[vs[1].(int)]
	}).(GetProtectionRulesRecordServiceCustomServiceOutput)
}

type GetProtectionRulesRecordSource struct {
	// The source IP address.
	Address string `pulumi:"address"`
	// The address group.
	AddressGroups []string `pulumi:"addressGroups"`
	// The ID of the associated IP address group.
	AddressSetId string `pulumi:"addressSetId"`
	// The IP address group name.
	AddressSetName string `pulumi:"addressSetName"`
	// The address set type.
	AddressSetType int `pulumi:"addressSetType"`
	// The address type.
	AddressType int `pulumi:"addressType"`
	// The name of the domain address.
	DomainAddressName string `pulumi:"domainAddressName"`
	// The IP address list.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The region list of a rule.
	RegionLists []GetProtectionRulesRecordSourceRegionList `pulumi:"regionLists"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type int `pulumi:"type"`
}

// GetProtectionRulesRecordSourceInput is an input type that accepts GetProtectionRulesRecordSourceArgs and GetProtectionRulesRecordSourceOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordSourceInput` via:
//
//	GetProtectionRulesRecordSourceArgs{...}
type GetProtectionRulesRecordSourceInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordSourceOutput() GetProtectionRulesRecordSourceOutput
	ToGetProtectionRulesRecordSourceOutputWithContext(context.Context) GetProtectionRulesRecordSourceOutput
}

type GetProtectionRulesRecordSourceArgs struct {
	// The source IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// The address group.
	AddressGroups pulumi.StringArrayInput `pulumi:"addressGroups"`
	// The ID of the associated IP address group.
	AddressSetId pulumi.StringInput `pulumi:"addressSetId"`
	// The IP address group name.
	AddressSetName pulumi.StringInput `pulumi:"addressSetName"`
	// The address set type.
	AddressSetType pulumi.IntInput `pulumi:"addressSetType"`
	// The address type.
	AddressType pulumi.IntInput `pulumi:"addressType"`
	// The name of the domain address.
	DomainAddressName pulumi.StringInput `pulumi:"domainAddressName"`
	// The IP address list.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// The region list of a rule.
	RegionLists GetProtectionRulesRecordSourceRegionListArrayInput `pulumi:"regionLists"`
	// Specifies the rule type.
	// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetProtectionRulesRecordSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordSource)(nil)).Elem()
}

func (i GetProtectionRulesRecordSourceArgs) ToGetProtectionRulesRecordSourceOutput() GetProtectionRulesRecordSourceOutput {
	return i.ToGetProtectionRulesRecordSourceOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordSourceArgs) ToGetProtectionRulesRecordSourceOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordSourceOutput)
}

// GetProtectionRulesRecordSourceArrayInput is an input type that accepts GetProtectionRulesRecordSourceArray and GetProtectionRulesRecordSourceArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordSourceArrayInput` via:
//
//	GetProtectionRulesRecordSourceArray{ GetProtectionRulesRecordSourceArgs{...} }
type GetProtectionRulesRecordSourceArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordSourceArrayOutput() GetProtectionRulesRecordSourceArrayOutput
	ToGetProtectionRulesRecordSourceArrayOutputWithContext(context.Context) GetProtectionRulesRecordSourceArrayOutput
}

type GetProtectionRulesRecordSourceArray []GetProtectionRulesRecordSourceInput

func (GetProtectionRulesRecordSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordSource)(nil)).Elem()
}

func (i GetProtectionRulesRecordSourceArray) ToGetProtectionRulesRecordSourceArrayOutput() GetProtectionRulesRecordSourceArrayOutput {
	return i.ToGetProtectionRulesRecordSourceArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordSourceArray) ToGetProtectionRulesRecordSourceArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordSourceArrayOutput)
}

type GetProtectionRulesRecordSourceOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordSource)(nil)).Elem()
}

func (o GetProtectionRulesRecordSourceOutput) ToGetProtectionRulesRecordSourceOutput() GetProtectionRulesRecordSourceOutput {
	return o
}

func (o GetProtectionRulesRecordSourceOutput) ToGetProtectionRulesRecordSourceOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceOutput {
	return o
}

// The source IP address.
func (o GetProtectionRulesRecordSourceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) string { return v.Address }).(pulumi.StringOutput)
}

// The address group.
func (o GetProtectionRulesRecordSourceOutput) AddressGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) []string { return v.AddressGroups }).(pulumi.StringArrayOutput)
}

// The ID of the associated IP address group.
func (o GetProtectionRulesRecordSourceOutput) AddressSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) string { return v.AddressSetId }).(pulumi.StringOutput)
}

// The IP address group name.
func (o GetProtectionRulesRecordSourceOutput) AddressSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) string { return v.AddressSetName }).(pulumi.StringOutput)
}

// The address set type.
func (o GetProtectionRulesRecordSourceOutput) AddressSetType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) int { return v.AddressSetType }).(pulumi.IntOutput)
}

// The address type.
func (o GetProtectionRulesRecordSourceOutput) AddressType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) int { return v.AddressType }).(pulumi.IntOutput)
}

// The name of the domain address.
func (o GetProtectionRulesRecordSourceOutput) DomainAddressName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) string { return v.DomainAddressName }).(pulumi.StringOutput)
}

// The IP address list.
func (o GetProtectionRulesRecordSourceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The region list of a rule.
func (o GetProtectionRulesRecordSourceOutput) RegionLists() GetProtectionRulesRecordSourceRegionListArrayOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) []GetProtectionRulesRecordSourceRegionList {
		return v.RegionLists
	}).(GetProtectionRulesRecordSourceRegionListArrayOutput)
}

// Specifies the rule type.
// The value can be **0** (Internet rule), **1** (VPC rule), or **2** (NAT rule).
func (o GetProtectionRulesRecordSourceOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSource) int { return v.Type }).(pulumi.IntOutput)
}

type GetProtectionRulesRecordSourceArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordSource)(nil)).Elem()
}

func (o GetProtectionRulesRecordSourceArrayOutput) ToGetProtectionRulesRecordSourceArrayOutput() GetProtectionRulesRecordSourceArrayOutput {
	return o
}

func (o GetProtectionRulesRecordSourceArrayOutput) ToGetProtectionRulesRecordSourceArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceArrayOutput {
	return o
}

func (o GetProtectionRulesRecordSourceArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecordSource {
		return vs[0].([]GetProtectionRulesRecordSource)[vs[1].(int)]
	}).(GetProtectionRulesRecordSourceOutput)
}

type GetProtectionRulesRecordSourceRegionList struct {
	// The Chinese description of a region.
	DescriptionCn string `pulumi:"descriptionCn"`
	// The English description of a region.
	DescriptionEn string `pulumi:"descriptionEn"`
	// The region ID.
	RegionId string `pulumi:"regionId"`
	// The region type.
	RegionType int `pulumi:"regionType"`
}

// GetProtectionRulesRecordSourceRegionListInput is an input type that accepts GetProtectionRulesRecordSourceRegionListArgs and GetProtectionRulesRecordSourceRegionListOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordSourceRegionListInput` via:
//
//	GetProtectionRulesRecordSourceRegionListArgs{...}
type GetProtectionRulesRecordSourceRegionListInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordSourceRegionListOutput() GetProtectionRulesRecordSourceRegionListOutput
	ToGetProtectionRulesRecordSourceRegionListOutputWithContext(context.Context) GetProtectionRulesRecordSourceRegionListOutput
}

type GetProtectionRulesRecordSourceRegionListArgs struct {
	// The Chinese description of a region.
	DescriptionCn pulumi.StringInput `pulumi:"descriptionCn"`
	// The English description of a region.
	DescriptionEn pulumi.StringInput `pulumi:"descriptionEn"`
	// The region ID.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The region type.
	RegionType pulumi.IntInput `pulumi:"regionType"`
}

func (GetProtectionRulesRecordSourceRegionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordSourceRegionList)(nil)).Elem()
}

func (i GetProtectionRulesRecordSourceRegionListArgs) ToGetProtectionRulesRecordSourceRegionListOutput() GetProtectionRulesRecordSourceRegionListOutput {
	return i.ToGetProtectionRulesRecordSourceRegionListOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordSourceRegionListArgs) ToGetProtectionRulesRecordSourceRegionListOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceRegionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordSourceRegionListOutput)
}

// GetProtectionRulesRecordSourceRegionListArrayInput is an input type that accepts GetProtectionRulesRecordSourceRegionListArray and GetProtectionRulesRecordSourceRegionListArrayOutput values.
// You can construct a concrete instance of `GetProtectionRulesRecordSourceRegionListArrayInput` via:
//
//	GetProtectionRulesRecordSourceRegionListArray{ GetProtectionRulesRecordSourceRegionListArgs{...} }
type GetProtectionRulesRecordSourceRegionListArrayInput interface {
	pulumi.Input

	ToGetProtectionRulesRecordSourceRegionListArrayOutput() GetProtectionRulesRecordSourceRegionListArrayOutput
	ToGetProtectionRulesRecordSourceRegionListArrayOutputWithContext(context.Context) GetProtectionRulesRecordSourceRegionListArrayOutput
}

type GetProtectionRulesRecordSourceRegionListArray []GetProtectionRulesRecordSourceRegionListInput

func (GetProtectionRulesRecordSourceRegionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordSourceRegionList)(nil)).Elem()
}

func (i GetProtectionRulesRecordSourceRegionListArray) ToGetProtectionRulesRecordSourceRegionListArrayOutput() GetProtectionRulesRecordSourceRegionListArrayOutput {
	return i.ToGetProtectionRulesRecordSourceRegionListArrayOutputWithContext(context.Background())
}

func (i GetProtectionRulesRecordSourceRegionListArray) ToGetProtectionRulesRecordSourceRegionListArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceRegionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProtectionRulesRecordSourceRegionListArrayOutput)
}

type GetProtectionRulesRecordSourceRegionListOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordSourceRegionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProtectionRulesRecordSourceRegionList)(nil)).Elem()
}

func (o GetProtectionRulesRecordSourceRegionListOutput) ToGetProtectionRulesRecordSourceRegionListOutput() GetProtectionRulesRecordSourceRegionListOutput {
	return o
}

func (o GetProtectionRulesRecordSourceRegionListOutput) ToGetProtectionRulesRecordSourceRegionListOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceRegionListOutput {
	return o
}

// The Chinese description of a region.
func (o GetProtectionRulesRecordSourceRegionListOutput) DescriptionCn() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSourceRegionList) string { return v.DescriptionCn }).(pulumi.StringOutput)
}

// The English description of a region.
func (o GetProtectionRulesRecordSourceRegionListOutput) DescriptionEn() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSourceRegionList) string { return v.DescriptionEn }).(pulumi.StringOutput)
}

// The region ID.
func (o GetProtectionRulesRecordSourceRegionListOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSourceRegionList) string { return v.RegionId }).(pulumi.StringOutput)
}

// The region type.
func (o GetProtectionRulesRecordSourceRegionListOutput) RegionType() pulumi.IntOutput {
	return o.ApplyT(func(v GetProtectionRulesRecordSourceRegionList) int { return v.RegionType }).(pulumi.IntOutput)
}

type GetProtectionRulesRecordSourceRegionListArrayOutput struct{ *pulumi.OutputState }

func (GetProtectionRulesRecordSourceRegionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProtectionRulesRecordSourceRegionList)(nil)).Elem()
}

func (o GetProtectionRulesRecordSourceRegionListArrayOutput) ToGetProtectionRulesRecordSourceRegionListArrayOutput() GetProtectionRulesRecordSourceRegionListArrayOutput {
	return o
}

func (o GetProtectionRulesRecordSourceRegionListArrayOutput) ToGetProtectionRulesRecordSourceRegionListArrayOutputWithContext(ctx context.Context) GetProtectionRulesRecordSourceRegionListArrayOutput {
	return o
}

func (o GetProtectionRulesRecordSourceRegionListArrayOutput) Index(i pulumi.IntInput) GetProtectionRulesRecordSourceRegionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProtectionRulesRecordSourceRegionList {
		return vs[0].([]GetProtectionRulesRecordSourceRegionList)[vs[1].(int)]
	}).(GetProtectionRulesRecordSourceRegionListOutput)
}

type GetResourceTagsTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

// GetResourceTagsTagInput is an input type that accepts GetResourceTagsTagArgs and GetResourceTagsTagOutput values.
// You can construct a concrete instance of `GetResourceTagsTagInput` via:
//
//	GetResourceTagsTagArgs{...}
type GetResourceTagsTagInput interface {
	pulumi.Input

	ToGetResourceTagsTagOutput() GetResourceTagsTagOutput
	ToGetResourceTagsTagOutputWithContext(context.Context) GetResourceTagsTagOutput
}

type GetResourceTagsTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetResourceTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceTagsTag)(nil)).Elem()
}

func (i GetResourceTagsTagArgs) ToGetResourceTagsTagOutput() GetResourceTagsTagOutput {
	return i.ToGetResourceTagsTagOutputWithContext(context.Background())
}

func (i GetResourceTagsTagArgs) ToGetResourceTagsTagOutputWithContext(ctx context.Context) GetResourceTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceTagsTagOutput)
}

// GetResourceTagsTagArrayInput is an input type that accepts GetResourceTagsTagArray and GetResourceTagsTagArrayOutput values.
// You can construct a concrete instance of `GetResourceTagsTagArrayInput` via:
//
//	GetResourceTagsTagArray{ GetResourceTagsTagArgs{...} }
type GetResourceTagsTagArrayInput interface {
	pulumi.Input

	ToGetResourceTagsTagArrayOutput() GetResourceTagsTagArrayOutput
	ToGetResourceTagsTagArrayOutputWithContext(context.Context) GetResourceTagsTagArrayOutput
}

type GetResourceTagsTagArray []GetResourceTagsTagInput

func (GetResourceTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceTagsTag)(nil)).Elem()
}

func (i GetResourceTagsTagArray) ToGetResourceTagsTagArrayOutput() GetResourceTagsTagArrayOutput {
	return i.ToGetResourceTagsTagArrayOutputWithContext(context.Background())
}

func (i GetResourceTagsTagArray) ToGetResourceTagsTagArrayOutputWithContext(ctx context.Context) GetResourceTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceTagsTagArrayOutput)
}

type GetResourceTagsTagOutput struct{ *pulumi.OutputState }

func (GetResourceTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceTagsTag)(nil)).Elem()
}

func (o GetResourceTagsTagOutput) ToGetResourceTagsTagOutput() GetResourceTagsTagOutput {
	return o
}

func (o GetResourceTagsTagOutput) ToGetResourceTagsTagOutputWithContext(ctx context.Context) GetResourceTagsTagOutput {
	return o
}

// The tag key.
func (o GetResourceTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value.
func (o GetResourceTagsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceTagsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetResourceTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetResourceTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceTagsTag)(nil)).Elem()
}

func (o GetResourceTagsTagArrayOutput) ToGetResourceTagsTagArrayOutput() GetResourceTagsTagArrayOutput {
	return o
}

func (o GetResourceTagsTagArrayOutput) ToGetResourceTagsTagArrayOutputWithContext(ctx context.Context) GetResourceTagsTagArrayOutput {
	return o
}

func (o GetResourceTagsTagArrayOutput) Index(i pulumi.IntInput) GetResourceTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceTagsTag {
		return vs[0].([]GetResourceTagsTag)[vs[1].(int)]
	}).(GetResourceTagsTagOutput)
}

type GetServiceGroupMembersRecord struct {
	// The service group member description.
	Description string `pulumi:"description"`
	// Specifies the destination port.
	DestPort string `pulumi:"destPort"`
	// Specifies the service group member ID.
	ItemId string `pulumi:"itemId"`
	// Specifies the protocol type.
	// The options are as follows:
	// + **6**: TCP;
	// + **17**: UDP;
	// + **1**: ICMP.
	Protocol int `pulumi:"protocol"`
	// Specifies the source port.
	SourcePort string `pulumi:"sourcePort"`
}

// GetServiceGroupMembersRecordInput is an input type that accepts GetServiceGroupMembersRecordArgs and GetServiceGroupMembersRecordOutput values.
// You can construct a concrete instance of `GetServiceGroupMembersRecordInput` via:
//
//	GetServiceGroupMembersRecordArgs{...}
type GetServiceGroupMembersRecordInput interface {
	pulumi.Input

	ToGetServiceGroupMembersRecordOutput() GetServiceGroupMembersRecordOutput
	ToGetServiceGroupMembersRecordOutputWithContext(context.Context) GetServiceGroupMembersRecordOutput
}

type GetServiceGroupMembersRecordArgs struct {
	// The service group member description.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the destination port.
	DestPort pulumi.StringInput `pulumi:"destPort"`
	// Specifies the service group member ID.
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// Specifies the protocol type.
	// The options are as follows:
	// + **6**: TCP;
	// + **17**: UDP;
	// + **1**: ICMP.
	Protocol pulumi.IntInput `pulumi:"protocol"`
	// Specifies the source port.
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetServiceGroupMembersRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGroupMembersRecord)(nil)).Elem()
}

func (i GetServiceGroupMembersRecordArgs) ToGetServiceGroupMembersRecordOutput() GetServiceGroupMembersRecordOutput {
	return i.ToGetServiceGroupMembersRecordOutputWithContext(context.Background())
}

func (i GetServiceGroupMembersRecordArgs) ToGetServiceGroupMembersRecordOutputWithContext(ctx context.Context) GetServiceGroupMembersRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGroupMembersRecordOutput)
}

// GetServiceGroupMembersRecordArrayInput is an input type that accepts GetServiceGroupMembersRecordArray and GetServiceGroupMembersRecordArrayOutput values.
// You can construct a concrete instance of `GetServiceGroupMembersRecordArrayInput` via:
//
//	GetServiceGroupMembersRecordArray{ GetServiceGroupMembersRecordArgs{...} }
type GetServiceGroupMembersRecordArrayInput interface {
	pulumi.Input

	ToGetServiceGroupMembersRecordArrayOutput() GetServiceGroupMembersRecordArrayOutput
	ToGetServiceGroupMembersRecordArrayOutputWithContext(context.Context) GetServiceGroupMembersRecordArrayOutput
}

type GetServiceGroupMembersRecordArray []GetServiceGroupMembersRecordInput

func (GetServiceGroupMembersRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceGroupMembersRecord)(nil)).Elem()
}

func (i GetServiceGroupMembersRecordArray) ToGetServiceGroupMembersRecordArrayOutput() GetServiceGroupMembersRecordArrayOutput {
	return i.ToGetServiceGroupMembersRecordArrayOutputWithContext(context.Background())
}

func (i GetServiceGroupMembersRecordArray) ToGetServiceGroupMembersRecordArrayOutputWithContext(ctx context.Context) GetServiceGroupMembersRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGroupMembersRecordArrayOutput)
}

type GetServiceGroupMembersRecordOutput struct{ *pulumi.OutputState }

func (GetServiceGroupMembersRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGroupMembersRecord)(nil)).Elem()
}

func (o GetServiceGroupMembersRecordOutput) ToGetServiceGroupMembersRecordOutput() GetServiceGroupMembersRecordOutput {
	return o
}

func (o GetServiceGroupMembersRecordOutput) ToGetServiceGroupMembersRecordOutputWithContext(ctx context.Context) GetServiceGroupMembersRecordOutput {
	return o
}

// The service group member description.
func (o GetServiceGroupMembersRecordOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupMembersRecord) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the destination port.
func (o GetServiceGroupMembersRecordOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupMembersRecord) string { return v.DestPort }).(pulumi.StringOutput)
}

// Specifies the service group member ID.
func (o GetServiceGroupMembersRecordOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupMembersRecord) string { return v.ItemId }).(pulumi.StringOutput)
}

// Specifies the protocol type.
// The options are as follows:
// + **6**: TCP;
// + **17**: UDP;
// + **1**: ICMP.
func (o GetServiceGroupMembersRecordOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceGroupMembersRecord) int { return v.Protocol }).(pulumi.IntOutput)
}

// Specifies the source port.
func (o GetServiceGroupMembersRecordOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupMembersRecord) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetServiceGroupMembersRecordArrayOutput struct{ *pulumi.OutputState }

func (GetServiceGroupMembersRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceGroupMembersRecord)(nil)).Elem()
}

func (o GetServiceGroupMembersRecordArrayOutput) ToGetServiceGroupMembersRecordArrayOutput() GetServiceGroupMembersRecordArrayOutput {
	return o
}

func (o GetServiceGroupMembersRecordArrayOutput) ToGetServiceGroupMembersRecordArrayOutputWithContext(ctx context.Context) GetServiceGroupMembersRecordArrayOutput {
	return o
}

func (o GetServiceGroupMembersRecordArrayOutput) Index(i pulumi.IntInput) GetServiceGroupMembersRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceGroupMembersRecord {
		return vs[0].([]GetServiceGroupMembersRecord)[vs[1].(int)]
	}).(GetServiceGroupMembersRecordOutput)
}

type GetServiceGroupsServiceGroup struct {
	// The description of the service group.
	Description string `pulumi:"description"`
	// The service group ID.
	Id string `pulumi:"id"`
	// Specifies the name of the service group.
	Name string `pulumi:"name"`
	// The protocols of the service group.
	Protocols []int `pulumi:"protocols"`
	// The number of times this service group has been referenced.
	RefCount int `pulumi:"refCount"`
	// The type of the Service group.
	Type int `pulumi:"type"`
}

// GetServiceGroupsServiceGroupInput is an input type that accepts GetServiceGroupsServiceGroupArgs and GetServiceGroupsServiceGroupOutput values.
// You can construct a concrete instance of `GetServiceGroupsServiceGroupInput` via:
//
//	GetServiceGroupsServiceGroupArgs{...}
type GetServiceGroupsServiceGroupInput interface {
	pulumi.Input

	ToGetServiceGroupsServiceGroupOutput() GetServiceGroupsServiceGroupOutput
	ToGetServiceGroupsServiceGroupOutputWithContext(context.Context) GetServiceGroupsServiceGroupOutput
}

type GetServiceGroupsServiceGroupArgs struct {
	// The description of the service group.
	Description pulumi.StringInput `pulumi:"description"`
	// The service group ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the service group.
	Name pulumi.StringInput `pulumi:"name"`
	// The protocols of the service group.
	Protocols pulumi.IntArrayInput `pulumi:"protocols"`
	// The number of times this service group has been referenced.
	RefCount pulumi.IntInput `pulumi:"refCount"`
	// The type of the Service group.
	Type pulumi.IntInput `pulumi:"type"`
}

func (GetServiceGroupsServiceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGroupsServiceGroup)(nil)).Elem()
}

func (i GetServiceGroupsServiceGroupArgs) ToGetServiceGroupsServiceGroupOutput() GetServiceGroupsServiceGroupOutput {
	return i.ToGetServiceGroupsServiceGroupOutputWithContext(context.Background())
}

func (i GetServiceGroupsServiceGroupArgs) ToGetServiceGroupsServiceGroupOutputWithContext(ctx context.Context) GetServiceGroupsServiceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGroupsServiceGroupOutput)
}

// GetServiceGroupsServiceGroupArrayInput is an input type that accepts GetServiceGroupsServiceGroupArray and GetServiceGroupsServiceGroupArrayOutput values.
// You can construct a concrete instance of `GetServiceGroupsServiceGroupArrayInput` via:
//
//	GetServiceGroupsServiceGroupArray{ GetServiceGroupsServiceGroupArgs{...} }
type GetServiceGroupsServiceGroupArrayInput interface {
	pulumi.Input

	ToGetServiceGroupsServiceGroupArrayOutput() GetServiceGroupsServiceGroupArrayOutput
	ToGetServiceGroupsServiceGroupArrayOutputWithContext(context.Context) GetServiceGroupsServiceGroupArrayOutput
}

type GetServiceGroupsServiceGroupArray []GetServiceGroupsServiceGroupInput

func (GetServiceGroupsServiceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceGroupsServiceGroup)(nil)).Elem()
}

func (i GetServiceGroupsServiceGroupArray) ToGetServiceGroupsServiceGroupArrayOutput() GetServiceGroupsServiceGroupArrayOutput {
	return i.ToGetServiceGroupsServiceGroupArrayOutputWithContext(context.Background())
}

func (i GetServiceGroupsServiceGroupArray) ToGetServiceGroupsServiceGroupArrayOutputWithContext(ctx context.Context) GetServiceGroupsServiceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceGroupsServiceGroupArrayOutput)
}

type GetServiceGroupsServiceGroupOutput struct{ *pulumi.OutputState }

func (GetServiceGroupsServiceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceGroupsServiceGroup)(nil)).Elem()
}

func (o GetServiceGroupsServiceGroupOutput) ToGetServiceGroupsServiceGroupOutput() GetServiceGroupsServiceGroupOutput {
	return o
}

func (o GetServiceGroupsServiceGroupOutput) ToGetServiceGroupsServiceGroupOutputWithContext(ctx context.Context) GetServiceGroupsServiceGroupOutput {
	return o
}

// The description of the service group.
func (o GetServiceGroupsServiceGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupsServiceGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The service group ID.
func (o GetServiceGroupsServiceGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupsServiceGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the service group.
func (o GetServiceGroupsServiceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceGroupsServiceGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The protocols of the service group.
func (o GetServiceGroupsServiceGroupOutput) Protocols() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetServiceGroupsServiceGroup) []int { return v.Protocols }).(pulumi.IntArrayOutput)
}

// The number of times this service group has been referenced.
func (o GetServiceGroupsServiceGroupOutput) RefCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceGroupsServiceGroup) int { return v.RefCount }).(pulumi.IntOutput)
}

// The type of the Service group.
func (o GetServiceGroupsServiceGroupOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceGroupsServiceGroup) int { return v.Type }).(pulumi.IntOutput)
}

type GetServiceGroupsServiceGroupArrayOutput struct{ *pulumi.OutputState }

func (GetServiceGroupsServiceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceGroupsServiceGroup)(nil)).Elem()
}

func (o GetServiceGroupsServiceGroupArrayOutput) ToGetServiceGroupsServiceGroupArrayOutput() GetServiceGroupsServiceGroupArrayOutput {
	return o
}

func (o GetServiceGroupsServiceGroupArrayOutput) ToGetServiceGroupsServiceGroupArrayOutputWithContext(ctx context.Context) GetServiceGroupsServiceGroupArrayOutput {
	return o
}

func (o GetServiceGroupsServiceGroupArrayOutput) Index(i pulumi.IntInput) GetServiceGroupsServiceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceGroupsServiceGroup {
		return vs[0].([]GetServiceGroupsServiceGroup)[vs[1].(int)]
	}).(GetServiceGroupsServiceGroupOutput)
}

type GetTagsTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag values.
	Values []string `pulumi:"values"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// The tag key.
func (o GetTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag values.
func (o GetTagsTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleCustomServiceInput)(nil)).Elem(), AclRuleCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleCustomServiceArrayInput)(nil)).Elem(), AclRuleCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleCustomServiceGroupsInput)(nil)).Elem(), AclRuleCustomServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleCustomServiceGroupsPtrInput)(nil)).Elem(), AclRuleCustomServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleDestinationRegionListInput)(nil)).Elem(), AclRuleDestinationRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleDestinationRegionListArrayInput)(nil)).Elem(), AclRuleDestinationRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRulePredefinedServiceGroupsInput)(nil)).Elem(), AclRulePredefinedServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRulePredefinedServiceGroupsPtrInput)(nil)).Elem(), AclRulePredefinedServiceGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleSequenceInput)(nil)).Elem(), AclRuleSequenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleSequencePtrInput)(nil)).Elem(), AclRuleSequenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleSourceRegionListInput)(nil)).Elem(), AclRuleSourceRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclRuleSourceRegionListArrayInput)(nil)).Elem(), AclRuleSourceRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiVirusScanProtocolConfigInput)(nil)).Elem(), AntiVirusScanProtocolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiVirusScanProtocolConfigArrayInput)(nil)).Elem(), AntiVirusScanProtocolConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaptureTaskDestinationInput)(nil)).Elem(), CaptureTaskDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaptureTaskDestinationPtrInput)(nil)).Elem(), CaptureTaskDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaptureTaskServiceInput)(nil)).Elem(), CaptureTaskServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaptureTaskServicePtrInput)(nil)).Elem(), CaptureTaskServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaptureTaskSourceInput)(nil)).Elem(), CaptureTaskSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaptureTaskSourcePtrInput)(nil)).Elem(), CaptureTaskSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameGroupDomainNameInput)(nil)).Elem(), DomainNameGroupDomainNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameGroupDomainNameArrayInput)(nil)).Elem(), DomainNameGroupDomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipProtectionProtectedEipInput)(nil)).Elem(), EipProtectionProtectedEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipProtectionProtectedEipArrayInput)(nil)).Elem(), EipProtectionProtectedEipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFlavorInput)(nil)).Elem(), FirewallFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallFlavorPtrInput)(nil)).Elem(), FirewallFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProtectObjectInput)(nil)).Elem(), FirewallProtectObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallProtectObjectArrayInput)(nil)).Elem(), FirewallProtectObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessControlLogsRecordInput)(nil)).Elem(), GetAccessControlLogsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessControlLogsRecordArrayInput)(nil)).Elem(), GetAccessControlLogsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressGroupMembersRecordInput)(nil)).Elem(), GetAddressGroupMembersRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressGroupMembersRecordArrayInput)(nil)).Elem(), GetAddressGroupMembersRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressGroupsAddressGroupInput)(nil)).Elem(), GetAddressGroupsAddressGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAddressGroupsAddressGroupArrayInput)(nil)).Elem(), GetAddressGroupsAddressGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogsRecordInput)(nil)).Elem(), GetAttackLogsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogsRecordArrayInput)(nil)).Elem(), GetAttackLogsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogsRecordPacketMessageInput)(nil)).Elem(), GetAttackLogsRecordPacketMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogsRecordPacketMessageArrayInput)(nil)).Elem(), GetAttackLogsRecordPacketMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlackWhiteListsRecordInput)(nil)).Elem(), GetBlackWhiteListsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBlackWhiteListsRecordArrayInput)(nil)).Elem(), GetBlackWhiteListsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaptureTaskResultsFileListInput)(nil)).Elem(), GetCaptureTaskResultsFileListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaptureTaskResultsFileListArrayInput)(nil)).Elem(), GetCaptureTaskResultsFileListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaptureTaskResultsRequestHeaderInput)(nil)).Elem(), GetCaptureTaskResultsRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaptureTaskResultsRequestHeaderArrayInput)(nil)).Elem(), GetCaptureTaskResultsRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaptureTasksRecordInput)(nil)).Elem(), GetCaptureTasksRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCaptureTasksRecordArrayInput)(nil)).Elem(), GetCaptureTasksRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNameGroupsRecordInput)(nil)).Elem(), GetDomainNameGroupsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNameGroupsRecordArrayInput)(nil)).Elem(), GetDomainNameGroupsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNameGroupsRecordDomainNameInput)(nil)).Elem(), GetDomainNameGroupsRecordDomainNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNameGroupsRecordDomainNameArrayInput)(nil)).Elem(), GetDomainNameGroupsRecordDomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNameGroupsRecordRuleInput)(nil)).Elem(), GetDomainNameGroupsRecordRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNameGroupsRecordRuleArrayInput)(nil)).Elem(), GetDomainNameGroupsRecordRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordInput)(nil)).Elem(), GetFirewallsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordArrayInput)(nil)).Elem(), GetFirewallsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordFlavorInput)(nil)).Elem(), GetFirewallsRecordFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordFlavorArrayInput)(nil)).Elem(), GetFirewallsRecordFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordProtectObjectInput)(nil)).Elem(), GetFirewallsRecordProtectObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordProtectObjectArrayInput)(nil)).Elem(), GetFirewallsRecordProtectObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordResourceInput)(nil)).Elem(), GetFirewallsRecordResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallsRecordResourceArrayInput)(nil)).Elem(), GetFirewallsRecordResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsRecordInput)(nil)).Elem(), GetFlowLogsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsRecordArrayInput)(nil)).Elem(), GetFlowLogsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsCustomRulesRecordInput)(nil)).Elem(), GetIpsCustomRulesRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsCustomRulesRecordArrayInput)(nil)).Elem(), GetIpsCustomRulesRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsRuleDetailsDataInput)(nil)).Elem(), GetIpsRuleDetailsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsRuleDetailsDataArrayInput)(nil)).Elem(), GetIpsRuleDetailsDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsRulesRecordInput)(nil)).Elem(), GetIpsRulesRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpsRulesRecordArrayInput)(nil)).Elem(), GetIpsRulesRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordInput)(nil)).Elem(), GetProtectionRulesRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordArrayInput)(nil)).Elem(), GetProtectionRulesRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordDestinationInput)(nil)).Elem(), GetProtectionRulesRecordDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordDestinationArrayInput)(nil)).Elem(), GetProtectionRulesRecordDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordDestinationRegionListInput)(nil)).Elem(), GetProtectionRulesRecordDestinationRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordDestinationRegionListArrayInput)(nil)).Elem(), GetProtectionRulesRecordDestinationRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordServiceInput)(nil)).Elem(), GetProtectionRulesRecordServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordServiceArrayInput)(nil)).Elem(), GetProtectionRulesRecordServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordServiceCustomServiceInput)(nil)).Elem(), GetProtectionRulesRecordServiceCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordServiceCustomServiceArrayInput)(nil)).Elem(), GetProtectionRulesRecordServiceCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordSourceInput)(nil)).Elem(), GetProtectionRulesRecordSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordSourceArrayInput)(nil)).Elem(), GetProtectionRulesRecordSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordSourceRegionListInput)(nil)).Elem(), GetProtectionRulesRecordSourceRegionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProtectionRulesRecordSourceRegionListArrayInput)(nil)).Elem(), GetProtectionRulesRecordSourceRegionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceTagsTagInput)(nil)).Elem(), GetResourceTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceTagsTagArrayInput)(nil)).Elem(), GetResourceTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceGroupMembersRecordInput)(nil)).Elem(), GetServiceGroupMembersRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceGroupMembersRecordArrayInput)(nil)).Elem(), GetServiceGroupMembersRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceGroupsServiceGroupInput)(nil)).Elem(), GetServiceGroupsServiceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceGroupsServiceGroupArrayInput)(nil)).Elem(), GetServiceGroupsServiceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterOutputType(AclRuleCustomServiceOutput{})
	pulumi.RegisterOutputType(AclRuleCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(AclRuleCustomServiceGroupsOutput{})
	pulumi.RegisterOutputType(AclRuleCustomServiceGroupsPtrOutput{})
	pulumi.RegisterOutputType(AclRuleDestinationRegionListOutput{})
	pulumi.RegisterOutputType(AclRuleDestinationRegionListArrayOutput{})
	pulumi.RegisterOutputType(AclRulePredefinedServiceGroupsOutput{})
	pulumi.RegisterOutputType(AclRulePredefinedServiceGroupsPtrOutput{})
	pulumi.RegisterOutputType(AclRuleSequenceOutput{})
	pulumi.RegisterOutputType(AclRuleSequencePtrOutput{})
	pulumi.RegisterOutputType(AclRuleSourceRegionListOutput{})
	pulumi.RegisterOutputType(AclRuleSourceRegionListArrayOutput{})
	pulumi.RegisterOutputType(AntiVirusScanProtocolConfigOutput{})
	pulumi.RegisterOutputType(AntiVirusScanProtocolConfigArrayOutput{})
	pulumi.RegisterOutputType(CaptureTaskDestinationOutput{})
	pulumi.RegisterOutputType(CaptureTaskDestinationPtrOutput{})
	pulumi.RegisterOutputType(CaptureTaskServiceOutput{})
	pulumi.RegisterOutputType(CaptureTaskServicePtrOutput{})
	pulumi.RegisterOutputType(CaptureTaskSourceOutput{})
	pulumi.RegisterOutputType(CaptureTaskSourcePtrOutput{})
	pulumi.RegisterOutputType(DomainNameGroupDomainNameOutput{})
	pulumi.RegisterOutputType(DomainNameGroupDomainNameArrayOutput{})
	pulumi.RegisterOutputType(EipProtectionProtectedEipOutput{})
	pulumi.RegisterOutputType(EipProtectionProtectedEipArrayOutput{})
	pulumi.RegisterOutputType(FirewallFlavorOutput{})
	pulumi.RegisterOutputType(FirewallFlavorPtrOutput{})
	pulumi.RegisterOutputType(FirewallProtectObjectOutput{})
	pulumi.RegisterOutputType(FirewallProtectObjectArrayOutput{})
	pulumi.RegisterOutputType(GetAccessControlLogsRecordOutput{})
	pulumi.RegisterOutputType(GetAccessControlLogsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetAddressGroupMembersRecordOutput{})
	pulumi.RegisterOutputType(GetAddressGroupMembersRecordArrayOutput{})
	pulumi.RegisterOutputType(GetAddressGroupsAddressGroupOutput{})
	pulumi.RegisterOutputType(GetAddressGroupsAddressGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAttackLogsRecordOutput{})
	pulumi.RegisterOutputType(GetAttackLogsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetAttackLogsRecordPacketMessageOutput{})
	pulumi.RegisterOutputType(GetAttackLogsRecordPacketMessageArrayOutput{})
	pulumi.RegisterOutputType(GetBlackWhiteListsRecordOutput{})
	pulumi.RegisterOutputType(GetBlackWhiteListsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetCaptureTaskResultsFileListOutput{})
	pulumi.RegisterOutputType(GetCaptureTaskResultsFileListArrayOutput{})
	pulumi.RegisterOutputType(GetCaptureTaskResultsRequestHeaderOutput{})
	pulumi.RegisterOutputType(GetCaptureTaskResultsRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetCaptureTasksRecordOutput{})
	pulumi.RegisterOutputType(GetCaptureTasksRecordArrayOutput{})
	pulumi.RegisterOutputType(GetDomainNameGroupsRecordOutput{})
	pulumi.RegisterOutputType(GetDomainNameGroupsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetDomainNameGroupsRecordDomainNameOutput{})
	pulumi.RegisterOutputType(GetDomainNameGroupsRecordDomainNameArrayOutput{})
	pulumi.RegisterOutputType(GetDomainNameGroupsRecordRuleOutput{})
	pulumi.RegisterOutputType(GetDomainNameGroupsRecordRuleArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordFlavorOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordProtectObjectOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordProtectObjectArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordResourceOutput{})
	pulumi.RegisterOutputType(GetFirewallsRecordResourceArrayOutput{})
	pulumi.RegisterOutputType(GetFlowLogsRecordOutput{})
	pulumi.RegisterOutputType(GetFlowLogsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetIpsCustomRulesRecordOutput{})
	pulumi.RegisterOutputType(GetIpsCustomRulesRecordArrayOutput{})
	pulumi.RegisterOutputType(GetIpsRuleDetailsDataOutput{})
	pulumi.RegisterOutputType(GetIpsRuleDetailsDataArrayOutput{})
	pulumi.RegisterOutputType(GetIpsRulesRecordOutput{})
	pulumi.RegisterOutputType(GetIpsRulesRecordArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordDestinationOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordDestinationRegionListOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordDestinationRegionListArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordServiceOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordServiceArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordServiceCustomServiceOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordServiceCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordSourceOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordSourceArrayOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordSourceRegionListOutput{})
	pulumi.RegisterOutputType(GetProtectionRulesRecordSourceRegionListArrayOutput{})
	pulumi.RegisterOutputType(GetResourceTagsTagOutput{})
	pulumi.RegisterOutputType(GetResourceTagsTagArrayOutput{})
	pulumi.RegisterOutputType(GetServiceGroupMembersRecordOutput{})
	pulumi.RegisterOutputType(GetServiceGroupMembersRecordArrayOutput{})
	pulumi.RegisterOutputType(GetServiceGroupsServiceGroupOutput{})
	pulumi.RegisterOutputType(GetServiceGroupsServiceGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
}
