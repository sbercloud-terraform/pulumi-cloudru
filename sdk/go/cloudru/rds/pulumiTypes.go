// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type BackupDatabase struct {
	// Database to be backed up for Microsoft SQL Server.
	Name string `pulumi:"name"`
}

// BackupDatabaseInput is an input type that accepts BackupDatabaseArgs and BackupDatabaseOutput values.
// You can construct a concrete instance of `BackupDatabaseInput` via:
//
//	BackupDatabaseArgs{...}
type BackupDatabaseInput interface {
	pulumi.Input

	ToBackupDatabaseOutput() BackupDatabaseOutput
	ToBackupDatabaseOutputWithContext(context.Context) BackupDatabaseOutput
}

type BackupDatabaseArgs struct {
	// Database to be backed up for Microsoft SQL Server.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BackupDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupDatabase)(nil)).Elem()
}

func (i BackupDatabaseArgs) ToBackupDatabaseOutput() BackupDatabaseOutput {
	return i.ToBackupDatabaseOutputWithContext(context.Background())
}

func (i BackupDatabaseArgs) ToBackupDatabaseOutputWithContext(ctx context.Context) BackupDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupDatabaseOutput)
}

// BackupDatabaseArrayInput is an input type that accepts BackupDatabaseArray and BackupDatabaseArrayOutput values.
// You can construct a concrete instance of `BackupDatabaseArrayInput` via:
//
//	BackupDatabaseArray{ BackupDatabaseArgs{...} }
type BackupDatabaseArrayInput interface {
	pulumi.Input

	ToBackupDatabaseArrayOutput() BackupDatabaseArrayOutput
	ToBackupDatabaseArrayOutputWithContext(context.Context) BackupDatabaseArrayOutput
}

type BackupDatabaseArray []BackupDatabaseInput

func (BackupDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupDatabase)(nil)).Elem()
}

func (i BackupDatabaseArray) ToBackupDatabaseArrayOutput() BackupDatabaseArrayOutput {
	return i.ToBackupDatabaseArrayOutputWithContext(context.Background())
}

func (i BackupDatabaseArray) ToBackupDatabaseArrayOutputWithContext(ctx context.Context) BackupDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupDatabaseArrayOutput)
}

type BackupDatabaseOutput struct{ *pulumi.OutputState }

func (BackupDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupDatabase)(nil)).Elem()
}

func (o BackupDatabaseOutput) ToBackupDatabaseOutput() BackupDatabaseOutput {
	return o
}

func (o BackupDatabaseOutput) ToBackupDatabaseOutputWithContext(ctx context.Context) BackupDatabaseOutput {
	return o
}

// Database to be backed up for Microsoft SQL Server.
func (o BackupDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type BackupDatabaseArrayOutput struct{ *pulumi.OutputState }

func (BackupDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupDatabase)(nil)).Elem()
}

func (o BackupDatabaseArrayOutput) ToBackupDatabaseArrayOutput() BackupDatabaseArrayOutput {
	return o
}

func (o BackupDatabaseArrayOutput) ToBackupDatabaseArrayOutputWithContext(ctx context.Context) BackupDatabaseArrayOutput {
	return o
}

func (o BackupDatabaseArrayOutput) Index(i pulumi.IntInput) BackupDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupDatabase {
		return vs[0].([]BackupDatabase)[vs[1].(int)]
	}).(BackupDatabaseOutput)
}

type InstanceBackupStrategy struct {
	// Specifies the retention days for specific backup files. The value range is from 0 to 732.
	//
	// > **NOTE:** Primary/standby DB instances of Microsoft SQL Server do not support disabling the automated backup
	// policy.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup cycle. Automatic backups will be performed on the specified days of
	// the week, except when disabling the automatic backup policy. The value range is a comma-separated number, where each
	// number represents a day of the week. For example, a value of 1,2,3,4 would set the backup cycle to Monday, Tuesday,
	// Wednesday, and Thursday. The default value is 1,2,3,4,5,6,7.
	Period *string `pulumi:"period"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the **hh:mm-HH:MM**
	// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
	// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
	// 00.
	StartTime string `pulumi:"startTime"`
}

// InstanceBackupStrategyInput is an input type that accepts InstanceBackupStrategyArgs and InstanceBackupStrategyOutput values.
// You can construct a concrete instance of `InstanceBackupStrategyInput` via:
//
//	InstanceBackupStrategyArgs{...}
type InstanceBackupStrategyInput interface {
	pulumi.Input

	ToInstanceBackupStrategyOutput() InstanceBackupStrategyOutput
	ToInstanceBackupStrategyOutputWithContext(context.Context) InstanceBackupStrategyOutput
}

type InstanceBackupStrategyArgs struct {
	// Specifies the retention days for specific backup files. The value range is from 0 to 732.
	//
	// > **NOTE:** Primary/standby DB instances of Microsoft SQL Server do not support disabling the automated backup
	// policy.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup cycle. Automatic backups will be performed on the specified days of
	// the week, except when disabling the automatic backup policy. The value range is a comma-separated number, where each
	// number represents a day of the week. For example, a value of 1,2,3,4 would set the backup cycle to Monday, Tuesday,
	// Wednesday, and Thursday. The default value is 1,2,3,4,5,6,7.
	Period pulumi.StringPtrInput `pulumi:"period"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the **hh:mm-HH:MM**
	// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
	// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
	// 00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (InstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupStrategy)(nil)).Elem()
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyOutput() InstanceBackupStrategyOutput {
	return i.ToInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyOutputWithContext(ctx context.Context) InstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupStrategyOutput)
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return i.ToInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupStrategyOutput).ToInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// InstanceBackupStrategyPtrInput is an input type that accepts InstanceBackupStrategyArgs, InstanceBackupStrategyPtr and InstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `InstanceBackupStrategyPtrInput` via:
//
//	        InstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type InstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput
	ToInstanceBackupStrategyPtrOutputWithContext(context.Context) InstanceBackupStrategyPtrOutput
}

type instanceBackupStrategyPtrType InstanceBackupStrategyArgs

func InstanceBackupStrategyPtr(v *InstanceBackupStrategyArgs) InstanceBackupStrategyPtrInput {
	return (*instanceBackupStrategyPtrType)(v)
}

func (*instanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupStrategy)(nil)).Elem()
}

func (i *instanceBackupStrategyPtrType) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return i.ToInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *instanceBackupStrategyPtrType) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupStrategyPtrOutput)
}

type InstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (InstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupStrategy)(nil)).Elem()
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyOutput() InstanceBackupStrategyOutput {
	return o
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyOutputWithContext(ctx context.Context) InstanceBackupStrategyOutput {
	return o
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return o.ToInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackupStrategy) *InstanceBackupStrategy {
		return &v
	}).(InstanceBackupStrategyPtrOutput)
}

// Specifies the retention days for specific backup files. The value range is from 0 to 732.
//
// > **NOTE:** Primary/standby DB instances of Microsoft SQL Server do not support disabling the automated backup
// policy.
func (o InstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup cycle. Automatic backups will be performed on the specified days of
// the week, except when disabling the automatic backup policy. The value range is a comma-separated number, where each
// number represents a day of the week. For example, a value of 1,2,3,4 would set the backup cycle to Monday, Tuesday,
// Wednesday, and Thursday. The default value is 1,2,3,4,5,6,7.
func (o InstanceBackupStrategyOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceBackupStrategy) *string { return v.Period }).(pulumi.StringPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the **hh:mm-HH:MM**
// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
// 00.
func (o InstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type InstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupStrategy)(nil)).Elem()
}

func (o InstanceBackupStrategyPtrOutput) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return o
}

func (o InstanceBackupStrategyPtrOutput) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return o
}

func (o InstanceBackupStrategyPtrOutput) Elem() InstanceBackupStrategyOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) InstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret InstanceBackupStrategy
		return ret
	}).(InstanceBackupStrategyOutput)
}

// Specifies the retention days for specific backup files. The value range is from 0 to 732.
//
// > **NOTE:** Primary/standby DB instances of Microsoft SQL Server do not support disabling the automated backup
// policy.
func (o InstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup cycle. Automatic backups will be performed on the specified days of
// the week, except when disabling the automatic backup policy. The value range is a comma-separated number, where each
// number represents a day of the week. For example, a value of 1,2,3,4 would set the backup cycle to Monday, Tuesday,
// Wednesday, and Thursday. The default value is 1,2,3,4,5,6,7.
func (o InstanceBackupStrategyPtrOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the **hh:mm-HH:MM**
// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
// 00.
func (o InstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceDb struct {
	// Specifies the database password. The value should contain 8 to 32 characters,
	// including uppercase and lowercase letters, digits, and the following special characters: ~!@#%^*-_=+? You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password *string `pulumi:"password"`
	// Specifies the database port.
	// + The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
	//   and cannot be used). The default value is 3306.
	// + The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
	// + The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
	//   default value is 1433.
	// + The MariaDB database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
	//   and cannot be used). The default value is 3306.
	Port *int `pulumi:"port"`
	// Specifies the DB engine. Available value are **MySQL**, **PostgreSQL**
	// and **SQLServer**. Changing this parameter will create a new resource.
	Type     string  `pulumi:"type"`
	UserName *string `pulumi:"userName"`
	// Specifies the database version. Changing this parameter will create a new
	// resource.
	Version string `pulumi:"version"`
}

// InstanceDbInput is an input type that accepts InstanceDbArgs and InstanceDbOutput values.
// You can construct a concrete instance of `InstanceDbInput` via:
//
//	InstanceDbArgs{...}
type InstanceDbInput interface {
	pulumi.Input

	ToInstanceDbOutput() InstanceDbOutput
	ToInstanceDbOutputWithContext(context.Context) InstanceDbOutput
}

type InstanceDbArgs struct {
	// Specifies the database password. The value should contain 8 to 32 characters,
	// including uppercase and lowercase letters, digits, and the following special characters: ~!@#%^*-_=+? You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specifies the database port.
	// + The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
	//   and cannot be used). The default value is 3306.
	// + The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
	// + The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
	//   default value is 1433.
	// + The MariaDB database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
	//   and cannot be used). The default value is 3306.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Specifies the DB engine. Available value are **MySQL**, **PostgreSQL**
	// and **SQLServer**. Changing this parameter will create a new resource.
	Type     pulumi.StringInput    `pulumi:"type"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Specifies the database version. Changing this parameter will create a new
	// resource.
	Version pulumi.StringInput `pulumi:"version"`
}

func (InstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDb)(nil)).Elem()
}

func (i InstanceDbArgs) ToInstanceDbOutput() InstanceDbOutput {
	return i.ToInstanceDbOutputWithContext(context.Background())
}

func (i InstanceDbArgs) ToInstanceDbOutputWithContext(ctx context.Context) InstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbOutput)
}

func (i InstanceDbArgs) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return i.ToInstanceDbPtrOutputWithContext(context.Background())
}

func (i InstanceDbArgs) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbOutput).ToInstanceDbPtrOutputWithContext(ctx)
}

// InstanceDbPtrInput is an input type that accepts InstanceDbArgs, InstanceDbPtr and InstanceDbPtrOutput values.
// You can construct a concrete instance of `InstanceDbPtrInput` via:
//
//	        InstanceDbArgs{...}
//
//	or:
//
//	        nil
type InstanceDbPtrInput interface {
	pulumi.Input

	ToInstanceDbPtrOutput() InstanceDbPtrOutput
	ToInstanceDbPtrOutputWithContext(context.Context) InstanceDbPtrOutput
}

type instanceDbPtrType InstanceDbArgs

func InstanceDbPtr(v *InstanceDbArgs) InstanceDbPtrInput {
	return (*instanceDbPtrType)(v)
}

func (*instanceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDb)(nil)).Elem()
}

func (i *instanceDbPtrType) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return i.ToInstanceDbPtrOutputWithContext(context.Background())
}

func (i *instanceDbPtrType) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbPtrOutput)
}

type InstanceDbOutput struct{ *pulumi.OutputState }

func (InstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDb)(nil)).Elem()
}

func (o InstanceDbOutput) ToInstanceDbOutput() InstanceDbOutput {
	return o
}

func (o InstanceDbOutput) ToInstanceDbOutputWithContext(ctx context.Context) InstanceDbOutput {
	return o
}

func (o InstanceDbOutput) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return o.ToInstanceDbPtrOutputWithContext(context.Background())
}

func (o InstanceDbOutput) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDb) *InstanceDb {
		return &v
	}).(InstanceDbPtrOutput)
}

// Specifies the database password. The value should contain 8 to 32 characters,
// including uppercase and lowercase letters, digits, and the following special characters: ~!@#%^*-_=+? You are advised
// to enter a strong password to improve security, preventing security risks such as brute force cracking.
func (o InstanceDbOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDb) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specifies the database port.
//   - The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
//     and cannot be used). The default value is 3306.
//   - The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
//   - The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
//     default value is 1433.
//   - The MariaDB database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
//     and cannot be used). The default value is 3306.
func (o InstanceDbOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDb) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Specifies the DB engine. Available value are **MySQL**, **PostgreSQL**
// and **SQLServer**. Changing this parameter will create a new resource.
func (o InstanceDbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDb) string { return v.Type }).(pulumi.StringOutput)
}

func (o InstanceDbOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDb) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Specifies the database version. Changing this parameter will create a new
// resource.
func (o InstanceDbOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDb) string { return v.Version }).(pulumi.StringOutput)
}

type InstanceDbPtrOutput struct{ *pulumi.OutputState }

func (InstanceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDb)(nil)).Elem()
}

func (o InstanceDbPtrOutput) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return o
}

func (o InstanceDbPtrOutput) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return o
}

func (o InstanceDbPtrOutput) Elem() InstanceDbOutput {
	return o.ApplyT(func(v *InstanceDb) InstanceDb {
		if v != nil {
			return *v
		}
		var ret InstanceDb
		return ret
	}).(InstanceDbOutput)
}

// Specifies the database password. The value should contain 8 to 32 characters,
// including uppercase and lowercase letters, digits, and the following special characters: ~!@#%^*-_=+? You are advised
// to enter a strong password to improve security, preventing security risks such as brute force cracking.
func (o InstanceDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Specifies the database port.
//   - The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
//     and cannot be used). The default value is 3306.
//   - The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
//   - The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
//     default value is 1433.
//   - The MariaDB database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
//     and cannot be used). The default value is 3306.
func (o InstanceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Specifies the DB engine. Available value are **MySQL**, **PostgreSQL**
// and **SQLServer**. Changing this parameter will create a new resource.
func (o InstanceDbPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o InstanceDbPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version. Changing this parameter will create a new
// resource.
func (o InstanceDbPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type InstanceMsdtcHost struct {
	// Specifies the host name.
	HostName string `pulumi:"hostName"`
	// Indicates the host ID.
	Id *string `pulumi:"id"`
	// Specifies the host IP address.
	Ip string `pulumi:"ip"`
}

// InstanceMsdtcHostInput is an input type that accepts InstanceMsdtcHostArgs and InstanceMsdtcHostOutput values.
// You can construct a concrete instance of `InstanceMsdtcHostInput` via:
//
//	InstanceMsdtcHostArgs{...}
type InstanceMsdtcHostInput interface {
	pulumi.Input

	ToInstanceMsdtcHostOutput() InstanceMsdtcHostOutput
	ToInstanceMsdtcHostOutputWithContext(context.Context) InstanceMsdtcHostOutput
}

type InstanceMsdtcHostArgs struct {
	// Specifies the host name.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Indicates the host ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the host IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (InstanceMsdtcHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMsdtcHost)(nil)).Elem()
}

func (i InstanceMsdtcHostArgs) ToInstanceMsdtcHostOutput() InstanceMsdtcHostOutput {
	return i.ToInstanceMsdtcHostOutputWithContext(context.Background())
}

func (i InstanceMsdtcHostArgs) ToInstanceMsdtcHostOutputWithContext(ctx context.Context) InstanceMsdtcHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMsdtcHostOutput)
}

// InstanceMsdtcHostArrayInput is an input type that accepts InstanceMsdtcHostArray and InstanceMsdtcHostArrayOutput values.
// You can construct a concrete instance of `InstanceMsdtcHostArrayInput` via:
//
//	InstanceMsdtcHostArray{ InstanceMsdtcHostArgs{...} }
type InstanceMsdtcHostArrayInput interface {
	pulumi.Input

	ToInstanceMsdtcHostArrayOutput() InstanceMsdtcHostArrayOutput
	ToInstanceMsdtcHostArrayOutputWithContext(context.Context) InstanceMsdtcHostArrayOutput
}

type InstanceMsdtcHostArray []InstanceMsdtcHostInput

func (InstanceMsdtcHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMsdtcHost)(nil)).Elem()
}

func (i InstanceMsdtcHostArray) ToInstanceMsdtcHostArrayOutput() InstanceMsdtcHostArrayOutput {
	return i.ToInstanceMsdtcHostArrayOutputWithContext(context.Background())
}

func (i InstanceMsdtcHostArray) ToInstanceMsdtcHostArrayOutputWithContext(ctx context.Context) InstanceMsdtcHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMsdtcHostArrayOutput)
}

type InstanceMsdtcHostOutput struct{ *pulumi.OutputState }

func (InstanceMsdtcHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMsdtcHost)(nil)).Elem()
}

func (o InstanceMsdtcHostOutput) ToInstanceMsdtcHostOutput() InstanceMsdtcHostOutput {
	return o
}

func (o InstanceMsdtcHostOutput) ToInstanceMsdtcHostOutputWithContext(ctx context.Context) InstanceMsdtcHostOutput {
	return o
}

// Specifies the host name.
func (o InstanceMsdtcHostOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMsdtcHost) string { return v.HostName }).(pulumi.StringOutput)
}

// Indicates the host ID.
func (o InstanceMsdtcHostOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMsdtcHost) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the host IP address.
func (o InstanceMsdtcHostOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMsdtcHost) string { return v.Ip }).(pulumi.StringOutput)
}

type InstanceMsdtcHostArrayOutput struct{ *pulumi.OutputState }

func (InstanceMsdtcHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMsdtcHost)(nil)).Elem()
}

func (o InstanceMsdtcHostArrayOutput) ToInstanceMsdtcHostArrayOutput() InstanceMsdtcHostArrayOutput {
	return o
}

func (o InstanceMsdtcHostArrayOutput) ToInstanceMsdtcHostArrayOutputWithContext(ctx context.Context) InstanceMsdtcHostArrayOutput {
	return o
}

func (o InstanceMsdtcHostArrayOutput) Index(i pulumi.IntInput) InstanceMsdtcHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMsdtcHost {
		return vs[0].([]InstanceMsdtcHost)[vs[1].(int)]
	}).(InstanceMsdtcHostOutput)
}

type InstanceNode struct {
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Indicates the host ID.
	Id *string `pulumi:"id"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the node type. The value can be master or slave, indicating the primary node or standby node
	// respectively.
	Role *string `pulumi:"role"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
}

// InstanceNodeInput is an input type that accepts InstanceNodeArgs and InstanceNodeOutput values.
// You can construct a concrete instance of `InstanceNodeInput` via:
//
//	InstanceNodeArgs{...}
type InstanceNodeInput interface {
	pulumi.Input

	ToInstanceNodeOutput() InstanceNodeOutput
	ToInstanceNodeOutputWithContext(context.Context) InstanceNodeOutput
}

type InstanceNodeArgs struct {
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Indicates the host ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the node type. The value can be master or slave, indicating the primary node or standby node
	// respectively.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArgs) ToInstanceNodeOutput() InstanceNodeOutput {
	return i.ToInstanceNodeOutputWithContext(context.Background())
}

func (i InstanceNodeArgs) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeOutput)
}

// InstanceNodeArrayInput is an input type that accepts InstanceNodeArray and InstanceNodeArrayOutput values.
// You can construct a concrete instance of `InstanceNodeArrayInput` via:
//
//	InstanceNodeArray{ InstanceNodeArgs{...} }
type InstanceNodeArrayInput interface {
	pulumi.Input

	ToInstanceNodeArrayOutput() InstanceNodeArrayOutput
	ToInstanceNodeArrayOutputWithContext(context.Context) InstanceNodeArrayOutput
}

type InstanceNodeArray []InstanceNodeInput

func (InstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return i.ToInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeArrayOutput)
}

type InstanceNodeOutput struct{ *pulumi.OutputState }

func (InstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (o InstanceNodeOutput) ToInstanceNodeOutput() InstanceNodeOutput {
	return o
}

func (o InstanceNodeOutput) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return o
}

// Specifies the list of AZ name. Changing this parameter will create a
// new resource.
func (o InstanceNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Indicates the host ID.
func (o InstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the DB instance name. The DB instance name of the same type must be unique for
// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
// contain only letters, digits, hyphens (-), and underscores (_).
func (o InstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the node type. The value can be master or slave, indicating the primary node or standby node
// respectively.
func (o InstanceNodeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o InstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) Index(i pulumi.IntInput) InstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNode {
		return vs[0].([]InstanceNode)[vs[1].(int)]
	}).(InstanceNodeOutput)
}

type InstanceParameter struct {
	// Specifies the parameter name. Some of them needs the instance to be restarted
	// to take effect.
	Name string `pulumi:"name"`
	// Specifies the parameter value.
	//
	// <a name="RdsInstance_MsdtcHosts"></a>
	// The `msdtcHosts` block supports:
	Value string `pulumi:"value"`
}

// InstanceParameterInput is an input type that accepts InstanceParameterArgs and InstanceParameterOutput values.
// You can construct a concrete instance of `InstanceParameterInput` via:
//
//	InstanceParameterArgs{...}
type InstanceParameterInput interface {
	pulumi.Input

	ToInstanceParameterOutput() InstanceParameterOutput
	ToInstanceParameterOutputWithContext(context.Context) InstanceParameterOutput
}

type InstanceParameterArgs struct {
	// Specifies the parameter name. Some of them needs the instance to be restarted
	// to take effect.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the parameter value.
	//
	// <a name="RdsInstance_MsdtcHosts"></a>
	// The `msdtcHosts` block supports:
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParameter)(nil)).Elem()
}

func (i InstanceParameterArgs) ToInstanceParameterOutput() InstanceParameterOutput {
	return i.ToInstanceParameterOutputWithContext(context.Background())
}

func (i InstanceParameterArgs) ToInstanceParameterOutputWithContext(ctx context.Context) InstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParameterOutput)
}

// InstanceParameterArrayInput is an input type that accepts InstanceParameterArray and InstanceParameterArrayOutput values.
// You can construct a concrete instance of `InstanceParameterArrayInput` via:
//
//	InstanceParameterArray{ InstanceParameterArgs{...} }
type InstanceParameterArrayInput interface {
	pulumi.Input

	ToInstanceParameterArrayOutput() InstanceParameterArrayOutput
	ToInstanceParameterArrayOutputWithContext(context.Context) InstanceParameterArrayOutput
}

type InstanceParameterArray []InstanceParameterInput

func (InstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParameter)(nil)).Elem()
}

func (i InstanceParameterArray) ToInstanceParameterArrayOutput() InstanceParameterArrayOutput {
	return i.ToInstanceParameterArrayOutputWithContext(context.Background())
}

func (i InstanceParameterArray) ToInstanceParameterArrayOutputWithContext(ctx context.Context) InstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParameterArrayOutput)
}

type InstanceParameterOutput struct{ *pulumi.OutputState }

func (InstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParameter)(nil)).Elem()
}

func (o InstanceParameterOutput) ToInstanceParameterOutput() InstanceParameterOutput {
	return o
}

func (o InstanceParameterOutput) ToInstanceParameterOutputWithContext(ctx context.Context) InstanceParameterOutput {
	return o
}

// Specifies the parameter name. Some of them needs the instance to be restarted
// to take effect.
func (o InstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the parameter value.
//
// <a name="RdsInstance_MsdtcHosts"></a>
// The `msdtcHosts` block supports:
func (o InstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (InstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParameter)(nil)).Elem()
}

func (o InstanceParameterArrayOutput) ToInstanceParameterArrayOutput() InstanceParameterArrayOutput {
	return o
}

func (o InstanceParameterArrayOutput) ToInstanceParameterArrayOutputWithContext(ctx context.Context) InstanceParameterArrayOutput {
	return o
}

func (o InstanceParameterArrayOutput) Index(i pulumi.IntInput) InstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceParameter {
		return vs[0].([]InstanceParameter)[vs[1].(int)]
	}).(InstanceParameterOutput)
}

type InstanceRestore struct {
	// Specifies the ID of the backup used to restore data. Changing this
	// parameter will create a new resource.
	BackupId string `pulumi:"backupId"`
	// Specifies the database to be restored. This parameter applies only to
	// Microsoft SQL Server databases. Changing this parameter will create a new resource.
	DatabaseName map[string]string `pulumi:"databaseName"`
	// Specifies the source DB instance ID. Changing this parameter will create
	// a new resource.
	InstanceId string `pulumi:"instanceId"`
}

// InstanceRestoreInput is an input type that accepts InstanceRestoreArgs and InstanceRestoreOutput values.
// You can construct a concrete instance of `InstanceRestoreInput` via:
//
//	InstanceRestoreArgs{...}
type InstanceRestoreInput interface {
	pulumi.Input

	ToInstanceRestoreOutput() InstanceRestoreOutput
	ToInstanceRestoreOutputWithContext(context.Context) InstanceRestoreOutput
}

type InstanceRestoreArgs struct {
	// Specifies the ID of the backup used to restore data. Changing this
	// parameter will create a new resource.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// Specifies the database to be restored. This parameter applies only to
	// Microsoft SQL Server databases. Changing this parameter will create a new resource.
	DatabaseName pulumi.StringMapInput `pulumi:"databaseName"`
	// Specifies the source DB instance ID. Changing this parameter will create
	// a new resource.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (InstanceRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRestore)(nil)).Elem()
}

func (i InstanceRestoreArgs) ToInstanceRestoreOutput() InstanceRestoreOutput {
	return i.ToInstanceRestoreOutputWithContext(context.Background())
}

func (i InstanceRestoreArgs) ToInstanceRestoreOutputWithContext(ctx context.Context) InstanceRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRestoreOutput)
}

func (i InstanceRestoreArgs) ToInstanceRestorePtrOutput() InstanceRestorePtrOutput {
	return i.ToInstanceRestorePtrOutputWithContext(context.Background())
}

func (i InstanceRestoreArgs) ToInstanceRestorePtrOutputWithContext(ctx context.Context) InstanceRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRestoreOutput).ToInstanceRestorePtrOutputWithContext(ctx)
}

// InstanceRestorePtrInput is an input type that accepts InstanceRestoreArgs, InstanceRestorePtr and InstanceRestorePtrOutput values.
// You can construct a concrete instance of `InstanceRestorePtrInput` via:
//
//	        InstanceRestoreArgs{...}
//
//	or:
//
//	        nil
type InstanceRestorePtrInput interface {
	pulumi.Input

	ToInstanceRestorePtrOutput() InstanceRestorePtrOutput
	ToInstanceRestorePtrOutputWithContext(context.Context) InstanceRestorePtrOutput
}

type instanceRestorePtrType InstanceRestoreArgs

func InstanceRestorePtr(v *InstanceRestoreArgs) InstanceRestorePtrInput {
	return (*instanceRestorePtrType)(v)
}

func (*instanceRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRestore)(nil)).Elem()
}

func (i *instanceRestorePtrType) ToInstanceRestorePtrOutput() InstanceRestorePtrOutput {
	return i.ToInstanceRestorePtrOutputWithContext(context.Background())
}

func (i *instanceRestorePtrType) ToInstanceRestorePtrOutputWithContext(ctx context.Context) InstanceRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRestorePtrOutput)
}

type InstanceRestoreOutput struct{ *pulumi.OutputState }

func (InstanceRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRestore)(nil)).Elem()
}

func (o InstanceRestoreOutput) ToInstanceRestoreOutput() InstanceRestoreOutput {
	return o
}

func (o InstanceRestoreOutput) ToInstanceRestoreOutputWithContext(ctx context.Context) InstanceRestoreOutput {
	return o
}

func (o InstanceRestoreOutput) ToInstanceRestorePtrOutput() InstanceRestorePtrOutput {
	return o.ToInstanceRestorePtrOutputWithContext(context.Background())
}

func (o InstanceRestoreOutput) ToInstanceRestorePtrOutputWithContext(ctx context.Context) InstanceRestorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceRestore) *InstanceRestore {
		return &v
	}).(InstanceRestorePtrOutput)
}

// Specifies the ID of the backup used to restore data. Changing this
// parameter will create a new resource.
func (o InstanceRestoreOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRestore) string { return v.BackupId }).(pulumi.StringOutput)
}

// Specifies the database to be restored. This parameter applies only to
// Microsoft SQL Server databases. Changing this parameter will create a new resource.
func (o InstanceRestoreOutput) DatabaseName() pulumi.StringMapOutput {
	return o.ApplyT(func(v InstanceRestore) map[string]string { return v.DatabaseName }).(pulumi.StringMapOutput)
}

// Specifies the source DB instance ID. Changing this parameter will create
// a new resource.
func (o InstanceRestoreOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRestore) string { return v.InstanceId }).(pulumi.StringOutput)
}

type InstanceRestorePtrOutput struct{ *pulumi.OutputState }

func (InstanceRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRestore)(nil)).Elem()
}

func (o InstanceRestorePtrOutput) ToInstanceRestorePtrOutput() InstanceRestorePtrOutput {
	return o
}

func (o InstanceRestorePtrOutput) ToInstanceRestorePtrOutputWithContext(ctx context.Context) InstanceRestorePtrOutput {
	return o
}

func (o InstanceRestorePtrOutput) Elem() InstanceRestoreOutput {
	return o.ApplyT(func(v *InstanceRestore) InstanceRestore {
		if v != nil {
			return *v
		}
		var ret InstanceRestore
		return ret
	}).(InstanceRestoreOutput)
}

// Specifies the ID of the backup used to restore data. Changing this
// parameter will create a new resource.
func (o InstanceRestorePtrOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRestore) *string {
		if v == nil {
			return nil
		}
		return &v.BackupId
	}).(pulumi.StringPtrOutput)
}

// Specifies the database to be restored. This parameter applies only to
// Microsoft SQL Server databases. Changing this parameter will create a new resource.
func (o InstanceRestorePtrOutput) DatabaseName() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceRestore) map[string]string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringMapOutput)
}

// Specifies the source DB instance ID. Changing this parameter will create
// a new resource.
func (o InstanceRestorePtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRestore) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

type InstanceVolume struct {
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	// Specifies the upper limit of automatic expansion of storage, in GB.
	LimitSize *int `pulumi:"limitSize"`
	// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
	// multiple of 10 and greater than the original size.
	Size int `pulumi:"size"`
	// Specifies the threshold to trigger automatic expansion.\
	// If the available storage drops to this threshold or `10` GB, the automatic expansion is triggered.
	// The valid values are as follows:
	// + **10**
	// + **15**
	// + **20**
	TriggerThreshold *int `pulumi:"triggerThreshold"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + **CLOUDSSD**: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances (MySQL and PostreSQL).
	// + **ESSD**: extreme SSD storage. Supported by: MySQL primary/standby, PostgeSQL (both single and primary/standby).
	// + **ULTRAHIGH** the only storage type for SQLServer, not supported by other DB engines.
	//
	// Changing this parameter will create a new resource.
	Type string `pulumi:"type"`
}

// InstanceVolumeInput is an input type that accepts InstanceVolumeArgs and InstanceVolumeOutput values.
// You can construct a concrete instance of `InstanceVolumeInput` via:
//
//	InstanceVolumeArgs{...}
type InstanceVolumeInput interface {
	pulumi.Input

	ToInstanceVolumeOutput() InstanceVolumeOutput
	ToInstanceVolumeOutputWithContext(context.Context) InstanceVolumeOutput
}

type InstanceVolumeArgs struct {
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId pulumi.StringPtrInput `pulumi:"diskEncryptionId"`
	// Specifies the upper limit of automatic expansion of storage, in GB.
	LimitSize pulumi.IntPtrInput `pulumi:"limitSize"`
	// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
	// multiple of 10 and greater than the original size.
	Size pulumi.IntInput `pulumi:"size"`
	// Specifies the threshold to trigger automatic expansion.\
	// If the available storage drops to this threshold or `10` GB, the automatic expansion is triggered.
	// The valid values are as follows:
	// + **10**
	// + **15**
	// + **20**
	TriggerThreshold pulumi.IntPtrInput `pulumi:"triggerThreshold"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + **CLOUDSSD**: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances (MySQL and PostreSQL).
	// + **ESSD**: extreme SSD storage. Supported by: MySQL primary/standby, PostgeSQL (both single and primary/standby).
	// + **ULTRAHIGH** the only storage type for SQLServer, not supported by other DB engines.
	//
	// Changing this parameter will create a new resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVolume)(nil)).Elem()
}

func (i InstanceVolumeArgs) ToInstanceVolumeOutput() InstanceVolumeOutput {
	return i.ToInstanceVolumeOutputWithContext(context.Background())
}

func (i InstanceVolumeArgs) ToInstanceVolumeOutputWithContext(ctx context.Context) InstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVolumeOutput)
}

func (i InstanceVolumeArgs) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return i.ToInstanceVolumePtrOutputWithContext(context.Background())
}

func (i InstanceVolumeArgs) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVolumeOutput).ToInstanceVolumePtrOutputWithContext(ctx)
}

// InstanceVolumePtrInput is an input type that accepts InstanceVolumeArgs, InstanceVolumePtr and InstanceVolumePtrOutput values.
// You can construct a concrete instance of `InstanceVolumePtrInput` via:
//
//	        InstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type InstanceVolumePtrInput interface {
	pulumi.Input

	ToInstanceVolumePtrOutput() InstanceVolumePtrOutput
	ToInstanceVolumePtrOutputWithContext(context.Context) InstanceVolumePtrOutput
}

type instanceVolumePtrType InstanceVolumeArgs

func InstanceVolumePtr(v *InstanceVolumeArgs) InstanceVolumePtrInput {
	return (*instanceVolumePtrType)(v)
}

func (*instanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVolume)(nil)).Elem()
}

func (i *instanceVolumePtrType) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return i.ToInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *instanceVolumePtrType) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVolumePtrOutput)
}

type InstanceVolumeOutput struct{ *pulumi.OutputState }

func (InstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVolume)(nil)).Elem()
}

func (o InstanceVolumeOutput) ToInstanceVolumeOutput() InstanceVolumeOutput {
	return o
}

func (o InstanceVolumeOutput) ToInstanceVolumeOutputWithContext(ctx context.Context) InstanceVolumeOutput {
	return o
}

func (o InstanceVolumeOutput) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return o.ToInstanceVolumePtrOutputWithContext(context.Background())
}

func (o InstanceVolumeOutput) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceVolume) *InstanceVolume {
		return &v
	}).(InstanceVolumePtrOutput)
}

// Specifies the key ID for disk encryption.
// Changing this parameter will create a new resource.
func (o InstanceVolumeOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceVolume) *string { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

// Specifies the upper limit of automatic expansion of storage, in GB.
func (o InstanceVolumeOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceVolume) *int { return v.LimitSize }).(pulumi.IntPtrOutput)
}

// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
// multiple of 10 and greater than the original size.
func (o InstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Specifies the threshold to trigger automatic expansion.\
// If the available storage drops to this threshold or `10` GB, the automatic expansion is triggered.
// The valid values are as follows:
// + **10**
// + **15**
// + **20**
func (o InstanceVolumeOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceVolume) *int { return v.TriggerThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - **CLOUDSSD**: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances (MySQL and PostreSQL).
//   - **ESSD**: extreme SSD storage. Supported by: MySQL primary/standby, PostgeSQL (both single and primary/standby).
//   - **ULTRAHIGH** the only storage type for SQLServer, not supported by other DB engines.
//
// Changing this parameter will create a new resource.
func (o InstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (InstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVolume)(nil)).Elem()
}

func (o InstanceVolumePtrOutput) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return o
}

func (o InstanceVolumePtrOutput) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return o
}

func (o InstanceVolumePtrOutput) Elem() InstanceVolumeOutput {
	return o.ApplyT(func(v *InstanceVolume) InstanceVolume {
		if v != nil {
			return *v
		}
		var ret InstanceVolume
		return ret
	}).(InstanceVolumeOutput)
}

// Specifies the key ID for disk encryption.
// Changing this parameter will create a new resource.
func (o InstanceVolumePtrOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionId
	}).(pulumi.StringPtrOutput)
}

// Specifies the upper limit of automatic expansion of storage, in GB.
func (o InstanceVolumePtrOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.LimitSize
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
// multiple of 10 and greater than the original size.
func (o InstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// Specifies the threshold to trigger automatic expansion.\
// If the available storage drops to this threshold or `10` GB, the automatic expansion is triggered.
// The valid values are as follows:
// + **10**
// + **15**
// + **20**
func (o InstanceVolumePtrOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.TriggerThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - **CLOUDSSD**: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances (MySQL and PostreSQL).
//   - **ESSD**: extreme SSD storage. Supported by: MySQL primary/standby, PostgeSQL (both single and primary/standby).
//   - **ULTRAHIGH** the only storage type for SQLServer, not supported by other DB engines.
//
// Changing this parameter will create a new resource.
func (o InstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MysqlDatabasePrivilegeUser struct {
	// Specifies the username of the database account.
	Name string `pulumi:"name"`
	// Specifies the read-only permission. The value can be:
	// + **true**: indicates the read-only permission.
	// + **false**: indicates the read and write permission.
	//
	// The default value is **false**.
	Readonly *bool `pulumi:"readonly"`
}

// MysqlDatabasePrivilegeUserInput is an input type that accepts MysqlDatabasePrivilegeUserArgs and MysqlDatabasePrivilegeUserOutput values.
// You can construct a concrete instance of `MysqlDatabasePrivilegeUserInput` via:
//
//	MysqlDatabasePrivilegeUserArgs{...}
type MysqlDatabasePrivilegeUserInput interface {
	pulumi.Input

	ToMysqlDatabasePrivilegeUserOutput() MysqlDatabasePrivilegeUserOutput
	ToMysqlDatabasePrivilegeUserOutputWithContext(context.Context) MysqlDatabasePrivilegeUserOutput
}

type MysqlDatabasePrivilegeUserArgs struct {
	// Specifies the username of the database account.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the read-only permission. The value can be:
	// + **true**: indicates the read-only permission.
	// + **false**: indicates the read and write permission.
	//
	// The default value is **false**.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (MysqlDatabasePrivilegeUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (i MysqlDatabasePrivilegeUserArgs) ToMysqlDatabasePrivilegeUserOutput() MysqlDatabasePrivilegeUserOutput {
	return i.ToMysqlDatabasePrivilegeUserOutputWithContext(context.Background())
}

func (i MysqlDatabasePrivilegeUserArgs) ToMysqlDatabasePrivilegeUserOutputWithContext(ctx context.Context) MysqlDatabasePrivilegeUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabasePrivilegeUserOutput)
}

// MysqlDatabasePrivilegeUserArrayInput is an input type that accepts MysqlDatabasePrivilegeUserArray and MysqlDatabasePrivilegeUserArrayOutput values.
// You can construct a concrete instance of `MysqlDatabasePrivilegeUserArrayInput` via:
//
//	MysqlDatabasePrivilegeUserArray{ MysqlDatabasePrivilegeUserArgs{...} }
type MysqlDatabasePrivilegeUserArrayInput interface {
	pulumi.Input

	ToMysqlDatabasePrivilegeUserArrayOutput() MysqlDatabasePrivilegeUserArrayOutput
	ToMysqlDatabasePrivilegeUserArrayOutputWithContext(context.Context) MysqlDatabasePrivilegeUserArrayOutput
}

type MysqlDatabasePrivilegeUserArray []MysqlDatabasePrivilegeUserInput

func (MysqlDatabasePrivilegeUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (i MysqlDatabasePrivilegeUserArray) ToMysqlDatabasePrivilegeUserArrayOutput() MysqlDatabasePrivilegeUserArrayOutput {
	return i.ToMysqlDatabasePrivilegeUserArrayOutputWithContext(context.Background())
}

func (i MysqlDatabasePrivilegeUserArray) ToMysqlDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) MysqlDatabasePrivilegeUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabasePrivilegeUserArrayOutput)
}

type MysqlDatabasePrivilegeUserOutput struct{ *pulumi.OutputState }

func (MysqlDatabasePrivilegeUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (o MysqlDatabasePrivilegeUserOutput) ToMysqlDatabasePrivilegeUserOutput() MysqlDatabasePrivilegeUserOutput {
	return o
}

func (o MysqlDatabasePrivilegeUserOutput) ToMysqlDatabasePrivilegeUserOutputWithContext(ctx context.Context) MysqlDatabasePrivilegeUserOutput {
	return o
}

// Specifies the username of the database account.
func (o MysqlDatabasePrivilegeUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDatabasePrivilegeUser) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the read-only permission. The value can be:
// + **true**: indicates the read-only permission.
// + **false**: indicates the read and write permission.
//
// The default value is **false**.
func (o MysqlDatabasePrivilegeUserOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MysqlDatabasePrivilegeUser) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type MysqlDatabasePrivilegeUserArrayOutput struct{ *pulumi.OutputState }

func (MysqlDatabasePrivilegeUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabasePrivilegeUser)(nil)).Elem()
}

func (o MysqlDatabasePrivilegeUserArrayOutput) ToMysqlDatabasePrivilegeUserArrayOutput() MysqlDatabasePrivilegeUserArrayOutput {
	return o
}

func (o MysqlDatabasePrivilegeUserArrayOutput) ToMysqlDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) MysqlDatabasePrivilegeUserArrayOutput {
	return o
}

func (o MysqlDatabasePrivilegeUserArrayOutput) Index(i pulumi.IntInput) MysqlDatabasePrivilegeUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDatabasePrivilegeUser {
		return vs[0].([]MysqlDatabasePrivilegeUser)[vs[1].(int)]
	}).(MysqlDatabasePrivilegeUserOutput)
}

type MysqlDatabaseTableRestoreDatabase struct {
	// Specifies the name of the table after restoration.
	//
	// Changing this creates a new resource.
	NewName string `pulumi:"newName"`
	// Specifies the name of the table before restoration.
	//
	// Changing this creates a new resource.
	OldName string `pulumi:"oldName"`
}

// MysqlDatabaseTableRestoreDatabaseInput is an input type that accepts MysqlDatabaseTableRestoreDatabaseArgs and MysqlDatabaseTableRestoreDatabaseOutput values.
// You can construct a concrete instance of `MysqlDatabaseTableRestoreDatabaseInput` via:
//
//	MysqlDatabaseTableRestoreDatabaseArgs{...}
type MysqlDatabaseTableRestoreDatabaseInput interface {
	pulumi.Input

	ToMysqlDatabaseTableRestoreDatabaseOutput() MysqlDatabaseTableRestoreDatabaseOutput
	ToMysqlDatabaseTableRestoreDatabaseOutputWithContext(context.Context) MysqlDatabaseTableRestoreDatabaseOutput
}

type MysqlDatabaseTableRestoreDatabaseArgs struct {
	// Specifies the name of the table after restoration.
	//
	// Changing this creates a new resource.
	NewName pulumi.StringInput `pulumi:"newName"`
	// Specifies the name of the table before restoration.
	//
	// Changing this creates a new resource.
	OldName pulumi.StringInput `pulumi:"oldName"`
}

func (MysqlDatabaseTableRestoreDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (i MysqlDatabaseTableRestoreDatabaseArgs) ToMysqlDatabaseTableRestoreDatabaseOutput() MysqlDatabaseTableRestoreDatabaseOutput {
	return i.ToMysqlDatabaseTableRestoreDatabaseOutputWithContext(context.Background())
}

func (i MysqlDatabaseTableRestoreDatabaseArgs) ToMysqlDatabaseTableRestoreDatabaseOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabaseTableRestoreDatabaseOutput)
}

// MysqlDatabaseTableRestoreDatabaseArrayInput is an input type that accepts MysqlDatabaseTableRestoreDatabaseArray and MysqlDatabaseTableRestoreDatabaseArrayOutput values.
// You can construct a concrete instance of `MysqlDatabaseTableRestoreDatabaseArrayInput` via:
//
//	MysqlDatabaseTableRestoreDatabaseArray{ MysqlDatabaseTableRestoreDatabaseArgs{...} }
type MysqlDatabaseTableRestoreDatabaseArrayInput interface {
	pulumi.Input

	ToMysqlDatabaseTableRestoreDatabaseArrayOutput() MysqlDatabaseTableRestoreDatabaseArrayOutput
	ToMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(context.Context) MysqlDatabaseTableRestoreDatabaseArrayOutput
}

type MysqlDatabaseTableRestoreDatabaseArray []MysqlDatabaseTableRestoreDatabaseInput

func (MysqlDatabaseTableRestoreDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (i MysqlDatabaseTableRestoreDatabaseArray) ToMysqlDatabaseTableRestoreDatabaseArrayOutput() MysqlDatabaseTableRestoreDatabaseArrayOutput {
	return i.ToMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(context.Background())
}

func (i MysqlDatabaseTableRestoreDatabaseArray) ToMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabaseTableRestoreDatabaseArrayOutput)
}

type MysqlDatabaseTableRestoreDatabaseOutput struct{ *pulumi.OutputState }

func (MysqlDatabaseTableRestoreDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (o MysqlDatabaseTableRestoreDatabaseOutput) ToMysqlDatabaseTableRestoreDatabaseOutput() MysqlDatabaseTableRestoreDatabaseOutput {
	return o
}

func (o MysqlDatabaseTableRestoreDatabaseOutput) ToMysqlDatabaseTableRestoreDatabaseOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreDatabaseOutput {
	return o
}

// Specifies the name of the table after restoration.
//
// Changing this creates a new resource.
func (o MysqlDatabaseTableRestoreDatabaseOutput) NewName() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDatabaseTableRestoreDatabase) string { return v.NewName }).(pulumi.StringOutput)
}

// Specifies the name of the table before restoration.
//
// Changing this creates a new resource.
func (o MysqlDatabaseTableRestoreDatabaseOutput) OldName() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDatabaseTableRestoreDatabase) string { return v.OldName }).(pulumi.StringOutput)
}

type MysqlDatabaseTableRestoreDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MysqlDatabaseTableRestoreDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabaseTableRestoreDatabase)(nil)).Elem()
}

func (o MysqlDatabaseTableRestoreDatabaseArrayOutput) ToMysqlDatabaseTableRestoreDatabaseArrayOutput() MysqlDatabaseTableRestoreDatabaseArrayOutput {
	return o
}

func (o MysqlDatabaseTableRestoreDatabaseArrayOutput) ToMysqlDatabaseTableRestoreDatabaseArrayOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreDatabaseArrayOutput {
	return o
}

func (o MysqlDatabaseTableRestoreDatabaseArrayOutput) Index(i pulumi.IntInput) MysqlDatabaseTableRestoreDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDatabaseTableRestoreDatabase {
		return vs[0].([]MysqlDatabaseTableRestoreDatabase)[vs[1].(int)]
	}).(MysqlDatabaseTableRestoreDatabaseOutput)
}

type MysqlDatabaseTableRestoreRestoreTable struct {
	// Specifies the database name.
	//
	// Changing this creates a new resource.
	Database string `pulumi:"database"`
	// Specifies the tables.
	// The tables structure is documented below.
	//
	// Changing this creates a new resource.
	//
	// <a name="tablesStruct"></a>
	// The `tables` block supports:
	Tables []MysqlDatabaseTableRestoreRestoreTableTable `pulumi:"tables"`
}

// MysqlDatabaseTableRestoreRestoreTableInput is an input type that accepts MysqlDatabaseTableRestoreRestoreTableArgs and MysqlDatabaseTableRestoreRestoreTableOutput values.
// You can construct a concrete instance of `MysqlDatabaseTableRestoreRestoreTableInput` via:
//
//	MysqlDatabaseTableRestoreRestoreTableArgs{...}
type MysqlDatabaseTableRestoreRestoreTableInput interface {
	pulumi.Input

	ToMysqlDatabaseTableRestoreRestoreTableOutput() MysqlDatabaseTableRestoreRestoreTableOutput
	ToMysqlDatabaseTableRestoreRestoreTableOutputWithContext(context.Context) MysqlDatabaseTableRestoreRestoreTableOutput
}

type MysqlDatabaseTableRestoreRestoreTableArgs struct {
	// Specifies the database name.
	//
	// Changing this creates a new resource.
	Database pulumi.StringInput `pulumi:"database"`
	// Specifies the tables.
	// The tables structure is documented below.
	//
	// Changing this creates a new resource.
	//
	// <a name="tablesStruct"></a>
	// The `tables` block supports:
	Tables MysqlDatabaseTableRestoreRestoreTableTableArrayInput `pulumi:"tables"`
}

func (MysqlDatabaseTableRestoreRestoreTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (i MysqlDatabaseTableRestoreRestoreTableArgs) ToMysqlDatabaseTableRestoreRestoreTableOutput() MysqlDatabaseTableRestoreRestoreTableOutput {
	return i.ToMysqlDatabaseTableRestoreRestoreTableOutputWithContext(context.Background())
}

func (i MysqlDatabaseTableRestoreRestoreTableArgs) ToMysqlDatabaseTableRestoreRestoreTableOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabaseTableRestoreRestoreTableOutput)
}

// MysqlDatabaseTableRestoreRestoreTableArrayInput is an input type that accepts MysqlDatabaseTableRestoreRestoreTableArray and MysqlDatabaseTableRestoreRestoreTableArrayOutput values.
// You can construct a concrete instance of `MysqlDatabaseTableRestoreRestoreTableArrayInput` via:
//
//	MysqlDatabaseTableRestoreRestoreTableArray{ MysqlDatabaseTableRestoreRestoreTableArgs{...} }
type MysqlDatabaseTableRestoreRestoreTableArrayInput interface {
	pulumi.Input

	ToMysqlDatabaseTableRestoreRestoreTableArrayOutput() MysqlDatabaseTableRestoreRestoreTableArrayOutput
	ToMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(context.Context) MysqlDatabaseTableRestoreRestoreTableArrayOutput
}

type MysqlDatabaseTableRestoreRestoreTableArray []MysqlDatabaseTableRestoreRestoreTableInput

func (MysqlDatabaseTableRestoreRestoreTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (i MysqlDatabaseTableRestoreRestoreTableArray) ToMysqlDatabaseTableRestoreRestoreTableArrayOutput() MysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return i.ToMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(context.Background())
}

func (i MysqlDatabaseTableRestoreRestoreTableArray) ToMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabaseTableRestoreRestoreTableArrayOutput)
}

type MysqlDatabaseTableRestoreRestoreTableOutput struct{ *pulumi.OutputState }

func (MysqlDatabaseTableRestoreRestoreTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (o MysqlDatabaseTableRestoreRestoreTableOutput) ToMysqlDatabaseTableRestoreRestoreTableOutput() MysqlDatabaseTableRestoreRestoreTableOutput {
	return o
}

func (o MysqlDatabaseTableRestoreRestoreTableOutput) ToMysqlDatabaseTableRestoreRestoreTableOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableOutput {
	return o
}

// Specifies the database name.
//
// Changing this creates a new resource.
func (o MysqlDatabaseTableRestoreRestoreTableOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDatabaseTableRestoreRestoreTable) string { return v.Database }).(pulumi.StringOutput)
}

// Specifies the tables.
// The tables structure is documented below.
//
// Changing this creates a new resource.
//
// <a name="tablesStruct"></a>
// The `tables` block supports:
func (o MysqlDatabaseTableRestoreRestoreTableOutput) Tables() MysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return o.ApplyT(func(v MysqlDatabaseTableRestoreRestoreTable) []MysqlDatabaseTableRestoreRestoreTableTable {
		return v.Tables
	}).(MysqlDatabaseTableRestoreRestoreTableTableArrayOutput)
}

type MysqlDatabaseTableRestoreRestoreTableArrayOutput struct{ *pulumi.OutputState }

func (MysqlDatabaseTableRestoreRestoreTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabaseTableRestoreRestoreTable)(nil)).Elem()
}

func (o MysqlDatabaseTableRestoreRestoreTableArrayOutput) ToMysqlDatabaseTableRestoreRestoreTableArrayOutput() MysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return o
}

func (o MysqlDatabaseTableRestoreRestoreTableArrayOutput) ToMysqlDatabaseTableRestoreRestoreTableArrayOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableArrayOutput {
	return o
}

func (o MysqlDatabaseTableRestoreRestoreTableArrayOutput) Index(i pulumi.IntInput) MysqlDatabaseTableRestoreRestoreTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDatabaseTableRestoreRestoreTable {
		return vs[0].([]MysqlDatabaseTableRestoreRestoreTable)[vs[1].(int)]
	}).(MysqlDatabaseTableRestoreRestoreTableOutput)
}

type MysqlDatabaseTableRestoreRestoreTableTable struct {
	// Specifies the name of the table after restoration.
	//
	// Changing this creates a new resource.
	NewName string `pulumi:"newName"`
	// Specifies the name of the table before restoration.
	//
	// Changing this creates a new resource.
	OldName string `pulumi:"oldName"`
}

// MysqlDatabaseTableRestoreRestoreTableTableInput is an input type that accepts MysqlDatabaseTableRestoreRestoreTableTableArgs and MysqlDatabaseTableRestoreRestoreTableTableOutput values.
// You can construct a concrete instance of `MysqlDatabaseTableRestoreRestoreTableTableInput` via:
//
//	MysqlDatabaseTableRestoreRestoreTableTableArgs{...}
type MysqlDatabaseTableRestoreRestoreTableTableInput interface {
	pulumi.Input

	ToMysqlDatabaseTableRestoreRestoreTableTableOutput() MysqlDatabaseTableRestoreRestoreTableTableOutput
	ToMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(context.Context) MysqlDatabaseTableRestoreRestoreTableTableOutput
}

type MysqlDatabaseTableRestoreRestoreTableTableArgs struct {
	// Specifies the name of the table after restoration.
	//
	// Changing this creates a new resource.
	NewName pulumi.StringInput `pulumi:"newName"`
	// Specifies the name of the table before restoration.
	//
	// Changing this creates a new resource.
	OldName pulumi.StringInput `pulumi:"oldName"`
}

func (MysqlDatabaseTableRestoreRestoreTableTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (i MysqlDatabaseTableRestoreRestoreTableTableArgs) ToMysqlDatabaseTableRestoreRestoreTableTableOutput() MysqlDatabaseTableRestoreRestoreTableTableOutput {
	return i.ToMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(context.Background())
}

func (i MysqlDatabaseTableRestoreRestoreTableTableArgs) ToMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabaseTableRestoreRestoreTableTableOutput)
}

// MysqlDatabaseTableRestoreRestoreTableTableArrayInput is an input type that accepts MysqlDatabaseTableRestoreRestoreTableTableArray and MysqlDatabaseTableRestoreRestoreTableTableArrayOutput values.
// You can construct a concrete instance of `MysqlDatabaseTableRestoreRestoreTableTableArrayInput` via:
//
//	MysqlDatabaseTableRestoreRestoreTableTableArray{ MysqlDatabaseTableRestoreRestoreTableTableArgs{...} }
type MysqlDatabaseTableRestoreRestoreTableTableArrayInput interface {
	pulumi.Input

	ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutput() MysqlDatabaseTableRestoreRestoreTableTableArrayOutput
	ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(context.Context) MysqlDatabaseTableRestoreRestoreTableTableArrayOutput
}

type MysqlDatabaseTableRestoreRestoreTableTableArray []MysqlDatabaseTableRestoreRestoreTableTableInput

func (MysqlDatabaseTableRestoreRestoreTableTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (i MysqlDatabaseTableRestoreRestoreTableTableArray) ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutput() MysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return i.ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(context.Background())
}

func (i MysqlDatabaseTableRestoreRestoreTableTableArray) ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlDatabaseTableRestoreRestoreTableTableArrayOutput)
}

type MysqlDatabaseTableRestoreRestoreTableTableOutput struct{ *pulumi.OutputState }

func (MysqlDatabaseTableRestoreRestoreTableTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (o MysqlDatabaseTableRestoreRestoreTableTableOutput) ToMysqlDatabaseTableRestoreRestoreTableTableOutput() MysqlDatabaseTableRestoreRestoreTableTableOutput {
	return o
}

func (o MysqlDatabaseTableRestoreRestoreTableTableOutput) ToMysqlDatabaseTableRestoreRestoreTableTableOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableTableOutput {
	return o
}

// Specifies the name of the table after restoration.
//
// Changing this creates a new resource.
func (o MysqlDatabaseTableRestoreRestoreTableTableOutput) NewName() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDatabaseTableRestoreRestoreTableTable) string { return v.NewName }).(pulumi.StringOutput)
}

// Specifies the name of the table before restoration.
//
// Changing this creates a new resource.
func (o MysqlDatabaseTableRestoreRestoreTableTableOutput) OldName() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlDatabaseTableRestoreRestoreTableTable) string { return v.OldName }).(pulumi.StringOutput)
}

type MysqlDatabaseTableRestoreRestoreTableTableArrayOutput struct{ *pulumi.OutputState }

func (MysqlDatabaseTableRestoreRestoreTableTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlDatabaseTableRestoreRestoreTableTable)(nil)).Elem()
}

func (o MysqlDatabaseTableRestoreRestoreTableTableArrayOutput) ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutput() MysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return o
}

func (o MysqlDatabaseTableRestoreRestoreTableTableArrayOutput) ToMysqlDatabaseTableRestoreRestoreTableTableArrayOutputWithContext(ctx context.Context) MysqlDatabaseTableRestoreRestoreTableTableArrayOutput {
	return o
}

func (o MysqlDatabaseTableRestoreRestoreTableTableArrayOutput) Index(i pulumi.IntInput) MysqlDatabaseTableRestoreRestoreTableTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlDatabaseTableRestoreRestoreTableTable {
		return vs[0].([]MysqlDatabaseTableRestoreRestoreTableTable)[vs[1].(int)]
	}).(MysqlDatabaseTableRestoreRestoreTableTableOutput)
}

type ParametergroupConfigurationParameter struct {
	// The parameter group description. It contains a maximum of 256 characters and cannot contain the following special characters:>!<"&'= the value is left blank by default.
	Description *string `pulumi:"description"`
	// The parameter group name. It contains a maximum of 64 characters.
	Name *string `pulumi:"name"`
	// Indicates whether the parameter is read-only.
	Readonly *bool `pulumi:"readonly"`
	// Indicates whether a restart is required.
	RestartRequired *bool `pulumi:"restartRequired"`
	// Indicates the parameter type.
	Type *string `pulumi:"type"`
	// Indicates the parameter value.
	Value *string `pulumi:"value"`
	// Indicates the parameter value range.
	ValueRange *string `pulumi:"valueRange"`
}

// ParametergroupConfigurationParameterInput is an input type that accepts ParametergroupConfigurationParameterArgs and ParametergroupConfigurationParameterOutput values.
// You can construct a concrete instance of `ParametergroupConfigurationParameterInput` via:
//
//	ParametergroupConfigurationParameterArgs{...}
type ParametergroupConfigurationParameterInput interface {
	pulumi.Input

	ToParametergroupConfigurationParameterOutput() ParametergroupConfigurationParameterOutput
	ToParametergroupConfigurationParameterOutputWithContext(context.Context) ParametergroupConfigurationParameterOutput
}

type ParametergroupConfigurationParameterArgs struct {
	// The parameter group description. It contains a maximum of 256 characters and cannot contain the following special characters:>!<"&'= the value is left blank by default.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The parameter group name. It contains a maximum of 64 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates whether the parameter is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
	// Indicates whether a restart is required.
	RestartRequired pulumi.BoolPtrInput `pulumi:"restartRequired"`
	// Indicates the parameter type.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Indicates the parameter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Indicates the parameter value range.
	ValueRange pulumi.StringPtrInput `pulumi:"valueRange"`
}

func (ParametergroupConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupConfigurationParameter)(nil)).Elem()
}

func (i ParametergroupConfigurationParameterArgs) ToParametergroupConfigurationParameterOutput() ParametergroupConfigurationParameterOutput {
	return i.ToParametergroupConfigurationParameterOutputWithContext(context.Background())
}

func (i ParametergroupConfigurationParameterArgs) ToParametergroupConfigurationParameterOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupConfigurationParameterOutput)
}

// ParametergroupConfigurationParameterArrayInput is an input type that accepts ParametergroupConfigurationParameterArray and ParametergroupConfigurationParameterArrayOutput values.
// You can construct a concrete instance of `ParametergroupConfigurationParameterArrayInput` via:
//
//	ParametergroupConfigurationParameterArray{ ParametergroupConfigurationParameterArgs{...} }
type ParametergroupConfigurationParameterArrayInput interface {
	pulumi.Input

	ToParametergroupConfigurationParameterArrayOutput() ParametergroupConfigurationParameterArrayOutput
	ToParametergroupConfigurationParameterArrayOutputWithContext(context.Context) ParametergroupConfigurationParameterArrayOutput
}

type ParametergroupConfigurationParameterArray []ParametergroupConfigurationParameterInput

func (ParametergroupConfigurationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParametergroupConfigurationParameter)(nil)).Elem()
}

func (i ParametergroupConfigurationParameterArray) ToParametergroupConfigurationParameterArrayOutput() ParametergroupConfigurationParameterArrayOutput {
	return i.ToParametergroupConfigurationParameterArrayOutputWithContext(context.Background())
}

func (i ParametergroupConfigurationParameterArray) ToParametergroupConfigurationParameterArrayOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupConfigurationParameterArrayOutput)
}

type ParametergroupConfigurationParameterOutput struct{ *pulumi.OutputState }

func (ParametergroupConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupConfigurationParameter)(nil)).Elem()
}

func (o ParametergroupConfigurationParameterOutput) ToParametergroupConfigurationParameterOutput() ParametergroupConfigurationParameterOutput {
	return o
}

func (o ParametergroupConfigurationParameterOutput) ToParametergroupConfigurationParameterOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterOutput {
	return o
}

// The parameter group description. It contains a maximum of 256 characters and cannot contain the following special characters:>!<"&'= the value is left blank by default.
func (o ParametergroupConfigurationParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The parameter group name. It contains a maximum of 64 characters.
func (o ParametergroupConfigurationParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates whether the parameter is read-only.
func (o ParametergroupConfigurationParameterOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

// Indicates whether a restart is required.
func (o ParametergroupConfigurationParameterOutput) RestartRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *bool { return v.RestartRequired }).(pulumi.BoolPtrOutput)
}

// Indicates the parameter type.
func (o ParametergroupConfigurationParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Indicates the parameter value.
func (o ParametergroupConfigurationParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Indicates the parameter value range.
func (o ParametergroupConfigurationParameterOutput) ValueRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.ValueRange }).(pulumi.StringPtrOutput)
}

type ParametergroupConfigurationParameterArrayOutput struct{ *pulumi.OutputState }

func (ParametergroupConfigurationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParametergroupConfigurationParameter)(nil)).Elem()
}

func (o ParametergroupConfigurationParameterArrayOutput) ToParametergroupConfigurationParameterArrayOutput() ParametergroupConfigurationParameterArrayOutput {
	return o
}

func (o ParametergroupConfigurationParameterArrayOutput) ToParametergroupConfigurationParameterArrayOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterArrayOutput {
	return o
}

func (o ParametergroupConfigurationParameterArrayOutput) Index(i pulumi.IntInput) ParametergroupConfigurationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParametergroupConfigurationParameter {
		return vs[0].([]ParametergroupConfigurationParameter)[vs[1].(int)]
	}).(ParametergroupConfigurationParameterOutput)
}

type ParametergroupDatastore struct {
	// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The value is case-insensitive and can be mysql, postgresql, or sqlserver.
	Type string `pulumi:"type"`
	// Specifies the database version.
	//
	// * MySQL databases support MySQL 5.6, 5.7 and 8.0. Example value: 5.7.
	// * PostgreSQL databases support PostgreSQL 9.5, 9.6, 10, 11 and 12. Example value: 9.5.
	// * Microsoft SQL Server databases support 2012_SE, 2014_SE, 2016_SE, 2012_EE, 2014_EE, 2016_EE and 2017_EE. Example value: 2014_SE.
	Version string `pulumi:"version"`
}

// ParametergroupDatastoreInput is an input type that accepts ParametergroupDatastoreArgs and ParametergroupDatastoreOutput values.
// You can construct a concrete instance of `ParametergroupDatastoreInput` via:
//
//	ParametergroupDatastoreArgs{...}
type ParametergroupDatastoreInput interface {
	pulumi.Input

	ToParametergroupDatastoreOutput() ParametergroupDatastoreOutput
	ToParametergroupDatastoreOutputWithContext(context.Context) ParametergroupDatastoreOutput
}

type ParametergroupDatastoreArgs struct {
	// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The value is case-insensitive and can be mysql, postgresql, or sqlserver.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the database version.
	//
	// * MySQL databases support MySQL 5.6, 5.7 and 8.0. Example value: 5.7.
	// * PostgreSQL databases support PostgreSQL 9.5, 9.6, 10, 11 and 12. Example value: 9.5.
	// * Microsoft SQL Server databases support 2012_SE, 2014_SE, 2016_SE, 2012_EE, 2014_EE, 2016_EE and 2017_EE. Example value: 2014_SE.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ParametergroupDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupDatastore)(nil)).Elem()
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastoreOutput() ParametergroupDatastoreOutput {
	return i.ToParametergroupDatastoreOutputWithContext(context.Background())
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastoreOutputWithContext(ctx context.Context) ParametergroupDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupDatastoreOutput)
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return i.ToParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupDatastoreOutput).ToParametergroupDatastorePtrOutputWithContext(ctx)
}

// ParametergroupDatastorePtrInput is an input type that accepts ParametergroupDatastoreArgs, ParametergroupDatastorePtr and ParametergroupDatastorePtrOutput values.
// You can construct a concrete instance of `ParametergroupDatastorePtrInput` via:
//
//	        ParametergroupDatastoreArgs{...}
//
//	or:
//
//	        nil
type ParametergroupDatastorePtrInput interface {
	pulumi.Input

	ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput
	ToParametergroupDatastorePtrOutputWithContext(context.Context) ParametergroupDatastorePtrOutput
}

type parametergroupDatastorePtrType ParametergroupDatastoreArgs

func ParametergroupDatastorePtr(v *ParametergroupDatastoreArgs) ParametergroupDatastorePtrInput {
	return (*parametergroupDatastorePtrType)(v)
}

func (*parametergroupDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametergroupDatastore)(nil)).Elem()
}

func (i *parametergroupDatastorePtrType) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return i.ToParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (i *parametergroupDatastorePtrType) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupDatastorePtrOutput)
}

type ParametergroupDatastoreOutput struct{ *pulumi.OutputState }

func (ParametergroupDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupDatastore)(nil)).Elem()
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastoreOutput() ParametergroupDatastoreOutput {
	return o
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastoreOutputWithContext(ctx context.Context) ParametergroupDatastoreOutput {
	return o
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return o.ToParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParametergroupDatastore) *ParametergroupDatastore {
		return &v
	}).(ParametergroupDatastorePtrOutput)
}

// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The value is case-insensitive and can be mysql, postgresql, or sqlserver.
func (o ParametergroupDatastoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParametergroupDatastore) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the database version.
//
// * MySQL databases support MySQL 5.6, 5.7 and 8.0. Example value: 5.7.
// * PostgreSQL databases support PostgreSQL 9.5, 9.6, 10, 11 and 12. Example value: 9.5.
// * Microsoft SQL Server databases support 2012_SE, 2014_SE, 2016_SE, 2012_EE, 2014_EE, 2016_EE and 2017_EE. Example value: 2014_SE.
func (o ParametergroupDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ParametergroupDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type ParametergroupDatastorePtrOutput struct{ *pulumi.OutputState }

func (ParametergroupDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametergroupDatastore)(nil)).Elem()
}

func (o ParametergroupDatastorePtrOutput) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return o
}

func (o ParametergroupDatastorePtrOutput) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return o
}

func (o ParametergroupDatastorePtrOutput) Elem() ParametergroupDatastoreOutput {
	return o.ApplyT(func(v *ParametergroupDatastore) ParametergroupDatastore {
		if v != nil {
			return *v
		}
		var ret ParametergroupDatastore
		return ret
	}).(ParametergroupDatastoreOutput)
}

// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The value is case-insensitive and can be mysql, postgresql, or sqlserver.
func (o ParametergroupDatastorePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametergroupDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version.
//
// * MySQL databases support MySQL 5.6, 5.7 and 8.0. Example value: 5.7.
// * PostgreSQL databases support PostgreSQL 9.5, 9.6, 10, 11 and 12. Example value: 9.5.
// * Microsoft SQL Server databases support 2012_SE, 2014_SE, 2016_SE, 2012_EE, 2014_EE, 2016_EE and 2017_EE. Example value: 2014_SE.
func (o ParametergroupDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametergroupDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type PgAccountAttribute struct {
	// Indicates whether a user bypasses each row-level security policy.
	RolBypassRls *bool `pulumi:"rolBypassRls"`
	// Indicates whether a user can log in to the database.
	RolCanLogin *bool `pulumi:"rolCanLogin"`
	// Indicates the maximum number of concurrent connections to a DB instance.
	RolConnLimit *int `pulumi:"rolConnLimit"`
	// Indicates whether a user can create a database.
	RolCreateDb *bool `pulumi:"rolCreateDb"`
	// Indicates whether a user can create other sub-users.
	RolCreateRole *bool `pulumi:"rolCreateRole"`
	// Indicates whether a user automatically inherits the permissions of the role to which the user belongs.
	RolInherit *bool `pulumi:"rolInherit"`
	// Indicates whether the user is a replication role.
	RolReplication *bool `pulumi:"rolReplication"`
	// Indicates whether a user has the super-user permission.
	RolSuper *bool `pulumi:"rolSuper"`
}

// PgAccountAttributeInput is an input type that accepts PgAccountAttributeArgs and PgAccountAttributeOutput values.
// You can construct a concrete instance of `PgAccountAttributeInput` via:
//
//	PgAccountAttributeArgs{...}
type PgAccountAttributeInput interface {
	pulumi.Input

	ToPgAccountAttributeOutput() PgAccountAttributeOutput
	ToPgAccountAttributeOutputWithContext(context.Context) PgAccountAttributeOutput
}

type PgAccountAttributeArgs struct {
	// Indicates whether a user bypasses each row-level security policy.
	RolBypassRls pulumi.BoolPtrInput `pulumi:"rolBypassRls"`
	// Indicates whether a user can log in to the database.
	RolCanLogin pulumi.BoolPtrInput `pulumi:"rolCanLogin"`
	// Indicates the maximum number of concurrent connections to a DB instance.
	RolConnLimit pulumi.IntPtrInput `pulumi:"rolConnLimit"`
	// Indicates whether a user can create a database.
	RolCreateDb pulumi.BoolPtrInput `pulumi:"rolCreateDb"`
	// Indicates whether a user can create other sub-users.
	RolCreateRole pulumi.BoolPtrInput `pulumi:"rolCreateRole"`
	// Indicates whether a user automatically inherits the permissions of the role to which the user belongs.
	RolInherit pulumi.BoolPtrInput `pulumi:"rolInherit"`
	// Indicates whether the user is a replication role.
	RolReplication pulumi.BoolPtrInput `pulumi:"rolReplication"`
	// Indicates whether a user has the super-user permission.
	RolSuper pulumi.BoolPtrInput `pulumi:"rolSuper"`
}

func (PgAccountAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgAccountAttribute)(nil)).Elem()
}

func (i PgAccountAttributeArgs) ToPgAccountAttributeOutput() PgAccountAttributeOutput {
	return i.ToPgAccountAttributeOutputWithContext(context.Background())
}

func (i PgAccountAttributeArgs) ToPgAccountAttributeOutputWithContext(ctx context.Context) PgAccountAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgAccountAttributeOutput)
}

// PgAccountAttributeArrayInput is an input type that accepts PgAccountAttributeArray and PgAccountAttributeArrayOutput values.
// You can construct a concrete instance of `PgAccountAttributeArrayInput` via:
//
//	PgAccountAttributeArray{ PgAccountAttributeArgs{...} }
type PgAccountAttributeArrayInput interface {
	pulumi.Input

	ToPgAccountAttributeArrayOutput() PgAccountAttributeArrayOutput
	ToPgAccountAttributeArrayOutputWithContext(context.Context) PgAccountAttributeArrayOutput
}

type PgAccountAttributeArray []PgAccountAttributeInput

func (PgAccountAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgAccountAttribute)(nil)).Elem()
}

func (i PgAccountAttributeArray) ToPgAccountAttributeArrayOutput() PgAccountAttributeArrayOutput {
	return i.ToPgAccountAttributeArrayOutputWithContext(context.Background())
}

func (i PgAccountAttributeArray) ToPgAccountAttributeArrayOutputWithContext(ctx context.Context) PgAccountAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgAccountAttributeArrayOutput)
}

type PgAccountAttributeOutput struct{ *pulumi.OutputState }

func (PgAccountAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgAccountAttribute)(nil)).Elem()
}

func (o PgAccountAttributeOutput) ToPgAccountAttributeOutput() PgAccountAttributeOutput {
	return o
}

func (o PgAccountAttributeOutput) ToPgAccountAttributeOutputWithContext(ctx context.Context) PgAccountAttributeOutput {
	return o
}

// Indicates whether a user bypasses each row-level security policy.
func (o PgAccountAttributeOutput) RolBypassRls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolBypassRls }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user can log in to the database.
func (o PgAccountAttributeOutput) RolCanLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolCanLogin }).(pulumi.BoolPtrOutput)
}

// Indicates the maximum number of concurrent connections to a DB instance.
func (o PgAccountAttributeOutput) RolConnLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *int { return v.RolConnLimit }).(pulumi.IntPtrOutput)
}

// Indicates whether a user can create a database.
func (o PgAccountAttributeOutput) RolCreateDb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolCreateDb }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user can create other sub-users.
func (o PgAccountAttributeOutput) RolCreateRole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolCreateRole }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user automatically inherits the permissions of the role to which the user belongs.
func (o PgAccountAttributeOutput) RolInherit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolInherit }).(pulumi.BoolPtrOutput)
}

// Indicates whether the user is a replication role.
func (o PgAccountAttributeOutput) RolReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolReplication }).(pulumi.BoolPtrOutput)
}

// Indicates whether a user has the super-user permission.
func (o PgAccountAttributeOutput) RolSuper() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PgAccountAttribute) *bool { return v.RolSuper }).(pulumi.BoolPtrOutput)
}

type PgAccountAttributeArrayOutput struct{ *pulumi.OutputState }

func (PgAccountAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgAccountAttribute)(nil)).Elem()
}

func (o PgAccountAttributeArrayOutput) ToPgAccountAttributeArrayOutput() PgAccountAttributeArrayOutput {
	return o
}

func (o PgAccountAttributeArrayOutput) ToPgAccountAttributeArrayOutputWithContext(ctx context.Context) PgAccountAttributeArrayOutput {
	return o
}

func (o PgAccountAttributeArrayOutput) Index(i pulumi.IntInput) PgAccountAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PgAccountAttribute {
		return vs[0].([]PgAccountAttribute)[vs[1].(int)]
	}).(PgAccountAttributeOutput)
}

type PgHbaHostBasedAuthentication struct {
	// Specifies the client IP address.
	Address string `pulumi:"address"`
	// Specifies the database name.
	Database string `pulumi:"database"`
	// Specifies the subnet mask.
	Mask *string `pulumi:"mask"`
	// Specifies the authentication mode.
	Method string `pulumi:"method"`
	// Specifies the connection type.
	Type string `pulumi:"type"`
	// Specifies the Name of a user.
	User string `pulumi:"user"`
}

// PgHbaHostBasedAuthenticationInput is an input type that accepts PgHbaHostBasedAuthenticationArgs and PgHbaHostBasedAuthenticationOutput values.
// You can construct a concrete instance of `PgHbaHostBasedAuthenticationInput` via:
//
//	PgHbaHostBasedAuthenticationArgs{...}
type PgHbaHostBasedAuthenticationInput interface {
	pulumi.Input

	ToPgHbaHostBasedAuthenticationOutput() PgHbaHostBasedAuthenticationOutput
	ToPgHbaHostBasedAuthenticationOutputWithContext(context.Context) PgHbaHostBasedAuthenticationOutput
}

type PgHbaHostBasedAuthenticationArgs struct {
	// Specifies the client IP address.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the database name.
	Database pulumi.StringInput `pulumi:"database"`
	// Specifies the subnet mask.
	Mask pulumi.StringPtrInput `pulumi:"mask"`
	// Specifies the authentication mode.
	Method pulumi.StringInput `pulumi:"method"`
	// Specifies the connection type.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the Name of a user.
	User pulumi.StringInput `pulumi:"user"`
}

func (PgHbaHostBasedAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PgHbaHostBasedAuthentication)(nil)).Elem()
}

func (i PgHbaHostBasedAuthenticationArgs) ToPgHbaHostBasedAuthenticationOutput() PgHbaHostBasedAuthenticationOutput {
	return i.ToPgHbaHostBasedAuthenticationOutputWithContext(context.Background())
}

func (i PgHbaHostBasedAuthenticationArgs) ToPgHbaHostBasedAuthenticationOutputWithContext(ctx context.Context) PgHbaHostBasedAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgHbaHostBasedAuthenticationOutput)
}

// PgHbaHostBasedAuthenticationArrayInput is an input type that accepts PgHbaHostBasedAuthenticationArray and PgHbaHostBasedAuthenticationArrayOutput values.
// You can construct a concrete instance of `PgHbaHostBasedAuthenticationArrayInput` via:
//
//	PgHbaHostBasedAuthenticationArray{ PgHbaHostBasedAuthenticationArgs{...} }
type PgHbaHostBasedAuthenticationArrayInput interface {
	pulumi.Input

	ToPgHbaHostBasedAuthenticationArrayOutput() PgHbaHostBasedAuthenticationArrayOutput
	ToPgHbaHostBasedAuthenticationArrayOutputWithContext(context.Context) PgHbaHostBasedAuthenticationArrayOutput
}

type PgHbaHostBasedAuthenticationArray []PgHbaHostBasedAuthenticationInput

func (PgHbaHostBasedAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgHbaHostBasedAuthentication)(nil)).Elem()
}

func (i PgHbaHostBasedAuthenticationArray) ToPgHbaHostBasedAuthenticationArrayOutput() PgHbaHostBasedAuthenticationArrayOutput {
	return i.ToPgHbaHostBasedAuthenticationArrayOutputWithContext(context.Background())
}

func (i PgHbaHostBasedAuthenticationArray) ToPgHbaHostBasedAuthenticationArrayOutputWithContext(ctx context.Context) PgHbaHostBasedAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgHbaHostBasedAuthenticationArrayOutput)
}

type PgHbaHostBasedAuthenticationOutput struct{ *pulumi.OutputState }

func (PgHbaHostBasedAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PgHbaHostBasedAuthentication)(nil)).Elem()
}

func (o PgHbaHostBasedAuthenticationOutput) ToPgHbaHostBasedAuthenticationOutput() PgHbaHostBasedAuthenticationOutput {
	return o
}

func (o PgHbaHostBasedAuthenticationOutput) ToPgHbaHostBasedAuthenticationOutputWithContext(ctx context.Context) PgHbaHostBasedAuthenticationOutput {
	return o
}

// Specifies the client IP address.
func (o PgHbaHostBasedAuthenticationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v PgHbaHostBasedAuthentication) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the database name.
func (o PgHbaHostBasedAuthenticationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v PgHbaHostBasedAuthentication) string { return v.Database }).(pulumi.StringOutput)
}

// Specifies the subnet mask.
func (o PgHbaHostBasedAuthenticationOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PgHbaHostBasedAuthentication) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

// Specifies the authentication mode.
func (o PgHbaHostBasedAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v PgHbaHostBasedAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

// Specifies the connection type.
func (o PgHbaHostBasedAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PgHbaHostBasedAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the Name of a user.
func (o PgHbaHostBasedAuthenticationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v PgHbaHostBasedAuthentication) string { return v.User }).(pulumi.StringOutput)
}

type PgHbaHostBasedAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (PgHbaHostBasedAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PgHbaHostBasedAuthentication)(nil)).Elem()
}

func (o PgHbaHostBasedAuthenticationArrayOutput) ToPgHbaHostBasedAuthenticationArrayOutput() PgHbaHostBasedAuthenticationArrayOutput {
	return o
}

func (o PgHbaHostBasedAuthenticationArrayOutput) ToPgHbaHostBasedAuthenticationArrayOutputWithContext(ctx context.Context) PgHbaHostBasedAuthenticationArrayOutput {
	return o
}

func (o PgHbaHostBasedAuthenticationArrayOutput) Index(i pulumi.IntInput) PgHbaHostBasedAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PgHbaHostBasedAuthentication {
		return vs[0].([]PgHbaHostBasedAuthentication)[vs[1].(int)]
	}).(PgHbaHostBasedAuthenticationOutput)
}

type ReadReplicaInstanceDb struct {
	// Indicates the database port information.
	Port *int `pulumi:"port"`
	// Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer.
	Type *string `pulumi:"type"`
	// Indicates the default user name of database.
	UserName *string `pulumi:"userName"`
	// Indicates the database version.
	Version *string `pulumi:"version"`
}

// ReadReplicaInstanceDbInput is an input type that accepts ReadReplicaInstanceDbArgs and ReadReplicaInstanceDbOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceDbInput` via:
//
//	ReadReplicaInstanceDbArgs{...}
type ReadReplicaInstanceDbInput interface {
	pulumi.Input

	ToReadReplicaInstanceDbOutput() ReadReplicaInstanceDbOutput
	ToReadReplicaInstanceDbOutputWithContext(context.Context) ReadReplicaInstanceDbOutput
}

type ReadReplicaInstanceDbArgs struct {
	// Indicates the database port information.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Indicates the default user name of database.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Indicates the database version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ReadReplicaInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceDb)(nil)).Elem()
}

func (i ReadReplicaInstanceDbArgs) ToReadReplicaInstanceDbOutput() ReadReplicaInstanceDbOutput {
	return i.ToReadReplicaInstanceDbOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceDbArgs) ToReadReplicaInstanceDbOutputWithContext(ctx context.Context) ReadReplicaInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceDbOutput)
}

func (i ReadReplicaInstanceDbArgs) ToReadReplicaInstanceDbPtrOutput() ReadReplicaInstanceDbPtrOutput {
	return i.ToReadReplicaInstanceDbPtrOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceDbArgs) ToReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) ReadReplicaInstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceDbOutput).ToReadReplicaInstanceDbPtrOutputWithContext(ctx)
}

// ReadReplicaInstanceDbPtrInput is an input type that accepts ReadReplicaInstanceDbArgs, ReadReplicaInstanceDbPtr and ReadReplicaInstanceDbPtrOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceDbPtrInput` via:
//
//	        ReadReplicaInstanceDbArgs{...}
//
//	or:
//
//	        nil
type ReadReplicaInstanceDbPtrInput interface {
	pulumi.Input

	ToReadReplicaInstanceDbPtrOutput() ReadReplicaInstanceDbPtrOutput
	ToReadReplicaInstanceDbPtrOutputWithContext(context.Context) ReadReplicaInstanceDbPtrOutput
}

type readReplicaInstanceDbPtrType ReadReplicaInstanceDbArgs

func ReadReplicaInstanceDbPtr(v *ReadReplicaInstanceDbArgs) ReadReplicaInstanceDbPtrInput {
	return (*readReplicaInstanceDbPtrType)(v)
}

func (*readReplicaInstanceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstanceDb)(nil)).Elem()
}

func (i *readReplicaInstanceDbPtrType) ToReadReplicaInstanceDbPtrOutput() ReadReplicaInstanceDbPtrOutput {
	return i.ToReadReplicaInstanceDbPtrOutputWithContext(context.Background())
}

func (i *readReplicaInstanceDbPtrType) ToReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) ReadReplicaInstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceDbPtrOutput)
}

type ReadReplicaInstanceDbOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceDb)(nil)).Elem()
}

func (o ReadReplicaInstanceDbOutput) ToReadReplicaInstanceDbOutput() ReadReplicaInstanceDbOutput {
	return o
}

func (o ReadReplicaInstanceDbOutput) ToReadReplicaInstanceDbOutputWithContext(ctx context.Context) ReadReplicaInstanceDbOutput {
	return o
}

func (o ReadReplicaInstanceDbOutput) ToReadReplicaInstanceDbPtrOutput() ReadReplicaInstanceDbPtrOutput {
	return o.ToReadReplicaInstanceDbPtrOutputWithContext(context.Background())
}

func (o ReadReplicaInstanceDbOutput) ToReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) ReadReplicaInstanceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReadReplicaInstanceDb) *ReadReplicaInstanceDb {
		return &v
	}).(ReadReplicaInstanceDbPtrOutput)
}

// Indicates the database port information.
func (o ReadReplicaInstanceDbOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer.
func (o ReadReplicaInstanceDbOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Indicates the default user name of database.
func (o ReadReplicaInstanceDbOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Indicates the database version.
func (o ReadReplicaInstanceDbOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ReadReplicaInstanceDbPtrOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstanceDb)(nil)).Elem()
}

func (o ReadReplicaInstanceDbPtrOutput) ToReadReplicaInstanceDbPtrOutput() ReadReplicaInstanceDbPtrOutput {
	return o
}

func (o ReadReplicaInstanceDbPtrOutput) ToReadReplicaInstanceDbPtrOutputWithContext(ctx context.Context) ReadReplicaInstanceDbPtrOutput {
	return o
}

func (o ReadReplicaInstanceDbPtrOutput) Elem() ReadReplicaInstanceDbOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceDb) ReadReplicaInstanceDb {
		if v != nil {
			return *v
		}
		var ret ReadReplicaInstanceDb
		return ret
	}).(ReadReplicaInstanceDbOutput)
}

// Indicates the database port information.
func (o ReadReplicaInstanceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceDb) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer.
func (o ReadReplicaInstanceDbPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Indicates the default user name of database.
func (o ReadReplicaInstanceDbPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Indicates the database version.
func (o ReadReplicaInstanceDbPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ReadReplicaInstanceParameter struct {
	// Specifies the DB instance name. The DB instance name of the same type
	// must be unique for the same tenant. The value must be 4 to 64 characters in length and start with a letter.
	// It is case-sensitive and can contain only letters, digits, hyphens (-), and underscores (_).
	// Changing this parameter will create a new resource.
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ReadReplicaInstanceParameterInput is an input type that accepts ReadReplicaInstanceParameterArgs and ReadReplicaInstanceParameterOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceParameterInput` via:
//
//	ReadReplicaInstanceParameterArgs{...}
type ReadReplicaInstanceParameterInput interface {
	pulumi.Input

	ToReadReplicaInstanceParameterOutput() ReadReplicaInstanceParameterOutput
	ToReadReplicaInstanceParameterOutputWithContext(context.Context) ReadReplicaInstanceParameterOutput
}

type ReadReplicaInstanceParameterArgs struct {
	// Specifies the DB instance name. The DB instance name of the same type
	// must be unique for the same tenant. The value must be 4 to 64 characters in length and start with a letter.
	// It is case-sensitive and can contain only letters, digits, hyphens (-), and underscores (_).
	// Changing this parameter will create a new resource.
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ReadReplicaInstanceParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceParameter)(nil)).Elem()
}

func (i ReadReplicaInstanceParameterArgs) ToReadReplicaInstanceParameterOutput() ReadReplicaInstanceParameterOutput {
	return i.ToReadReplicaInstanceParameterOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceParameterArgs) ToReadReplicaInstanceParameterOutputWithContext(ctx context.Context) ReadReplicaInstanceParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceParameterOutput)
}

// ReadReplicaInstanceParameterArrayInput is an input type that accepts ReadReplicaInstanceParameterArray and ReadReplicaInstanceParameterArrayOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceParameterArrayInput` via:
//
//	ReadReplicaInstanceParameterArray{ ReadReplicaInstanceParameterArgs{...} }
type ReadReplicaInstanceParameterArrayInput interface {
	pulumi.Input

	ToReadReplicaInstanceParameterArrayOutput() ReadReplicaInstanceParameterArrayOutput
	ToReadReplicaInstanceParameterArrayOutputWithContext(context.Context) ReadReplicaInstanceParameterArrayOutput
}

type ReadReplicaInstanceParameterArray []ReadReplicaInstanceParameterInput

func (ReadReplicaInstanceParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplicaInstanceParameter)(nil)).Elem()
}

func (i ReadReplicaInstanceParameterArray) ToReadReplicaInstanceParameterArrayOutput() ReadReplicaInstanceParameterArrayOutput {
	return i.ToReadReplicaInstanceParameterArrayOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceParameterArray) ToReadReplicaInstanceParameterArrayOutputWithContext(ctx context.Context) ReadReplicaInstanceParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceParameterArrayOutput)
}

type ReadReplicaInstanceParameterOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceParameter)(nil)).Elem()
}

func (o ReadReplicaInstanceParameterOutput) ToReadReplicaInstanceParameterOutput() ReadReplicaInstanceParameterOutput {
	return o
}

func (o ReadReplicaInstanceParameterOutput) ToReadReplicaInstanceParameterOutputWithContext(ctx context.Context) ReadReplicaInstanceParameterOutput {
	return o
}

// Specifies the DB instance name. The DB instance name of the same type
// must be unique for the same tenant. The value must be 4 to 64 characters in length and start with a letter.
// It is case-sensitive and can contain only letters, digits, hyphens (-), and underscores (_).
// Changing this parameter will create a new resource.
func (o ReadReplicaInstanceParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplicaInstanceParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReadReplicaInstanceParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplicaInstanceParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ReadReplicaInstanceParameterArrayOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplicaInstanceParameter)(nil)).Elem()
}

func (o ReadReplicaInstanceParameterArrayOutput) ToReadReplicaInstanceParameterArrayOutput() ReadReplicaInstanceParameterArrayOutput {
	return o
}

func (o ReadReplicaInstanceParameterArrayOutput) ToReadReplicaInstanceParameterArrayOutputWithContext(ctx context.Context) ReadReplicaInstanceParameterArrayOutput {
	return o
}

func (o ReadReplicaInstanceParameterArrayOutput) Index(i pulumi.IntInput) ReadReplicaInstanceParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReadReplicaInstanceParameter {
		return vs[0].([]ReadReplicaInstanceParameter)[vs[1].(int)]
	}).(ReadReplicaInstanceParameterOutput)
}

type ReadReplicaInstanceVolume struct {
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	LimitSize        *int    `pulumi:"limitSize"`
	Size             *int    `pulumi:"size"`
	TriggerThreshold *int    `pulumi:"triggerThreshold"`
	// Specifies the volume type. Its value can be any of the following and is case-sensitive:
	// - *ESSD* - ultrahigh I/O.
	// - *CLOUDSSD* - high I/O.
	//
	// Changing this parameter will create a new resource.
	Type string `pulumi:"type"`
}

// ReadReplicaInstanceVolumeInput is an input type that accepts ReadReplicaInstanceVolumeArgs and ReadReplicaInstanceVolumeOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceVolumeInput` via:
//
//	ReadReplicaInstanceVolumeArgs{...}
type ReadReplicaInstanceVolumeInput interface {
	pulumi.Input

	ToReadReplicaInstanceVolumeOutput() ReadReplicaInstanceVolumeOutput
	ToReadReplicaInstanceVolumeOutputWithContext(context.Context) ReadReplicaInstanceVolumeOutput
}

type ReadReplicaInstanceVolumeArgs struct {
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId pulumi.StringPtrInput `pulumi:"diskEncryptionId"`
	LimitSize        pulumi.IntPtrInput    `pulumi:"limitSize"`
	Size             pulumi.IntPtrInput    `pulumi:"size"`
	TriggerThreshold pulumi.IntPtrInput    `pulumi:"triggerThreshold"`
	// Specifies the volume type. Its value can be any of the following and is case-sensitive:
	// - *ESSD* - ultrahigh I/O.
	// - *CLOUDSSD* - high I/O.
	//
	// Changing this parameter will create a new resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReadReplicaInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceVolume)(nil)).Elem()
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumeOutput() ReadReplicaInstanceVolumeOutput {
	return i.ToReadReplicaInstanceVolumeOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumeOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceVolumeOutput)
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return i.ToReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceVolumeOutput).ToReadReplicaInstanceVolumePtrOutputWithContext(ctx)
}

// ReadReplicaInstanceVolumePtrInput is an input type that accepts ReadReplicaInstanceVolumeArgs, ReadReplicaInstanceVolumePtr and ReadReplicaInstanceVolumePtrOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceVolumePtrInput` via:
//
//	        ReadReplicaInstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type ReadReplicaInstanceVolumePtrInput interface {
	pulumi.Input

	ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput
	ToReadReplicaInstanceVolumePtrOutputWithContext(context.Context) ReadReplicaInstanceVolumePtrOutput
}

type readReplicaInstanceVolumePtrType ReadReplicaInstanceVolumeArgs

func ReadReplicaInstanceVolumePtr(v *ReadReplicaInstanceVolumeArgs) ReadReplicaInstanceVolumePtrInput {
	return (*readReplicaInstanceVolumePtrType)(v)
}

func (*readReplicaInstanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstanceVolume)(nil)).Elem()
}

func (i *readReplicaInstanceVolumePtrType) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return i.ToReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *readReplicaInstanceVolumePtrType) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceVolumePtrOutput)
}

type ReadReplicaInstanceVolumeOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceVolume)(nil)).Elem()
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumeOutput() ReadReplicaInstanceVolumeOutput {
	return o
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumeOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumeOutput {
	return o
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return o.ToReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReadReplicaInstanceVolume) *ReadReplicaInstanceVolume {
		return &v
	}).(ReadReplicaInstanceVolumePtrOutput)
}

// Specifies the key ID for disk encryption.
// Changing this parameter will create a new resource.
func (o ReadReplicaInstanceVolumeOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) *string { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceVolumeOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) *int { return v.LimitSize }).(pulumi.IntPtrOutput)
}

func (o ReadReplicaInstanceVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ReadReplicaInstanceVolumeOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) *int { return v.TriggerThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is case-sensitive:
// - *ESSD* - ultrahigh I/O.
// - *CLOUDSSD* - high I/O.
//
// Changing this parameter will create a new resource.
func (o ReadReplicaInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type ReadReplicaInstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstanceVolume)(nil)).Elem()
}

func (o ReadReplicaInstanceVolumePtrOutput) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return o
}

func (o ReadReplicaInstanceVolumePtrOutput) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return o
}

func (o ReadReplicaInstanceVolumePtrOutput) Elem() ReadReplicaInstanceVolumeOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) ReadReplicaInstanceVolume {
		if v != nil {
			return *v
		}
		var ret ReadReplicaInstanceVolume
		return ret
	}).(ReadReplicaInstanceVolumeOutput)
}

// Specifies the key ID for disk encryption.
// Changing this parameter will create a new resource.
func (o ReadReplicaInstanceVolumePtrOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionId
	}).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceVolumePtrOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.LimitSize
	}).(pulumi.IntPtrOutput)
}

func (o ReadReplicaInstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

func (o ReadReplicaInstanceVolumePtrOutput) TriggerThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.TriggerThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is case-sensitive:
// - *ESSD* - ultrahigh I/O.
// - *CLOUDSSD* - high I/O.
//
// Changing this parameter will create a new resource.
func (o ReadReplicaInstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SqlserverDatabasePrivilegeUser struct {
	// Specifies the username of the database account.
	Name string `pulumi:"name"`
	// Specifies the read-only permission. Value options:
	// + **true**: indicates the read-only permission.
	// + **false**: indicates the read and write permission.
	//
	// Defaults to **false**.
	Readonly *bool `pulumi:"readonly"`
}

// SqlserverDatabasePrivilegeUserInput is an input type that accepts SqlserverDatabasePrivilegeUserArgs and SqlserverDatabasePrivilegeUserOutput values.
// You can construct a concrete instance of `SqlserverDatabasePrivilegeUserInput` via:
//
//	SqlserverDatabasePrivilegeUserArgs{...}
type SqlserverDatabasePrivilegeUserInput interface {
	pulumi.Input

	ToSqlserverDatabasePrivilegeUserOutput() SqlserverDatabasePrivilegeUserOutput
	ToSqlserverDatabasePrivilegeUserOutputWithContext(context.Context) SqlserverDatabasePrivilegeUserOutput
}

type SqlserverDatabasePrivilegeUserArgs struct {
	// Specifies the username of the database account.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the read-only permission. Value options:
	// + **true**: indicates the read-only permission.
	// + **false**: indicates the read and write permission.
	//
	// Defaults to **false**.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (SqlserverDatabasePrivilegeUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (i SqlserverDatabasePrivilegeUserArgs) ToSqlserverDatabasePrivilegeUserOutput() SqlserverDatabasePrivilegeUserOutput {
	return i.ToSqlserverDatabasePrivilegeUserOutputWithContext(context.Background())
}

func (i SqlserverDatabasePrivilegeUserArgs) ToSqlserverDatabasePrivilegeUserOutputWithContext(ctx context.Context) SqlserverDatabasePrivilegeUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlserverDatabasePrivilegeUserOutput)
}

// SqlserverDatabasePrivilegeUserArrayInput is an input type that accepts SqlserverDatabasePrivilegeUserArray and SqlserverDatabasePrivilegeUserArrayOutput values.
// You can construct a concrete instance of `SqlserverDatabasePrivilegeUserArrayInput` via:
//
//	SqlserverDatabasePrivilegeUserArray{ SqlserverDatabasePrivilegeUserArgs{...} }
type SqlserverDatabasePrivilegeUserArrayInput interface {
	pulumi.Input

	ToSqlserverDatabasePrivilegeUserArrayOutput() SqlserverDatabasePrivilegeUserArrayOutput
	ToSqlserverDatabasePrivilegeUserArrayOutputWithContext(context.Context) SqlserverDatabasePrivilegeUserArrayOutput
}

type SqlserverDatabasePrivilegeUserArray []SqlserverDatabasePrivilegeUserInput

func (SqlserverDatabasePrivilegeUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (i SqlserverDatabasePrivilegeUserArray) ToSqlserverDatabasePrivilegeUserArrayOutput() SqlserverDatabasePrivilegeUserArrayOutput {
	return i.ToSqlserverDatabasePrivilegeUserArrayOutputWithContext(context.Background())
}

func (i SqlserverDatabasePrivilegeUserArray) ToSqlserverDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) SqlserverDatabasePrivilegeUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlserverDatabasePrivilegeUserArrayOutput)
}

type SqlserverDatabasePrivilegeUserOutput struct{ *pulumi.OutputState }

func (SqlserverDatabasePrivilegeUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (o SqlserverDatabasePrivilegeUserOutput) ToSqlserverDatabasePrivilegeUserOutput() SqlserverDatabasePrivilegeUserOutput {
	return o
}

func (o SqlserverDatabasePrivilegeUserOutput) ToSqlserverDatabasePrivilegeUserOutputWithContext(ctx context.Context) SqlserverDatabasePrivilegeUserOutput {
	return o
}

// Specifies the username of the database account.
func (o SqlserverDatabasePrivilegeUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SqlserverDatabasePrivilegeUser) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the read-only permission. Value options:
// + **true**: indicates the read-only permission.
// + **false**: indicates the read and write permission.
//
// Defaults to **false**.
func (o SqlserverDatabasePrivilegeUserOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlserverDatabasePrivilegeUser) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type SqlserverDatabasePrivilegeUserArrayOutput struct{ *pulumi.OutputState }

func (SqlserverDatabasePrivilegeUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlserverDatabasePrivilegeUser)(nil)).Elem()
}

func (o SqlserverDatabasePrivilegeUserArrayOutput) ToSqlserverDatabasePrivilegeUserArrayOutput() SqlserverDatabasePrivilegeUserArrayOutput {
	return o
}

func (o SqlserverDatabasePrivilegeUserArrayOutput) ToSqlserverDatabasePrivilegeUserArrayOutputWithContext(ctx context.Context) SqlserverDatabasePrivilegeUserArrayOutput {
	return o
}

func (o SqlserverDatabasePrivilegeUserArrayOutput) Index(i pulumi.IntInput) SqlserverDatabasePrivilegeUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlserverDatabasePrivilegeUser {
		return vs[0].([]SqlserverDatabasePrivilegeUser)[vs[1].(int)]
	}).(SqlserverDatabasePrivilegeUserOutput)
}

type GetBackupsBackup struct {
	// Whether a DDM instance has been associated.
	AssociatedWithDdm bool `pulumi:"associatedWithDdm"`
	// Start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime string `pulumi:"beginTime"`
	// Database been backed up.
	// The databases structure is documented below.
	Databases []GetBackupsBackupDatabase `pulumi:"databases"`
	// The database information.
	// The datastore structure is documented below.
	Datastores []GetBackupsBackupDatastore `pulumi:"datastores"`
	// End time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime string `pulumi:"endTime"`
	// Backup ID.
	Id string `pulumi:"id"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Backup name.
	Name string `pulumi:"name"`
	// Backup size in KB.
	Size int `pulumi:"size"`
	// Backup status.\
	// The options are as follows:
	// - **BUILDING**: Backup in progress.
	// - **COMPLETED**: Backup completed.
	// - **FAILED**: Backup failed.
	// - **DELETING**: Backup being deleted.
	Status string `pulumi:"status"`
	// DB engine.\
	// The value can be: **MySQL**, **PostgreSQL**, **SQLServer**.
	Type string `pulumi:"type"`
}

// GetBackupsBackupInput is an input type that accepts GetBackupsBackupArgs and GetBackupsBackupOutput values.
// You can construct a concrete instance of `GetBackupsBackupInput` via:
//
//	GetBackupsBackupArgs{...}
type GetBackupsBackupInput interface {
	pulumi.Input

	ToGetBackupsBackupOutput() GetBackupsBackupOutput
	ToGetBackupsBackupOutputWithContext(context.Context) GetBackupsBackupOutput
}

type GetBackupsBackupArgs struct {
	// Whether a DDM instance has been associated.
	AssociatedWithDdm pulumi.BoolInput `pulumi:"associatedWithDdm"`
	// Start time in the "yyyy-mm-ddThh:mm:ssZ" format.
	BeginTime pulumi.StringInput `pulumi:"beginTime"`
	// Database been backed up.
	// The databases structure is documented below.
	Databases GetBackupsBackupDatabaseArrayInput `pulumi:"databases"`
	// The database information.
	// The datastore structure is documented below.
	Datastores GetBackupsBackupDatastoreArrayInput `pulumi:"datastores"`
	// End time in the "yyyy-mm-ddThh:mm:ssZ" format.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Backup ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Backup name.
	Name pulumi.StringInput `pulumi:"name"`
	// Backup size in KB.
	Size pulumi.IntInput `pulumi:"size"`
	// Backup status.\
	// The options are as follows:
	// - **BUILDING**: Backup in progress.
	// - **COMPLETED**: Backup completed.
	// - **FAILED**: Backup failed.
	// - **DELETING**: Backup being deleted.
	Status pulumi.StringInput `pulumi:"status"`
	// DB engine.\
	// The value can be: **MySQL**, **PostgreSQL**, **SQLServer**.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return i.ToGetBackupsBackupOutputWithContext(context.Background())
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupOutput)
}

// GetBackupsBackupArrayInput is an input type that accepts GetBackupsBackupArray and GetBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupArrayInput` via:
//
//	GetBackupsBackupArray{ GetBackupsBackupArgs{...} }
type GetBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput
	ToGetBackupsBackupArrayOutputWithContext(context.Context) GetBackupsBackupArrayOutput
}

type GetBackupsBackupArray []GetBackupsBackupInput

func (GetBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return i.ToGetBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupArrayOutput)
}

type GetBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return o
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return o
}

// Whether a DDM instance has been associated.
func (o GetBackupsBackupOutput) AssociatedWithDdm() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackupsBackup) bool { return v.AssociatedWithDdm }).(pulumi.BoolOutput)
}

// Start time in the "yyyy-mm-ddThh:mm:ssZ" format.
func (o GetBackupsBackupOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BeginTime }).(pulumi.StringOutput)
}

// Database been backed up.
// The databases structure is documented below.
func (o GetBackupsBackupOutput) Databases() GetBackupsBackupDatabaseArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupDatabase { return v.Databases }).(GetBackupsBackupDatabaseArrayOutput)
}

// The database information.
// The datastore structure is documented below.
func (o GetBackupsBackupOutput) Datastores() GetBackupsBackupDatastoreArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupDatastore { return v.Datastores }).(GetBackupsBackupDatastoreArrayOutput)
}

// End time in the "yyyy-mm-ddThh:mm:ssZ" format.
func (o GetBackupsBackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.EndTime }).(pulumi.StringOutput)
}

// Backup ID.
func (o GetBackupsBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Id }).(pulumi.StringOutput)
}

// Instance ID.
func (o GetBackupsBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Backup name.
func (o GetBackupsBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Name }).(pulumi.StringOutput)
}

// Backup size in KB.
func (o GetBackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

// Backup status.\
// The options are as follows:
// - **BUILDING**: Backup in progress.
// - **COMPLETED**: Backup completed.
// - **FAILED**: Backup failed.
// - **DELETING**: Backup being deleted.
func (o GetBackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

// DB engine.\
// The value can be: **MySQL**, **PostgreSQL**, **SQLServer**.
func (o GetBackupsBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Type }).(pulumi.StringOutput)
}

type GetBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackup {
		return vs[0].([]GetBackupsBackup)[vs[1].(int)]
	}).(GetBackupsBackupOutput)
}

type GetBackupsBackupDatabase struct {
	// Backup name.
	Name string `pulumi:"name"`
}

// GetBackupsBackupDatabaseInput is an input type that accepts GetBackupsBackupDatabaseArgs and GetBackupsBackupDatabaseOutput values.
// You can construct a concrete instance of `GetBackupsBackupDatabaseInput` via:
//
//	GetBackupsBackupDatabaseArgs{...}
type GetBackupsBackupDatabaseInput interface {
	pulumi.Input

	ToGetBackupsBackupDatabaseOutput() GetBackupsBackupDatabaseOutput
	ToGetBackupsBackupDatabaseOutputWithContext(context.Context) GetBackupsBackupDatabaseOutput
}

type GetBackupsBackupDatabaseArgs struct {
	// Backup name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBackupsBackupDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupDatabase)(nil)).Elem()
}

func (i GetBackupsBackupDatabaseArgs) ToGetBackupsBackupDatabaseOutput() GetBackupsBackupDatabaseOutput {
	return i.ToGetBackupsBackupDatabaseOutputWithContext(context.Background())
}

func (i GetBackupsBackupDatabaseArgs) ToGetBackupsBackupDatabaseOutputWithContext(ctx context.Context) GetBackupsBackupDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupDatabaseOutput)
}

// GetBackupsBackupDatabaseArrayInput is an input type that accepts GetBackupsBackupDatabaseArray and GetBackupsBackupDatabaseArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupDatabaseArrayInput` via:
//
//	GetBackupsBackupDatabaseArray{ GetBackupsBackupDatabaseArgs{...} }
type GetBackupsBackupDatabaseArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupDatabaseArrayOutput() GetBackupsBackupDatabaseArrayOutput
	ToGetBackupsBackupDatabaseArrayOutputWithContext(context.Context) GetBackupsBackupDatabaseArrayOutput
}

type GetBackupsBackupDatabaseArray []GetBackupsBackupDatabaseInput

func (GetBackupsBackupDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupDatabase)(nil)).Elem()
}

func (i GetBackupsBackupDatabaseArray) ToGetBackupsBackupDatabaseArrayOutput() GetBackupsBackupDatabaseArrayOutput {
	return i.ToGetBackupsBackupDatabaseArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupDatabaseArray) ToGetBackupsBackupDatabaseArrayOutputWithContext(ctx context.Context) GetBackupsBackupDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupDatabaseArrayOutput)
}

type GetBackupsBackupDatabaseOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupDatabase)(nil)).Elem()
}

func (o GetBackupsBackupDatabaseOutput) ToGetBackupsBackupDatabaseOutput() GetBackupsBackupDatabaseOutput {
	return o
}

func (o GetBackupsBackupDatabaseOutput) ToGetBackupsBackupDatabaseOutputWithContext(ctx context.Context) GetBackupsBackupDatabaseOutput {
	return o
}

// Backup name.
func (o GetBackupsBackupDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type GetBackupsBackupDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupDatabase)(nil)).Elem()
}

func (o GetBackupsBackupDatabaseArrayOutput) ToGetBackupsBackupDatabaseArrayOutput() GetBackupsBackupDatabaseArrayOutput {
	return o
}

func (o GetBackupsBackupDatabaseArrayOutput) ToGetBackupsBackupDatabaseArrayOutputWithContext(ctx context.Context) GetBackupsBackupDatabaseArrayOutput {
	return o
}

func (o GetBackupsBackupDatabaseArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupDatabase {
		return vs[0].([]GetBackupsBackupDatabase)[vs[1].(int)]
	}).(GetBackupsBackupDatabaseOutput)
}

type GetBackupsBackupDatastore struct {
	// DB engine.\
	// The value can be: **MySQL**, **PostgreSQL**, **SQLServer**.
	Type string `pulumi:"type"`
	// DB engine version.
	Version string `pulumi:"version"`
}

// GetBackupsBackupDatastoreInput is an input type that accepts GetBackupsBackupDatastoreArgs and GetBackupsBackupDatastoreOutput values.
// You can construct a concrete instance of `GetBackupsBackupDatastoreInput` via:
//
//	GetBackupsBackupDatastoreArgs{...}
type GetBackupsBackupDatastoreInput interface {
	pulumi.Input

	ToGetBackupsBackupDatastoreOutput() GetBackupsBackupDatastoreOutput
	ToGetBackupsBackupDatastoreOutputWithContext(context.Context) GetBackupsBackupDatastoreOutput
}

type GetBackupsBackupDatastoreArgs struct {
	// DB engine.\
	// The value can be: **MySQL**, **PostgreSQL**, **SQLServer**.
	Type pulumi.StringInput `pulumi:"type"`
	// DB engine version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetBackupsBackupDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupDatastore)(nil)).Elem()
}

func (i GetBackupsBackupDatastoreArgs) ToGetBackupsBackupDatastoreOutput() GetBackupsBackupDatastoreOutput {
	return i.ToGetBackupsBackupDatastoreOutputWithContext(context.Background())
}

func (i GetBackupsBackupDatastoreArgs) ToGetBackupsBackupDatastoreOutputWithContext(ctx context.Context) GetBackupsBackupDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupDatastoreOutput)
}

// GetBackupsBackupDatastoreArrayInput is an input type that accepts GetBackupsBackupDatastoreArray and GetBackupsBackupDatastoreArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupDatastoreArrayInput` via:
//
//	GetBackupsBackupDatastoreArray{ GetBackupsBackupDatastoreArgs{...} }
type GetBackupsBackupDatastoreArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupDatastoreArrayOutput() GetBackupsBackupDatastoreArrayOutput
	ToGetBackupsBackupDatastoreArrayOutputWithContext(context.Context) GetBackupsBackupDatastoreArrayOutput
}

type GetBackupsBackupDatastoreArray []GetBackupsBackupDatastoreInput

func (GetBackupsBackupDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupDatastore)(nil)).Elem()
}

func (i GetBackupsBackupDatastoreArray) ToGetBackupsBackupDatastoreArrayOutput() GetBackupsBackupDatastoreArrayOutput {
	return i.ToGetBackupsBackupDatastoreArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupDatastoreArray) ToGetBackupsBackupDatastoreArrayOutputWithContext(ctx context.Context) GetBackupsBackupDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupDatastoreArrayOutput)
}

type GetBackupsBackupDatastoreOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupDatastore)(nil)).Elem()
}

func (o GetBackupsBackupDatastoreOutput) ToGetBackupsBackupDatastoreOutput() GetBackupsBackupDatastoreOutput {
	return o
}

func (o GetBackupsBackupDatastoreOutput) ToGetBackupsBackupDatastoreOutputWithContext(ctx context.Context) GetBackupsBackupDatastoreOutput {
	return o
}

// DB engine.\
// The value can be: **MySQL**, **PostgreSQL**, **SQLServer**.
func (o GetBackupsBackupDatastoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupDatastore) string { return v.Type }).(pulumi.StringOutput)
}

// DB engine version.
func (o GetBackupsBackupDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetBackupsBackupDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupDatastore)(nil)).Elem()
}

func (o GetBackupsBackupDatastoreArrayOutput) ToGetBackupsBackupDatastoreArrayOutput() GetBackupsBackupDatastoreArrayOutput {
	return o
}

func (o GetBackupsBackupDatastoreArrayOutput) ToGetBackupsBackupDatastoreArrayOutputWithContext(ctx context.Context) GetBackupsBackupDatastoreArrayOutput {
	return o
}

func (o GetBackupsBackupDatastoreArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupDatastore {
		return vs[0].([]GetBackupsBackupDatastore)[vs[1].(int)]
	}).(GetBackupsBackupDatastoreOutput)
}

type GetEngineVersionsVersion struct {
	// Version ID.
	Id string `pulumi:"id"`
	// Version name.
	Name string `pulumi:"name"`
}

// GetEngineVersionsVersionInput is an input type that accepts GetEngineVersionsVersionArgs and GetEngineVersionsVersionOutput values.
// You can construct a concrete instance of `GetEngineVersionsVersionInput` via:
//
//	GetEngineVersionsVersionArgs{...}
type GetEngineVersionsVersionInput interface {
	pulumi.Input

	ToGetEngineVersionsVersionOutput() GetEngineVersionsVersionOutput
	ToGetEngineVersionsVersionOutputWithContext(context.Context) GetEngineVersionsVersionOutput
}

type GetEngineVersionsVersionArgs struct {
	// Version ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Version name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetEngineVersionsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionsVersion)(nil)).Elem()
}

func (i GetEngineVersionsVersionArgs) ToGetEngineVersionsVersionOutput() GetEngineVersionsVersionOutput {
	return i.ToGetEngineVersionsVersionOutputWithContext(context.Background())
}

func (i GetEngineVersionsVersionArgs) ToGetEngineVersionsVersionOutputWithContext(ctx context.Context) GetEngineVersionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEngineVersionsVersionOutput)
}

// GetEngineVersionsVersionArrayInput is an input type that accepts GetEngineVersionsVersionArray and GetEngineVersionsVersionArrayOutput values.
// You can construct a concrete instance of `GetEngineVersionsVersionArrayInput` via:
//
//	GetEngineVersionsVersionArray{ GetEngineVersionsVersionArgs{...} }
type GetEngineVersionsVersionArrayInput interface {
	pulumi.Input

	ToGetEngineVersionsVersionArrayOutput() GetEngineVersionsVersionArrayOutput
	ToGetEngineVersionsVersionArrayOutputWithContext(context.Context) GetEngineVersionsVersionArrayOutput
}

type GetEngineVersionsVersionArray []GetEngineVersionsVersionInput

func (GetEngineVersionsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEngineVersionsVersion)(nil)).Elem()
}

func (i GetEngineVersionsVersionArray) ToGetEngineVersionsVersionArrayOutput() GetEngineVersionsVersionArrayOutput {
	return i.ToGetEngineVersionsVersionArrayOutputWithContext(context.Background())
}

func (i GetEngineVersionsVersionArray) ToGetEngineVersionsVersionArrayOutputWithContext(ctx context.Context) GetEngineVersionsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEngineVersionsVersionArrayOutput)
}

type GetEngineVersionsVersionOutput struct{ *pulumi.OutputState }

func (GetEngineVersionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionsVersion)(nil)).Elem()
}

func (o GetEngineVersionsVersionOutput) ToGetEngineVersionsVersionOutput() GetEngineVersionsVersionOutput {
	return o
}

func (o GetEngineVersionsVersionOutput) ToGetEngineVersionsVersionOutputWithContext(ctx context.Context) GetEngineVersionsVersionOutput {
	return o
}

// Version ID.
func (o GetEngineVersionsVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineVersionsVersion) string { return v.Id }).(pulumi.StringOutput)
}

// Version name.
func (o GetEngineVersionsVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineVersionsVersion) string { return v.Name }).(pulumi.StringOutput)
}

type GetEngineVersionsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetEngineVersionsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEngineVersionsVersion)(nil)).Elem()
}

func (o GetEngineVersionsVersionArrayOutput) ToGetEngineVersionsVersionArrayOutput() GetEngineVersionsVersionArrayOutput {
	return o
}

func (o GetEngineVersionsVersionArrayOutput) ToGetEngineVersionsVersionArrayOutputWithContext(ctx context.Context) GetEngineVersionsVersionArrayOutput {
	return o
}

func (o GetEngineVersionsVersionArrayOutput) Index(i pulumi.IntInput) GetEngineVersionsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEngineVersionsVersion {
		return vs[0].([]GetEngineVersionsVersion)[vs[1].(int)]
	}).(GetEngineVersionsVersionOutput)
}

type GetFlavorsFlavor struct {
	// The availability zones which the RDS flavor belongs to.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The Available versions of the database.
	DbVersions []string `pulumi:"dbVersions"`
	// Specifies the performance specification, the valid values are as follows:
	// + **normal**: General enhanced.
	// + **normal2**: General enhanced type II.
	GroupType string `pulumi:"groupType"`
	// The ID of the rds flavor.
	Id string `pulumi:"id"`
	// The mode of instance. Value: *ha*(indicates primary/standby instance),
	// *single*(indicates single instance) and *replica*(indicates read replicas).
	InstanceMode string `pulumi:"instanceMode"`
	// Specifies the memory size(GB) in the RDS flavor.
	Memory int `pulumi:"memory"`
	// See 'instance_mode' above.
	//
	// Deprecated: use instanceMode instead
	Mode string `pulumi:"mode"`
	// The name of the rds flavor.
	Name string `pulumi:"name"`
	// Specifies the number of vCPUs in the RDS flavor.
	Vcpus int `pulumi:"vcpus"`
}

// GetFlavorsFlavorInput is an input type that accepts GetFlavorsFlavorArgs and GetFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetFlavorsFlavorInput` via:
//
//	GetFlavorsFlavorArgs{...}
type GetFlavorsFlavorInput interface {
	pulumi.Input

	ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput
	ToGetFlavorsFlavorOutputWithContext(context.Context) GetFlavorsFlavorOutput
}

type GetFlavorsFlavorArgs struct {
	// The availability zones which the RDS flavor belongs to.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The Available versions of the database.
	DbVersions pulumi.StringArrayInput `pulumi:"dbVersions"`
	// Specifies the performance specification, the valid values are as follows:
	// + **normal**: General enhanced.
	// + **normal2**: General enhanced type II.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The ID of the rds flavor.
	Id pulumi.StringInput `pulumi:"id"`
	// The mode of instance. Value: *ha*(indicates primary/standby instance),
	// *single*(indicates single instance) and *replica*(indicates read replicas).
	InstanceMode pulumi.StringInput `pulumi:"instanceMode"`
	// Specifies the memory size(GB) in the RDS flavor.
	Memory pulumi.IntInput `pulumi:"memory"`
	// See 'instance_mode' above.
	//
	// Deprecated: use instanceMode instead
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the rds flavor.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the number of vCPUs in the RDS flavor.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
}

func (GetFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsFlavor)(nil)).Elem()
}

func (i GetFlavorsFlavorArgs) ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput {
	return i.ToGetFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetFlavorsFlavorArgs) ToGetFlavorsFlavorOutputWithContext(ctx context.Context) GetFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlavorsFlavorOutput)
}

// GetFlavorsFlavorArrayInput is an input type that accepts GetFlavorsFlavorArray and GetFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetFlavorsFlavorArrayInput` via:
//
//	GetFlavorsFlavorArray{ GetFlavorsFlavorArgs{...} }
type GetFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput
	ToGetFlavorsFlavorArrayOutputWithContext(context.Context) GetFlavorsFlavorArrayOutput
}

type GetFlavorsFlavorArray []GetFlavorsFlavorInput

func (GetFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlavorsFlavor)(nil)).Elem()
}

func (i GetFlavorsFlavorArray) ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput {
	return i.ToGetFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetFlavorsFlavorArray) ToGetFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlavorsFlavorArrayOutput)
}

type GetFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsFlavor)(nil)).Elem()
}

func (o GetFlavorsFlavorOutput) ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput {
	return o
}

func (o GetFlavorsFlavorOutput) ToGetFlavorsFlavorOutputWithContext(ctx context.Context) GetFlavorsFlavorOutput {
	return o
}

// The availability zones which the RDS flavor belongs to.
func (o GetFlavorsFlavorOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The Available versions of the database.
func (o GetFlavorsFlavorOutput) DbVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) []string { return v.DbVersions }).(pulumi.StringArrayOutput)
}

// Specifies the performance specification, the valid values are as follows:
// + **normal**: General enhanced.
// + **normal2**: General enhanced type II.
func (o GetFlavorsFlavorOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.GroupType }).(pulumi.StringOutput)
}

// The ID of the rds flavor.
func (o GetFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

// The mode of instance. Value: *ha*(indicates primary/standby instance),
// *single*(indicates single instance) and *replica*(indicates read replicas).
func (o GetFlavorsFlavorOutput) InstanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.InstanceMode }).(pulumi.StringOutput)
}

// Specifies the memory size(GB) in the RDS flavor.
func (o GetFlavorsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

// See 'instance_mode' above.
//
// Deprecated: use instanceMode instead
func (o GetFlavorsFlavorOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the rds flavor.
func (o GetFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the number of vCPUs in the RDS flavor.
func (o GetFlavorsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlavorsFlavor)(nil)).Elem()
}

func (o GetFlavorsFlavorArrayOutput) ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput {
	return o
}

func (o GetFlavorsFlavorArrayOutput) ToGetFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetFlavorsFlavorArrayOutput {
	return o
}

func (o GetFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlavorsFlavor {
		return vs[0].([]GetFlavorsFlavor)[vs[1].(int)]
	}).(GetFlavorsFlavorOutput)
}

type GetInstancesInstance struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies []GetInstancesInstanceBackupStrategy `pulumi:"backupStrategies"`
	// Indicates the creation time.
	Created string `pulumi:"created"`
	// Indicates the database information. Structure is documented below.
	Dbs []GetInstancesInstanceDb `pulumi:"dbs"`
	// Specifies the enterprise project id.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// Indicates the intranet floating IP address of the instance.
	FixedIp string `pulumi:"fixedIp"`
	// Indicates the instance specifications.
	Flavor string `pulumi:"flavor"`
	// Indicates the replication mode for the standby DB instance.
	HaReplicationMode string `pulumi:"haReplicationMode"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []GetInstancesInstanceNode `pulumi:"nodes"`
	// Indicates the configuration ID.
	ParamGroupId string `pulumi:"paramGroupId"`
	// Indicates the private ips in list.
	PrivateIps []string `pulumi:"privateIps"`
	// Indicates the public ips in list.
	PublicIps []string `pulumi:"publicIps"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region string `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Indicates whether to enable SSL.
	SslEnable bool `pulumi:"sslEnable"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId string `pulumi:"subnetId"`
	// Indicates the tags of the instance.
	Tags map[string]string `pulumi:"tags"`
	// Indicates the time zone.
	TimeZone string `pulumi:"timeZone"`
	// Indicates the volume information. Structure is documented below.
	Volumes []GetInstancesInstanceVolume `pulumi:"volumes"`
	// Specifies the VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies GetInstancesInstanceBackupStrategyArrayInput `pulumi:"backupStrategies"`
	// Indicates the creation time.
	Created pulumi.StringInput `pulumi:"created"`
	// Indicates the database information. Structure is documented below.
	Dbs GetInstancesInstanceDbArrayInput `pulumi:"dbs"`
	// Specifies the enterprise project id.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// Indicates the intranet floating IP address of the instance.
	FixedIp pulumi.StringInput `pulumi:"fixedIp"`
	// Indicates the instance specifications.
	Flavor pulumi.StringInput `pulumi:"flavor"`
	// Indicates the replication mode for the standby DB instance.
	HaReplicationMode pulumi.StringInput `pulumi:"haReplicationMode"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes GetInstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Indicates the configuration ID.
	ParamGroupId pulumi.StringInput `pulumi:"paramGroupId"`
	// Indicates the private ips in list.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
	// Indicates the public ips in list.
	PublicIps pulumi.StringArrayInput `pulumi:"publicIps"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringInput `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Indicates whether to enable SSL.
	SslEnable pulumi.BoolInput `pulumi:"sslEnable"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Indicates the tags of the instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Indicates the time zone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// Indicates the volume information. Structure is documented below.
	Volumes GetInstancesInstanceVolumeArrayInput `pulumi:"volumes"`
	// Specifies the VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetInstancesInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Indicates the advanced backup policy. Structure is documented below.
func (o GetInstancesInstanceOutput) BackupStrategies() GetInstancesInstanceBackupStrategyArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceBackupStrategy { return v.BackupStrategies }).(GetInstancesInstanceBackupStrategyArrayOutput)
}

// Indicates the creation time.
func (o GetInstancesInstanceOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Created }).(pulumi.StringOutput)
}

// Indicates the database information. Structure is documented below.
func (o GetInstancesInstanceOutput) Dbs() GetInstancesInstanceDbArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceDb { return v.Dbs }).(GetInstancesInstanceDbArrayOutput)
}

// Specifies the enterprise project id.
func (o GetInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates the intranet floating IP address of the instance.
func (o GetInstancesInstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.FixedIp }).(pulumi.StringOutput)
}

// Indicates the instance specifications.
func (o GetInstancesInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Flavor }).(pulumi.StringOutput)
}

// Indicates the replication mode for the standby DB instance.
func (o GetInstancesInstanceOutput) HaReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.HaReplicationMode }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o GetInstancesInstanceOutput) Nodes() GetInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceNode { return v.Nodes }).(GetInstancesInstanceNodeArrayOutput)
}

// Indicates the configuration ID.
func (o GetInstancesInstanceOutput) ParamGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ParamGroupId }).(pulumi.StringOutput)
}

// Indicates the private ips in list.
func (o GetInstancesInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Indicates the public ips in list.
func (o GetInstancesInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// The region in which to obtain the instances. If omitted, the provider-level region will
// be used.
func (o GetInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the security group ID.
func (o GetInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates whether to enable SSL.
func (o GetInstancesInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.SslEnable }).(pulumi.BoolOutput)
}

// Indicates the node status.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of a subnet.
func (o GetInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the tags of the instance.
func (o GetInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Indicates the time zone.
func (o GetInstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

// Indicates the volume information. Structure is documented below.
func (o GetInstancesInstanceOutput) Volumes() GetInstancesInstanceVolumeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceVolume { return v.Volumes }).(GetInstancesInstanceVolumeArrayOutput)
}

// Specifies the VPC ID.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated.
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetInstancesInstanceBackupStrategyInput is an input type that accepts GetInstancesInstanceBackupStrategyArgs and GetInstancesInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupStrategyInput` via:
//
//	GetInstancesInstanceBackupStrategyArgs{...}
type GetInstancesInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupStrategyOutput() GetInstancesInstanceBackupStrategyOutput
	ToGetInstancesInstanceBackupStrategyOutputWithContext(context.Context) GetInstancesInstanceBackupStrategyOutput
}

type GetInstancesInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated.
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetInstancesInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetInstancesInstanceBackupStrategyArgs) ToGetInstancesInstanceBackupStrategyOutput() GetInstancesInstanceBackupStrategyOutput {
	return i.ToGetInstancesInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupStrategyArgs) ToGetInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupStrategyOutput)
}

// GetInstancesInstanceBackupStrategyArrayInput is an input type that accepts GetInstancesInstanceBackupStrategyArray and GetInstancesInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupStrategyArrayInput` via:
//
//	GetInstancesInstanceBackupStrategyArray{ GetInstancesInstanceBackupStrategyArgs{...} }
type GetInstancesInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupStrategyArrayOutput() GetInstancesInstanceBackupStrategyArrayOutput
	ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(context.Context) GetInstancesInstanceBackupStrategyArrayOutput
}

type GetInstancesInstanceBackupStrategyArray []GetInstancesInstanceBackupStrategyInput

func (GetInstancesInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetInstancesInstanceBackupStrategyArray) ToGetInstancesInstanceBackupStrategyArrayOutput() GetInstancesInstanceBackupStrategyArrayOutput {
	return i.ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupStrategyArray) ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupStrategyArrayOutput)
}

type GetInstancesInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetInstancesInstanceBackupStrategyOutput) ToGetInstancesInstanceBackupStrategyOutput() GetInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetInstancesInstanceBackupStrategyOutput) ToGetInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated.
func (o GetInstancesInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetInstancesInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetInstancesInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetInstancesInstanceBackupStrategyArrayOutput) ToGetInstancesInstanceBackupStrategyArrayOutput() GetInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupStrategyArrayOutput) ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceBackupStrategy {
		return vs[0].([]GetInstancesInstanceBackupStrategy)[vs[1].(int)]
	}).(GetInstancesInstanceBackupStrategyOutput)
}

type GetInstancesInstanceDb struct {
	// Indicates the database port.
	Port int `pulumi:"port"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type string `pulumi:"type"`
	// Indicates the database user name.
	UserName string `pulumi:"userName"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetInstancesInstanceDbInput is an input type that accepts GetInstancesInstanceDbArgs and GetInstancesInstanceDbOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDbInput` via:
//
//	GetInstancesInstanceDbArgs{...}
type GetInstancesInstanceDbInput interface {
	pulumi.Input

	ToGetInstancesInstanceDbOutput() GetInstancesInstanceDbOutput
	ToGetInstancesInstanceDbOutputWithContext(context.Context) GetInstancesInstanceDbOutput
}

type GetInstancesInstanceDbArgs struct {
	// Indicates the database port.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type pulumi.StringInput `pulumi:"type"`
	// Indicates the database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetInstancesInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDb)(nil)).Elem()
}

func (i GetInstancesInstanceDbArgs) ToGetInstancesInstanceDbOutput() GetInstancesInstanceDbOutput {
	return i.ToGetInstancesInstanceDbOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDbArgs) ToGetInstancesInstanceDbOutputWithContext(ctx context.Context) GetInstancesInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDbOutput)
}

// GetInstancesInstanceDbArrayInput is an input type that accepts GetInstancesInstanceDbArray and GetInstancesInstanceDbArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDbArrayInput` via:
//
//	GetInstancesInstanceDbArray{ GetInstancesInstanceDbArgs{...} }
type GetInstancesInstanceDbArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceDbArrayOutput() GetInstancesInstanceDbArrayOutput
	ToGetInstancesInstanceDbArrayOutputWithContext(context.Context) GetInstancesInstanceDbArrayOutput
}

type GetInstancesInstanceDbArray []GetInstancesInstanceDbInput

func (GetInstancesInstanceDbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDb)(nil)).Elem()
}

func (i GetInstancesInstanceDbArray) ToGetInstancesInstanceDbArrayOutput() GetInstancesInstanceDbArrayOutput {
	return i.ToGetInstancesInstanceDbArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDbArray) ToGetInstancesInstanceDbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDbArrayOutput)
}

type GetInstancesInstanceDbOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDb)(nil)).Elem()
}

func (o GetInstancesInstanceDbOutput) ToGetInstancesInstanceDbOutput() GetInstancesInstanceDbOutput {
	return o
}

func (o GetInstancesInstanceDbOutput) ToGetInstancesInstanceDbOutputWithContext(ctx context.Context) GetInstancesInstanceDbOutput {
	return o
}

// Indicates the database port.
func (o GetInstancesInstanceDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
func (o GetInstancesInstanceDbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) string { return v.Type }).(pulumi.StringOutput)
}

// Indicates the database user name.
func (o GetInstancesInstanceDbOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) string { return v.UserName }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetInstancesInstanceDbOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) string { return v.Version }).(pulumi.StringOutput)
}

type GetInstancesInstanceDbArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDb)(nil)).Elem()
}

func (o GetInstancesInstanceDbArrayOutput) ToGetInstancesInstanceDbArrayOutput() GetInstancesInstanceDbArrayOutput {
	return o
}

func (o GetInstancesInstanceDbArrayOutput) ToGetInstancesInstanceDbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDbArrayOutput {
	return o
}

func (o GetInstancesInstanceDbArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceDbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceDb {
		return vs[0].([]GetInstancesInstanceDb)[vs[1].(int)]
	}).(GetInstancesInstanceDbOutput)
}

type GetInstancesInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the node type.
	Role string `pulumi:"role"`
	// Indicates the node status.
	Status string `pulumi:"status"`
}

// GetInstancesInstanceNodeInput is an input type that accepts GetInstancesInstanceNodeArgs and GetInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceNodeInput` via:
//
//	GetInstancesInstanceNodeArgs{...}
type GetInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput
	ToGetInstancesInstanceNodeOutputWithContext(context.Context) GetInstancesInstanceNodeOutput
}

type GetInstancesInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the node type.
	Role pulumi.StringInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceNode)(nil)).Elem()
}

func (i GetInstancesInstanceNodeArgs) ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput {
	return i.ToGetInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceNodeArgs) ToGetInstancesInstanceNodeOutputWithContext(ctx context.Context) GetInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceNodeOutput)
}

// GetInstancesInstanceNodeArrayInput is an input type that accepts GetInstancesInstanceNodeArray and GetInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceNodeArrayInput` via:
//
//	GetInstancesInstanceNodeArray{ GetInstancesInstanceNodeArgs{...} }
type GetInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput
	ToGetInstancesInstanceNodeArrayOutputWithContext(context.Context) GetInstancesInstanceNodeArrayOutput
}

type GetInstancesInstanceNodeArray []GetInstancesInstanceNodeInput

func (GetInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceNode)(nil)).Elem()
}

func (i GetInstancesInstanceNodeArray) ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput {
	return i.ToGetInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceNodeArray) ToGetInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceNodeArrayOutput)
}

type GetInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceNode)(nil)).Elem()
}

func (o GetInstancesInstanceNodeOutput) ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput {
	return o
}

func (o GetInstancesInstanceNodeOutput) ToGetInstancesInstanceNodeOutputWithContext(ctx context.Context) GetInstancesInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetInstancesInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetInstancesInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetInstancesInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the node type.
func (o GetInstancesInstanceNodeOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Role }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetInstancesInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceNode)(nil)).Elem()
}

func (o GetInstancesInstanceNodeArrayOutput) ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceNodeArrayOutput) ToGetInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceNode {
		return vs[0].([]GetInstancesInstanceNode)[vs[1].(int)]
	}).(GetInstancesInstanceNodeOutput)
}

type GetInstancesInstanceVolume struct {
	// Indicates the kms key id.
	DiskEncryptionId string `pulumi:"diskEncryptionId"`
	// Indicates the volume size.
	Size int `pulumi:"size"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type string `pulumi:"type"`
}

// GetInstancesInstanceVolumeInput is an input type that accepts GetInstancesInstanceVolumeArgs and GetInstancesInstanceVolumeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVolumeInput` via:
//
//	GetInstancesInstanceVolumeArgs{...}
type GetInstancesInstanceVolumeInput interface {
	pulumi.Input

	ToGetInstancesInstanceVolumeOutput() GetInstancesInstanceVolumeOutput
	ToGetInstancesInstanceVolumeOutputWithContext(context.Context) GetInstancesInstanceVolumeOutput
}

type GetInstancesInstanceVolumeArgs struct {
	// Indicates the kms key id.
	DiskEncryptionId pulumi.StringInput `pulumi:"diskEncryptionId"`
	// Indicates the volume size.
	Size pulumi.IntInput `pulumi:"size"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstancesInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVolume)(nil)).Elem()
}

func (i GetInstancesInstanceVolumeArgs) ToGetInstancesInstanceVolumeOutput() GetInstancesInstanceVolumeOutput {
	return i.ToGetInstancesInstanceVolumeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVolumeArgs) ToGetInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVolumeOutput)
}

// GetInstancesInstanceVolumeArrayInput is an input type that accepts GetInstancesInstanceVolumeArray and GetInstancesInstanceVolumeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVolumeArrayInput` via:
//
//	GetInstancesInstanceVolumeArray{ GetInstancesInstanceVolumeArgs{...} }
type GetInstancesInstanceVolumeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceVolumeArrayOutput() GetInstancesInstanceVolumeArrayOutput
	ToGetInstancesInstanceVolumeArrayOutputWithContext(context.Context) GetInstancesInstanceVolumeArrayOutput
}

type GetInstancesInstanceVolumeArray []GetInstancesInstanceVolumeInput

func (GetInstancesInstanceVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVolume)(nil)).Elem()
}

func (i GetInstancesInstanceVolumeArray) ToGetInstancesInstanceVolumeArrayOutput() GetInstancesInstanceVolumeArrayOutput {
	return i.ToGetInstancesInstanceVolumeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVolumeArray) ToGetInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVolumeArrayOutput)
}

type GetInstancesInstanceVolumeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVolume)(nil)).Elem()
}

func (o GetInstancesInstanceVolumeOutput) ToGetInstancesInstanceVolumeOutput() GetInstancesInstanceVolumeOutput {
	return o
}

func (o GetInstancesInstanceVolumeOutput) ToGetInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeOutput {
	return o
}

// Indicates the kms key id.
func (o GetInstancesInstanceVolumeOutput) DiskEncryptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVolume) string { return v.DiskEncryptionId }).(pulumi.StringOutput)
}

// Indicates the volume size.
func (o GetInstancesInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
func (o GetInstancesInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstancesInstanceVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVolume)(nil)).Elem()
}

func (o GetInstancesInstanceVolumeArrayOutput) ToGetInstancesInstanceVolumeArrayOutput() GetInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetInstancesInstanceVolumeArrayOutput) ToGetInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetInstancesInstanceVolumeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceVolume {
		return vs[0].([]GetInstancesInstanceVolume)[vs[1].(int)]
	}).(GetInstancesInstanceVolumeOutput)
}

type GetPgAccountsUser struct {
	Attributes  []GetPgAccountsUserAttribute `pulumi:"attributes"`
	Description string                       `pulumi:"description"`
	Memberofs   []string                     `pulumi:"memberofs"`
	Name        string                       `pulumi:"name"`
}

// GetPgAccountsUserInput is an input type that accepts GetPgAccountsUserArgs and GetPgAccountsUserOutput values.
// You can construct a concrete instance of `GetPgAccountsUserInput` via:
//
//	GetPgAccountsUserArgs{...}
type GetPgAccountsUserInput interface {
	pulumi.Input

	ToGetPgAccountsUserOutput() GetPgAccountsUserOutput
	ToGetPgAccountsUserOutputWithContext(context.Context) GetPgAccountsUserOutput
}

type GetPgAccountsUserArgs struct {
	Attributes  GetPgAccountsUserAttributeArrayInput `pulumi:"attributes"`
	Description pulumi.StringInput                   `pulumi:"description"`
	Memberofs   pulumi.StringArrayInput              `pulumi:"memberofs"`
	Name        pulumi.StringInput                   `pulumi:"name"`
}

func (GetPgAccountsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgAccountsUser)(nil)).Elem()
}

func (i GetPgAccountsUserArgs) ToGetPgAccountsUserOutput() GetPgAccountsUserOutput {
	return i.ToGetPgAccountsUserOutputWithContext(context.Background())
}

func (i GetPgAccountsUserArgs) ToGetPgAccountsUserOutputWithContext(ctx context.Context) GetPgAccountsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgAccountsUserOutput)
}

// GetPgAccountsUserArrayInput is an input type that accepts GetPgAccountsUserArray and GetPgAccountsUserArrayOutput values.
// You can construct a concrete instance of `GetPgAccountsUserArrayInput` via:
//
//	GetPgAccountsUserArray{ GetPgAccountsUserArgs{...} }
type GetPgAccountsUserArrayInput interface {
	pulumi.Input

	ToGetPgAccountsUserArrayOutput() GetPgAccountsUserArrayOutput
	ToGetPgAccountsUserArrayOutputWithContext(context.Context) GetPgAccountsUserArrayOutput
}

type GetPgAccountsUserArray []GetPgAccountsUserInput

func (GetPgAccountsUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgAccountsUser)(nil)).Elem()
}

func (i GetPgAccountsUserArray) ToGetPgAccountsUserArrayOutput() GetPgAccountsUserArrayOutput {
	return i.ToGetPgAccountsUserArrayOutputWithContext(context.Background())
}

func (i GetPgAccountsUserArray) ToGetPgAccountsUserArrayOutputWithContext(ctx context.Context) GetPgAccountsUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgAccountsUserArrayOutput)
}

type GetPgAccountsUserOutput struct{ *pulumi.OutputState }

func (GetPgAccountsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgAccountsUser)(nil)).Elem()
}

func (o GetPgAccountsUserOutput) ToGetPgAccountsUserOutput() GetPgAccountsUserOutput {
	return o
}

func (o GetPgAccountsUserOutput) ToGetPgAccountsUserOutputWithContext(ctx context.Context) GetPgAccountsUserOutput {
	return o
}

func (o GetPgAccountsUserOutput) Attributes() GetPgAccountsUserAttributeArrayOutput {
	return o.ApplyT(func(v GetPgAccountsUser) []GetPgAccountsUserAttribute { return v.Attributes }).(GetPgAccountsUserAttributeArrayOutput)
}

func (o GetPgAccountsUserOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgAccountsUser) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetPgAccountsUserOutput) Memberofs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPgAccountsUser) []string { return v.Memberofs }).(pulumi.StringArrayOutput)
}

func (o GetPgAccountsUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgAccountsUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetPgAccountsUserArrayOutput struct{ *pulumi.OutputState }

func (GetPgAccountsUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgAccountsUser)(nil)).Elem()
}

func (o GetPgAccountsUserArrayOutput) ToGetPgAccountsUserArrayOutput() GetPgAccountsUserArrayOutput {
	return o
}

func (o GetPgAccountsUserArrayOutput) ToGetPgAccountsUserArrayOutputWithContext(ctx context.Context) GetPgAccountsUserArrayOutput {
	return o
}

func (o GetPgAccountsUserArrayOutput) Index(i pulumi.IntInput) GetPgAccountsUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgAccountsUser {
		return vs[0].([]GetPgAccountsUser)[vs[1].(int)]
	}).(GetPgAccountsUserOutput)
}

type GetPgAccountsUserAttribute struct {
	Rolbypassrls   bool `pulumi:"rolbypassrls"`
	Rolcanlogin    bool `pulumi:"rolcanlogin"`
	Rolconnlimit   int  `pulumi:"rolconnlimit"`
	Rolcreatedb    bool `pulumi:"rolcreatedb"`
	Rolcreaterole  bool `pulumi:"rolcreaterole"`
	Rolinherit     bool `pulumi:"rolinherit"`
	Rolreplication bool `pulumi:"rolreplication"`
	Rolsuper       bool `pulumi:"rolsuper"`
}

// GetPgAccountsUserAttributeInput is an input type that accepts GetPgAccountsUserAttributeArgs and GetPgAccountsUserAttributeOutput values.
// You can construct a concrete instance of `GetPgAccountsUserAttributeInput` via:
//
//	GetPgAccountsUserAttributeArgs{...}
type GetPgAccountsUserAttributeInput interface {
	pulumi.Input

	ToGetPgAccountsUserAttributeOutput() GetPgAccountsUserAttributeOutput
	ToGetPgAccountsUserAttributeOutputWithContext(context.Context) GetPgAccountsUserAttributeOutput
}

type GetPgAccountsUserAttributeArgs struct {
	Rolbypassrls   pulumi.BoolInput `pulumi:"rolbypassrls"`
	Rolcanlogin    pulumi.BoolInput `pulumi:"rolcanlogin"`
	Rolconnlimit   pulumi.IntInput  `pulumi:"rolconnlimit"`
	Rolcreatedb    pulumi.BoolInput `pulumi:"rolcreatedb"`
	Rolcreaterole  pulumi.BoolInput `pulumi:"rolcreaterole"`
	Rolinherit     pulumi.BoolInput `pulumi:"rolinherit"`
	Rolreplication pulumi.BoolInput `pulumi:"rolreplication"`
	Rolsuper       pulumi.BoolInput `pulumi:"rolsuper"`
}

func (GetPgAccountsUserAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgAccountsUserAttribute)(nil)).Elem()
}

func (i GetPgAccountsUserAttributeArgs) ToGetPgAccountsUserAttributeOutput() GetPgAccountsUserAttributeOutput {
	return i.ToGetPgAccountsUserAttributeOutputWithContext(context.Background())
}

func (i GetPgAccountsUserAttributeArgs) ToGetPgAccountsUserAttributeOutputWithContext(ctx context.Context) GetPgAccountsUserAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgAccountsUserAttributeOutput)
}

// GetPgAccountsUserAttributeArrayInput is an input type that accepts GetPgAccountsUserAttributeArray and GetPgAccountsUserAttributeArrayOutput values.
// You can construct a concrete instance of `GetPgAccountsUserAttributeArrayInput` via:
//
//	GetPgAccountsUserAttributeArray{ GetPgAccountsUserAttributeArgs{...} }
type GetPgAccountsUserAttributeArrayInput interface {
	pulumi.Input

	ToGetPgAccountsUserAttributeArrayOutput() GetPgAccountsUserAttributeArrayOutput
	ToGetPgAccountsUserAttributeArrayOutputWithContext(context.Context) GetPgAccountsUserAttributeArrayOutput
}

type GetPgAccountsUserAttributeArray []GetPgAccountsUserAttributeInput

func (GetPgAccountsUserAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgAccountsUserAttribute)(nil)).Elem()
}

func (i GetPgAccountsUserAttributeArray) ToGetPgAccountsUserAttributeArrayOutput() GetPgAccountsUserAttributeArrayOutput {
	return i.ToGetPgAccountsUserAttributeArrayOutputWithContext(context.Background())
}

func (i GetPgAccountsUserAttributeArray) ToGetPgAccountsUserAttributeArrayOutputWithContext(ctx context.Context) GetPgAccountsUserAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgAccountsUserAttributeArrayOutput)
}

type GetPgAccountsUserAttributeOutput struct{ *pulumi.OutputState }

func (GetPgAccountsUserAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgAccountsUserAttribute)(nil)).Elem()
}

func (o GetPgAccountsUserAttributeOutput) ToGetPgAccountsUserAttributeOutput() GetPgAccountsUserAttributeOutput {
	return o
}

func (o GetPgAccountsUserAttributeOutput) ToGetPgAccountsUserAttributeOutputWithContext(ctx context.Context) GetPgAccountsUserAttributeOutput {
	return o
}

func (o GetPgAccountsUserAttributeOutput) Rolbypassrls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolbypassrls }).(pulumi.BoolOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolcanlogin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolcanlogin }).(pulumi.BoolOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolconnlimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) int { return v.Rolconnlimit }).(pulumi.IntOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolcreatedb() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolcreatedb }).(pulumi.BoolOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolcreaterole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolcreaterole }).(pulumi.BoolOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolinherit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolinherit }).(pulumi.BoolOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolreplication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolreplication }).(pulumi.BoolOutput)
}

func (o GetPgAccountsUserAttributeOutput) Rolsuper() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgAccountsUserAttribute) bool { return v.Rolsuper }).(pulumi.BoolOutput)
}

type GetPgAccountsUserAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetPgAccountsUserAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgAccountsUserAttribute)(nil)).Elem()
}

func (o GetPgAccountsUserAttributeArrayOutput) ToGetPgAccountsUserAttributeArrayOutput() GetPgAccountsUserAttributeArrayOutput {
	return o
}

func (o GetPgAccountsUserAttributeArrayOutput) ToGetPgAccountsUserAttributeArrayOutputWithContext(ctx context.Context) GetPgAccountsUserAttributeArrayOutput {
	return o
}

func (o GetPgAccountsUserAttributeArrayOutput) Index(i pulumi.IntInput) GetPgAccountsUserAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgAccountsUserAttribute {
		return vs[0].([]GetPgAccountsUserAttribute)[vs[1].(int)]
	}).(GetPgAccountsUserAttributeOutput)
}

type GetPgDatabasesDatabase struct {
	CharacterSet string `pulumi:"characterSet"`
	Description  string `pulumi:"description"`
	LcCollate    string `pulumi:"lcCollate"`
	Name         string `pulumi:"name"`
	Owner        string `pulumi:"owner"`
	Size         int    `pulumi:"size"`
}

// GetPgDatabasesDatabaseInput is an input type that accepts GetPgDatabasesDatabaseArgs and GetPgDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetPgDatabasesDatabaseInput` via:
//
//	GetPgDatabasesDatabaseArgs{...}
type GetPgDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput
	ToGetPgDatabasesDatabaseOutputWithContext(context.Context) GetPgDatabasesDatabaseOutput
}

type GetPgDatabasesDatabaseArgs struct {
	CharacterSet pulumi.StringInput `pulumi:"characterSet"`
	Description  pulumi.StringInput `pulumi:"description"`
	LcCollate    pulumi.StringInput `pulumi:"lcCollate"`
	Name         pulumi.StringInput `pulumi:"name"`
	Owner        pulumi.StringInput `pulumi:"owner"`
	Size         pulumi.IntInput    `pulumi:"size"`
}

func (GetPgDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesDatabase)(nil)).Elem()
}

func (i GetPgDatabasesDatabaseArgs) ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput {
	return i.ToGetPgDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetPgDatabasesDatabaseArgs) ToGetPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgDatabasesDatabaseOutput)
}

// GetPgDatabasesDatabaseArrayInput is an input type that accepts GetPgDatabasesDatabaseArray and GetPgDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetPgDatabasesDatabaseArrayInput` via:
//
//	GetPgDatabasesDatabaseArray{ GetPgDatabasesDatabaseArgs{...} }
type GetPgDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput
	ToGetPgDatabasesDatabaseArrayOutputWithContext(context.Context) GetPgDatabasesDatabaseArrayOutput
}

type GetPgDatabasesDatabaseArray []GetPgDatabasesDatabaseInput

func (GetPgDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgDatabasesDatabase)(nil)).Elem()
}

func (i GetPgDatabasesDatabaseArray) ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput {
	return i.ToGetPgDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetPgDatabasesDatabaseArray) ToGetPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgDatabasesDatabaseArrayOutput)
}

type GetPgDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesDatabase)(nil)).Elem()
}

func (o GetPgDatabasesDatabaseOutput) ToGetPgDatabasesDatabaseOutput() GetPgDatabasesDatabaseOutput {
	return o
}

func (o GetPgDatabasesDatabaseOutput) ToGetPgDatabasesDatabaseOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseOutput {
	return o
}

func (o GetPgDatabasesDatabaseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.CharacterSet }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) LcCollate() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.LcCollate }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetPgDatabasesDatabaseOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgDatabasesDatabase) int { return v.Size }).(pulumi.IntOutput)
}

type GetPgDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgDatabasesDatabase)(nil)).Elem()
}

func (o GetPgDatabasesDatabaseArrayOutput) ToGetPgDatabasesDatabaseArrayOutput() GetPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetPgDatabasesDatabaseArrayOutput) ToGetPgDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetPgDatabasesDatabaseArrayOutput {
	return o
}

func (o GetPgDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetPgDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgDatabasesDatabase {
		return vs[0].([]GetPgDatabasesDatabase)[vs[1].(int)]
	}).(GetPgDatabasesDatabaseOutput)
}

type GetPgPluginsPlugin struct {
	// Indicates whether the plugin has been created.
	Created bool `pulumi:"created"`
	// Indicates the plugin description.
	Description string `pulumi:"description"`
	// Indicates the plugin name.
	Name string `pulumi:"name"`
	// Indicates the dependent preloaded library.
	SharedPreloadLibraries string `pulumi:"sharedPreloadLibraries"`
	// Indicates the plugin version.
	Version string `pulumi:"version"`
}

// GetPgPluginsPluginInput is an input type that accepts GetPgPluginsPluginArgs and GetPgPluginsPluginOutput values.
// You can construct a concrete instance of `GetPgPluginsPluginInput` via:
//
//	GetPgPluginsPluginArgs{...}
type GetPgPluginsPluginInput interface {
	pulumi.Input

	ToGetPgPluginsPluginOutput() GetPgPluginsPluginOutput
	ToGetPgPluginsPluginOutputWithContext(context.Context) GetPgPluginsPluginOutput
}

type GetPgPluginsPluginArgs struct {
	// Indicates whether the plugin has been created.
	Created pulumi.BoolInput `pulumi:"created"`
	// Indicates the plugin description.
	Description pulumi.StringInput `pulumi:"description"`
	// Indicates the plugin name.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the dependent preloaded library.
	SharedPreloadLibraries pulumi.StringInput `pulumi:"sharedPreloadLibraries"`
	// Indicates the plugin version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetPgPluginsPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPluginsPlugin)(nil)).Elem()
}

func (i GetPgPluginsPluginArgs) ToGetPgPluginsPluginOutput() GetPgPluginsPluginOutput {
	return i.ToGetPgPluginsPluginOutputWithContext(context.Background())
}

func (i GetPgPluginsPluginArgs) ToGetPgPluginsPluginOutputWithContext(ctx context.Context) GetPgPluginsPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPluginsPluginOutput)
}

// GetPgPluginsPluginArrayInput is an input type that accepts GetPgPluginsPluginArray and GetPgPluginsPluginArrayOutput values.
// You can construct a concrete instance of `GetPgPluginsPluginArrayInput` via:
//
//	GetPgPluginsPluginArray{ GetPgPluginsPluginArgs{...} }
type GetPgPluginsPluginArrayInput interface {
	pulumi.Input

	ToGetPgPluginsPluginArrayOutput() GetPgPluginsPluginArrayOutput
	ToGetPgPluginsPluginArrayOutputWithContext(context.Context) GetPgPluginsPluginArrayOutput
}

type GetPgPluginsPluginArray []GetPgPluginsPluginInput

func (GetPgPluginsPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgPluginsPlugin)(nil)).Elem()
}

func (i GetPgPluginsPluginArray) ToGetPgPluginsPluginArrayOutput() GetPgPluginsPluginArrayOutput {
	return i.ToGetPgPluginsPluginArrayOutputWithContext(context.Background())
}

func (i GetPgPluginsPluginArray) ToGetPgPluginsPluginArrayOutputWithContext(ctx context.Context) GetPgPluginsPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgPluginsPluginArrayOutput)
}

type GetPgPluginsPluginOutput struct{ *pulumi.OutputState }

func (GetPgPluginsPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgPluginsPlugin)(nil)).Elem()
}

func (o GetPgPluginsPluginOutput) ToGetPgPluginsPluginOutput() GetPgPluginsPluginOutput {
	return o
}

func (o GetPgPluginsPluginOutput) ToGetPgPluginsPluginOutputWithContext(ctx context.Context) GetPgPluginsPluginOutput {
	return o
}

// Indicates whether the plugin has been created.
func (o GetPgPluginsPluginOutput) Created() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgPluginsPlugin) bool { return v.Created }).(pulumi.BoolOutput)
}

// Indicates the plugin description.
func (o GetPgPluginsPluginOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsPlugin) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates the plugin name.
func (o GetPgPluginsPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsPlugin) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the dependent preloaded library.
func (o GetPgPluginsPluginOutput) SharedPreloadLibraries() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsPlugin) string { return v.SharedPreloadLibraries }).(pulumi.StringOutput)
}

// Indicates the plugin version.
func (o GetPgPluginsPluginOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgPluginsPlugin) string { return v.Version }).(pulumi.StringOutput)
}

type GetPgPluginsPluginArrayOutput struct{ *pulumi.OutputState }

func (GetPgPluginsPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgPluginsPlugin)(nil)).Elem()
}

func (o GetPgPluginsPluginArrayOutput) ToGetPgPluginsPluginArrayOutput() GetPgPluginsPluginArrayOutput {
	return o
}

func (o GetPgPluginsPluginArrayOutput) ToGetPgPluginsPluginArrayOutputWithContext(ctx context.Context) GetPgPluginsPluginArrayOutput {
	return o
}

func (o GetPgPluginsPluginArrayOutput) Index(i pulumi.IntInput) GetPgPluginsPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgPluginsPlugin {
		return vs[0].([]GetPgPluginsPlugin)[vs[1].(int)]
	}).(GetPgPluginsPluginOutput)
}

type GetPgSqlLimitsSqlLimit struct {
	// Indicates the ID of SQL limit.
	Id string `pulumi:"id"`
	// Indicates whether the SQL limit is effective.
	IsEffective bool `pulumi:"isEffective"`
	// Indicates the number of SQL statements executed simultaneously.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Indicates the max waiting time in seconds.
	MaxWaiting int `pulumi:"maxWaiting"`
	// Indicates the query ID.
	QueryId string `pulumi:"queryId"`
	// Indicates the text form of SQL statement.
	QueryString string `pulumi:"queryString"`
	// Indicates the query order for names that are not schema qualified.
	SearchPath string `pulumi:"searchPath"`
}

// GetPgSqlLimitsSqlLimitInput is an input type that accepts GetPgSqlLimitsSqlLimitArgs and GetPgSqlLimitsSqlLimitOutput values.
// You can construct a concrete instance of `GetPgSqlLimitsSqlLimitInput` via:
//
//	GetPgSqlLimitsSqlLimitArgs{...}
type GetPgSqlLimitsSqlLimitInput interface {
	pulumi.Input

	ToGetPgSqlLimitsSqlLimitOutput() GetPgSqlLimitsSqlLimitOutput
	ToGetPgSqlLimitsSqlLimitOutputWithContext(context.Context) GetPgSqlLimitsSqlLimitOutput
}

type GetPgSqlLimitsSqlLimitArgs struct {
	// Indicates the ID of SQL limit.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the SQL limit is effective.
	IsEffective pulumi.BoolInput `pulumi:"isEffective"`
	// Indicates the number of SQL statements executed simultaneously.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Indicates the max waiting time in seconds.
	MaxWaiting pulumi.IntInput `pulumi:"maxWaiting"`
	// Indicates the query ID.
	QueryId pulumi.StringInput `pulumi:"queryId"`
	// Indicates the text form of SQL statement.
	QueryString pulumi.StringInput `pulumi:"queryString"`
	// Indicates the query order for names that are not schema qualified.
	SearchPath pulumi.StringInput `pulumi:"searchPath"`
}

func (GetPgSqlLimitsSqlLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (i GetPgSqlLimitsSqlLimitArgs) ToGetPgSqlLimitsSqlLimitOutput() GetPgSqlLimitsSqlLimitOutput {
	return i.ToGetPgSqlLimitsSqlLimitOutputWithContext(context.Background())
}

func (i GetPgSqlLimitsSqlLimitArgs) ToGetPgSqlLimitsSqlLimitOutputWithContext(ctx context.Context) GetPgSqlLimitsSqlLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgSqlLimitsSqlLimitOutput)
}

// GetPgSqlLimitsSqlLimitArrayInput is an input type that accepts GetPgSqlLimitsSqlLimitArray and GetPgSqlLimitsSqlLimitArrayOutput values.
// You can construct a concrete instance of `GetPgSqlLimitsSqlLimitArrayInput` via:
//
//	GetPgSqlLimitsSqlLimitArray{ GetPgSqlLimitsSqlLimitArgs{...} }
type GetPgSqlLimitsSqlLimitArrayInput interface {
	pulumi.Input

	ToGetPgSqlLimitsSqlLimitArrayOutput() GetPgSqlLimitsSqlLimitArrayOutput
	ToGetPgSqlLimitsSqlLimitArrayOutputWithContext(context.Context) GetPgSqlLimitsSqlLimitArrayOutput
}

type GetPgSqlLimitsSqlLimitArray []GetPgSqlLimitsSqlLimitInput

func (GetPgSqlLimitsSqlLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (i GetPgSqlLimitsSqlLimitArray) ToGetPgSqlLimitsSqlLimitArrayOutput() GetPgSqlLimitsSqlLimitArrayOutput {
	return i.ToGetPgSqlLimitsSqlLimitArrayOutputWithContext(context.Background())
}

func (i GetPgSqlLimitsSqlLimitArray) ToGetPgSqlLimitsSqlLimitArrayOutputWithContext(ctx context.Context) GetPgSqlLimitsSqlLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPgSqlLimitsSqlLimitArrayOutput)
}

type GetPgSqlLimitsSqlLimitOutput struct{ *pulumi.OutputState }

func (GetPgSqlLimitsSqlLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (o GetPgSqlLimitsSqlLimitOutput) ToGetPgSqlLimitsSqlLimitOutput() GetPgSqlLimitsSqlLimitOutput {
	return o
}

func (o GetPgSqlLimitsSqlLimitOutput) ToGetPgSqlLimitsSqlLimitOutputWithContext(ctx context.Context) GetPgSqlLimitsSqlLimitOutput {
	return o
}

// Indicates the ID of SQL limit.
func (o GetPgSqlLimitsSqlLimitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the SQL limit is effective.
func (o GetPgSqlLimitsSqlLimitOutput) IsEffective() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) bool { return v.IsEffective }).(pulumi.BoolOutput)
}

// Indicates the number of SQL statements executed simultaneously.
func (o GetPgSqlLimitsSqlLimitOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Indicates the max waiting time in seconds.
func (o GetPgSqlLimitsSqlLimitOutput) MaxWaiting() pulumi.IntOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) int { return v.MaxWaiting }).(pulumi.IntOutput)
}

// Indicates the query ID.
func (o GetPgSqlLimitsSqlLimitOutput) QueryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) string { return v.QueryId }).(pulumi.StringOutput)
}

// Indicates the text form of SQL statement.
func (o GetPgSqlLimitsSqlLimitOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) string { return v.QueryString }).(pulumi.StringOutput)
}

// Indicates the query order for names that are not schema qualified.
func (o GetPgSqlLimitsSqlLimitOutput) SearchPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsSqlLimit) string { return v.SearchPath }).(pulumi.StringOutput)
}

type GetPgSqlLimitsSqlLimitArrayOutput struct{ *pulumi.OutputState }

func (GetPgSqlLimitsSqlLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPgSqlLimitsSqlLimit)(nil)).Elem()
}

func (o GetPgSqlLimitsSqlLimitArrayOutput) ToGetPgSqlLimitsSqlLimitArrayOutput() GetPgSqlLimitsSqlLimitArrayOutput {
	return o
}

func (o GetPgSqlLimitsSqlLimitArrayOutput) ToGetPgSqlLimitsSqlLimitArrayOutputWithContext(ctx context.Context) GetPgSqlLimitsSqlLimitArrayOutput {
	return o
}

func (o GetPgSqlLimitsSqlLimitArrayOutput) Index(i pulumi.IntInput) GetPgSqlLimitsSqlLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPgSqlLimitsSqlLimit {
		return vs[0].([]GetPgSqlLimitsSqlLimit)[vs[1].(int)]
	}).(GetPgSqlLimitsSqlLimitOutput)
}

type GetStorageTypesStorageType struct {
	// The status details of the AZs to which the specification belongs.
	// Key indicates the AZ ID, and value indicates the specification status in the AZ.
	// The options of value are as follows:
	// - **normal**: The specifications in the AZ are available.
	// - **unsupported**: The specifications are not supported by the AZ.
	// - **sellout**: The specifications in the AZ are sold out.
	AzStatus map[string]string `pulumi:"azStatus"`
	// Storage type.\
	// The options are as follows:
	// - **ULTRAHIGH**: SSD storage.
	// - **LOCALSSD**: Local SSD storage.
	// - **CLOUDSSD**: Cloud SSD storage.
	//   This storage type is supported only with general-purpose and dedicated DB instances.
	// - **ESSD**: extreme SSD storage.
	//   This storage type is supported only with dedicated DB instances.
	Name string `pulumi:"name"`
	// Performance specifications.
	// The options are as follows:
	// - **normal**: General-enhanced.
	// - **normal2**: General-enhanced II.
	// - **armFlavors**: Kunpeng general-enhanced.
	// - **dedicicatenormal**: Exclusive x86.
	// - **armlocalssd**: Standard Kunpeng.
	// - **normallocalssd**: Standard x86.
	// - **general**: General-purpose.
	// - **dedicated**: Dedicated, which is only supported for cloud SSDs.
	// - **rapid**: Dedicated, which is only supported for extreme SSDs.
	// - **bigmen**: Large-memory.
	SupportComputeGroupTypes []string `pulumi:"supportComputeGroupTypes"`
}

// GetStorageTypesStorageTypeInput is an input type that accepts GetStorageTypesStorageTypeArgs and GetStorageTypesStorageTypeOutput values.
// You can construct a concrete instance of `GetStorageTypesStorageTypeInput` via:
//
//	GetStorageTypesStorageTypeArgs{...}
type GetStorageTypesStorageTypeInput interface {
	pulumi.Input

	ToGetStorageTypesStorageTypeOutput() GetStorageTypesStorageTypeOutput
	ToGetStorageTypesStorageTypeOutputWithContext(context.Context) GetStorageTypesStorageTypeOutput
}

type GetStorageTypesStorageTypeArgs struct {
	// The status details of the AZs to which the specification belongs.
	// Key indicates the AZ ID, and value indicates the specification status in the AZ.
	// The options of value are as follows:
	// - **normal**: The specifications in the AZ are available.
	// - **unsupported**: The specifications are not supported by the AZ.
	// - **sellout**: The specifications in the AZ are sold out.
	AzStatus pulumi.StringMapInput `pulumi:"azStatus"`
	// Storage type.\
	// The options are as follows:
	// - **ULTRAHIGH**: SSD storage.
	// - **LOCALSSD**: Local SSD storage.
	// - **CLOUDSSD**: Cloud SSD storage.
	//   This storage type is supported only with general-purpose and dedicated DB instances.
	// - **ESSD**: extreme SSD storage.
	//   This storage type is supported only with dedicated DB instances.
	Name pulumi.StringInput `pulumi:"name"`
	// Performance specifications.
	// The options are as follows:
	// - **normal**: General-enhanced.
	// - **normal2**: General-enhanced II.
	// - **armFlavors**: Kunpeng general-enhanced.
	// - **dedicicatenormal**: Exclusive x86.
	// - **armlocalssd**: Standard Kunpeng.
	// - **normallocalssd**: Standard x86.
	// - **general**: General-purpose.
	// - **dedicated**: Dedicated, which is only supported for cloud SSDs.
	// - **rapid**: Dedicated, which is only supported for extreme SSDs.
	// - **bigmen**: Large-memory.
	SupportComputeGroupTypes pulumi.StringArrayInput `pulumi:"supportComputeGroupTypes"`
}

func (GetStorageTypesStorageTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageTypesStorageType)(nil)).Elem()
}

func (i GetStorageTypesStorageTypeArgs) ToGetStorageTypesStorageTypeOutput() GetStorageTypesStorageTypeOutput {
	return i.ToGetStorageTypesStorageTypeOutputWithContext(context.Background())
}

func (i GetStorageTypesStorageTypeArgs) ToGetStorageTypesStorageTypeOutputWithContext(ctx context.Context) GetStorageTypesStorageTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageTypesStorageTypeOutput)
}

// GetStorageTypesStorageTypeArrayInput is an input type that accepts GetStorageTypesStorageTypeArray and GetStorageTypesStorageTypeArrayOutput values.
// You can construct a concrete instance of `GetStorageTypesStorageTypeArrayInput` via:
//
//	GetStorageTypesStorageTypeArray{ GetStorageTypesStorageTypeArgs{...} }
type GetStorageTypesStorageTypeArrayInput interface {
	pulumi.Input

	ToGetStorageTypesStorageTypeArrayOutput() GetStorageTypesStorageTypeArrayOutput
	ToGetStorageTypesStorageTypeArrayOutputWithContext(context.Context) GetStorageTypesStorageTypeArrayOutput
}

type GetStorageTypesStorageTypeArray []GetStorageTypesStorageTypeInput

func (GetStorageTypesStorageTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageTypesStorageType)(nil)).Elem()
}

func (i GetStorageTypesStorageTypeArray) ToGetStorageTypesStorageTypeArrayOutput() GetStorageTypesStorageTypeArrayOutput {
	return i.ToGetStorageTypesStorageTypeArrayOutputWithContext(context.Background())
}

func (i GetStorageTypesStorageTypeArray) ToGetStorageTypesStorageTypeArrayOutputWithContext(ctx context.Context) GetStorageTypesStorageTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageTypesStorageTypeArrayOutput)
}

type GetStorageTypesStorageTypeOutput struct{ *pulumi.OutputState }

func (GetStorageTypesStorageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageTypesStorageType)(nil)).Elem()
}

func (o GetStorageTypesStorageTypeOutput) ToGetStorageTypesStorageTypeOutput() GetStorageTypesStorageTypeOutput {
	return o
}

func (o GetStorageTypesStorageTypeOutput) ToGetStorageTypesStorageTypeOutputWithContext(ctx context.Context) GetStorageTypesStorageTypeOutput {
	return o
}

// The status details of the AZs to which the specification belongs.
// Key indicates the AZ ID, and value indicates the specification status in the AZ.
// The options of value are as follows:
// - **normal**: The specifications in the AZ are available.
// - **unsupported**: The specifications are not supported by the AZ.
// - **sellout**: The specifications in the AZ are sold out.
func (o GetStorageTypesStorageTypeOutput) AzStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetStorageTypesStorageType) map[string]string { return v.AzStatus }).(pulumi.StringMapOutput)
}

// Storage type.\
// The options are as follows:
//   - **ULTRAHIGH**: SSD storage.
//   - **LOCALSSD**: Local SSD storage.
//   - **CLOUDSSD**: Cloud SSD storage.
//     This storage type is supported only with general-purpose and dedicated DB instances.
//   - **ESSD**: extreme SSD storage.
//     This storage type is supported only with dedicated DB instances.
func (o GetStorageTypesStorageTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageTypesStorageType) string { return v.Name }).(pulumi.StringOutput)
}

// Performance specifications.
// The options are as follows:
// - **normal**: General-enhanced.
// - **normal2**: General-enhanced II.
// - **armFlavors**: Kunpeng general-enhanced.
// - **dedicicatenormal**: Exclusive x86.
// - **armlocalssd**: Standard Kunpeng.
// - **normallocalssd**: Standard x86.
// - **general**: General-purpose.
// - **dedicated**: Dedicated, which is only supported for cloud SSDs.
// - **rapid**: Dedicated, which is only supported for extreme SSDs.
// - **bigmen**: Large-memory.
func (o GetStorageTypesStorageTypeOutput) SupportComputeGroupTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageTypesStorageType) []string { return v.SupportComputeGroupTypes }).(pulumi.StringArrayOutput)
}

type GetStorageTypesStorageTypeArrayOutput struct{ *pulumi.OutputState }

func (GetStorageTypesStorageTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageTypesStorageType)(nil)).Elem()
}

func (o GetStorageTypesStorageTypeArrayOutput) ToGetStorageTypesStorageTypeArrayOutput() GetStorageTypesStorageTypeArrayOutput {
	return o
}

func (o GetStorageTypesStorageTypeArrayOutput) ToGetStorageTypesStorageTypeArrayOutputWithContext(ctx context.Context) GetStorageTypesStorageTypeArrayOutput {
	return o
}

func (o GetStorageTypesStorageTypeArrayOutput) Index(i pulumi.IntInput) GetStorageTypesStorageTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageTypesStorageType {
		return vs[0].([]GetStorageTypesStorageType)[vs[1].(int)]
	}).(GetStorageTypesStorageTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupDatabaseInput)(nil)).Elem(), BackupDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupDatabaseArrayInput)(nil)).Elem(), BackupDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupStrategyInput)(nil)).Elem(), InstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupStrategyPtrInput)(nil)).Elem(), InstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDbInput)(nil)).Elem(), InstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDbPtrInput)(nil)).Elem(), InstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMsdtcHostInput)(nil)).Elem(), InstanceMsdtcHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMsdtcHostArrayInput)(nil)).Elem(), InstanceMsdtcHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInput)(nil)).Elem(), InstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeArrayInput)(nil)).Elem(), InstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParameterInput)(nil)).Elem(), InstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParameterArrayInput)(nil)).Elem(), InstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRestoreInput)(nil)).Elem(), InstanceRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRestorePtrInput)(nil)).Elem(), InstanceRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceVolumeInput)(nil)).Elem(), InstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceVolumePtrInput)(nil)).Elem(), InstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabasePrivilegeUserInput)(nil)).Elem(), MysqlDatabasePrivilegeUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabasePrivilegeUserArrayInput)(nil)).Elem(), MysqlDatabasePrivilegeUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabaseTableRestoreDatabaseInput)(nil)).Elem(), MysqlDatabaseTableRestoreDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabaseTableRestoreDatabaseArrayInput)(nil)).Elem(), MysqlDatabaseTableRestoreDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTableInput)(nil)).Elem(), MysqlDatabaseTableRestoreRestoreTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTableArrayInput)(nil)).Elem(), MysqlDatabaseTableRestoreRestoreTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTableTableInput)(nil)).Elem(), MysqlDatabaseTableRestoreRestoreTableTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlDatabaseTableRestoreRestoreTableTableArrayInput)(nil)).Elem(), MysqlDatabaseTableRestoreRestoreTableTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupConfigurationParameterInput)(nil)).Elem(), ParametergroupConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupConfigurationParameterArrayInput)(nil)).Elem(), ParametergroupConfigurationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupDatastoreInput)(nil)).Elem(), ParametergroupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupDatastorePtrInput)(nil)).Elem(), ParametergroupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgAccountAttributeInput)(nil)).Elem(), PgAccountAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgAccountAttributeArrayInput)(nil)).Elem(), PgAccountAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgHbaHostBasedAuthenticationInput)(nil)).Elem(), PgHbaHostBasedAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgHbaHostBasedAuthenticationArrayInput)(nil)).Elem(), PgHbaHostBasedAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceDbInput)(nil)).Elem(), ReadReplicaInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceDbPtrInput)(nil)).Elem(), ReadReplicaInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceParameterInput)(nil)).Elem(), ReadReplicaInstanceParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceParameterArrayInput)(nil)).Elem(), ReadReplicaInstanceParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceVolumeInput)(nil)).Elem(), ReadReplicaInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceVolumePtrInput)(nil)).Elem(), ReadReplicaInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlserverDatabasePrivilegeUserInput)(nil)).Elem(), SqlserverDatabasePrivilegeUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlserverDatabasePrivilegeUserArrayInput)(nil)).Elem(), SqlserverDatabasePrivilegeUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInput)(nil)).Elem(), GetBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupArrayInput)(nil)).Elem(), GetBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupDatabaseInput)(nil)).Elem(), GetBackupsBackupDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupDatabaseArrayInput)(nil)).Elem(), GetBackupsBackupDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupDatastoreInput)(nil)).Elem(), GetBackupsBackupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupDatastoreArrayInput)(nil)).Elem(), GetBackupsBackupDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEngineVersionsVersionInput)(nil)).Elem(), GetEngineVersionsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEngineVersionsVersionArrayInput)(nil)).Elem(), GetEngineVersionsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlavorsFlavorInput)(nil)).Elem(), GetFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlavorsFlavorArrayInput)(nil)).Elem(), GetFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupStrategyInput)(nil)).Elem(), GetInstancesInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupStrategyArrayInput)(nil)).Elem(), GetInstancesInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDbInput)(nil)).Elem(), GetInstancesInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDbArrayInput)(nil)).Elem(), GetInstancesInstanceDbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceNodeInput)(nil)).Elem(), GetInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceNodeArrayInput)(nil)).Elem(), GetInstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVolumeInput)(nil)).Elem(), GetInstancesInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVolumeArrayInput)(nil)).Elem(), GetInstancesInstanceVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgAccountsUserInput)(nil)).Elem(), GetPgAccountsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgAccountsUserArrayInput)(nil)).Elem(), GetPgAccountsUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgAccountsUserAttributeInput)(nil)).Elem(), GetPgAccountsUserAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgAccountsUserAttributeArrayInput)(nil)).Elem(), GetPgAccountsUserAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgDatabasesDatabaseInput)(nil)).Elem(), GetPgDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgDatabasesDatabaseArrayInput)(nil)).Elem(), GetPgDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgPluginsPluginInput)(nil)).Elem(), GetPgPluginsPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgPluginsPluginArrayInput)(nil)).Elem(), GetPgPluginsPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgSqlLimitsSqlLimitInput)(nil)).Elem(), GetPgSqlLimitsSqlLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPgSqlLimitsSqlLimitArrayInput)(nil)).Elem(), GetPgSqlLimitsSqlLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageTypesStorageTypeInput)(nil)).Elem(), GetStorageTypesStorageTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageTypesStorageTypeArrayInput)(nil)).Elem(), GetStorageTypesStorageTypeArray{})
	pulumi.RegisterOutputType(BackupDatabaseOutput{})
	pulumi.RegisterOutputType(BackupDatabaseArrayOutput{})
	pulumi.RegisterOutputType(InstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(InstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(InstanceDbOutput{})
	pulumi.RegisterOutputType(InstanceDbPtrOutput{})
	pulumi.RegisterOutputType(InstanceMsdtcHostOutput{})
	pulumi.RegisterOutputType(InstanceMsdtcHostArrayOutput{})
	pulumi.RegisterOutputType(InstanceNodeOutput{})
	pulumi.RegisterOutputType(InstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InstanceParameterOutput{})
	pulumi.RegisterOutputType(InstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(InstanceRestoreOutput{})
	pulumi.RegisterOutputType(InstanceRestorePtrOutput{})
	pulumi.RegisterOutputType(InstanceVolumeOutput{})
	pulumi.RegisterOutputType(InstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(MysqlDatabasePrivilegeUserOutput{})
	pulumi.RegisterOutputType(MysqlDatabasePrivilegeUserArrayOutput{})
	pulumi.RegisterOutputType(MysqlDatabaseTableRestoreDatabaseOutput{})
	pulumi.RegisterOutputType(MysqlDatabaseTableRestoreDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MysqlDatabaseTableRestoreRestoreTableOutput{})
	pulumi.RegisterOutputType(MysqlDatabaseTableRestoreRestoreTableArrayOutput{})
	pulumi.RegisterOutputType(MysqlDatabaseTableRestoreRestoreTableTableOutput{})
	pulumi.RegisterOutputType(MysqlDatabaseTableRestoreRestoreTableTableArrayOutput{})
	pulumi.RegisterOutputType(ParametergroupConfigurationParameterOutput{})
	pulumi.RegisterOutputType(ParametergroupConfigurationParameterArrayOutput{})
	pulumi.RegisterOutputType(ParametergroupDatastoreOutput{})
	pulumi.RegisterOutputType(ParametergroupDatastorePtrOutput{})
	pulumi.RegisterOutputType(PgAccountAttributeOutput{})
	pulumi.RegisterOutputType(PgAccountAttributeArrayOutput{})
	pulumi.RegisterOutputType(PgHbaHostBasedAuthenticationOutput{})
	pulumi.RegisterOutputType(PgHbaHostBasedAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceDbOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceDbPtrOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceParameterOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceParameterArrayOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceVolumeOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(SqlserverDatabasePrivilegeUserOutput{})
	pulumi.RegisterOutputType(SqlserverDatabasePrivilegeUserArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupDatabaseOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupDatastoreOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetEngineVersionsVersionOutput{})
	pulumi.RegisterOutputType(GetEngineVersionsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDbOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDbArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVolumeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetPgAccountsUserOutput{})
	pulumi.RegisterOutputType(GetPgAccountsUserArrayOutput{})
	pulumi.RegisterOutputType(GetPgAccountsUserAttributeOutput{})
	pulumi.RegisterOutputType(GetPgAccountsUserAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetPgDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetPgDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetPgPluginsPluginOutput{})
	pulumi.RegisterOutputType(GetPgPluginsPluginArrayOutput{})
	pulumi.RegisterOutputType(GetPgSqlLimitsSqlLimitOutput{})
	pulumi.RegisterOutputType(GetPgSqlLimitsSqlLimitArrayOutput{})
	pulumi.RegisterOutputType(GetStorageTypesStorageTypeOutput{})
	pulumi.RegisterOutputType(GetStorageTypesStorageTypeArrayOutput{})
}
