// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a flow log resource under the ER instance within SberCloud.
//
// Before using enterprise router, define custom endpoint as shown below:
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/er"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			logGroupId := cfg.RequireObject("logGroupId")
//			logStreamId := cfg.RequireObject("logStreamId")
//			resourceId := cfg.RequireObject("resourceId")
//			flowLogName := cfg.RequireObject("flowLogName")
//			_, err := er.NewFlowLog(ctx, "test", &er.FlowLogArgs{
//				InstanceId:   pulumi.Any(instanceId),
//				LogStoreType: pulumi.String("LTS"),
//				LogGroupId:   pulumi.Any(logGroupId),
//				LogStreamId:  pulumi.Any(logStreamId),
//				ResourceType: pulumi.String("attachment"),
//				ResourceId:   pulumi.Any(resourceId),
//				Name:         pulumi.Any(flowLogName),
//				Description:  pulumi.String("Flow log created by terraform"),
//				Enabled:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The flow log can be imported using the related `instance_id` and their `id`, separated by a slash (/), e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:Er/flowLog:FlowLog test <instance_id>/<id>
// ```
type FlowLog struct {
	pulumi.CustomResourceState

	// The creation time of the flow log.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the description of the flow log.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to enable the flow log function. The default value is **true**.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Specifies the ID of the ER instance to which the flow log belongs.
	// Changing this creates a new resource.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the LTS log group ID.
	// Changing this creates a new resource.
	LogGroupId pulumi.StringOutput `pulumi:"logGroupId"`
	// Specifies the storage type of flow log. The valid value is **LTS**.\
	// Changing this creates a new resource.
	LogStoreType pulumi.StringOutput `pulumi:"logStoreType"`
	// Specifies the LTS log stream ID.
	// Changing this creates a new resource.
	LogStreamId pulumi.StringOutput `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the resource ID to which the logs to be collected.
	// Changing this creates a new resource.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// Specifies the resource type to which the logs to be collected.
	// The valid value is **attachment**.
	// Changing this creates a new resource.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The current status of the flow log.
	State pulumi.StringOutput `pulumi:"state"`
	// The latest update time of the flow log.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewFlowLog registers a new resource with the given unique name, arguments, and options.
func NewFlowLog(ctx *pulumi.Context,
	name string, args *FlowLogArgs, opts ...pulumi.ResourceOption) (*FlowLog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.LogGroupId == nil {
		return nil, errors.New("invalid value for required argument 'LogGroupId'")
	}
	if args.LogStoreType == nil {
		return nil, errors.New("invalid value for required argument 'LogStoreType'")
	}
	if args.LogStreamId == nil {
		return nil, errors.New("invalid value for required argument 'LogStreamId'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.ResourceType == nil {
		return nil, errors.New("invalid value for required argument 'ResourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlowLog
	err := ctx.RegisterResource("sbercloud:Er/flowLog:FlowLog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowLog gets an existing FlowLog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowLog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowLogState, opts ...pulumi.ResourceOption) (*FlowLog, error) {
	var resource FlowLog
	err := ctx.ReadResource("sbercloud:Er/flowLog:FlowLog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlowLog resources.
type flowLogState struct {
	// The creation time of the flow log.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the description of the flow log.
	Description *string `pulumi:"description"`
	// Specifies whether to enable the flow log function. The default value is **true**.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the ID of the ER instance to which the flow log belongs.
	// Changing this creates a new resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the LTS log group ID.
	// Changing this creates a new resource.
	LogGroupId *string `pulumi:"logGroupId"`
	// Specifies the storage type of flow log. The valid value is **LTS**.\
	// Changing this creates a new resource.
	LogStoreType *string `pulumi:"logStoreType"`
	// Specifies the LTS log stream ID.
	// Changing this creates a new resource.
	LogStreamId *string `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the resource ID to which the logs to be collected.
	// Changing this creates a new resource.
	ResourceId *string `pulumi:"resourceId"`
	// Specifies the resource type to which the logs to be collected.
	// The valid value is **attachment**.
	// Changing this creates a new resource.
	ResourceType *string `pulumi:"resourceType"`
	// The current status of the flow log.
	State *string `pulumi:"state"`
	// The latest update time of the flow log.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type FlowLogState struct {
	// The creation time of the flow log.
	CreatedAt pulumi.StringPtrInput
	// Specifies the description of the flow log.
	Description pulumi.StringPtrInput
	// Specifies whether to enable the flow log function. The default value is **true**.
	Enabled pulumi.BoolPtrInput
	// Specifies the ID of the ER instance to which the flow log belongs.
	// Changing this creates a new resource.
	InstanceId pulumi.StringPtrInput
	// Specifies the LTS log group ID.
	// Changing this creates a new resource.
	LogGroupId pulumi.StringPtrInput
	// Specifies the storage type of flow log. The valid value is **LTS**.\
	// Changing this creates a new resource.
	LogStoreType pulumi.StringPtrInput
	// Specifies the LTS log stream ID.
	// Changing this creates a new resource.
	LogStreamId pulumi.StringPtrInput
	// Specifies the name of the flow log.
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the resource ID to which the logs to be collected.
	// Changing this creates a new resource.
	ResourceId pulumi.StringPtrInput
	// Specifies the resource type to which the logs to be collected.
	// The valid value is **attachment**.
	// Changing this creates a new resource.
	ResourceType pulumi.StringPtrInput
	// The current status of the flow log.
	State pulumi.StringPtrInput
	// The latest update time of the flow log.
	UpdatedAt pulumi.StringPtrInput
}

func (FlowLogState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowLogState)(nil)).Elem()
}

type flowLogArgs struct {
	// Specifies the description of the flow log.
	Description *string `pulumi:"description"`
	// Specifies whether to enable the flow log function. The default value is **true**.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the ID of the ER instance to which the flow log belongs.
	// Changing this creates a new resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the LTS log group ID.
	// Changing this creates a new resource.
	LogGroupId string `pulumi:"logGroupId"`
	// Specifies the storage type of flow log. The valid value is **LTS**.\
	// Changing this creates a new resource.
	LogStoreType string `pulumi:"logStoreType"`
	// Specifies the LTS log stream ID.
	// Changing this creates a new resource.
	LogStreamId string `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the resource ID to which the logs to be collected.
	// Changing this creates a new resource.
	ResourceId string `pulumi:"resourceId"`
	// Specifies the resource type to which the logs to be collected.
	// The valid value is **attachment**.
	// Changing this creates a new resource.
	ResourceType string `pulumi:"resourceType"`
}

// The set of arguments for constructing a FlowLog resource.
type FlowLogArgs struct {
	// Specifies the description of the flow log.
	Description pulumi.StringPtrInput
	// Specifies whether to enable the flow log function. The default value is **true**.
	Enabled pulumi.BoolPtrInput
	// Specifies the ID of the ER instance to which the flow log belongs.
	// Changing this creates a new resource.
	InstanceId pulumi.StringInput
	// Specifies the LTS log group ID.
	// Changing this creates a new resource.
	LogGroupId pulumi.StringInput
	// Specifies the storage type of flow log. The valid value is **LTS**.\
	// Changing this creates a new resource.
	LogStoreType pulumi.StringInput
	// Specifies the LTS log stream ID.
	// Changing this creates a new resource.
	LogStreamId pulumi.StringInput
	// Specifies the name of the flow log.
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the resource ID to which the logs to be collected.
	// Changing this creates a new resource.
	ResourceId pulumi.StringInput
	// Specifies the resource type to which the logs to be collected.
	// The valid value is **attachment**.
	// Changing this creates a new resource.
	ResourceType pulumi.StringInput
}

func (FlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowLogArgs)(nil)).Elem()
}

type FlowLogInput interface {
	pulumi.Input

	ToFlowLogOutput() FlowLogOutput
	ToFlowLogOutputWithContext(ctx context.Context) FlowLogOutput
}

func (*FlowLog) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLog)(nil)).Elem()
}

func (i *FlowLog) ToFlowLogOutput() FlowLogOutput {
	return i.ToFlowLogOutputWithContext(context.Background())
}

func (i *FlowLog) ToFlowLogOutputWithContext(ctx context.Context) FlowLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogOutput)
}

// FlowLogArrayInput is an input type that accepts FlowLogArray and FlowLogArrayOutput values.
// You can construct a concrete instance of `FlowLogArrayInput` via:
//
//	FlowLogArray{ FlowLogArgs{...} }
type FlowLogArrayInput interface {
	pulumi.Input

	ToFlowLogArrayOutput() FlowLogArrayOutput
	ToFlowLogArrayOutputWithContext(context.Context) FlowLogArrayOutput
}

type FlowLogArray []FlowLogInput

func (FlowLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlowLog)(nil)).Elem()
}

func (i FlowLogArray) ToFlowLogArrayOutput() FlowLogArrayOutput {
	return i.ToFlowLogArrayOutputWithContext(context.Background())
}

func (i FlowLogArray) ToFlowLogArrayOutputWithContext(ctx context.Context) FlowLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogArrayOutput)
}

// FlowLogMapInput is an input type that accepts FlowLogMap and FlowLogMapOutput values.
// You can construct a concrete instance of `FlowLogMapInput` via:
//
//	FlowLogMap{ "key": FlowLogArgs{...} }
type FlowLogMapInput interface {
	pulumi.Input

	ToFlowLogMapOutput() FlowLogMapOutput
	ToFlowLogMapOutputWithContext(context.Context) FlowLogMapOutput
}

type FlowLogMap map[string]FlowLogInput

func (FlowLogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlowLog)(nil)).Elem()
}

func (i FlowLogMap) ToFlowLogMapOutput() FlowLogMapOutput {
	return i.ToFlowLogMapOutputWithContext(context.Background())
}

func (i FlowLogMap) ToFlowLogMapOutputWithContext(ctx context.Context) FlowLogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogMapOutput)
}

type FlowLogOutput struct{ *pulumi.OutputState }

func (FlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLog)(nil)).Elem()
}

func (o FlowLogOutput) ToFlowLogOutput() FlowLogOutput {
	return o
}

func (o FlowLogOutput) ToFlowLogOutputWithContext(ctx context.Context) FlowLogOutput {
	return o
}

// The creation time of the flow log.
func (o FlowLogOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the description of the flow log.
func (o FlowLogOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable the flow log function. The default value is **true**.
func (o FlowLogOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the ID of the ER instance to which the flow log belongs.
// Changing this creates a new resource.
func (o FlowLogOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the LTS log group ID.
// Changing this creates a new resource.
func (o FlowLogOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.LogGroupId }).(pulumi.StringOutput)
}

// Specifies the storage type of flow log. The valid value is **LTS**.\
// Changing this creates a new resource.
func (o FlowLogOutput) LogStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.LogStoreType }).(pulumi.StringOutput)
}

// Specifies the LTS log stream ID.
// Changing this creates a new resource.
func (o FlowLogOutput) LogStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.LogStreamId }).(pulumi.StringOutput)
}

// Specifies the name of the flow log.
func (o FlowLogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used.
// Changing this creates a new resource.
func (o FlowLogOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the resource ID to which the logs to be collected.
// Changing this creates a new resource.
func (o FlowLogOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// Specifies the resource type to which the logs to be collected.
// The valid value is **attachment**.
// Changing this creates a new resource.
func (o FlowLogOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.ResourceType }).(pulumi.StringOutput)
}

// The current status of the flow log.
func (o FlowLogOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The latest update time of the flow log.
func (o FlowLogOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FlowLog) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type FlowLogArrayOutput struct{ *pulumi.OutputState }

func (FlowLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlowLog)(nil)).Elem()
}

func (o FlowLogArrayOutput) ToFlowLogArrayOutput() FlowLogArrayOutput {
	return o
}

func (o FlowLogArrayOutput) ToFlowLogArrayOutputWithContext(ctx context.Context) FlowLogArrayOutput {
	return o
}

func (o FlowLogArrayOutput) Index(i pulumi.IntInput) FlowLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlowLog {
		return vs[0].([]*FlowLog)[vs[1].(int)]
	}).(FlowLogOutput)
}

type FlowLogMapOutput struct{ *pulumi.OutputState }

func (FlowLogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlowLog)(nil)).Elem()
}

func (o FlowLogMapOutput) ToFlowLogMapOutput() FlowLogMapOutput {
	return o
}

func (o FlowLogMapOutput) ToFlowLogMapOutputWithContext(ctx context.Context) FlowLogMapOutput {
	return o
}

func (o FlowLogMapOutput) MapIndex(k pulumi.StringInput) FlowLogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlowLog {
		return vs[0].(map[string]*FlowLog)[vs[1].(string)]
	}).(FlowLogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogInput)(nil)).Elem(), &FlowLog{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogArrayInput)(nil)).Elem(), FlowLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogMapInput)(nil)).Elem(), FlowLogMap{})
	pulumi.RegisterOutputType(FlowLogOutput{})
	pulumi.RegisterOutputType(FlowLogArrayOutput{})
	pulumi.RegisterOutputType(FlowLogMapOutput{})
}
