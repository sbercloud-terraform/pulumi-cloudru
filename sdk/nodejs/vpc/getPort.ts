// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getPort(args?: GetPortArgs, opts?: pulumi.InvokeOptions): Promise<GetPortResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Vpc/getPort:getPort", {
        "adminStateUp": args.adminStateUp,
        "deviceId": args.deviceId,
        "deviceOwner": args.deviceOwner,
        "fixedIp": args.fixedIp,
        "macAddress": args.macAddress,
        "name": args.name,
        "networkId": args.networkId,
        "portId": args.portId,
        "projectId": args.projectId,
        "region": args.region,
        "securityGroupIds": args.securityGroupIds,
        "status": args.status,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPort.
 */
export interface GetPortArgs {
    /**
     * @deprecated this field is deprecated
     */
    adminStateUp?: boolean;
    deviceId?: string;
    deviceOwner?: string;
    fixedIp?: string;
    macAddress?: string;
    name?: string;
    networkId?: string;
    portId?: string;
    /**
     * @deprecated this field is deprecated
     */
    projectId?: string;
    region?: string;
    securityGroupIds?: string[];
    status?: string;
    /**
     * @deprecated this field is deprecated
     */
    tenantId?: string;
}

/**
 * A collection of values returned by getPort.
 */
export interface GetPortResult {
    /**
     * @deprecated this field is deprecated
     */
    readonly adminStateUp: boolean;
    readonly allAllowedIps: string[];
    readonly allFixedIps: string[];
    readonly allSecurityGroupIds: string[];
    readonly deviceId: string;
    readonly deviceOwner: string;
    readonly fixedIp?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly macAddress: string;
    readonly name: string;
    readonly networkId: string;
    readonly portId: string;
    /**
     * @deprecated this field is deprecated
     */
    readonly projectId?: string;
    readonly region: string;
    readonly securityGroupIds?: string[];
    readonly status: string;
    /**
     * @deprecated this field is deprecated
     */
    readonly tenantId?: string;
}
export function getPortOutput(args?: GetPortOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPortResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Vpc/getPort:getPort", {
        "adminStateUp": args.adminStateUp,
        "deviceId": args.deviceId,
        "deviceOwner": args.deviceOwner,
        "fixedIp": args.fixedIp,
        "macAddress": args.macAddress,
        "name": args.name,
        "networkId": args.networkId,
        "portId": args.portId,
        "projectId": args.projectId,
        "region": args.region,
        "securityGroupIds": args.securityGroupIds,
        "status": args.status,
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPort.
 */
export interface GetPortOutputArgs {
    /**
     * @deprecated this field is deprecated
     */
    adminStateUp?: pulumi.Input<boolean>;
    deviceId?: pulumi.Input<string>;
    deviceOwner?: pulumi.Input<string>;
    fixedIp?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    portId?: pulumi.Input<string>;
    /**
     * @deprecated this field is deprecated
     */
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    /**
     * @deprecated this field is deprecated
     */
    tenantId?: pulumi.Input<string>;
}
