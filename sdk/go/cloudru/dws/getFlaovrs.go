// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetFlaovrs(ctx *pulumi.Context, args *GetFlaovrsArgs, opts ...pulumi.InvokeOption) (*GetFlaovrsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlaovrsResult
	err := ctx.Invoke("sbercloud:Dws/getFlaovrs:getFlaovrs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlaovrs.
type GetFlaovrsArgs struct {
	AvailabilityZone *string `pulumi:"availabilityZone"`
	DatastoreType    *string `pulumi:"datastoreType"`
	Memory           *int    `pulumi:"memory"`
	Region           *string `pulumi:"region"`
	Vcpus            *int    `pulumi:"vcpus"`
}

// A collection of values returned by getFlaovrs.
type GetFlaovrsResult struct {
	AvailabilityZone *string            `pulumi:"availabilityZone"`
	DatastoreType    *string            `pulumi:"datastoreType"`
	Flavors          []GetFlaovrsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Memory *int   `pulumi:"memory"`
	Region string `pulumi:"region"`
	Vcpus  *int   `pulumi:"vcpus"`
}

func GetFlaovrsOutput(ctx *pulumi.Context, args GetFlaovrsOutputArgs, opts ...pulumi.InvokeOption) GetFlaovrsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlaovrsResultOutput, error) {
			args := v.(GetFlaovrsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Dws/getFlaovrs:getFlaovrs", args, GetFlaovrsResultOutput{}, options).(GetFlaovrsResultOutput), nil
		}).(GetFlaovrsResultOutput)
}

// A collection of arguments for invoking getFlaovrs.
type GetFlaovrsOutputArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	DatastoreType    pulumi.StringPtrInput `pulumi:"datastoreType"`
	Memory           pulumi.IntPtrInput    `pulumi:"memory"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	Vcpus            pulumi.IntPtrInput    `pulumi:"vcpus"`
}

func (GetFlaovrsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlaovrsArgs)(nil)).Elem()
}

// A collection of values returned by getFlaovrs.
type GetFlaovrsResultOutput struct{ *pulumi.OutputState }

func (GetFlaovrsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlaovrsResult)(nil)).Elem()
}

func (o GetFlaovrsResultOutput) ToGetFlaovrsResultOutput() GetFlaovrsResultOutput {
	return o
}

func (o GetFlaovrsResultOutput) ToGetFlaovrsResultOutputWithContext(ctx context.Context) GetFlaovrsResultOutput {
	return o
}

func (o GetFlaovrsResultOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlaovrsResult) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o GetFlaovrsResultOutput) DatastoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlaovrsResult) *string { return v.DatastoreType }).(pulumi.StringPtrOutput)
}

func (o GetFlaovrsResultOutput) Flavors() GetFlaovrsFlavorArrayOutput {
	return o.ApplyT(func(v GetFlaovrsResult) []GetFlaovrsFlavor { return v.Flavors }).(GetFlaovrsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlaovrsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlaovrsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlaovrsResultOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFlaovrsResult) *int { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o GetFlaovrsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlaovrsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetFlaovrsResultOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFlaovrsResult) *int { return v.Vcpus }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlaovrsResultOutput{})
}
