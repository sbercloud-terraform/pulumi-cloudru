// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigAppcode struct {
	pulumi.CustomResourceState

	// The ID of the application to which the APPCODE belongs.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// The creation time of the APPCODE.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The ID of the dedicated instance to which the application and APPCODE belong.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The region where the application and APPCODE are located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The APPCODE value (content).
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewApigAppcode registers a new resource with the given unique name, arguments, and options.
func NewApigAppcode(ctx *pulumi.Context,
	name string, args *ApigAppcodeArgs, opts ...pulumi.ResourceOption) (*ApigAppcode, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigAppcode
	err := ctx.RegisterResource("sbercloud:index/apigAppcode:ApigAppcode", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigAppcode gets an existing ApigAppcode resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigAppcode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigAppcodeState, opts ...pulumi.ResourceOption) (*ApigAppcode, error) {
	var resource ApigAppcode
	err := ctx.ReadResource("sbercloud:index/apigAppcode:ApigAppcode", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigAppcode resources.
type apigAppcodeState struct {
	// The ID of the application to which the APPCODE belongs.
	ApplicationId *string `pulumi:"applicationId"`
	// The creation time of the APPCODE.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the dedicated instance to which the application and APPCODE belong.
	InstanceId *string `pulumi:"instanceId"`
	// The region where the application and APPCODE are located.
	Region *string `pulumi:"region"`
	// The APPCODE value (content).
	Value *string `pulumi:"value"`
}

type ApigAppcodeState struct {
	// The ID of the application to which the APPCODE belongs.
	ApplicationId pulumi.StringPtrInput
	// The creation time of the APPCODE.
	CreatedAt pulumi.StringPtrInput
	// The ID of the dedicated instance to which the application and APPCODE belong.
	InstanceId pulumi.StringPtrInput
	// The region where the application and APPCODE are located.
	Region pulumi.StringPtrInput
	// The APPCODE value (content).
	Value pulumi.StringPtrInput
}

func (ApigAppcodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigAppcodeState)(nil)).Elem()
}

type apigAppcodeArgs struct {
	// The ID of the application to which the APPCODE belongs.
	ApplicationId string `pulumi:"applicationId"`
	// The ID of the dedicated instance to which the application and APPCODE belong.
	InstanceId string `pulumi:"instanceId"`
	// The region where the application and APPCODE are located.
	Region *string `pulumi:"region"`
	// The APPCODE value (content).
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a ApigAppcode resource.
type ApigAppcodeArgs struct {
	// The ID of the application to which the APPCODE belongs.
	ApplicationId pulumi.StringInput
	// The ID of the dedicated instance to which the application and APPCODE belong.
	InstanceId pulumi.StringInput
	// The region where the application and APPCODE are located.
	Region pulumi.StringPtrInput
	// The APPCODE value (content).
	Value pulumi.StringPtrInput
}

func (ApigAppcodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigAppcodeArgs)(nil)).Elem()
}

type ApigAppcodeInput interface {
	pulumi.Input

	ToApigAppcodeOutput() ApigAppcodeOutput
	ToApigAppcodeOutputWithContext(ctx context.Context) ApigAppcodeOutput
}

func (*ApigAppcode) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigAppcode)(nil)).Elem()
}

func (i *ApigAppcode) ToApigAppcodeOutput() ApigAppcodeOutput {
	return i.ToApigAppcodeOutputWithContext(context.Background())
}

func (i *ApigAppcode) ToApigAppcodeOutputWithContext(ctx context.Context) ApigAppcodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigAppcodeOutput)
}

// ApigAppcodeArrayInput is an input type that accepts ApigAppcodeArray and ApigAppcodeArrayOutput values.
// You can construct a concrete instance of `ApigAppcodeArrayInput` via:
//
//	ApigAppcodeArray{ ApigAppcodeArgs{...} }
type ApigAppcodeArrayInput interface {
	pulumi.Input

	ToApigAppcodeArrayOutput() ApigAppcodeArrayOutput
	ToApigAppcodeArrayOutputWithContext(context.Context) ApigAppcodeArrayOutput
}

type ApigAppcodeArray []ApigAppcodeInput

func (ApigAppcodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigAppcode)(nil)).Elem()
}

func (i ApigAppcodeArray) ToApigAppcodeArrayOutput() ApigAppcodeArrayOutput {
	return i.ToApigAppcodeArrayOutputWithContext(context.Background())
}

func (i ApigAppcodeArray) ToApigAppcodeArrayOutputWithContext(ctx context.Context) ApigAppcodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigAppcodeArrayOutput)
}

// ApigAppcodeMapInput is an input type that accepts ApigAppcodeMap and ApigAppcodeMapOutput values.
// You can construct a concrete instance of `ApigAppcodeMapInput` via:
//
//	ApigAppcodeMap{ "key": ApigAppcodeArgs{...} }
type ApigAppcodeMapInput interface {
	pulumi.Input

	ToApigAppcodeMapOutput() ApigAppcodeMapOutput
	ToApigAppcodeMapOutputWithContext(context.Context) ApigAppcodeMapOutput
}

type ApigAppcodeMap map[string]ApigAppcodeInput

func (ApigAppcodeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigAppcode)(nil)).Elem()
}

func (i ApigAppcodeMap) ToApigAppcodeMapOutput() ApigAppcodeMapOutput {
	return i.ToApigAppcodeMapOutputWithContext(context.Background())
}

func (i ApigAppcodeMap) ToApigAppcodeMapOutputWithContext(ctx context.Context) ApigAppcodeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigAppcodeMapOutput)
}

type ApigAppcodeOutput struct{ *pulumi.OutputState }

func (ApigAppcodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigAppcode)(nil)).Elem()
}

func (o ApigAppcodeOutput) ToApigAppcodeOutput() ApigAppcodeOutput {
	return o
}

func (o ApigAppcodeOutput) ToApigAppcodeOutputWithContext(ctx context.Context) ApigAppcodeOutput {
	return o
}

// The ID of the application to which the APPCODE belongs.
func (o ApigAppcodeOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAppcode) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// The creation time of the APPCODE.
func (o ApigAppcodeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAppcode) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the dedicated instance to which the application and APPCODE belong.
func (o ApigAppcodeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAppcode) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The region where the application and APPCODE are located.
func (o ApigAppcodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAppcode) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The APPCODE value (content).
func (o ApigAppcodeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAppcode) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type ApigAppcodeArrayOutput struct{ *pulumi.OutputState }

func (ApigAppcodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigAppcode)(nil)).Elem()
}

func (o ApigAppcodeArrayOutput) ToApigAppcodeArrayOutput() ApigAppcodeArrayOutput {
	return o
}

func (o ApigAppcodeArrayOutput) ToApigAppcodeArrayOutputWithContext(ctx context.Context) ApigAppcodeArrayOutput {
	return o
}

func (o ApigAppcodeArrayOutput) Index(i pulumi.IntInput) ApigAppcodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigAppcode {
		return vs[0].([]*ApigAppcode)[vs[1].(int)]
	}).(ApigAppcodeOutput)
}

type ApigAppcodeMapOutput struct{ *pulumi.OutputState }

func (ApigAppcodeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigAppcode)(nil)).Elem()
}

func (o ApigAppcodeMapOutput) ToApigAppcodeMapOutput() ApigAppcodeMapOutput {
	return o
}

func (o ApigAppcodeMapOutput) ToApigAppcodeMapOutputWithContext(ctx context.Context) ApigAppcodeMapOutput {
	return o
}

func (o ApigAppcodeMapOutput) MapIndex(k pulumi.StringInput) ApigAppcodeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigAppcode {
		return vs[0].(map[string]*ApigAppcode)[vs[1].(string)]
	}).(ApigAppcodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigAppcodeInput)(nil)).Elem(), &ApigAppcode{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigAppcodeArrayInput)(nil)).Elem(), ApigAppcodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigAppcodeMapInput)(nil)).Elem(), ApigAppcodeMap{})
	pulumi.RegisterOutputType(ApigAppcodeOutput{})
	pulumi.RegisterOutputType(ApigAppcodeArrayOutput{})
	pulumi.RegisterOutputType(ApigAppcodeMapOutput{})
}
