// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages an ELB listener resource within SberCloud.
 *
 * ## Import
 *
 * ELB listener can be imported using the listener ID, e.g.
 *
 * ```sh
 * $ pulumi import sbercloud:index/elbListener:ElbListener listener_1 5c20fdad-7288-11eb-b817-0255ac10158b
 * ```
 */
export class ElbListener extends pulumi.CustomResource {
    /**
     * Get an existing ElbListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElbListenerState, opts?: pulumi.CustomResourceOptions): ElbListener {
        return new ElbListener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/elbListener:ElbListener';

    /**
     * Returns true if the given object is an instance of ElbListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElbListener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElbListener.__pulumiType;
    }

    /**
     * Specifies the access policy for the listener. Valid options are *white* and
     * *black*.
     */
    public readonly accessPolicy!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to enable advanced forwarding.
     * If advanced forwarding is enabled, more flexible forwarding policies and rules are supported.
     */
    public readonly advancedForwardingEnabled!: pulumi.Output<boolean>;
    /**
     * Specifies the ID of the CA certificate used by the listener. This parameter is
     * valid when protocol is set to *HTTPS*.
     */
    public readonly caCertificate!: pulumi.Output<string | undefined>;
    public readonly cps!: pulumi.Output<number>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the default pool with which the listener is associated. Changing this
     * creates a new listener.
     */
    public readonly defaultPoolId!: pulumi.Output<string>;
    /**
     * Human-readable description for the listener.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly enableMemberRetry!: pulumi.Output<boolean>;
    public readonly enableQuicUpgrade!: pulumi.Output<string | undefined>;
    public /*out*/ readonly enterpriseProjectId!: pulumi.Output<string>;
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether transfer the load balancer EIP in the X-Forward-EIP header to
     * backend servers. The default value is false. This parameter is valid only when the protocol is set to *HTTP* or
     * *HTTPS*.
     */
    public readonly forwardEip!: pulumi.Output<boolean>;
    public readonly forwardElb!: pulumi.Output<boolean>;
    public readonly forwardHost!: pulumi.Output<boolean | undefined>;
    public readonly forwardPort!: pulumi.Output<boolean>;
    public readonly forwardProto!: pulumi.Output<boolean>;
    public readonly forwardRequestPort!: pulumi.Output<boolean>;
    public readonly forwardTlsCertificate!: pulumi.Output<boolean>;
    public readonly forwardTlsCipher!: pulumi.Output<boolean>;
    public readonly forwardTlsProtocol!: pulumi.Output<boolean>;
    public readonly gzipEnable!: pulumi.Output<boolean>;
    /**
     * Specifies whether to use HTTP/2. The default value is false. This parameter is valid
     * only when the protocol is set to *HTTPS*.
     */
    public readonly http2Enable!: pulumi.Output<boolean>;
    /**
     * Specifies the idle timeout for the listener. Value range: 0 to 4000.
     */
    public readonly idleTimeout!: pulumi.Output<number>;
    /**
     * Specifies the ip group id for the listener.
     */
    public readonly ipGroup!: pulumi.Output<string | undefined>;
    public readonly ipGroupEnable!: pulumi.Output<string>;
    /**
     * The load balancer on which to provision this listener. Changing this
     * creates a new listener.
     */
    public readonly loadbalancerId!: pulumi.Output<string>;
    public readonly maxConnection!: pulumi.Output<number>;
    /**
     * Human-readable name for the listener.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly portRanges!: pulumi.Output<outputs.ElbListenerPortRange[] | undefined>;
    public readonly protectionReason!: pulumi.Output<string | undefined>;
    public readonly protectionStatus!: pulumi.Output<string>;
    /**
     * The protocol can either be TCP, UDP, HTTP or HTTPS. Changing this creates a
     * new listener.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * The port on which to listen for client traffic. Changing this creates a
     * new listener.
     */
    public readonly protocolPort!: pulumi.Output<number>;
    public readonly proxyProtocolEnable!: pulumi.Output<boolean>;
    public readonly quicListenerId!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to transfer the source IP address of the client to backend servers
     * through the HTTP header of the packet. The default value is false. This parameter is valid only when the protocol is
     * set to **HTTP** or **HTTPS**.
     */
    public readonly realIp!: pulumi.Output<boolean>;
    /**
     * The region in which to create the listener resource. If omitted, the
     * provider-level region will be used. Changing this creates a new listener.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the request timeout for the listener. Value range: 1 to 300. This
     * parameter is valid when protocol is set to *HTTP* or *HTTPS*.
     */
    public readonly requestTimeout!: pulumi.Output<number>;
    /**
     * Specifies the response timeout for the listener. Value range: 1 to 300. This
     * parameter is valid when protocol is set to *HTTP* or *HTTPS*.
     */
    public readonly responseTimeout!: pulumi.Output<number>;
    public readonly securityPolicyId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the server certificate used by the listener. This
     * parameter is mandatory when protocol is set to *HTTPS*.
     */
    public readonly serverCertificate!: pulumi.Output<string | undefined>;
    /**
     * Lists the IDs of SNI certificates (server certificates with a domain name) used
     * by the listener. This parameter is valid when protocol is set to *HTTPS*.
     */
    public readonly sniCertificates!: pulumi.Output<string[] | undefined>;
    public readonly sniMatchAlgo!: pulumi.Output<string>;
    public readonly sslEarlyDataEnable!: pulumi.Output<boolean | undefined>;
    /**
     * The key/value pairs to associate with the listener.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the TLS cipher policy for the listener. Valid options are:
     * tls-1-0-inherit, tls-1-0, tls-1-1, tls-1-2, tls-1-2-strict, tls-1-2-fs, tls-1-0-with-1-3, and tls-1-2-fs-with-1-3.
     * This parameter is valid when protocol is set to *HTTPS*.
     */
    public readonly tlsCiphersPolicy!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a ElbListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElbListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElbListenerArgs | ElbListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElbListenerState | undefined;
            resourceInputs["accessPolicy"] = state ? state.accessPolicy : undefined;
            resourceInputs["advancedForwardingEnabled"] = state ? state.advancedForwardingEnabled : undefined;
            resourceInputs["caCertificate"] = state ? state.caCertificate : undefined;
            resourceInputs["cps"] = state ? state.cps : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["defaultPoolId"] = state ? state.defaultPoolId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableMemberRetry"] = state ? state.enableMemberRetry : undefined;
            resourceInputs["enableQuicUpgrade"] = state ? state.enableQuicUpgrade : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["forwardEip"] = state ? state.forwardEip : undefined;
            resourceInputs["forwardElb"] = state ? state.forwardElb : undefined;
            resourceInputs["forwardHost"] = state ? state.forwardHost : undefined;
            resourceInputs["forwardPort"] = state ? state.forwardPort : undefined;
            resourceInputs["forwardProto"] = state ? state.forwardProto : undefined;
            resourceInputs["forwardRequestPort"] = state ? state.forwardRequestPort : undefined;
            resourceInputs["forwardTlsCertificate"] = state ? state.forwardTlsCertificate : undefined;
            resourceInputs["forwardTlsCipher"] = state ? state.forwardTlsCipher : undefined;
            resourceInputs["forwardTlsProtocol"] = state ? state.forwardTlsProtocol : undefined;
            resourceInputs["gzipEnable"] = state ? state.gzipEnable : undefined;
            resourceInputs["http2Enable"] = state ? state.http2Enable : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["ipGroup"] = state ? state.ipGroup : undefined;
            resourceInputs["ipGroupEnable"] = state ? state.ipGroupEnable : undefined;
            resourceInputs["loadbalancerId"] = state ? state.loadbalancerId : undefined;
            resourceInputs["maxConnection"] = state ? state.maxConnection : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portRanges"] = state ? state.portRanges : undefined;
            resourceInputs["protectionReason"] = state ? state.protectionReason : undefined;
            resourceInputs["protectionStatus"] = state ? state.protectionStatus : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["protocolPort"] = state ? state.protocolPort : undefined;
            resourceInputs["proxyProtocolEnable"] = state ? state.proxyProtocolEnable : undefined;
            resourceInputs["quicListenerId"] = state ? state.quicListenerId : undefined;
            resourceInputs["realIp"] = state ? state.realIp : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["requestTimeout"] = state ? state.requestTimeout : undefined;
            resourceInputs["responseTimeout"] = state ? state.responseTimeout : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
            resourceInputs["serverCertificate"] = state ? state.serverCertificate : undefined;
            resourceInputs["sniCertificates"] = state ? state.sniCertificates : undefined;
            resourceInputs["sniMatchAlgo"] = state ? state.sniMatchAlgo : undefined;
            resourceInputs["sslEarlyDataEnable"] = state ? state.sslEarlyDataEnable : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tlsCiphersPolicy"] = state ? state.tlsCiphersPolicy : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ElbListenerArgs | undefined;
            if ((!args || args.loadbalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadbalancerId'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["accessPolicy"] = args ? args.accessPolicy : undefined;
            resourceInputs["advancedForwardingEnabled"] = args ? args.advancedForwardingEnabled : undefined;
            resourceInputs["caCertificate"] = args ? args.caCertificate : undefined;
            resourceInputs["cps"] = args ? args.cps : undefined;
            resourceInputs["defaultPoolId"] = args ? args.defaultPoolId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableMemberRetry"] = args ? args.enableMemberRetry : undefined;
            resourceInputs["enableQuicUpgrade"] = args ? args.enableQuicUpgrade : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["forwardEip"] = args ? args.forwardEip : undefined;
            resourceInputs["forwardElb"] = args ? args.forwardElb : undefined;
            resourceInputs["forwardHost"] = args ? args.forwardHost : undefined;
            resourceInputs["forwardPort"] = args ? args.forwardPort : undefined;
            resourceInputs["forwardProto"] = args ? args.forwardProto : undefined;
            resourceInputs["forwardRequestPort"] = args ? args.forwardRequestPort : undefined;
            resourceInputs["forwardTlsCertificate"] = args ? args.forwardTlsCertificate : undefined;
            resourceInputs["forwardTlsCipher"] = args ? args.forwardTlsCipher : undefined;
            resourceInputs["forwardTlsProtocol"] = args ? args.forwardTlsProtocol : undefined;
            resourceInputs["gzipEnable"] = args ? args.gzipEnable : undefined;
            resourceInputs["http2Enable"] = args ? args.http2Enable : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["ipGroup"] = args ? args.ipGroup : undefined;
            resourceInputs["ipGroupEnable"] = args ? args.ipGroupEnable : undefined;
            resourceInputs["loadbalancerId"] = args ? args.loadbalancerId : undefined;
            resourceInputs["maxConnection"] = args ? args.maxConnection : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portRanges"] = args ? args.portRanges : undefined;
            resourceInputs["protectionReason"] = args ? args.protectionReason : undefined;
            resourceInputs["protectionStatus"] = args ? args.protectionStatus : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["protocolPort"] = args ? args.protocolPort : undefined;
            resourceInputs["proxyProtocolEnable"] = args ? args.proxyProtocolEnable : undefined;
            resourceInputs["quicListenerId"] = args ? args.quicListenerId : undefined;
            resourceInputs["realIp"] = args ? args.realIp : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["requestTimeout"] = args ? args.requestTimeout : undefined;
            resourceInputs["responseTimeout"] = args ? args.responseTimeout : undefined;
            resourceInputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
            resourceInputs["serverCertificate"] = args ? args.serverCertificate : undefined;
            resourceInputs["sniCertificates"] = args ? args.sniCertificates : undefined;
            resourceInputs["sniMatchAlgo"] = args ? args.sniMatchAlgo : undefined;
            resourceInputs["sslEarlyDataEnable"] = args ? args.sslEarlyDataEnable : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tlsCiphersPolicy"] = args ? args.tlsCiphersPolicy : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enterpriseProjectId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElbListener.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElbListener resources.
 */
export interface ElbListenerState {
    /**
     * Specifies the access policy for the listener. Valid options are *white* and
     * *black*.
     */
    accessPolicy?: pulumi.Input<string>;
    /**
     * Specifies whether to enable advanced forwarding.
     * If advanced forwarding is enabled, more flexible forwarding policies and rules are supported.
     */
    advancedForwardingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the CA certificate used by the listener. This parameter is
     * valid when protocol is set to *HTTPS*.
     */
    caCertificate?: pulumi.Input<string>;
    cps?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the default pool with which the listener is associated. Changing this
     * creates a new listener.
     */
    defaultPoolId?: pulumi.Input<string>;
    /**
     * Human-readable description for the listener.
     */
    description?: pulumi.Input<string>;
    enableMemberRetry?: pulumi.Input<boolean>;
    enableQuicUpgrade?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    forceDelete?: pulumi.Input<boolean>;
    /**
     * Specifies whether transfer the load balancer EIP in the X-Forward-EIP header to
     * backend servers. The default value is false. This parameter is valid only when the protocol is set to *HTTP* or
     * *HTTPS*.
     */
    forwardEip?: pulumi.Input<boolean>;
    forwardElb?: pulumi.Input<boolean>;
    forwardHost?: pulumi.Input<boolean>;
    forwardPort?: pulumi.Input<boolean>;
    forwardProto?: pulumi.Input<boolean>;
    forwardRequestPort?: pulumi.Input<boolean>;
    forwardTlsCertificate?: pulumi.Input<boolean>;
    forwardTlsCipher?: pulumi.Input<boolean>;
    forwardTlsProtocol?: pulumi.Input<boolean>;
    gzipEnable?: pulumi.Input<boolean>;
    /**
     * Specifies whether to use HTTP/2. The default value is false. This parameter is valid
     * only when the protocol is set to *HTTPS*.
     */
    http2Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the idle timeout for the listener. Value range: 0 to 4000.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Specifies the ip group id for the listener.
     */
    ipGroup?: pulumi.Input<string>;
    ipGroupEnable?: pulumi.Input<string>;
    /**
     * The load balancer on which to provision this listener. Changing this
     * creates a new listener.
     */
    loadbalancerId?: pulumi.Input<string>;
    maxConnection?: pulumi.Input<number>;
    /**
     * Human-readable name for the listener.
     */
    name?: pulumi.Input<string>;
    portRanges?: pulumi.Input<pulumi.Input<inputs.ElbListenerPortRange>[]>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    /**
     * The protocol can either be TCP, UDP, HTTP or HTTPS. Changing this creates a
     * new listener.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The port on which to listen for client traffic. Changing this creates a
     * new listener.
     */
    protocolPort?: pulumi.Input<number>;
    proxyProtocolEnable?: pulumi.Input<boolean>;
    quicListenerId?: pulumi.Input<string>;
    /**
     * Specifies whether to transfer the source IP address of the client to backend servers
     * through the HTTP header of the packet. The default value is false. This parameter is valid only when the protocol is
     * set to **HTTP** or **HTTPS**.
     */
    realIp?: pulumi.Input<boolean>;
    /**
     * The region in which to create the listener resource. If omitted, the
     * provider-level region will be used. Changing this creates a new listener.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the request timeout for the listener. Value range: 1 to 300. This
     * parameter is valid when protocol is set to *HTTP* or *HTTPS*.
     */
    requestTimeout?: pulumi.Input<number>;
    /**
     * Specifies the response timeout for the listener. Value range: 1 to 300. This
     * parameter is valid when protocol is set to *HTTP* or *HTTPS*.
     */
    responseTimeout?: pulumi.Input<number>;
    securityPolicyId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the server certificate used by the listener. This
     * parameter is mandatory when protocol is set to *HTTPS*.
     */
    serverCertificate?: pulumi.Input<string>;
    /**
     * Lists the IDs of SNI certificates (server certificates with a domain name) used
     * by the listener. This parameter is valid when protocol is set to *HTTPS*.
     */
    sniCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    sniMatchAlgo?: pulumi.Input<string>;
    sslEarlyDataEnable?: pulumi.Input<boolean>;
    /**
     * The key/value pairs to associate with the listener.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the TLS cipher policy for the listener. Valid options are:
     * tls-1-0-inherit, tls-1-0, tls-1-1, tls-1-2, tls-1-2-strict, tls-1-2-fs, tls-1-0-with-1-3, and tls-1-2-fs-with-1-3.
     * This parameter is valid when protocol is set to *HTTPS*.
     */
    tlsCiphersPolicy?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ElbListener resource.
 */
export interface ElbListenerArgs {
    /**
     * Specifies the access policy for the listener. Valid options are *white* and
     * *black*.
     */
    accessPolicy?: pulumi.Input<string>;
    /**
     * Specifies whether to enable advanced forwarding.
     * If advanced forwarding is enabled, more flexible forwarding policies and rules are supported.
     */
    advancedForwardingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of the CA certificate used by the listener. This parameter is
     * valid when protocol is set to *HTTPS*.
     */
    caCertificate?: pulumi.Input<string>;
    cps?: pulumi.Input<number>;
    /**
     * The ID of the default pool with which the listener is associated. Changing this
     * creates a new listener.
     */
    defaultPoolId?: pulumi.Input<string>;
    /**
     * Human-readable description for the listener.
     */
    description?: pulumi.Input<string>;
    enableMemberRetry?: pulumi.Input<boolean>;
    enableQuicUpgrade?: pulumi.Input<string>;
    forceDelete?: pulumi.Input<boolean>;
    /**
     * Specifies whether transfer the load balancer EIP in the X-Forward-EIP header to
     * backend servers. The default value is false. This parameter is valid only when the protocol is set to *HTTP* or
     * *HTTPS*.
     */
    forwardEip?: pulumi.Input<boolean>;
    forwardElb?: pulumi.Input<boolean>;
    forwardHost?: pulumi.Input<boolean>;
    forwardPort?: pulumi.Input<boolean>;
    forwardProto?: pulumi.Input<boolean>;
    forwardRequestPort?: pulumi.Input<boolean>;
    forwardTlsCertificate?: pulumi.Input<boolean>;
    forwardTlsCipher?: pulumi.Input<boolean>;
    forwardTlsProtocol?: pulumi.Input<boolean>;
    gzipEnable?: pulumi.Input<boolean>;
    /**
     * Specifies whether to use HTTP/2. The default value is false. This parameter is valid
     * only when the protocol is set to *HTTPS*.
     */
    http2Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the idle timeout for the listener. Value range: 0 to 4000.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * Specifies the ip group id for the listener.
     */
    ipGroup?: pulumi.Input<string>;
    ipGroupEnable?: pulumi.Input<string>;
    /**
     * The load balancer on which to provision this listener. Changing this
     * creates a new listener.
     */
    loadbalancerId: pulumi.Input<string>;
    maxConnection?: pulumi.Input<number>;
    /**
     * Human-readable name for the listener.
     */
    name?: pulumi.Input<string>;
    portRanges?: pulumi.Input<pulumi.Input<inputs.ElbListenerPortRange>[]>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    /**
     * The protocol can either be TCP, UDP, HTTP or HTTPS. Changing this creates a
     * new listener.
     */
    protocol: pulumi.Input<string>;
    /**
     * The port on which to listen for client traffic. Changing this creates a
     * new listener.
     */
    protocolPort?: pulumi.Input<number>;
    proxyProtocolEnable?: pulumi.Input<boolean>;
    quicListenerId?: pulumi.Input<string>;
    /**
     * Specifies whether to transfer the source IP address of the client to backend servers
     * through the HTTP header of the packet. The default value is false. This parameter is valid only when the protocol is
     * set to **HTTP** or **HTTPS**.
     */
    realIp?: pulumi.Input<boolean>;
    /**
     * The region in which to create the listener resource. If omitted, the
     * provider-level region will be used. Changing this creates a new listener.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the request timeout for the listener. Value range: 1 to 300. This
     * parameter is valid when protocol is set to *HTTP* or *HTTPS*.
     */
    requestTimeout?: pulumi.Input<number>;
    /**
     * Specifies the response timeout for the listener. Value range: 1 to 300. This
     * parameter is valid when protocol is set to *HTTP* or *HTTPS*.
     */
    responseTimeout?: pulumi.Input<number>;
    securityPolicyId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the server certificate used by the listener. This
     * parameter is mandatory when protocol is set to *HTTPS*.
     */
    serverCertificate?: pulumi.Input<string>;
    /**
     * Lists the IDs of SNI certificates (server certificates with a domain name) used
     * by the listener. This parameter is valid when protocol is set to *HTTPS*.
     */
    sniCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    sniMatchAlgo?: pulumi.Input<string>;
    sslEarlyDataEnable?: pulumi.Input<boolean>;
    /**
     * The key/value pairs to associate with the listener.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the TLS cipher policy for the listener. Valid options are:
     * tls-1-0-inherit, tls-1-0, tls-1-1, tls-1-2, tls-1-2-strict, tls-1-2-fs, tls-1-0-with-1-3, and tls-1-2-fs-with-1-3.
     * This parameter is valid when protocol is set to *HTTPS*.
     */
    tlsCiphersPolicy?: pulumi.Input<string>;
}
