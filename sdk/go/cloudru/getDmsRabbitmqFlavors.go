// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetDmsRabbitmqFlavors(ctx *pulumi.Context, args *GetDmsRabbitmqFlavorsArgs, opts ...pulumi.InvokeOption) (*GetDmsRabbitmqFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsRabbitmqFlavorsResult
	err := ctx.Invoke("sbercloud:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsRabbitmqFlavors.
type GetDmsRabbitmqFlavorsArgs struct {
	ArchType          *string  `pulumi:"archType"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	ChargingMode      *string  `pulumi:"chargingMode"`
	FlavorId          *string  `pulumi:"flavorId"`
	Region            *string  `pulumi:"region"`
	StorageSpecCode   *string  `pulumi:"storageSpecCode"`
	Type              *string  `pulumi:"type"`
}

// A collection of values returned by getDmsRabbitmqFlavors.
type GetDmsRabbitmqFlavorsResult struct {
	ArchType          *string                       `pulumi:"archType"`
	AvailabilityZones []string                      `pulumi:"availabilityZones"`
	ChargingMode      *string                       `pulumi:"chargingMode"`
	FlavorId          *string                       `pulumi:"flavorId"`
	Flavors           []GetDmsRabbitmqFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Region          string   `pulumi:"region"`
	StorageSpecCode *string  `pulumi:"storageSpecCode"`
	Type            *string  `pulumi:"type"`
	Versions        []string `pulumi:"versions"`
}

func GetDmsRabbitmqFlavorsOutput(ctx *pulumi.Context, args GetDmsRabbitmqFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetDmsRabbitmqFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsRabbitmqFlavorsResultOutput, error) {
			args := v.(GetDmsRabbitmqFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDmsRabbitmqFlavors:getDmsRabbitmqFlavors", args, GetDmsRabbitmqFlavorsResultOutput{}, options).(GetDmsRabbitmqFlavorsResultOutput), nil
		}).(GetDmsRabbitmqFlavorsResultOutput)
}

// A collection of arguments for invoking getDmsRabbitmqFlavors.
type GetDmsRabbitmqFlavorsOutputArgs struct {
	ArchType          pulumi.StringPtrInput   `pulumi:"archType"`
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	ChargingMode      pulumi.StringPtrInput   `pulumi:"chargingMode"`
	FlavorId          pulumi.StringPtrInput   `pulumi:"flavorId"`
	Region            pulumi.StringPtrInput   `pulumi:"region"`
	StorageSpecCode   pulumi.StringPtrInput   `pulumi:"storageSpecCode"`
	Type              pulumi.StringPtrInput   `pulumi:"type"`
}

func (GetDmsRabbitmqFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getDmsRabbitmqFlavors.
type GetDmsRabbitmqFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetDmsRabbitmqFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsRabbitmqFlavorsResult)(nil)).Elem()
}

func (o GetDmsRabbitmqFlavorsResultOutput) ToGetDmsRabbitmqFlavorsResultOutput() GetDmsRabbitmqFlavorsResultOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsResultOutput) ToGetDmsRabbitmqFlavorsResultOutputWithContext(ctx context.Context) GetDmsRabbitmqFlavorsResultOutput {
	return o
}

func (o GetDmsRabbitmqFlavorsResultOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) *string { return v.FlavorId }).(pulumi.StringPtrOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) Flavors() GetDmsRabbitmqFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) []GetDmsRabbitmqFlavorsFlavor { return v.Flavors }).(GetDmsRabbitmqFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsRabbitmqFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) StorageSpecCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) *string { return v.StorageSpecCode }).(pulumi.StringPtrOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetDmsRabbitmqFlavorsResultOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDmsRabbitmqFlavorsResult) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsRabbitmqFlavorsResultOutput{})
}
