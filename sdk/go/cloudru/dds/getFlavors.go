// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetFlavors(ctx *pulumi.Context, args *GetFlavorsArgs, opts ...pulumi.InvokeOption) (*GetFlavorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlavorsResult
	err := ctx.Invoke("sbercloud:Dds/getFlavors:getFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlavors.
type GetFlavorsArgs struct {
	EngineName string  `pulumi:"engineName"`
	Memory     *string `pulumi:"memory"`
	Region     *string `pulumi:"region"`
	Type       *string `pulumi:"type"`
	Vcpus      *string `pulumi:"vcpus"`
}

// A collection of values returned by getFlavors.
type GetFlavorsResult struct {
	EngineName string             `pulumi:"engineName"`
	Flavors    []GetFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Memory *string `pulumi:"memory"`
	Region string  `pulumi:"region"`
	Type   *string `pulumi:"type"`
	Vcpus  *string `pulumi:"vcpus"`
}

func GetFlavorsOutput(ctx *pulumi.Context, args GetFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetFlavorsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlavorsResultOutput, error) {
			args := v.(GetFlavorsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Dds/getFlavors:getFlavors", args, GetFlavorsResultOutput{}, options).(GetFlavorsResultOutput), nil
		}).(GetFlavorsResultOutput)
}

// A collection of arguments for invoking getFlavors.
type GetFlavorsOutputArgs struct {
	EngineName pulumi.StringInput    `pulumi:"engineName"`
	Memory     pulumi.StringPtrInput `pulumi:"memory"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
	Vcpus      pulumi.StringPtrInput `pulumi:"vcpus"`
}

func (GetFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getFlavors.
type GetFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsResult)(nil)).Elem()
}

func (o GetFlavorsResultOutput) ToGetFlavorsResultOutput() GetFlavorsResultOutput {
	return o
}

func (o GetFlavorsResultOutput) ToGetFlavorsResultOutputWithContext(ctx context.Context) GetFlavorsResultOutput {
	return o
}

func (o GetFlavorsResultOutput) EngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsResult) string { return v.EngineName }).(pulumi.StringOutput)
}

func (o GetFlavorsResultOutput) Flavors() GetFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetFlavorsResult) []GetFlavorsFlavor { return v.Flavors }).(GetFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlavorsResultOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlavorsResult) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

func (o GetFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetFlavorsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlavorsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetFlavorsResultOutput) Vcpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlavorsResult) *string { return v.Vcpus }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlavorsResultOutput{})
}
