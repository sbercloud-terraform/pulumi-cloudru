// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manage DMS RocketMQ instance resources within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const securityGroupId = config.requireObject<any>("securityGroupId");
 * const availabilityZones = config.requireObject<Array<string>>("availabilityZones");
 * const test = new sbercloud.DmsRocketmqInstance("test", {
 *     name: "rocketmq_name_test",
 *     description: "this is a rocketmq instance",
 *     engineVersion: "4.8.0",
 *     storageSpace: 300,
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: securityGroupId,
 *     availabilityZones: availabilityZones,
 *     flavorId: "c6.4u8g.cluster",
 *     storageSpecCode: "dms.physical.storage.high.v2",
 *     brokerNum: 1,
 * });
 * ```
 *
 * ## Import
 *
 * The rocketmq instance can be imported using the `id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:index/dmsRocketmqInstance:DmsRocketmqInstance test 8d3c7938-dc47-4937-a30f-c80de381c5e3
 * ```
 */
export class DmsRocketmqInstance extends pulumi.CustomResource {
    /**
     * Get an existing DmsRocketmqInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsRocketmqInstanceState, opts?: pulumi.CustomResourceOptions): DmsRocketmqInstance {
        return new DmsRocketmqInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/dmsRocketmqInstance:DmsRocketmqInstance';

    /**
     * Returns true if the given object is an instance of DmsRocketmqInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsRocketmqInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsRocketmqInstance.__pulumiType;
    }

    /**
     * Specifies whether auto renew is enabled. Valid values are "true" and "false".
     */
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * Specifies the list of availability zone names, where
     * instance brokers reside and which has available resources.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * Indicates the service data address.
     */
    public /*out*/ readonly brokerAddress!: pulumi.Output<string>;
    /**
     * Specifies the broker numbers. It's **required** when instance architecture is
     * **cluster**. Defaults to `1` when instance architecture is **single node**.
     */
    public readonly brokerNum!: pulumi.Output<number | undefined>;
    /**
     * Specifies the charging mode of the instance. Valid values are *prePaid*
     * and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
     */
    public readonly chargingMode!: pulumi.Output<string>;
    /**
     * Specifies the instance configs.
     * The configs structure is documented below.
     *
     * <a name="dmsConfigs"></a>
     * The `configs` block supports:
     */
    public readonly configs!: pulumi.Output<outputs.DmsRocketmqInstanceConfig[]>;
    /**
     * Indicates the Access information of cross-VPC. The structure is documented below.
     */
    public /*out*/ readonly crossVpcAccesses!: pulumi.Output<outputs.DmsRocketmqInstanceCrossVpcAccess[]>;
    /**
     * Specifies the description of the DMS RocketMQ instance.
     * The description can contain a maximum of `1,024` characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies whether access control is enabled.
     */
    public readonly enableAcl!: pulumi.Output<boolean>;
    /**
     * Specifies whether to enable public access. By default, public access is disabled.
     */
    public readonly enablePublicip!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the version of the RocketMQ engine.
     * Valid values are **4.8.0** and **5.x**.
     * Changing this parameter will create a new resource.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * Specifies the enterprise project id of the instance.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the flavor ID.
     */
    public readonly flavorId!: pulumi.Output<string>;
    /**
     * Specifies whether to support IPv6. Defaults to **false**.
     * Changing this parameter will create a new resource.
     */
    public readonly ipv6Enable!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
     */
    public /*out*/ readonly maintainBegin!: pulumi.Output<string>;
    /**
     * Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
     */
    public /*out*/ readonly maintainEnd!: pulumi.Output<string>;
    /**
     * Specifies the config name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates the metadata address.
     */
    public /*out*/ readonly namesrvAddress!: pulumi.Output<string>;
    /**
     * Indicates whether billing based on new specifications is enabled.
     */
    public /*out*/ readonly newSpecBillingEnable!: pulumi.Output<boolean>;
    /**
     * Indicates the node quantity.
     */
    public /*out*/ readonly nodeNum!: pulumi.Output<number>;
    /**
     * Specifies the charging period of the instance. If `periodUnit` is set to *month*
     * , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
     * mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Specifies the charging period unit of the instance.
     * Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
     * Changing this creates a new resource.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * Indicates the public network service data address.
     */
    public /*out*/ readonly publicBrokerAddress!: pulumi.Output<string>;
    /**
     * Indicates the public network metadata address.
     */
    public /*out*/ readonly publicNamesrvAddress!: pulumi.Output<string>;
    /**
     * Indicates the public IP address.
     */
    public /*out*/ readonly publicipAddress!: pulumi.Output<string>;
    /**
     * Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
     * multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
     */
    public readonly publicipId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Indicates the resource specifications.
     */
    public /*out*/ readonly resourceSpecCode!: pulumi.Output<string>;
    /**
     * Specifies whether access control is enabled.
     *
     * @deprecated Use 'enable_acl' instead
     */
    public readonly retentionPolicy!: pulumi.Output<boolean>;
    /**
     * Specifies the ID of a security group.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
     * and the number of nodes are returned.
     */
    public /*out*/ readonly specification!: pulumi.Output<string>;
    /**
     * Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
     * Changing this parameter will create a new resource.
     */
    public readonly sslEnable!: pulumi.Output<boolean>;
    /**
     * Indicates the status of the DMS RocketMQ instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the message storage capacity, Unit: GB.
     * When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
     * When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
     */
    public readonly storageSpace!: pulumi.Output<number>;
    /**
     * Specifies the storage I/O specification.
     * The options are as follows:
     * + **dms.physical.storage.high.v2**: high I/O disk
     * + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
     * Changing this parameter will create a new resource.
     */
    public readonly storageSpecCode!: pulumi.Output<string>;
    /**
     * Specifies the ID of a subnet.
     * Changing this parameter will create a new resource.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the instance.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Indicates the DMS RocketMQ instance type. Value: cluster.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Indicates the used message storage space. Unit: GB.
     */
    public /*out*/ readonly usedStorageSpace!: pulumi.Output<number>;
    /**
     * Specifies the ID of a VPC.
     * Changing this parameter will create a new resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a DmsRocketmqInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsRocketmqInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsRocketmqInstanceArgs | DmsRocketmqInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsRocketmqInstanceState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["brokerAddress"] = state ? state.brokerAddress : undefined;
            resourceInputs["brokerNum"] = state ? state.brokerNum : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["configs"] = state ? state.configs : undefined;
            resourceInputs["crossVpcAccesses"] = state ? state.crossVpcAccesses : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableAcl"] = state ? state.enableAcl : undefined;
            resourceInputs["enablePublicip"] = state ? state.enablePublicip : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = state ? state.flavorId : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["maintainBegin"] = state ? state.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = state ? state.maintainEnd : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namesrvAddress"] = state ? state.namesrvAddress : undefined;
            resourceInputs["newSpecBillingEnable"] = state ? state.newSpecBillingEnable : undefined;
            resourceInputs["nodeNum"] = state ? state.nodeNum : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["publicBrokerAddress"] = state ? state.publicBrokerAddress : undefined;
            resourceInputs["publicNamesrvAddress"] = state ? state.publicNamesrvAddress : undefined;
            resourceInputs["publicipAddress"] = state ? state.publicipAddress : undefined;
            resourceInputs["publicipId"] = state ? state.publicipId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceSpecCode"] = state ? state.resourceSpecCode : undefined;
            resourceInputs["retentionPolicy"] = state ? state.retentionPolicy : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["specification"] = state ? state.specification : undefined;
            resourceInputs["sslEnable"] = state ? state.sslEnable : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageSpace"] = state ? state.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = state ? state.storageSpecCode : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usedStorageSpace"] = state ? state.usedStorageSpace : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as DmsRocketmqInstanceArgs | undefined;
            if ((!args || args.availabilityZones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZones'");
            }
            if ((!args || args.engineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if ((!args || args.flavorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flavorId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.storageSpace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSpace'");
            }
            if ((!args || args.storageSpecCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSpecCode'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["brokerNum"] = args ? args.brokerNum : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["configs"] = args ? args.configs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableAcl"] = args ? args.enableAcl : undefined;
            resourceInputs["enablePublicip"] = args ? args.enablePublicip : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["flavorId"] = args ? args.flavorId : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["publicipId"] = args ? args.publicipId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["retentionPolicy"] = args ? args.retentionPolicy : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["sslEnable"] = args ? args.sslEnable : undefined;
            resourceInputs["storageSpace"] = args ? args.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = args ? args.storageSpecCode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["brokerAddress"] = undefined /*out*/;
            resourceInputs["crossVpcAccesses"] = undefined /*out*/;
            resourceInputs["maintainBegin"] = undefined /*out*/;
            resourceInputs["maintainEnd"] = undefined /*out*/;
            resourceInputs["namesrvAddress"] = undefined /*out*/;
            resourceInputs["newSpecBillingEnable"] = undefined /*out*/;
            resourceInputs["nodeNum"] = undefined /*out*/;
            resourceInputs["publicBrokerAddress"] = undefined /*out*/;
            resourceInputs["publicNamesrvAddress"] = undefined /*out*/;
            resourceInputs["publicipAddress"] = undefined /*out*/;
            resourceInputs["resourceSpecCode"] = undefined /*out*/;
            resourceInputs["specification"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["usedStorageSpace"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsRocketmqInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DmsRocketmqInstance resources.
 */
export interface DmsRocketmqInstanceState {
    /**
     * Specifies whether auto renew is enabled. Valid values are "true" and "false".
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the list of availability zone names, where
     * instance brokers reside and which has available resources.
     *
     * Changing this parameter will create a new resource.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the service data address.
     */
    brokerAddress?: pulumi.Input<string>;
    /**
     * Specifies the broker numbers. It's **required** when instance architecture is
     * **cluster**. Defaults to `1` when instance architecture is **single node**.
     */
    brokerNum?: pulumi.Input<number>;
    /**
     * Specifies the charging mode of the instance. Valid values are *prePaid*
     * and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the instance configs.
     * The configs structure is documented below.
     *
     * <a name="dmsConfigs"></a>
     * The `configs` block supports:
     */
    configs?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqInstanceConfig>[]>;
    /**
     * Indicates the Access information of cross-VPC. The structure is documented below.
     */
    crossVpcAccesses?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqInstanceCrossVpcAccess>[]>;
    /**
     * Specifies the description of the DMS RocketMQ instance.
     * The description can contain a maximum of `1,024` characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     */
    enableAcl?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable public access. By default, public access is disabled.
     */
    enablePublicip?: pulumi.Input<boolean>;
    /**
     * Specifies the version of the RocketMQ engine.
     * Valid values are **4.8.0** and **5.x**.
     * Changing this parameter will create a new resource.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the flavor ID.
     */
    flavorId?: pulumi.Input<string>;
    /**
     * Specifies whether to support IPv6. Defaults to **false**.
     * Changing this parameter will create a new resource.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * Specifies the config name.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the metadata address.
     */
    namesrvAddress?: pulumi.Input<string>;
    /**
     * Indicates whether billing based on new specifications is enabled.
     */
    newSpecBillingEnable?: pulumi.Input<boolean>;
    /**
     * Indicates the node quantity.
     */
    nodeNum?: pulumi.Input<number>;
    /**
     * Specifies the charging period of the instance. If `periodUnit` is set to *month*
     * , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
     * mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the instance.
     * Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
     * Changing this creates a new resource.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Indicates the public network service data address.
     */
    publicBrokerAddress?: pulumi.Input<string>;
    /**
     * Indicates the public network metadata address.
     */
    publicNamesrvAddress?: pulumi.Input<string>;
    /**
     * Indicates the public IP address.
     */
    publicipAddress?: pulumi.Input<string>;
    /**
     * Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
     * multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
     */
    publicipId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Indicates the resource specifications.
     */
    resourceSpecCode?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     *
     * @deprecated Use 'enable_acl' instead
     */
    retentionPolicy?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of a security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
     * and the number of nodes are returned.
     */
    specification?: pulumi.Input<string>;
    /**
     * Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
     * Changing this parameter will create a new resource.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Indicates the status of the DMS RocketMQ instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the message storage capacity, Unit: GB.
     * When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
     * When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
     */
    storageSpace?: pulumi.Input<number>;
    /**
     * Specifies the storage I/O specification.
     * The options are as follows:
     * + **dms.physical.storage.high.v2**: high I/O disk
     * + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
     * Changing this parameter will create a new resource.
     */
    storageSpecCode?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     * Changing this parameter will create a new resource.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the DMS RocketMQ instance type. Value: cluster.
     */
    type?: pulumi.Input<string>;
    /**
     * Indicates the used message storage space. Unit: GB.
     */
    usedStorageSpace?: pulumi.Input<number>;
    /**
     * Specifies the ID of a VPC.
     * Changing this parameter will create a new resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmsRocketmqInstance resource.
 */
export interface DmsRocketmqInstanceArgs {
    /**
     * Specifies whether auto renew is enabled. Valid values are "true" and "false".
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the list of availability zone names, where
     * instance brokers reside and which has available resources.
     *
     * Changing this parameter will create a new resource.
     */
    availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the broker numbers. It's **required** when instance architecture is
     * **cluster**. Defaults to `1` when instance architecture is **single node**.
     */
    brokerNum?: pulumi.Input<number>;
    /**
     * Specifies the charging mode of the instance. Valid values are *prePaid*
     * and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the instance configs.
     * The configs structure is documented below.
     *
     * <a name="dmsConfigs"></a>
     * The `configs` block supports:
     */
    configs?: pulumi.Input<pulumi.Input<inputs.DmsRocketmqInstanceConfig>[]>;
    /**
     * Specifies the description of the DMS RocketMQ instance.
     * The description can contain a maximum of `1,024` characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     */
    enableAcl?: pulumi.Input<boolean>;
    /**
     * Specifies whether to enable public access. By default, public access is disabled.
     */
    enablePublicip?: pulumi.Input<boolean>;
    /**
     * Specifies the version of the RocketMQ engine.
     * Valid values are **4.8.0** and **5.x**.
     * Changing this parameter will create a new resource.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the flavor ID.
     */
    flavorId: pulumi.Input<string>;
    /**
     * Specifies whether to support IPv6. Defaults to **false**.
     * Changing this parameter will create a new resource.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the config name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the charging period of the instance. If `periodUnit` is set to *month*
     * , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
     * mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the instance.
     * Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
     * Changing this creates a new resource.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
     * multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
     */
    publicipId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies whether access control is enabled.
     *
     * @deprecated Use 'enable_acl' instead
     */
    retentionPolicy?: pulumi.Input<boolean>;
    /**
     * Specifies the ID of a security group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
     * Changing this parameter will create a new resource.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Specifies the message storage capacity, Unit: GB.
     * When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
     * When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
     */
    storageSpace: pulumi.Input<number>;
    /**
     * Specifies the storage I/O specification.
     * The options are as follows:
     * + **dms.physical.storage.high.v2**: high I/O disk
     * + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
     * Changing this parameter will create a new resource.
     */
    storageSpecCode: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     * Changing this parameter will create a new resource.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of a VPC.
     * Changing this parameter will create a new resource.
     */
    vpcId: pulumi.Input<string>;
}
