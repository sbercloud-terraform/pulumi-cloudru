// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigApiAction struct {
	pulumi.CustomResourceState

	// The operation on the API will be performed.
	Action pulumi.StringOutput `pulumi:"action"`
	// The ID of the API to be published.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The name of the API.
	ApiName        pulumi.StringOutput    `pulumi:"apiName"`
	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// The ID of the environment to which the API will be published.
	EnvId pulumi.StringOutput `pulumi:"envId"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ID of the publish record.
	PublishId pulumi.StringOutput `pulumi:"publishId"`
	// The time when the API was published, in UTC format.
	PublishTime pulumi.StringOutput `pulumi:"publishTime"`
	// The region where the APIG instance to which the API belongs is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The description of the publish action.
	Remark pulumi.StringPtrOutput `pulumi:"remark"`
	// The version ID of the online API.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
}

// NewApigApiAction registers a new resource with the given unique name, arguments, and options.
func NewApigApiAction(ctx *pulumi.Context,
	name string, args *ApigApiActionArgs, opts ...pulumi.ResourceOption) (*ApigApiAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.EnvId == nil {
		return nil, errors.New("invalid value for required argument 'EnvId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApiAction
	err := ctx.RegisterResource("cloudru:index/apigApiAction:ApigApiAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApiAction gets an existing ApigApiAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApiAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApiActionState, opts ...pulumi.ResourceOption) (*ApigApiAction, error) {
	var resource ApigApiAction
	err := ctx.ReadResource("cloudru:index/apigApiAction:ApigApiAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApiAction resources.
type apigApiActionState struct {
	// The operation on the API will be performed.
	Action *string `pulumi:"action"`
	// The ID of the API to be published.
	ApiId *string `pulumi:"apiId"`
	// The name of the API.
	ApiName        *string `pulumi:"apiName"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The ID of the environment to which the API will be published.
	EnvId *string `pulumi:"envId"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the publish record.
	PublishId *string `pulumi:"publishId"`
	// The time when the API was published, in UTC format.
	PublishTime *string `pulumi:"publishTime"`
	// The region where the APIG instance to which the API belongs is located.
	Region *string `pulumi:"region"`
	// The description of the publish action.
	Remark *string `pulumi:"remark"`
	// The version ID of the online API.
	VersionId *string `pulumi:"versionId"`
}

type ApigApiActionState struct {
	// The operation on the API will be performed.
	Action pulumi.StringPtrInput
	// The ID of the API to be published.
	ApiId pulumi.StringPtrInput
	// The name of the API.
	ApiName        pulumi.StringPtrInput
	EnableForceNew pulumi.StringPtrInput
	// The ID of the environment to which the API will be published.
	EnvId pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringPtrInput
	// The ID of the publish record.
	PublishId pulumi.StringPtrInput
	// The time when the API was published, in UTC format.
	PublishTime pulumi.StringPtrInput
	// The region where the APIG instance to which the API belongs is located.
	Region pulumi.StringPtrInput
	// The description of the publish action.
	Remark pulumi.StringPtrInput
	// The version ID of the online API.
	VersionId pulumi.StringPtrInput
}

func (ApigApiActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiActionState)(nil)).Elem()
}

type apigApiActionArgs struct {
	// The operation on the API will be performed.
	Action string `pulumi:"action"`
	// The ID of the API to be published.
	ApiId          string  `pulumi:"apiId"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The ID of the environment to which the API will be published.
	EnvId string `pulumi:"envId"`
	// The ID of the dedicated instance to which the API belongs.
	InstanceId string `pulumi:"instanceId"`
	// The region where the APIG instance to which the API belongs is located.
	Region *string `pulumi:"region"`
	// The description of the publish action.
	Remark *string `pulumi:"remark"`
}

// The set of arguments for constructing a ApigApiAction resource.
type ApigApiActionArgs struct {
	// The operation on the API will be performed.
	Action pulumi.StringInput
	// The ID of the API to be published.
	ApiId          pulumi.StringInput
	EnableForceNew pulumi.StringPtrInput
	// The ID of the environment to which the API will be published.
	EnvId pulumi.StringInput
	// The ID of the dedicated instance to which the API belongs.
	InstanceId pulumi.StringInput
	// The region where the APIG instance to which the API belongs is located.
	Region pulumi.StringPtrInput
	// The description of the publish action.
	Remark pulumi.StringPtrInput
}

func (ApigApiActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiActionArgs)(nil)).Elem()
}

type ApigApiActionInput interface {
	pulumi.Input

	ToApigApiActionOutput() ApigApiActionOutput
	ToApigApiActionOutputWithContext(ctx context.Context) ApigApiActionOutput
}

func (*ApigApiAction) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiAction)(nil)).Elem()
}

func (i *ApigApiAction) ToApigApiActionOutput() ApigApiActionOutput {
	return i.ToApigApiActionOutputWithContext(context.Background())
}

func (i *ApigApiAction) ToApigApiActionOutputWithContext(ctx context.Context) ApigApiActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiActionOutput)
}

// ApigApiActionArrayInput is an input type that accepts ApigApiActionArray and ApigApiActionArrayOutput values.
// You can construct a concrete instance of `ApigApiActionArrayInput` via:
//
//	ApigApiActionArray{ ApigApiActionArgs{...} }
type ApigApiActionArrayInput interface {
	pulumi.Input

	ToApigApiActionArrayOutput() ApigApiActionArrayOutput
	ToApigApiActionArrayOutputWithContext(context.Context) ApigApiActionArrayOutput
}

type ApigApiActionArray []ApigApiActionInput

func (ApigApiActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiAction)(nil)).Elem()
}

func (i ApigApiActionArray) ToApigApiActionArrayOutput() ApigApiActionArrayOutput {
	return i.ToApigApiActionArrayOutputWithContext(context.Background())
}

func (i ApigApiActionArray) ToApigApiActionArrayOutputWithContext(ctx context.Context) ApigApiActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiActionArrayOutput)
}

// ApigApiActionMapInput is an input type that accepts ApigApiActionMap and ApigApiActionMapOutput values.
// You can construct a concrete instance of `ApigApiActionMapInput` via:
//
//	ApigApiActionMap{ "key": ApigApiActionArgs{...} }
type ApigApiActionMapInput interface {
	pulumi.Input

	ToApigApiActionMapOutput() ApigApiActionMapOutput
	ToApigApiActionMapOutputWithContext(context.Context) ApigApiActionMapOutput
}

type ApigApiActionMap map[string]ApigApiActionInput

func (ApigApiActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiAction)(nil)).Elem()
}

func (i ApigApiActionMap) ToApigApiActionMapOutput() ApigApiActionMapOutput {
	return i.ToApigApiActionMapOutputWithContext(context.Background())
}

func (i ApigApiActionMap) ToApigApiActionMapOutputWithContext(ctx context.Context) ApigApiActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiActionMapOutput)
}

type ApigApiActionOutput struct{ *pulumi.OutputState }

func (ApigApiActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiAction)(nil)).Elem()
}

func (o ApigApiActionOutput) ToApigApiActionOutput() ApigApiActionOutput {
	return o
}

func (o ApigApiActionOutput) ToApigApiActionOutputWithContext(ctx context.Context) ApigApiActionOutput {
	return o
}

// The operation on the API will be performed.
func (o ApigApiActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The ID of the API to be published.
func (o ApigApiActionOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The name of the API.
func (o ApigApiActionOutput) ApiName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.ApiName }).(pulumi.StringOutput)
}

func (o ApigApiActionOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// The ID of the environment to which the API will be published.
func (o ApigApiActionOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.EnvId }).(pulumi.StringOutput)
}

// The ID of the dedicated instance to which the API belongs.
func (o ApigApiActionOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the publish record.
func (o ApigApiActionOutput) PublishId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.PublishId }).(pulumi.StringOutput)
}

// The time when the API was published, in UTC format.
func (o ApigApiActionOutput) PublishTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.PublishTime }).(pulumi.StringOutput)
}

// The region where the APIG instance to which the API belongs is located.
func (o ApigApiActionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The description of the publish action.
func (o ApigApiActionOutput) Remark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringPtrOutput { return v.Remark }).(pulumi.StringPtrOutput)
}

// The version ID of the online API.
func (o ApigApiActionOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiAction) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

type ApigApiActionArrayOutput struct{ *pulumi.OutputState }

func (ApigApiActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiAction)(nil)).Elem()
}

func (o ApigApiActionArrayOutput) ToApigApiActionArrayOutput() ApigApiActionArrayOutput {
	return o
}

func (o ApigApiActionArrayOutput) ToApigApiActionArrayOutputWithContext(ctx context.Context) ApigApiActionArrayOutput {
	return o
}

func (o ApigApiActionArrayOutput) Index(i pulumi.IntInput) ApigApiActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApiAction {
		return vs[0].([]*ApigApiAction)[vs[1].(int)]
	}).(ApigApiActionOutput)
}

type ApigApiActionMapOutput struct{ *pulumi.OutputState }

func (ApigApiActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiAction)(nil)).Elem()
}

func (o ApigApiActionMapOutput) ToApigApiActionMapOutput() ApigApiActionMapOutput {
	return o
}

func (o ApigApiActionMapOutput) ToApigApiActionMapOutputWithContext(ctx context.Context) ApigApiActionMapOutput {
	return o
}

func (o ApigApiActionMapOutput) MapIndex(k pulumi.StringInput) ApigApiActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApiAction {
		return vs[0].(map[string]*ApigApiAction)[vs[1].(string)]
	}).(ApigApiActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiActionInput)(nil)).Elem(), &ApigApiAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiActionArrayInput)(nil)).Elem(), ApigApiActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiActionMapInput)(nil)).Elem(), ApigApiActionMap{})
	pulumi.RegisterOutputType(ApigApiActionOutput{})
	pulumi.RegisterOutputType(ApigApiActionArrayOutput{})
	pulumi.RegisterOutputType(ApigApiActionMapOutput{})
}
