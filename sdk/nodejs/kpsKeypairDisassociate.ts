// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KpsKeypairDisassociate extends pulumi.CustomResource {
    /**
     * Get an existing KpsKeypairDisassociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KpsKeypairDisassociateState, opts?: pulumi.CustomResourceOptions): KpsKeypairDisassociate {
        return new KpsKeypairDisassociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:index/kpsKeypairDisassociate:KpsKeypairDisassociate';

    /**
     * Returns true if the given object is an instance of KpsKeypairDisassociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KpsKeypairDisassociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KpsKeypairDisassociate.__pulumiType;
    }

    declare public readonly enableForceNew: pulumi.Output<string | undefined>;
    /**
     * Specifies the region in which to query the resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the ECS information.
     */
    declare public readonly server: pulumi.Output<outputs.KpsKeypairDisassociateServer>;

    /**
     * Create a KpsKeypairDisassociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KpsKeypairDisassociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KpsKeypairDisassociateArgs | KpsKeypairDisassociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KpsKeypairDisassociateState | undefined;
            resourceInputs["enableForceNew"] = state?.enableForceNew;
            resourceInputs["region"] = state?.region;
            resourceInputs["server"] = state?.server;
        } else {
            const args = argsOrState as KpsKeypairDisassociateArgs | undefined;
            if (args?.server === undefined && !opts.urn) {
                throw new Error("Missing required property 'server'");
            }
            resourceInputs["enableForceNew"] = args?.enableForceNew;
            resourceInputs["region"] = args?.region;
            resourceInputs["server"] = args?.server;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KpsKeypairDisassociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KpsKeypairDisassociate resources.
 */
export interface KpsKeypairDisassociateState {
    enableForceNew?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ECS information.
     */
    server?: pulumi.Input<inputs.KpsKeypairDisassociateServer>;
}

/**
 * The set of arguments for constructing a KpsKeypairDisassociate resource.
 */
export interface KpsKeypairDisassociateArgs {
    enableForceNew?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ECS information.
     */
    server: pulumi.Input<inputs.KpsKeypairDisassociateServer>;
}
