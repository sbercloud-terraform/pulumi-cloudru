// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type SfsTurboObsTarget struct {
	pulumi.CustomResourceState

	CreatedAt              pulumi.StringOutput        `pulumi:"createdAt"`
	DeleteDataInFileSystem pulumi.BoolPtrOutput       `pulumi:"deleteDataInFileSystem"`
	FileSystemPath         pulumi.StringOutput        `pulumi:"fileSystemPath"`
	Obs                    SfsTurboObsTargetObsOutput `pulumi:"obs"`
	Region                 pulumi.StringOutput        `pulumi:"region"`
	ShareId                pulumi.StringOutput        `pulumi:"shareId"`
	Status                 pulumi.StringOutput        `pulumi:"status"`
}

// NewSfsTurboObsTarget registers a new resource with the given unique name, arguments, and options.
func NewSfsTurboObsTarget(ctx *pulumi.Context,
	name string, args *SfsTurboObsTargetArgs, opts ...pulumi.ResourceOption) (*SfsTurboObsTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileSystemPath == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemPath'")
	}
	if args.Obs == nil {
		return nil, errors.New("invalid value for required argument 'Obs'")
	}
	if args.ShareId == nil {
		return nil, errors.New("invalid value for required argument 'ShareId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SfsTurboObsTarget
	err := ctx.RegisterResource("cloudru:index/sfsTurboObsTarget:SfsTurboObsTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSfsTurboObsTarget gets an existing SfsTurboObsTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSfsTurboObsTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SfsTurboObsTargetState, opts ...pulumi.ResourceOption) (*SfsTurboObsTarget, error) {
	var resource SfsTurboObsTarget
	err := ctx.ReadResource("cloudru:index/sfsTurboObsTarget:SfsTurboObsTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SfsTurboObsTarget resources.
type sfsTurboObsTargetState struct {
	CreatedAt              *string               `pulumi:"createdAt"`
	DeleteDataInFileSystem *bool                 `pulumi:"deleteDataInFileSystem"`
	FileSystemPath         *string               `pulumi:"fileSystemPath"`
	Obs                    *SfsTurboObsTargetObs `pulumi:"obs"`
	Region                 *string               `pulumi:"region"`
	ShareId                *string               `pulumi:"shareId"`
	Status                 *string               `pulumi:"status"`
}

type SfsTurboObsTargetState struct {
	CreatedAt              pulumi.StringPtrInput
	DeleteDataInFileSystem pulumi.BoolPtrInput
	FileSystemPath         pulumi.StringPtrInput
	Obs                    SfsTurboObsTargetObsPtrInput
	Region                 pulumi.StringPtrInput
	ShareId                pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
}

func (SfsTurboObsTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*sfsTurboObsTargetState)(nil)).Elem()
}

type sfsTurboObsTargetArgs struct {
	DeleteDataInFileSystem *bool                `pulumi:"deleteDataInFileSystem"`
	FileSystemPath         string               `pulumi:"fileSystemPath"`
	Obs                    SfsTurboObsTargetObs `pulumi:"obs"`
	Region                 *string              `pulumi:"region"`
	ShareId                string               `pulumi:"shareId"`
}

// The set of arguments for constructing a SfsTurboObsTarget resource.
type SfsTurboObsTargetArgs struct {
	DeleteDataInFileSystem pulumi.BoolPtrInput
	FileSystemPath         pulumi.StringInput
	Obs                    SfsTurboObsTargetObsInput
	Region                 pulumi.StringPtrInput
	ShareId                pulumi.StringInput
}

func (SfsTurboObsTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sfsTurboObsTargetArgs)(nil)).Elem()
}

type SfsTurboObsTargetInput interface {
	pulumi.Input

	ToSfsTurboObsTargetOutput() SfsTurboObsTargetOutput
	ToSfsTurboObsTargetOutputWithContext(ctx context.Context) SfsTurboObsTargetOutput
}

func (*SfsTurboObsTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**SfsTurboObsTarget)(nil)).Elem()
}

func (i *SfsTurboObsTarget) ToSfsTurboObsTargetOutput() SfsTurboObsTargetOutput {
	return i.ToSfsTurboObsTargetOutputWithContext(context.Background())
}

func (i *SfsTurboObsTarget) ToSfsTurboObsTargetOutputWithContext(ctx context.Context) SfsTurboObsTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboObsTargetOutput)
}

// SfsTurboObsTargetArrayInput is an input type that accepts SfsTurboObsTargetArray and SfsTurboObsTargetArrayOutput values.
// You can construct a concrete instance of `SfsTurboObsTargetArrayInput` via:
//
//	SfsTurboObsTargetArray{ SfsTurboObsTargetArgs{...} }
type SfsTurboObsTargetArrayInput interface {
	pulumi.Input

	ToSfsTurboObsTargetArrayOutput() SfsTurboObsTargetArrayOutput
	ToSfsTurboObsTargetArrayOutputWithContext(context.Context) SfsTurboObsTargetArrayOutput
}

type SfsTurboObsTargetArray []SfsTurboObsTargetInput

func (SfsTurboObsTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SfsTurboObsTarget)(nil)).Elem()
}

func (i SfsTurboObsTargetArray) ToSfsTurboObsTargetArrayOutput() SfsTurboObsTargetArrayOutput {
	return i.ToSfsTurboObsTargetArrayOutputWithContext(context.Background())
}

func (i SfsTurboObsTargetArray) ToSfsTurboObsTargetArrayOutputWithContext(ctx context.Context) SfsTurboObsTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboObsTargetArrayOutput)
}

// SfsTurboObsTargetMapInput is an input type that accepts SfsTurboObsTargetMap and SfsTurboObsTargetMapOutput values.
// You can construct a concrete instance of `SfsTurboObsTargetMapInput` via:
//
//	SfsTurboObsTargetMap{ "key": SfsTurboObsTargetArgs{...} }
type SfsTurboObsTargetMapInput interface {
	pulumi.Input

	ToSfsTurboObsTargetMapOutput() SfsTurboObsTargetMapOutput
	ToSfsTurboObsTargetMapOutputWithContext(context.Context) SfsTurboObsTargetMapOutput
}

type SfsTurboObsTargetMap map[string]SfsTurboObsTargetInput

func (SfsTurboObsTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SfsTurboObsTarget)(nil)).Elem()
}

func (i SfsTurboObsTargetMap) ToSfsTurboObsTargetMapOutput() SfsTurboObsTargetMapOutput {
	return i.ToSfsTurboObsTargetMapOutputWithContext(context.Background())
}

func (i SfsTurboObsTargetMap) ToSfsTurboObsTargetMapOutputWithContext(ctx context.Context) SfsTurboObsTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SfsTurboObsTargetMapOutput)
}

type SfsTurboObsTargetOutput struct{ *pulumi.OutputState }

func (SfsTurboObsTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SfsTurboObsTarget)(nil)).Elem()
}

func (o SfsTurboObsTargetOutput) ToSfsTurboObsTargetOutput() SfsTurboObsTargetOutput {
	return o
}

func (o SfsTurboObsTargetOutput) ToSfsTurboObsTargetOutputWithContext(ctx context.Context) SfsTurboObsTargetOutput {
	return o
}

func (o SfsTurboObsTargetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o SfsTurboObsTargetOutput) DeleteDataInFileSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) pulumi.BoolPtrOutput { return v.DeleteDataInFileSystem }).(pulumi.BoolPtrOutput)
}

func (o SfsTurboObsTargetOutput) FileSystemPath() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) pulumi.StringOutput { return v.FileSystemPath }).(pulumi.StringOutput)
}

func (o SfsTurboObsTargetOutput) Obs() SfsTurboObsTargetObsOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) SfsTurboObsTargetObsOutput { return v.Obs }).(SfsTurboObsTargetObsOutput)
}

func (o SfsTurboObsTargetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o SfsTurboObsTargetOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) pulumi.StringOutput { return v.ShareId }).(pulumi.StringOutput)
}

func (o SfsTurboObsTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SfsTurboObsTarget) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type SfsTurboObsTargetArrayOutput struct{ *pulumi.OutputState }

func (SfsTurboObsTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SfsTurboObsTarget)(nil)).Elem()
}

func (o SfsTurboObsTargetArrayOutput) ToSfsTurboObsTargetArrayOutput() SfsTurboObsTargetArrayOutput {
	return o
}

func (o SfsTurboObsTargetArrayOutput) ToSfsTurboObsTargetArrayOutputWithContext(ctx context.Context) SfsTurboObsTargetArrayOutput {
	return o
}

func (o SfsTurboObsTargetArrayOutput) Index(i pulumi.IntInput) SfsTurboObsTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SfsTurboObsTarget {
		return vs[0].([]*SfsTurboObsTarget)[vs[1].(int)]
	}).(SfsTurboObsTargetOutput)
}

type SfsTurboObsTargetMapOutput struct{ *pulumi.OutputState }

func (SfsTurboObsTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SfsTurboObsTarget)(nil)).Elem()
}

func (o SfsTurboObsTargetMapOutput) ToSfsTurboObsTargetMapOutput() SfsTurboObsTargetMapOutput {
	return o
}

func (o SfsTurboObsTargetMapOutput) ToSfsTurboObsTargetMapOutputWithContext(ctx context.Context) SfsTurboObsTargetMapOutput {
	return o
}

func (o SfsTurboObsTargetMapOutput) MapIndex(k pulumi.StringInput) SfsTurboObsTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SfsTurboObsTarget {
		return vs[0].(map[string]*SfsTurboObsTarget)[vs[1].(string)]
	}).(SfsTurboObsTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboObsTargetInput)(nil)).Elem(), &SfsTurboObsTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboObsTargetArrayInput)(nil)).Elem(), SfsTurboObsTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SfsTurboObsTargetMapInput)(nil)).Elem(), SfsTurboObsTargetMap{})
	pulumi.RegisterOutputType(SfsTurboObsTargetOutput{})
	pulumi.RegisterOutputType(SfsTurboObsTargetArrayOutput{})
	pulumi.RegisterOutputType(SfsTurboObsTargetMapOutput{})
}
