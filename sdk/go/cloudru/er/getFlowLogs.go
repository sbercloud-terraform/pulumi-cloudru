// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetFlowLogs(ctx *pulumi.Context, args *GetFlowLogsArgs, opts ...pulumi.InvokeOption) (*GetFlowLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlowLogsResult
	err := ctx.Invoke("sbercloud:Er/getFlowLogs:getFlowLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsArgs struct {
	Enabled      *string `pulumi:"enabled"`
	FlowLogId    *string `pulumi:"flowLogId"`
	InstanceId   string  `pulumi:"instanceId"`
	LogGroupId   *string `pulumi:"logGroupId"`
	LogStreamId  *string `pulumi:"logStreamId"`
	Name         *string `pulumi:"name"`
	Region       *string `pulumi:"region"`
	ResourceId   *string `pulumi:"resourceId"`
	ResourceType *string `pulumi:"resourceType"`
	Status       *string `pulumi:"status"`
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResult struct {
	Enabled   *string              `pulumi:"enabled"`
	FlowLogId *string              `pulumi:"flowLogId"`
	FlowLogs  []GetFlowLogsFlowLog `pulumi:"flowLogs"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	InstanceId   string  `pulumi:"instanceId"`
	LogGroupId   *string `pulumi:"logGroupId"`
	LogStreamId  *string `pulumi:"logStreamId"`
	Name         *string `pulumi:"name"`
	Region       *string `pulumi:"region"`
	ResourceId   *string `pulumi:"resourceId"`
	ResourceType *string `pulumi:"resourceType"`
	Status       *string `pulumi:"status"`
}

func GetFlowLogsOutput(ctx *pulumi.Context, args GetFlowLogsOutputArgs, opts ...pulumi.InvokeOption) GetFlowLogsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlowLogsResultOutput, error) {
			args := v.(GetFlowLogsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Er/getFlowLogs:getFlowLogs", args, GetFlowLogsResultOutput{}, options).(GetFlowLogsResultOutput), nil
		}).(GetFlowLogsResultOutput)
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsOutputArgs struct {
	Enabled      pulumi.StringPtrInput `pulumi:"enabled"`
	FlowLogId    pulumi.StringPtrInput `pulumi:"flowLogId"`
	InstanceId   pulumi.StringInput    `pulumi:"instanceId"`
	LogGroupId   pulumi.StringPtrInput `pulumi:"logGroupId"`
	LogStreamId  pulumi.StringPtrInput `pulumi:"logStreamId"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	ResourceId   pulumi.StringPtrInput `pulumi:"resourceId"`
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	Status       pulumi.StringPtrInput `pulumi:"status"`
}

func (GetFlowLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsArgs)(nil)).Elem()
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResultOutput struct{ *pulumi.OutputState }

func (GetFlowLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsResult)(nil)).Elem()
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutput() GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutputWithContext(ctx context.Context) GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) FlowLogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.FlowLogId }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) FlowLogs() GetFlowLogsFlowLogArrayOutput {
	return o.ApplyT(func(v GetFlowLogsResult) []GetFlowLogsFlowLog { return v.FlowLogs }).(GetFlowLogsFlowLogArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlowLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlowLogsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetFlowLogsResultOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.LogGroupId }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) LogStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.LogStreamId }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlowLogsResultOutput{})
}
