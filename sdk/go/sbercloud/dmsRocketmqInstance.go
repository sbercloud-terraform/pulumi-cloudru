// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manage DMS RocketMQ instance resources within SberCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			securityGroupId := cfg.RequireObject("securityGroupId")
//			availabilityZones := cfg.Require("availabilityZones")
//			_, err := sbercloud.NewDmsRocketmqInstance(ctx, "test", &sbercloud.DmsRocketmqInstanceArgs{
//				Name:              pulumi.String("rocketmq_name_test"),
//				Description:       pulumi.String("this is a rocketmq instance"),
//				EngineVersion:     pulumi.String("4.8.0"),
//				StorageSpace:      pulumi.Int(300),
//				VpcId:             pulumi.Any(vpcId),
//				SubnetId:          pulumi.Any(subnetId),
//				SecurityGroupId:   pulumi.Any(securityGroupId),
//				AvailabilityZones: availabilityZones,
//				FlavorId:          pulumi.String("c6.4u8g.cluster"),
//				StorageSpecCode:   pulumi.String("dms.physical.storage.high.v2"),
//				BrokerNum:         pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The rocketmq instance can be imported using the `id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:index/dmsRocketmqInstance:DmsRocketmqInstance test 8d3c7938-dc47-4937-a30f-c80de381c5e3
// ```
type DmsRocketmqInstance struct {
	pulumi.CustomResourceState

	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the list of availability zone names, where
	// instance brokers reside and which has available resources.
	//
	// Changing this parameter will create a new resource.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// Indicates the service data address.
	BrokerAddress pulumi.StringOutput `pulumi:"brokerAddress"`
	// Specifies the broker numbers. It's **required** when instance architecture is
	// **cluster**. Defaults to `1` when instance architecture is **single node**.
	BrokerNum pulumi.IntPtrOutput `pulumi:"brokerNum"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies the instance configs.
	// The configs structure is documented below.
	//
	// <a name="dmsConfigs"></a>
	// The `configs` block supports:
	Configs DmsRocketmqInstanceConfigArrayOutput `pulumi:"configs"`
	// Indicates the Access information of cross-VPC. The structure is documented below.
	CrossVpcAccesses DmsRocketmqInstanceCrossVpcAccessArrayOutput `pulumi:"crossVpcAccesses"`
	// Specifies the description of the DMS RocketMQ instance.
	// The description can contain a maximum of `1,024` characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies whether access control is enabled.
	EnableAcl pulumi.BoolOutput `pulumi:"enableAcl"`
	// Specifies whether to enable public access. By default, public access is disabled.
	EnablePublicip pulumi.BoolPtrOutput `pulumi:"enablePublicip"`
	// Specifies the version of the RocketMQ engine.
	// Valid values are **4.8.0** and **5.x**.
	// Changing this parameter will create a new resource.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Specifies the enterprise project id of the instance.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies the flavor ID.
	FlavorId pulumi.StringOutput `pulumi:"flavorId"`
	// Specifies whether to support IPv6. Defaults to **false**.
	// Changing this parameter will create a new resource.
	Ipv6Enable pulumi.BoolPtrOutput `pulumi:"ipv6Enable"`
	// Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
	MaintainBegin pulumi.StringOutput `pulumi:"maintainBegin"`
	// Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
	MaintainEnd pulumi.StringOutput `pulumi:"maintainEnd"`
	// Specifies the config name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the metadata address.
	NamesrvAddress pulumi.StringOutput `pulumi:"namesrvAddress"`
	// Indicates whether billing based on new specifications is enabled.
	NewSpecBillingEnable pulumi.BoolOutput `pulumi:"newSpecBillingEnable"`
	// Indicates the node quantity.
	NodeNum pulumi.IntOutput `pulumi:"nodeNum"`
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Indicates the public network service data address.
	PublicBrokerAddress pulumi.StringOutput `pulumi:"publicBrokerAddress"`
	// Indicates the public network metadata address.
	PublicNamesrvAddress pulumi.StringOutput `pulumi:"publicNamesrvAddress"`
	// Indicates the public IP address.
	PublicipAddress pulumi.StringOutput `pulumi:"publicipAddress"`
	// Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
	// multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
	PublicipId pulumi.StringPtrOutput `pulumi:"publicipId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Indicates the resource specifications.
	ResourceSpecCode pulumi.StringOutput `pulumi:"resourceSpecCode"`
	// Specifies whether access control is enabled.
	//
	// Deprecated: Use 'enable_acl' instead
	RetentionPolicy pulumi.BoolOutput `pulumi:"retentionPolicy"`
	// Specifies the ID of a security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
	// and the number of nodes are returned.
	Specification pulumi.StringOutput `pulumi:"specification"`
	// Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
	// Changing this parameter will create a new resource.
	SslEnable pulumi.BoolOutput `pulumi:"sslEnable"`
	// Indicates the status of the DMS RocketMQ instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the message storage capacity, Unit: GB.
	// When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
	// When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
	StorageSpace pulumi.IntOutput `pulumi:"storageSpace"`
	// Specifies the storage I/O specification.
	// The options are as follows:
	// + **dms.physical.storage.high.v2**: high I/O disk
	// + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
	//   Changing this parameter will create a new resource.
	StorageSpecCode pulumi.StringOutput `pulumi:"storageSpecCode"`
	// Specifies the ID of a subnet.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Indicates the DMS RocketMQ instance type. Value: cluster.
	Type pulumi.StringOutput `pulumi:"type"`
	// Indicates the used message storage space. Unit: GB.
	UsedStorageSpace pulumi.IntOutput `pulumi:"usedStorageSpace"`
	// Specifies the ID of a VPC.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewDmsRocketmqInstance registers a new resource with the given unique name, arguments, and options.
func NewDmsRocketmqInstance(ctx *pulumi.Context,
	name string, args *DmsRocketmqInstanceArgs, opts ...pulumi.ResourceOption) (*DmsRocketmqInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZones == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZones'")
	}
	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.StorageSpace == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpace'")
	}
	if args.StorageSpecCode == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpecCode'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DmsRocketmqInstance
	err := ctx.RegisterResource("sbercloud:index/dmsRocketmqInstance:DmsRocketmqInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDmsRocketmqInstance gets an existing DmsRocketmqInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDmsRocketmqInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DmsRocketmqInstanceState, opts ...pulumi.ResourceOption) (*DmsRocketmqInstance, error) {
	var resource DmsRocketmqInstance
	err := ctx.ReadResource("sbercloud:index/dmsRocketmqInstance:DmsRocketmqInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DmsRocketmqInstance resources.
type dmsRocketmqInstanceState struct {
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the list of availability zone names, where
	// instance brokers reside and which has available resources.
	//
	// Changing this parameter will create a new resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Indicates the service data address.
	BrokerAddress *string `pulumi:"brokerAddress"`
	// Specifies the broker numbers. It's **required** when instance architecture is
	// **cluster**. Defaults to `1` when instance architecture is **single node**.
	BrokerNum *int `pulumi:"brokerNum"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the instance configs.
	// The configs structure is documented below.
	//
	// <a name="dmsConfigs"></a>
	// The `configs` block supports:
	Configs []DmsRocketmqInstanceConfig `pulumi:"configs"`
	// Indicates the Access information of cross-VPC. The structure is documented below.
	CrossVpcAccesses []DmsRocketmqInstanceCrossVpcAccess `pulumi:"crossVpcAccesses"`
	// Specifies the description of the DMS RocketMQ instance.
	// The description can contain a maximum of `1,024` characters.
	Description *string `pulumi:"description"`
	// Specifies whether access control is enabled.
	EnableAcl *bool `pulumi:"enableAcl"`
	// Specifies whether to enable public access. By default, public access is disabled.
	EnablePublicip *bool `pulumi:"enablePublicip"`
	// Specifies the version of the RocketMQ engine.
	// Valid values are **4.8.0** and **5.x**.
	// Changing this parameter will create a new resource.
	EngineVersion *string `pulumi:"engineVersion"`
	// Specifies the enterprise project id of the instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the flavor ID.
	FlavorId *string `pulumi:"flavorId"`
	// Specifies whether to support IPv6. Defaults to **false**.
	// Changing this parameter will create a new resource.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Specifies the config name.
	Name *string `pulumi:"name"`
	// Indicates the metadata address.
	NamesrvAddress *string `pulumi:"namesrvAddress"`
	// Indicates whether billing based on new specifications is enabled.
	NewSpecBillingEnable *bool `pulumi:"newSpecBillingEnable"`
	// Indicates the node quantity.
	NodeNum *int `pulumi:"nodeNum"`
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Indicates the public network service data address.
	PublicBrokerAddress *string `pulumi:"publicBrokerAddress"`
	// Indicates the public network metadata address.
	PublicNamesrvAddress *string `pulumi:"publicNamesrvAddress"`
	// Indicates the public IP address.
	PublicipAddress *string `pulumi:"publicipAddress"`
	// Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
	// multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
	PublicipId *string `pulumi:"publicipId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Indicates the resource specifications.
	ResourceSpecCode *string `pulumi:"resourceSpecCode"`
	// Specifies whether access control is enabled.
	//
	// Deprecated: Use 'enable_acl' instead
	RetentionPolicy *bool `pulumi:"retentionPolicy"`
	// Specifies the ID of a security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
	// and the number of nodes are returned.
	Specification *string `pulumi:"specification"`
	// Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
	// Changing this parameter will create a new resource.
	SslEnable *bool `pulumi:"sslEnable"`
	// Indicates the status of the DMS RocketMQ instance.
	Status *string `pulumi:"status"`
	// Specifies the message storage capacity, Unit: GB.
	// When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
	// When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
	StorageSpace *int `pulumi:"storageSpace"`
	// Specifies the storage I/O specification.
	// The options are as follows:
	// + **dms.physical.storage.high.v2**: high I/O disk
	// + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
	//   Changing this parameter will create a new resource.
	StorageSpecCode *string `pulumi:"storageSpecCode"`
	// Specifies the ID of a subnet.
	// Changing this parameter will create a new resource.
	SubnetId *string `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the instance.
	Tags map[string]string `pulumi:"tags"`
	// Indicates the DMS RocketMQ instance type. Value: cluster.
	Type *string `pulumi:"type"`
	// Indicates the used message storage space. Unit: GB.
	UsedStorageSpace *int `pulumi:"usedStorageSpace"`
	// Specifies the ID of a VPC.
	// Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type DmsRocketmqInstanceState struct {
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrInput
	// Specifies the list of availability zone names, where
	// instance brokers reside and which has available resources.
	//
	// Changing this parameter will create a new resource.
	AvailabilityZones pulumi.StringArrayInput
	// Indicates the service data address.
	BrokerAddress pulumi.StringPtrInput
	// Specifies the broker numbers. It's **required** when instance architecture is
	// **cluster**. Defaults to `1` when instance architecture is **single node**.
	BrokerNum pulumi.IntPtrInput
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the instance configs.
	// The configs structure is documented below.
	//
	// <a name="dmsConfigs"></a>
	// The `configs` block supports:
	Configs DmsRocketmqInstanceConfigArrayInput
	// Indicates the Access information of cross-VPC. The structure is documented below.
	CrossVpcAccesses DmsRocketmqInstanceCrossVpcAccessArrayInput
	// Specifies the description of the DMS RocketMQ instance.
	// The description can contain a maximum of `1,024` characters.
	Description pulumi.StringPtrInput
	// Specifies whether access control is enabled.
	EnableAcl pulumi.BoolPtrInput
	// Specifies whether to enable public access. By default, public access is disabled.
	EnablePublicip pulumi.BoolPtrInput
	// Specifies the version of the RocketMQ engine.
	// Valid values are **4.8.0** and **5.x**.
	// Changing this parameter will create a new resource.
	EngineVersion pulumi.StringPtrInput
	// Specifies the enterprise project id of the instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the flavor ID.
	FlavorId pulumi.StringPtrInput
	// Specifies whether to support IPv6. Defaults to **false**.
	// Changing this parameter will create a new resource.
	Ipv6Enable pulumi.BoolPtrInput
	// Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
	MaintainBegin pulumi.StringPtrInput
	// Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
	MaintainEnd pulumi.StringPtrInput
	// Specifies the config name.
	Name pulumi.StringPtrInput
	// Indicates the metadata address.
	NamesrvAddress pulumi.StringPtrInput
	// Indicates whether billing based on new specifications is enabled.
	NewSpecBillingEnable pulumi.BoolPtrInput
	// Indicates the node quantity.
	NodeNum pulumi.IntPtrInput
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Indicates the public network service data address.
	PublicBrokerAddress pulumi.StringPtrInput
	// Indicates the public network metadata address.
	PublicNamesrvAddress pulumi.StringPtrInput
	// Indicates the public IP address.
	PublicipAddress pulumi.StringPtrInput
	// Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
	// multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
	PublicipId pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Indicates the resource specifications.
	ResourceSpecCode pulumi.StringPtrInput
	// Specifies whether access control is enabled.
	//
	// Deprecated: Use 'enable_acl' instead
	RetentionPolicy pulumi.BoolPtrInput
	// Specifies the ID of a security group.
	SecurityGroupId pulumi.StringPtrInput
	// Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
	// and the number of nodes are returned.
	Specification pulumi.StringPtrInput
	// Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
	// Changing this parameter will create a new resource.
	SslEnable pulumi.BoolPtrInput
	// Indicates the status of the DMS RocketMQ instance.
	Status pulumi.StringPtrInput
	// Specifies the message storage capacity, Unit: GB.
	// When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
	// When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
	StorageSpace pulumi.IntPtrInput
	// Specifies the storage I/O specification.
	// The options are as follows:
	// + **dms.physical.storage.high.v2**: high I/O disk
	// + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
	//   Changing this parameter will create a new resource.
	StorageSpecCode pulumi.StringPtrInput
	// Specifies the ID of a subnet.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the instance.
	Tags pulumi.StringMapInput
	// Indicates the DMS RocketMQ instance type. Value: cluster.
	Type pulumi.StringPtrInput
	// Indicates the used message storage space. Unit: GB.
	UsedStorageSpace pulumi.IntPtrInput
	// Specifies the ID of a VPC.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (DmsRocketmqInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsRocketmqInstanceState)(nil)).Elem()
}

type dmsRocketmqInstanceArgs struct {
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the list of availability zone names, where
	// instance brokers reside and which has available resources.
	//
	// Changing this parameter will create a new resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the broker numbers. It's **required** when instance architecture is
	// **cluster**. Defaults to `1` when instance architecture is **single node**.
	BrokerNum *int `pulumi:"brokerNum"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the instance configs.
	// The configs structure is documented below.
	//
	// <a name="dmsConfigs"></a>
	// The `configs` block supports:
	Configs []DmsRocketmqInstanceConfig `pulumi:"configs"`
	// Specifies the description of the DMS RocketMQ instance.
	// The description can contain a maximum of `1,024` characters.
	Description *string `pulumi:"description"`
	// Specifies whether access control is enabled.
	EnableAcl *bool `pulumi:"enableAcl"`
	// Specifies whether to enable public access. By default, public access is disabled.
	EnablePublicip *bool `pulumi:"enablePublicip"`
	// Specifies the version of the RocketMQ engine.
	// Valid values are **4.8.0** and **5.x**.
	// Changing this parameter will create a new resource.
	EngineVersion string `pulumi:"engineVersion"`
	// Specifies the enterprise project id of the instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the flavor ID.
	FlavorId string `pulumi:"flavorId"`
	// Specifies whether to support IPv6. Defaults to **false**.
	// Changing this parameter will create a new resource.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// Specifies the config name.
	Name *string `pulumi:"name"`
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
	// multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
	PublicipId *string `pulumi:"publicipId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies whether access control is enabled.
	//
	// Deprecated: Use 'enable_acl' instead
	RetentionPolicy *bool `pulumi:"retentionPolicy"`
	// Specifies the ID of a security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
	// Changing this parameter will create a new resource.
	SslEnable *bool `pulumi:"sslEnable"`
	// Specifies the message storage capacity, Unit: GB.
	// When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
	// When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
	StorageSpace int `pulumi:"storageSpace"`
	// Specifies the storage I/O specification.
	// The options are as follows:
	// + **dms.physical.storage.high.v2**: high I/O disk
	// + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
	//   Changing this parameter will create a new resource.
	StorageSpecCode string `pulumi:"storageSpecCode"`
	// Specifies the ID of a subnet.
	// Changing this parameter will create a new resource.
	SubnetId string `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the ID of a VPC.
	// Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a DmsRocketmqInstance resource.
type DmsRocketmqInstanceArgs struct {
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrInput
	// Specifies the list of availability zone names, where
	// instance brokers reside and which has available resources.
	//
	// Changing this parameter will create a new resource.
	AvailabilityZones pulumi.StringArrayInput
	// Specifies the broker numbers. It's **required** when instance architecture is
	// **cluster**. Defaults to `1` when instance architecture is **single node**.
	BrokerNum pulumi.IntPtrInput
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the instance configs.
	// The configs structure is documented below.
	//
	// <a name="dmsConfigs"></a>
	// The `configs` block supports:
	Configs DmsRocketmqInstanceConfigArrayInput
	// Specifies the description of the DMS RocketMQ instance.
	// The description can contain a maximum of `1,024` characters.
	Description pulumi.StringPtrInput
	// Specifies whether access control is enabled.
	EnableAcl pulumi.BoolPtrInput
	// Specifies whether to enable public access. By default, public access is disabled.
	EnablePublicip pulumi.BoolPtrInput
	// Specifies the version of the RocketMQ engine.
	// Valid values are **4.8.0** and **5.x**.
	// Changing this parameter will create a new resource.
	EngineVersion pulumi.StringInput
	// Specifies the enterprise project id of the instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the flavor ID.
	FlavorId pulumi.StringInput
	// Specifies whether to support IPv6. Defaults to **false**.
	// Changing this parameter will create a new resource.
	Ipv6Enable pulumi.BoolPtrInput
	// Specifies the config name.
	Name pulumi.StringPtrInput
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
	// multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
	PublicipId pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies whether access control is enabled.
	//
	// Deprecated: Use 'enable_acl' instead
	RetentionPolicy pulumi.BoolPtrInput
	// Specifies the ID of a security group.
	SecurityGroupId pulumi.StringInput
	// Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
	// Changing this parameter will create a new resource.
	SslEnable pulumi.BoolPtrInput
	// Specifies the message storage capacity, Unit: GB.
	// When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
	// When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
	StorageSpace pulumi.IntInput
	// Specifies the storage I/O specification.
	// The options are as follows:
	// + **dms.physical.storage.high.v2**: high I/O disk
	// + **dms.physical.storage.ultra.v2**: ultra-high I/O disk
	//   Changing this parameter will create a new resource.
	StorageSpecCode pulumi.StringInput
	// Specifies the ID of a subnet.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringInput
	// Specifies the key/value pairs to associate with the instance.
	Tags pulumi.StringMapInput
	// Specifies the ID of a VPC.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (DmsRocketmqInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dmsRocketmqInstanceArgs)(nil)).Elem()
}

type DmsRocketmqInstanceInput interface {
	pulumi.Input

	ToDmsRocketmqInstanceOutput() DmsRocketmqInstanceOutput
	ToDmsRocketmqInstanceOutputWithContext(ctx context.Context) DmsRocketmqInstanceOutput
}

func (*DmsRocketmqInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsRocketmqInstance)(nil)).Elem()
}

func (i *DmsRocketmqInstance) ToDmsRocketmqInstanceOutput() DmsRocketmqInstanceOutput {
	return i.ToDmsRocketmqInstanceOutputWithContext(context.Background())
}

func (i *DmsRocketmqInstance) ToDmsRocketmqInstanceOutputWithContext(ctx context.Context) DmsRocketmqInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqInstanceOutput)
}

// DmsRocketmqInstanceArrayInput is an input type that accepts DmsRocketmqInstanceArray and DmsRocketmqInstanceArrayOutput values.
// You can construct a concrete instance of `DmsRocketmqInstanceArrayInput` via:
//
//	DmsRocketmqInstanceArray{ DmsRocketmqInstanceArgs{...} }
type DmsRocketmqInstanceArrayInput interface {
	pulumi.Input

	ToDmsRocketmqInstanceArrayOutput() DmsRocketmqInstanceArrayOutput
	ToDmsRocketmqInstanceArrayOutputWithContext(context.Context) DmsRocketmqInstanceArrayOutput
}

type DmsRocketmqInstanceArray []DmsRocketmqInstanceInput

func (DmsRocketmqInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsRocketmqInstance)(nil)).Elem()
}

func (i DmsRocketmqInstanceArray) ToDmsRocketmqInstanceArrayOutput() DmsRocketmqInstanceArrayOutput {
	return i.ToDmsRocketmqInstanceArrayOutputWithContext(context.Background())
}

func (i DmsRocketmqInstanceArray) ToDmsRocketmqInstanceArrayOutputWithContext(ctx context.Context) DmsRocketmqInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqInstanceArrayOutput)
}

// DmsRocketmqInstanceMapInput is an input type that accepts DmsRocketmqInstanceMap and DmsRocketmqInstanceMapOutput values.
// You can construct a concrete instance of `DmsRocketmqInstanceMapInput` via:
//
//	DmsRocketmqInstanceMap{ "key": DmsRocketmqInstanceArgs{...} }
type DmsRocketmqInstanceMapInput interface {
	pulumi.Input

	ToDmsRocketmqInstanceMapOutput() DmsRocketmqInstanceMapOutput
	ToDmsRocketmqInstanceMapOutputWithContext(context.Context) DmsRocketmqInstanceMapOutput
}

type DmsRocketmqInstanceMap map[string]DmsRocketmqInstanceInput

func (DmsRocketmqInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsRocketmqInstance)(nil)).Elem()
}

func (i DmsRocketmqInstanceMap) ToDmsRocketmqInstanceMapOutput() DmsRocketmqInstanceMapOutput {
	return i.ToDmsRocketmqInstanceMapOutputWithContext(context.Background())
}

func (i DmsRocketmqInstanceMap) ToDmsRocketmqInstanceMapOutputWithContext(ctx context.Context) DmsRocketmqInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DmsRocketmqInstanceMapOutput)
}

type DmsRocketmqInstanceOutput struct{ *pulumi.OutputState }

func (DmsRocketmqInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DmsRocketmqInstance)(nil)).Elem()
}

func (o DmsRocketmqInstanceOutput) ToDmsRocketmqInstanceOutput() DmsRocketmqInstanceOutput {
	return o
}

func (o DmsRocketmqInstanceOutput) ToDmsRocketmqInstanceOutputWithContext(ctx context.Context) DmsRocketmqInstanceOutput {
	return o
}

// Specifies whether auto renew is enabled. Valid values are "true" and "false".
func (o DmsRocketmqInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the list of availability zone names, where
// instance brokers reside and which has available resources.
//
// Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Indicates the service data address.
func (o DmsRocketmqInstanceOutput) BrokerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.BrokerAddress }).(pulumi.StringOutput)
}

// Specifies the broker numbers. It's **required** when instance architecture is
// **cluster**. Defaults to `1` when instance architecture is **single node**.
func (o DmsRocketmqInstanceOutput) BrokerNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.IntPtrOutput { return v.BrokerNum }).(pulumi.IntPtrOutput)
}

// Specifies the charging mode of the instance. Valid values are *prePaid*
// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
func (o DmsRocketmqInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies the instance configs.
// The configs structure is documented below.
//
// <a name="dmsConfigs"></a>
// The `configs` block supports:
func (o DmsRocketmqInstanceOutput) Configs() DmsRocketmqInstanceConfigArrayOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) DmsRocketmqInstanceConfigArrayOutput { return v.Configs }).(DmsRocketmqInstanceConfigArrayOutput)
}

// Indicates the Access information of cross-VPC. The structure is documented below.
func (o DmsRocketmqInstanceOutput) CrossVpcAccesses() DmsRocketmqInstanceCrossVpcAccessArrayOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) DmsRocketmqInstanceCrossVpcAccessArrayOutput { return v.CrossVpcAccesses }).(DmsRocketmqInstanceCrossVpcAccessArrayOutput)
}

// Specifies the description of the DMS RocketMQ instance.
// The description can contain a maximum of `1,024` characters.
func (o DmsRocketmqInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether access control is enabled.
func (o DmsRocketmqInstanceOutput) EnableAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.BoolOutput { return v.EnableAcl }).(pulumi.BoolOutput)
}

// Specifies whether to enable public access. By default, public access is disabled.
func (o DmsRocketmqInstanceOutput) EnablePublicip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.BoolPtrOutput { return v.EnablePublicip }).(pulumi.BoolPtrOutput)
}

// Specifies the version of the RocketMQ engine.
// Valid values are **4.8.0** and **5.x**.
// Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// Specifies the enterprise project id of the instance.
func (o DmsRocketmqInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies the flavor ID.
func (o DmsRocketmqInstanceOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

// Specifies whether to support IPv6. Defaults to **false**.
// Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) Ipv6Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.BoolPtrOutput { return v.Ipv6Enable }).(pulumi.BoolPtrOutput)
}

// Indicates the time at which the maintenance window starts. The format is HH:mm:ss.
func (o DmsRocketmqInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

// Indicates the time at which the maintenance window ends. The format is HH:mm:ss.
func (o DmsRocketmqInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

// Specifies the config name.
func (o DmsRocketmqInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the metadata address.
func (o DmsRocketmqInstanceOutput) NamesrvAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.NamesrvAddress }).(pulumi.StringOutput)
}

// Indicates whether billing based on new specifications is enabled.
func (o DmsRocketmqInstanceOutput) NewSpecBillingEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.BoolOutput { return v.NewSpecBillingEnable }).(pulumi.BoolOutput)
}

// Indicates the node quantity.
func (o DmsRocketmqInstanceOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.IntOutput { return v.NodeNum }).(pulumi.IntOutput)
}

// Specifies the charging period of the instance. If `periodUnit` is set to *month*
// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from `1` to `3`. This parameter is
// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
func (o DmsRocketmqInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the instance.
// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
// Changing this creates a new resource.
func (o DmsRocketmqInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Indicates the public network service data address.
func (o DmsRocketmqInstanceOutput) PublicBrokerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.PublicBrokerAddress }).(pulumi.StringOutput)
}

// Indicates the public network metadata address.
func (o DmsRocketmqInstanceOutput) PublicNamesrvAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.PublicNamesrvAddress }).(pulumi.StringOutput)
}

// Indicates the public IP address.
func (o DmsRocketmqInstanceOutput) PublicipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.PublicipAddress }).(pulumi.StringOutput)
}

// Specifies the ID of the EIP bound to the instance. Use commas (,) to separate
// multiple EIP IDs. It is mandatory if `enablePublicip` is **true** and should be empty when `enablePublicip` is **false**.
func (o DmsRocketmqInstanceOutput) PublicipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringPtrOutput { return v.PublicipId }).(pulumi.StringPtrOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates the resource specifications.
func (o DmsRocketmqInstanceOutput) ResourceSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.ResourceSpecCode }).(pulumi.StringOutput)
}

// Specifies whether access control is enabled.
//
// Deprecated: Use 'enable_acl' instead
func (o DmsRocketmqInstanceOutput) RetentionPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.BoolOutput { return v.RetentionPolicy }).(pulumi.BoolOutput)
}

// Specifies the ID of a security group.
func (o DmsRocketmqInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates the instance specification. For a cluster DMS RocketMQ instance, VM specifications
// and the number of nodes are returned.
func (o DmsRocketmqInstanceOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.Specification }).(pulumi.StringOutput)
}

// Specifies whether the RocketMQ SASL_SSL is enabled. Defaults to **false**.
// Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.BoolOutput { return v.SslEnable }).(pulumi.BoolOutput)
}

// Indicates the status of the DMS RocketMQ instance.
func (o DmsRocketmqInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the message storage capacity, Unit: GB.
// When `engineVersion` is **4.8.0**, value ranges from `300` to `30,000`.
// When `engineVersion` is **5.x**, value ranges from `200` to `60,000`.
func (o DmsRocketmqInstanceOutput) StorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.IntOutput { return v.StorageSpace }).(pulumi.IntOutput)
}

// Specifies the storage I/O specification.
// The options are as follows:
//   - **dms.physical.storage.high.v2**: high I/O disk
//   - **dms.physical.storage.ultra.v2**: ultra-high I/O disk
//     Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.StorageSpecCode }).(pulumi.StringOutput)
}

// Specifies the ID of a subnet.
// Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the instance.
func (o DmsRocketmqInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Indicates the DMS RocketMQ instance type. Value: cluster.
func (o DmsRocketmqInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Indicates the used message storage space. Unit: GB.
func (o DmsRocketmqInstanceOutput) UsedStorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.IntOutput { return v.UsedStorageSpace }).(pulumi.IntOutput)
}

// Specifies the ID of a VPC.
// Changing this parameter will create a new resource.
func (o DmsRocketmqInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DmsRocketmqInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type DmsRocketmqInstanceArrayOutput struct{ *pulumi.OutputState }

func (DmsRocketmqInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DmsRocketmqInstance)(nil)).Elem()
}

func (o DmsRocketmqInstanceArrayOutput) ToDmsRocketmqInstanceArrayOutput() DmsRocketmqInstanceArrayOutput {
	return o
}

func (o DmsRocketmqInstanceArrayOutput) ToDmsRocketmqInstanceArrayOutputWithContext(ctx context.Context) DmsRocketmqInstanceArrayOutput {
	return o
}

func (o DmsRocketmqInstanceArrayOutput) Index(i pulumi.IntInput) DmsRocketmqInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DmsRocketmqInstance {
		return vs[0].([]*DmsRocketmqInstance)[vs[1].(int)]
	}).(DmsRocketmqInstanceOutput)
}

type DmsRocketmqInstanceMapOutput struct{ *pulumi.OutputState }

func (DmsRocketmqInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DmsRocketmqInstance)(nil)).Elem()
}

func (o DmsRocketmqInstanceMapOutput) ToDmsRocketmqInstanceMapOutput() DmsRocketmqInstanceMapOutput {
	return o
}

func (o DmsRocketmqInstanceMapOutput) ToDmsRocketmqInstanceMapOutputWithContext(ctx context.Context) DmsRocketmqInstanceMapOutput {
	return o
}

func (o DmsRocketmqInstanceMapOutput) MapIndex(k pulumi.StringInput) DmsRocketmqInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DmsRocketmqInstance {
		return vs[0].(map[string]*DmsRocketmqInstance)[vs[1].(string)]
	}).(DmsRocketmqInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqInstanceInput)(nil)).Elem(), &DmsRocketmqInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqInstanceArrayInput)(nil)).Elem(), DmsRocketmqInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DmsRocketmqInstanceMapInput)(nil)).Elem(), DmsRocketmqInstanceMap{})
	pulumi.RegisterOutputType(DmsRocketmqInstanceOutput{})
	pulumi.RegisterOutputType(DmsRocketmqInstanceArrayOutput{})
	pulumi.RegisterOutputType(DmsRocketmqInstanceMapOutput{})
}
