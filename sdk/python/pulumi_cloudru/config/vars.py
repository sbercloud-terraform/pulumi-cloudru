# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

import types

__config__ = pulumi.Config('sbercloud')


class _ExportableConfig(types.ModuleType):
    @property
    def access_key(self) -> Optional[str]:
        """
        The access key of the SberCloud to use.
        """
        return __config__.get('accessKey')

    @property
    def account_name(self) -> Optional[str]:
        """
        The name of the Account to login with.
        """
        return __config__.get('accountName')

    @property
    def assume_role(self) -> Optional[str]:
        return __config__.get('assumeRole')

    @property
    def auth_url(self) -> Optional[str]:
        """
        The Identity authentication URL.
        """
        return __config__.get('authUrl')

    @property
    def domain_id(self) -> Optional[str]:
        return __config__.get('domainId')

    @property
    def domain_name(self) -> Optional[str]:
        return __config__.get('domainName')

    @property
    def endpoints(self) -> Optional[str]:
        """
        The custom endpoints used to override the default endpoint URL.
        """
        return __config__.get('endpoints')

    @property
    def enterprise_project_id(self) -> Optional[str]:
        return __config__.get('enterpriseProjectId')

    @property
    def insecure(self) -> Optional[bool]:
        """
        Trust self-signed certificates.
        """
        return __config__.get_bool('insecure')

    @property
    def max_retries(self) -> Optional[int]:
        return __config__.get_int('maxRetries')

    @property
    def password(self) -> Optional[str]:
        """
        Password to login with.
        """
        return __config__.get('password')

    @property
    def project_name(self) -> Optional[str]:
        """
        The name of the Project to login with.
        """
        return __config__.get('projectName')

    @property
    def region(self) -> Optional[str]:
        """
        The SberCloud region to connect to.
        """
        return __config__.get('region')

    @property
    def secret_key(self) -> Optional[str]:
        """
        The secret key of the SberCloud to use.
        """
        return __config__.get('secretKey')

    @property
    def security_token(self) -> Optional[str]:
        """
        The security token to authenticate with a temporary security credential.
        """
        return __config__.get('securityToken')

    @property
    def user_name(self) -> Optional[str]:
        """
        Username to login with.
        """
        return __config__.get('userName')

