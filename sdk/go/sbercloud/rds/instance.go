// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manage RDS instance resource within SberCloud.
//
// ## Example Usage
//
// ### create a single db instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			availabilityZone := cfg.RequireObject("availabilityZone")
//			postgreSQLPassword := cfg.RequireObject("postgreSQLPassword")
//			_, err := rds.NewInstance(ctx, "instance", &rds.InstanceArgs{
//				Name:            pulumi.String("terraform_test_rds_instance"),
//				Flavor:          pulumi.String("rds.pg.n1.large.2"),
//				VpcId:           pulumi.Any(vpcId),
//				SubnetId:        pulumi.Any(subnetId),
//				SecurityGroupId: pulumi.Any(secgroupId),
//				AvailabilityZones: pulumi.StringArray{
//					availabilityZone,
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.Any(postgreSQLPassword),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type: pulumi.String("ULTRAHIGH"),
//					Size: pulumi.Int(100),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### create a primary/standby db instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			availabilityZone1 := cfg.RequireObject("availabilityZone1")
//			availabilityZone2 := cfg.RequireObject("availabilityZone2")
//			postgreSQLPassword := cfg.RequireObject("postgreSQLPassword")
//			_, err := rds.NewInstance(ctx, "instance", &rds.InstanceArgs{
//				Name:              pulumi.String("terraform_test_rds_instance"),
//				Flavor:            pulumi.String("rds.pg.n1.large.2.ha"),
//				HaReplicationMode: pulumi.String("async"),
//				VpcId:             pulumi.Any(vpcId),
//				SubnetId:          pulumi.Any(subnetId),
//				SecurityGroupId:   pulumi.Any(secgroupId),
//				AvailabilityZones: pulumi.StringArray{
//					availabilityZone1Config,
//					availabilityZone2Config,
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.Any(postgreSQLPassword),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type: pulumi.String("ULTRAHIGH"),
//					Size: pulumi.Int(100),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### create a single db instance with encrypted volume
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			availabilityZone := cfg.RequireObject("availabilityZone")
//			kmsId := cfg.RequireObject("kmsId")
//			postgreSQLPassword := cfg.RequireObject("postgreSQLPassword")
//			_, err := rds.NewInstance(ctx, "instance", &rds.InstanceArgs{
//				Name:            pulumi.String("terraform_test_rds_instance"),
//				Flavor:          pulumi.String("rds.pg.n1.large.2"),
//				VpcId:           pulumi.Any(vpcId),
//				SubnetId:        pulumi.Any(subnetId),
//				SecurityGroupId: pulumi.Any(secgroupId),
//				AvailabilityZones: pulumi.StringArray{
//					availabilityZone,
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.Any(postgreSQLPassword),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type:             pulumi.String("ULTRAHIGH"),
//					Size:             pulumi.Int(100),
//					DiskEncryptionId: pulumi.Any(kmsId),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### create db instance with customized parameters
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			availabilityZone := cfg.RequireObject("availabilityZone")
//			postgreSQLPassword := cfg.RequireObject("postgreSQLPassword")
//			_, err := rds.NewInstance(ctx, "instance", &rds.InstanceArgs{
//				Name:            pulumi.String("terraform_test_rds_instance"),
//				Flavor:          pulumi.String("rds.pg.n1.large.2"),
//				VpcId:           pulumi.Any(vpcId),
//				SubnetId:        pulumi.Any(subnetId),
//				SecurityGroupId: pulumi.Any(secgroupId),
//				AvailabilityZones: pulumi.StringArray{
//					availabilityZone,
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.Any(postgreSQLPassword),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type: pulumi.String("ULTRAHIGH"),
//					Size: pulumi.Int(100),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//				Parameters: rds.InstanceParameterArray{
//					&rds.InstanceParameterArgs{
//						Name:  pulumi.String("div_precision_increment"),
//						Value: pulumi.String("12"),
//					},
//					&rds.InstanceParameterArgs{
//						Name:  pulumi.String("connect_timeout"),
//						Value: pulumi.String("13"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RDS instance can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import sbercloud:Rds/instance:Instance instance_1 52e4b497d2c94df88a2eb4c661314903in01
// ```
//
// # Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
//
// API response, security or some other reason. The missing attributes include: `db`, `collation`, `availability_zone`,
//
// `lower_case_table_names`,`slow_log_show_original_status`. It is generally recommended running `pulumi preview` after
//
// importing a RDS instance. You can then decide if changes should be applied to the instance, or the resource definition
//
// should be updated to align with the instance. Also, you can ignore changes as below.
//
// hcl
//
// resource "sbercloud_rds_instance" "instance_1" {
//
//	...
//
//	lifecycle {
//
//	  ignore_changes = [
//
//	    "db", "collation", "availability_zone", "lower_case_table_names", "slow_log_show_original_status"
//
//	  ]
//
//	}
//
// }
type Instance struct {
	pulumi.CustomResourceState

	// Deprecated: Deprecated
	AutoPay pulumi.StringPtrOutput `pulumi:"autoPay"`
	// Specifies whether auto-renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy InstanceBackupStrategyOutput `pulumi:"backupStrategy"`
	// Specify the binlog retention period in hours. This parameter applies only to
	// MySQL Server databases. Value range: **0** to **168 (7x24)**.
	BinlogRetentionHours pulumi.IntPtrOutput `pulumi:"binlogRetentionHours"`
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	Collation pulumi.StringOutput `pulumi:"collation"`
	// Indicates the creation time.
	Created pulumi.StringOutput `pulumi:"created"`
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDbOutput `pulumi:"db"`
	// Specifies the description of the instance. The value consists of 0 to 64
	// characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the exclusive storage ID for Dec users. It is different for each az
	// configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
	// and separated by commas if database instance type is not standalone or read-only.
	DssPoolId pulumi.StringPtrOutput `pulumi:"dssPoolId"`
	// Specifies the enterprise project id of the RDS instance.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies an intranet floating IP address of RDS DB instance.
	FixedIp pulumi.StringOutput `pulumi:"fixedIp"`
	// Specifies the specification code.
	//
	// > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
	// changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
	// security group and cannot be deleted for 12 hours.
	Flavor pulumi.StringOutput `pulumi:"flavor"`
	// Required for HA instances. Specifies the replication mode for the standby DB instance.
	// + For MySQL, the value is **async** or **semisync**.
	// + For PostgreSQL, the value is **async** or **sync**.
	// + For Microsoft SQL Server, the value is **sync**.
	//
	// > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
	// replication mode. **sync** indicates the synchronous replication mode.
	HaReplicationMode pulumi.StringOutput `pulumi:"haReplicationMode"`
	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	// + 0: Table names are stored as fixed and table names are case-sensitive.
	// + 1: Table names will be stored in lower case and table names are not case-sensitive.
	LowerCaseTableNames pulumi.StringPtrOutput `pulumi:"lowerCaseTableNames"`
	// Specifies the time at which the maintenance time window starts, for example, **22:00**.
	MaintainBegin pulumi.StringOutput `pulumi:"maintainBegin"`
	// Specifies the time at which the maintenance time window ends, for example, **01:00**.
	//
	// > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
	// hour, and the interval between them must be one to four hours.<br>
	// For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
	MaintainEnd pulumi.StringOutput `pulumi:"maintainEnd"`
	// Specify the host information for MSDTC.
	// The msdtcHosts structure is documented below.
	//
	// > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
	MsdtcHosts InstanceMsdtcHostArrayOutput `pulumi:"msdtcHosts"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes InstanceNodeArrayOutput `pulumi:"nodes"`
	// Specifies the parameter group ID.
	ParamGroupId pulumi.StringPtrOutput `pulumi:"paramGroupId"`
	// Specify an array of one or more parameters to be set to the RDS instance after
	// launched. You can check on console to see which parameters supported. Structure is documented below.
	Parameters InstanceParameterArrayOutput `pulumi:"parameters"`
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
	// creates a new resource.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Specifies the power action to be done for the instance.
	// Value options: **ON**, **OFF** and **REBOOT**.
	//
	// > **NOTE:** The `powerAction` is a one-time action.
	PowerAction pulumi.StringOutput `pulumi:"powerAction"`
	// Specifies the prefix of the private domain name. The value contains
	// **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix pulumi.StringOutput `pulumi:"privateDnsNamePrefix"`
	// Indicates the private domain name list of the DB instance.
	PrivateDnsNames pulumi.StringArrayOutput `pulumi:"privateDnsNames"`
	// Indicates the private IP address list. It is a blank string until an ECS is created.
	PrivateIps pulumi.StringArrayOutput `pulumi:"privateIps"`
	// Indicates the public IP address list.
	PublicIps pulumi.StringArrayOutput `pulumi:"publicIps"`
	// Specifies the read write permissions of the instance. Valid values:
	// + **readwrite**: read write permissions.
	// + **readonly**: readonly permissions.
	ReadWritePermissions pulumi.StringPtrOutput `pulumi:"readWritePermissions"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the restoration information. It only supported restore to postpaid
	// instance. Structure is documented below. Changing this parameter will create a new resource.
	Restore InstanceRestorePtrOutput `pulumi:"restore"`
	// Specifies the rotation days of TDE rotation.
	RotateDay pulumi.IntPtrOutput `pulumi:"rotateDay"`
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled pulumi.BoolOutput `pulumi:"secondsLevelMonitoringEnabled"`
	// Specifies the seconds level monitoring interval. Valid values:
	// **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
	SecondsLevelMonitoringInterval pulumi.IntOutput `pulumi:"secondsLevelMonitoringInterval"`
	// Specifies the key ID of TDE rotation.
	SecretId pulumi.StringPtrOutput `pulumi:"secretId"`
	// Specifies the key name of TDE rotation.
	SecretName pulumi.StringPtrOutput `pulumi:"secretName"`
	// Specifies the key version of TDE rotation.
	//
	// > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
	// is **true**.
	SecretVersion pulumi.StringPtrOutput `pulumi:"secretVersion"`
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies the slow log show original status of the instance.
	// Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
	SlowLogShowOriginalStatus pulumi.StringPtrOutput `pulumi:"slowLogShowOriginalStatus"`
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable pulumi.BoolOutput `pulumi:"sslEnable"`
	// Indicates the node status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Specifies the database switchover policy.
	// + **reliability**: reliability first.
	// + **availability**: availability first.
	//
	// Defaults to **reliability**.
	SwitchStrategy pulumi.StringOutput `pulumi:"switchStrategy"`
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies whether enable TDE for the instance.
	//
	// > **NOTE:** TDE cannot be disabled after being enabled.
	TdeEnabled pulumi.BoolOutput `pulumi:"tdeEnabled"`
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolumeOutput `pulumi:"volume"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZones == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZones'")
	}
	if args.Db == nil {
		return nil, errors.New("invalid value for required argument 'Db'")
	}
	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Volume == nil {
		return nil, errors.New("invalid value for required argument 'Volume'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("sbercloud:Rds/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("sbercloud:Rds/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Deprecated: Deprecated
	AutoPay *string `pulumi:"autoPay"`
	// Specifies whether auto-renew is enabled. Valid values are "true" and "false".
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *InstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specify the binlog retention period in hours. This parameter applies only to
	// MySQL Server databases. Value range: **0** to **168 (7x24)**.
	BinlogRetentionHours *int `pulumi:"binlogRetentionHours"`
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	Collation *string `pulumi:"collation"`
	// Indicates the creation time.
	Created *string `pulumi:"created"`
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db *InstanceDb `pulumi:"db"`
	// Specifies the description of the instance. The value consists of 0 to 64
	// characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
	Description *string `pulumi:"description"`
	// Specifies the exclusive storage ID for Dec users. It is different for each az
	// configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
	// and separated by commas if database instance type is not standalone or read-only.
	DssPoolId *string `pulumi:"dssPoolId"`
	// Specifies the enterprise project id of the RDS instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies an intranet floating IP address of RDS DB instance.
	FixedIp *string `pulumi:"fixedIp"`
	// Specifies the specification code.
	//
	// > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
	// changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
	// security group and cannot be deleted for 12 hours.
	Flavor *string `pulumi:"flavor"`
	// Required for HA instances. Specifies the replication mode for the standby DB instance.
	// + For MySQL, the value is **async** or **semisync**.
	// + For PostgreSQL, the value is **async** or **sync**.
	// + For Microsoft SQL Server, the value is **sync**.
	//
	// > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
	// replication mode. **sync** indicates the synchronous replication mode.
	HaReplicationMode *string `pulumi:"haReplicationMode"`
	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	// + 0: Table names are stored as fixed and table names are case-sensitive.
	// + 1: Table names will be stored in lower case and table names are not case-sensitive.
	LowerCaseTableNames *string `pulumi:"lowerCaseTableNames"`
	// Specifies the time at which the maintenance time window starts, for example, **22:00**.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Specifies the time at which the maintenance time window ends, for example, **01:00**.
	//
	// > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
	// hour, and the interval between them must be one to four hours.<br>
	// For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Specify the host information for MSDTC.
	// The msdtcHosts structure is documented below.
	//
	// > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
	MsdtcHosts []InstanceMsdtcHost `pulumi:"msdtcHosts"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []InstanceNode `pulumi:"nodes"`
	// Specifies the parameter group ID.
	ParamGroupId *string `pulumi:"paramGroupId"`
	// Specify an array of one or more parameters to be set to the RDS instance after
	// launched. You can check on console to see which parameters supported. Structure is documented below.
	Parameters []InstanceParameter `pulumi:"parameters"`
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
	// creates a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the power action to be done for the instance.
	// Value options: **ON**, **OFF** and **REBOOT**.
	//
	// > **NOTE:** The `powerAction` is a one-time action.
	PowerAction *string `pulumi:"powerAction"`
	// Specifies the prefix of the private domain name. The value contains
	// **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix *string `pulumi:"privateDnsNamePrefix"`
	// Indicates the private domain name list of the DB instance.
	PrivateDnsNames []string `pulumi:"privateDnsNames"`
	// Indicates the private IP address list. It is a blank string until an ECS is created.
	PrivateIps []string `pulumi:"privateIps"`
	// Indicates the public IP address list.
	PublicIps []string `pulumi:"publicIps"`
	// Specifies the read write permissions of the instance. Valid values:
	// + **readwrite**: read write permissions.
	// + **readonly**: readonly permissions.
	ReadWritePermissions *string `pulumi:"readWritePermissions"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region *string `pulumi:"region"`
	// Specifies the restoration information. It only supported restore to postpaid
	// instance. Structure is documented below. Changing this parameter will create a new resource.
	Restore *InstanceRestore `pulumi:"restore"`
	// Specifies the rotation days of TDE rotation.
	RotateDay *int `pulumi:"rotateDay"`
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled *bool `pulumi:"secondsLevelMonitoringEnabled"`
	// Specifies the seconds level monitoring interval. Valid values:
	// **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
	SecondsLevelMonitoringInterval *int `pulumi:"secondsLevelMonitoringInterval"`
	// Specifies the key ID of TDE rotation.
	SecretId *string `pulumi:"secretId"`
	// Specifies the key name of TDE rotation.
	SecretName *string `pulumi:"secretName"`
	// Specifies the key version of TDE rotation.
	//
	// > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
	// is **true**.
	SecretVersion *string `pulumi:"secretVersion"`
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the slow log show original status of the instance.
	// Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
	SlowLogShowOriginalStatus *string `pulumi:"slowLogShowOriginalStatus"`
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable *bool `pulumi:"sslEnable"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId *string `pulumi:"subnetId"`
	// Specifies the database switchover policy.
	// + **reliability**: reliability first.
	// + **availability**: availability first.
	//
	// Defaults to **reliability**.
	SwitchStrategy *string `pulumi:"switchStrategy"`
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags map[string]string `pulumi:"tags"`
	// Specifies whether enable TDE for the instance.
	//
	// > **NOTE:** TDE cannot be disabled after being enabled.
	TdeEnabled *bool `pulumi:"tdeEnabled"`
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume information. Structure is documented below.
	Volume *InstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type InstanceState struct {
	// Deprecated: Deprecated
	AutoPay pulumi.StringPtrInput
	// Specifies whether auto-renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrInput
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones pulumi.StringArrayInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy InstanceBackupStrategyPtrInput
	// Specify the binlog retention period in hours. This parameter applies only to
	// MySQL Server databases. Value range: **0** to **168 (7x24)**.
	BinlogRetentionHours pulumi.IntPtrInput
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	Collation pulumi.StringPtrInput
	// Indicates the creation time.
	Created pulumi.StringPtrInput
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDbPtrInput
	// Specifies the description of the instance. The value consists of 0 to 64
	// characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
	Description pulumi.StringPtrInput
	// Specifies the exclusive storage ID for Dec users. It is different for each az
	// configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
	// and separated by commas if database instance type is not standalone or read-only.
	DssPoolId pulumi.StringPtrInput
	// Specifies the enterprise project id of the RDS instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies an intranet floating IP address of RDS DB instance.
	FixedIp pulumi.StringPtrInput
	// Specifies the specification code.
	//
	// > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
	// changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
	// security group and cannot be deleted for 12 hours.
	Flavor pulumi.StringPtrInput
	// Required for HA instances. Specifies the replication mode for the standby DB instance.
	// + For MySQL, the value is **async** or **semisync**.
	// + For PostgreSQL, the value is **async** or **sync**.
	// + For Microsoft SQL Server, the value is **sync**.
	//
	// > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
	// replication mode. **sync** indicates the synchronous replication mode.
	HaReplicationMode pulumi.StringPtrInput
	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	// + 0: Table names are stored as fixed and table names are case-sensitive.
	// + 1: Table names will be stored in lower case and table names are not case-sensitive.
	LowerCaseTableNames pulumi.StringPtrInput
	// Specifies the time at which the maintenance time window starts, for example, **22:00**.
	MaintainBegin pulumi.StringPtrInput
	// Specifies the time at which the maintenance time window ends, for example, **01:00**.
	//
	// > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
	// hour, and the interval between them must be one to four hours.<br>
	// For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
	MaintainEnd pulumi.StringPtrInput
	// Specify the host information for MSDTC.
	// The msdtcHosts structure is documented below.
	//
	// > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
	MsdtcHosts InstanceMsdtcHostArrayInput
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput
	// Indicates the instance nodes information. Structure is documented below.
	Nodes InstanceNodeArrayInput
	// Specifies the parameter group ID.
	ParamGroupId pulumi.StringPtrInput
	// Specify an array of one or more parameters to be set to the RDS instance after
	// launched. You can check on console to see which parameters supported. Structure is documented below.
	Parameters InstanceParameterArrayInput
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
	// creates a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the power action to be done for the instance.
	// Value options: **ON**, **OFF** and **REBOOT**.
	//
	// > **NOTE:** The `powerAction` is a one-time action.
	PowerAction pulumi.StringPtrInput
	// Specifies the prefix of the private domain name. The value contains
	// **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix pulumi.StringPtrInput
	// Indicates the private domain name list of the DB instance.
	PrivateDnsNames pulumi.StringArrayInput
	// Indicates the private IP address list. It is a blank string until an ECS is created.
	PrivateIps pulumi.StringArrayInput
	// Indicates the public IP address list.
	PublicIps pulumi.StringArrayInput
	// Specifies the read write permissions of the instance. Valid values:
	// + **readwrite**: read write permissions.
	// + **readonly**: readonly permissions.
	ReadWritePermissions pulumi.StringPtrInput
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region pulumi.StringPtrInput
	// Specifies the restoration information. It only supported restore to postpaid
	// instance. Structure is documented below. Changing this parameter will create a new resource.
	Restore InstanceRestorePtrInput
	// Specifies the rotation days of TDE rotation.
	RotateDay pulumi.IntPtrInput
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled pulumi.BoolPtrInput
	// Specifies the seconds level monitoring interval. Valid values:
	// **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
	SecondsLevelMonitoringInterval pulumi.IntPtrInput
	// Specifies the key ID of TDE rotation.
	SecretId pulumi.StringPtrInput
	// Specifies the key name of TDE rotation.
	SecretName pulumi.StringPtrInput
	// Specifies the key version of TDE rotation.
	//
	// > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
	// is **true**.
	SecretVersion pulumi.StringPtrInput
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the slow log show original status of the instance.
	// Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
	SlowLogShowOriginalStatus pulumi.StringPtrInput
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable pulumi.BoolPtrInput
	// Indicates the node status.
	Status pulumi.StringPtrInput
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringPtrInput
	// Specifies the database switchover policy.
	// + **reliability**: reliability first.
	// + **availability**: availability first.
	//
	// Defaults to **reliability**.
	SwitchStrategy pulumi.StringPtrInput
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags pulumi.StringMapInput
	// Specifies whether enable TDE for the instance.
	//
	// > **NOTE:** TDE cannot be disabled after being enabled.
	TdeEnabled pulumi.BoolPtrInput
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolumePtrInput
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Deprecated: Deprecated
	AutoPay *string `pulumi:"autoPay"`
	// Specifies whether auto-renew is enabled. Valid values are "true" and "false".
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *InstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specify the binlog retention period in hours. This parameter applies only to
	// MySQL Server databases. Value range: **0** to **168 (7x24)**.
	BinlogRetentionHours *int `pulumi:"binlogRetentionHours"`
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	Collation *string `pulumi:"collation"`
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDb `pulumi:"db"`
	// Specifies the description of the instance. The value consists of 0 to 64
	// characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
	Description *string `pulumi:"description"`
	// Specifies the exclusive storage ID for Dec users. It is different for each az
	// configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
	// and separated by commas if database instance type is not standalone or read-only.
	DssPoolId *string `pulumi:"dssPoolId"`
	// Specifies the enterprise project id of the RDS instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies an intranet floating IP address of RDS DB instance.
	FixedIp *string `pulumi:"fixedIp"`
	// Specifies the specification code.
	//
	// > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
	// changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
	// security group and cannot be deleted for 12 hours.
	Flavor string `pulumi:"flavor"`
	// Required for HA instances. Specifies the replication mode for the standby DB instance.
	// + For MySQL, the value is **async** or **semisync**.
	// + For PostgreSQL, the value is **async** or **sync**.
	// + For Microsoft SQL Server, the value is **sync**.
	//
	// > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
	// replication mode. **sync** indicates the synchronous replication mode.
	HaReplicationMode *string `pulumi:"haReplicationMode"`
	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	// + 0: Table names are stored as fixed and table names are case-sensitive.
	// + 1: Table names will be stored in lower case and table names are not case-sensitive.
	LowerCaseTableNames *string `pulumi:"lowerCaseTableNames"`
	// Specifies the time at which the maintenance time window starts, for example, **22:00**.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Specifies the time at which the maintenance time window ends, for example, **01:00**.
	//
	// > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
	// hour, and the interval between them must be one to four hours.<br>
	// For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Specify the host information for MSDTC.
	// The msdtcHosts structure is documented below.
	//
	// > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
	MsdtcHosts []InstanceMsdtcHost `pulumi:"msdtcHosts"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Specifies the parameter group ID.
	ParamGroupId *string `pulumi:"paramGroupId"`
	// Specify an array of one or more parameters to be set to the RDS instance after
	// launched. You can check on console to see which parameters supported. Structure is documented below.
	Parameters []InstanceParameter `pulumi:"parameters"`
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
	// creates a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the power action to be done for the instance.
	// Value options: **ON**, **OFF** and **REBOOT**.
	//
	// > **NOTE:** The `powerAction` is a one-time action.
	PowerAction *string `pulumi:"powerAction"`
	// Specifies the prefix of the private domain name. The value contains
	// **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix *string `pulumi:"privateDnsNamePrefix"`
	// Specifies the read write permissions of the instance. Valid values:
	// + **readwrite**: read write permissions.
	// + **readonly**: readonly permissions.
	ReadWritePermissions *string `pulumi:"readWritePermissions"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region *string `pulumi:"region"`
	// Specifies the restoration information. It only supported restore to postpaid
	// instance. Structure is documented below. Changing this parameter will create a new resource.
	Restore *InstanceRestore `pulumi:"restore"`
	// Specifies the rotation days of TDE rotation.
	RotateDay *int `pulumi:"rotateDay"`
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled *bool `pulumi:"secondsLevelMonitoringEnabled"`
	// Specifies the seconds level monitoring interval. Valid values:
	// **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
	SecondsLevelMonitoringInterval *int `pulumi:"secondsLevelMonitoringInterval"`
	// Specifies the key ID of TDE rotation.
	SecretId *string `pulumi:"secretId"`
	// Specifies the key name of TDE rotation.
	SecretName *string `pulumi:"secretName"`
	// Specifies the key version of TDE rotation.
	//
	// > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
	// is **true**.
	SecretVersion *string `pulumi:"secretVersion"`
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Specifies the slow log show original status of the instance.
	// Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
	SlowLogShowOriginalStatus *string `pulumi:"slowLogShowOriginalStatus"`
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable *bool `pulumi:"sslEnable"`
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId string `pulumi:"subnetId"`
	// Specifies the database switchover policy.
	// + **reliability**: reliability first.
	// + **availability**: availability first.
	//
	// Defaults to **reliability**.
	SwitchStrategy *string `pulumi:"switchStrategy"`
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags map[string]string `pulumi:"tags"`
	// Specifies whether enable TDE for the instance.
	//
	// > **NOTE:** TDE cannot be disabled after being enabled.
	TdeEnabled *bool `pulumi:"tdeEnabled"`
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Deprecated: Deprecated
	AutoPay pulumi.StringPtrInput
	// Specifies whether auto-renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrInput
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones pulumi.StringArrayInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy InstanceBackupStrategyPtrInput
	// Specify the binlog retention period in hours. This parameter applies only to
	// MySQL Server databases. Value range: **0** to **168 (7x24)**.
	BinlogRetentionHours pulumi.IntPtrInput
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	Collation pulumi.StringPtrInput
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDbInput
	// Specifies the description of the instance. The value consists of 0 to 64
	// characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
	Description pulumi.StringPtrInput
	// Specifies the exclusive storage ID for Dec users. It is different for each az
	// configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
	// and separated by commas if database instance type is not standalone or read-only.
	DssPoolId pulumi.StringPtrInput
	// Specifies the enterprise project id of the RDS instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies an intranet floating IP address of RDS DB instance.
	FixedIp pulumi.StringPtrInput
	// Specifies the specification code.
	//
	// > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
	// changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
	// security group and cannot be deleted for 12 hours.
	Flavor pulumi.StringInput
	// Required for HA instances. Specifies the replication mode for the standby DB instance.
	// + For MySQL, the value is **async** or **semisync**.
	// + For PostgreSQL, the value is **async** or **sync**.
	// + For Microsoft SQL Server, the value is **sync**.
	//
	// > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
	// replication mode. **sync** indicates the synchronous replication mode.
	HaReplicationMode pulumi.StringPtrInput
	// Specifies the case-sensitive state of the database table name,
	// the default value is "1". Changing this parameter will create a new resource.
	// + 0: Table names are stored as fixed and table names are case-sensitive.
	// + 1: Table names will be stored in lower case and table names are not case-sensitive.
	LowerCaseTableNames pulumi.StringPtrInput
	// Specifies the time at which the maintenance time window starts, for example, **22:00**.
	MaintainBegin pulumi.StringPtrInput
	// Specifies the time at which the maintenance time window ends, for example, **01:00**.
	//
	// > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
	// hour, and the interval between them must be one to four hours.<br>
	// For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
	MaintainEnd pulumi.StringPtrInput
	// Specify the host information for MSDTC.
	// The msdtcHosts structure is documented below.
	//
	// > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
	MsdtcHosts InstanceMsdtcHostArrayInput
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput
	// Specifies the parameter group ID.
	ParamGroupId pulumi.StringPtrInput
	// Specify an array of one or more parameters to be set to the RDS instance after
	// launched. You can check on console to see which parameters supported. Structure is documented below.
	Parameters InstanceParameterArrayInput
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
	// creates a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the power action to be done for the instance.
	// Value options: **ON**, **OFF** and **REBOOT**.
	//
	// > **NOTE:** The `powerAction` is a one-time action.
	PowerAction pulumi.StringPtrInput
	// Specifies the prefix of the private domain name. The value contains
	// **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix pulumi.StringPtrInput
	// Specifies the read write permissions of the instance. Valid values:
	// + **readwrite**: read write permissions.
	// + **readonly**: readonly permissions.
	ReadWritePermissions pulumi.StringPtrInput
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region pulumi.StringPtrInput
	// Specifies the restoration information. It only supported restore to postpaid
	// instance. Structure is documented below. Changing this parameter will create a new resource.
	Restore InstanceRestorePtrInput
	// Specifies the rotation days of TDE rotation.
	RotateDay pulumi.IntPtrInput
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled pulumi.BoolPtrInput
	// Specifies the seconds level monitoring interval. Valid values:
	// **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
	SecondsLevelMonitoringInterval pulumi.IntPtrInput
	// Specifies the key ID of TDE rotation.
	SecretId pulumi.StringPtrInput
	// Specifies the key name of TDE rotation.
	SecretName pulumi.StringPtrInput
	// Specifies the key version of TDE rotation.
	//
	// > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
	// is **true**.
	SecretVersion pulumi.StringPtrInput
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId pulumi.StringInput
	// Specifies the slow log show original status of the instance.
	// Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
	SlowLogShowOriginalStatus pulumi.StringPtrInput
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable pulumi.BoolPtrInput
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringInput
	// Specifies the database switchover policy.
	// + **reliability**: reliability first.
	// + **availability**: availability first.
	//
	// Defaults to **reliability**.
	SwitchStrategy pulumi.StringPtrInput
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags pulumi.StringMapInput
	// Specifies whether enable TDE for the instance.
	//
	// > **NOTE:** TDE cannot be disabled after being enabled.
	TdeEnabled pulumi.BoolPtrInput
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolumeInput
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Deprecated: Deprecated
func (o InstanceOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

// Specifies whether auto-renew is enabled. Valid values are "true" and "false".
func (o InstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the list of AZ name. Changing this parameter will create a
// new resource.
func (o InstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Specifies the advanced backup policy. Structure is documented below.
func (o InstanceOutput) BackupStrategy() InstanceBackupStrategyOutput {
	return o.ApplyT(func(v *Instance) InstanceBackupStrategyOutput { return v.BackupStrategy }).(InstanceBackupStrategyOutput)
}

// Specify the binlog retention period in hours. This parameter applies only to
// MySQL Server databases. Value range: **0** to **168 (7x24)**.
func (o InstanceOutput) BinlogRetentionHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.BinlogRetentionHours }).(pulumi.IntPtrOutput)
}

// Specifies the charging mode of the RDS DB instance. Valid values are
// **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
func (o InstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
func (o InstanceOutput) Collation() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Collation }).(pulumi.StringOutput)
}

// Indicates the creation time.
func (o InstanceOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Specifies the database information. Structure is documented below. Changing this
// parameter will create a new resource.
func (o InstanceOutput) Db() InstanceDbOutput {
	return o.ApplyT(func(v *Instance) InstanceDbOutput { return v.Db }).(InstanceDbOutput)
}

// Specifies the description of the instance. The value consists of 0 to 64
// characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
func (o InstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the exclusive storage ID for Dec users. It is different for each az
// configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
// and separated by commas if database instance type is not standalone or read-only.
func (o InstanceOutput) DssPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DssPoolId }).(pulumi.StringPtrOutput)
}

// Specifies the enterprise project id of the RDS instance.
func (o InstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies an intranet floating IP address of RDS DB instance.
func (o InstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.FixedIp }).(pulumi.StringOutput)
}

// Specifies the specification code.
//
// > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
// changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
// security group and cannot be deleted for 12 hours.
func (o InstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

// Required for HA instances. Specifies the replication mode for the standby DB instance.
// + For MySQL, the value is **async** or **semisync**.
// + For PostgreSQL, the value is **async** or **sync**.
// + For Microsoft SQL Server, the value is **sync**.
//
// > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
// replication mode. **sync** indicates the synchronous replication mode.
func (o InstanceOutput) HaReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.HaReplicationMode }).(pulumi.StringOutput)
}

// Specifies the case-sensitive state of the database table name,
// the default value is "1". Changing this parameter will create a new resource.
// + 0: Table names are stored as fixed and table names are case-sensitive.
// + 1: Table names will be stored in lower case and table names are not case-sensitive.
func (o InstanceOutput) LowerCaseTableNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.LowerCaseTableNames }).(pulumi.StringPtrOutput)
}

// Specifies the time at which the maintenance time window starts, for example, **22:00**.
func (o InstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

// Specifies the time at which the maintenance time window ends, for example, **01:00**.
//
// > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
// hour, and the interval between them must be one to four hours.<br>
// For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
func (o InstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

// Specify the host information for MSDTC.
// The msdtcHosts structure is documented below.
//
// > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
func (o InstanceOutput) MsdtcHosts() InstanceMsdtcHostArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceMsdtcHostArrayOutput { return v.MsdtcHosts }).(InstanceMsdtcHostArrayOutput)
}

// Specifies the DB instance name. The DB instance name of the same type must be unique for
// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
// contain only letters, digits, hyphens (-), and underscores (_).
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o InstanceOutput) Nodes() InstanceNodeArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNodeArrayOutput { return v.Nodes }).(InstanceNodeArrayOutput)
}

// Specifies the parameter group ID.
func (o InstanceOutput) ParamGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ParamGroupId }).(pulumi.StringPtrOutput)
}

// Specify an array of one or more parameters to be set to the RDS instance after
// launched. You can check on console to see which parameters supported. Structure is documented below.
func (o InstanceOutput) Parameters() InstanceParameterArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceParameterArrayOutput { return v.Parameters }).(InstanceParameterArrayOutput)
}

// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
// to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
// This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
func (o InstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the RDS DB instance. Valid values
// are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
// creates a new resource.
func (o InstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Specifies the power action to be done for the instance.
// Value options: **ON**, **OFF** and **REBOOT**.
//
// > **NOTE:** The `powerAction` is a one-time action.
func (o InstanceOutput) PowerAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PowerAction }).(pulumi.StringOutput)
}

// Specifies the prefix of the private domain name. The value contains
// **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
func (o InstanceOutput) PrivateDnsNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrivateDnsNamePrefix }).(pulumi.StringOutput)
}

// Indicates the private domain name list of the DB instance.
func (o InstanceOutput) PrivateDnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.PrivateDnsNames }).(pulumi.StringArrayOutput)
}

// Indicates the private IP address list. It is a blank string until an ECS is created.
func (o InstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Indicates the public IP address list.
func (o InstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// Specifies the read write permissions of the instance. Valid values:
// + **readwrite**: read write permissions.
// + **readonly**: readonly permissions.
func (o InstanceOutput) ReadWritePermissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ReadWritePermissions }).(pulumi.StringPtrOutput)
}

// The region in which to create the rds instance resource. If omitted, the
// provider-level region will be used. Changing this creates a new rds instance resource.
func (o InstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the restoration information. It only supported restore to postpaid
// instance. Structure is documented below. Changing this parameter will create a new resource.
func (o InstanceOutput) Restore() InstanceRestorePtrOutput {
	return o.ApplyT(func(v *Instance) InstanceRestorePtrOutput { return v.Restore }).(InstanceRestorePtrOutput)
}

// Specifies the rotation days of TDE rotation.
func (o InstanceOutput) RotateDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.RotateDay }).(pulumi.IntPtrOutput)
}

// Specifies whether to enable seconds level monitoring.
func (o InstanceOutput) SecondsLevelMonitoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.SecondsLevelMonitoringEnabled }).(pulumi.BoolOutput)
}

// Specifies the seconds level monitoring interval. Valid values:
// **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
func (o InstanceOutput) SecondsLevelMonitoringInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.SecondsLevelMonitoringInterval }).(pulumi.IntOutput)
}

// Specifies the key ID of TDE rotation.
func (o InstanceOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

// Specifies the key name of TDE rotation.
func (o InstanceOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SecretName }).(pulumi.StringPtrOutput)
}

// Specifies the key version of TDE rotation.
//
// > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
// is **true**.
func (o InstanceOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// Specifies the security group which the RDS DB instance belongs to.
func (o InstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies the slow log show original status of the instance.
// Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
func (o InstanceOutput) SlowLogShowOriginalStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SlowLogShowOriginalStatus }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable the SSL for MySQL database.
func (o InstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.SslEnable }).(pulumi.BoolOutput)
}

// Indicates the node status.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network id of a subnet. Changing this parameter will create a
// new resource.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Specifies the database switchover policy.
// + **reliability**: reliability first.
// + **availability**: availability first.
//
// Defaults to **reliability**.
func (o InstanceOutput) SwitchStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SwitchStrategy }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
// pair.
func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies whether enable TDE for the instance.
//
// > **NOTE:** TDE cannot be disabled after being enabled.
func (o InstanceOutput) TdeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.TdeEnabled }).(pulumi.BoolOutput)
}

// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
// zone is expressed as a character string.
func (o InstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// Specifies the volume information. Structure is documented below.
func (o InstanceOutput) Volume() InstanceVolumeOutput {
	return o.ApplyT(func(v *Instance) InstanceVolumeOutput { return v.Volume }).(InstanceVolumeOutput)
}

// Specifies the VPC ID. Changing this parameter will create a new resource.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
