// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type CbhHaInstance struct {
	pulumi.CustomResourceState

	// Specifies the size of the additional data disk for the CBH HA instance.
	AttachDiskSize pulumi.IntPtrOutput `pulumi:"attachDiskSize"`
	// Specifies whether auto renew is enabled.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the charging mode of the CBH HA instance.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// The data disk size of the CBH HA instance.
	DataDiskSize pulumi.Float64Output `pulumi:"dataDiskSize"`
	// Specifies the enterprise project ID to which the CBH HA instance belongs.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies the product ID of the CBH server.
	FlavorId pulumi.StringOutput `pulumi:"flavorId"`
	// Specifies the floating IP address of the CBH HA instance.
	FloatingIp pulumi.StringOutput `pulumi:"floatingIp"`
	// Specifies whether the IPv6 network is enabled.
	Ipv6Enable pulumi.BoolPtrOutput `pulumi:"ipv6Enable"`
	// Specifies the availability zone name of the master instance.
	MasterAvailabilityZone pulumi.StringOutput `pulumi:"masterAvailabilityZone"`
	// The ID of the master instance.
	MasterId pulumi.StringOutput `pulumi:"masterId"`
	// Specifies the private IP address of the master instance.
	MasterPrivateIp pulumi.StringOutput `pulumi:"masterPrivateIp"`
	// Specifies the name of the CBH HA instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the password for logging in to the management console.
	Password pulumi.StringOutput `pulumi:"password"`
	// Specifies the charging period of the CBH HA instance.
	Period pulumi.IntOutput `pulumi:"period"`
	// Specifies the charging period unit of the CBH HA instance.
	PeriodUnit pulumi.StringOutput `pulumi:"periodUnit"`
	// Specifies the power action after the CBH HA instance is created.
	PowerAction pulumi.StringPtrOutput `pulumi:"powerAction"`
	// The elastic IP address.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// Specifies the ID of the elastic IP.
	PublicIpId pulumi.StringPtrOutput `pulumi:"publicIpId"`
	// Specifies the region in which to create the CBH HA instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the IDs of the security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies the availability zone name of the slave instance.
	SlaveAvailabilityZone pulumi.StringOutput `pulumi:"slaveAvailabilityZone"`
	// The ID of the slave instance.
	SlaveId pulumi.StringOutput `pulumi:"slaveId"`
	// Specifies the private IP address of the slave instance.
	SlavePrivateIp pulumi.StringOutput `pulumi:"slavePrivateIp"`
	// The status of the CBH HA instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the ID of a subnet.
	SubnetId pulumi.StringOutput    `pulumi:"subnetId"`
	Tags     pulumi.StringMapOutput `pulumi:"tags"`
	// The current version of the CBH HA instance image.
	Version pulumi.StringOutput `pulumi:"version"`
	// Specifies the ID of a VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewCbhHaInstance registers a new resource with the given unique name, arguments, and options.
func NewCbhHaInstance(ctx *pulumi.Context,
	name string, args *CbhHaInstanceArgs, opts ...pulumi.ResourceOption) (*CbhHaInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChargingMode == nil {
		return nil, errors.New("invalid value for required argument 'ChargingMode'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.MasterAvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'MasterAvailabilityZone'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Period == nil {
		return nil, errors.New("invalid value for required argument 'Period'")
	}
	if args.PeriodUnit == nil {
		return nil, errors.New("invalid value for required argument 'PeriodUnit'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.SlaveAvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'SlaveAvailabilityZone'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CbhHaInstance
	err := ctx.RegisterResource("cloudru:index/cbhHaInstance:CbhHaInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCbhHaInstance gets an existing CbhHaInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCbhHaInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CbhHaInstanceState, opts ...pulumi.ResourceOption) (*CbhHaInstance, error) {
	var resource CbhHaInstance
	err := ctx.ReadResource("cloudru:index/cbhHaInstance:CbhHaInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CbhHaInstance resources.
type cbhHaInstanceState struct {
	// Specifies the size of the additional data disk for the CBH HA instance.
	AttachDiskSize *int `pulumi:"attachDiskSize"`
	// Specifies whether auto renew is enabled.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the charging mode of the CBH HA instance.
	ChargingMode *string `pulumi:"chargingMode"`
	// The data disk size of the CBH HA instance.
	DataDiskSize *float64 `pulumi:"dataDiskSize"`
	// Specifies the enterprise project ID to which the CBH HA instance belongs.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the product ID of the CBH server.
	FlavorId *string `pulumi:"flavorId"`
	// Specifies the floating IP address of the CBH HA instance.
	FloatingIp *string `pulumi:"floatingIp"`
	// Specifies whether the IPv6 network is enabled.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// Specifies the availability zone name of the master instance.
	MasterAvailabilityZone *string `pulumi:"masterAvailabilityZone"`
	// The ID of the master instance.
	MasterId *string `pulumi:"masterId"`
	// Specifies the private IP address of the master instance.
	MasterPrivateIp *string `pulumi:"masterPrivateIp"`
	// Specifies the name of the CBH HA instance.
	Name *string `pulumi:"name"`
	// Specifies the password for logging in to the management console.
	Password *string `pulumi:"password"`
	// Specifies the charging period of the CBH HA instance.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the CBH HA instance.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the power action after the CBH HA instance is created.
	PowerAction *string `pulumi:"powerAction"`
	// The elastic IP address.
	PublicIp *string `pulumi:"publicIp"`
	// Specifies the ID of the elastic IP.
	PublicIpId *string `pulumi:"publicIpId"`
	// Specifies the region in which to create the CBH HA instance.
	Region *string `pulumi:"region"`
	// Specifies the IDs of the security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the availability zone name of the slave instance.
	SlaveAvailabilityZone *string `pulumi:"slaveAvailabilityZone"`
	// The ID of the slave instance.
	SlaveId *string `pulumi:"slaveId"`
	// Specifies the private IP address of the slave instance.
	SlavePrivateIp *string `pulumi:"slavePrivateIp"`
	// The status of the CBH HA instance.
	Status *string `pulumi:"status"`
	// Specifies the ID of a subnet.
	SubnetId *string           `pulumi:"subnetId"`
	Tags     map[string]string `pulumi:"tags"`
	// The current version of the CBH HA instance image.
	Version *string `pulumi:"version"`
	// Specifies the ID of a VPC.
	VpcId *string `pulumi:"vpcId"`
}

type CbhHaInstanceState struct {
	// Specifies the size of the additional data disk for the CBH HA instance.
	AttachDiskSize pulumi.IntPtrInput
	// Specifies whether auto renew is enabled.
	AutoRenew pulumi.StringPtrInput
	// Specifies the charging mode of the CBH HA instance.
	ChargingMode pulumi.StringPtrInput
	// The data disk size of the CBH HA instance.
	DataDiskSize pulumi.Float64PtrInput
	// Specifies the enterprise project ID to which the CBH HA instance belongs.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the product ID of the CBH server.
	FlavorId pulumi.StringPtrInput
	// Specifies the floating IP address of the CBH HA instance.
	FloatingIp pulumi.StringPtrInput
	// Specifies whether the IPv6 network is enabled.
	Ipv6Enable pulumi.BoolPtrInput
	// Specifies the availability zone name of the master instance.
	MasterAvailabilityZone pulumi.StringPtrInput
	// The ID of the master instance.
	MasterId pulumi.StringPtrInput
	// Specifies the private IP address of the master instance.
	MasterPrivateIp pulumi.StringPtrInput
	// Specifies the name of the CBH HA instance.
	Name pulumi.StringPtrInput
	// Specifies the password for logging in to the management console.
	Password pulumi.StringPtrInput
	// Specifies the charging period of the CBH HA instance.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the CBH HA instance.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the power action after the CBH HA instance is created.
	PowerAction pulumi.StringPtrInput
	// The elastic IP address.
	PublicIp pulumi.StringPtrInput
	// Specifies the ID of the elastic IP.
	PublicIpId pulumi.StringPtrInput
	// Specifies the region in which to create the CBH HA instance.
	Region pulumi.StringPtrInput
	// Specifies the IDs of the security group.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the availability zone name of the slave instance.
	SlaveAvailabilityZone pulumi.StringPtrInput
	// The ID of the slave instance.
	SlaveId pulumi.StringPtrInput
	// Specifies the private IP address of the slave instance.
	SlavePrivateIp pulumi.StringPtrInput
	// The status of the CBH HA instance.
	Status pulumi.StringPtrInput
	// Specifies the ID of a subnet.
	SubnetId pulumi.StringPtrInput
	Tags     pulumi.StringMapInput
	// The current version of the CBH HA instance image.
	Version pulumi.StringPtrInput
	// Specifies the ID of a VPC.
	VpcId pulumi.StringPtrInput
}

func (CbhHaInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cbhHaInstanceState)(nil)).Elem()
}

type cbhHaInstanceArgs struct {
	// Specifies the size of the additional data disk for the CBH HA instance.
	AttachDiskSize *int `pulumi:"attachDiskSize"`
	// Specifies whether auto renew is enabled.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the charging mode of the CBH HA instance.
	ChargingMode string `pulumi:"chargingMode"`
	// Specifies the enterprise project ID to which the CBH HA instance belongs.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the product ID of the CBH server.
	FlavorId string `pulumi:"flavorId"`
	// Specifies the floating IP address of the CBH HA instance.
	FloatingIp *string `pulumi:"floatingIp"`
	// Specifies whether the IPv6 network is enabled.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// Specifies the availability zone name of the master instance.
	MasterAvailabilityZone string `pulumi:"masterAvailabilityZone"`
	// Specifies the private IP address of the master instance.
	MasterPrivateIp *string `pulumi:"masterPrivateIp"`
	// Specifies the name of the CBH HA instance.
	Name *string `pulumi:"name"`
	// Specifies the password for logging in to the management console.
	Password string `pulumi:"password"`
	// Specifies the charging period of the CBH HA instance.
	Period int `pulumi:"period"`
	// Specifies the charging period unit of the CBH HA instance.
	PeriodUnit string `pulumi:"periodUnit"`
	// Specifies the power action after the CBH HA instance is created.
	PowerAction *string `pulumi:"powerAction"`
	// Specifies the ID of the elastic IP.
	PublicIpId *string `pulumi:"publicIpId"`
	// Specifies the region in which to create the CBH HA instance.
	Region *string `pulumi:"region"`
	// Specifies the IDs of the security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Specifies the availability zone name of the slave instance.
	SlaveAvailabilityZone string `pulumi:"slaveAvailabilityZone"`
	// Specifies the private IP address of the slave instance.
	SlavePrivateIp *string `pulumi:"slavePrivateIp"`
	// Specifies the ID of a subnet.
	SubnetId string            `pulumi:"subnetId"`
	Tags     map[string]string `pulumi:"tags"`
	// Specifies the ID of a VPC.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a CbhHaInstance resource.
type CbhHaInstanceArgs struct {
	// Specifies the size of the additional data disk for the CBH HA instance.
	AttachDiskSize pulumi.IntPtrInput
	// Specifies whether auto renew is enabled.
	AutoRenew pulumi.StringPtrInput
	// Specifies the charging mode of the CBH HA instance.
	ChargingMode pulumi.StringInput
	// Specifies the enterprise project ID to which the CBH HA instance belongs.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the product ID of the CBH server.
	FlavorId pulumi.StringInput
	// Specifies the floating IP address of the CBH HA instance.
	FloatingIp pulumi.StringPtrInput
	// Specifies whether the IPv6 network is enabled.
	Ipv6Enable pulumi.BoolPtrInput
	// Specifies the availability zone name of the master instance.
	MasterAvailabilityZone pulumi.StringInput
	// Specifies the private IP address of the master instance.
	MasterPrivateIp pulumi.StringPtrInput
	// Specifies the name of the CBH HA instance.
	Name pulumi.StringPtrInput
	// Specifies the password for logging in to the management console.
	Password pulumi.StringInput
	// Specifies the charging period of the CBH HA instance.
	Period pulumi.IntInput
	// Specifies the charging period unit of the CBH HA instance.
	PeriodUnit pulumi.StringInput
	// Specifies the power action after the CBH HA instance is created.
	PowerAction pulumi.StringPtrInput
	// Specifies the ID of the elastic IP.
	PublicIpId pulumi.StringPtrInput
	// Specifies the region in which to create the CBH HA instance.
	Region pulumi.StringPtrInput
	// Specifies the IDs of the security group.
	SecurityGroupId pulumi.StringInput
	// Specifies the availability zone name of the slave instance.
	SlaveAvailabilityZone pulumi.StringInput
	// Specifies the private IP address of the slave instance.
	SlavePrivateIp pulumi.StringPtrInput
	// Specifies the ID of a subnet.
	SubnetId pulumi.StringInput
	Tags     pulumi.StringMapInput
	// Specifies the ID of a VPC.
	VpcId pulumi.StringInput
}

func (CbhHaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cbhHaInstanceArgs)(nil)).Elem()
}

type CbhHaInstanceInput interface {
	pulumi.Input

	ToCbhHaInstanceOutput() CbhHaInstanceOutput
	ToCbhHaInstanceOutputWithContext(ctx context.Context) CbhHaInstanceOutput
}

func (*CbhHaInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**CbhHaInstance)(nil)).Elem()
}

func (i *CbhHaInstance) ToCbhHaInstanceOutput() CbhHaInstanceOutput {
	return i.ToCbhHaInstanceOutputWithContext(context.Background())
}

func (i *CbhHaInstance) ToCbhHaInstanceOutputWithContext(ctx context.Context) CbhHaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbhHaInstanceOutput)
}

// CbhHaInstanceArrayInput is an input type that accepts CbhHaInstanceArray and CbhHaInstanceArrayOutput values.
// You can construct a concrete instance of `CbhHaInstanceArrayInput` via:
//
//	CbhHaInstanceArray{ CbhHaInstanceArgs{...} }
type CbhHaInstanceArrayInput interface {
	pulumi.Input

	ToCbhHaInstanceArrayOutput() CbhHaInstanceArrayOutput
	ToCbhHaInstanceArrayOutputWithContext(context.Context) CbhHaInstanceArrayOutput
}

type CbhHaInstanceArray []CbhHaInstanceInput

func (CbhHaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CbhHaInstance)(nil)).Elem()
}

func (i CbhHaInstanceArray) ToCbhHaInstanceArrayOutput() CbhHaInstanceArrayOutput {
	return i.ToCbhHaInstanceArrayOutputWithContext(context.Background())
}

func (i CbhHaInstanceArray) ToCbhHaInstanceArrayOutputWithContext(ctx context.Context) CbhHaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbhHaInstanceArrayOutput)
}

// CbhHaInstanceMapInput is an input type that accepts CbhHaInstanceMap and CbhHaInstanceMapOutput values.
// You can construct a concrete instance of `CbhHaInstanceMapInput` via:
//
//	CbhHaInstanceMap{ "key": CbhHaInstanceArgs{...} }
type CbhHaInstanceMapInput interface {
	pulumi.Input

	ToCbhHaInstanceMapOutput() CbhHaInstanceMapOutput
	ToCbhHaInstanceMapOutputWithContext(context.Context) CbhHaInstanceMapOutput
}

type CbhHaInstanceMap map[string]CbhHaInstanceInput

func (CbhHaInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CbhHaInstance)(nil)).Elem()
}

func (i CbhHaInstanceMap) ToCbhHaInstanceMapOutput() CbhHaInstanceMapOutput {
	return i.ToCbhHaInstanceMapOutputWithContext(context.Background())
}

func (i CbhHaInstanceMap) ToCbhHaInstanceMapOutputWithContext(ctx context.Context) CbhHaInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CbhHaInstanceMapOutput)
}

type CbhHaInstanceOutput struct{ *pulumi.OutputState }

func (CbhHaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CbhHaInstance)(nil)).Elem()
}

func (o CbhHaInstanceOutput) ToCbhHaInstanceOutput() CbhHaInstanceOutput {
	return o
}

func (o CbhHaInstanceOutput) ToCbhHaInstanceOutputWithContext(ctx context.Context) CbhHaInstanceOutput {
	return o
}

// Specifies the size of the additional data disk for the CBH HA instance.
func (o CbhHaInstanceOutput) AttachDiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.IntPtrOutput { return v.AttachDiskSize }).(pulumi.IntPtrOutput)
}

// Specifies whether auto renew is enabled.
func (o CbhHaInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the charging mode of the CBH HA instance.
func (o CbhHaInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// The data disk size of the CBH HA instance.
func (o CbhHaInstanceOutput) DataDiskSize() pulumi.Float64Output {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.Float64Output { return v.DataDiskSize }).(pulumi.Float64Output)
}

// Specifies the enterprise project ID to which the CBH HA instance belongs.
func (o CbhHaInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies the product ID of the CBH server.
func (o CbhHaInstanceOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

// Specifies the floating IP address of the CBH HA instance.
func (o CbhHaInstanceOutput) FloatingIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.FloatingIp }).(pulumi.StringOutput)
}

// Specifies whether the IPv6 network is enabled.
func (o CbhHaInstanceOutput) Ipv6Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.BoolPtrOutput { return v.Ipv6Enable }).(pulumi.BoolPtrOutput)
}

// Specifies the availability zone name of the master instance.
func (o CbhHaInstanceOutput) MasterAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.MasterAvailabilityZone }).(pulumi.StringOutput)
}

// The ID of the master instance.
func (o CbhHaInstanceOutput) MasterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.MasterId }).(pulumi.StringOutput)
}

// Specifies the private IP address of the master instance.
func (o CbhHaInstanceOutput) MasterPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.MasterPrivateIp }).(pulumi.StringOutput)
}

// Specifies the name of the CBH HA instance.
func (o CbhHaInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the password for logging in to the management console.
func (o CbhHaInstanceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Specifies the charging period of the CBH HA instance.
func (o CbhHaInstanceOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// Specifies the charging period unit of the CBH HA instance.
func (o CbhHaInstanceOutput) PeriodUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.PeriodUnit }).(pulumi.StringOutput)
}

// Specifies the power action after the CBH HA instance is created.
func (o CbhHaInstanceOutput) PowerAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringPtrOutput { return v.PowerAction }).(pulumi.StringPtrOutput)
}

// The elastic IP address.
func (o CbhHaInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// Specifies the ID of the elastic IP.
func (o CbhHaInstanceOutput) PublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringPtrOutput { return v.PublicIpId }).(pulumi.StringPtrOutput)
}

// Specifies the region in which to create the CBH HA instance.
func (o CbhHaInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the IDs of the security group.
func (o CbhHaInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies the availability zone name of the slave instance.
func (o CbhHaInstanceOutput) SlaveAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.SlaveAvailabilityZone }).(pulumi.StringOutput)
}

// The ID of the slave instance.
func (o CbhHaInstanceOutput) SlaveId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.SlaveId }).(pulumi.StringOutput)
}

// Specifies the private IP address of the slave instance.
func (o CbhHaInstanceOutput) SlavePrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.SlavePrivateIp }).(pulumi.StringOutput)
}

// The status of the CBH HA instance.
func (o CbhHaInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the ID of a subnet.
func (o CbhHaInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o CbhHaInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The current version of the CBH HA instance image.
func (o CbhHaInstanceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// Specifies the ID of a VPC.
func (o CbhHaInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *CbhHaInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type CbhHaInstanceArrayOutput struct{ *pulumi.OutputState }

func (CbhHaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CbhHaInstance)(nil)).Elem()
}

func (o CbhHaInstanceArrayOutput) ToCbhHaInstanceArrayOutput() CbhHaInstanceArrayOutput {
	return o
}

func (o CbhHaInstanceArrayOutput) ToCbhHaInstanceArrayOutputWithContext(ctx context.Context) CbhHaInstanceArrayOutput {
	return o
}

func (o CbhHaInstanceArrayOutput) Index(i pulumi.IntInput) CbhHaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CbhHaInstance {
		return vs[0].([]*CbhHaInstance)[vs[1].(int)]
	}).(CbhHaInstanceOutput)
}

type CbhHaInstanceMapOutput struct{ *pulumi.OutputState }

func (CbhHaInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CbhHaInstance)(nil)).Elem()
}

func (o CbhHaInstanceMapOutput) ToCbhHaInstanceMapOutput() CbhHaInstanceMapOutput {
	return o
}

func (o CbhHaInstanceMapOutput) ToCbhHaInstanceMapOutputWithContext(ctx context.Context) CbhHaInstanceMapOutput {
	return o
}

func (o CbhHaInstanceMapOutput) MapIndex(k pulumi.StringInput) CbhHaInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CbhHaInstance {
		return vs[0].(map[string]*CbhHaInstance)[vs[1].(string)]
	}).(CbhHaInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CbhHaInstanceInput)(nil)).Elem(), &CbhHaInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbhHaInstanceArrayInput)(nil)).Elem(), CbhHaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CbhHaInstanceMapInput)(nil)).Elem(), CbhHaInstanceMap{})
	pulumi.RegisterOutputType(CbhHaInstanceOutput{})
	pulumi.RegisterOutputType(CbhHaInstanceArrayOutput{})
	pulumi.RegisterOutputType(CbhHaInstanceMapOutput{})
}
