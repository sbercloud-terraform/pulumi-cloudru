// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ElbPool struct {
	pulumi.CustomResourceState

	AnyPortEnable             pulumi.BoolOutput           `pulumi:"anyPortEnable"`
	ConnectionDrainEnabled    pulumi.BoolOutput           `pulumi:"connectionDrainEnabled"`
	ConnectionDrainTimeout    pulumi.IntOutput            `pulumi:"connectionDrainTimeout"`
	CreatedAt                 pulumi.StringOutput         `pulumi:"createdAt"`
	DeletionProtectionEnable  pulumi.BoolPtrOutput        `pulumi:"deletionProtectionEnable"`
	Description               pulumi.StringPtrOutput      `pulumi:"description"`
	EnableForceNew            pulumi.StringPtrOutput      `pulumi:"enableForceNew"`
	EnterpriseProjectId       pulumi.StringOutput         `pulumi:"enterpriseProjectId"`
	IpVersion                 pulumi.StringOutput         `pulumi:"ipVersion"`
	LbMethod                  pulumi.StringOutput         `pulumi:"lbMethod"`
	ListenerId                pulumi.StringOutput         `pulumi:"listenerId"`
	LoadbalancerId            pulumi.StringOutput         `pulumi:"loadbalancerId"`
	MinimumHealthyMemberCount pulumi.IntOutput            `pulumi:"minimumHealthyMemberCount"`
	MonitorId                 pulumi.StringOutput         `pulumi:"monitorId"`
	Name                      pulumi.StringOutput         `pulumi:"name"`
	Persistence               ElbPoolPersistencePtrOutput `pulumi:"persistence"`
	ProtectionReason          pulumi.StringPtrOutput      `pulumi:"protectionReason"`
	ProtectionStatus          pulumi.StringOutput         `pulumi:"protectionStatus"`
	Protocol                  pulumi.StringOutput         `pulumi:"protocol"`
	PublicBorderGroup         pulumi.StringOutput         `pulumi:"publicBorderGroup"`
	Region                    pulumi.StringOutput         `pulumi:"region"`
	SlowStartDuration         pulumi.IntOutput            `pulumi:"slowStartDuration"`
	SlowStartEnabled          pulumi.BoolOutput           `pulumi:"slowStartEnabled"`
	Type                      pulumi.StringOutput         `pulumi:"type"`
	UpdatedAt                 pulumi.StringOutput         `pulumi:"updatedAt"`
	VpcId                     pulumi.StringOutput         `pulumi:"vpcId"`
}

// NewElbPool registers a new resource with the given unique name, arguments, and options.
func NewElbPool(ctx *pulumi.Context,
	name string, args *ElbPoolArgs, opts ...pulumi.ResourceOption) (*ElbPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LbMethod == nil {
		return nil, errors.New("invalid value for required argument 'LbMethod'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ElbPool
	err := ctx.RegisterResource("sbercloud:index/elbPool:ElbPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElbPool gets an existing ElbPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElbPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElbPoolState, opts ...pulumi.ResourceOption) (*ElbPool, error) {
	var resource ElbPool
	err := ctx.ReadResource("sbercloud:index/elbPool:ElbPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElbPool resources.
type elbPoolState struct {
	AnyPortEnable             *bool               `pulumi:"anyPortEnable"`
	ConnectionDrainEnabled    *bool               `pulumi:"connectionDrainEnabled"`
	ConnectionDrainTimeout    *int                `pulumi:"connectionDrainTimeout"`
	CreatedAt                 *string             `pulumi:"createdAt"`
	DeletionProtectionEnable  *bool               `pulumi:"deletionProtectionEnable"`
	Description               *string             `pulumi:"description"`
	EnableForceNew            *string             `pulumi:"enableForceNew"`
	EnterpriseProjectId       *string             `pulumi:"enterpriseProjectId"`
	IpVersion                 *string             `pulumi:"ipVersion"`
	LbMethod                  *string             `pulumi:"lbMethod"`
	ListenerId                *string             `pulumi:"listenerId"`
	LoadbalancerId            *string             `pulumi:"loadbalancerId"`
	MinimumHealthyMemberCount *int                `pulumi:"minimumHealthyMemberCount"`
	MonitorId                 *string             `pulumi:"monitorId"`
	Name                      *string             `pulumi:"name"`
	Persistence               *ElbPoolPersistence `pulumi:"persistence"`
	ProtectionReason          *string             `pulumi:"protectionReason"`
	ProtectionStatus          *string             `pulumi:"protectionStatus"`
	Protocol                  *string             `pulumi:"protocol"`
	PublicBorderGroup         *string             `pulumi:"publicBorderGroup"`
	Region                    *string             `pulumi:"region"`
	SlowStartDuration         *int                `pulumi:"slowStartDuration"`
	SlowStartEnabled          *bool               `pulumi:"slowStartEnabled"`
	Type                      *string             `pulumi:"type"`
	UpdatedAt                 *string             `pulumi:"updatedAt"`
	VpcId                     *string             `pulumi:"vpcId"`
}

type ElbPoolState struct {
	AnyPortEnable             pulumi.BoolPtrInput
	ConnectionDrainEnabled    pulumi.BoolPtrInput
	ConnectionDrainTimeout    pulumi.IntPtrInput
	CreatedAt                 pulumi.StringPtrInput
	DeletionProtectionEnable  pulumi.BoolPtrInput
	Description               pulumi.StringPtrInput
	EnableForceNew            pulumi.StringPtrInput
	EnterpriseProjectId       pulumi.StringPtrInput
	IpVersion                 pulumi.StringPtrInput
	LbMethod                  pulumi.StringPtrInput
	ListenerId                pulumi.StringPtrInput
	LoadbalancerId            pulumi.StringPtrInput
	MinimumHealthyMemberCount pulumi.IntPtrInput
	MonitorId                 pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	Persistence               ElbPoolPersistencePtrInput
	ProtectionReason          pulumi.StringPtrInput
	ProtectionStatus          pulumi.StringPtrInput
	Protocol                  pulumi.StringPtrInput
	PublicBorderGroup         pulumi.StringPtrInput
	Region                    pulumi.StringPtrInput
	SlowStartDuration         pulumi.IntPtrInput
	SlowStartEnabled          pulumi.BoolPtrInput
	Type                      pulumi.StringPtrInput
	UpdatedAt                 pulumi.StringPtrInput
	VpcId                     pulumi.StringPtrInput
}

func (ElbPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*elbPoolState)(nil)).Elem()
}

type elbPoolArgs struct {
	AnyPortEnable             *bool               `pulumi:"anyPortEnable"`
	ConnectionDrainEnabled    *bool               `pulumi:"connectionDrainEnabled"`
	ConnectionDrainTimeout    *int                `pulumi:"connectionDrainTimeout"`
	DeletionProtectionEnable  *bool               `pulumi:"deletionProtectionEnable"`
	Description               *string             `pulumi:"description"`
	EnableForceNew            *string             `pulumi:"enableForceNew"`
	IpVersion                 *string             `pulumi:"ipVersion"`
	LbMethod                  string              `pulumi:"lbMethod"`
	ListenerId                *string             `pulumi:"listenerId"`
	LoadbalancerId            *string             `pulumi:"loadbalancerId"`
	MinimumHealthyMemberCount *int                `pulumi:"minimumHealthyMemberCount"`
	Name                      *string             `pulumi:"name"`
	Persistence               *ElbPoolPersistence `pulumi:"persistence"`
	ProtectionReason          *string             `pulumi:"protectionReason"`
	ProtectionStatus          *string             `pulumi:"protectionStatus"`
	Protocol                  string              `pulumi:"protocol"`
	PublicBorderGroup         *string             `pulumi:"publicBorderGroup"`
	Region                    *string             `pulumi:"region"`
	SlowStartDuration         *int                `pulumi:"slowStartDuration"`
	SlowStartEnabled          *bool               `pulumi:"slowStartEnabled"`
	Type                      *string             `pulumi:"type"`
	VpcId                     *string             `pulumi:"vpcId"`
}

// The set of arguments for constructing a ElbPool resource.
type ElbPoolArgs struct {
	AnyPortEnable             pulumi.BoolPtrInput
	ConnectionDrainEnabled    pulumi.BoolPtrInput
	ConnectionDrainTimeout    pulumi.IntPtrInput
	DeletionProtectionEnable  pulumi.BoolPtrInput
	Description               pulumi.StringPtrInput
	EnableForceNew            pulumi.StringPtrInput
	IpVersion                 pulumi.StringPtrInput
	LbMethod                  pulumi.StringInput
	ListenerId                pulumi.StringPtrInput
	LoadbalancerId            pulumi.StringPtrInput
	MinimumHealthyMemberCount pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	Persistence               ElbPoolPersistencePtrInput
	ProtectionReason          pulumi.StringPtrInput
	ProtectionStatus          pulumi.StringPtrInput
	Protocol                  pulumi.StringInput
	PublicBorderGroup         pulumi.StringPtrInput
	Region                    pulumi.StringPtrInput
	SlowStartDuration         pulumi.IntPtrInput
	SlowStartEnabled          pulumi.BoolPtrInput
	Type                      pulumi.StringPtrInput
	VpcId                     pulumi.StringPtrInput
}

func (ElbPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elbPoolArgs)(nil)).Elem()
}

type ElbPoolInput interface {
	pulumi.Input

	ToElbPoolOutput() ElbPoolOutput
	ToElbPoolOutputWithContext(ctx context.Context) ElbPoolOutput
}

func (*ElbPool) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbPool)(nil)).Elem()
}

func (i *ElbPool) ToElbPoolOutput() ElbPoolOutput {
	return i.ToElbPoolOutputWithContext(context.Background())
}

func (i *ElbPool) ToElbPoolOutputWithContext(ctx context.Context) ElbPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbPoolOutput)
}

// ElbPoolArrayInput is an input type that accepts ElbPoolArray and ElbPoolArrayOutput values.
// You can construct a concrete instance of `ElbPoolArrayInput` via:
//
//	ElbPoolArray{ ElbPoolArgs{...} }
type ElbPoolArrayInput interface {
	pulumi.Input

	ToElbPoolArrayOutput() ElbPoolArrayOutput
	ToElbPoolArrayOutputWithContext(context.Context) ElbPoolArrayOutput
}

type ElbPoolArray []ElbPoolInput

func (ElbPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElbPool)(nil)).Elem()
}

func (i ElbPoolArray) ToElbPoolArrayOutput() ElbPoolArrayOutput {
	return i.ToElbPoolArrayOutputWithContext(context.Background())
}

func (i ElbPoolArray) ToElbPoolArrayOutputWithContext(ctx context.Context) ElbPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbPoolArrayOutput)
}

// ElbPoolMapInput is an input type that accepts ElbPoolMap and ElbPoolMapOutput values.
// You can construct a concrete instance of `ElbPoolMapInput` via:
//
//	ElbPoolMap{ "key": ElbPoolArgs{...} }
type ElbPoolMapInput interface {
	pulumi.Input

	ToElbPoolMapOutput() ElbPoolMapOutput
	ToElbPoolMapOutputWithContext(context.Context) ElbPoolMapOutput
}

type ElbPoolMap map[string]ElbPoolInput

func (ElbPoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElbPool)(nil)).Elem()
}

func (i ElbPoolMap) ToElbPoolMapOutput() ElbPoolMapOutput {
	return i.ToElbPoolMapOutputWithContext(context.Background())
}

func (i ElbPoolMap) ToElbPoolMapOutputWithContext(ctx context.Context) ElbPoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbPoolMapOutput)
}

type ElbPoolOutput struct{ *pulumi.OutputState }

func (ElbPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbPool)(nil)).Elem()
}

func (o ElbPoolOutput) ToElbPoolOutput() ElbPoolOutput {
	return o
}

func (o ElbPoolOutput) ToElbPoolOutputWithContext(ctx context.Context) ElbPoolOutput {
	return o
}

func (o ElbPoolOutput) AnyPortEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.BoolOutput { return v.AnyPortEnable }).(pulumi.BoolOutput)
}

func (o ElbPoolOutput) ConnectionDrainEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.BoolOutput { return v.ConnectionDrainEnabled }).(pulumi.BoolOutput)
}

func (o ElbPoolOutput) ConnectionDrainTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.IntOutput { return v.ConnectionDrainTimeout }).(pulumi.IntOutput)
}

func (o ElbPoolOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) DeletionProtectionEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.BoolPtrOutput { return v.DeletionProtectionEnable }).(pulumi.BoolPtrOutput)
}

func (o ElbPoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ElbPoolOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

func (o ElbPoolOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) LbMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.LbMethod }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.LoadbalancerId }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) MinimumHealthyMemberCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.IntOutput { return v.MinimumHealthyMemberCount }).(pulumi.IntOutput)
}

func (o ElbPoolOutput) MonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.MonitorId }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) Persistence() ElbPoolPersistencePtrOutput {
	return o.ApplyT(func(v *ElbPool) ElbPoolPersistencePtrOutput { return v.Persistence }).(ElbPoolPersistencePtrOutput)
}

func (o ElbPoolOutput) ProtectionReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringPtrOutput { return v.ProtectionReason }).(pulumi.StringPtrOutput)
}

func (o ElbPoolOutput) ProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.ProtectionStatus }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) PublicBorderGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.PublicBorderGroup }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) SlowStartDuration() pulumi.IntOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.IntOutput { return v.SlowStartDuration }).(pulumi.IntOutput)
}

func (o ElbPoolOutput) SlowStartEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.BoolOutput { return v.SlowStartEnabled }).(pulumi.BoolOutput)
}

func (o ElbPoolOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o ElbPoolOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElbPool) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type ElbPoolArrayOutput struct{ *pulumi.OutputState }

func (ElbPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElbPool)(nil)).Elem()
}

func (o ElbPoolArrayOutput) ToElbPoolArrayOutput() ElbPoolArrayOutput {
	return o
}

func (o ElbPoolArrayOutput) ToElbPoolArrayOutputWithContext(ctx context.Context) ElbPoolArrayOutput {
	return o
}

func (o ElbPoolArrayOutput) Index(i pulumi.IntInput) ElbPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElbPool {
		return vs[0].([]*ElbPool)[vs[1].(int)]
	}).(ElbPoolOutput)
}

type ElbPoolMapOutput struct{ *pulumi.OutputState }

func (ElbPoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElbPool)(nil)).Elem()
}

func (o ElbPoolMapOutput) ToElbPoolMapOutput() ElbPoolMapOutput {
	return o
}

func (o ElbPoolMapOutput) ToElbPoolMapOutputWithContext(ctx context.Context) ElbPoolMapOutput {
	return o
}

func (o ElbPoolMapOutput) MapIndex(k pulumi.StringInput) ElbPoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElbPool {
		return vs[0].(map[string]*ElbPool)[vs[1].(string)]
	}).(ElbPoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElbPoolInput)(nil)).Elem(), &ElbPool{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbPoolArrayInput)(nil)).Elem(), ElbPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbPoolMapInput)(nil)).Elem(), ElbPoolMap{})
	pulumi.RegisterOutputType(ElbPoolOutput{})
	pulumi.RegisterOutputType(ElbPoolArrayOutput{})
	pulumi.RegisterOutputType(ElbPoolMapOutput{})
}
