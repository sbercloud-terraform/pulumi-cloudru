// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a CFW service group member resource within SberCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			groupId := cfg.RequireObject("groupId")
//			protocol := cfg.RequireObject("protocol")
//			sourcePort := cfg.RequireObject("sourcePort")
//			destPort := cfg.RequireObject("destPort")
//			_, err := cfw.NewServiceGroupMember(ctx, "test", &cfw.ServiceGroupMemberArgs{
//				GroupId:    pulumi.Any(groupId),
//				Protocol:   pulumi.Any(protocol),
//				SourcePort: pulumi.Any(sourcePort),
//				DestPort:   pulumi.Any(destPort),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The service group member can be imported using service group ID and member ID, separated by a slash, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:Cfw/serviceGroupMember:ServiceGroupMember test <group_id>/<member_id>
// ```
type ServiceGroupMember struct {
	pulumi.CustomResourceState

	// Specifies the service group member description.
	//
	// Changing this parameter will create a new resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies the destination port.
	//
	// Changing this parameter will create a new resource.
	DestPort pulumi.StringOutput `pulumi:"destPort"`
	// Specifies the ID of the service group.
	//
	// Changing this parameter will create a new resource.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Specifies the service group member name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	//
	// Changing this parameter will create a new resource.
	Protocol pulumi.IntOutput `pulumi:"protocol"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the source port.
	//
	// Changing this parameter will create a new resource.
	SourcePort pulumi.StringOutput `pulumi:"sourcePort"`
}

// NewServiceGroupMember registers a new resource with the given unique name, arguments, and options.
func NewServiceGroupMember(ctx *pulumi.Context,
	name string, args *ServiceGroupMemberArgs, opts ...pulumi.ResourceOption) (*ServiceGroupMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestPort == nil {
		return nil, errors.New("invalid value for required argument 'DestPort'")
	}
	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.SourcePort == nil {
		return nil, errors.New("invalid value for required argument 'SourcePort'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceGroupMember
	err := ctx.RegisterResource("sbercloud:Cfw/serviceGroupMember:ServiceGroupMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceGroupMember gets an existing ServiceGroupMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceGroupMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceGroupMemberState, opts ...pulumi.ResourceOption) (*ServiceGroupMember, error) {
	var resource ServiceGroupMember
	err := ctx.ReadResource("sbercloud:Cfw/serviceGroupMember:ServiceGroupMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceGroupMember resources.
type serviceGroupMemberState struct {
	// Specifies the service group member description.
	//
	// Changing this parameter will create a new resource.
	Description *string `pulumi:"description"`
	// Specifies the destination port.
	//
	// Changing this parameter will create a new resource.
	DestPort *string `pulumi:"destPort"`
	// Specifies the ID of the service group.
	//
	// Changing this parameter will create a new resource.
	GroupId *string `pulumi:"groupId"`
	// Specifies the service group member name.
	Name *string `pulumi:"name"`
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	//
	// Changing this parameter will create a new resource.
	Protocol *int `pulumi:"protocol"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the source port.
	//
	// Changing this parameter will create a new resource.
	SourcePort *string `pulumi:"sourcePort"`
}

type ServiceGroupMemberState struct {
	// Specifies the service group member description.
	//
	// Changing this parameter will create a new resource.
	Description pulumi.StringPtrInput
	// Specifies the destination port.
	//
	// Changing this parameter will create a new resource.
	DestPort pulumi.StringPtrInput
	// Specifies the ID of the service group.
	//
	// Changing this parameter will create a new resource.
	GroupId pulumi.StringPtrInput
	// Specifies the service group member name.
	Name pulumi.StringPtrInput
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	//
	// Changing this parameter will create a new resource.
	Protocol pulumi.IntPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the source port.
	//
	// Changing this parameter will create a new resource.
	SourcePort pulumi.StringPtrInput
}

func (ServiceGroupMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceGroupMemberState)(nil)).Elem()
}

type serviceGroupMemberArgs struct {
	// Specifies the service group member description.
	//
	// Changing this parameter will create a new resource.
	Description *string `pulumi:"description"`
	// Specifies the destination port.
	//
	// Changing this parameter will create a new resource.
	DestPort string `pulumi:"destPort"`
	// Specifies the ID of the service group.
	//
	// Changing this parameter will create a new resource.
	GroupId string `pulumi:"groupId"`
	// Specifies the service group member name.
	Name *string `pulumi:"name"`
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	//
	// Changing this parameter will create a new resource.
	Protocol int `pulumi:"protocol"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the source port.
	//
	// Changing this parameter will create a new resource.
	SourcePort string `pulumi:"sourcePort"`
}

// The set of arguments for constructing a ServiceGroupMember resource.
type ServiceGroupMemberArgs struct {
	// Specifies the service group member description.
	//
	// Changing this parameter will create a new resource.
	Description pulumi.StringPtrInput
	// Specifies the destination port.
	//
	// Changing this parameter will create a new resource.
	DestPort pulumi.StringInput
	// Specifies the ID of the service group.
	//
	// Changing this parameter will create a new resource.
	GroupId pulumi.StringInput
	// Specifies the service group member name.
	Name pulumi.StringPtrInput
	// Specifies the protocol type.
	// The valid values are:
	// + **6**: indicates TCP;
	// + **17**: indicates UDP;
	// + **1**: indicates ICMP;
	// + **58**: indicates ICMPv6;
	// + **-1**: indicates any protocol.
	//
	// Changing this parameter will create a new resource.
	Protocol pulumi.IntInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the source port.
	//
	// Changing this parameter will create a new resource.
	SourcePort pulumi.StringInput
}

func (ServiceGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceGroupMemberArgs)(nil)).Elem()
}

type ServiceGroupMemberInput interface {
	pulumi.Input

	ToServiceGroupMemberOutput() ServiceGroupMemberOutput
	ToServiceGroupMemberOutputWithContext(ctx context.Context) ServiceGroupMemberOutput
}

func (*ServiceGroupMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGroupMember)(nil)).Elem()
}

func (i *ServiceGroupMember) ToServiceGroupMemberOutput() ServiceGroupMemberOutput {
	return i.ToServiceGroupMemberOutputWithContext(context.Background())
}

func (i *ServiceGroupMember) ToServiceGroupMemberOutputWithContext(ctx context.Context) ServiceGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupMemberOutput)
}

// ServiceGroupMemberArrayInput is an input type that accepts ServiceGroupMemberArray and ServiceGroupMemberArrayOutput values.
// You can construct a concrete instance of `ServiceGroupMemberArrayInput` via:
//
//	ServiceGroupMemberArray{ ServiceGroupMemberArgs{...} }
type ServiceGroupMemberArrayInput interface {
	pulumi.Input

	ToServiceGroupMemberArrayOutput() ServiceGroupMemberArrayOutput
	ToServiceGroupMemberArrayOutputWithContext(context.Context) ServiceGroupMemberArrayOutput
}

type ServiceGroupMemberArray []ServiceGroupMemberInput

func (ServiceGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceGroupMember)(nil)).Elem()
}

func (i ServiceGroupMemberArray) ToServiceGroupMemberArrayOutput() ServiceGroupMemberArrayOutput {
	return i.ToServiceGroupMemberArrayOutputWithContext(context.Background())
}

func (i ServiceGroupMemberArray) ToServiceGroupMemberArrayOutputWithContext(ctx context.Context) ServiceGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupMemberArrayOutput)
}

// ServiceGroupMemberMapInput is an input type that accepts ServiceGroupMemberMap and ServiceGroupMemberMapOutput values.
// You can construct a concrete instance of `ServiceGroupMemberMapInput` via:
//
//	ServiceGroupMemberMap{ "key": ServiceGroupMemberArgs{...} }
type ServiceGroupMemberMapInput interface {
	pulumi.Input

	ToServiceGroupMemberMapOutput() ServiceGroupMemberMapOutput
	ToServiceGroupMemberMapOutputWithContext(context.Context) ServiceGroupMemberMapOutput
}

type ServiceGroupMemberMap map[string]ServiceGroupMemberInput

func (ServiceGroupMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceGroupMember)(nil)).Elem()
}

func (i ServiceGroupMemberMap) ToServiceGroupMemberMapOutput() ServiceGroupMemberMapOutput {
	return i.ToServiceGroupMemberMapOutputWithContext(context.Background())
}

func (i ServiceGroupMemberMap) ToServiceGroupMemberMapOutputWithContext(ctx context.Context) ServiceGroupMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceGroupMemberMapOutput)
}

type ServiceGroupMemberOutput struct{ *pulumi.OutputState }

func (ServiceGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceGroupMember)(nil)).Elem()
}

func (o ServiceGroupMemberOutput) ToServiceGroupMemberOutput() ServiceGroupMemberOutput {
	return o
}

func (o ServiceGroupMemberOutput) ToServiceGroupMemberOutputWithContext(ctx context.Context) ServiceGroupMemberOutput {
	return o
}

// Specifies the service group member description.
//
// Changing this parameter will create a new resource.
func (o ServiceGroupMemberOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies the destination port.
//
// Changing this parameter will create a new resource.
func (o ServiceGroupMemberOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.StringOutput { return v.DestPort }).(pulumi.StringOutput)
}

// Specifies the ID of the service group.
//
// Changing this parameter will create a new resource.
func (o ServiceGroupMemberOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// Specifies the service group member name.
func (o ServiceGroupMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the protocol type.
// The valid values are:
// + **6**: indicates TCP;
// + **17**: indicates UDP;
// + **1**: indicates ICMP;
// + **58**: indicates ICMPv6;
// + **-1**: indicates any protocol.
//
// Changing this parameter will create a new resource.
func (o ServiceGroupMemberOutput) Protocol() pulumi.IntOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.IntOutput { return v.Protocol }).(pulumi.IntOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o ServiceGroupMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the source port.
//
// Changing this parameter will create a new resource.
func (o ServiceGroupMemberOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceGroupMember) pulumi.StringOutput { return v.SourcePort }).(pulumi.StringOutput)
}

type ServiceGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (ServiceGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceGroupMember)(nil)).Elem()
}

func (o ServiceGroupMemberArrayOutput) ToServiceGroupMemberArrayOutput() ServiceGroupMemberArrayOutput {
	return o
}

func (o ServiceGroupMemberArrayOutput) ToServiceGroupMemberArrayOutputWithContext(ctx context.Context) ServiceGroupMemberArrayOutput {
	return o
}

func (o ServiceGroupMemberArrayOutput) Index(i pulumi.IntInput) ServiceGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceGroupMember {
		return vs[0].([]*ServiceGroupMember)[vs[1].(int)]
	}).(ServiceGroupMemberOutput)
}

type ServiceGroupMemberMapOutput struct{ *pulumi.OutputState }

func (ServiceGroupMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceGroupMember)(nil)).Elem()
}

func (o ServiceGroupMemberMapOutput) ToServiceGroupMemberMapOutput() ServiceGroupMemberMapOutput {
	return o
}

func (o ServiceGroupMemberMapOutput) ToServiceGroupMemberMapOutputWithContext(ctx context.Context) ServiceGroupMemberMapOutput {
	return o
}

func (o ServiceGroupMemberMapOutput) MapIndex(k pulumi.StringInput) ServiceGroupMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceGroupMember {
		return vs[0].(map[string]*ServiceGroupMember)[vs[1].(string)]
	}).(ServiceGroupMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupMemberInput)(nil)).Elem(), &ServiceGroupMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupMemberArrayInput)(nil)).Elem(), ServiceGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceGroupMemberMapInput)(nil)).Elem(), ServiceGroupMemberMap{})
	pulumi.RegisterOutputType(ServiceGroupMemberOutput{})
	pulumi.RegisterOutputType(ServiceGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(ServiceGroupMemberMapOutput{})
}
