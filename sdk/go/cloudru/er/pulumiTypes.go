// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type GetAssociationsAssociation struct {
	// Specifies the attachment ID corresponding to the association.
	AttachmentId string `pulumi:"attachmentId"`
	// Specifies the attachment type corresponding to the association.
	AttachmentType string `pulumi:"attachmentType"`
	// The creation time.
	CreatedAt string `pulumi:"createdAt"`
	// The association ID.
	Id string `pulumi:"id"`
	// The resource ID of the attachment corresponding to the association.
	ResourceId string `pulumi:"resourceId"`
	// The route policy ID of the egress IPv4 protocol.
	RoutePolicyId string `pulumi:"routePolicyId"`
	// Specifies the route table ID to which the association belongs.
	RouteTableId string `pulumi:"routeTableId"`
	// Specifies the status of the association. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status string `pulumi:"status"`
	// The latest update time.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetAssociationsAssociationInput is an input type that accepts GetAssociationsAssociationArgs and GetAssociationsAssociationOutput values.
// You can construct a concrete instance of `GetAssociationsAssociationInput` via:
//
//	GetAssociationsAssociationArgs{...}
type GetAssociationsAssociationInput interface {
	pulumi.Input

	ToGetAssociationsAssociationOutput() GetAssociationsAssociationOutput
	ToGetAssociationsAssociationOutputWithContext(context.Context) GetAssociationsAssociationOutput
}

type GetAssociationsAssociationArgs struct {
	// Specifies the attachment ID corresponding to the association.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// Specifies the attachment type corresponding to the association.
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The creation time.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The association ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The resource ID of the attachment corresponding to the association.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The route policy ID of the egress IPv4 protocol.
	RoutePolicyId pulumi.StringInput `pulumi:"routePolicyId"`
	// Specifies the route table ID to which the association belongs.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Specifies the status of the association. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status pulumi.StringInput `pulumi:"status"`
	// The latest update time.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsAssociation)(nil)).Elem()
}

func (i GetAssociationsAssociationArgs) ToGetAssociationsAssociationOutput() GetAssociationsAssociationOutput {
	return i.ToGetAssociationsAssociationOutputWithContext(context.Background())
}

func (i GetAssociationsAssociationArgs) ToGetAssociationsAssociationOutputWithContext(ctx context.Context) GetAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsAssociationOutput)
}

// GetAssociationsAssociationArrayInput is an input type that accepts GetAssociationsAssociationArray and GetAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `GetAssociationsAssociationArrayInput` via:
//
//	GetAssociationsAssociationArray{ GetAssociationsAssociationArgs{...} }
type GetAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToGetAssociationsAssociationArrayOutput() GetAssociationsAssociationArrayOutput
	ToGetAssociationsAssociationArrayOutputWithContext(context.Context) GetAssociationsAssociationArrayOutput
}

type GetAssociationsAssociationArray []GetAssociationsAssociationInput

func (GetAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsAssociation)(nil)).Elem()
}

func (i GetAssociationsAssociationArray) ToGetAssociationsAssociationArrayOutput() GetAssociationsAssociationArrayOutput {
	return i.ToGetAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i GetAssociationsAssociationArray) ToGetAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAssociationsAssociationArrayOutput)
}

type GetAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (GetAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssociationsAssociation)(nil)).Elem()
}

func (o GetAssociationsAssociationOutput) ToGetAssociationsAssociationOutput() GetAssociationsAssociationOutput {
	return o
}

func (o GetAssociationsAssociationOutput) ToGetAssociationsAssociationOutputWithContext(ctx context.Context) GetAssociationsAssociationOutput {
	return o
}

// Specifies the attachment ID corresponding to the association.
func (o GetAssociationsAssociationOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// Specifies the attachment type corresponding to the association.
func (o GetAssociationsAssociationOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.AttachmentType }).(pulumi.StringOutput)
}

// The creation time.
func (o GetAssociationsAssociationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The association ID.
func (o GetAssociationsAssociationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.Id }).(pulumi.StringOutput)
}

// The resource ID of the attachment corresponding to the association.
func (o GetAssociationsAssociationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The route policy ID of the egress IPv4 protocol.
func (o GetAssociationsAssociationOutput) RoutePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.RoutePolicyId }).(pulumi.StringOutput)
}

// Specifies the route table ID to which the association belongs.
func (o GetAssociationsAssociationOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// Specifies the status of the association. Default value is `available`.
// The valid values are as follows:
// + **available**
// + **failed**
func (o GetAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// The latest update time.
func (o GetAssociationsAssociationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAssociationsAssociation) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAssociationsAssociation)(nil)).Elem()
}

func (o GetAssociationsAssociationArrayOutput) ToGetAssociationsAssociationArrayOutput() GetAssociationsAssociationArrayOutput {
	return o
}

func (o GetAssociationsAssociationArrayOutput) ToGetAssociationsAssociationArrayOutputWithContext(ctx context.Context) GetAssociationsAssociationArrayOutput {
	return o
}

func (o GetAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) GetAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAssociationsAssociation {
		return vs[0].([]GetAssociationsAssociation)[vs[1].(int)]
	}).(GetAssociationsAssociationOutput)
}

type GetAttachmentsAttachment struct {
	// Whether this attachment has been associated.
	Associated bool `pulumi:"associated"`
	// The creation time of the attachment.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the attachment.
	Description string `pulumi:"description"`
	// The attachment ID.
	Id string `pulumi:"id"`
	// Specifies the name used to filter the attachments.
	Name string `pulumi:"name"`
	// Specifies the associated resource ID used to filter the attachments.
	ResourceId string `pulumi:"resourceId"`
	// The associated route table ID.
	RouteTableId string `pulumi:"routeTableId"`
	// Specifies the status used to filter the attachments.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	// + **pending_acceptance**
	// + **rejected**
	Status string `pulumi:"status"`
	// The key/value pairs used to filter the attachments.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the resource type to be filtered.\
	// The valid values are as follows:
	// + **vpc**: Virtual private cloud.
	// + **vpn**: VPN gateway.
	// + **vgw**: Virtual gateway of cloud private line.
	// + **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
	//   peering connection.
	Type string `pulumi:"type"`
	// The latest update time of the attachment.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetAttachmentsAttachmentInput is an input type that accepts GetAttachmentsAttachmentArgs and GetAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `GetAttachmentsAttachmentInput` via:
//
//	GetAttachmentsAttachmentArgs{...}
type GetAttachmentsAttachmentInput interface {
	pulumi.Input

	ToGetAttachmentsAttachmentOutput() GetAttachmentsAttachmentOutput
	ToGetAttachmentsAttachmentOutputWithContext(context.Context) GetAttachmentsAttachmentOutput
}

type GetAttachmentsAttachmentArgs struct {
	// Whether this attachment has been associated.
	Associated pulumi.BoolInput `pulumi:"associated"`
	// The creation time of the attachment.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the attachment.
	Description pulumi.StringInput `pulumi:"description"`
	// The attachment ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name used to filter the attachments.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the associated resource ID used to filter the attachments.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The associated route table ID.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Specifies the status used to filter the attachments.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	// + **pending_acceptance**
	// + **rejected**
	Status pulumi.StringInput `pulumi:"status"`
	// The key/value pairs used to filter the attachments.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the resource type to be filtered.\
	// The valid values are as follows:
	// + **vpc**: Virtual private cloud.
	// + **vpn**: VPN gateway.
	// + **vgw**: Virtual gateway of cloud private line.
	// + **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
	//   peering connection.
	Type pulumi.StringInput `pulumi:"type"`
	// The latest update time of the attachment.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsAttachment)(nil)).Elem()
}

func (i GetAttachmentsAttachmentArgs) ToGetAttachmentsAttachmentOutput() GetAttachmentsAttachmentOutput {
	return i.ToGetAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i GetAttachmentsAttachmentArgs) ToGetAttachmentsAttachmentOutputWithContext(ctx context.Context) GetAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsAttachmentOutput)
}

// GetAttachmentsAttachmentArrayInput is an input type that accepts GetAttachmentsAttachmentArray and GetAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `GetAttachmentsAttachmentArrayInput` via:
//
//	GetAttachmentsAttachmentArray{ GetAttachmentsAttachmentArgs{...} }
type GetAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToGetAttachmentsAttachmentArrayOutput() GetAttachmentsAttachmentArrayOutput
	ToGetAttachmentsAttachmentArrayOutputWithContext(context.Context) GetAttachmentsAttachmentArrayOutput
}

type GetAttachmentsAttachmentArray []GetAttachmentsAttachmentInput

func (GetAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentsAttachment)(nil)).Elem()
}

func (i GetAttachmentsAttachmentArray) ToGetAttachmentsAttachmentArrayOutput() GetAttachmentsAttachmentArrayOutput {
	return i.ToGetAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i GetAttachmentsAttachmentArray) ToGetAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsAttachmentArrayOutput)
}

type GetAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (GetAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsAttachment)(nil)).Elem()
}

func (o GetAttachmentsAttachmentOutput) ToGetAttachmentsAttachmentOutput() GetAttachmentsAttachmentOutput {
	return o
}

func (o GetAttachmentsAttachmentOutput) ToGetAttachmentsAttachmentOutputWithContext(ctx context.Context) GetAttachmentsAttachmentOutput {
	return o
}

// Whether this attachment has been associated.
func (o GetAttachmentsAttachmentOutput) Associated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) bool { return v.Associated }).(pulumi.BoolOutput)
}

// The creation time of the attachment.
func (o GetAttachmentsAttachmentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the attachment.
func (o GetAttachmentsAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// The attachment ID.
func (o GetAttachmentsAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name used to filter the attachments.
func (o GetAttachmentsAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the associated resource ID used to filter the attachments.
func (o GetAttachmentsAttachmentOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The associated route table ID.
func (o GetAttachmentsAttachmentOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// Specifies the status used to filter the attachments.
// The valid values are as follows:
// + **available**
// + **failed**
// + **pending_acceptance**
// + **rejected**
func (o GetAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The key/value pairs used to filter the attachments.
func (o GetAttachmentsAttachmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the resource type to be filtered.\
// The valid values are as follows:
//   - **vpc**: Virtual private cloud.
//   - **vpn**: VPN gateway.
//   - **vgw**: Virtual gateway of cloud private line.
//   - **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
//     peering connection.
func (o GetAttachmentsAttachmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.Type }).(pulumi.StringOutput)
}

// The latest update time of the attachment.
func (o GetAttachmentsAttachmentOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsAttachment) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttachmentsAttachment)(nil)).Elem()
}

func (o GetAttachmentsAttachmentArrayOutput) ToGetAttachmentsAttachmentArrayOutput() GetAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetAttachmentsAttachmentArrayOutput) ToGetAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) GetAttachmentsAttachmentArrayOutput {
	return o
}

func (o GetAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) GetAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttachmentsAttachment {
		return vs[0].([]GetAttachmentsAttachment)[vs[1].(int)]
	}).(GetAttachmentsAttachmentOutput)
}

type GetAvailableRoutesRoute struct {
	// The destination address of the routes to be queried.
	Destination string `pulumi:"destination"`
	// The route ID.
	Id string `pulumi:"id"`
	// Whether the route is a blackhole route.
	IsBlackhole bool `pulumi:"isBlackhole"`
	// The next hops of the route.
	NextHops []GetAvailableRoutesRouteNextHop `pulumi:"nextHops"`
	// The route type.
	Type string `pulumi:"type"`
}

// GetAvailableRoutesRouteInput is an input type that accepts GetAvailableRoutesRouteArgs and GetAvailableRoutesRouteOutput values.
// You can construct a concrete instance of `GetAvailableRoutesRouteInput` via:
//
//	GetAvailableRoutesRouteArgs{...}
type GetAvailableRoutesRouteInput interface {
	pulumi.Input

	ToGetAvailableRoutesRouteOutput() GetAvailableRoutesRouteOutput
	ToGetAvailableRoutesRouteOutputWithContext(context.Context) GetAvailableRoutesRouteOutput
}

type GetAvailableRoutesRouteArgs struct {
	// The destination address of the routes to be queried.
	Destination pulumi.StringInput `pulumi:"destination"`
	// The route ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the route is a blackhole route.
	IsBlackhole pulumi.BoolInput `pulumi:"isBlackhole"`
	// The next hops of the route.
	NextHops GetAvailableRoutesRouteNextHopArrayInput `pulumi:"nextHops"`
	// The route type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetAvailableRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableRoutesRoute)(nil)).Elem()
}

func (i GetAvailableRoutesRouteArgs) ToGetAvailableRoutesRouteOutput() GetAvailableRoutesRouteOutput {
	return i.ToGetAvailableRoutesRouteOutputWithContext(context.Background())
}

func (i GetAvailableRoutesRouteArgs) ToGetAvailableRoutesRouteOutputWithContext(ctx context.Context) GetAvailableRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableRoutesRouteOutput)
}

// GetAvailableRoutesRouteArrayInput is an input type that accepts GetAvailableRoutesRouteArray and GetAvailableRoutesRouteArrayOutput values.
// You can construct a concrete instance of `GetAvailableRoutesRouteArrayInput` via:
//
//	GetAvailableRoutesRouteArray{ GetAvailableRoutesRouteArgs{...} }
type GetAvailableRoutesRouteArrayInput interface {
	pulumi.Input

	ToGetAvailableRoutesRouteArrayOutput() GetAvailableRoutesRouteArrayOutput
	ToGetAvailableRoutesRouteArrayOutputWithContext(context.Context) GetAvailableRoutesRouteArrayOutput
}

type GetAvailableRoutesRouteArray []GetAvailableRoutesRouteInput

func (GetAvailableRoutesRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableRoutesRoute)(nil)).Elem()
}

func (i GetAvailableRoutesRouteArray) ToGetAvailableRoutesRouteArrayOutput() GetAvailableRoutesRouteArrayOutput {
	return i.ToGetAvailableRoutesRouteArrayOutputWithContext(context.Background())
}

func (i GetAvailableRoutesRouteArray) ToGetAvailableRoutesRouteArrayOutputWithContext(ctx context.Context) GetAvailableRoutesRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableRoutesRouteArrayOutput)
}

type GetAvailableRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetAvailableRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableRoutesRoute)(nil)).Elem()
}

func (o GetAvailableRoutesRouteOutput) ToGetAvailableRoutesRouteOutput() GetAvailableRoutesRouteOutput {
	return o
}

func (o GetAvailableRoutesRouteOutput) ToGetAvailableRoutesRouteOutputWithContext(ctx context.Context) GetAvailableRoutesRouteOutput {
	return o
}

// The destination address of the routes to be queried.
func (o GetAvailableRoutesRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableRoutesRoute) string { return v.Destination }).(pulumi.StringOutput)
}

// The route ID.
func (o GetAvailableRoutesRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableRoutesRoute) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the route is a blackhole route.
func (o GetAvailableRoutesRouteOutput) IsBlackhole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAvailableRoutesRoute) bool { return v.IsBlackhole }).(pulumi.BoolOutput)
}

// The next hops of the route.
func (o GetAvailableRoutesRouteOutput) NextHops() GetAvailableRoutesRouteNextHopArrayOutput {
	return o.ApplyT(func(v GetAvailableRoutesRoute) []GetAvailableRoutesRouteNextHop { return v.NextHops }).(GetAvailableRoutesRouteNextHopArrayOutput)
}

// The route type.
func (o GetAvailableRoutesRouteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableRoutesRoute) string { return v.Type }).(pulumi.StringOutput)
}

type GetAvailableRoutesRouteArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableRoutesRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableRoutesRoute)(nil)).Elem()
}

func (o GetAvailableRoutesRouteArrayOutput) ToGetAvailableRoutesRouteArrayOutput() GetAvailableRoutesRouteArrayOutput {
	return o
}

func (o GetAvailableRoutesRouteArrayOutput) ToGetAvailableRoutesRouteArrayOutputWithContext(ctx context.Context) GetAvailableRoutesRouteArrayOutput {
	return o
}

func (o GetAvailableRoutesRouteArrayOutput) Index(i pulumi.IntInput) GetAvailableRoutesRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableRoutesRoute {
		return vs[0].([]GetAvailableRoutesRoute)[vs[1].(int)]
	}).(GetAvailableRoutesRouteOutput)
}

type GetAvailableRoutesRouteNextHop struct {
	// The attachment ID.
	AttachmentId string `pulumi:"attachmentId"`
	// The attached resource ID.
	ResourceId string `pulumi:"resourceId"`
	// The attachment type.
	// The valid values are as follows:
	// + **vpc**: VPC attachment.
	// + **vpn**: VPN gateway attachment.
	// + **vgw**: virtual gateway attachment.
	// + **peering**: peering connection attachment.
	// + **ecn**: ECN attachment.
	// + **cfw**: CFW instance attachment.
	ResourceType string `pulumi:"resourceType"`
}

// GetAvailableRoutesRouteNextHopInput is an input type that accepts GetAvailableRoutesRouteNextHopArgs and GetAvailableRoutesRouteNextHopOutput values.
// You can construct a concrete instance of `GetAvailableRoutesRouteNextHopInput` via:
//
//	GetAvailableRoutesRouteNextHopArgs{...}
type GetAvailableRoutesRouteNextHopInput interface {
	pulumi.Input

	ToGetAvailableRoutesRouteNextHopOutput() GetAvailableRoutesRouteNextHopOutput
	ToGetAvailableRoutesRouteNextHopOutputWithContext(context.Context) GetAvailableRoutesRouteNextHopOutput
}

type GetAvailableRoutesRouteNextHopArgs struct {
	// The attachment ID.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// The attached resource ID.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The attachment type.
	// The valid values are as follows:
	// + **vpc**: VPC attachment.
	// + **vpn**: VPN gateway attachment.
	// + **vgw**: virtual gateway attachment.
	// + **peering**: peering connection attachment.
	// + **ecn**: ECN attachment.
	// + **cfw**: CFW instance attachment.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetAvailableRoutesRouteNextHopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableRoutesRouteNextHop)(nil)).Elem()
}

func (i GetAvailableRoutesRouteNextHopArgs) ToGetAvailableRoutesRouteNextHopOutput() GetAvailableRoutesRouteNextHopOutput {
	return i.ToGetAvailableRoutesRouteNextHopOutputWithContext(context.Background())
}

func (i GetAvailableRoutesRouteNextHopArgs) ToGetAvailableRoutesRouteNextHopOutputWithContext(ctx context.Context) GetAvailableRoutesRouteNextHopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableRoutesRouteNextHopOutput)
}

// GetAvailableRoutesRouteNextHopArrayInput is an input type that accepts GetAvailableRoutesRouteNextHopArray and GetAvailableRoutesRouteNextHopArrayOutput values.
// You can construct a concrete instance of `GetAvailableRoutesRouteNextHopArrayInput` via:
//
//	GetAvailableRoutesRouteNextHopArray{ GetAvailableRoutesRouteNextHopArgs{...} }
type GetAvailableRoutesRouteNextHopArrayInput interface {
	pulumi.Input

	ToGetAvailableRoutesRouteNextHopArrayOutput() GetAvailableRoutesRouteNextHopArrayOutput
	ToGetAvailableRoutesRouteNextHopArrayOutputWithContext(context.Context) GetAvailableRoutesRouteNextHopArrayOutput
}

type GetAvailableRoutesRouteNextHopArray []GetAvailableRoutesRouteNextHopInput

func (GetAvailableRoutesRouteNextHopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableRoutesRouteNextHop)(nil)).Elem()
}

func (i GetAvailableRoutesRouteNextHopArray) ToGetAvailableRoutesRouteNextHopArrayOutput() GetAvailableRoutesRouteNextHopArrayOutput {
	return i.ToGetAvailableRoutesRouteNextHopArrayOutputWithContext(context.Background())
}

func (i GetAvailableRoutesRouteNextHopArray) ToGetAvailableRoutesRouteNextHopArrayOutputWithContext(ctx context.Context) GetAvailableRoutesRouteNextHopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailableRoutesRouteNextHopArrayOutput)
}

type GetAvailableRoutesRouteNextHopOutput struct{ *pulumi.OutputState }

func (GetAvailableRoutesRouteNextHopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableRoutesRouteNextHop)(nil)).Elem()
}

func (o GetAvailableRoutesRouteNextHopOutput) ToGetAvailableRoutesRouteNextHopOutput() GetAvailableRoutesRouteNextHopOutput {
	return o
}

func (o GetAvailableRoutesRouteNextHopOutput) ToGetAvailableRoutesRouteNextHopOutputWithContext(ctx context.Context) GetAvailableRoutesRouteNextHopOutput {
	return o
}

// The attachment ID.
func (o GetAvailableRoutesRouteNextHopOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableRoutesRouteNextHop) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// The attached resource ID.
func (o GetAvailableRoutesRouteNextHopOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableRoutesRouteNextHop) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The attachment type.
// The valid values are as follows:
// + **vpc**: VPC attachment.
// + **vpn**: VPN gateway attachment.
// + **vgw**: virtual gateway attachment.
// + **peering**: peering connection attachment.
// + **ecn**: ECN attachment.
// + **cfw**: CFW instance attachment.
func (o GetAvailableRoutesRouteNextHopOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableRoutesRouteNextHop) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetAvailableRoutesRouteNextHopArrayOutput struct{ *pulumi.OutputState }

func (GetAvailableRoutesRouteNextHopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailableRoutesRouteNextHop)(nil)).Elem()
}

func (o GetAvailableRoutesRouteNextHopArrayOutput) ToGetAvailableRoutesRouteNextHopArrayOutput() GetAvailableRoutesRouteNextHopArrayOutput {
	return o
}

func (o GetAvailableRoutesRouteNextHopArrayOutput) ToGetAvailableRoutesRouteNextHopArrayOutputWithContext(ctx context.Context) GetAvailableRoutesRouteNextHopArrayOutput {
	return o
}

func (o GetAvailableRoutesRouteNextHopArrayOutput) Index(i pulumi.IntInput) GetAvailableRoutesRouteNextHopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailableRoutesRouteNextHop {
		return vs[0].([]GetAvailableRoutesRouteNextHop)[vs[1].(int)]
	}).(GetAvailableRoutesRouteNextHopOutput)
}

type GetFlowLogsFlowLog struct {
	// The creation time of the flow log.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the flow log.
	Description string `pulumi:"description"`
	// Specifies the switch status of the flow log.
	// The value can be **true** and **false**.
	Enabled bool `pulumi:"enabled"`
	// The ID of the flow log.
	Id string `pulumi:"id"`
	// Specifies the ID of the log group to which the flow logs belong.
	LogGroupId string `pulumi:"logGroupId"`
	// The storage type of the flow log.
	LogStoreType string `pulumi:"logStoreType"`
	// Specifies the ID of the log stream to which the flow logs belong.
	LogStreamId string `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name string `pulumi:"name"`
	// Specifies the ID of the attachment to which the flow logs belong.
	ResourceId string `pulumi:"resourceId"`
	// Specifies the type of the flow logs.
	// The valid values are as follows:
	// + **attachment**: The flow logs type are attachment.
	ResourceType string `pulumi:"resourceType"`
	// Specifies the status of the flow logs.
	Status string `pulumi:"status"`
	// The latest update time of the flow log.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetFlowLogsFlowLogInput is an input type that accepts GetFlowLogsFlowLogArgs and GetFlowLogsFlowLogOutput values.
// You can construct a concrete instance of `GetFlowLogsFlowLogInput` via:
//
//	GetFlowLogsFlowLogArgs{...}
type GetFlowLogsFlowLogInput interface {
	pulumi.Input

	ToGetFlowLogsFlowLogOutput() GetFlowLogsFlowLogOutput
	ToGetFlowLogsFlowLogOutputWithContext(context.Context) GetFlowLogsFlowLogOutput
}

type GetFlowLogsFlowLogArgs struct {
	// The creation time of the flow log.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the flow log.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the switch status of the flow log.
	// The value can be **true** and **false**.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of the flow log.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the ID of the log group to which the flow logs belong.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// The storage type of the flow log.
	LogStoreType pulumi.StringInput `pulumi:"logStoreType"`
	// Specifies the ID of the log stream to which the flow logs belong.
	LogStreamId pulumi.StringInput `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the ID of the attachment to which the flow logs belong.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Specifies the type of the flow logs.
	// The valid values are as follows:
	// + **attachment**: The flow logs type are attachment.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Specifies the status of the flow logs.
	Status pulumi.StringInput `pulumi:"status"`
	// The latest update time of the flow log.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetFlowLogsFlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsFlowLog)(nil)).Elem()
}

func (i GetFlowLogsFlowLogArgs) ToGetFlowLogsFlowLogOutput() GetFlowLogsFlowLogOutput {
	return i.ToGetFlowLogsFlowLogOutputWithContext(context.Background())
}

func (i GetFlowLogsFlowLogArgs) ToGetFlowLogsFlowLogOutputWithContext(ctx context.Context) GetFlowLogsFlowLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsFlowLogOutput)
}

// GetFlowLogsFlowLogArrayInput is an input type that accepts GetFlowLogsFlowLogArray and GetFlowLogsFlowLogArrayOutput values.
// You can construct a concrete instance of `GetFlowLogsFlowLogArrayInput` via:
//
//	GetFlowLogsFlowLogArray{ GetFlowLogsFlowLogArgs{...} }
type GetFlowLogsFlowLogArrayInput interface {
	pulumi.Input

	ToGetFlowLogsFlowLogArrayOutput() GetFlowLogsFlowLogArrayOutput
	ToGetFlowLogsFlowLogArrayOutputWithContext(context.Context) GetFlowLogsFlowLogArrayOutput
}

type GetFlowLogsFlowLogArray []GetFlowLogsFlowLogInput

func (GetFlowLogsFlowLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsFlowLog)(nil)).Elem()
}

func (i GetFlowLogsFlowLogArray) ToGetFlowLogsFlowLogArrayOutput() GetFlowLogsFlowLogArrayOutput {
	return i.ToGetFlowLogsFlowLogArrayOutputWithContext(context.Background())
}

func (i GetFlowLogsFlowLogArray) ToGetFlowLogsFlowLogArrayOutputWithContext(ctx context.Context) GetFlowLogsFlowLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsFlowLogArrayOutput)
}

type GetFlowLogsFlowLogOutput struct{ *pulumi.OutputState }

func (GetFlowLogsFlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsFlowLog)(nil)).Elem()
}

func (o GetFlowLogsFlowLogOutput) ToGetFlowLogsFlowLogOutput() GetFlowLogsFlowLogOutput {
	return o
}

func (o GetFlowLogsFlowLogOutput) ToGetFlowLogsFlowLogOutputWithContext(ctx context.Context) GetFlowLogsFlowLogOutput {
	return o
}

// The creation time of the flow log.
func (o GetFlowLogsFlowLogOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the flow log.
func (o GetFlowLogsFlowLogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the switch status of the flow log.
// The value can be **true** and **false**.
func (o GetFlowLogsFlowLogOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the flow log.
func (o GetFlowLogsFlowLogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the ID of the log group to which the flow logs belong.
func (o GetFlowLogsFlowLogOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// The storage type of the flow log.
func (o GetFlowLogsFlowLogOutput) LogStoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.LogStoreType }).(pulumi.StringOutput)
}

// Specifies the ID of the log stream to which the flow logs belong.
func (o GetFlowLogsFlowLogOutput) LogStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.LogStreamId }).(pulumi.StringOutput)
}

// Specifies the name of the flow log.
func (o GetFlowLogsFlowLogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of the attachment to which the flow logs belong.
func (o GetFlowLogsFlowLogOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Specifies the type of the flow logs.
// The valid values are as follows:
// + **attachment**: The flow logs type are attachment.
func (o GetFlowLogsFlowLogOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Specifies the status of the flow logs.
func (o GetFlowLogsFlowLogOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Status }).(pulumi.StringOutput)
}

// The latest update time of the flow log.
func (o GetFlowLogsFlowLogOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetFlowLogsFlowLogArrayOutput struct{ *pulumi.OutputState }

func (GetFlowLogsFlowLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsFlowLog)(nil)).Elem()
}

func (o GetFlowLogsFlowLogArrayOutput) ToGetFlowLogsFlowLogArrayOutput() GetFlowLogsFlowLogArrayOutput {
	return o
}

func (o GetFlowLogsFlowLogArrayOutput) ToGetFlowLogsFlowLogArrayOutputWithContext(ctx context.Context) GetFlowLogsFlowLogArrayOutput {
	return o
}

func (o GetFlowLogsFlowLogArrayOutput) Index(i pulumi.IntInput) GetFlowLogsFlowLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowLogsFlowLog {
		return vs[0].([]GetFlowLogsFlowLog)[vs[1].(int)]
	}).(GetFlowLogsFlowLogOutput)
}

type GetInstancesInstance struct {
	// The BGP AS number of the ER instance.
	Asn int `pulumi:"asn"`
	// Whether to automatically accept the creation of shared attachment.
	AutoAcceptSharedAttachments bool `pulumi:"autoAcceptSharedAttachments"`
	// The availability zone list where the ER instance is located.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The creation time of the ER instance.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the default association route table.
	DefaultAssociationRouteTableId string `pulumi:"defaultAssociationRouteTableId"`
	// The ID of the default propagation route table.
	DefaultPropagationRouteTableId string `pulumi:"defaultPropagationRouteTableId"`
	// The description of the ER instance.
	Description string `pulumi:"description"`
	// Whether to enable the association of the default route table.
	EnableDefaultAssociation bool `pulumi:"enableDefaultAssociation"`
	// Whether to enable the propagation of the default route table.
	EnableDefaultPropagation bool `pulumi:"enableDefaultPropagation"`
	// Specifies the enterprise project ID of the ER instances to be queried.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The ER instance ID.
	Id string `pulumi:"id"`
	// Specifies the name used to filter the ER instances.
	// The valid length is limited from `1` to `64`, only Chinese and English letters, digits, underscores (_) and
	// hyphens (-) are allowed.
	Name string `pulumi:"name"`
	// Specifies the status used to filter the ER instances.
	Status string `pulumi:"status"`
	// Specifies the key/value pairs used to filter the ER instances.
	Tags map[string]string `pulumi:"tags"`
	// The last update time of the ER instance.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The BGP AS number of the ER instance.
	Asn pulumi.IntInput `pulumi:"asn"`
	// Whether to automatically accept the creation of shared attachment.
	AutoAcceptSharedAttachments pulumi.BoolInput `pulumi:"autoAcceptSharedAttachments"`
	// The availability zone list where the ER instance is located.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The creation time of the ER instance.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of the default association route table.
	DefaultAssociationRouteTableId pulumi.StringInput `pulumi:"defaultAssociationRouteTableId"`
	// The ID of the default propagation route table.
	DefaultPropagationRouteTableId pulumi.StringInput `pulumi:"defaultPropagationRouteTableId"`
	// The description of the ER instance.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to enable the association of the default route table.
	EnableDefaultAssociation pulumi.BoolInput `pulumi:"enableDefaultAssociation"`
	// Whether to enable the propagation of the default route table.
	EnableDefaultPropagation pulumi.BoolInput `pulumi:"enableDefaultPropagation"`
	// Specifies the enterprise project ID of the ER instances to be queried.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The ER instance ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name used to filter the ER instances.
	// The valid length is limited from `1` to `64`, only Chinese and English letters, digits, underscores (_) and
	// hyphens (-) are allowed.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the status used to filter the ER instances.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the key/value pairs used to filter the ER instances.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The last update time of the ER instance.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The BGP AS number of the ER instance.
func (o GetInstancesInstanceOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.Asn }).(pulumi.IntOutput)
}

// Whether to automatically accept the creation of shared attachment.
func (o GetInstancesInstanceOutput) AutoAcceptSharedAttachments() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.AutoAcceptSharedAttachments }).(pulumi.BoolOutput)
}

// The availability zone list where the ER instance is located.
func (o GetInstancesInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The creation time of the ER instance.
func (o GetInstancesInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the default association route table.
func (o GetInstancesInstanceOutput) DefaultAssociationRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DefaultAssociationRouteTableId }).(pulumi.StringOutput)
}

// The ID of the default propagation route table.
func (o GetInstancesInstanceOutput) DefaultPropagationRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DefaultPropagationRouteTableId }).(pulumi.StringOutput)
}

// The description of the ER instance.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to enable the association of the default route table.
func (o GetInstancesInstanceOutput) EnableDefaultAssociation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.EnableDefaultAssociation }).(pulumi.BoolOutput)
}

// Whether to enable the propagation of the default route table.
func (o GetInstancesInstanceOutput) EnableDefaultPropagation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.EnableDefaultPropagation }).(pulumi.BoolOutput)
}

// Specifies the enterprise project ID of the ER instances to be queried.
func (o GetInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The ER instance ID.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name used to filter the ER instances.
// The valid length is limited from `1` to `64`, only Chinese and English letters, digits, underscores (_) and
// hyphens (-) are allowed.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the status used to filter the ER instances.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs used to filter the ER instances.
func (o GetInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The last update time of the ER instance.
func (o GetInstancesInstanceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetPropagationsPropagation struct {
	// Specifies the attachment ID to which the propagation belongs.
	AttachmentId string `pulumi:"attachmentId"`
	// Specifies the attachment type of corresponding to the propagation.\
	// The valid values are as follows:
	// + **vpc**: Virtual private cloud.
	// + **vpn**: VPN gateway.
	// + **vgw**: Virtual gateway of cloud private line.
	// + **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
	//   peering connection.
	// + **enc**: Enterprise connect network in EC.
	// + **cfw**: VPC border firewall.
	AttachmentType string `pulumi:"attachmentType"`
	// The creation time of the propagation.
	CreatedAt string `pulumi:"createdAt"`
	// The propagation ID.
	Id string `pulumi:"id"`
	// Specifies the ER instance ID to which the propagation belongs.
	InstanceId string `pulumi:"instanceId"`
	// The resource ID of the attachment associated with the propagation.
	ResourceId string `pulumi:"resourceId"`
	// The route policy ID of the ingress IPv4 protocol.
	RoutePolicyId string `pulumi:"routePolicyId"`
	// Specifies the route table ID to which the propagation belongs.
	RouteTableId string `pulumi:"routeTableId"`
	// Specifies the status of the propagation. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status string `pulumi:"status"`
	// The latest update time of the propagation.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetPropagationsPropagationInput is an input type that accepts GetPropagationsPropagationArgs and GetPropagationsPropagationOutput values.
// You can construct a concrete instance of `GetPropagationsPropagationInput` via:
//
//	GetPropagationsPropagationArgs{...}
type GetPropagationsPropagationInput interface {
	pulumi.Input

	ToGetPropagationsPropagationOutput() GetPropagationsPropagationOutput
	ToGetPropagationsPropagationOutputWithContext(context.Context) GetPropagationsPropagationOutput
}

type GetPropagationsPropagationArgs struct {
	// Specifies the attachment ID to which the propagation belongs.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// Specifies the attachment type of corresponding to the propagation.\
	// The valid values are as follows:
	// + **vpc**: Virtual private cloud.
	// + **vpn**: VPN gateway.
	// + **vgw**: Virtual gateway of cloud private line.
	// + **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
	//   peering connection.
	// + **enc**: Enterprise connect network in EC.
	// + **cfw**: VPC border firewall.
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The creation time of the propagation.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The propagation ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the ER instance ID to which the propagation belongs.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The resource ID of the attachment associated with the propagation.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The route policy ID of the ingress IPv4 protocol.
	RoutePolicyId pulumi.StringInput `pulumi:"routePolicyId"`
	// Specifies the route table ID to which the propagation belongs.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// Specifies the status of the propagation. Default value is `available`.
	// The valid values are as follows:
	// + **available**
	// + **failed**
	Status pulumi.StringInput `pulumi:"status"`
	// The latest update time of the propagation.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetPropagationsPropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropagationsPropagation)(nil)).Elem()
}

func (i GetPropagationsPropagationArgs) ToGetPropagationsPropagationOutput() GetPropagationsPropagationOutput {
	return i.ToGetPropagationsPropagationOutputWithContext(context.Background())
}

func (i GetPropagationsPropagationArgs) ToGetPropagationsPropagationOutputWithContext(ctx context.Context) GetPropagationsPropagationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropagationsPropagationOutput)
}

// GetPropagationsPropagationArrayInput is an input type that accepts GetPropagationsPropagationArray and GetPropagationsPropagationArrayOutput values.
// You can construct a concrete instance of `GetPropagationsPropagationArrayInput` via:
//
//	GetPropagationsPropagationArray{ GetPropagationsPropagationArgs{...} }
type GetPropagationsPropagationArrayInput interface {
	pulumi.Input

	ToGetPropagationsPropagationArrayOutput() GetPropagationsPropagationArrayOutput
	ToGetPropagationsPropagationArrayOutputWithContext(context.Context) GetPropagationsPropagationArrayOutput
}

type GetPropagationsPropagationArray []GetPropagationsPropagationInput

func (GetPropagationsPropagationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropagationsPropagation)(nil)).Elem()
}

func (i GetPropagationsPropagationArray) ToGetPropagationsPropagationArrayOutput() GetPropagationsPropagationArrayOutput {
	return i.ToGetPropagationsPropagationArrayOutputWithContext(context.Background())
}

func (i GetPropagationsPropagationArray) ToGetPropagationsPropagationArrayOutputWithContext(ctx context.Context) GetPropagationsPropagationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropagationsPropagationArrayOutput)
}

type GetPropagationsPropagationOutput struct{ *pulumi.OutputState }

func (GetPropagationsPropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropagationsPropagation)(nil)).Elem()
}

func (o GetPropagationsPropagationOutput) ToGetPropagationsPropagationOutput() GetPropagationsPropagationOutput {
	return o
}

func (o GetPropagationsPropagationOutput) ToGetPropagationsPropagationOutputWithContext(ctx context.Context) GetPropagationsPropagationOutput {
	return o
}

// Specifies the attachment ID to which the propagation belongs.
func (o GetPropagationsPropagationOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// Specifies the attachment type of corresponding to the propagation.\
// The valid values are as follows:
//   - **vpc**: Virtual private cloud.
//   - **vpn**: VPN gateway.
//   - **vgw**: Virtual gateway of cloud private line.
//   - **peering**: Peering connection, through the cloud connection (CC) to load ERs in different regions to create a
//     peering connection.
//   - **enc**: Enterprise connect network in EC.
//   - **cfw**: VPC border firewall.
func (o GetPropagationsPropagationOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.AttachmentType }).(pulumi.StringOutput)
}

// The creation time of the propagation.
func (o GetPropagationsPropagationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The propagation ID.
func (o GetPropagationsPropagationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the ER instance ID to which the propagation belongs.
func (o GetPropagationsPropagationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The resource ID of the attachment associated with the propagation.
func (o GetPropagationsPropagationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The route policy ID of the ingress IPv4 protocol.
func (o GetPropagationsPropagationOutput) RoutePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.RoutePolicyId }).(pulumi.StringOutput)
}

// Specifies the route table ID to which the propagation belongs.
func (o GetPropagationsPropagationOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// Specifies the status of the propagation. Default value is `available`.
// The valid values are as follows:
// + **available**
// + **failed**
func (o GetPropagationsPropagationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.Status }).(pulumi.StringOutput)
}

// The latest update time of the propagation.
func (o GetPropagationsPropagationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropagationsPropagation) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetPropagationsPropagationArrayOutput struct{ *pulumi.OutputState }

func (GetPropagationsPropagationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropagationsPropagation)(nil)).Elem()
}

func (o GetPropagationsPropagationArrayOutput) ToGetPropagationsPropagationArrayOutput() GetPropagationsPropagationArrayOutput {
	return o
}

func (o GetPropagationsPropagationArrayOutput) ToGetPropagationsPropagationArrayOutputWithContext(ctx context.Context) GetPropagationsPropagationArrayOutput {
	return o
}

func (o GetPropagationsPropagationArrayOutput) Index(i pulumi.IntInput) GetPropagationsPropagationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropagationsPropagation {
		return vs[0].([]GetPropagationsPropagation)[vs[1].(int)]
	}).(GetPropagationsPropagationOutput)
}

type GetQuotasQuota struct {
	// The number of available quotas, `-1` means unlimited.
	Limit int `pulumi:"limit"`
	// The quota type to be queried.
	// The valid values are as follows:
	// + **er_instance**: Quotas and usage for enterprise router instances.
	// + **dc_attachment**: Quotas and usage for DC attachment.
	// + **vpc_attachment**: Quotas and usage for VPC attachment.
	// + **vpn_attachment**: Quotas and usage for VPN attachment.
	// + **peering_attachment**: Quotas and usage for peering attachment.
	// + **can_attachment**: Quotas and usage for can attachment.
	// + **route_table**: Quotas and usage for route table.
	// + **static_route**: Quotas and usage for static route.
	// + **vpc_er**: The number of enterprise routers that each VPC can access and the current usage.
	// + **flow_log**: The number of flow logs that can be created per attachment.
	Type string `pulumi:"type"`
	// The unit of usage.
	Unit string `pulumi:"unit"`
	// The number of quota used.
	Used int `pulumi:"used"`
}

// GetQuotasQuotaInput is an input type that accepts GetQuotasQuotaArgs and GetQuotasQuotaOutput values.
// You can construct a concrete instance of `GetQuotasQuotaInput` via:
//
//	GetQuotasQuotaArgs{...}
type GetQuotasQuotaInput interface {
	pulumi.Input

	ToGetQuotasQuotaOutput() GetQuotasQuotaOutput
	ToGetQuotasQuotaOutputWithContext(context.Context) GetQuotasQuotaOutput
}

type GetQuotasQuotaArgs struct {
	// The number of available quotas, `-1` means unlimited.
	Limit pulumi.IntInput `pulumi:"limit"`
	// The quota type to be queried.
	// The valid values are as follows:
	// + **er_instance**: Quotas and usage for enterprise router instances.
	// + **dc_attachment**: Quotas and usage for DC attachment.
	// + **vpc_attachment**: Quotas and usage for VPC attachment.
	// + **vpn_attachment**: Quotas and usage for VPN attachment.
	// + **peering_attachment**: Quotas and usage for peering attachment.
	// + **can_attachment**: Quotas and usage for can attachment.
	// + **route_table**: Quotas and usage for route table.
	// + **static_route**: Quotas and usage for static route.
	// + **vpc_er**: The number of enterprise routers that each VPC can access and the current usage.
	// + **flow_log**: The number of flow logs that can be created per attachment.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of usage.
	Unit pulumi.StringInput `pulumi:"unit"`
	// The number of quota used.
	Used pulumi.IntInput `pulumi:"used"`
}

func (GetQuotasQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return i.ToGetQuotasQuotaOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaOutput)
}

// GetQuotasQuotaArrayInput is an input type that accepts GetQuotasQuotaArray and GetQuotasQuotaArrayOutput values.
// You can construct a concrete instance of `GetQuotasQuotaArrayInput` via:
//
//	GetQuotasQuotaArray{ GetQuotasQuotaArgs{...} }
type GetQuotasQuotaArrayInput interface {
	pulumi.Input

	ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput
	ToGetQuotasQuotaArrayOutputWithContext(context.Context) GetQuotasQuotaArrayOutput
}

type GetQuotasQuotaArray []GetQuotasQuotaInput

func (GetQuotasQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return i.ToGetQuotasQuotaArrayOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaArrayOutput)
}

type GetQuotasQuotaOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return o
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return o
}

// The number of available quotas, `-1` means unlimited.
func (o GetQuotasQuotaOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuota) int { return v.Limit }).(pulumi.IntOutput)
}

// The quota type to be queried.
// The valid values are as follows:
// + **er_instance**: Quotas and usage for enterprise router instances.
// + **dc_attachment**: Quotas and usage for DC attachment.
// + **vpc_attachment**: Quotas and usage for VPC attachment.
// + **vpn_attachment**: Quotas and usage for VPN attachment.
// + **peering_attachment**: Quotas and usage for peering attachment.
// + **can_attachment**: Quotas and usage for can attachment.
// + **route_table**: Quotas and usage for route table.
// + **static_route**: Quotas and usage for static route.
// + **vpc_er**: The number of enterprise routers that each VPC can access and the current usage.
// + **flow_log**: The number of flow logs that can be created per attachment.
func (o GetQuotasQuotaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of usage.
func (o GetQuotasQuotaOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Unit }).(pulumi.StringOutput)
}

// The number of quota used.
func (o GetQuotasQuotaOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasQuota) int { return v.Used }).(pulumi.IntOutput)
}

type GetQuotasQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) Index(i pulumi.IntInput) GetQuotasQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasQuota {
		return vs[0].([]GetQuotasQuota)[vs[1].(int)]
	}).(GetQuotasQuotaOutput)
}

type GetRouteTablesRouteTable struct {
	// The association configurations of the route table.\
	// The object structure is documented below.
	Associations []GetRouteTablesRouteTableAssociation `pulumi:"associations"`
	// The creation time.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the route table.
	Description string `pulumi:"description"`
	// The route ID.
	Id string `pulumi:"id"`
	// Whether this route table is the default association route table.
	IsDefaultAssociation bool `pulumi:"isDefaultAssociation"`
	// Whether this route table is the default propagation route table.
	IsDefaultPropagation bool `pulumi:"isDefaultPropagation"`
	// Specifies the name used to filter the route tables.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name string `pulumi:"name"`
	// The propagation configurations of the route table.\
	// The object structure is documented below.
	Propagations []GetRouteTablesRouteTablePropagation `pulumi:"propagations"`
	// The route details of the route table.\
	// The object structure is documented below.
	Routes []GetRouteTablesRouteTableRoute `pulumi:"routes"`
	// The current status of the route.
	Status string `pulumi:"status"`
	// Specifies the key/value pairs used to filter the route tables.
	Tags map[string]string `pulumi:"tags"`
	// The latest update time.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetRouteTablesRouteTableInput is an input type that accepts GetRouteTablesRouteTableArgs and GetRouteTablesRouteTableOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableInput` via:
//
//	GetRouteTablesRouteTableArgs{...}
type GetRouteTablesRouteTableInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput
	ToGetRouteTablesRouteTableOutputWithContext(context.Context) GetRouteTablesRouteTableOutput
}

type GetRouteTablesRouteTableArgs struct {
	// The association configurations of the route table.\
	// The object structure is documented below.
	Associations GetRouteTablesRouteTableAssociationArrayInput `pulumi:"associations"`
	// The creation time.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the route table.
	Description pulumi.StringInput `pulumi:"description"`
	// The route ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether this route table is the default association route table.
	IsDefaultAssociation pulumi.BoolInput `pulumi:"isDefaultAssociation"`
	// Whether this route table is the default propagation route table.
	IsDefaultPropagation pulumi.BoolInput `pulumi:"isDefaultPropagation"`
	// Specifies the name used to filter the route tables.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name pulumi.StringInput `pulumi:"name"`
	// The propagation configurations of the route table.\
	// The object structure is documented below.
	Propagations GetRouteTablesRouteTablePropagationArrayInput `pulumi:"propagations"`
	// The route details of the route table.\
	// The object structure is documented below.
	Routes GetRouteTablesRouteTableRouteArrayInput `pulumi:"routes"`
	// The current status of the route.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the key/value pairs used to filter the route tables.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The latest update time.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetRouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableArgs) ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput {
	return i.ToGetRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableArgs) ToGetRouteTablesRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableOutput)
}

// GetRouteTablesRouteTableArrayInput is an input type that accepts GetRouteTablesRouteTableArray and GetRouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableArrayInput` via:
//
//	GetRouteTablesRouteTableArray{ GetRouteTablesRouteTableArgs{...} }
type GetRouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput
	ToGetRouteTablesRouteTableArrayOutputWithContext(context.Context) GetRouteTablesRouteTableArrayOutput
}

type GetRouteTablesRouteTableArray []GetRouteTablesRouteTableInput

func (GetRouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableArray) ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput {
	return i.ToGetRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableArray) ToGetRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableArrayOutput)
}

type GetRouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableOutput) ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput {
	return o
}

func (o GetRouteTablesRouteTableOutput) ToGetRouteTablesRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableOutput {
	return o
}

// The association configurations of the route table.\
// The object structure is documented below.
func (o GetRouteTablesRouteTableOutput) Associations() GetRouteTablesRouteTableAssociationArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableAssociation { return v.Associations }).(GetRouteTablesRouteTableAssociationArrayOutput)
}

// The creation time.
func (o GetRouteTablesRouteTableOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the route table.
func (o GetRouteTablesRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.Description }).(pulumi.StringOutput)
}

// The route ID.
func (o GetRouteTablesRouteTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.Id }).(pulumi.StringOutput)
}

// Whether this route table is the default association route table.
func (o GetRouteTablesRouteTableOutput) IsDefaultAssociation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) bool { return v.IsDefaultAssociation }).(pulumi.BoolOutput)
}

// Whether this route table is the default propagation route table.
func (o GetRouteTablesRouteTableOutput) IsDefaultPropagation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) bool { return v.IsDefaultPropagation }).(pulumi.BoolOutput)
}

// Specifies the name used to filter the route tables.\
// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
// hyphens (-) and dots (.) allowed.
func (o GetRouteTablesRouteTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.Name }).(pulumi.StringOutput)
}

// The propagation configurations of the route table.\
// The object structure is documented below.
func (o GetRouteTablesRouteTableOutput) Propagations() GetRouteTablesRouteTablePropagationArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTablePropagation { return v.Propagations }).(GetRouteTablesRouteTablePropagationArrayOutput)
}

// The route details of the route table.\
// The object structure is documented below.
func (o GetRouteTablesRouteTableOutput) Routes() GetRouteTablesRouteTableRouteArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableRoute { return v.Routes }).(GetRouteTablesRouteTableRouteArrayOutput)
}

// The current status of the route.
func (o GetRouteTablesRouteTableOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs used to filter the route tables.
func (o GetRouteTablesRouteTableOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The latest update time.
func (o GetRouteTablesRouteTableOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableArrayOutput) ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableArrayOutput) ToGetRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTable {
		return vs[0].([]GetRouteTablesRouteTable)[vs[1].(int)]
	}).(GetRouteTablesRouteTableOutput)
}

type GetRouteTablesRouteTableAssociation struct {
	// The ID of the nexthop attachment.
	AttachmentId string `pulumi:"attachmentId"`
	// The type of the nexthop attachment.
	AttachmentType string `pulumi:"attachmentType"`
	// The route ID.
	Id string `pulumi:"id"`
}

// GetRouteTablesRouteTableAssociationInput is an input type that accepts GetRouteTablesRouteTableAssociationArgs and GetRouteTablesRouteTableAssociationOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableAssociationInput` via:
//
//	GetRouteTablesRouteTableAssociationArgs{...}
type GetRouteTablesRouteTableAssociationInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableAssociationOutput() GetRouteTablesRouteTableAssociationOutput
	ToGetRouteTablesRouteTableAssociationOutputWithContext(context.Context) GetRouteTablesRouteTableAssociationOutput
}

type GetRouteTablesRouteTableAssociationArgs struct {
	// The ID of the nexthop attachment.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// The type of the nexthop attachment.
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The route ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetRouteTablesRouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableAssociation)(nil)).Elem()
}

func (i GetRouteTablesRouteTableAssociationArgs) ToGetRouteTablesRouteTableAssociationOutput() GetRouteTablesRouteTableAssociationOutput {
	return i.ToGetRouteTablesRouteTableAssociationOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableAssociationArgs) ToGetRouteTablesRouteTableAssociationOutputWithContext(ctx context.Context) GetRouteTablesRouteTableAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableAssociationOutput)
}

// GetRouteTablesRouteTableAssociationArrayInput is an input type that accepts GetRouteTablesRouteTableAssociationArray and GetRouteTablesRouteTableAssociationArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableAssociationArrayInput` via:
//
//	GetRouteTablesRouteTableAssociationArray{ GetRouteTablesRouteTableAssociationArgs{...} }
type GetRouteTablesRouteTableAssociationArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableAssociationArrayOutput() GetRouteTablesRouteTableAssociationArrayOutput
	ToGetRouteTablesRouteTableAssociationArrayOutputWithContext(context.Context) GetRouteTablesRouteTableAssociationArrayOutput
}

type GetRouteTablesRouteTableAssociationArray []GetRouteTablesRouteTableAssociationInput

func (GetRouteTablesRouteTableAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableAssociation)(nil)).Elem()
}

func (i GetRouteTablesRouteTableAssociationArray) ToGetRouteTablesRouteTableAssociationArrayOutput() GetRouteTablesRouteTableAssociationArrayOutput {
	return i.ToGetRouteTablesRouteTableAssociationArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableAssociationArray) ToGetRouteTablesRouteTableAssociationArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableAssociationArrayOutput)
}

type GetRouteTablesRouteTableAssociationOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableAssociation)(nil)).Elem()
}

func (o GetRouteTablesRouteTableAssociationOutput) ToGetRouteTablesRouteTableAssociationOutput() GetRouteTablesRouteTableAssociationOutput {
	return o
}

func (o GetRouteTablesRouteTableAssociationOutput) ToGetRouteTablesRouteTableAssociationOutputWithContext(ctx context.Context) GetRouteTablesRouteTableAssociationOutput {
	return o
}

// The ID of the nexthop attachment.
func (o GetRouteTablesRouteTableAssociationOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableAssociation) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// The type of the nexthop attachment.
func (o GetRouteTablesRouteTableAssociationOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableAssociation) string { return v.AttachmentType }).(pulumi.StringOutput)
}

// The route ID.
func (o GetRouteTablesRouteTableAssociationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableAssociation) string { return v.Id }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableAssociation)(nil)).Elem()
}

func (o GetRouteTablesRouteTableAssociationArrayOutput) ToGetRouteTablesRouteTableAssociationArrayOutput() GetRouteTablesRouteTableAssociationArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableAssociationArrayOutput) ToGetRouteTablesRouteTableAssociationArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableAssociationArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableAssociationArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableAssociation {
		return vs[0].([]GetRouteTablesRouteTableAssociation)[vs[1].(int)]
	}).(GetRouteTablesRouteTableAssociationOutput)
}

type GetRouteTablesRouteTablePropagation struct {
	// The ID of the nexthop attachment.
	AttachmentId string `pulumi:"attachmentId"`
	// The type of the nexthop attachment.
	AttachmentType string `pulumi:"attachmentType"`
	// The route ID.
	Id string `pulumi:"id"`
}

// GetRouteTablesRouteTablePropagationInput is an input type that accepts GetRouteTablesRouteTablePropagationArgs and GetRouteTablesRouteTablePropagationOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTablePropagationInput` via:
//
//	GetRouteTablesRouteTablePropagationArgs{...}
type GetRouteTablesRouteTablePropagationInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTablePropagationOutput() GetRouteTablesRouteTablePropagationOutput
	ToGetRouteTablesRouteTablePropagationOutputWithContext(context.Context) GetRouteTablesRouteTablePropagationOutput
}

type GetRouteTablesRouteTablePropagationArgs struct {
	// The ID of the nexthop attachment.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// The type of the nexthop attachment.
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The route ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetRouteTablesRouteTablePropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTablePropagation)(nil)).Elem()
}

func (i GetRouteTablesRouteTablePropagationArgs) ToGetRouteTablesRouteTablePropagationOutput() GetRouteTablesRouteTablePropagationOutput {
	return i.ToGetRouteTablesRouteTablePropagationOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTablePropagationArgs) ToGetRouteTablesRouteTablePropagationOutputWithContext(ctx context.Context) GetRouteTablesRouteTablePropagationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTablePropagationOutput)
}

// GetRouteTablesRouteTablePropagationArrayInput is an input type that accepts GetRouteTablesRouteTablePropagationArray and GetRouteTablesRouteTablePropagationArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTablePropagationArrayInput` via:
//
//	GetRouteTablesRouteTablePropagationArray{ GetRouteTablesRouteTablePropagationArgs{...} }
type GetRouteTablesRouteTablePropagationArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTablePropagationArrayOutput() GetRouteTablesRouteTablePropagationArrayOutput
	ToGetRouteTablesRouteTablePropagationArrayOutputWithContext(context.Context) GetRouteTablesRouteTablePropagationArrayOutput
}

type GetRouteTablesRouteTablePropagationArray []GetRouteTablesRouteTablePropagationInput

func (GetRouteTablesRouteTablePropagationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTablePropagation)(nil)).Elem()
}

func (i GetRouteTablesRouteTablePropagationArray) ToGetRouteTablesRouteTablePropagationArrayOutput() GetRouteTablesRouteTablePropagationArrayOutput {
	return i.ToGetRouteTablesRouteTablePropagationArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTablePropagationArray) ToGetRouteTablesRouteTablePropagationArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTablePropagationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTablePropagationArrayOutput)
}

type GetRouteTablesRouteTablePropagationOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTablePropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTablePropagation)(nil)).Elem()
}

func (o GetRouteTablesRouteTablePropagationOutput) ToGetRouteTablesRouteTablePropagationOutput() GetRouteTablesRouteTablePropagationOutput {
	return o
}

func (o GetRouteTablesRouteTablePropagationOutput) ToGetRouteTablesRouteTablePropagationOutputWithContext(ctx context.Context) GetRouteTablesRouteTablePropagationOutput {
	return o
}

// The ID of the nexthop attachment.
func (o GetRouteTablesRouteTablePropagationOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTablePropagation) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// The type of the nexthop attachment.
func (o GetRouteTablesRouteTablePropagationOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTablePropagation) string { return v.AttachmentType }).(pulumi.StringOutput)
}

// The route ID.
func (o GetRouteTablesRouteTablePropagationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTablePropagation) string { return v.Id }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTablePropagationArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTablePropagationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTablePropagation)(nil)).Elem()
}

func (o GetRouteTablesRouteTablePropagationArrayOutput) ToGetRouteTablesRouteTablePropagationArrayOutput() GetRouteTablesRouteTablePropagationArrayOutput {
	return o
}

func (o GetRouteTablesRouteTablePropagationArrayOutput) ToGetRouteTablesRouteTablePropagationArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTablePropagationArrayOutput {
	return o
}

func (o GetRouteTablesRouteTablePropagationArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTablePropagationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTablePropagation {
		return vs[0].([]GetRouteTablesRouteTablePropagation)[vs[1].(int)]
	}).(GetRouteTablesRouteTablePropagationOutput)
}

type GetRouteTablesRouteTableRoute struct {
	// The details of the attachment corresponding to the route.\
	// The object structure is documented below.
	Attachments []GetRouteTablesRouteTableRouteAttachment `pulumi:"attachments"`
	// The destination address (CIDR) of the route.
	Destination string `pulumi:"destination"`
	// The route ID.
	Id string `pulumi:"id"`
	// Whether route is the black hole route.
	IsBlackhole bool `pulumi:"isBlackhole"`
	// The current status of the route.
	Status string `pulumi:"status"`
}

// GetRouteTablesRouteTableRouteInput is an input type that accepts GetRouteTablesRouteTableRouteArgs and GetRouteTablesRouteTableRouteOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRouteInput` via:
//
//	GetRouteTablesRouteTableRouteArgs{...}
type GetRouteTablesRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRouteOutput() GetRouteTablesRouteTableRouteOutput
	ToGetRouteTablesRouteTableRouteOutputWithContext(context.Context) GetRouteTablesRouteTableRouteOutput
}

type GetRouteTablesRouteTableRouteArgs struct {
	// The details of the attachment corresponding to the route.\
	// The object structure is documented below.
	Attachments GetRouteTablesRouteTableRouteAttachmentArrayInput `pulumi:"attachments"`
	// The destination address (CIDR) of the route.
	Destination pulumi.StringInput `pulumi:"destination"`
	// The route ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether route is the black hole route.
	IsBlackhole pulumi.BoolInput `pulumi:"isBlackhole"`
	// The current status of the route.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRouteTablesRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRouteArgs) ToGetRouteTablesRouteTableRouteOutput() GetRouteTablesRouteTableRouteOutput {
	return i.ToGetRouteTablesRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRouteArgs) ToGetRouteTablesRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRouteOutput)
}

// GetRouteTablesRouteTableRouteArrayInput is an input type that accepts GetRouteTablesRouteTableRouteArray and GetRouteTablesRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRouteArrayInput` via:
//
//	GetRouteTablesRouteTableRouteArray{ GetRouteTablesRouteTableRouteArgs{...} }
type GetRouteTablesRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRouteArrayOutput() GetRouteTablesRouteTableRouteArrayOutput
	ToGetRouteTablesRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTablesRouteTableRouteArrayOutput
}

type GetRouteTablesRouteTableRouteArray []GetRouteTablesRouteTableRouteInput

func (GetRouteTablesRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRouteArray) ToGetRouteTablesRouteTableRouteArrayOutput() GetRouteTablesRouteTableRouteArrayOutput {
	return i.ToGetRouteTablesRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRouteArray) ToGetRouteTablesRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRouteArrayOutput)
}

type GetRouteTablesRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRouteOutput) ToGetRouteTablesRouteTableRouteOutput() GetRouteTablesRouteTableRouteOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteOutput) ToGetRouteTablesRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteOutput {
	return o
}

// The details of the attachment corresponding to the route.\
// The object structure is documented below.
func (o GetRouteTablesRouteTableRouteOutput) Attachments() GetRouteTablesRouteTableRouteAttachmentArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) []GetRouteTablesRouteTableRouteAttachment { return v.Attachments }).(GetRouteTablesRouteTableRouteAttachmentArrayOutput)
}

// The destination address (CIDR) of the route.
func (o GetRouteTablesRouteTableRouteOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.Destination }).(pulumi.StringOutput)
}

// The route ID.
func (o GetRouteTablesRouteTableRouteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.Id }).(pulumi.StringOutput)
}

// Whether route is the black hole route.
func (o GetRouteTablesRouteTableRouteOutput) IsBlackhole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) bool { return v.IsBlackhole }).(pulumi.BoolOutput)
}

// The current status of the route.
func (o GetRouteTablesRouteTableRouteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRoute) string { return v.Status }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRouteArrayOutput) ToGetRouteTablesRouteTableRouteArrayOutput() GetRouteTablesRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteArrayOutput) ToGetRouteTablesRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableRoute {
		return vs[0].([]GetRouteTablesRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTablesRouteTableRouteOutput)
}

type GetRouteTablesRouteTableRouteAttachment struct {
	// The ID of the nexthop attachment.
	AttachmentId string `pulumi:"attachmentId"`
	// The type of the nexthop attachment.
	AttachmentType string `pulumi:"attachmentType"`
	// The ID of the resource associated with the attachment.
	ResourceId string `pulumi:"resourceId"`
}

// GetRouteTablesRouteTableRouteAttachmentInput is an input type that accepts GetRouteTablesRouteTableRouteAttachmentArgs and GetRouteTablesRouteTableRouteAttachmentOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRouteAttachmentInput` via:
//
//	GetRouteTablesRouteTableRouteAttachmentArgs{...}
type GetRouteTablesRouteTableRouteAttachmentInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRouteAttachmentOutput() GetRouteTablesRouteTableRouteAttachmentOutput
	ToGetRouteTablesRouteTableRouteAttachmentOutputWithContext(context.Context) GetRouteTablesRouteTableRouteAttachmentOutput
}

type GetRouteTablesRouteTableRouteAttachmentArgs struct {
	// The ID of the nexthop attachment.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// The type of the nexthop attachment.
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The ID of the resource associated with the attachment.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (GetRouteTablesRouteTableRouteAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRouteAttachment)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRouteAttachmentArgs) ToGetRouteTablesRouteTableRouteAttachmentOutput() GetRouteTablesRouteTableRouteAttachmentOutput {
	return i.ToGetRouteTablesRouteTableRouteAttachmentOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRouteAttachmentArgs) ToGetRouteTablesRouteTableRouteAttachmentOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRouteAttachmentOutput)
}

// GetRouteTablesRouteTableRouteAttachmentArrayInput is an input type that accepts GetRouteTablesRouteTableRouteAttachmentArray and GetRouteTablesRouteTableRouteAttachmentArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableRouteAttachmentArrayInput` via:
//
//	GetRouteTablesRouteTableRouteAttachmentArray{ GetRouteTablesRouteTableRouteAttachmentArgs{...} }
type GetRouteTablesRouteTableRouteAttachmentArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableRouteAttachmentArrayOutput() GetRouteTablesRouteTableRouteAttachmentArrayOutput
	ToGetRouteTablesRouteTableRouteAttachmentArrayOutputWithContext(context.Context) GetRouteTablesRouteTableRouteAttachmentArrayOutput
}

type GetRouteTablesRouteTableRouteAttachmentArray []GetRouteTablesRouteTableRouteAttachmentInput

func (GetRouteTablesRouteTableRouteAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRouteAttachment)(nil)).Elem()
}

func (i GetRouteTablesRouteTableRouteAttachmentArray) ToGetRouteTablesRouteTableRouteAttachmentArrayOutput() GetRouteTablesRouteTableRouteAttachmentArrayOutput {
	return i.ToGetRouteTablesRouteTableRouteAttachmentArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableRouteAttachmentArray) ToGetRouteTablesRouteTableRouteAttachmentArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableRouteAttachmentArrayOutput)
}

type GetRouteTablesRouteTableRouteAttachmentOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRouteAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableRouteAttachment)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRouteAttachmentOutput) ToGetRouteTablesRouteTableRouteAttachmentOutput() GetRouteTablesRouteTableRouteAttachmentOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteAttachmentOutput) ToGetRouteTablesRouteTableRouteAttachmentOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteAttachmentOutput {
	return o
}

// The ID of the nexthop attachment.
func (o GetRouteTablesRouteTableRouteAttachmentOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRouteAttachment) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// The type of the nexthop attachment.
func (o GetRouteTablesRouteTableRouteAttachmentOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRouteAttachment) string { return v.AttachmentType }).(pulumi.StringOutput)
}

// The ID of the resource associated with the attachment.
func (o GetRouteTablesRouteTableRouteAttachmentOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableRouteAttachment) string { return v.ResourceId }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableRouteAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableRouteAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableRouteAttachment)(nil)).Elem()
}

func (o GetRouteTablesRouteTableRouteAttachmentArrayOutput) ToGetRouteTablesRouteTableRouteAttachmentArrayOutput() GetRouteTablesRouteTableRouteAttachmentArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteAttachmentArrayOutput) ToGetRouteTablesRouteTableRouteAttachmentArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableRouteAttachmentArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableRouteAttachmentArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableRouteAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableRouteAttachment {
		return vs[0].([]GetRouteTablesRouteTableRouteAttachment)[vs[1].(int)]
	}).(GetRouteTablesRouteTableRouteAttachmentOutput)
}

type GetTagsTag struct {
	// The key of the resource tag.
	Key string `pulumi:"key"`
	// All values corresponding to the key.
	Values []string `pulumi:"values"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// The key of the resource tag.
	Key pulumi.StringInput `pulumi:"key"`
	// All values corresponding to the key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// The key of the resource tag.
func (o GetTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

// All values corresponding to the key.
func (o GetTagsTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsAssociationInput)(nil)).Elem(), GetAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAssociationsAssociationArrayInput)(nil)).Elem(), GetAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentsAttachmentInput)(nil)).Elem(), GetAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttachmentsAttachmentArrayInput)(nil)).Elem(), GetAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableRoutesRouteInput)(nil)).Elem(), GetAvailableRoutesRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableRoutesRouteArrayInput)(nil)).Elem(), GetAvailableRoutesRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableRoutesRouteNextHopInput)(nil)).Elem(), GetAvailableRoutesRouteNextHopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailableRoutesRouteNextHopArrayInput)(nil)).Elem(), GetAvailableRoutesRouteNextHopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsFlowLogInput)(nil)).Elem(), GetFlowLogsFlowLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsFlowLogArrayInput)(nil)).Elem(), GetFlowLogsFlowLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPropagationsPropagationInput)(nil)).Elem(), GetPropagationsPropagationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPropagationsPropagationArrayInput)(nil)).Elem(), GetPropagationsPropagationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaInput)(nil)).Elem(), GetQuotasQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotasQuotaArrayInput)(nil)).Elem(), GetQuotasQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableInput)(nil)).Elem(), GetRouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableArrayInput)(nil)).Elem(), GetRouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableAssociationInput)(nil)).Elem(), GetRouteTablesRouteTableAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableAssociationArrayInput)(nil)).Elem(), GetRouteTablesRouteTableAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTablePropagationInput)(nil)).Elem(), GetRouteTablesRouteTablePropagationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTablePropagationArrayInput)(nil)).Elem(), GetRouteTablesRouteTablePropagationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRouteInput)(nil)).Elem(), GetRouteTablesRouteTableRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRouteArrayInput)(nil)).Elem(), GetRouteTablesRouteTableRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRouteAttachmentInput)(nil)).Elem(), GetRouteTablesRouteTableRouteAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableRouteAttachmentArrayInput)(nil)).Elem(), GetRouteTablesRouteTableRouteAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterOutputType(GetAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(GetAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(GetAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetAvailableRoutesRouteArrayOutput{})
	pulumi.RegisterOutputType(GetAvailableRoutesRouteNextHopOutput{})
	pulumi.RegisterOutputType(GetAvailableRoutesRouteNextHopArrayOutput{})
	pulumi.RegisterOutputType(GetFlowLogsFlowLogOutput{})
	pulumi.RegisterOutputType(GetFlowLogsFlowLogArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetPropagationsPropagationOutput{})
	pulumi.RegisterOutputType(GetPropagationsPropagationArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableAssociationOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTablePropagationOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTablePropagationArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRouteAttachmentOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableRouteAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
}
