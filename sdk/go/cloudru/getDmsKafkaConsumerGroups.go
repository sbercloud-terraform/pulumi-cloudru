// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetDmsKafkaConsumerGroups(ctx *pulumi.Context, args *GetDmsKafkaConsumerGroupsArgs, opts ...pulumi.InvokeOption) (*GetDmsKafkaConsumerGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDmsKafkaConsumerGroupsResult
	err := ctx.Invoke("sbercloud:index/getDmsKafkaConsumerGroups:getDmsKafkaConsumerGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDmsKafkaConsumerGroups.
type GetDmsKafkaConsumerGroupsArgs struct {
	CoordinatorId *int    `pulumi:"coordinatorId"`
	Description   *string `pulumi:"description"`
	InstanceId    string  `pulumi:"instanceId"`
	Lag           *int    `pulumi:"lag"`
	Name          *string `pulumi:"name"`
	Region        *string `pulumi:"region"`
	State         *string `pulumi:"state"`
}

// A collection of values returned by getDmsKafkaConsumerGroups.
type GetDmsKafkaConsumerGroupsResult struct {
	CoordinatorId *int                             `pulumi:"coordinatorId"`
	Description   *string                          `pulumi:"description"`
	Groups        []GetDmsKafkaConsumerGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId string  `pulumi:"instanceId"`
	Lag        *int    `pulumi:"lag"`
	Name       *string `pulumi:"name"`
	Region     string  `pulumi:"region"`
	State      *string `pulumi:"state"`
}

func GetDmsKafkaConsumerGroupsOutput(ctx *pulumi.Context, args GetDmsKafkaConsumerGroupsOutputArgs, opts ...pulumi.InvokeOption) GetDmsKafkaConsumerGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDmsKafkaConsumerGroupsResultOutput, error) {
			args := v.(GetDmsKafkaConsumerGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getDmsKafkaConsumerGroups:getDmsKafkaConsumerGroups", args, GetDmsKafkaConsumerGroupsResultOutput{}, options).(GetDmsKafkaConsumerGroupsResultOutput), nil
		}).(GetDmsKafkaConsumerGroupsResultOutput)
}

// A collection of arguments for invoking getDmsKafkaConsumerGroups.
type GetDmsKafkaConsumerGroupsOutputArgs struct {
	CoordinatorId pulumi.IntPtrInput    `pulumi:"coordinatorId"`
	Description   pulumi.StringPtrInput `pulumi:"description"`
	InstanceId    pulumi.StringInput    `pulumi:"instanceId"`
	Lag           pulumi.IntPtrInput    `pulumi:"lag"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	Region        pulumi.StringPtrInput `pulumi:"region"`
	State         pulumi.StringPtrInput `pulumi:"state"`
}

func (GetDmsKafkaConsumerGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaConsumerGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getDmsKafkaConsumerGroups.
type GetDmsKafkaConsumerGroupsResultOutput struct{ *pulumi.OutputState }

func (GetDmsKafkaConsumerGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDmsKafkaConsumerGroupsResult)(nil)).Elem()
}

func (o GetDmsKafkaConsumerGroupsResultOutput) ToGetDmsKafkaConsumerGroupsResultOutput() GetDmsKafkaConsumerGroupsResultOutput {
	return o
}

func (o GetDmsKafkaConsumerGroupsResultOutput) ToGetDmsKafkaConsumerGroupsResultOutputWithContext(ctx context.Context) GetDmsKafkaConsumerGroupsResultOutput {
	return o
}

func (o GetDmsKafkaConsumerGroupsResultOutput) CoordinatorId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) *int { return v.CoordinatorId }).(pulumi.IntPtrOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) Groups() GetDmsKafkaConsumerGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) []GetDmsKafkaConsumerGroupsGroup { return v.Groups }).(GetDmsKafkaConsumerGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDmsKafkaConsumerGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) Lag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) *int { return v.Lag }).(pulumi.IntPtrOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDmsKafkaConsumerGroupsResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDmsKafkaConsumerGroupsResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDmsKafkaConsumerGroupsResultOutput{})
}
