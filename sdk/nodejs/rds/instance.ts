// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manage RDS instance resource within SberCloud.
 *
 * ## Example Usage
 *
 * ### create a single db instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const secgroupId = config.requireObject<any>("secgroupId");
 * const availabilityZone = config.requireObject<any>("availabilityZone");
 * const postgreSQLPassword = config.requireObject<any>("postgreSQLPassword");
 * const instance = new sbercloud.rds.Instance("instance", {
 *     name: "terraform_test_rds_instance",
 *     flavor: "rds.pg.n1.large.2",
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: secgroupId,
 *     availabilityZones: [availabilityZone],
 *     db: {
 *         type: "PostgreSQL",
 *         version: "12",
 *         password: postgreSQLPassword,
 *     },
 *     volume: {
 *         type: "ULTRAHIGH",
 *         size: 100,
 *     },
 *     backupStrategy: {
 *         startTime: "08:00-09:00",
 *         keepDays: 1,
 *     },
 * });
 * ```
 *
 * ### create a primary/standby db instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const secgroupId = config.requireObject<any>("secgroupId");
 * const availabilityZone1 = config.requireObject<any>("availabilityZone1");
 * const availabilityZone2 = config.requireObject<any>("availabilityZone2");
 * const postgreSQLPassword = config.requireObject<any>("postgreSQLPassword");
 * const instance = new sbercloud.rds.Instance("instance", {
 *     name: "terraform_test_rds_instance",
 *     flavor: "rds.pg.n1.large.2.ha",
 *     haReplicationMode: "async",
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: secgroupId,
 *     availabilityZones: [
 *         availabilityZone1Config,
 *         availabilityZone2Config,
 *     ],
 *     db: {
 *         type: "PostgreSQL",
 *         version: "12",
 *         password: postgreSQLPassword,
 *     },
 *     volume: {
 *         type: "ULTRAHIGH",
 *         size: 100,
 *     },
 *     backupStrategy: {
 *         startTime: "08:00-09:00",
 *         keepDays: 1,
 *     },
 * });
 * ```
 *
 * ### create a single db instance with encrypted volume
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const secgroupId = config.requireObject<any>("secgroupId");
 * const availabilityZone = config.requireObject<any>("availabilityZone");
 * const kmsId = config.requireObject<any>("kmsId");
 * const postgreSQLPassword = config.requireObject<any>("postgreSQLPassword");
 * const instance = new sbercloud.rds.Instance("instance", {
 *     name: "terraform_test_rds_instance",
 *     flavor: "rds.pg.n1.large.2",
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: secgroupId,
 *     availabilityZones: [availabilityZone],
 *     db: {
 *         type: "PostgreSQL",
 *         version: "12",
 *         password: postgreSQLPassword,
 *     },
 *     volume: {
 *         type: "ULTRAHIGH",
 *         size: 100,
 *         diskEncryptionId: kmsId,
 *     },
 *     backupStrategy: {
 *         startTime: "08:00-09:00",
 *         keepDays: 1,
 *     },
 * });
 * ```
 *
 * ### create db instance with customized parameters
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const secgroupId = config.requireObject<any>("secgroupId");
 * const availabilityZone = config.requireObject<any>("availabilityZone");
 * const postgreSQLPassword = config.requireObject<any>("postgreSQLPassword");
 * const instance = new sbercloud.rds.Instance("instance", {
 *     name: "terraform_test_rds_instance",
 *     flavor: "rds.pg.n1.large.2",
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: secgroupId,
 *     availabilityZones: [availabilityZone],
 *     db: {
 *         type: "PostgreSQL",
 *         version: "12",
 *         password: postgreSQLPassword,
 *     },
 *     volume: {
 *         type: "ULTRAHIGH",
 *         size: 100,
 *     },
 *     backupStrategy: {
 *         startTime: "08:00-09:00",
 *         keepDays: 1,
 *     },
 *     parameters: [
 *         {
 *             name: "div_precision_increment",
 *             value: "12",
 *         },
 *         {
 *             name: "connect_timeout",
 *             value: "13",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * RDS instance can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import sbercloud:Rds/instance:Instance instance_1 52e4b497d2c94df88a2eb4c661314903in01
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason. The missing attributes include: `db`, `collation`, `availability_zone`,
 *
 * `lower_case_table_names`,`slow_log_show_original_status`. It is generally recommended running `pulumi preview` after
 *
 * importing a RDS instance. You can then decide if changes should be applied to the instance, or the resource definition
 *
 * should be updated to align with the instance. Also, you can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_rds_instance" "instance_1" {
 *
 *   ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       "db", "collation", "availability_zone", "lower_case_table_names", "slow_log_show_original_status"
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Rds/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * @deprecated Deprecated
     */
    declare public readonly autoPay: pulumi.Output<string | undefined>;
    /**
     * Specifies whether auto-renew is enabled. Valid values are "true" and "false".
     */
    declare public readonly autoRenew: pulumi.Output<string | undefined>;
    /**
     * Specifies the list of AZ name. Changing this parameter will create a
     * new resource.
     */
    declare public readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * Specifies the advanced backup policy. Structure is documented below.
     */
    declare public readonly backupStrategy: pulumi.Output<outputs.Rds.InstanceBackupStrategy>;
    /**
     * Specify the binlog retention period in hours. This parameter applies only to
     * MySQL Server databases. Value range: **0** to **168 (7x24)**.
     */
    declare public readonly binlogRetentionHours: pulumi.Output<number | undefined>;
    /**
     * Specifies the charging mode of the RDS DB instance. Valid values are
     * **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
     */
    declare public readonly chargingMode: pulumi.Output<string>;
    /**
     * Specifies the Character Set, only available to Microsoft SQL Server DB instances.
     */
    declare public readonly collation: pulumi.Output<string>;
    /**
     * Indicates the creation time.
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * Specifies the database information. Structure is documented below. Changing this
     * parameter will create a new resource.
     */
    declare public readonly db: pulumi.Output<outputs.Rds.InstanceDb>;
    /**
     * Specifies the description of the instance. The value consists of 0 to 64
     * characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the exclusive storage ID for Dec users. It is different for each az
     * configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
     * and separated by commas if database instance type is not standalone or read-only.
     */
    declare public readonly dssPoolId: pulumi.Output<string | undefined>;
    /**
     * Specifies the enterprise project id of the RDS instance.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * Specifies an intranet floating IP address of RDS DB instance.
     */
    declare public readonly fixedIp: pulumi.Output<string>;
    /**
     * Specifies the specification code.
     *
     * > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
     * changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
     * security group and cannot be deleted for 12 hours.
     */
    declare public readonly flavor: pulumi.Output<string>;
    /**
     * Required for HA instances. Specifies the replication mode for the standby DB instance.
     * + For MySQL, the value is **async** or **semisync**.
     * + For PostgreSQL, the value is **async** or **sync**.
     * + For Microsoft SQL Server, the value is **sync**.
     *
     * > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
     * replication mode. **sync** indicates the synchronous replication mode.
     */
    declare public readonly haReplicationMode: pulumi.Output<string>;
    /**
     * Specifies the case-sensitive state of the database table name,
     * the default value is "1". Changing this parameter will create a new resource.
     * + 0: Table names are stored as fixed and table names are case-sensitive.
     * + 1: Table names will be stored in lower case and table names are not case-sensitive.
     */
    declare public readonly lowerCaseTableNames: pulumi.Output<string | undefined>;
    /**
     * Specifies the time at which the maintenance time window starts, for example, **22:00**.
     */
    declare public readonly maintainBegin: pulumi.Output<string>;
    /**
     * Specifies the time at which the maintenance time window ends, for example, **01:00**.
     *
     * > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
     * hour, and the interval between them must be one to four hours.<br>
     * For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
     */
    declare public readonly maintainEnd: pulumi.Output<string>;
    /**
     * Specify the host information for MSDTC.
     * The msdtcHosts structure is documented below.
     *
     * > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
     */
    declare public readonly msdtcHosts: pulumi.Output<outputs.Rds.InstanceMsdtcHost[]>;
    /**
     * Specifies the DB instance name. The DB instance name of the same type must be unique for
     * the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
     * contain only letters, digits, hyphens (-), and underscores (_).
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Indicates the instance nodes information. Structure is documented below.
     */
    declare public /*out*/ readonly nodes: pulumi.Output<outputs.Rds.InstanceNode[]>;
    /**
     * Specifies the parameter group ID.
     */
    declare public readonly paramGroupId: pulumi.Output<string | undefined>;
    /**
     * Specify an array of one or more parameters to be set to the RDS instance after
     * launched. You can check on console to see which parameters supported. Structure is documented below.
     */
    declare public readonly parameters: pulumi.Output<outputs.Rds.InstanceParameter[]>;
    /**
     * Specifies the charging period of the RDS DB instance. If `periodUnit` is set
     * to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
     * This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
     */
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * Specifies the charging period unit of the RDS DB instance. Valid values
     * are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
     * creates a new resource.
     */
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    /**
     * Specifies the power action to be done for the instance.
     * Value options: **ON**, **OFF** and **REBOOT**.
     *
     * > **NOTE:** The `powerAction` is a one-time action.
     */
    declare public readonly powerAction: pulumi.Output<string>;
    /**
     * Specifies the prefix of the private domain name. The value contains
     * **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
     */
    declare public readonly privateDnsNamePrefix: pulumi.Output<string>;
    /**
     * Indicates the private domain name list of the DB instance.
     */
    declare public /*out*/ readonly privateDnsNames: pulumi.Output<string[]>;
    /**
     * Indicates the private IP address list. It is a blank string until an ECS is created.
     */
    declare public /*out*/ readonly privateIps: pulumi.Output<string[]>;
    /**
     * Indicates the public IP address list.
     */
    declare public /*out*/ readonly publicIps: pulumi.Output<string[]>;
    /**
     * Specifies the read write permissions of the instance. Valid values:
     * + **readwrite**: read write permissions.
     * + **readonly**: readonly permissions.
     */
    declare public readonly readWritePermissions: pulumi.Output<string | undefined>;
    /**
     * The region in which to create the rds instance resource. If omitted, the
     * provider-level region will be used. Changing this creates a new rds instance resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the restoration information. It only supported restore to postpaid
     * instance. Structure is documented below. Changing this parameter will create a new resource.
     */
    declare public readonly restore: pulumi.Output<outputs.Rds.InstanceRestore | undefined>;
    /**
     * Specifies the rotation days of TDE rotation.
     */
    declare public readonly rotateDay: pulumi.Output<number | undefined>;
    /**
     * Specifies whether to enable seconds level monitoring.
     */
    declare public readonly secondsLevelMonitoringEnabled: pulumi.Output<boolean>;
    /**
     * Specifies the seconds level monitoring interval. Valid values:
     * **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
     */
    declare public readonly secondsLevelMonitoringInterval: pulumi.Output<number>;
    /**
     * Specifies the key ID of TDE rotation.
     */
    declare public readonly secretId: pulumi.Output<string | undefined>;
    /**
     * Specifies the key name of TDE rotation.
     */
    declare public readonly secretName: pulumi.Output<string | undefined>;
    /**
     * Specifies the key version of TDE rotation.
     *
     * > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
     * is **true**.
     */
    declare public readonly secretVersion: pulumi.Output<string | undefined>;
    /**
     * Specifies the security group which the RDS DB instance belongs to.
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * Specifies the slow log show original status of the instance.
     * Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
     */
    declare public readonly slowLogShowOriginalStatus: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to enable the SSL for MySQL database.
     */
    declare public readonly sslEnable: pulumi.Output<boolean>;
    /**
     * Indicates the node status.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Specifies the network id of a subnet. Changing this parameter will create a
     * new resource.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * Specifies the database switchover policy.
     * + **reliability**: reliability first.
     * + **availability**: availability first.
     *
     * Defaults to **reliability**.
     */
    declare public readonly switchStrategy: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
     * pair.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies whether enable TDE for the instance.
     *
     * > **NOTE:** TDE cannot be disabled after being enabled.
     */
    declare public readonly tdeEnabled: pulumi.Output<boolean>;
    /**
     * Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
     * and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
     * Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
     * zone is expressed as a character string.
     */
    declare public readonly timeZone: pulumi.Output<string>;
    /**
     * Specifies the volume information. Structure is documented below.
     */
    declare public readonly volume: pulumi.Output<outputs.Rds.InstanceVolume>;
    /**
     * Specifies the VPC ID. Changing this parameter will create a new resource.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["autoPay"] = state?.autoPay;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["availabilityZones"] = state?.availabilityZones;
            resourceInputs["backupStrategy"] = state?.backupStrategy;
            resourceInputs["binlogRetentionHours"] = state?.binlogRetentionHours;
            resourceInputs["chargingMode"] = state?.chargingMode;
            resourceInputs["collation"] = state?.collation;
            resourceInputs["created"] = state?.created;
            resourceInputs["db"] = state?.db;
            resourceInputs["description"] = state?.description;
            resourceInputs["dssPoolId"] = state?.dssPoolId;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["fixedIp"] = state?.fixedIp;
            resourceInputs["flavor"] = state?.flavor;
            resourceInputs["haReplicationMode"] = state?.haReplicationMode;
            resourceInputs["lowerCaseTableNames"] = state?.lowerCaseTableNames;
            resourceInputs["maintainBegin"] = state?.maintainBegin;
            resourceInputs["maintainEnd"] = state?.maintainEnd;
            resourceInputs["msdtcHosts"] = state?.msdtcHosts;
            resourceInputs["name"] = state?.name;
            resourceInputs["nodes"] = state?.nodes;
            resourceInputs["paramGroupId"] = state?.paramGroupId;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["powerAction"] = state?.powerAction;
            resourceInputs["privateDnsNamePrefix"] = state?.privateDnsNamePrefix;
            resourceInputs["privateDnsNames"] = state?.privateDnsNames;
            resourceInputs["privateIps"] = state?.privateIps;
            resourceInputs["publicIps"] = state?.publicIps;
            resourceInputs["readWritePermissions"] = state?.readWritePermissions;
            resourceInputs["region"] = state?.region;
            resourceInputs["restore"] = state?.restore;
            resourceInputs["rotateDay"] = state?.rotateDay;
            resourceInputs["secondsLevelMonitoringEnabled"] = state?.secondsLevelMonitoringEnabled;
            resourceInputs["secondsLevelMonitoringInterval"] = state?.secondsLevelMonitoringInterval;
            resourceInputs["secretId"] = state?.secretId;
            resourceInputs["secretName"] = state?.secretName;
            resourceInputs["secretVersion"] = state?.secretVersion;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["slowLogShowOriginalStatus"] = state?.slowLogShowOriginalStatus;
            resourceInputs["sslEnable"] = state?.sslEnable;
            resourceInputs["status"] = state?.status;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["switchStrategy"] = state?.switchStrategy;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tdeEnabled"] = state?.tdeEnabled;
            resourceInputs["timeZone"] = state?.timeZone;
            resourceInputs["volume"] = state?.volume;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.availabilityZones === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityZones'");
            }
            if (args?.db === undefined && !opts.urn) {
                throw new Error("Missing required property 'db'");
            }
            if (args?.flavor === undefined && !opts.urn) {
                throw new Error("Missing required property 'flavor'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.volume === undefined && !opts.urn) {
                throw new Error("Missing required property 'volume'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoPay"] = args?.autoPay;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["availabilityZones"] = args?.availabilityZones;
            resourceInputs["backupStrategy"] = args?.backupStrategy;
            resourceInputs["binlogRetentionHours"] = args?.binlogRetentionHours;
            resourceInputs["chargingMode"] = args?.chargingMode;
            resourceInputs["collation"] = args?.collation;
            resourceInputs["db"] = args?.db;
            resourceInputs["description"] = args?.description;
            resourceInputs["dssPoolId"] = args?.dssPoolId;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["fixedIp"] = args?.fixedIp;
            resourceInputs["flavor"] = args?.flavor;
            resourceInputs["haReplicationMode"] = args?.haReplicationMode;
            resourceInputs["lowerCaseTableNames"] = args?.lowerCaseTableNames;
            resourceInputs["maintainBegin"] = args?.maintainBegin;
            resourceInputs["maintainEnd"] = args?.maintainEnd;
            resourceInputs["msdtcHosts"] = args?.msdtcHosts;
            resourceInputs["name"] = args?.name;
            resourceInputs["paramGroupId"] = args?.paramGroupId;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["powerAction"] = args?.powerAction;
            resourceInputs["privateDnsNamePrefix"] = args?.privateDnsNamePrefix;
            resourceInputs["readWritePermissions"] = args?.readWritePermissions;
            resourceInputs["region"] = args?.region;
            resourceInputs["restore"] = args?.restore;
            resourceInputs["rotateDay"] = args?.rotateDay;
            resourceInputs["secondsLevelMonitoringEnabled"] = args?.secondsLevelMonitoringEnabled;
            resourceInputs["secondsLevelMonitoringInterval"] = args?.secondsLevelMonitoringInterval;
            resourceInputs["secretId"] = args?.secretId;
            resourceInputs["secretName"] = args?.secretName;
            resourceInputs["secretVersion"] = args?.secretVersion;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["slowLogShowOriginalStatus"] = args?.slowLogShowOriginalStatus;
            resourceInputs["sslEnable"] = args?.sslEnable;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["switchStrategy"] = args?.switchStrategy;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tdeEnabled"] = args?.tdeEnabled;
            resourceInputs["timeZone"] = args?.timeZone;
            resourceInputs["volume"] = args?.volume;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["privateDnsNames"] = undefined /*out*/;
            resourceInputs["privateIps"] = undefined /*out*/;
            resourceInputs["publicIps"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    /**
     * Specifies whether auto-renew is enabled. Valid values are "true" and "false".
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the list of AZ name. Changing this parameter will create a
     * new resource.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the advanced backup policy. Structure is documented below.
     */
    backupStrategy?: pulumi.Input<inputs.Rds.InstanceBackupStrategy>;
    /**
     * Specify the binlog retention period in hours. This parameter applies only to
     * MySQL Server databases. Value range: **0** to **168 (7x24)**.
     */
    binlogRetentionHours?: pulumi.Input<number>;
    /**
     * Specifies the charging mode of the RDS DB instance. Valid values are
     * **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the Character Set, only available to Microsoft SQL Server DB instances.
     */
    collation?: pulumi.Input<string>;
    /**
     * Indicates the creation time.
     */
    created?: pulumi.Input<string>;
    /**
     * Specifies the database information. Structure is documented below. Changing this
     * parameter will create a new resource.
     */
    db?: pulumi.Input<inputs.Rds.InstanceDb>;
    /**
     * Specifies the description of the instance. The value consists of 0 to 64
     * characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the exclusive storage ID for Dec users. It is different for each az
     * configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
     * and separated by commas if database instance type is not standalone or read-only.
     */
    dssPoolId?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the RDS instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies an intranet floating IP address of RDS DB instance.
     */
    fixedIp?: pulumi.Input<string>;
    /**
     * Specifies the specification code.
     *
     * > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
     * changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
     * security group and cannot be deleted for 12 hours.
     */
    flavor?: pulumi.Input<string>;
    /**
     * Required for HA instances. Specifies the replication mode for the standby DB instance.
     * + For MySQL, the value is **async** or **semisync**.
     * + For PostgreSQL, the value is **async** or **sync**.
     * + For Microsoft SQL Server, the value is **sync**.
     *
     * > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
     * replication mode. **sync** indicates the synchronous replication mode.
     */
    haReplicationMode?: pulumi.Input<string>;
    /**
     * Specifies the case-sensitive state of the database table name,
     * the default value is "1". Changing this parameter will create a new resource.
     * + 0: Table names are stored as fixed and table names are case-sensitive.
     * + 1: Table names will be stored in lower case and table names are not case-sensitive.
     */
    lowerCaseTableNames?: pulumi.Input<string>;
    /**
     * Specifies the time at which the maintenance time window starts, for example, **22:00**.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * Specifies the time at which the maintenance time window ends, for example, **01:00**.
     *
     * > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
     * hour, and the interval between them must be one to four hours.<br>
     * For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * Specify the host information for MSDTC.
     * The msdtcHosts structure is documented below.
     *
     * > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
     */
    msdtcHosts?: pulumi.Input<pulumi.Input<inputs.Rds.InstanceMsdtcHost>[]>;
    /**
     * Specifies the DB instance name. The DB instance name of the same type must be unique for
     * the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
     * contain only letters, digits, hyphens (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the instance nodes information. Structure is documented below.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.Rds.InstanceNode>[]>;
    /**
     * Specifies the parameter group ID.
     */
    paramGroupId?: pulumi.Input<string>;
    /**
     * Specify an array of one or more parameters to be set to the RDS instance after
     * launched. You can check on console to see which parameters supported. Structure is documented below.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.Rds.InstanceParameter>[]>;
    /**
     * Specifies the charging period of the RDS DB instance. If `periodUnit` is set
     * to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
     * This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the RDS DB instance. Valid values
     * are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
     * creates a new resource.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the power action to be done for the instance.
     * Value options: **ON**, **OFF** and **REBOOT**.
     *
     * > **NOTE:** The `powerAction` is a one-time action.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * Specifies the prefix of the private domain name. The value contains
     * **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
     */
    privateDnsNamePrefix?: pulumi.Input<string>;
    /**
     * Indicates the private domain name list of the DB instance.
     */
    privateDnsNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the private IP address list. It is a blank string until an ECS is created.
     */
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the public IP address list.
     */
    publicIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the read write permissions of the instance. Valid values:
     * + **readwrite**: read write permissions.
     * + **readonly**: readonly permissions.
     */
    readWritePermissions?: pulumi.Input<string>;
    /**
     * The region in which to create the rds instance resource. If omitted, the
     * provider-level region will be used. Changing this creates a new rds instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the restoration information. It only supported restore to postpaid
     * instance. Structure is documented below. Changing this parameter will create a new resource.
     */
    restore?: pulumi.Input<inputs.Rds.InstanceRestore>;
    /**
     * Specifies the rotation days of TDE rotation.
     */
    rotateDay?: pulumi.Input<number>;
    /**
     * Specifies whether to enable seconds level monitoring.
     */
    secondsLevelMonitoringEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the seconds level monitoring interval. Valid values:
     * **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
     */
    secondsLevelMonitoringInterval?: pulumi.Input<number>;
    /**
     * Specifies the key ID of TDE rotation.
     */
    secretId?: pulumi.Input<string>;
    /**
     * Specifies the key name of TDE rotation.
     */
    secretName?: pulumi.Input<string>;
    /**
     * Specifies the key version of TDE rotation.
     *
     * > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
     * is **true**.
     */
    secretVersion?: pulumi.Input<string>;
    /**
     * Specifies the security group which the RDS DB instance belongs to.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Specifies the slow log show original status of the instance.
     * Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
     */
    slowLogShowOriginalStatus?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the SSL for MySQL database.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Indicates the node status.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the network id of a subnet. Changing this parameter will create a
     * new resource.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Specifies the database switchover policy.
     * + **reliability**: reliability first.
     * + **availability**: availability first.
     *
     * Defaults to **reliability**.
     */
    switchStrategy?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
     * pair.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether enable TDE for the instance.
     *
     * > **NOTE:** TDE cannot be disabled after being enabled.
     */
    tdeEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
     * and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
     * Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
     * zone is expressed as a character string.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Specifies the volume information. Structure is documented below.
     */
    volume?: pulumi.Input<inputs.Rds.InstanceVolume>;
    /**
     * Specifies the VPC ID. Changing this parameter will create a new resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    /**
     * Specifies whether auto-renew is enabled. Valid values are "true" and "false".
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the list of AZ name. Changing this parameter will create a
     * new resource.
     */
    availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the advanced backup policy. Structure is documented below.
     */
    backupStrategy?: pulumi.Input<inputs.Rds.InstanceBackupStrategy>;
    /**
     * Specify the binlog retention period in hours. This parameter applies only to
     * MySQL Server databases. Value range: **0** to **168 (7x24)**.
     */
    binlogRetentionHours?: pulumi.Input<number>;
    /**
     * Specifies the charging mode of the RDS DB instance. Valid values are
     * **prePaid** and **postPaid**, defaults to **postPaid**. Changing this creates a new resource.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the Character Set, only available to Microsoft SQL Server DB instances.
     */
    collation?: pulumi.Input<string>;
    /**
     * Specifies the database information. Structure is documented below. Changing this
     * parameter will create a new resource.
     */
    db: pulumi.Input<inputs.Rds.InstanceDb>;
    /**
     * Specifies the description of the instance. The value consists of 0 to 64
     * characters, including letters, digits, periods (.), underscores (_), and hyphens (-).
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the exclusive storage ID for Dec users. It is different for each az
     * configuration. When creating an instance for Dec users, it is needed to be specified for all nodes of the instance
     * and separated by commas if database instance type is not standalone or read-only.
     */
    dssPoolId?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the RDS instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies an intranet floating IP address of RDS DB instance.
     */
    fixedIp?: pulumi.Input<string>;
    /**
     * Specifies the specification code.
     *
     * > **NOTE:** Services will be interrupted for 5 to 10 minutes when you change RDS instance flavor.If this parameter is
     * changed, a temporary instance will be generated. This temporary instance will occupy the association of the VPC
     * security group and cannot be deleted for 12 hours.
     */
    flavor: pulumi.Input<string>;
    /**
     * Required for HA instances. Specifies the replication mode for the standby DB instance.
     * + For MySQL, the value is **async** or **semisync**.
     * + For PostgreSQL, the value is **async** or **sync**.
     * + For Microsoft SQL Server, the value is **sync**.
     *
     * > **NOTE:** **async** indicates the asynchronous replication mode. **semisync** indicates the semi-synchronous
     * replication mode. **sync** indicates the synchronous replication mode.
     */
    haReplicationMode?: pulumi.Input<string>;
    /**
     * Specifies the case-sensitive state of the database table name,
     * the default value is "1". Changing this parameter will create a new resource.
     * + 0: Table names are stored as fixed and table names are case-sensitive.
     * + 1: Table names will be stored in lower case and table names are not case-sensitive.
     */
    lowerCaseTableNames?: pulumi.Input<string>;
    /**
     * Specifies the time at which the maintenance time window starts, for example, **22:00**.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * Specifies the time at which the maintenance time window ends, for example, **01:00**.
     *
     * > **Note** For RDS for MySQL and RDS for PostgreSQL databases, the maintenance begin time and end time must be on the
     * hour, and the interval between them must be one to four hours.<br>
     * For RDS for SQL Server databases, the interval between the maintenance begin time and end time must be four hours.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * Specify the host information for MSDTC.
     * The msdtcHosts structure is documented below.
     *
     * > **NOTE:** Only adding MSDTC hosts is supported, deletion is not allowed.
     */
    msdtcHosts?: pulumi.Input<pulumi.Input<inputs.Rds.InstanceMsdtcHost>[]>;
    /**
     * Specifies the DB instance name. The DB instance name of the same type must be unique for
     * the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
     * contain only letters, digits, hyphens (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the parameter group ID.
     */
    paramGroupId?: pulumi.Input<string>;
    /**
     * Specify an array of one or more parameters to be set to the RDS instance after
     * launched. You can check on console to see which parameters supported. Structure is documented below.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.Rds.InstanceParameter>[]>;
    /**
     * Specifies the charging period of the RDS DB instance. If `periodUnit` is set
     * to **month**, the value ranges from `1` to `9`. If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
     * This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this creates a new resource.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the RDS DB instance. Valid values
     * are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**. Changing this
     * creates a new resource.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the power action to be done for the instance.
     * Value options: **ON**, **OFF** and **REBOOT**.
     *
     * > **NOTE:** The `powerAction` is a one-time action.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * Specifies the prefix of the private domain name. The value contains
     * **8** to **64** characters. Only uppercase letters, lowercase letters, and digits are allowed.
     */
    privateDnsNamePrefix?: pulumi.Input<string>;
    /**
     * Specifies the read write permissions of the instance. Valid values:
     * + **readwrite**: read write permissions.
     * + **readonly**: readonly permissions.
     */
    readWritePermissions?: pulumi.Input<string>;
    /**
     * The region in which to create the rds instance resource. If omitted, the
     * provider-level region will be used. Changing this creates a new rds instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the restoration information. It only supported restore to postpaid
     * instance. Structure is documented below. Changing this parameter will create a new resource.
     */
    restore?: pulumi.Input<inputs.Rds.InstanceRestore>;
    /**
     * Specifies the rotation days of TDE rotation.
     */
    rotateDay?: pulumi.Input<number>;
    /**
     * Specifies whether to enable seconds level monitoring.
     */
    secondsLevelMonitoringEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the seconds level monitoring interval. Valid values:
     * **1**, **5**. It is mandatory when `secondsLevelMonitoringEnabled` is **true**.
     */
    secondsLevelMonitoringInterval?: pulumi.Input<number>;
    /**
     * Specifies the key ID of TDE rotation.
     */
    secretId?: pulumi.Input<string>;
    /**
     * Specifies the key name of TDE rotation.
     */
    secretName?: pulumi.Input<string>;
    /**
     * Specifies the key version of TDE rotation.
     *
     * > **NOTE:** `rotateDay`, `secretId`, `secretName` and `secretVersion` will only take effect when `tdeEnabled`
     * is **true**.
     */
    secretVersion?: pulumi.Input<string>;
    /**
     * Specifies the security group which the RDS DB instance belongs to.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies the slow log show original status of the instance.
     * Only **MySQL** and **PostgreSQL** are supported. Value options: **on**, **off**.
     */
    slowLogShowOriginalStatus?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the SSL for MySQL database.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Specifies the network id of a subnet. Changing this parameter will create a
     * new resource.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specifies the database switchover policy.
     * + **reliability**: reliability first.
     * + **availability**: availability first.
     *
     * Defaults to **reliability**.
     */
    switchStrategy?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
     * pair.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether enable TDE for the instance.
     *
     * > **NOTE:** TDE cannot be disabled after being enabled.
     */
    tdeEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
     * and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
     * Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
     * zone is expressed as a character string.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Specifies the volume information. Structure is documented below.
     */
    volume: pulumi.Input<inputs.Rds.InstanceVolume>;
    /**
     * Specifies the VPC ID. Changing this parameter will create a new resource.
     */
    vpcId: pulumi.Input<string>;
}
