// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of flow logs.
 *
 * Before using enterprise router, define custom endpoint as shown below:
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const resourceId = config.requireObject<any>("resourceId");
 * const test = sbercloud.Er.getFlowLogs({
 *     instanceId: instanceId,
 *     resourceId: resourceId,
 * });
 * ```
 */
export function getFlowLogs(args: GetFlowLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Er/getFlowLogs:getFlowLogs", {
        "enabled": args.enabled,
        "flowLogId": args.flowLogId,
        "instanceId": args.instanceId,
        "logGroupId": args.logGroupId,
        "logStreamId": args.logStreamId,
        "name": args.name,
        "region": args.region,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowLogs.
 */
export interface GetFlowLogsArgs {
    /**
     * Specifies the switch status of the flow log.
     * The value can be **true** and **false**.
     */
    enabled?: string;
    /**
     * Specifies the ID of the flow log.
     */
    flowLogId?: string;
    /**
     * Specifies the ID of the ER instance to which the flow logs belong.
     */
    instanceId: string;
    /**
     * Specifies the ID of the log group to which the flow logs belong.
     */
    logGroupId?: string;
    /**
     * Specifies the ID of the log stream to which the flow logs belong.
     */
    logStreamId?: string;
    /**
     * Specifies the name of the flow log.
     */
    name?: string;
    /**
     * Specifies the region where the flow logs are located.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the ID of the attachment to which the flow logs belong.
     */
    resourceId?: string;
    /**
     * Specifies the type of the flow logs.
     * The valid values are as follows:
     * + **attachment**: The flow logs type are attachment.
     */
    resourceType?: string;
    /**
     * Specifies the status of the flow logs.
     */
    status?: string;
}

/**
 * A collection of values returned by getFlowLogs.
 */
export interface GetFlowLogsResult {
    /**
     * The switch of the flow log.
     */
    readonly enabled?: string;
    readonly flowLogId?: string;
    /**
     * The list ot the flow logs.
     * The flowLogs structure is documented below.
     */
    readonly flowLogs: outputs.Er.GetFlowLogsFlowLog[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * The ID of the log group to which the flow log belongs.
     */
    readonly logGroupId?: string;
    /**
     * The ID of the log stream to which the flow log belongs.
     */
    readonly logStreamId?: string;
    /**
     * The name of the flow log.
     */
    readonly name?: string;
    readonly region?: string;
    /**
     * The ID of the attachment to which the flow log belongs.
     */
    readonly resourceId?: string;
    /**
     * The type of the flow log.
     */
    readonly resourceType?: string;
    /**
     * The status of the flow log.
     */
    readonly status?: string;
}
/**
 * Use this data source to get the list of flow logs.
 *
 * Before using enterprise router, define custom endpoint as shown below:
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const resourceId = config.requireObject<any>("resourceId");
 * const test = sbercloud.Er.getFlowLogs({
 *     instanceId: instanceId,
 *     resourceId: resourceId,
 * });
 * ```
 */
export function getFlowLogsOutput(args: GetFlowLogsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Er/getFlowLogs:getFlowLogs", {
        "enabled": args.enabled,
        "flowLogId": args.flowLogId,
        "instanceId": args.instanceId,
        "logGroupId": args.logGroupId,
        "logStreamId": args.logStreamId,
        "name": args.name,
        "region": args.region,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowLogs.
 */
export interface GetFlowLogsOutputArgs {
    /**
     * Specifies the switch status of the flow log.
     * The value can be **true** and **false**.
     */
    enabled?: pulumi.Input<string>;
    /**
     * Specifies the ID of the flow log.
     */
    flowLogId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the ER instance to which the flow logs belong.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the ID of the log group to which the flow logs belong.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the log stream to which the flow logs belong.
     */
    logStreamId?: pulumi.Input<string>;
    /**
     * Specifies the name of the flow log.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the flow logs are located.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the attachment to which the flow logs belong.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Specifies the type of the flow logs.
     * The valid values are as follows:
     * + **attachment**: The flow logs type are attachment.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * Specifies the status of the flow logs.
     */
    status?: pulumi.Input<string>;
}
