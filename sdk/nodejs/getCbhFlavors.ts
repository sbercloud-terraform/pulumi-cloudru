// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get the list of CBH specifications.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.getCbhFlavors({
 *     type: "basic",
 * });
 * ```
 */
export function getCbhFlavors(args?: GetCbhFlavorsArgs, opts?: pulumi.InvokeOptions): Promise<GetCbhFlavorsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getCbhFlavors:getCbhFlavors", {
        "action": args.action,
        "asset": args.asset,
        "flavorId": args.flavorId,
        "maxConnection": args.maxConnection,
        "memory": args.memory,
        "region": args.region,
        "specCode": args.specCode,
        "type": args.type,
        "vcpus": args.vcpus,
    }, opts);
}

/**
 * A collection of arguments for invoking getCbhFlavors.
 */
export interface GetCbhFlavorsArgs {
    /**
     * Specifies the action of querying instances specification information.
     * The valid values are as follows:
     * + **create**: Query instance specification information that can be created.
     * + **update**: Query instance specification information that can be updated.
     *
     * If omitted, the CBH specifications that can be created will be queried.
     */
    action?: string;
    /**
     * Specifies the number of CBH assets.
     */
    asset?: number;
    /**
     * Specifies the ID of the specification of CBH.
     * At present, CBH provides two functional versions: standard version and professional version.
     * The standard version is equipped with asset specifications of 10(for example the `flavorId` is: **cbh.basic.10**),
     * 20, 50, 100, 200, 500, 1000, 2000, 5000, and 10000.
     * The professional version is equipped with 10(for example the `flavorId` is: **cbh.enhance.10**),
     * 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000 asset specifications.
     * The specification 'enhance' is more advanced than the specification 'basic'.
     */
    flavorId?: string;
    /**
     * Specifies the maximum number of connections to the CBH.
     */
    maxConnection?: number;
    /**
     * Specifies the memory size of the CBH, in GB.
     */
    memory?: number;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the ID of the CBH specification, the query result shows all specifications
     * that can be changed by this specification. This parameter is required when `action` is set to **update**.
     */
    specCode?: string;
    /**
     * Specifies the type of CBH specification. The value can be:
     * + **basic**: Standard version.
     * + **enhance**: Professional version.
     */
    type?: string;
    /**
     * Specifies the number of CPU cores of the CBH.
     */
    vcpus?: number;
}

/**
 * A collection of values returned by getCbhFlavors.
 */
export interface GetCbhFlavorsResult {
    readonly action?: string;
    /**
     * The number of CBH assets.
     */
    readonly asset?: number;
    readonly flavorId?: string;
    /**
     * Indicates the list of CBH specification.
     * The flavor structure is documented below.
     */
    readonly flavors: outputs.GetCbhFlavorsFlavor[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The maximum number of connections to the CBH.
     */
    readonly maxConnection?: number;
    /**
     * The memory size of the CBH, in GB.
     */
    readonly memory?: number;
    readonly region: string;
    readonly specCode?: string;
    /**
     * The type of CBH specification. The value can be:
     * + **basic**: Standard version.
     * + **enhance**: Professional version.
     */
    readonly type?: string;
    /**
     * The number of CPU cores of the CBH.
     */
    readonly vcpus?: number;
}
/**
 * Use this data source to get the list of CBH specifications.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.getCbhFlavors({
 *     type: "basic",
 * });
 * ```
 */
export function getCbhFlavorsOutput(args?: GetCbhFlavorsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCbhFlavorsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getCbhFlavors:getCbhFlavors", {
        "action": args.action,
        "asset": args.asset,
        "flavorId": args.flavorId,
        "maxConnection": args.maxConnection,
        "memory": args.memory,
        "region": args.region,
        "specCode": args.specCode,
        "type": args.type,
        "vcpus": args.vcpus,
    }, opts);
}

/**
 * A collection of arguments for invoking getCbhFlavors.
 */
export interface GetCbhFlavorsOutputArgs {
    /**
     * Specifies the action of querying instances specification information.
     * The valid values are as follows:
     * + **create**: Query instance specification information that can be created.
     * + **update**: Query instance specification information that can be updated.
     *
     * If omitted, the CBH specifications that can be created will be queried.
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies the number of CBH assets.
     */
    asset?: pulumi.Input<number>;
    /**
     * Specifies the ID of the specification of CBH.
     * At present, CBH provides two functional versions: standard version and professional version.
     * The standard version is equipped with asset specifications of 10(for example the `flavorId` is: **cbh.basic.10**),
     * 20, 50, 100, 200, 500, 1000, 2000, 5000, and 10000.
     * The professional version is equipped with 10(for example the `flavorId` is: **cbh.enhance.10**),
     * 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000 asset specifications.
     * The specification 'enhance' is more advanced than the specification 'basic'.
     */
    flavorId?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of connections to the CBH.
     */
    maxConnection?: pulumi.Input<number>;
    /**
     * Specifies the memory size of the CBH, in GB.
     */
    memory?: pulumi.Input<number>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the CBH specification, the query result shows all specifications
     * that can be changed by this specification. This parameter is required when `action` is set to **update**.
     */
    specCode?: pulumi.Input<string>;
    /**
     * Specifies the type of CBH specification. The value can be:
     * + **basic**: Standard version.
     * + **enhance**: Professional version.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the number of CPU cores of the CBH.
     */
    vcpus?: pulumi.Input<number>;
}
