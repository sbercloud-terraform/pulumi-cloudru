// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

type PgPluginParameter struct {
	pulumi.CustomResourceState

	// Indicates the default values of the plugin parameter.
	DefaultValues pulumi.StringArrayOutput `pulumi:"defaultValues"`
	// Specifies the ID of RDS instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the name of the plugin parameter.
	Name   pulumi.StringOutput `pulumi:"name"`
	Region pulumi.StringOutput `pulumi:"region"`
	// Indicates whether a reboot is required.
	RestartRequired pulumi.BoolOutput `pulumi:"restartRequired"`
	// Specifies the list of plugin parameter values.
	Values pulumi.StringArrayOutput `pulumi:"values"`
}

// NewPgPluginParameter registers a new resource with the given unique name, arguments, and options.
func NewPgPluginParameter(ctx *pulumi.Context,
	name string, args *PgPluginParameterArgs, opts ...pulumi.ResourceOption) (*PgPluginParameter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Values == nil {
		return nil, errors.New("invalid value for required argument 'Values'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PgPluginParameter
	err := ctx.RegisterResource("sbercloud:Rds/pgPluginParameter:PgPluginParameter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPgPluginParameter gets an existing PgPluginParameter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPgPluginParameter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PgPluginParameterState, opts ...pulumi.ResourceOption) (*PgPluginParameter, error) {
	var resource PgPluginParameter
	err := ctx.ReadResource("sbercloud:Rds/pgPluginParameter:PgPluginParameter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PgPluginParameter resources.
type pgPluginParameterState struct {
	// Indicates the default values of the plugin parameter.
	DefaultValues []string `pulumi:"defaultValues"`
	// Specifies the ID of RDS instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the name of the plugin parameter.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// Indicates whether a reboot is required.
	RestartRequired *bool `pulumi:"restartRequired"`
	// Specifies the list of plugin parameter values.
	Values []string `pulumi:"values"`
}

type PgPluginParameterState struct {
	// Indicates the default values of the plugin parameter.
	DefaultValues pulumi.StringArrayInput
	// Specifies the ID of RDS instance.
	InstanceId pulumi.StringPtrInput
	// Specifies the name of the plugin parameter.
	Name   pulumi.StringPtrInput
	Region pulumi.StringPtrInput
	// Indicates whether a reboot is required.
	RestartRequired pulumi.BoolPtrInput
	// Specifies the list of plugin parameter values.
	Values pulumi.StringArrayInput
}

func (PgPluginParameterState) ElementType() reflect.Type {
	return reflect.TypeOf((*pgPluginParameterState)(nil)).Elem()
}

type pgPluginParameterArgs struct {
	// Specifies the ID of RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the name of the plugin parameter.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// Specifies the list of plugin parameter values.
	Values []string `pulumi:"values"`
}

// The set of arguments for constructing a PgPluginParameter resource.
type PgPluginParameterArgs struct {
	// Specifies the ID of RDS instance.
	InstanceId pulumi.StringInput
	// Specifies the name of the plugin parameter.
	Name   pulumi.StringPtrInput
	Region pulumi.StringPtrInput
	// Specifies the list of plugin parameter values.
	Values pulumi.StringArrayInput
}

func (PgPluginParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pgPluginParameterArgs)(nil)).Elem()
}

type PgPluginParameterInput interface {
	pulumi.Input

	ToPgPluginParameterOutput() PgPluginParameterOutput
	ToPgPluginParameterOutputWithContext(ctx context.Context) PgPluginParameterOutput
}

func (*PgPluginParameter) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPluginParameter)(nil)).Elem()
}

func (i *PgPluginParameter) ToPgPluginParameterOutput() PgPluginParameterOutput {
	return i.ToPgPluginParameterOutputWithContext(context.Background())
}

func (i *PgPluginParameter) ToPgPluginParameterOutputWithContext(ctx context.Context) PgPluginParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPluginParameterOutput)
}

// PgPluginParameterArrayInput is an input type that accepts PgPluginParameterArray and PgPluginParameterArrayOutput values.
// You can construct a concrete instance of `PgPluginParameterArrayInput` via:
//
//	PgPluginParameterArray{ PgPluginParameterArgs{...} }
type PgPluginParameterArrayInput interface {
	pulumi.Input

	ToPgPluginParameterArrayOutput() PgPluginParameterArrayOutput
	ToPgPluginParameterArrayOutputWithContext(context.Context) PgPluginParameterArrayOutput
}

type PgPluginParameterArray []PgPluginParameterInput

func (PgPluginParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PgPluginParameter)(nil)).Elem()
}

func (i PgPluginParameterArray) ToPgPluginParameterArrayOutput() PgPluginParameterArrayOutput {
	return i.ToPgPluginParameterArrayOutputWithContext(context.Background())
}

func (i PgPluginParameterArray) ToPgPluginParameterArrayOutputWithContext(ctx context.Context) PgPluginParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPluginParameterArrayOutput)
}

// PgPluginParameterMapInput is an input type that accepts PgPluginParameterMap and PgPluginParameterMapOutput values.
// You can construct a concrete instance of `PgPluginParameterMapInput` via:
//
//	PgPluginParameterMap{ "key": PgPluginParameterArgs{...} }
type PgPluginParameterMapInput interface {
	pulumi.Input

	ToPgPluginParameterMapOutput() PgPluginParameterMapOutput
	ToPgPluginParameterMapOutputWithContext(context.Context) PgPluginParameterMapOutput
}

type PgPluginParameterMap map[string]PgPluginParameterInput

func (PgPluginParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PgPluginParameter)(nil)).Elem()
}

func (i PgPluginParameterMap) ToPgPluginParameterMapOutput() PgPluginParameterMapOutput {
	return i.ToPgPluginParameterMapOutputWithContext(context.Background())
}

func (i PgPluginParameterMap) ToPgPluginParameterMapOutputWithContext(ctx context.Context) PgPluginParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgPluginParameterMapOutput)
}

type PgPluginParameterOutput struct{ *pulumi.OutputState }

func (PgPluginParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgPluginParameter)(nil)).Elem()
}

func (o PgPluginParameterOutput) ToPgPluginParameterOutput() PgPluginParameterOutput {
	return o
}

func (o PgPluginParameterOutput) ToPgPluginParameterOutputWithContext(ctx context.Context) PgPluginParameterOutput {
	return o
}

// Indicates the default values of the plugin parameter.
func (o PgPluginParameterOutput) DefaultValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PgPluginParameter) pulumi.StringArrayOutput { return v.DefaultValues }).(pulumi.StringArrayOutput)
}

// Specifies the ID of RDS instance.
func (o PgPluginParameterOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PgPluginParameter) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the name of the plugin parameter.
func (o PgPluginParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PgPluginParameter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PgPluginParameterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *PgPluginParameter) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates whether a reboot is required.
func (o PgPluginParameterOutput) RestartRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *PgPluginParameter) pulumi.BoolOutput { return v.RestartRequired }).(pulumi.BoolOutput)
}

// Specifies the list of plugin parameter values.
func (o PgPluginParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PgPluginParameter) pulumi.StringArrayOutput { return v.Values }).(pulumi.StringArrayOutput)
}

type PgPluginParameterArrayOutput struct{ *pulumi.OutputState }

func (PgPluginParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PgPluginParameter)(nil)).Elem()
}

func (o PgPluginParameterArrayOutput) ToPgPluginParameterArrayOutput() PgPluginParameterArrayOutput {
	return o
}

func (o PgPluginParameterArrayOutput) ToPgPluginParameterArrayOutputWithContext(ctx context.Context) PgPluginParameterArrayOutput {
	return o
}

func (o PgPluginParameterArrayOutput) Index(i pulumi.IntInput) PgPluginParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PgPluginParameter {
		return vs[0].([]*PgPluginParameter)[vs[1].(int)]
	}).(PgPluginParameterOutput)
}

type PgPluginParameterMapOutput struct{ *pulumi.OutputState }

func (PgPluginParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PgPluginParameter)(nil)).Elem()
}

func (o PgPluginParameterMapOutput) ToPgPluginParameterMapOutput() PgPluginParameterMapOutput {
	return o
}

func (o PgPluginParameterMapOutput) ToPgPluginParameterMapOutputWithContext(ctx context.Context) PgPluginParameterMapOutput {
	return o
}

func (o PgPluginParameterMapOutput) MapIndex(k pulumi.StringInput) PgPluginParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PgPluginParameter {
		return vs[0].(map[string]*PgPluginParameter)[vs[1].(string)]
	}).(PgPluginParameterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PgPluginParameterInput)(nil)).Elem(), &PgPluginParameter{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgPluginParameterArrayInput)(nil)).Elem(), PgPluginParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgPluginParameterMapInput)(nil)).Elem(), PgPluginParameterMap{})
	pulumi.RegisterOutputType(PgPluginParameterOutput{})
	pulumi.RegisterOutputType(PgPluginParameterArrayOutput{})
	pulumi.RegisterOutputType(PgPluginParameterMapOutput{})
}
