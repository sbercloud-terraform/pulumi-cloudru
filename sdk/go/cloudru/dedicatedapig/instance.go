// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedapig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type Instance struct {
	pulumi.CustomResourceState

	// schema: Required; The name list of availability zones for the dedicated instance.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// schema: Deprecated; The name list of availability zones for the dedicated instance.
	AvailableZones pulumi.StringArrayOutput `pulumi:"availableZones"`
	// The egress bandwidth size of the dedicated instance.
	BandwidthSize pulumi.IntPtrOutput `pulumi:"bandwidthSize"`
	// schema: Deprecated; Time when the dedicated instance is created.
	//
	// Deprecated: Use 'created_at' instead
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Time when the dedicated instance is created, in RFC-3339 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specified the list of the instance custom ingress ports.
	CustomIngressPorts InstanceCustomIngressPortArrayOutput `pulumi:"customIngressPorts"`
	// The description of the dedicated instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The edition of the dedicated instance.
	Edition pulumi.StringOutput `pulumi:"edition"`
	// The egress (NAT) public IP address.
	EgressAddress pulumi.StringOutput `pulumi:"egressAddress"`
	// The EIP ID associated with the dedicated instance.
	EipId pulumi.StringOutput `pulumi:"eipId"`
	// The enterprise project ID to which the dedicated instance belongs.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// The ingress EIP address.
	IngressAddress               pulumi.StringOutput    `pulumi:"ingressAddress"`
	IngressBandwidthChargingMode pulumi.StringPtrOutput `pulumi:"ingressBandwidthChargingMode"`
	IngressBandwidthSize         pulumi.IntPtrOutput    `pulumi:"ingressBandwidthSize"`
	// Whether public access with an IPv6 address is supported.
	Ipv6Enable pulumi.BoolOutput `pulumi:"ipv6Enable"`
	// The type of loadbalancer provider used by the instance.
	LoadbalancerProvider pulumi.StringOutput `pulumi:"loadbalancerProvider"`
	// The start time of the maintenance time window.
	MaintainBegin pulumi.StringOutput `pulumi:"maintainBegin"`
	// End time of the maintenance time window, 4-hour difference between the start time and end time.
	MaintainEnd pulumi.StringOutput `pulumi:"maintainEnd"`
	// The name of the dedicated instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The region in which to create the dedicated instance resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The ID of the security group to which the dedicated instance belongs to.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Status of the dedicated instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// The ID of the VPC subnet used to create the dedicated instance.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The supported features of the dedicated instance.
	SupportedFeatures pulumi.StringArrayOutput `pulumi:"supportedFeatures"`
	Tags              pulumi.StringMapOutput   `pulumi:"tags"`
	// The ID of the VPC used to create the dedicated instance.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The ingress private IP address of the VPC.
	VpcIngressAddress pulumi.StringOutput `pulumi:"vpcIngressAddress"`
	// The address (full name) of the VPC endpoint service.
	VpcepServiceAddress pulumi.StringOutput `pulumi:"vpcepServiceAddress"`
	// Name of the VPC endpoint service.
	VpcepServiceName pulumi.StringOutput `pulumi:"vpcepServiceName"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Edition == nil {
		return nil, errors.New("invalid value for required argument 'Edition'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("sbercloud:DedicatedApig/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("sbercloud:DedicatedApig/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// schema: Required; The name list of availability zones for the dedicated instance.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// schema: Deprecated; The name list of availability zones for the dedicated instance.
	AvailableZones []string `pulumi:"availableZones"`
	// The egress bandwidth size of the dedicated instance.
	BandwidthSize *int `pulumi:"bandwidthSize"`
	// schema: Deprecated; Time when the dedicated instance is created.
	//
	// Deprecated: Use 'created_at' instead
	CreateTime *string `pulumi:"createTime"`
	// Time when the dedicated instance is created, in RFC-3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// Specified the list of the instance custom ingress ports.
	CustomIngressPorts []InstanceCustomIngressPort `pulumi:"customIngressPorts"`
	// The description of the dedicated instance.
	Description *string `pulumi:"description"`
	// The edition of the dedicated instance.
	Edition *string `pulumi:"edition"`
	// The egress (NAT) public IP address.
	EgressAddress *string `pulumi:"egressAddress"`
	// The EIP ID associated with the dedicated instance.
	EipId *string `pulumi:"eipId"`
	// The enterprise project ID to which the dedicated instance belongs.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The ingress EIP address.
	IngressAddress               *string `pulumi:"ingressAddress"`
	IngressBandwidthChargingMode *string `pulumi:"ingressBandwidthChargingMode"`
	IngressBandwidthSize         *int    `pulumi:"ingressBandwidthSize"`
	// Whether public access with an IPv6 address is supported.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// The type of loadbalancer provider used by the instance.
	LoadbalancerProvider *string `pulumi:"loadbalancerProvider"`
	// The start time of the maintenance time window.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// End time of the maintenance time window, 4-hour difference between the start time and end time.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// The name of the dedicated instance.
	Name *string `pulumi:"name"`
	// The region in which to create the dedicated instance resource.
	Region *string `pulumi:"region"`
	// The ID of the security group to which the dedicated instance belongs to.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Status of the dedicated instance.
	Status *string `pulumi:"status"`
	// The ID of the VPC subnet used to create the dedicated instance.
	SubnetId *string `pulumi:"subnetId"`
	// The supported features of the dedicated instance.
	SupportedFeatures []string          `pulumi:"supportedFeatures"`
	Tags              map[string]string `pulumi:"tags"`
	// The ID of the VPC used to create the dedicated instance.
	VpcId *string `pulumi:"vpcId"`
	// The ingress private IP address of the VPC.
	VpcIngressAddress *string `pulumi:"vpcIngressAddress"`
	// The address (full name) of the VPC endpoint service.
	VpcepServiceAddress *string `pulumi:"vpcepServiceAddress"`
	// Name of the VPC endpoint service.
	VpcepServiceName *string `pulumi:"vpcepServiceName"`
}

type InstanceState struct {
	// schema: Required; The name list of availability zones for the dedicated instance.
	AvailabilityZones pulumi.StringArrayInput
	// schema: Deprecated; The name list of availability zones for the dedicated instance.
	AvailableZones pulumi.StringArrayInput
	// The egress bandwidth size of the dedicated instance.
	BandwidthSize pulumi.IntPtrInput
	// schema: Deprecated; Time when the dedicated instance is created.
	//
	// Deprecated: Use 'created_at' instead
	CreateTime pulumi.StringPtrInput
	// Time when the dedicated instance is created, in RFC-3339 format.
	CreatedAt pulumi.StringPtrInput
	// Specified the list of the instance custom ingress ports.
	CustomIngressPorts InstanceCustomIngressPortArrayInput
	// The description of the dedicated instance.
	Description pulumi.StringPtrInput
	// The edition of the dedicated instance.
	Edition pulumi.StringPtrInput
	// The egress (NAT) public IP address.
	EgressAddress pulumi.StringPtrInput
	// The EIP ID associated with the dedicated instance.
	EipId pulumi.StringPtrInput
	// The enterprise project ID to which the dedicated instance belongs.
	EnterpriseProjectId pulumi.StringPtrInput
	// The ingress EIP address.
	IngressAddress               pulumi.StringPtrInput
	IngressBandwidthChargingMode pulumi.StringPtrInput
	IngressBandwidthSize         pulumi.IntPtrInput
	// Whether public access with an IPv6 address is supported.
	Ipv6Enable pulumi.BoolPtrInput
	// The type of loadbalancer provider used by the instance.
	LoadbalancerProvider pulumi.StringPtrInput
	// The start time of the maintenance time window.
	MaintainBegin pulumi.StringPtrInput
	// End time of the maintenance time window, 4-hour difference between the start time and end time.
	MaintainEnd pulumi.StringPtrInput
	// The name of the dedicated instance.
	Name pulumi.StringPtrInput
	// The region in which to create the dedicated instance resource.
	Region pulumi.StringPtrInput
	// The ID of the security group to which the dedicated instance belongs to.
	SecurityGroupId pulumi.StringPtrInput
	// Status of the dedicated instance.
	Status pulumi.StringPtrInput
	// The ID of the VPC subnet used to create the dedicated instance.
	SubnetId pulumi.StringPtrInput
	// The supported features of the dedicated instance.
	SupportedFeatures pulumi.StringArrayInput
	Tags              pulumi.StringMapInput
	// The ID of the VPC used to create the dedicated instance.
	VpcId pulumi.StringPtrInput
	// The ingress private IP address of the VPC.
	VpcIngressAddress pulumi.StringPtrInput
	// The address (full name) of the VPC endpoint service.
	VpcepServiceAddress pulumi.StringPtrInput
	// Name of the VPC endpoint service.
	VpcepServiceName pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// schema: Required; The name list of availability zones for the dedicated instance.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// schema: Deprecated; The name list of availability zones for the dedicated instance.
	AvailableZones []string `pulumi:"availableZones"`
	// The egress bandwidth size of the dedicated instance.
	BandwidthSize *int `pulumi:"bandwidthSize"`
	// Specified the list of the instance custom ingress ports.
	CustomIngressPorts []InstanceCustomIngressPort `pulumi:"customIngressPorts"`
	// The description of the dedicated instance.
	Description *string `pulumi:"description"`
	// The edition of the dedicated instance.
	Edition string `pulumi:"edition"`
	// The EIP ID associated with the dedicated instance.
	EipId *string `pulumi:"eipId"`
	// The enterprise project ID to which the dedicated instance belongs.
	EnterpriseProjectId          *string `pulumi:"enterpriseProjectId"`
	IngressBandwidthChargingMode *string `pulumi:"ingressBandwidthChargingMode"`
	IngressBandwidthSize         *int    `pulumi:"ingressBandwidthSize"`
	// Whether public access with an IPv6 address is supported.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// The type of loadbalancer provider used by the instance.
	LoadbalancerProvider *string `pulumi:"loadbalancerProvider"`
	// The start time of the maintenance time window.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// The name of the dedicated instance.
	Name *string `pulumi:"name"`
	// The region in which to create the dedicated instance resource.
	Region *string `pulumi:"region"`
	// The ID of the security group to which the dedicated instance belongs to.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The ID of the VPC subnet used to create the dedicated instance.
	SubnetId string            `pulumi:"subnetId"`
	Tags     map[string]string `pulumi:"tags"`
	// The ID of the VPC used to create the dedicated instance.
	VpcId string `pulumi:"vpcId"`
	// Name of the VPC endpoint service.
	VpcepServiceName *string `pulumi:"vpcepServiceName"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// schema: Required; The name list of availability zones for the dedicated instance.
	AvailabilityZones pulumi.StringArrayInput
	// schema: Deprecated; The name list of availability zones for the dedicated instance.
	AvailableZones pulumi.StringArrayInput
	// The egress bandwidth size of the dedicated instance.
	BandwidthSize pulumi.IntPtrInput
	// Specified the list of the instance custom ingress ports.
	CustomIngressPorts InstanceCustomIngressPortArrayInput
	// The description of the dedicated instance.
	Description pulumi.StringPtrInput
	// The edition of the dedicated instance.
	Edition pulumi.StringInput
	// The EIP ID associated with the dedicated instance.
	EipId pulumi.StringPtrInput
	// The enterprise project ID to which the dedicated instance belongs.
	EnterpriseProjectId          pulumi.StringPtrInput
	IngressBandwidthChargingMode pulumi.StringPtrInput
	IngressBandwidthSize         pulumi.IntPtrInput
	// Whether public access with an IPv6 address is supported.
	Ipv6Enable pulumi.BoolPtrInput
	// The type of loadbalancer provider used by the instance.
	LoadbalancerProvider pulumi.StringPtrInput
	// The start time of the maintenance time window.
	MaintainBegin pulumi.StringPtrInput
	// The name of the dedicated instance.
	Name pulumi.StringPtrInput
	// The region in which to create the dedicated instance resource.
	Region pulumi.StringPtrInput
	// The ID of the security group to which the dedicated instance belongs to.
	SecurityGroupId pulumi.StringInput
	// The ID of the VPC subnet used to create the dedicated instance.
	SubnetId pulumi.StringInput
	Tags     pulumi.StringMapInput
	// The ID of the VPC used to create the dedicated instance.
	VpcId pulumi.StringInput
	// Name of the VPC endpoint service.
	VpcepServiceName pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// schema: Required; The name list of availability zones for the dedicated instance.
func (o InstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// schema: Deprecated; The name list of availability zones for the dedicated instance.
func (o InstanceOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

// The egress bandwidth size of the dedicated instance.
func (o InstanceOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// schema: Deprecated; Time when the dedicated instance is created.
//
// Deprecated: Use 'created_at' instead
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Time when the dedicated instance is created, in RFC-3339 format.
func (o InstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specified the list of the instance custom ingress ports.
func (o InstanceOutput) CustomIngressPorts() InstanceCustomIngressPortArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceCustomIngressPortArrayOutput { return v.CustomIngressPorts }).(InstanceCustomIngressPortArrayOutput)
}

// The description of the dedicated instance.
func (o InstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The edition of the dedicated instance.
func (o InstanceOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Edition }).(pulumi.StringOutput)
}

// The egress (NAT) public IP address.
func (o InstanceOutput) EgressAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EgressAddress }).(pulumi.StringOutput)
}

// The EIP ID associated with the dedicated instance.
func (o InstanceOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EipId }).(pulumi.StringOutput)
}

// The enterprise project ID to which the dedicated instance belongs.
func (o InstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The ingress EIP address.
func (o InstanceOutput) IngressAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.IngressAddress }).(pulumi.StringOutput)
}

func (o InstanceOutput) IngressBandwidthChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.IngressBandwidthChargingMode }).(pulumi.StringPtrOutput)
}

func (o InstanceOutput) IngressBandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.IngressBandwidthSize }).(pulumi.IntPtrOutput)
}

// Whether public access with an IPv6 address is supported.
func (o InstanceOutput) Ipv6Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.Ipv6Enable }).(pulumi.BoolOutput)
}

// The type of loadbalancer provider used by the instance.
func (o InstanceOutput) LoadbalancerProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LoadbalancerProvider }).(pulumi.StringOutput)
}

// The start time of the maintenance time window.
func (o InstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

// End time of the maintenance time window, 4-hour difference between the start time and end time.
func (o InstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

// The name of the dedicated instance.
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region in which to create the dedicated instance resource.
func (o InstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The ID of the security group to which the dedicated instance belongs to.
func (o InstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Status of the dedicated instance.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The ID of the VPC subnet used to create the dedicated instance.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The supported features of the dedicated instance.
func (o InstanceOutput) SupportedFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SupportedFeatures }).(pulumi.StringArrayOutput)
}

func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the VPC used to create the dedicated instance.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The ingress private IP address of the VPC.
func (o InstanceOutput) VpcIngressAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcIngressAddress }).(pulumi.StringOutput)
}

// The address (full name) of the VPC endpoint service.
func (o InstanceOutput) VpcepServiceAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcepServiceAddress }).(pulumi.StringOutput)
}

// Name of the VPC endpoint service.
func (o InstanceOutput) VpcepServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcepServiceName }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
