// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetEips(ctx *pulumi.Context, args *GetEipsArgs, opts ...pulumi.InvokeOption) (*GetEipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEipsResult
	err := ctx.Invoke("sbercloud:Eip/getEips:getEips", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEips.
type GetEipsArgs struct {
	EnterpriseProjectId *string           `pulumi:"enterpriseProjectId"`
	Ids                 []string          `pulumi:"ids"`
	IpVersion           *int              `pulumi:"ipVersion"`
	PortIds             []string          `pulumi:"portIds"`
	PrivateIps          []string          `pulumi:"privateIps"`
	PublicIps           []string          `pulumi:"publicIps"`
	Region              *string           `pulumi:"region"`
	Tags                map[string]string `pulumi:"tags"`
}

// A collection of values returned by getEips.
type GetEipsResult struct {
	Eips                []GetEipsEip `pulumi:"eips"`
	EnterpriseProjectId *string      `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string            `pulumi:"id"`
	Ids        []string          `pulumi:"ids"`
	IpVersion  *int              `pulumi:"ipVersion"`
	PortIds    []string          `pulumi:"portIds"`
	PrivateIps []string          `pulumi:"privateIps"`
	PublicIps  []string          `pulumi:"publicIps"`
	Region     string            `pulumi:"region"`
	Tags       map[string]string `pulumi:"tags"`
}

func GetEipsOutput(ctx *pulumi.Context, args GetEipsOutputArgs, opts ...pulumi.InvokeOption) GetEipsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEipsResultOutput, error) {
			args := v.(GetEipsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Eip/getEips:getEips", args, GetEipsResultOutput{}, options).(GetEipsResultOutput), nil
		}).(GetEipsResultOutput)
}

// A collection of arguments for invoking getEips.
type GetEipsOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput   `pulumi:"enterpriseProjectId"`
	Ids                 pulumi.StringArrayInput `pulumi:"ids"`
	IpVersion           pulumi.IntPtrInput      `pulumi:"ipVersion"`
	PortIds             pulumi.StringArrayInput `pulumi:"portIds"`
	PrivateIps          pulumi.StringArrayInput `pulumi:"privateIps"`
	PublicIps           pulumi.StringArrayInput `pulumi:"publicIps"`
	Region              pulumi.StringPtrInput   `pulumi:"region"`
	Tags                pulumi.StringMapInput   `pulumi:"tags"`
}

func (GetEipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsArgs)(nil)).Elem()
}

// A collection of values returned by getEips.
type GetEipsResultOutput struct{ *pulumi.OutputState }

func (GetEipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsResult)(nil)).Elem()
}

func (o GetEipsResultOutput) ToGetEipsResultOutput() GetEipsResultOutput {
	return o
}

func (o GetEipsResultOutput) ToGetEipsResultOutputWithContext(ctx context.Context) GetEipsResultOutput {
	return o
}

func (o GetEipsResultOutput) Eips() GetEipsEipArrayOutput {
	return o.ApplyT(func(v GetEipsResult) []GetEipsEip { return v.Eips }).(GetEipsEipArrayOutput)
}

func (o GetEipsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEipsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEipsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEipsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetEipsResultOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEipsResult) *int { return v.IpVersion }).(pulumi.IntPtrOutput)
}

func (o GetEipsResultOutput) PortIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEipsResult) []string { return v.PortIds }).(pulumi.StringArrayOutput)
}

func (o GetEipsResultOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEipsResult) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

func (o GetEipsResultOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEipsResult) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

func (o GetEipsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetEipsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEipsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEipsResultOutput{})
}
