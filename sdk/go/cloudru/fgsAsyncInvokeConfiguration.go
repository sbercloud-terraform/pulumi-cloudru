// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Using this resource to manage the configuration of the asynchronous invocation within HuaweiCloud.
//
// > A function only supports configuring one resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	sbercloud "github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			bucketName := cfg.RequireObject("bucketName")
//			topicUrn := cfg.RequireObject("topicUrn")
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"bucket":  bucketName,
//				"prefix":  "/success",
//				"expires": 5,
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"topic_urn": topicUrn,
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			_, err = sbercloud.NewFgsAsyncInvokeConfiguration(ctx, "test", &sbercloud.FgsAsyncInvokeConfigurationArgs{
//				FunctionUrn:               pulumi.Any(functionUrn),
//				MaxAsyncEventAgeInSeconds: pulumi.Int(3500),
//				MaxAsyncRetryAttempts:     pulumi.Int(2),
//				EnableAsyncStatusLog:      pulumi.Bool(true),
//				OnSuccess: &cloudru.FgsAsyncInvokeConfigurationOnSuccessArgs{
//					Destination: pulumi.String("OBS"),
//					Param:       pulumi.String(json0),
//				},
//				OnFailure: &cloudru.FgsAsyncInvokeConfigurationOnFailureArgs{
//					Destination: pulumi.String("SMN"),
//					Param:       pulumi.String(json1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The configurations can be imported using their related `function_urn`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:index/fgsAsyncInvokeConfiguration:FgsAsyncInvokeConfiguration test <function_urn>
// ```
type FgsAsyncInvokeConfiguration struct {
	pulumi.CustomResourceState

	// The creation time of the asynchronous invocation, in RFC3339 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies whether to enable asynchronous invocation status persistence.
	//
	// <a name="functiongraphDestinationConfig"></a>
	// The `onSuccess` and the `onFailure` blocks support:
	EnableAsyncStatusLog pulumi.BoolPtrOutput `pulumi:"enableAsyncStatusLog"`
	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn pulumi.StringOutput `pulumi:"functionUrn"`
	// Specifies the maximum validity period of a message.\
	// The valid value is range from `1` to `86,400`.
	MaxAsyncEventAgeInSeconds pulumi.IntOutput `pulumi:"maxAsyncEventAgeInSeconds"`
	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	// The valid value is range from `0` to `3`.
	MaxAsyncRetryAttempts pulumi.IntOutput `pulumi:"maxAsyncRetryAttempts"`
	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure FgsAsyncInvokeConfigurationOnFailurePtrOutput `pulumi:"onFailure"`
	// Specifies the target to be invoked when a function is successfully executed.\
	// The object structure is documented below.
	OnSuccess FgsAsyncInvokeConfigurationOnSuccessPtrOutput `pulumi:"onSuccess"`
	// Specifies the region in which to configure the asynchronous invocation.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The latest update time of the asynchronous invocation, in RFC3339 format.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewFgsAsyncInvokeConfiguration registers a new resource with the given unique name, arguments, and options.
func NewFgsAsyncInvokeConfiguration(ctx *pulumi.Context,
	name string, args *FgsAsyncInvokeConfigurationArgs, opts ...pulumi.ResourceOption) (*FgsAsyncInvokeConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionUrn == nil {
		return nil, errors.New("invalid value for required argument 'FunctionUrn'")
	}
	if args.MaxAsyncEventAgeInSeconds == nil {
		return nil, errors.New("invalid value for required argument 'MaxAsyncEventAgeInSeconds'")
	}
	if args.MaxAsyncRetryAttempts == nil {
		return nil, errors.New("invalid value for required argument 'MaxAsyncRetryAttempts'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FgsAsyncInvokeConfiguration
	err := ctx.RegisterResource("sbercloud:index/fgsAsyncInvokeConfiguration:FgsAsyncInvokeConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFgsAsyncInvokeConfiguration gets an existing FgsAsyncInvokeConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFgsAsyncInvokeConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FgsAsyncInvokeConfigurationState, opts ...pulumi.ResourceOption) (*FgsAsyncInvokeConfiguration, error) {
	var resource FgsAsyncInvokeConfiguration
	err := ctx.ReadResource("sbercloud:index/fgsAsyncInvokeConfiguration:FgsAsyncInvokeConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FgsAsyncInvokeConfiguration resources.
type fgsAsyncInvokeConfigurationState struct {
	// The creation time of the asynchronous invocation, in RFC3339 format.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies whether to enable asynchronous invocation status persistence.
	//
	// <a name="functiongraphDestinationConfig"></a>
	// The `onSuccess` and the `onFailure` blocks support:
	EnableAsyncStatusLog *bool `pulumi:"enableAsyncStatusLog"`
	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn *string `pulumi:"functionUrn"`
	// Specifies the maximum validity period of a message.\
	// The valid value is range from `1` to `86,400`.
	MaxAsyncEventAgeInSeconds *int `pulumi:"maxAsyncEventAgeInSeconds"`
	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	// The valid value is range from `0` to `3`.
	MaxAsyncRetryAttempts *int `pulumi:"maxAsyncRetryAttempts"`
	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure *FgsAsyncInvokeConfigurationOnFailure `pulumi:"onFailure"`
	// Specifies the target to be invoked when a function is successfully executed.\
	// The object structure is documented below.
	OnSuccess *FgsAsyncInvokeConfigurationOnSuccess `pulumi:"onSuccess"`
	// Specifies the region in which to configure the asynchronous invocation.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// The latest update time of the asynchronous invocation, in RFC3339 format.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type FgsAsyncInvokeConfigurationState struct {
	// The creation time of the asynchronous invocation, in RFC3339 format.
	CreatedAt pulumi.StringPtrInput
	// Specifies whether to enable asynchronous invocation status persistence.
	//
	// <a name="functiongraphDestinationConfig"></a>
	// The `onSuccess` and the `onFailure` blocks support:
	EnableAsyncStatusLog pulumi.BoolPtrInput
	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn pulumi.StringPtrInput
	// Specifies the maximum validity period of a message.\
	// The valid value is range from `1` to `86,400`.
	MaxAsyncEventAgeInSeconds pulumi.IntPtrInput
	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	// The valid value is range from `0` to `3`.
	MaxAsyncRetryAttempts pulumi.IntPtrInput
	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure FgsAsyncInvokeConfigurationOnFailurePtrInput
	// Specifies the target to be invoked when a function is successfully executed.\
	// The object structure is documented below.
	OnSuccess FgsAsyncInvokeConfigurationOnSuccessPtrInput
	// Specifies the region in which to configure the asynchronous invocation.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// The latest update time of the asynchronous invocation, in RFC3339 format.
	UpdatedAt pulumi.StringPtrInput
}

func (FgsAsyncInvokeConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*fgsAsyncInvokeConfigurationState)(nil)).Elem()
}

type fgsAsyncInvokeConfigurationArgs struct {
	// Specifies whether to enable asynchronous invocation status persistence.
	//
	// <a name="functiongraphDestinationConfig"></a>
	// The `onSuccess` and the `onFailure` blocks support:
	EnableAsyncStatusLog *bool `pulumi:"enableAsyncStatusLog"`
	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn string `pulumi:"functionUrn"`
	// Specifies the maximum validity period of a message.\
	// The valid value is range from `1` to `86,400`.
	MaxAsyncEventAgeInSeconds int `pulumi:"maxAsyncEventAgeInSeconds"`
	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	// The valid value is range from `0` to `3`.
	MaxAsyncRetryAttempts int `pulumi:"maxAsyncRetryAttempts"`
	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure *FgsAsyncInvokeConfigurationOnFailure `pulumi:"onFailure"`
	// Specifies the target to be invoked when a function is successfully executed.\
	// The object structure is documented below.
	OnSuccess *FgsAsyncInvokeConfigurationOnSuccess `pulumi:"onSuccess"`
	// Specifies the region in which to configure the asynchronous invocation.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a FgsAsyncInvokeConfiguration resource.
type FgsAsyncInvokeConfigurationArgs struct {
	// Specifies whether to enable asynchronous invocation status persistence.
	//
	// <a name="functiongraphDestinationConfig"></a>
	// The `onSuccess` and the `onFailure` blocks support:
	EnableAsyncStatusLog pulumi.BoolPtrInput
	// Specifies the function URN to which the asynchronous invocation belongs.
	// Changing this will create a new resource.
	FunctionUrn pulumi.StringInput
	// Specifies the maximum validity period of a message.\
	// The valid value is range from `1` to `86,400`.
	MaxAsyncEventAgeInSeconds pulumi.IntInput
	// Specifies the maximum number of retry attempts to be made if
	// asynchronous invocation fails.
	// The valid value is range from `0` to `3`.
	MaxAsyncRetryAttempts pulumi.IntInput
	// Specifies the target to be invoked when a function fails to be executed due to a
	// system error or an internal error.
	// The object structure is documented below.
	OnFailure FgsAsyncInvokeConfigurationOnFailurePtrInput
	// Specifies the target to be invoked when a function is successfully executed.\
	// The object structure is documented below.
	OnSuccess FgsAsyncInvokeConfigurationOnSuccessPtrInput
	// Specifies the region in which to configure the asynchronous invocation.\
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
}

func (FgsAsyncInvokeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fgsAsyncInvokeConfigurationArgs)(nil)).Elem()
}

type FgsAsyncInvokeConfigurationInput interface {
	pulumi.Input

	ToFgsAsyncInvokeConfigurationOutput() FgsAsyncInvokeConfigurationOutput
	ToFgsAsyncInvokeConfigurationOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationOutput
}

func (*FgsAsyncInvokeConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsAsyncInvokeConfiguration)(nil)).Elem()
}

func (i *FgsAsyncInvokeConfiguration) ToFgsAsyncInvokeConfigurationOutput() FgsAsyncInvokeConfigurationOutput {
	return i.ToFgsAsyncInvokeConfigurationOutputWithContext(context.Background())
}

func (i *FgsAsyncInvokeConfiguration) ToFgsAsyncInvokeConfigurationOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsAsyncInvokeConfigurationOutput)
}

// FgsAsyncInvokeConfigurationArrayInput is an input type that accepts FgsAsyncInvokeConfigurationArray and FgsAsyncInvokeConfigurationArrayOutput values.
// You can construct a concrete instance of `FgsAsyncInvokeConfigurationArrayInput` via:
//
//	FgsAsyncInvokeConfigurationArray{ FgsAsyncInvokeConfigurationArgs{...} }
type FgsAsyncInvokeConfigurationArrayInput interface {
	pulumi.Input

	ToFgsAsyncInvokeConfigurationArrayOutput() FgsAsyncInvokeConfigurationArrayOutput
	ToFgsAsyncInvokeConfigurationArrayOutputWithContext(context.Context) FgsAsyncInvokeConfigurationArrayOutput
}

type FgsAsyncInvokeConfigurationArray []FgsAsyncInvokeConfigurationInput

func (FgsAsyncInvokeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FgsAsyncInvokeConfiguration)(nil)).Elem()
}

func (i FgsAsyncInvokeConfigurationArray) ToFgsAsyncInvokeConfigurationArrayOutput() FgsAsyncInvokeConfigurationArrayOutput {
	return i.ToFgsAsyncInvokeConfigurationArrayOutputWithContext(context.Background())
}

func (i FgsAsyncInvokeConfigurationArray) ToFgsAsyncInvokeConfigurationArrayOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsAsyncInvokeConfigurationArrayOutput)
}

// FgsAsyncInvokeConfigurationMapInput is an input type that accepts FgsAsyncInvokeConfigurationMap and FgsAsyncInvokeConfigurationMapOutput values.
// You can construct a concrete instance of `FgsAsyncInvokeConfigurationMapInput` via:
//
//	FgsAsyncInvokeConfigurationMap{ "key": FgsAsyncInvokeConfigurationArgs{...} }
type FgsAsyncInvokeConfigurationMapInput interface {
	pulumi.Input

	ToFgsAsyncInvokeConfigurationMapOutput() FgsAsyncInvokeConfigurationMapOutput
	ToFgsAsyncInvokeConfigurationMapOutputWithContext(context.Context) FgsAsyncInvokeConfigurationMapOutput
}

type FgsAsyncInvokeConfigurationMap map[string]FgsAsyncInvokeConfigurationInput

func (FgsAsyncInvokeConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FgsAsyncInvokeConfiguration)(nil)).Elem()
}

func (i FgsAsyncInvokeConfigurationMap) ToFgsAsyncInvokeConfigurationMapOutput() FgsAsyncInvokeConfigurationMapOutput {
	return i.ToFgsAsyncInvokeConfigurationMapOutputWithContext(context.Background())
}

func (i FgsAsyncInvokeConfigurationMap) ToFgsAsyncInvokeConfigurationMapOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FgsAsyncInvokeConfigurationMapOutput)
}

type FgsAsyncInvokeConfigurationOutput struct{ *pulumi.OutputState }

func (FgsAsyncInvokeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FgsAsyncInvokeConfiguration)(nil)).Elem()
}

func (o FgsAsyncInvokeConfigurationOutput) ToFgsAsyncInvokeConfigurationOutput() FgsAsyncInvokeConfigurationOutput {
	return o
}

func (o FgsAsyncInvokeConfigurationOutput) ToFgsAsyncInvokeConfigurationOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationOutput {
	return o
}

// The creation time of the asynchronous invocation, in RFC3339 format.
func (o FgsAsyncInvokeConfigurationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies whether to enable asynchronous invocation status persistence.
//
// <a name="functiongraphDestinationConfig"></a>
// The `onSuccess` and the `onFailure` blocks support:
func (o FgsAsyncInvokeConfigurationOutput) EnableAsyncStatusLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.BoolPtrOutput { return v.EnableAsyncStatusLog }).(pulumi.BoolPtrOutput)
}

// Specifies the function URN to which the asynchronous invocation belongs.
// Changing this will create a new resource.
func (o FgsAsyncInvokeConfigurationOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.StringOutput { return v.FunctionUrn }).(pulumi.StringOutput)
}

// Specifies the maximum validity period of a message.\
// The valid value is range from `1` to `86,400`.
func (o FgsAsyncInvokeConfigurationOutput) MaxAsyncEventAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.IntOutput { return v.MaxAsyncEventAgeInSeconds }).(pulumi.IntOutput)
}

// Specifies the maximum number of retry attempts to be made if
// asynchronous invocation fails.
// The valid value is range from `0` to `3`.
func (o FgsAsyncInvokeConfigurationOutput) MaxAsyncRetryAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.IntOutput { return v.MaxAsyncRetryAttempts }).(pulumi.IntOutput)
}

// Specifies the target to be invoked when a function fails to be executed due to a
// system error or an internal error.
// The object structure is documented below.
func (o FgsAsyncInvokeConfigurationOutput) OnFailure() FgsAsyncInvokeConfigurationOnFailurePtrOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) FgsAsyncInvokeConfigurationOnFailurePtrOutput { return v.OnFailure }).(FgsAsyncInvokeConfigurationOnFailurePtrOutput)
}

// Specifies the target to be invoked when a function is successfully executed.\
// The object structure is documented below.
func (o FgsAsyncInvokeConfigurationOutput) OnSuccess() FgsAsyncInvokeConfigurationOnSuccessPtrOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) FgsAsyncInvokeConfigurationOnSuccessPtrOutput { return v.OnSuccess }).(FgsAsyncInvokeConfigurationOnSuccessPtrOutput)
}

// Specifies the region in which to configure the asynchronous invocation.\
// If omitted, the provider-level region will be used. Changing this will create a new resource.
func (o FgsAsyncInvokeConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The latest update time of the asynchronous invocation, in RFC3339 format.
func (o FgsAsyncInvokeConfigurationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FgsAsyncInvokeConfiguration) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type FgsAsyncInvokeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FgsAsyncInvokeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FgsAsyncInvokeConfiguration)(nil)).Elem()
}

func (o FgsAsyncInvokeConfigurationArrayOutput) ToFgsAsyncInvokeConfigurationArrayOutput() FgsAsyncInvokeConfigurationArrayOutput {
	return o
}

func (o FgsAsyncInvokeConfigurationArrayOutput) ToFgsAsyncInvokeConfigurationArrayOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationArrayOutput {
	return o
}

func (o FgsAsyncInvokeConfigurationArrayOutput) Index(i pulumi.IntInput) FgsAsyncInvokeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FgsAsyncInvokeConfiguration {
		return vs[0].([]*FgsAsyncInvokeConfiguration)[vs[1].(int)]
	}).(FgsAsyncInvokeConfigurationOutput)
}

type FgsAsyncInvokeConfigurationMapOutput struct{ *pulumi.OutputState }

func (FgsAsyncInvokeConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FgsAsyncInvokeConfiguration)(nil)).Elem()
}

func (o FgsAsyncInvokeConfigurationMapOutput) ToFgsAsyncInvokeConfigurationMapOutput() FgsAsyncInvokeConfigurationMapOutput {
	return o
}

func (o FgsAsyncInvokeConfigurationMapOutput) ToFgsAsyncInvokeConfigurationMapOutputWithContext(ctx context.Context) FgsAsyncInvokeConfigurationMapOutput {
	return o
}

func (o FgsAsyncInvokeConfigurationMapOutput) MapIndex(k pulumi.StringInput) FgsAsyncInvokeConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FgsAsyncInvokeConfiguration {
		return vs[0].(map[string]*FgsAsyncInvokeConfiguration)[vs[1].(string)]
	}).(FgsAsyncInvokeConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FgsAsyncInvokeConfigurationInput)(nil)).Elem(), &FgsAsyncInvokeConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsAsyncInvokeConfigurationArrayInput)(nil)).Elem(), FgsAsyncInvokeConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FgsAsyncInvokeConfigurationMapInput)(nil)).Elem(), FgsAsyncInvokeConfigurationMap{})
	pulumi.RegisterOutputType(FgsAsyncInvokeConfigurationOutput{})
	pulumi.RegisterOutputType(FgsAsyncInvokeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FgsAsyncInvokeConfigurationMapOutput{})
}
