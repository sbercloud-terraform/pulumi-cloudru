// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage a VPC Peering Connection resource.
 *
 * > **NOTE:** For cross-tenant (requester's tenant differs from the accepter's tenant) VPC Peering Connections, use
 * the `sbercloud.Vpc.PeeringConnection` resource to manage the requester's side of the connection and use
 * the `sbercloud.Vpc.PeeringConnectionAccepter` resource to manage the accepter's side of the connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const peering = new sbercloud.vpc.PeeringConnection("peering", {
 *    name: peerConnName,
 *    vpcId: vpcId,
 *    peerVpcId: accepterVpcId,
 * });
 * ```
 *
 * ## Notes
 *
 * If you create a VPC peering connection with another VPC of your own, the connection is created without the need for you
 * to accept the connection.
 *
 * ## Import
 *
 * VPC Peering resources can be imported using the `vpc peering id`, e.g.
 *
 * ```sh
 * $ pulumi import sbercloud:Vpc/peeringConnection:PeeringConnection test_connection 22b76469-08e3-4937-8c1d-7aad34892be1
 * ```
 */
export class PeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing PeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PeeringConnectionState, opts?: pulumi.CustomResourceOptions): PeeringConnection {
        return new PeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Vpc/peeringConnection:PeeringConnection';

    /**
     * Returns true if the given object is an instance of PeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PeeringConnection.__pulumiType;
    }

    declare public readonly description: pulumi.Output<string>;
    /**
     * Specifies the name of the VPC peering connection. The value can contain 1 to 64
     * characters.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specified the Tenant Id of the accepter tenant. Changing this creates
     * a new VPC peering connection.
     */
    declare public readonly peerTenantId: pulumi.Output<string>;
    /**
     * Specifies the VPC ID of the accepter tenant. Changing this creates a new
     * VPC peering connection.
     */
    declare public readonly peerVpcId: pulumi.Output<string>;
    /**
     * The region in which to create the VPC peering connection. If omitted, the
     * provider-level region will be used. Changing this creates a new VPC peering connection resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The VPC peering connection status. The value can be PENDING_ACCEPTANCE, REJECTED, EXPIRED, DELETED, or
     * ACTIVE.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Specifies the ID of a VPC involved in a VPC peering connection. Changing this
     * creates a new VPC peering connection.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a PeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PeeringConnectionArgs | PeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PeeringConnectionState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["peerTenantId"] = state?.peerTenantId;
            resourceInputs["peerVpcId"] = state?.peerVpcId;
            resourceInputs["region"] = state?.region;
            resourceInputs["status"] = state?.status;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as PeeringConnectionArgs | undefined;
            if (args?.peerVpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'peerVpcId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["peerTenantId"] = args?.peerTenantId;
            resourceInputs["peerVpcId"] = args?.peerVpcId;
            resourceInputs["region"] = args?.region;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PeeringConnection resources.
 */
export interface PeeringConnectionState {
    description?: pulumi.Input<string>;
    /**
     * Specifies the name of the VPC peering connection. The value can contain 1 to 64
     * characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specified the Tenant Id of the accepter tenant. Changing this creates
     * a new VPC peering connection.
     */
    peerTenantId?: pulumi.Input<string>;
    /**
     * Specifies the VPC ID of the accepter tenant. Changing this creates a new
     * VPC peering connection.
     */
    peerVpcId?: pulumi.Input<string>;
    /**
     * The region in which to create the VPC peering connection. If omitted, the
     * provider-level region will be used. Changing this creates a new VPC peering connection resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The VPC peering connection status. The value can be PENDING_ACCEPTANCE, REJECTED, EXPIRED, DELETED, or
     * ACTIVE.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the ID of a VPC involved in a VPC peering connection. Changing this
     * creates a new VPC peering connection.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PeeringConnection resource.
 */
export interface PeeringConnectionArgs {
    description?: pulumi.Input<string>;
    /**
     * Specifies the name of the VPC peering connection. The value can contain 1 to 64
     * characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specified the Tenant Id of the accepter tenant. Changing this creates
     * a new VPC peering connection.
     */
    peerTenantId?: pulumi.Input<string>;
    /**
     * Specifies the VPC ID of the accepter tenant. Changing this creates a new
     * VPC peering connection.
     */
    peerVpcId: pulumi.Input<string>;
    /**
     * The region in which to create the VPC peering connection. If omitted, the
     * provider-level region will be used. Changing this creates a new VPC peering connection resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of a VPC involved in a VPC peering connection. Changing this
     * creates a new VPC peering connection.
     */
    vpcId: pulumi.Input<string>;
}
