// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDmsRocketmqConsumerGroups(args: GetDmsRocketmqConsumerGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsRocketmqConsumerGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDmsRocketmqConsumerGroups:getDmsRocketmqConsumerGroups", {
        "broadcast": args.broadcast,
        "enabled": args.enabled,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "retryMaxTimes": args.retryMaxTimes,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqConsumerGroups.
 */
export interface GetDmsRocketmqConsumerGroupsArgs {
    broadcast?: boolean;
    enabled?: boolean;
    instanceId: string;
    name?: string;
    region?: string;
    retryMaxTimes?: number;
}

/**
 * A collection of values returned by getDmsRocketmqConsumerGroups.
 */
export interface GetDmsRocketmqConsumerGroupsResult {
    readonly broadcast?: boolean;
    readonly enabled?: boolean;
    readonly groups: outputs.GetDmsRocketmqConsumerGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly name?: string;
    readonly region: string;
    readonly retryMaxTimes?: number;
}
export function getDmsRocketmqConsumerGroupsOutput(args: GetDmsRocketmqConsumerGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDmsRocketmqConsumerGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDmsRocketmqConsumerGroups:getDmsRocketmqConsumerGroups", {
        "broadcast": args.broadcast,
        "enabled": args.enabled,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "retryMaxTimes": args.retryMaxTimes,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqConsumerGroups.
 */
export interface GetDmsRocketmqConsumerGroupsOutputArgs {
    broadcast?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    retryMaxTimes?: pulumi.Input<number>;
}
