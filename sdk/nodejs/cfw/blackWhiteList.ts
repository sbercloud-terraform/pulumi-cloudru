// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class BlackWhiteList extends pulumi.CustomResource {
    /**
     * Get an existing BlackWhiteList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlackWhiteListState, opts?: pulumi.CustomResourceOptions): BlackWhiteList {
        return new BlackWhiteList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/blackWhiteList:BlackWhiteList';

    /**
     * Returns true if the given object is an instance of BlackWhiteList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlackWhiteList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlackWhiteList.__pulumiType;
    }

    /**
     * Specifies the address.
     */
    declare public readonly address: pulumi.Output<string>;
    /**
     * Specifies the IP address type.
     */
    declare public readonly addressType: pulumi.Output<number>;
    /**
     * Specifies the description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the address direction.
     */
    declare public readonly direction: pulumi.Output<number>;
    /**
     * Specifies the list type.
     */
    declare public readonly listType: pulumi.Output<number>;
    /**
     * Specifies the protected object ID.
     */
    declare public readonly objectId: pulumi.Output<string>;
    /**
     * Specifies the destination port.
     */
    declare public readonly port: pulumi.Output<string>;
    /**
     * Specifies the protocol type.
     */
    declare public readonly protocol: pulumi.Output<number>;
    declare public readonly region: pulumi.Output<string>;

    /**
     * Create a BlackWhiteList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlackWhiteListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlackWhiteListArgs | BlackWhiteListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlackWhiteListState | undefined;
            resourceInputs["address"] = state?.address;
            resourceInputs["addressType"] = state?.addressType;
            resourceInputs["description"] = state?.description;
            resourceInputs["direction"] = state?.direction;
            resourceInputs["listType"] = state?.listType;
            resourceInputs["objectId"] = state?.objectId;
            resourceInputs["port"] = state?.port;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as BlackWhiteListArgs | undefined;
            if (args?.address === undefined && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if (args?.addressType === undefined && !opts.urn) {
                throw new Error("Missing required property 'addressType'");
            }
            if (args?.direction === undefined && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if (args?.listType === undefined && !opts.urn) {
                throw new Error("Missing required property 'listType'");
            }
            if (args?.objectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["address"] = args?.address;
            resourceInputs["addressType"] = args?.addressType;
            resourceInputs["description"] = args?.description;
            resourceInputs["direction"] = args?.direction;
            resourceInputs["listType"] = args?.listType;
            resourceInputs["objectId"] = args?.objectId;
            resourceInputs["port"] = args?.port;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BlackWhiteList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BlackWhiteList resources.
 */
export interface BlackWhiteListState {
    /**
     * Specifies the address.
     */
    address?: pulumi.Input<string>;
    /**
     * Specifies the IP address type.
     */
    addressType?: pulumi.Input<number>;
    /**
     * Specifies the description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the address direction.
     */
    direction?: pulumi.Input<number>;
    /**
     * Specifies the list type.
     */
    listType?: pulumi.Input<number>;
    /**
     * Specifies the protected object ID.
     */
    objectId?: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     */
    port?: pulumi.Input<string>;
    /**
     * Specifies the protocol type.
     */
    protocol?: pulumi.Input<number>;
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BlackWhiteList resource.
 */
export interface BlackWhiteListArgs {
    /**
     * Specifies the address.
     */
    address: pulumi.Input<string>;
    /**
     * Specifies the IP address type.
     */
    addressType: pulumi.Input<number>;
    /**
     * Specifies the description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the address direction.
     */
    direction: pulumi.Input<number>;
    /**
     * Specifies the list type.
     */
    listType: pulumi.Input<number>;
    /**
     * Specifies the protected object ID.
     */
    objectId: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     */
    port?: pulumi.Input<string>;
    /**
     * Specifies the protocol type.
     */
    protocol: pulumi.Input<number>;
    region?: pulumi.Input<string>;
}
