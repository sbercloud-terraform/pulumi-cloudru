// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func LookupPeeringConnection(ctx *pulumi.Context, args *LookupPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupPeeringConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPeeringConnectionResult
	err := ctx.Invoke("cloudru:Vpc/getPeeringConnection:getPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeeringConnection.
type LookupPeeringConnectionArgs struct {
	Id           *string `pulumi:"id"`
	Name         *string `pulumi:"name"`
	PeerTenantId *string `pulumi:"peerTenantId"`
	PeerVpcId    *string `pulumi:"peerVpcId"`
	Region       *string `pulumi:"region"`
	Status       *string `pulumi:"status"`
	VpcId        *string `pulumi:"vpcId"`
}

// A collection of values returned by getPeeringConnection.
type LookupPeeringConnectionResult struct {
	Description  string `pulumi:"description"`
	Id           string `pulumi:"id"`
	Name         string `pulumi:"name"`
	PeerTenantId string `pulumi:"peerTenantId"`
	PeerVpcId    string `pulumi:"peerVpcId"`
	Region       string `pulumi:"region"`
	Status       string `pulumi:"status"`
	VpcId        string `pulumi:"vpcId"`
}

func LookupPeeringConnectionOutput(ctx *pulumi.Context, args LookupPeeringConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupPeeringConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPeeringConnectionResultOutput, error) {
			args := v.(LookupPeeringConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Vpc/getPeeringConnection:getPeeringConnection", args, LookupPeeringConnectionResultOutput{}, options).(LookupPeeringConnectionResultOutput), nil
		}).(LookupPeeringConnectionResultOutput)
}

// A collection of arguments for invoking getPeeringConnection.
type LookupPeeringConnectionOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	PeerTenantId pulumi.StringPtrInput `pulumi:"peerTenantId"`
	PeerVpcId    pulumi.StringPtrInput `pulumi:"peerVpcId"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	Status       pulumi.StringPtrInput `pulumi:"status"`
	VpcId        pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (LookupPeeringConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getPeeringConnection.
type LookupPeeringConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupPeeringConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPeeringConnectionResult)(nil)).Elem()
}

func (o LookupPeeringConnectionResultOutput) ToLookupPeeringConnectionResultOutput() LookupPeeringConnectionResultOutput {
	return o
}

func (o LookupPeeringConnectionResultOutput) ToLookupPeeringConnectionResultOutputWithContext(ctx context.Context) LookupPeeringConnectionResultOutput {
	return o
}

func (o LookupPeeringConnectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) PeerTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.PeerTenantId }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) PeerVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.PeerVpcId }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupPeeringConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPeeringConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPeeringConnectionResultOutput{})
}
