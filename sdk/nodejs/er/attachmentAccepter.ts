// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this resource to accept or reject the shared attachment within SberCloud.
 *
 * > This resource is only a one-time action resource for operating the attachment. Deleting this resource
 *    will not clear the corresponding request record, but will only remove the resource information from the tfstate file.
 *
 * Before using enterprise router, define custom endpoint as shown below:
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const attachmentId = config.requireObject<any>("attachmentId");
 * const test = new sbercloud.er.AttachmentAccepter("test", {
 *     instanceId: instanceId,
 *     attachmentId: attachmentId,
 *     action: "accept",
 * });
 * ```
 */
export class AttachmentAccepter extends pulumi.CustomResource {
    /**
     * Get an existing AttachmentAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttachmentAccepterState, opts?: pulumi.CustomResourceOptions): AttachmentAccepter {
        return new AttachmentAccepter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Er/attachmentAccepter:AttachmentAccepter';

    /**
     * Returns true if the given object is an instance of AttachmentAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AttachmentAccepter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AttachmentAccepter.__pulumiType;
    }

    /**
     * Specifies the action type.  
     * The valid values are as follows:
     * + **accept**
     * + **reject**
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Specifies the ID of the attachment to be accept or reject.
     */
    public readonly attachmentId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the shared ER instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a AttachmentAccepter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttachmentAccepterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AttachmentAccepterArgs | AttachmentAccepterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AttachmentAccepterState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["attachmentId"] = state ? state.attachmentId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as AttachmentAccepterArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.attachmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'attachmentId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["attachmentId"] = args ? args.attachmentId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AttachmentAccepter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AttachmentAccepter resources.
 */
export interface AttachmentAccepterState {
    /**
     * Specifies the action type.  
     * The valid values are as follows:
     * + **accept**
     * + **reject**
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies the ID of the attachment to be accept or reject.
     */
    attachmentId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the shared ER instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AttachmentAccepter resource.
 */
export interface AttachmentAccepterArgs {
    /**
     * Specifies the action type.  
     * The valid values are as follows:
     * + **accept**
     * + **reject**
     */
    action: pulumi.Input<string>;
    /**
     * Specifies the ID of the attachment to be accept or reject.
     */
    attachmentId: pulumi.Input<string>;
    /**
     * Specifies the ID of the shared ER instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}
