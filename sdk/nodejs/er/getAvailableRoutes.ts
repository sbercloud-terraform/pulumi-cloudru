// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getAvailableRoutes(args: GetAvailableRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetAvailableRoutesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Er/getAvailableRoutes:getAvailableRoutes", {
        "destination": args.destination,
        "region": args.region,
        "resourceType": args.resourceType,
        "routeTableId": args.routeTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAvailableRoutes.
 */
export interface GetAvailableRoutesArgs {
    destination?: string;
    region?: string;
    resourceType?: string;
    routeTableId: string;
}

/**
 * A collection of values returned by getAvailableRoutes.
 */
export interface GetAvailableRoutesResult {
    readonly destination?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly resourceType?: string;
    readonly routeTableId: string;
    readonly routes: outputs.Er.GetAvailableRoutesRoute[];
}
export function getAvailableRoutesOutput(args: GetAvailableRoutesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAvailableRoutesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Er/getAvailableRoutes:getAvailableRoutes", {
        "destination": args.destination,
        "region": args.region,
        "resourceType": args.resourceType,
        "routeTableId": args.routeTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAvailableRoutes.
 */
export interface GetAvailableRoutesOutputArgs {
    destination?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    routeTableId: pulumi.Input<string>;
}
