// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getClusters(args?: GetClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetClustersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Cce/getClusters:getClusters", {
        "clusterId": args.clusterId,
        "clusterType": args.clusterType,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusters.
 */
export interface GetClustersArgs {
    clusterId?: string;
    clusterType?: string;
    enterpriseProjectId?: string;
    name?: string;
    region?: string;
    status?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getClusters.
 */
export interface GetClustersResult {
    readonly clusterId?: string;
    readonly clusterType?: string;
    readonly clusters: outputs.Cce.GetClustersCluster[];
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly name?: string;
    readonly region: string;
    readonly status?: string;
    readonly vpcId?: string;
}
export function getClustersOutput(args?: GetClustersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClustersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Cce/getClusters:getClusters", {
        "clusterId": args.clusterId,
        "clusterType": args.clusterType,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusters.
 */
export interface GetClustersOutputArgs {
    clusterId?: pulumi.Input<string>;
    clusterType?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
