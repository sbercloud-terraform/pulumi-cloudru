// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type Node struct {
	pulumi.CustomResourceState

	// schema: Internal
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrOutput `pulumi:"autoPay"`
	AutoRenew           pulumi.StringPtrOutput `pulumi:"autoRenew"`
	AvailabilityZone    pulumi.StringOutput    `pulumi:"availabilityZone"`
	BandwidthChargeMode pulumi.StringPtrOutput `pulumi:"bandwidthChargeMode"`
	BandwidthSize       pulumi.IntPtrOutput    `pulumi:"bandwidthSize"`
	// Deprecated: use chargingMode instead
	BillingMode     pulumi.IntOutput          `pulumi:"billingMode"`
	ChargingMode    pulumi.StringOutput       `pulumi:"chargingMode"`
	ClusterId       pulumi.StringOutput       `pulumi:"clusterId"`
	DataVolumes     NodeDataVolumeArrayOutput `pulumi:"dataVolumes"`
	DedicatedHostId pulumi.StringPtrOutput    `pulumi:"dedicatedHostId"`
	EcsGroupId      pulumi.StringPtrOutput    `pulumi:"ecsGroupId"`
	// schema: Deprecated
	EcsPerformanceType pulumi.StringPtrOutput `pulumi:"ecsPerformanceType"`
	EipId              pulumi.StringPtrOutput `pulumi:"eipId"`
	// Deprecated: use eipId instead
	EipIds              pulumi.StringArrayOutput `pulumi:"eipIds"`
	EnableForceNew      pulumi.StringPtrOutput   `pulumi:"enableForceNew"`
	EnterpriseProjectId pulumi.StringOutput      `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	ExtendParam pulumi.StringMapOutput `pulumi:"extendParam"`
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode pulumi.IntPtrOutput         `pulumi:"extendParamChargingMode"`
	ExtendParams            NodeExtendParamsPtrOutput   `pulumi:"extendParams"`
	ExtensionNics           NodeExtensionNicArrayOutput `pulumi:"extensionNics"`
	FixedIp                 pulumi.StringPtrOutput      `pulumi:"fixedIp"`
	FlavorId                pulumi.StringOutput         `pulumi:"flavorId"`
	HostnameConfig          NodeHostnameConfigOutput    `pulumi:"hostnameConfig"`
	InitializedConditions   pulumi.StringArrayOutput    `pulumi:"initializedConditions"`
	Iptype                  pulumi.StringPtrOutput      `pulumi:"iptype"`
	// schema: Internal
	KeepEcs pulumi.BoolPtrOutput   `pulumi:"keepEcs"`
	KeyPair pulumi.StringPtrOutput `pulumi:"keyPair"`
	Labels  pulumi.StringMapOutput `pulumi:"labels"`
	// schema: Deprecated
	MaxPods pulumi.IntPtrOutput `pulumi:"maxPods"`
	Name    pulumi.StringOutput `pulumi:"name"`
	// Deprecated: will be removed after v1.26.0
	OrderId    pulumi.StringPtrOutput `pulumi:"orderId"`
	Os         pulumi.StringOutput    `pulumi:"os"`
	Partition  pulumi.StringPtrOutput `pulumi:"partition"`
	Password   pulumi.StringPtrOutput `pulumi:"password"`
	Period     pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// schema: Deprecated
	Postinstall pulumi.StringPtrOutput `pulumi:"postinstall"`
	// schema: Deprecated
	Preinstall pulumi.StringPtrOutput `pulumi:"preinstall"`
	PrivateIp  pulumi.StringOutput    `pulumi:"privateIp"`
	PrivateKey pulumi.StringPtrOutput `pulumi:"privateKey"`
	// schema: Deprecated
	ProductId pulumi.StringPtrOutput `pulumi:"productId"`
	PublicIp  pulumi.StringOutput    `pulumi:"publicIp"`
	// schema: Deprecated
	PublicKey  pulumi.StringPtrOutput `pulumi:"publicKey"`
	Region     pulumi.StringOutput    `pulumi:"region"`
	RootVolume NodeRootVolumeOutput   `pulumi:"rootVolume"`
	Runtime    pulumi.StringOutput    `pulumi:"runtime"`
	ServerId   pulumi.StringOutput    `pulumi:"serverId"`
	Sharetype  pulumi.StringPtrOutput `pulumi:"sharetype"`
	Status     pulumi.StringOutput    `pulumi:"status"`
	Storage    NodeStoragePtrOutput   `pulumi:"storage"`
	SubnetId   pulumi.StringOutput    `pulumi:"subnetId"`
	Tags       pulumi.StringMapOutput `pulumi:"tags"`
	Taints     NodeTaintArrayOutput   `pulumi:"taints"`
}

// NewNode registers a new resource with the given unique name, arguments, and options.
func NewNode(ctx *pulumi.Context,
	name string, args *NodeArgs, opts ...pulumi.ResourceOption) (*Node, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.RootVolume == nil {
		return nil, errors.New("invalid value for required argument 'RootVolume'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"privateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Node
	err := ctx.RegisterResource("cloudru:Cce/node:Node", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNode gets an existing Node resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeState, opts ...pulumi.ResourceOption) (*Node, error) {
	var resource Node
	err := ctx.ReadResource("cloudru:Cce/node:Node", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Node resources.
type nodeState struct {
	// schema: Internal
	Annotations map[string]string `pulumi:"annotations"`
	// Deprecated: Deprecated
	AutoPay             *string `pulumi:"autoPay"`
	AutoRenew           *string `pulumi:"autoRenew"`
	AvailabilityZone    *string `pulumi:"availabilityZone"`
	BandwidthChargeMode *string `pulumi:"bandwidthChargeMode"`
	BandwidthSize       *int    `pulumi:"bandwidthSize"`
	// Deprecated: use chargingMode instead
	BillingMode     *int             `pulumi:"billingMode"`
	ChargingMode    *string          `pulumi:"chargingMode"`
	ClusterId       *string          `pulumi:"clusterId"`
	DataVolumes     []NodeDataVolume `pulumi:"dataVolumes"`
	DedicatedHostId *string          `pulumi:"dedicatedHostId"`
	EcsGroupId      *string          `pulumi:"ecsGroupId"`
	// schema: Deprecated
	EcsPerformanceType *string `pulumi:"ecsPerformanceType"`
	EipId              *string `pulumi:"eipId"`
	// Deprecated: use eipId instead
	EipIds              []string `pulumi:"eipIds"`
	EnableForceNew      *string  `pulumi:"enableForceNew"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	ExtendParam map[string]string `pulumi:"extendParam"`
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode *int                `pulumi:"extendParamChargingMode"`
	ExtendParams            *NodeExtendParams   `pulumi:"extendParams"`
	ExtensionNics           []NodeExtensionNic  `pulumi:"extensionNics"`
	FixedIp                 *string             `pulumi:"fixedIp"`
	FlavorId                *string             `pulumi:"flavorId"`
	HostnameConfig          *NodeHostnameConfig `pulumi:"hostnameConfig"`
	InitializedConditions   []string            `pulumi:"initializedConditions"`
	Iptype                  *string             `pulumi:"iptype"`
	// schema: Internal
	KeepEcs *bool             `pulumi:"keepEcs"`
	KeyPair *string           `pulumi:"keyPair"`
	Labels  map[string]string `pulumi:"labels"`
	// schema: Deprecated
	MaxPods *int    `pulumi:"maxPods"`
	Name    *string `pulumi:"name"`
	// Deprecated: will be removed after v1.26.0
	OrderId    *string `pulumi:"orderId"`
	Os         *string `pulumi:"os"`
	Partition  *string `pulumi:"partition"`
	Password   *string `pulumi:"password"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// schema: Deprecated
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated
	Preinstall *string `pulumi:"preinstall"`
	PrivateIp  *string `pulumi:"privateIp"`
	PrivateKey *string `pulumi:"privateKey"`
	// schema: Deprecated
	ProductId *string `pulumi:"productId"`
	PublicIp  *string `pulumi:"publicIp"`
	// schema: Deprecated
	PublicKey  *string           `pulumi:"publicKey"`
	Region     *string           `pulumi:"region"`
	RootVolume *NodeRootVolume   `pulumi:"rootVolume"`
	Runtime    *string           `pulumi:"runtime"`
	ServerId   *string           `pulumi:"serverId"`
	Sharetype  *string           `pulumi:"sharetype"`
	Status     *string           `pulumi:"status"`
	Storage    *NodeStorage      `pulumi:"storage"`
	SubnetId   *string           `pulumi:"subnetId"`
	Tags       map[string]string `pulumi:"tags"`
	Taints     []NodeTaint       `pulumi:"taints"`
}

type NodeState struct {
	// schema: Internal
	Annotations pulumi.StringMapInput
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrInput
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringPtrInput
	BandwidthChargeMode pulumi.StringPtrInput
	BandwidthSize       pulumi.IntPtrInput
	// Deprecated: use chargingMode instead
	BillingMode     pulumi.IntPtrInput
	ChargingMode    pulumi.StringPtrInput
	ClusterId       pulumi.StringPtrInput
	DataVolumes     NodeDataVolumeArrayInput
	DedicatedHostId pulumi.StringPtrInput
	EcsGroupId      pulumi.StringPtrInput
	// schema: Deprecated
	EcsPerformanceType pulumi.StringPtrInput
	EipId              pulumi.StringPtrInput
	// Deprecated: use eipId instead
	EipIds              pulumi.StringArrayInput
	EnableForceNew      pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated
	ExtendParam pulumi.StringMapInput
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode pulumi.IntPtrInput
	ExtendParams            NodeExtendParamsPtrInput
	ExtensionNics           NodeExtensionNicArrayInput
	FixedIp                 pulumi.StringPtrInput
	FlavorId                pulumi.StringPtrInput
	HostnameConfig          NodeHostnameConfigPtrInput
	InitializedConditions   pulumi.StringArrayInput
	Iptype                  pulumi.StringPtrInput
	// schema: Internal
	KeepEcs pulumi.BoolPtrInput
	KeyPair pulumi.StringPtrInput
	Labels  pulumi.StringMapInput
	// schema: Deprecated
	MaxPods pulumi.IntPtrInput
	Name    pulumi.StringPtrInput
	// Deprecated: will be removed after v1.26.0
	OrderId    pulumi.StringPtrInput
	Os         pulumi.StringPtrInput
	Partition  pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// schema: Deprecated
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated
	Preinstall pulumi.StringPtrInput
	PrivateIp  pulumi.StringPtrInput
	PrivateKey pulumi.StringPtrInput
	// schema: Deprecated
	ProductId pulumi.StringPtrInput
	PublicIp  pulumi.StringPtrInput
	// schema: Deprecated
	PublicKey  pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
	RootVolume NodeRootVolumePtrInput
	Runtime    pulumi.StringPtrInput
	ServerId   pulumi.StringPtrInput
	Sharetype  pulumi.StringPtrInput
	Status     pulumi.StringPtrInput
	Storage    NodeStoragePtrInput
	SubnetId   pulumi.StringPtrInput
	Tags       pulumi.StringMapInput
	Taints     NodeTaintArrayInput
}

func (NodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeState)(nil)).Elem()
}

type nodeArgs struct {
	// schema: Internal
	Annotations map[string]string `pulumi:"annotations"`
	// Deprecated: Deprecated
	AutoPay             *string `pulumi:"autoPay"`
	AutoRenew           *string `pulumi:"autoRenew"`
	AvailabilityZone    string  `pulumi:"availabilityZone"`
	BandwidthChargeMode *string `pulumi:"bandwidthChargeMode"`
	BandwidthSize       *int    `pulumi:"bandwidthSize"`
	// Deprecated: use chargingMode instead
	BillingMode     *int             `pulumi:"billingMode"`
	ChargingMode    *string          `pulumi:"chargingMode"`
	ClusterId       string           `pulumi:"clusterId"`
	DataVolumes     []NodeDataVolume `pulumi:"dataVolumes"`
	DedicatedHostId *string          `pulumi:"dedicatedHostId"`
	EcsGroupId      *string          `pulumi:"ecsGroupId"`
	// schema: Deprecated
	EcsPerformanceType *string `pulumi:"ecsPerformanceType"`
	EipId              *string `pulumi:"eipId"`
	// Deprecated: use eipId instead
	EipIds              []string `pulumi:"eipIds"`
	EnableForceNew      *string  `pulumi:"enableForceNew"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	// schema: Deprecated
	ExtendParam map[string]string `pulumi:"extendParam"`
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode *int                `pulumi:"extendParamChargingMode"`
	ExtendParams            *NodeExtendParams   `pulumi:"extendParams"`
	ExtensionNics           []NodeExtensionNic  `pulumi:"extensionNics"`
	FixedIp                 *string             `pulumi:"fixedIp"`
	FlavorId                string              `pulumi:"flavorId"`
	HostnameConfig          *NodeHostnameConfig `pulumi:"hostnameConfig"`
	InitializedConditions   []string            `pulumi:"initializedConditions"`
	Iptype                  *string             `pulumi:"iptype"`
	// schema: Internal
	KeepEcs *bool             `pulumi:"keepEcs"`
	KeyPair *string           `pulumi:"keyPair"`
	Labels  map[string]string `pulumi:"labels"`
	// schema: Deprecated
	MaxPods *int    `pulumi:"maxPods"`
	Name    *string `pulumi:"name"`
	// Deprecated: will be removed after v1.26.0
	OrderId    *string `pulumi:"orderId"`
	Os         *string `pulumi:"os"`
	Partition  *string `pulumi:"partition"`
	Password   *string `pulumi:"password"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// schema: Deprecated
	Postinstall *string `pulumi:"postinstall"`
	// schema: Deprecated
	Preinstall *string `pulumi:"preinstall"`
	PrivateKey *string `pulumi:"privateKey"`
	// schema: Deprecated
	ProductId *string `pulumi:"productId"`
	// schema: Deprecated
	PublicKey  *string           `pulumi:"publicKey"`
	Region     *string           `pulumi:"region"`
	RootVolume NodeRootVolume    `pulumi:"rootVolume"`
	Runtime    *string           `pulumi:"runtime"`
	Sharetype  *string           `pulumi:"sharetype"`
	Storage    *NodeStorage      `pulumi:"storage"`
	SubnetId   *string           `pulumi:"subnetId"`
	Tags       map[string]string `pulumi:"tags"`
	Taints     []NodeTaint       `pulumi:"taints"`
}

// The set of arguments for constructing a Node resource.
type NodeArgs struct {
	// schema: Internal
	Annotations pulumi.StringMapInput
	// Deprecated: Deprecated
	AutoPay             pulumi.StringPtrInput
	AutoRenew           pulumi.StringPtrInput
	AvailabilityZone    pulumi.StringInput
	BandwidthChargeMode pulumi.StringPtrInput
	BandwidthSize       pulumi.IntPtrInput
	// Deprecated: use chargingMode instead
	BillingMode     pulumi.IntPtrInput
	ChargingMode    pulumi.StringPtrInput
	ClusterId       pulumi.StringInput
	DataVolumes     NodeDataVolumeArrayInput
	DedicatedHostId pulumi.StringPtrInput
	EcsGroupId      pulumi.StringPtrInput
	// schema: Deprecated
	EcsPerformanceType pulumi.StringPtrInput
	EipId              pulumi.StringPtrInput
	// Deprecated: use eipId instead
	EipIds              pulumi.StringArrayInput
	EnableForceNew      pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	// schema: Deprecated
	ExtendParam pulumi.StringMapInput
	// Deprecated: use chargingMode instead
	ExtendParamChargingMode pulumi.IntPtrInput
	ExtendParams            NodeExtendParamsPtrInput
	ExtensionNics           NodeExtensionNicArrayInput
	FixedIp                 pulumi.StringPtrInput
	FlavorId                pulumi.StringInput
	HostnameConfig          NodeHostnameConfigPtrInput
	InitializedConditions   pulumi.StringArrayInput
	Iptype                  pulumi.StringPtrInput
	// schema: Internal
	KeepEcs pulumi.BoolPtrInput
	KeyPair pulumi.StringPtrInput
	Labels  pulumi.StringMapInput
	// schema: Deprecated
	MaxPods pulumi.IntPtrInput
	Name    pulumi.StringPtrInput
	// Deprecated: will be removed after v1.26.0
	OrderId    pulumi.StringPtrInput
	Os         pulumi.StringPtrInput
	Partition  pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// schema: Deprecated
	Postinstall pulumi.StringPtrInput
	// schema: Deprecated
	Preinstall pulumi.StringPtrInput
	PrivateKey pulumi.StringPtrInput
	// schema: Deprecated
	ProductId pulumi.StringPtrInput
	// schema: Deprecated
	PublicKey  pulumi.StringPtrInput
	Region     pulumi.StringPtrInput
	RootVolume NodeRootVolumeInput
	Runtime    pulumi.StringPtrInput
	Sharetype  pulumi.StringPtrInput
	Storage    NodeStoragePtrInput
	SubnetId   pulumi.StringPtrInput
	Tags       pulumi.StringMapInput
	Taints     NodeTaintArrayInput
}

func (NodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeArgs)(nil)).Elem()
}

type NodeInput interface {
	pulumi.Input

	ToNodeOutput() NodeOutput
	ToNodeOutputWithContext(ctx context.Context) NodeOutput
}

func (*Node) ElementType() reflect.Type {
	return reflect.TypeOf((**Node)(nil)).Elem()
}

func (i *Node) ToNodeOutput() NodeOutput {
	return i.ToNodeOutputWithContext(context.Background())
}

func (i *Node) ToNodeOutputWithContext(ctx context.Context) NodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeOutput)
}

// NodeArrayInput is an input type that accepts NodeArray and NodeArrayOutput values.
// You can construct a concrete instance of `NodeArrayInput` via:
//
//	NodeArray{ NodeArgs{...} }
type NodeArrayInput interface {
	pulumi.Input

	ToNodeArrayOutput() NodeArrayOutput
	ToNodeArrayOutputWithContext(context.Context) NodeArrayOutput
}

type NodeArray []NodeInput

func (NodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Node)(nil)).Elem()
}

func (i NodeArray) ToNodeArrayOutput() NodeArrayOutput {
	return i.ToNodeArrayOutputWithContext(context.Background())
}

func (i NodeArray) ToNodeArrayOutputWithContext(ctx context.Context) NodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeArrayOutput)
}

// NodeMapInput is an input type that accepts NodeMap and NodeMapOutput values.
// You can construct a concrete instance of `NodeMapInput` via:
//
//	NodeMap{ "key": NodeArgs{...} }
type NodeMapInput interface {
	pulumi.Input

	ToNodeMapOutput() NodeMapOutput
	ToNodeMapOutputWithContext(context.Context) NodeMapOutput
}

type NodeMap map[string]NodeInput

func (NodeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Node)(nil)).Elem()
}

func (i NodeMap) ToNodeMapOutput() NodeMapOutput {
	return i.ToNodeMapOutputWithContext(context.Background())
}

func (i NodeMap) ToNodeMapOutputWithContext(ctx context.Context) NodeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeMapOutput)
}

type NodeOutput struct{ *pulumi.OutputState }

func (NodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Node)(nil)).Elem()
}

func (o NodeOutput) ToNodeOutput() NodeOutput {
	return o
}

func (o NodeOutput) ToNodeOutputWithContext(ctx context.Context) NodeOutput {
	return o
}

// schema: Internal
func (o NodeOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Node) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Deprecated: Deprecated
func (o NodeOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o NodeOutput) BandwidthChargeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.BandwidthChargeMode }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) BandwidthSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.IntPtrOutput { return v.BandwidthSize }).(pulumi.IntPtrOutput)
}

// Deprecated: use chargingMode instead
func (o NodeOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v *Node) pulumi.IntOutput { return v.BillingMode }).(pulumi.IntOutput)
}

func (o NodeOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o NodeOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o NodeOutput) DataVolumes() NodeDataVolumeArrayOutput {
	return o.ApplyT(func(v *Node) NodeDataVolumeArrayOutput { return v.DataVolumes }).(NodeDataVolumeArrayOutput)
}

func (o NodeOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.DedicatedHostId }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.EcsGroupId }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o NodeOutput) EcsPerformanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.EcsPerformanceType }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.EipId }).(pulumi.StringPtrOutput)
}

// Deprecated: use eipId instead
func (o NodeOutput) EipIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Node) pulumi.StringArrayOutput { return v.EipIds }).(pulumi.StringArrayOutput)
}

func (o NodeOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o NodeOutput) ExtendParam() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Node) pulumi.StringMapOutput { return v.ExtendParam }).(pulumi.StringMapOutput)
}

// Deprecated: use chargingMode instead
func (o NodeOutput) ExtendParamChargingMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.IntPtrOutput { return v.ExtendParamChargingMode }).(pulumi.IntPtrOutput)
}

func (o NodeOutput) ExtendParams() NodeExtendParamsPtrOutput {
	return o.ApplyT(func(v *Node) NodeExtendParamsPtrOutput { return v.ExtendParams }).(NodeExtendParamsPtrOutput)
}

func (o NodeOutput) ExtensionNics() NodeExtensionNicArrayOutput {
	return o.ApplyT(func(v *Node) NodeExtensionNicArrayOutput { return v.ExtensionNics }).(NodeExtensionNicArrayOutput)
}

func (o NodeOutput) FixedIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.FixedIp }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

func (o NodeOutput) HostnameConfig() NodeHostnameConfigOutput {
	return o.ApplyT(func(v *Node) NodeHostnameConfigOutput { return v.HostnameConfig }).(NodeHostnameConfigOutput)
}

func (o NodeOutput) InitializedConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Node) pulumi.StringArrayOutput { return v.InitializedConditions }).(pulumi.StringArrayOutput)
}

func (o NodeOutput) Iptype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.Iptype }).(pulumi.StringPtrOutput)
}

// schema: Internal
func (o NodeOutput) KeepEcs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.BoolPtrOutput { return v.KeepEcs }).(pulumi.BoolPtrOutput)
}

func (o NodeOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.KeyPair }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Node) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// schema: Deprecated
func (o NodeOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.IntPtrOutput { return v.MaxPods }).(pulumi.IntPtrOutput)
}

func (o NodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: will be removed after v1.26.0
func (o NodeOutput) OrderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.OrderId }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

func (o NodeOutput) Partition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.Partition }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o NodeOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o NodeOutput) Postinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.Postinstall }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o NodeOutput) Preinstall() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.Preinstall }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o NodeOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// schema: Deprecated
func (o NodeOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// schema: Deprecated
func (o NodeOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o NodeOutput) RootVolume() NodeRootVolumeOutput {
	return o.ApplyT(func(v *Node) NodeRootVolumeOutput { return v.RootVolume }).(NodeRootVolumeOutput)
}

func (o NodeOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

func (o NodeOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.ServerId }).(pulumi.StringOutput)
}

func (o NodeOutput) Sharetype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Node) pulumi.StringPtrOutput { return v.Sharetype }).(pulumi.StringPtrOutput)
}

func (o NodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o NodeOutput) Storage() NodeStoragePtrOutput {
	return o.ApplyT(func(v *Node) NodeStoragePtrOutput { return v.Storage }).(NodeStoragePtrOutput)
}

func (o NodeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Node) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o NodeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Node) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NodeOutput) Taints() NodeTaintArrayOutput {
	return o.ApplyT(func(v *Node) NodeTaintArrayOutput { return v.Taints }).(NodeTaintArrayOutput)
}

type NodeArrayOutput struct{ *pulumi.OutputState }

func (NodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Node)(nil)).Elem()
}

func (o NodeArrayOutput) ToNodeArrayOutput() NodeArrayOutput {
	return o
}

func (o NodeArrayOutput) ToNodeArrayOutputWithContext(ctx context.Context) NodeArrayOutput {
	return o
}

func (o NodeArrayOutput) Index(i pulumi.IntInput) NodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Node {
		return vs[0].([]*Node)[vs[1].(int)]
	}).(NodeOutput)
}

type NodeMapOutput struct{ *pulumi.OutputState }

func (NodeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Node)(nil)).Elem()
}

func (o NodeMapOutput) ToNodeMapOutput() NodeMapOutput {
	return o
}

func (o NodeMapOutput) ToNodeMapOutputWithContext(ctx context.Context) NodeMapOutput {
	return o
}

func (o NodeMapOutput) MapIndex(k pulumi.StringInput) NodeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Node {
		return vs[0].(map[string]*Node)[vs[1].(string)]
	}).(NodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodeInput)(nil)).Elem(), &Node{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeArrayInput)(nil)).Elem(), NodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeMapInput)(nil)).Elem(), NodeMap{})
	pulumi.RegisterOutputType(NodeOutput{})
	pulumi.RegisterOutputType(NodeArrayOutput{})
	pulumi.RegisterOutputType(NodeMapOutput{})
}
