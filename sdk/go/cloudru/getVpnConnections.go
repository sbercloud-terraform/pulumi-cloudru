// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetVpnConnections(ctx *pulumi.Context, args *GetVpnConnectionsArgs, opts ...pulumi.InvokeOption) (*GetVpnConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpnConnectionsResult
	err := ctx.Invoke("sbercloud:index/getVpnConnections:getVpnConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnConnections.
type GetVpnConnectionsArgs struct {
	ConnectionId *string `pulumi:"connectionId"`
	GatewayId    *string `pulumi:"gatewayId"`
	GatewayIp    *string `pulumi:"gatewayIp"`
	Name         *string `pulumi:"name"`
	Region       *string `pulumi:"region"`
	Status       *string `pulumi:"status"`
	VpnType      *string `pulumi:"vpnType"`
}

// A collection of values returned by getVpnConnections.
type GetVpnConnectionsResult struct {
	ConnectionId *string                       `pulumi:"connectionId"`
	Connections  []GetVpnConnectionsConnection `pulumi:"connections"`
	GatewayId    *string                       `pulumi:"gatewayId"`
	GatewayIp    *string                       `pulumi:"gatewayIp"`
	// The provider-assigned unique ID for this managed resource.
	Id      string  `pulumi:"id"`
	Name    *string `pulumi:"name"`
	Region  string  `pulumi:"region"`
	Status  *string `pulumi:"status"`
	VpnType *string `pulumi:"vpnType"`
}

func GetVpnConnectionsOutput(ctx *pulumi.Context, args GetVpnConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetVpnConnectionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVpnConnectionsResultOutput, error) {
			args := v.(GetVpnConnectionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getVpnConnections:getVpnConnections", args, GetVpnConnectionsResultOutput{}, options).(GetVpnConnectionsResultOutput), nil
		}).(GetVpnConnectionsResultOutput)
}

// A collection of arguments for invoking getVpnConnections.
type GetVpnConnectionsOutputArgs struct {
	ConnectionId pulumi.StringPtrInput `pulumi:"connectionId"`
	GatewayId    pulumi.StringPtrInput `pulumi:"gatewayId"`
	GatewayIp    pulumi.StringPtrInput `pulumi:"gatewayIp"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
	Status       pulumi.StringPtrInput `pulumi:"status"`
	VpnType      pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (GetVpnConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getVpnConnections.
type GetVpnConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetVpnConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnConnectionsResult)(nil)).Elem()
}

func (o GetVpnConnectionsResultOutput) ToGetVpnConnectionsResultOutput() GetVpnConnectionsResultOutput {
	return o
}

func (o GetVpnConnectionsResultOutput) ToGetVpnConnectionsResultOutputWithContext(ctx context.Context) GetVpnConnectionsResultOutput {
	return o
}

func (o GetVpnConnectionsResultOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

func (o GetVpnConnectionsResultOutput) Connections() GetVpnConnectionsConnectionArrayOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) []GetVpnConnectionsConnection { return v.Connections }).(GetVpnConnectionsConnectionArrayOutput)
}

func (o GetVpnConnectionsResultOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

func (o GetVpnConnectionsResultOutput) GatewayIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) *string { return v.GatewayIp }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpnConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetVpnConnectionsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetVpnConnectionsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetVpnConnectionsResultOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnConnectionsResult) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpnConnectionsResultOutput{})
}
