// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

type ApigAclPolicyAssociate struct {
	pulumi.CustomResourceState

	// The ID of the dedicated instance to which the APIs and the ACL policy belong.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ACL Policy ID for APIs binding.
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// The publish IDs corresponding to the APIs bound by the ACL policy.
	PublishIds pulumi.StringArrayOutput `pulumi:"publishIds"`
	// The region where the ACL policy and the APIs are located.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewApigAclPolicyAssociate registers a new resource with the given unique name, arguments, and options.
func NewApigAclPolicyAssociate(ctx *pulumi.Context,
	name string, args *ApigAclPolicyAssociateArgs, opts ...pulumi.ResourceOption) (*ApigAclPolicyAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	if args.PublishIds == nil {
		return nil, errors.New("invalid value for required argument 'PublishIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigAclPolicyAssociate
	err := ctx.RegisterResource("sbercloud:index/apigAclPolicyAssociate:ApigAclPolicyAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigAclPolicyAssociate gets an existing ApigAclPolicyAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigAclPolicyAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigAclPolicyAssociateState, opts ...pulumi.ResourceOption) (*ApigAclPolicyAssociate, error) {
	var resource ApigAclPolicyAssociate
	err := ctx.ReadResource("sbercloud:index/apigAclPolicyAssociate:ApigAclPolicyAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigAclPolicyAssociate resources.
type apigAclPolicyAssociateState struct {
	// The ID of the dedicated instance to which the APIs and the ACL policy belong.
	InstanceId *string `pulumi:"instanceId"`
	// The ACL Policy ID for APIs binding.
	PolicyId *string `pulumi:"policyId"`
	// The publish IDs corresponding to the APIs bound by the ACL policy.
	PublishIds []string `pulumi:"publishIds"`
	// The region where the ACL policy and the APIs are located.
	Region *string `pulumi:"region"`
}

type ApigAclPolicyAssociateState struct {
	// The ID of the dedicated instance to which the APIs and the ACL policy belong.
	InstanceId pulumi.StringPtrInput
	// The ACL Policy ID for APIs binding.
	PolicyId pulumi.StringPtrInput
	// The publish IDs corresponding to the APIs bound by the ACL policy.
	PublishIds pulumi.StringArrayInput
	// The region where the ACL policy and the APIs are located.
	Region pulumi.StringPtrInput
}

func (ApigAclPolicyAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigAclPolicyAssociateState)(nil)).Elem()
}

type apigAclPolicyAssociateArgs struct {
	// The ID of the dedicated instance to which the APIs and the ACL policy belong.
	InstanceId string `pulumi:"instanceId"`
	// The ACL Policy ID for APIs binding.
	PolicyId string `pulumi:"policyId"`
	// The publish IDs corresponding to the APIs bound by the ACL policy.
	PublishIds []string `pulumi:"publishIds"`
	// The region where the ACL policy and the APIs are located.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ApigAclPolicyAssociate resource.
type ApigAclPolicyAssociateArgs struct {
	// The ID of the dedicated instance to which the APIs and the ACL policy belong.
	InstanceId pulumi.StringInput
	// The ACL Policy ID for APIs binding.
	PolicyId pulumi.StringInput
	// The publish IDs corresponding to the APIs bound by the ACL policy.
	PublishIds pulumi.StringArrayInput
	// The region where the ACL policy and the APIs are located.
	Region pulumi.StringPtrInput
}

func (ApigAclPolicyAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigAclPolicyAssociateArgs)(nil)).Elem()
}

type ApigAclPolicyAssociateInput interface {
	pulumi.Input

	ToApigAclPolicyAssociateOutput() ApigAclPolicyAssociateOutput
	ToApigAclPolicyAssociateOutputWithContext(ctx context.Context) ApigAclPolicyAssociateOutput
}

func (*ApigAclPolicyAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigAclPolicyAssociate)(nil)).Elem()
}

func (i *ApigAclPolicyAssociate) ToApigAclPolicyAssociateOutput() ApigAclPolicyAssociateOutput {
	return i.ToApigAclPolicyAssociateOutputWithContext(context.Background())
}

func (i *ApigAclPolicyAssociate) ToApigAclPolicyAssociateOutputWithContext(ctx context.Context) ApigAclPolicyAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigAclPolicyAssociateOutput)
}

// ApigAclPolicyAssociateArrayInput is an input type that accepts ApigAclPolicyAssociateArray and ApigAclPolicyAssociateArrayOutput values.
// You can construct a concrete instance of `ApigAclPolicyAssociateArrayInput` via:
//
//	ApigAclPolicyAssociateArray{ ApigAclPolicyAssociateArgs{...} }
type ApigAclPolicyAssociateArrayInput interface {
	pulumi.Input

	ToApigAclPolicyAssociateArrayOutput() ApigAclPolicyAssociateArrayOutput
	ToApigAclPolicyAssociateArrayOutputWithContext(context.Context) ApigAclPolicyAssociateArrayOutput
}

type ApigAclPolicyAssociateArray []ApigAclPolicyAssociateInput

func (ApigAclPolicyAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigAclPolicyAssociate)(nil)).Elem()
}

func (i ApigAclPolicyAssociateArray) ToApigAclPolicyAssociateArrayOutput() ApigAclPolicyAssociateArrayOutput {
	return i.ToApigAclPolicyAssociateArrayOutputWithContext(context.Background())
}

func (i ApigAclPolicyAssociateArray) ToApigAclPolicyAssociateArrayOutputWithContext(ctx context.Context) ApigAclPolicyAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigAclPolicyAssociateArrayOutput)
}

// ApigAclPolicyAssociateMapInput is an input type that accepts ApigAclPolicyAssociateMap and ApigAclPolicyAssociateMapOutput values.
// You can construct a concrete instance of `ApigAclPolicyAssociateMapInput` via:
//
//	ApigAclPolicyAssociateMap{ "key": ApigAclPolicyAssociateArgs{...} }
type ApigAclPolicyAssociateMapInput interface {
	pulumi.Input

	ToApigAclPolicyAssociateMapOutput() ApigAclPolicyAssociateMapOutput
	ToApigAclPolicyAssociateMapOutputWithContext(context.Context) ApigAclPolicyAssociateMapOutput
}

type ApigAclPolicyAssociateMap map[string]ApigAclPolicyAssociateInput

func (ApigAclPolicyAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigAclPolicyAssociate)(nil)).Elem()
}

func (i ApigAclPolicyAssociateMap) ToApigAclPolicyAssociateMapOutput() ApigAclPolicyAssociateMapOutput {
	return i.ToApigAclPolicyAssociateMapOutputWithContext(context.Background())
}

func (i ApigAclPolicyAssociateMap) ToApigAclPolicyAssociateMapOutputWithContext(ctx context.Context) ApigAclPolicyAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigAclPolicyAssociateMapOutput)
}

type ApigAclPolicyAssociateOutput struct{ *pulumi.OutputState }

func (ApigAclPolicyAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigAclPolicyAssociate)(nil)).Elem()
}

func (o ApigAclPolicyAssociateOutput) ToApigAclPolicyAssociateOutput() ApigAclPolicyAssociateOutput {
	return o
}

func (o ApigAclPolicyAssociateOutput) ToApigAclPolicyAssociateOutputWithContext(ctx context.Context) ApigAclPolicyAssociateOutput {
	return o
}

// The ID of the dedicated instance to which the APIs and the ACL policy belong.
func (o ApigAclPolicyAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAclPolicyAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The ACL Policy ID for APIs binding.
func (o ApigAclPolicyAssociateOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAclPolicyAssociate) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// The publish IDs corresponding to the APIs bound by the ACL policy.
func (o ApigAclPolicyAssociateOutput) PublishIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigAclPolicyAssociate) pulumi.StringArrayOutput { return v.PublishIds }).(pulumi.StringArrayOutput)
}

// The region where the ACL policy and the APIs are located.
func (o ApigAclPolicyAssociateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigAclPolicyAssociate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type ApigAclPolicyAssociateArrayOutput struct{ *pulumi.OutputState }

func (ApigAclPolicyAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigAclPolicyAssociate)(nil)).Elem()
}

func (o ApigAclPolicyAssociateArrayOutput) ToApigAclPolicyAssociateArrayOutput() ApigAclPolicyAssociateArrayOutput {
	return o
}

func (o ApigAclPolicyAssociateArrayOutput) ToApigAclPolicyAssociateArrayOutputWithContext(ctx context.Context) ApigAclPolicyAssociateArrayOutput {
	return o
}

func (o ApigAclPolicyAssociateArrayOutput) Index(i pulumi.IntInput) ApigAclPolicyAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigAclPolicyAssociate {
		return vs[0].([]*ApigAclPolicyAssociate)[vs[1].(int)]
	}).(ApigAclPolicyAssociateOutput)
}

type ApigAclPolicyAssociateMapOutput struct{ *pulumi.OutputState }

func (ApigAclPolicyAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigAclPolicyAssociate)(nil)).Elem()
}

func (o ApigAclPolicyAssociateMapOutput) ToApigAclPolicyAssociateMapOutput() ApigAclPolicyAssociateMapOutput {
	return o
}

func (o ApigAclPolicyAssociateMapOutput) ToApigAclPolicyAssociateMapOutputWithContext(ctx context.Context) ApigAclPolicyAssociateMapOutput {
	return o
}

func (o ApigAclPolicyAssociateMapOutput) MapIndex(k pulumi.StringInput) ApigAclPolicyAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigAclPolicyAssociate {
		return vs[0].(map[string]*ApigAclPolicyAssociate)[vs[1].(string)]
	}).(ApigAclPolicyAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigAclPolicyAssociateInput)(nil)).Elem(), &ApigAclPolicyAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigAclPolicyAssociateArrayInput)(nil)).Elem(), ApigAclPolicyAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigAclPolicyAssociateMapInput)(nil)).Elem(), ApigAclPolicyAssociateMap{})
	pulumi.RegisterOutputType(ApigAclPolicyAssociateOutput{})
	pulumi.RegisterOutputType(ApigAclPolicyAssociateArrayOutput{})
	pulumi.RegisterOutputType(ApigAclPolicyAssociateMapOutput{})
}
