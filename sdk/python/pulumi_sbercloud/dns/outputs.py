# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'ZoneRouter',
]

@pulumi.output_type
class ZoneRouter(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "routerId":
            suggest = "router_id"
        elif key == "routerRegion":
            suggest = "router_region"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ZoneRouter. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ZoneRouter.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ZoneRouter.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 router_id: _builtins.str,
                 router_region: Optional[_builtins.str] = None):
        """
        :param _builtins.str router_id: ID of the associated VPC.
        :param _builtins.str router_region: The region of the VPC.
        """
        pulumi.set(__self__, "router_id", router_id)
        if router_region is not None:
            pulumi.set(__self__, "router_region", router_region)

    @_builtins.property
    @pulumi.getter(name="routerId")
    def router_id(self) -> _builtins.str:
        """
        ID of the associated VPC.
        """
        return pulumi.get(self, "router_id")

    @_builtins.property
    @pulumi.getter(name="routerRegion")
    def router_region(self) -> Optional[_builtins.str]:
        """
        The region of the VPC.
        """
        return pulumi.get(self, "router_region")


