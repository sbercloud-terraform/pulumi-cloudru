// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query dependency packages within SberCloud.
 *
 * > Between `1.64.2` and `1.72.1`, the version list of each dependency package is queried by default.
 *    <br>This will cause the query to take up a lot of time and may trigger flow control.
 *    <br>There are not recommended to use.
 *
 * ## Example Usage
 *
 * ### Obtain all public dependency packages
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.FunctionGraph.getDependencies({});
 * ```
 *
 * ### Obtain specific public dependency package by name
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.FunctionGraph.getDependencies({
 *     type: "public",
 *     name: "obssdk-3.0.2",
 * });
 * ```
 *
 * ### Obtain all public Python2.7 dependency packages
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.FunctionGraph.getDependencies({
 *     type: "public",
 *     runtime: "Python2.7",
 * });
 * ```
 */
export function getDependencies(args?: GetDependenciesArgs, opts?: pulumi.InvokeOptions): Promise<GetDependenciesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:FunctionGraph/getDependencies:getDependencies", {
        "isVersionsQueryAllowed": args.isVersionsQueryAllowed,
        "name": args.name,
        "region": args.region,
        "runtime": args.runtime,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDependencies.
 */
export interface GetDependenciesArgs {
    /**
     * Specifies whether to query the versions of each dependency package.
     * Defaults to **false**.
     */
    isVersionsQueryAllowed?: boolean;
    /**
     * Specifies the name of the dependency package.
     */
    name?: string;
    /**
     * Specifies the region where the dependency packages are located.  
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the runtime of the dependency package.  
     * The valid values are as follows:
     * + **Java8**
     * + **Java11**
     * + **Node.js6.10**
     * + **Node.js8.10**
     * + **Node.js10.16**
     * + **Node.js12.13**
     * + **Node.js14.18**
     * + **Node.js16.17**
     * + **Node.js18.15**
     * + **Python2.7**
     * + **Python3.6**
     * + **Python3.9**
     * + **Python3.10**
     * + **Go1.x**
     * + **C#(.NET Core 2.0)**
     * + **C#(.NET Core 2.1)**
     * + **C#(.NET Core 3.1)**
     * + **Custom**
     * + **PHP7.3**
     * + **Cangjie1.0**
     * + **http**
     * + **Custom Image**
     */
    runtime?: string;
    /**
     * Specifies the type of the dependency package.  
     * The valid values are as follows:
     * + **public**
     * + **private**
     */
    type?: string;
}

/**
 * A collection of values returned by getDependencies.
 */
export interface GetDependenciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isVersionsQueryAllowed?: boolean;
    /**
     * The name of the dependency package.
     */
    readonly name?: string;
    /**
     * All dependency packages that match the filter parameters.
     * The packages structure is documented below.
     */
    readonly packages: outputs.FunctionGraph.GetDependenciesPackage[];
    readonly region: string;
    /**
     * The runtime of the dependency package.
     */
    readonly runtime?: string;
    readonly type?: string;
}
/**
 * Use this data source to query dependency packages within SberCloud.
 *
 * > Between `1.64.2` and `1.72.1`, the version list of each dependency package is queried by default.
 *    <br>This will cause the query to take up a lot of time and may trigger flow control.
 *    <br>There are not recommended to use.
 *
 * ## Example Usage
 *
 * ### Obtain all public dependency packages
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.FunctionGraph.getDependencies({});
 * ```
 *
 * ### Obtain specific public dependency package by name
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.FunctionGraph.getDependencies({
 *     type: "public",
 *     name: "obssdk-3.0.2",
 * });
 * ```
 *
 * ### Obtain all public Python2.7 dependency packages
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const test = sbercloud.FunctionGraph.getDependencies({
 *     type: "public",
 *     runtime: "Python2.7",
 * });
 * ```
 */
export function getDependenciesOutput(args?: GetDependenciesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDependenciesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:FunctionGraph/getDependencies:getDependencies", {
        "isVersionsQueryAllowed": args.isVersionsQueryAllowed,
        "name": args.name,
        "region": args.region,
        "runtime": args.runtime,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDependencies.
 */
export interface GetDependenciesOutputArgs {
    /**
     * Specifies whether to query the versions of each dependency package.
     * Defaults to **false**.
     */
    isVersionsQueryAllowed?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the dependency package.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the dependency packages are located.  
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the runtime of the dependency package.  
     * The valid values are as follows:
     * + **Java8**
     * + **Java11**
     * + **Node.js6.10**
     * + **Node.js8.10**
     * + **Node.js10.16**
     * + **Node.js12.13**
     * + **Node.js14.18**
     * + **Node.js16.17**
     * + **Node.js18.15**
     * + **Python2.7**
     * + **Python3.6**
     * + **Python3.9**
     * + **Python3.10**
     * + **Go1.x**
     * + **C#(.NET Core 2.0)**
     * + **C#(.NET Core 2.1)**
     * + **C#(.NET Core 3.1)**
     * + **Custom**
     * + **PHP7.3**
     * + **Cangjie1.0**
     * + **http**
     * + **Custom Image**
     */
    runtime?: pulumi.Input<string>;
    /**
     * Specifies the type of the dependency package.  
     * The valid values are as follows:
     * + **public**
     * + **private**
     */
    type?: pulumi.Input<string>;
}
