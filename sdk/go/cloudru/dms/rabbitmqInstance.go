// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type RabbitmqInstance struct {
	pulumi.CustomResourceState

	AccessUser pulumi.StringPtrOutput `pulumi:"accessUser"`
	AutoRenew  pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// schema: Required
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones           pulumi.StringArrayOutput `pulumi:"availableZones"`
	BrokerNum                pulumi.IntOutput         `pulumi:"brokerNum"`
	ChargingMode             pulumi.StringOutput      `pulumi:"chargingMode"`
	ConnectAddress           pulumi.StringOutput      `pulumi:"connectAddress"`
	CreatedAt                pulumi.StringOutput      `pulumi:"createdAt"`
	Description              pulumi.StringPtrOutput   `pulumi:"description"`
	EnableAcl                pulumi.BoolOutput        `pulumi:"enableAcl"`
	EnablePublicIp           pulumi.BoolOutput        `pulumi:"enablePublicIp"`
	Engine                   pulumi.StringOutput      `pulumi:"engine"`
	EngineVersion            pulumi.StringPtrOutput   `pulumi:"engineVersion"`
	EnterpriseProjectId      pulumi.StringOutput      `pulumi:"enterpriseProjectId"`
	ExtendTimes              pulumi.IntOutput         `pulumi:"extendTimes"`
	FlavorId                 pulumi.StringPtrOutput   `pulumi:"flavorId"`
	IsLogicalVolume          pulumi.BoolOutput        `pulumi:"isLogicalVolume"`
	MaintainBegin            pulumi.StringOutput      `pulumi:"maintainBegin"`
	MaintainEnd              pulumi.StringOutput      `pulumi:"maintainEnd"`
	ManagementConnectAddress pulumi.StringOutput      `pulumi:"managementConnectAddress"`
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress pulumi.StringOutput    `pulumi:"manegementConnectAddress"`
	Name                     pulumi.StringOutput    `pulumi:"name"`
	NetworkId                pulumi.StringOutput    `pulumi:"networkId"`
	Password                 pulumi.StringPtrOutput `pulumi:"password"`
	Period                   pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit               pulumi.StringPtrOutput `pulumi:"periodUnit"`
	Port                     pulumi.IntOutput       `pulumi:"port"`
	// Deprecated: product_id has deprecated, please use "flavorId" instead.
	ProductId        pulumi.StringPtrOutput `pulumi:"productId"`
	PublicIpAddress  pulumi.StringOutput    `pulumi:"publicIpAddress"`
	PublicIpId       pulumi.StringPtrOutput `pulumi:"publicIpId"`
	Region           pulumi.StringOutput    `pulumi:"region"`
	ResourceSpecCode pulumi.StringOutput    `pulumi:"resourceSpecCode"`
	SecurityGroupId  pulumi.StringOutput    `pulumi:"securityGroupId"`
	Specification    pulumi.StringOutput    `pulumi:"specification"`
	SslEnable        pulumi.BoolPtrOutput   `pulumi:"sslEnable"`
	Status           pulumi.StringOutput    `pulumi:"status"`
	StorageSpace     pulumi.IntOutput       `pulumi:"storageSpace"`
	StorageSpecCode  pulumi.StringOutput    `pulumi:"storageSpecCode"`
	Tags             pulumi.StringMapOutput `pulumi:"tags"`
	Type             pulumi.StringOutput    `pulumi:"type"`
	UsedStorageSpace pulumi.IntOutput       `pulumi:"usedStorageSpace"`
	UserId           pulumi.StringOutput    `pulumi:"userId"`
	UserName         pulumi.StringOutput    `pulumi:"userName"`
	VpcId            pulumi.StringOutput    `pulumi:"vpcId"`
}

// NewRabbitmqInstance registers a new resource with the given unique name, arguments, and options.
func NewRabbitmqInstance(ctx *pulumi.Context,
	name string, args *RabbitmqInstanceArgs, opts ...pulumi.ResourceOption) (*RabbitmqInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.StorageSpecCode == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpecCode'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RabbitmqInstance
	err := ctx.RegisterResource("cloudru:Dms/rabbitmqInstance:RabbitmqInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRabbitmqInstance gets an existing RabbitmqInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRabbitmqInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RabbitmqInstanceState, opts ...pulumi.ResourceOption) (*RabbitmqInstance, error) {
	var resource RabbitmqInstance
	err := ctx.ReadResource("cloudru:Dms/rabbitmqInstance:RabbitmqInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RabbitmqInstance resources.
type rabbitmqInstanceState struct {
	AccessUser *string `pulumi:"accessUser"`
	AutoRenew  *string `pulumi:"autoRenew"`
	// schema: Required
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones           []string `pulumi:"availableZones"`
	BrokerNum                *int     `pulumi:"brokerNum"`
	ChargingMode             *string  `pulumi:"chargingMode"`
	ConnectAddress           *string  `pulumi:"connectAddress"`
	CreatedAt                *string  `pulumi:"createdAt"`
	Description              *string  `pulumi:"description"`
	EnableAcl                *bool    `pulumi:"enableAcl"`
	EnablePublicIp           *bool    `pulumi:"enablePublicIp"`
	Engine                   *string  `pulumi:"engine"`
	EngineVersion            *string  `pulumi:"engineVersion"`
	EnterpriseProjectId      *string  `pulumi:"enterpriseProjectId"`
	ExtendTimes              *int     `pulumi:"extendTimes"`
	FlavorId                 *string  `pulumi:"flavorId"`
	IsLogicalVolume          *bool    `pulumi:"isLogicalVolume"`
	MaintainBegin            *string  `pulumi:"maintainBegin"`
	MaintainEnd              *string  `pulumi:"maintainEnd"`
	ManagementConnectAddress *string  `pulumi:"managementConnectAddress"`
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress *string `pulumi:"manegementConnectAddress"`
	Name                     *string `pulumi:"name"`
	NetworkId                *string `pulumi:"networkId"`
	Password                 *string `pulumi:"password"`
	Period                   *int    `pulumi:"period"`
	PeriodUnit               *string `pulumi:"periodUnit"`
	Port                     *int    `pulumi:"port"`
	// Deprecated: product_id has deprecated, please use "flavorId" instead.
	ProductId        *string           `pulumi:"productId"`
	PublicIpAddress  *string           `pulumi:"publicIpAddress"`
	PublicIpId       *string           `pulumi:"publicIpId"`
	Region           *string           `pulumi:"region"`
	ResourceSpecCode *string           `pulumi:"resourceSpecCode"`
	SecurityGroupId  *string           `pulumi:"securityGroupId"`
	Specification    *string           `pulumi:"specification"`
	SslEnable        *bool             `pulumi:"sslEnable"`
	Status           *string           `pulumi:"status"`
	StorageSpace     *int              `pulumi:"storageSpace"`
	StorageSpecCode  *string           `pulumi:"storageSpecCode"`
	Tags             map[string]string `pulumi:"tags"`
	Type             *string           `pulumi:"type"`
	UsedStorageSpace *int              `pulumi:"usedStorageSpace"`
	UserId           *string           `pulumi:"userId"`
	UserName         *string           `pulumi:"userName"`
	VpcId            *string           `pulumi:"vpcId"`
}

type RabbitmqInstanceState struct {
	AccessUser pulumi.StringPtrInput
	AutoRenew  pulumi.StringPtrInput
	// schema: Required
	AvailabilityZones pulumi.StringArrayInput
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones           pulumi.StringArrayInput
	BrokerNum                pulumi.IntPtrInput
	ChargingMode             pulumi.StringPtrInput
	ConnectAddress           pulumi.StringPtrInput
	CreatedAt                pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	EnableAcl                pulumi.BoolPtrInput
	EnablePublicIp           pulumi.BoolPtrInput
	Engine                   pulumi.StringPtrInput
	EngineVersion            pulumi.StringPtrInput
	EnterpriseProjectId      pulumi.StringPtrInput
	ExtendTimes              pulumi.IntPtrInput
	FlavorId                 pulumi.StringPtrInput
	IsLogicalVolume          pulumi.BoolPtrInput
	MaintainBegin            pulumi.StringPtrInput
	MaintainEnd              pulumi.StringPtrInput
	ManagementConnectAddress pulumi.StringPtrInput
	// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
	ManegementConnectAddress pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	NetworkId                pulumi.StringPtrInput
	Password                 pulumi.StringPtrInput
	Period                   pulumi.IntPtrInput
	PeriodUnit               pulumi.StringPtrInput
	Port                     pulumi.IntPtrInput
	// Deprecated: product_id has deprecated, please use "flavorId" instead.
	ProductId        pulumi.StringPtrInput
	PublicIpAddress  pulumi.StringPtrInput
	PublicIpId       pulumi.StringPtrInput
	Region           pulumi.StringPtrInput
	ResourceSpecCode pulumi.StringPtrInput
	SecurityGroupId  pulumi.StringPtrInput
	Specification    pulumi.StringPtrInput
	SslEnable        pulumi.BoolPtrInput
	Status           pulumi.StringPtrInput
	StorageSpace     pulumi.IntPtrInput
	StorageSpecCode  pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
	Type             pulumi.StringPtrInput
	UsedStorageSpace pulumi.IntPtrInput
	UserId           pulumi.StringPtrInput
	UserName         pulumi.StringPtrInput
	VpcId            pulumi.StringPtrInput
}

func (RabbitmqInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*rabbitmqInstanceState)(nil)).Elem()
}

type rabbitmqInstanceArgs struct {
	AccessUser *string `pulumi:"accessUser"`
	AutoRenew  *string `pulumi:"autoRenew"`
	// schema: Required
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones      []string `pulumi:"availableZones"`
	BrokerNum           *int     `pulumi:"brokerNum"`
	ChargingMode        *string  `pulumi:"chargingMode"`
	Description         *string  `pulumi:"description"`
	EnableAcl           *bool    `pulumi:"enableAcl"`
	EngineVersion       *string  `pulumi:"engineVersion"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	FlavorId            *string  `pulumi:"flavorId"`
	MaintainBegin       *string  `pulumi:"maintainBegin"`
	MaintainEnd         *string  `pulumi:"maintainEnd"`
	Name                *string  `pulumi:"name"`
	NetworkId           string   `pulumi:"networkId"`
	Password            *string  `pulumi:"password"`
	Period              *int     `pulumi:"period"`
	PeriodUnit          *string  `pulumi:"periodUnit"`
	// Deprecated: product_id has deprecated, please use "flavorId" instead.
	ProductId       *string           `pulumi:"productId"`
	PublicIpId      *string           `pulumi:"publicIpId"`
	Region          *string           `pulumi:"region"`
	SecurityGroupId string            `pulumi:"securityGroupId"`
	SslEnable       *bool             `pulumi:"sslEnable"`
	StorageSpace    *int              `pulumi:"storageSpace"`
	StorageSpecCode string            `pulumi:"storageSpecCode"`
	Tags            map[string]string `pulumi:"tags"`
	VpcId           string            `pulumi:"vpcId"`
}

// The set of arguments for constructing a RabbitmqInstance resource.
type RabbitmqInstanceArgs struct {
	AccessUser pulumi.StringPtrInput
	AutoRenew  pulumi.StringPtrInput
	// schema: Required
	AvailabilityZones pulumi.StringArrayInput
	// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
	AvailableZones      pulumi.StringArrayInput
	BrokerNum           pulumi.IntPtrInput
	ChargingMode        pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	EnableAcl           pulumi.BoolPtrInput
	EngineVersion       pulumi.StringPtrInput
	EnterpriseProjectId pulumi.StringPtrInput
	FlavorId            pulumi.StringPtrInput
	MaintainBegin       pulumi.StringPtrInput
	MaintainEnd         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	NetworkId           pulumi.StringInput
	Password            pulumi.StringPtrInput
	Period              pulumi.IntPtrInput
	PeriodUnit          pulumi.StringPtrInput
	// Deprecated: product_id has deprecated, please use "flavorId" instead.
	ProductId       pulumi.StringPtrInput
	PublicIpId      pulumi.StringPtrInput
	Region          pulumi.StringPtrInput
	SecurityGroupId pulumi.StringInput
	SslEnable       pulumi.BoolPtrInput
	StorageSpace    pulumi.IntPtrInput
	StorageSpecCode pulumi.StringInput
	Tags            pulumi.StringMapInput
	VpcId           pulumi.StringInput
}

func (RabbitmqInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rabbitmqInstanceArgs)(nil)).Elem()
}

type RabbitmqInstanceInput interface {
	pulumi.Input

	ToRabbitmqInstanceOutput() RabbitmqInstanceOutput
	ToRabbitmqInstanceOutputWithContext(ctx context.Context) RabbitmqInstanceOutput
}

func (*RabbitmqInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RabbitmqInstance)(nil)).Elem()
}

func (i *RabbitmqInstance) ToRabbitmqInstanceOutput() RabbitmqInstanceOutput {
	return i.ToRabbitmqInstanceOutputWithContext(context.Background())
}

func (i *RabbitmqInstance) ToRabbitmqInstanceOutputWithContext(ctx context.Context) RabbitmqInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RabbitmqInstanceOutput)
}

// RabbitmqInstanceArrayInput is an input type that accepts RabbitmqInstanceArray and RabbitmqInstanceArrayOutput values.
// You can construct a concrete instance of `RabbitmqInstanceArrayInput` via:
//
//	RabbitmqInstanceArray{ RabbitmqInstanceArgs{...} }
type RabbitmqInstanceArrayInput interface {
	pulumi.Input

	ToRabbitmqInstanceArrayOutput() RabbitmqInstanceArrayOutput
	ToRabbitmqInstanceArrayOutputWithContext(context.Context) RabbitmqInstanceArrayOutput
}

type RabbitmqInstanceArray []RabbitmqInstanceInput

func (RabbitmqInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RabbitmqInstance)(nil)).Elem()
}

func (i RabbitmqInstanceArray) ToRabbitmqInstanceArrayOutput() RabbitmqInstanceArrayOutput {
	return i.ToRabbitmqInstanceArrayOutputWithContext(context.Background())
}

func (i RabbitmqInstanceArray) ToRabbitmqInstanceArrayOutputWithContext(ctx context.Context) RabbitmqInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RabbitmqInstanceArrayOutput)
}

// RabbitmqInstanceMapInput is an input type that accepts RabbitmqInstanceMap and RabbitmqInstanceMapOutput values.
// You can construct a concrete instance of `RabbitmqInstanceMapInput` via:
//
//	RabbitmqInstanceMap{ "key": RabbitmqInstanceArgs{...} }
type RabbitmqInstanceMapInput interface {
	pulumi.Input

	ToRabbitmqInstanceMapOutput() RabbitmqInstanceMapOutput
	ToRabbitmqInstanceMapOutputWithContext(context.Context) RabbitmqInstanceMapOutput
}

type RabbitmqInstanceMap map[string]RabbitmqInstanceInput

func (RabbitmqInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RabbitmqInstance)(nil)).Elem()
}

func (i RabbitmqInstanceMap) ToRabbitmqInstanceMapOutput() RabbitmqInstanceMapOutput {
	return i.ToRabbitmqInstanceMapOutputWithContext(context.Background())
}

func (i RabbitmqInstanceMap) ToRabbitmqInstanceMapOutputWithContext(ctx context.Context) RabbitmqInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RabbitmqInstanceMapOutput)
}

type RabbitmqInstanceOutput struct{ *pulumi.OutputState }

func (RabbitmqInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RabbitmqInstance)(nil)).Elem()
}

func (o RabbitmqInstanceOutput) ToRabbitmqInstanceOutput() RabbitmqInstanceOutput {
	return o
}

func (o RabbitmqInstanceOutput) ToRabbitmqInstanceOutputWithContext(ctx context.Context) RabbitmqInstanceOutput {
	return o
}

func (o RabbitmqInstanceOutput) AccessUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.AccessUser }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// schema: Required
func (o RabbitmqInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Deprecated: available_zones has deprecated, please use "availabilityZones" instead.
func (o RabbitmqInstanceOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringArrayOutput { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

func (o RabbitmqInstanceOutput) BrokerNum() pulumi.IntOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.IntOutput { return v.BrokerNum }).(pulumi.IntOutput)
}

func (o RabbitmqInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) ConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.ConnectAddress }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) EnableAcl() pulumi.BoolOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.BoolOutput { return v.EnableAcl }).(pulumi.BoolOutput)
}

func (o RabbitmqInstanceOutput) EnablePublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.BoolOutput { return v.EnablePublicIp }).(pulumi.BoolOutput)
}

func (o RabbitmqInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) ExtendTimes() pulumi.IntOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.IntOutput { return v.ExtendTimes }).(pulumi.IntOutput)
}

func (o RabbitmqInstanceOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.FlavorId }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) IsLogicalVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.BoolOutput { return v.IsLogicalVolume }).(pulumi.BoolOutput)
}

func (o RabbitmqInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) ManagementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.ManagementConnectAddress }).(pulumi.StringOutput)
}

// Deprecated: typo in manegement_connect_address, please use "managementConnectAddress" instead.
func (o RabbitmqInstanceOutput) ManegementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.ManegementConnectAddress }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o RabbitmqInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Deprecated: product_id has deprecated, please use "flavorId" instead.
func (o RabbitmqInstanceOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.ProductId }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.PublicIpAddress }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) PublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringPtrOutput { return v.PublicIpId }).(pulumi.StringPtrOutput)
}

func (o RabbitmqInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) ResourceSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.ResourceSpecCode }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) Specification() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.Specification }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) SslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.BoolPtrOutput { return v.SslEnable }).(pulumi.BoolPtrOutput)
}

func (o RabbitmqInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) StorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.IntOutput { return v.StorageSpace }).(pulumi.IntOutput)
}

func (o RabbitmqInstanceOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.StorageSpecCode }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o RabbitmqInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) UsedStorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.IntOutput { return v.UsedStorageSpace }).(pulumi.IntOutput)
}

func (o RabbitmqInstanceOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

func (o RabbitmqInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *RabbitmqInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type RabbitmqInstanceArrayOutput struct{ *pulumi.OutputState }

func (RabbitmqInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RabbitmqInstance)(nil)).Elem()
}

func (o RabbitmqInstanceArrayOutput) ToRabbitmqInstanceArrayOutput() RabbitmqInstanceArrayOutput {
	return o
}

func (o RabbitmqInstanceArrayOutput) ToRabbitmqInstanceArrayOutputWithContext(ctx context.Context) RabbitmqInstanceArrayOutput {
	return o
}

func (o RabbitmqInstanceArrayOutput) Index(i pulumi.IntInput) RabbitmqInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RabbitmqInstance {
		return vs[0].([]*RabbitmqInstance)[vs[1].(int)]
	}).(RabbitmqInstanceOutput)
}

type RabbitmqInstanceMapOutput struct{ *pulumi.OutputState }

func (RabbitmqInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RabbitmqInstance)(nil)).Elem()
}

func (o RabbitmqInstanceMapOutput) ToRabbitmqInstanceMapOutput() RabbitmqInstanceMapOutput {
	return o
}

func (o RabbitmqInstanceMapOutput) ToRabbitmqInstanceMapOutputWithContext(ctx context.Context) RabbitmqInstanceMapOutput {
	return o
}

func (o RabbitmqInstanceMapOutput) MapIndex(k pulumi.StringInput) RabbitmqInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RabbitmqInstance {
		return vs[0].(map[string]*RabbitmqInstance)[vs[1].(string)]
	}).(RabbitmqInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RabbitmqInstanceInput)(nil)).Elem(), &RabbitmqInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*RabbitmqInstanceArrayInput)(nil)).Elem(), RabbitmqInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RabbitmqInstanceMapInput)(nil)).Elem(), RabbitmqInstanceMap{})
	pulumi.RegisterOutputType(RabbitmqInstanceOutput{})
	pulumi.RegisterOutputType(RabbitmqInstanceArrayOutput{})
	pulumi.RegisterOutputType(RabbitmqInstanceMapOutput{})
}
