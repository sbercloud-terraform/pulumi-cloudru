// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsZones(args: GetDnsZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:index/getDnsZones:getDnsZones", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "routerId": args.routerId,
        "searchMode": args.searchMode,
        "sortDir": args.sortDir,
        "sortKey": args.sortKey,
        "status": args.status,
        "tags": args.tags,
        "zoneId": args.zoneId,
        "zoneType": args.zoneType,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsZones.
 */
export interface GetDnsZonesArgs {
    enterpriseProjectId?: string;
    name?: string;
    region?: string;
    routerId?: string;
    searchMode?: string;
    sortDir?: string;
    sortKey?: string;
    status?: string;
    tags?: string;
    zoneId?: string;
    zoneType: string;
}

/**
 * A collection of values returned by getDnsZones.
 */
export interface GetDnsZonesResult {
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly region: string;
    readonly routerId?: string;
    readonly searchMode?: string;
    readonly sortDir?: string;
    readonly sortKey?: string;
    readonly status?: string;
    readonly tags?: string;
    readonly zoneId?: string;
    readonly zoneType: string;
    readonly zones: outputs.GetDnsZonesZone[];
}
export function getDnsZonesOutput(args: GetDnsZonesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsZonesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:index/getDnsZones:getDnsZones", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "routerId": args.routerId,
        "searchMode": args.searchMode,
        "sortDir": args.sortDir,
        "sortKey": args.sortKey,
        "status": args.status,
        "tags": args.tags,
        "zoneId": args.zoneId,
        "zoneType": args.zoneType,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsZones.
 */
export interface GetDnsZonesOutputArgs {
    enterpriseProjectId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    routerId?: pulumi.Input<string>;
    searchMode?: pulumi.Input<string>;
    sortDir?: pulumi.Input<string>;
    sortKey?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
    zoneType: pulumi.Input<string>;
}
