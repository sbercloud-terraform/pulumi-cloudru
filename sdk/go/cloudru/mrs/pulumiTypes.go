// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mrs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type ClusterAnalysisCoreNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	AutoRenew       *string  `pulumi:"autoRenew"`
	ChargingMode    *string  `pulumi:"chargingMode"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	Period          *int     `pulumi:"period"`
	PeriodUnit      *string  `pulumi:"periodUnit"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// ClusterAnalysisCoreNodesInput is an input type that accepts ClusterAnalysisCoreNodesArgs and ClusterAnalysisCoreNodesOutput values.
// You can construct a concrete instance of `ClusterAnalysisCoreNodesInput` via:
//
//	ClusterAnalysisCoreNodesArgs{...}
type ClusterAnalysisCoreNodesInput interface {
	pulumi.Input

	ToClusterAnalysisCoreNodesOutput() ClusterAnalysisCoreNodesOutput
	ToClusterAnalysisCoreNodesOutputWithContext(context.Context) ClusterAnalysisCoreNodesOutput
}

type ClusterAnalysisCoreNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	AutoRenew       pulumi.StringPtrInput   `pulumi:"autoRenew"`
	ChargingMode    pulumi.StringPtrInput   `pulumi:"chargingMode"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	Period          pulumi.IntPtrInput      `pulumi:"period"`
	PeriodUnit      pulumi.StringPtrInput   `pulumi:"periodUnit"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (ClusterAnalysisCoreNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAnalysisCoreNodes)(nil)).Elem()
}

func (i ClusterAnalysisCoreNodesArgs) ToClusterAnalysisCoreNodesOutput() ClusterAnalysisCoreNodesOutput {
	return i.ToClusterAnalysisCoreNodesOutputWithContext(context.Background())
}

func (i ClusterAnalysisCoreNodesArgs) ToClusterAnalysisCoreNodesOutputWithContext(ctx context.Context) ClusterAnalysisCoreNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisCoreNodesOutput)
}

func (i ClusterAnalysisCoreNodesArgs) ToClusterAnalysisCoreNodesPtrOutput() ClusterAnalysisCoreNodesPtrOutput {
	return i.ToClusterAnalysisCoreNodesPtrOutputWithContext(context.Background())
}

func (i ClusterAnalysisCoreNodesArgs) ToClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisCoreNodesOutput).ToClusterAnalysisCoreNodesPtrOutputWithContext(ctx)
}

// ClusterAnalysisCoreNodesPtrInput is an input type that accepts ClusterAnalysisCoreNodesArgs, ClusterAnalysisCoreNodesPtr and ClusterAnalysisCoreNodesPtrOutput values.
// You can construct a concrete instance of `ClusterAnalysisCoreNodesPtrInput` via:
//
//	        ClusterAnalysisCoreNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterAnalysisCoreNodesPtrInput interface {
	pulumi.Input

	ToClusterAnalysisCoreNodesPtrOutput() ClusterAnalysisCoreNodesPtrOutput
	ToClusterAnalysisCoreNodesPtrOutputWithContext(context.Context) ClusterAnalysisCoreNodesPtrOutput
}

type clusterAnalysisCoreNodesPtrType ClusterAnalysisCoreNodesArgs

func ClusterAnalysisCoreNodesPtr(v *ClusterAnalysisCoreNodesArgs) ClusterAnalysisCoreNodesPtrInput {
	return (*clusterAnalysisCoreNodesPtrType)(v)
}

func (*clusterAnalysisCoreNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAnalysisCoreNodes)(nil)).Elem()
}

func (i *clusterAnalysisCoreNodesPtrType) ToClusterAnalysisCoreNodesPtrOutput() ClusterAnalysisCoreNodesPtrOutput {
	return i.ToClusterAnalysisCoreNodesPtrOutputWithContext(context.Background())
}

func (i *clusterAnalysisCoreNodesPtrType) ToClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisCoreNodesPtrOutput)
}

type ClusterAnalysisCoreNodesOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisCoreNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAnalysisCoreNodes)(nil)).Elem()
}

func (o ClusterAnalysisCoreNodesOutput) ToClusterAnalysisCoreNodesOutput() ClusterAnalysisCoreNodesOutput {
	return o
}

func (o ClusterAnalysisCoreNodesOutput) ToClusterAnalysisCoreNodesOutputWithContext(ctx context.Context) ClusterAnalysisCoreNodesOutput {
	return o
}

func (o ClusterAnalysisCoreNodesOutput) ToClusterAnalysisCoreNodesPtrOutput() ClusterAnalysisCoreNodesPtrOutput {
	return o.ToClusterAnalysisCoreNodesPtrOutputWithContext(context.Background())
}

func (o ClusterAnalysisCoreNodesOutput) ToClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisCoreNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAnalysisCoreNodes) *ClusterAnalysisCoreNodes {
		return &v
	}).(ClusterAnalysisCoreNodesPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisCoreNodesOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) *string { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o ClusterAnalysisCoreNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o ClusterAnalysisCoreNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisCoreNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o ClusterAnalysisCoreNodesOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) *string { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o ClusterAnalysisCoreNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAnalysisCoreNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type ClusterAnalysisCoreNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisCoreNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAnalysisCoreNodes)(nil)).Elem()
}

func (o ClusterAnalysisCoreNodesPtrOutput) ToClusterAnalysisCoreNodesPtrOutput() ClusterAnalysisCoreNodesPtrOutput {
	return o
}

func (o ClusterAnalysisCoreNodesPtrOutput) ToClusterAnalysisCoreNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisCoreNodesPtrOutput {
	return o
}

func (o ClusterAnalysisCoreNodesPtrOutput) Elem() ClusterAnalysisCoreNodesOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) ClusterAnalysisCoreNodes {
		if v != nil {
			return *v
		}
		var ret ClusterAnalysisCoreNodes
		return ret
	}).(ClusterAnalysisCoreNodesOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.PeriodUnit
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisCoreNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type ClusterAnalysisTaskNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// ClusterAnalysisTaskNodesInput is an input type that accepts ClusterAnalysisTaskNodesArgs and ClusterAnalysisTaskNodesOutput values.
// You can construct a concrete instance of `ClusterAnalysisTaskNodesInput` via:
//
//	ClusterAnalysisTaskNodesArgs{...}
type ClusterAnalysisTaskNodesInput interface {
	pulumi.Input

	ToClusterAnalysisTaskNodesOutput() ClusterAnalysisTaskNodesOutput
	ToClusterAnalysisTaskNodesOutputWithContext(context.Context) ClusterAnalysisTaskNodesOutput
}

type ClusterAnalysisTaskNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (ClusterAnalysisTaskNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAnalysisTaskNodes)(nil)).Elem()
}

func (i ClusterAnalysisTaskNodesArgs) ToClusterAnalysisTaskNodesOutput() ClusterAnalysisTaskNodesOutput {
	return i.ToClusterAnalysisTaskNodesOutputWithContext(context.Background())
}

func (i ClusterAnalysisTaskNodesArgs) ToClusterAnalysisTaskNodesOutputWithContext(ctx context.Context) ClusterAnalysisTaskNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisTaskNodesOutput)
}

func (i ClusterAnalysisTaskNodesArgs) ToClusterAnalysisTaskNodesPtrOutput() ClusterAnalysisTaskNodesPtrOutput {
	return i.ToClusterAnalysisTaskNodesPtrOutputWithContext(context.Background())
}

func (i ClusterAnalysisTaskNodesArgs) ToClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisTaskNodesOutput).ToClusterAnalysisTaskNodesPtrOutputWithContext(ctx)
}

// ClusterAnalysisTaskNodesPtrInput is an input type that accepts ClusterAnalysisTaskNodesArgs, ClusterAnalysisTaskNodesPtr and ClusterAnalysisTaskNodesPtrOutput values.
// You can construct a concrete instance of `ClusterAnalysisTaskNodesPtrInput` via:
//
//	        ClusterAnalysisTaskNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterAnalysisTaskNodesPtrInput interface {
	pulumi.Input

	ToClusterAnalysisTaskNodesPtrOutput() ClusterAnalysisTaskNodesPtrOutput
	ToClusterAnalysisTaskNodesPtrOutputWithContext(context.Context) ClusterAnalysisTaskNodesPtrOutput
}

type clusterAnalysisTaskNodesPtrType ClusterAnalysisTaskNodesArgs

func ClusterAnalysisTaskNodesPtr(v *ClusterAnalysisTaskNodesArgs) ClusterAnalysisTaskNodesPtrInput {
	return (*clusterAnalysisTaskNodesPtrType)(v)
}

func (*clusterAnalysisTaskNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAnalysisTaskNodes)(nil)).Elem()
}

func (i *clusterAnalysisTaskNodesPtrType) ToClusterAnalysisTaskNodesPtrOutput() ClusterAnalysisTaskNodesPtrOutput {
	return i.ToClusterAnalysisTaskNodesPtrOutputWithContext(context.Background())
}

func (i *clusterAnalysisTaskNodesPtrType) ToClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAnalysisTaskNodesPtrOutput)
}

type ClusterAnalysisTaskNodesOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisTaskNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAnalysisTaskNodes)(nil)).Elem()
}

func (o ClusterAnalysisTaskNodesOutput) ToClusterAnalysisTaskNodesOutput() ClusterAnalysisTaskNodesOutput {
	return o
}

func (o ClusterAnalysisTaskNodesOutput) ToClusterAnalysisTaskNodesOutputWithContext(ctx context.Context) ClusterAnalysisTaskNodesOutput {
	return o
}

func (o ClusterAnalysisTaskNodesOutput) ToClusterAnalysisTaskNodesPtrOutput() ClusterAnalysisTaskNodesPtrOutput {
	return o.ToClusterAnalysisTaskNodesPtrOutputWithContext(context.Background())
}

func (o ClusterAnalysisTaskNodesOutput) ToClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisTaskNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAnalysisTaskNodes) *ClusterAnalysisTaskNodes {
		return &v
	}).(ClusterAnalysisTaskNodesPtrOutput)
}

func (o ClusterAnalysisTaskNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisTaskNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o ClusterAnalysisTaskNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisTaskNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisTaskNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o ClusterAnalysisTaskNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisTaskNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o ClusterAnalysisTaskNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o ClusterAnalysisTaskNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterAnalysisTaskNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type ClusterAnalysisTaskNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterAnalysisTaskNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAnalysisTaskNodes)(nil)).Elem()
}

func (o ClusterAnalysisTaskNodesPtrOutput) ToClusterAnalysisTaskNodesPtrOutput() ClusterAnalysisTaskNodesPtrOutput {
	return o
}

func (o ClusterAnalysisTaskNodesPtrOutput) ToClusterAnalysisTaskNodesPtrOutputWithContext(ctx context.Context) ClusterAnalysisTaskNodesPtrOutput {
	return o
}

func (o ClusterAnalysisTaskNodesPtrOutput) Elem() ClusterAnalysisTaskNodesOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) ClusterAnalysisTaskNodes {
		if v != nil {
			return *v
		}
		var ret ClusterAnalysisTaskNodes
		return ret
	}).(ClusterAnalysisTaskNodesOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterAnalysisTaskNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAnalysisTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type ClusterBootstrapScript struct {
	// Whether the bootstrap action script runs only on active master nodes.
	ActiveMaster *bool `pulumi:"activeMaster"`
	// Whether the bootstrap action script is executed before component start.
	BeforeComponentStart *bool `pulumi:"beforeComponentStart"`
	// Whether the bootstrap action script involves root user operations.
	ExecuteNeedSudoRoot *bool `pulumi:"executeNeedSudoRoot"`
	// The action after the bootstrap action script fails to be executed.
	FailAction string `pulumi:"failAction"`
	// Name of a bootstrap action script.
	Name string `pulumi:"name"`
	// Name of the node group where the bootstrap action script is executed.
	Nodes []string `pulumi:"nodes"`
	// Bootstrap action script parameters.
	Parameters *string `pulumi:"parameters"`
	// The execution time of one bootstrap action script, in RFC-3339 format.
	StartTime *string `pulumi:"startTime"`
	// The status of one bootstrap action script.
	State *string `pulumi:"state"`
	// Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.
	Uri string `pulumi:"uri"`
}

// ClusterBootstrapScriptInput is an input type that accepts ClusterBootstrapScriptArgs and ClusterBootstrapScriptOutput values.
// You can construct a concrete instance of `ClusterBootstrapScriptInput` via:
//
//	ClusterBootstrapScriptArgs{...}
type ClusterBootstrapScriptInput interface {
	pulumi.Input

	ToClusterBootstrapScriptOutput() ClusterBootstrapScriptOutput
	ToClusterBootstrapScriptOutputWithContext(context.Context) ClusterBootstrapScriptOutput
}

type ClusterBootstrapScriptArgs struct {
	// Whether the bootstrap action script runs only on active master nodes.
	ActiveMaster pulumi.BoolPtrInput `pulumi:"activeMaster"`
	// Whether the bootstrap action script is executed before component start.
	BeforeComponentStart pulumi.BoolPtrInput `pulumi:"beforeComponentStart"`
	// Whether the bootstrap action script involves root user operations.
	ExecuteNeedSudoRoot pulumi.BoolPtrInput `pulumi:"executeNeedSudoRoot"`
	// The action after the bootstrap action script fails to be executed.
	FailAction pulumi.StringInput `pulumi:"failAction"`
	// Name of a bootstrap action script.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the node group where the bootstrap action script is executed.
	Nodes pulumi.StringArrayInput `pulumi:"nodes"`
	// Bootstrap action script parameters.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
	// The execution time of one bootstrap action script, in RFC-3339 format.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The status of one bootstrap action script.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ClusterBootstrapScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBootstrapScript)(nil)).Elem()
}

func (i ClusterBootstrapScriptArgs) ToClusterBootstrapScriptOutput() ClusterBootstrapScriptOutput {
	return i.ToClusterBootstrapScriptOutputWithContext(context.Background())
}

func (i ClusterBootstrapScriptArgs) ToClusterBootstrapScriptOutputWithContext(ctx context.Context) ClusterBootstrapScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBootstrapScriptOutput)
}

// ClusterBootstrapScriptArrayInput is an input type that accepts ClusterBootstrapScriptArray and ClusterBootstrapScriptArrayOutput values.
// You can construct a concrete instance of `ClusterBootstrapScriptArrayInput` via:
//
//	ClusterBootstrapScriptArray{ ClusterBootstrapScriptArgs{...} }
type ClusterBootstrapScriptArrayInput interface {
	pulumi.Input

	ToClusterBootstrapScriptArrayOutput() ClusterBootstrapScriptArrayOutput
	ToClusterBootstrapScriptArrayOutputWithContext(context.Context) ClusterBootstrapScriptArrayOutput
}

type ClusterBootstrapScriptArray []ClusterBootstrapScriptInput

func (ClusterBootstrapScriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBootstrapScript)(nil)).Elem()
}

func (i ClusterBootstrapScriptArray) ToClusterBootstrapScriptArrayOutput() ClusterBootstrapScriptArrayOutput {
	return i.ToClusterBootstrapScriptArrayOutputWithContext(context.Background())
}

func (i ClusterBootstrapScriptArray) ToClusterBootstrapScriptArrayOutputWithContext(ctx context.Context) ClusterBootstrapScriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBootstrapScriptArrayOutput)
}

type ClusterBootstrapScriptOutput struct{ *pulumi.OutputState }

func (ClusterBootstrapScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBootstrapScript)(nil)).Elem()
}

func (o ClusterBootstrapScriptOutput) ToClusterBootstrapScriptOutput() ClusterBootstrapScriptOutput {
	return o
}

func (o ClusterBootstrapScriptOutput) ToClusterBootstrapScriptOutputWithContext(ctx context.Context) ClusterBootstrapScriptOutput {
	return o
}

// Whether the bootstrap action script runs only on active master nodes.
func (o ClusterBootstrapScriptOutput) ActiveMaster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) *bool { return v.ActiveMaster }).(pulumi.BoolPtrOutput)
}

// Whether the bootstrap action script is executed before component start.
func (o ClusterBootstrapScriptOutput) BeforeComponentStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) *bool { return v.BeforeComponentStart }).(pulumi.BoolPtrOutput)
}

// Whether the bootstrap action script involves root user operations.
func (o ClusterBootstrapScriptOutput) ExecuteNeedSudoRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) *bool { return v.ExecuteNeedSudoRoot }).(pulumi.BoolPtrOutput)
}

// The action after the bootstrap action script fails to be executed.
func (o ClusterBootstrapScriptOutput) FailAction() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) string { return v.FailAction }).(pulumi.StringOutput)
}

// Name of a bootstrap action script.
func (o ClusterBootstrapScriptOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the node group where the bootstrap action script is executed.
func (o ClusterBootstrapScriptOutput) Nodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) []string { return v.Nodes }).(pulumi.StringArrayOutput)
}

// Bootstrap action script parameters.
func (o ClusterBootstrapScriptOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

// The execution time of one bootstrap action script, in RFC-3339 format.
func (o ClusterBootstrapScriptOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The status of one bootstrap action script.
func (o ClusterBootstrapScriptOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Path of a bootstrap action script. Set this parameter to an OBS bucket path or a local VM path.
func (o ClusterBootstrapScriptOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBootstrapScript) string { return v.Uri }).(pulumi.StringOutput)
}

type ClusterBootstrapScriptArrayOutput struct{ *pulumi.OutputState }

func (ClusterBootstrapScriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterBootstrapScript)(nil)).Elem()
}

func (o ClusterBootstrapScriptArrayOutput) ToClusterBootstrapScriptArrayOutput() ClusterBootstrapScriptArrayOutput {
	return o
}

func (o ClusterBootstrapScriptArrayOutput) ToClusterBootstrapScriptArrayOutputWithContext(ctx context.Context) ClusterBootstrapScriptArrayOutput {
	return o
}

func (o ClusterBootstrapScriptArrayOutput) Index(i pulumi.IntInput) ClusterBootstrapScriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterBootstrapScript {
		return vs[0].([]ClusterBootstrapScript)[vs[1].(int)]
	}).(ClusterBootstrapScriptOutput)
}

type ClusterComponentConfig struct {
	Configs []ClusterComponentConfigConfig `pulumi:"configs"`
	Name    string                         `pulumi:"name"`
}

// ClusterComponentConfigInput is an input type that accepts ClusterComponentConfigArgs and ClusterComponentConfigOutput values.
// You can construct a concrete instance of `ClusterComponentConfigInput` via:
//
//	ClusterComponentConfigArgs{...}
type ClusterComponentConfigInput interface {
	pulumi.Input

	ToClusterComponentConfigOutput() ClusterComponentConfigOutput
	ToClusterComponentConfigOutputWithContext(context.Context) ClusterComponentConfigOutput
}

type ClusterComponentConfigArgs struct {
	Configs ClusterComponentConfigConfigArrayInput `pulumi:"configs"`
	Name    pulumi.StringInput                     `pulumi:"name"`
}

func (ClusterComponentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterComponentConfig)(nil)).Elem()
}

func (i ClusterComponentConfigArgs) ToClusterComponentConfigOutput() ClusterComponentConfigOutput {
	return i.ToClusterComponentConfigOutputWithContext(context.Background())
}

func (i ClusterComponentConfigArgs) ToClusterComponentConfigOutputWithContext(ctx context.Context) ClusterComponentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterComponentConfigOutput)
}

// ClusterComponentConfigArrayInput is an input type that accepts ClusterComponentConfigArray and ClusterComponentConfigArrayOutput values.
// You can construct a concrete instance of `ClusterComponentConfigArrayInput` via:
//
//	ClusterComponentConfigArray{ ClusterComponentConfigArgs{...} }
type ClusterComponentConfigArrayInput interface {
	pulumi.Input

	ToClusterComponentConfigArrayOutput() ClusterComponentConfigArrayOutput
	ToClusterComponentConfigArrayOutputWithContext(context.Context) ClusterComponentConfigArrayOutput
}

type ClusterComponentConfigArray []ClusterComponentConfigInput

func (ClusterComponentConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterComponentConfig)(nil)).Elem()
}

func (i ClusterComponentConfigArray) ToClusterComponentConfigArrayOutput() ClusterComponentConfigArrayOutput {
	return i.ToClusterComponentConfigArrayOutputWithContext(context.Background())
}

func (i ClusterComponentConfigArray) ToClusterComponentConfigArrayOutputWithContext(ctx context.Context) ClusterComponentConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterComponentConfigArrayOutput)
}

type ClusterComponentConfigOutput struct{ *pulumi.OutputState }

func (ClusterComponentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterComponentConfig)(nil)).Elem()
}

func (o ClusterComponentConfigOutput) ToClusterComponentConfigOutput() ClusterComponentConfigOutput {
	return o
}

func (o ClusterComponentConfigOutput) ToClusterComponentConfigOutputWithContext(ctx context.Context) ClusterComponentConfigOutput {
	return o
}

func (o ClusterComponentConfigOutput) Configs() ClusterComponentConfigConfigArrayOutput {
	return o.ApplyT(func(v ClusterComponentConfig) []ClusterComponentConfigConfig { return v.Configs }).(ClusterComponentConfigConfigArrayOutput)
}

func (o ClusterComponentConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterComponentConfig) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterComponentConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterComponentConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterComponentConfig)(nil)).Elem()
}

func (o ClusterComponentConfigArrayOutput) ToClusterComponentConfigArrayOutput() ClusterComponentConfigArrayOutput {
	return o
}

func (o ClusterComponentConfigArrayOutput) ToClusterComponentConfigArrayOutputWithContext(ctx context.Context) ClusterComponentConfigArrayOutput {
	return o
}

func (o ClusterComponentConfigArrayOutput) Index(i pulumi.IntInput) ClusterComponentConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterComponentConfig {
		return vs[0].([]ClusterComponentConfig)[vs[1].(int)]
	}).(ClusterComponentConfigOutput)
}

type ClusterComponentConfigConfig struct {
	ConfigFileName string `pulumi:"configFileName"`
	Key            string `pulumi:"key"`
	Value          string `pulumi:"value"`
}

// ClusterComponentConfigConfigInput is an input type that accepts ClusterComponentConfigConfigArgs and ClusterComponentConfigConfigOutput values.
// You can construct a concrete instance of `ClusterComponentConfigConfigInput` via:
//
//	ClusterComponentConfigConfigArgs{...}
type ClusterComponentConfigConfigInput interface {
	pulumi.Input

	ToClusterComponentConfigConfigOutput() ClusterComponentConfigConfigOutput
	ToClusterComponentConfigConfigOutputWithContext(context.Context) ClusterComponentConfigConfigOutput
}

type ClusterComponentConfigConfigArgs struct {
	ConfigFileName pulumi.StringInput `pulumi:"configFileName"`
	Key            pulumi.StringInput `pulumi:"key"`
	Value          pulumi.StringInput `pulumi:"value"`
}

func (ClusterComponentConfigConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterComponentConfigConfig)(nil)).Elem()
}

func (i ClusterComponentConfigConfigArgs) ToClusterComponentConfigConfigOutput() ClusterComponentConfigConfigOutput {
	return i.ToClusterComponentConfigConfigOutputWithContext(context.Background())
}

func (i ClusterComponentConfigConfigArgs) ToClusterComponentConfigConfigOutputWithContext(ctx context.Context) ClusterComponentConfigConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterComponentConfigConfigOutput)
}

// ClusterComponentConfigConfigArrayInput is an input type that accepts ClusterComponentConfigConfigArray and ClusterComponentConfigConfigArrayOutput values.
// You can construct a concrete instance of `ClusterComponentConfigConfigArrayInput` via:
//
//	ClusterComponentConfigConfigArray{ ClusterComponentConfigConfigArgs{...} }
type ClusterComponentConfigConfigArrayInput interface {
	pulumi.Input

	ToClusterComponentConfigConfigArrayOutput() ClusterComponentConfigConfigArrayOutput
	ToClusterComponentConfigConfigArrayOutputWithContext(context.Context) ClusterComponentConfigConfigArrayOutput
}

type ClusterComponentConfigConfigArray []ClusterComponentConfigConfigInput

func (ClusterComponentConfigConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterComponentConfigConfig)(nil)).Elem()
}

func (i ClusterComponentConfigConfigArray) ToClusterComponentConfigConfigArrayOutput() ClusterComponentConfigConfigArrayOutput {
	return i.ToClusterComponentConfigConfigArrayOutputWithContext(context.Background())
}

func (i ClusterComponentConfigConfigArray) ToClusterComponentConfigConfigArrayOutputWithContext(ctx context.Context) ClusterComponentConfigConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterComponentConfigConfigArrayOutput)
}

type ClusterComponentConfigConfigOutput struct{ *pulumi.OutputState }

func (ClusterComponentConfigConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterComponentConfigConfig)(nil)).Elem()
}

func (o ClusterComponentConfigConfigOutput) ToClusterComponentConfigConfigOutput() ClusterComponentConfigConfigOutput {
	return o
}

func (o ClusterComponentConfigConfigOutput) ToClusterComponentConfigConfigOutputWithContext(ctx context.Context) ClusterComponentConfigConfigOutput {
	return o
}

func (o ClusterComponentConfigConfigOutput) ConfigFileName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterComponentConfigConfig) string { return v.ConfigFileName }).(pulumi.StringOutput)
}

func (o ClusterComponentConfigConfigOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterComponentConfigConfig) string { return v.Key }).(pulumi.StringOutput)
}

func (o ClusterComponentConfigConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterComponentConfigConfig) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterComponentConfigConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterComponentConfigConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterComponentConfigConfig)(nil)).Elem()
}

func (o ClusterComponentConfigConfigArrayOutput) ToClusterComponentConfigConfigArrayOutput() ClusterComponentConfigConfigArrayOutput {
	return o
}

func (o ClusterComponentConfigConfigArrayOutput) ToClusterComponentConfigConfigArrayOutputWithContext(ctx context.Context) ClusterComponentConfigConfigArrayOutput {
	return o
}

func (o ClusterComponentConfigConfigArrayOutput) Index(i pulumi.IntInput) ClusterComponentConfigConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterComponentConfigConfig {
		return vs[0].([]ClusterComponentConfigConfig)[vs[1].(int)]
	}).(ClusterComponentConfigConfigOutput)
}

type ClusterCustomNode struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	AutoRenew       *string  `pulumi:"autoRenew"`
	ChargingMode    *string  `pulumi:"chargingMode"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	GroupName       string   `pulumi:"groupName"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	Period          *int     `pulumi:"period"`
	PeriodUnit      *string  `pulumi:"periodUnit"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// ClusterCustomNodeInput is an input type that accepts ClusterCustomNodeArgs and ClusterCustomNodeOutput values.
// You can construct a concrete instance of `ClusterCustomNodeInput` via:
//
//	ClusterCustomNodeArgs{...}
type ClusterCustomNodeInput interface {
	pulumi.Input

	ToClusterCustomNodeOutput() ClusterCustomNodeOutput
	ToClusterCustomNodeOutputWithContext(context.Context) ClusterCustomNodeOutput
}

type ClusterCustomNodeArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	AutoRenew       pulumi.StringPtrInput   `pulumi:"autoRenew"`
	ChargingMode    pulumi.StringPtrInput   `pulumi:"chargingMode"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	GroupName       pulumi.StringInput      `pulumi:"groupName"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	Period          pulumi.IntPtrInput      `pulumi:"period"`
	PeriodUnit      pulumi.StringPtrInput   `pulumi:"periodUnit"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (ClusterCustomNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCustomNode)(nil)).Elem()
}

func (i ClusterCustomNodeArgs) ToClusterCustomNodeOutput() ClusterCustomNodeOutput {
	return i.ToClusterCustomNodeOutputWithContext(context.Background())
}

func (i ClusterCustomNodeArgs) ToClusterCustomNodeOutputWithContext(ctx context.Context) ClusterCustomNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCustomNodeOutput)
}

// ClusterCustomNodeArrayInput is an input type that accepts ClusterCustomNodeArray and ClusterCustomNodeArrayOutput values.
// You can construct a concrete instance of `ClusterCustomNodeArrayInput` via:
//
//	ClusterCustomNodeArray{ ClusterCustomNodeArgs{...} }
type ClusterCustomNodeArrayInput interface {
	pulumi.Input

	ToClusterCustomNodeArrayOutput() ClusterCustomNodeArrayOutput
	ToClusterCustomNodeArrayOutputWithContext(context.Context) ClusterCustomNodeArrayOutput
}

type ClusterCustomNodeArray []ClusterCustomNodeInput

func (ClusterCustomNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCustomNode)(nil)).Elem()
}

func (i ClusterCustomNodeArray) ToClusterCustomNodeArrayOutput() ClusterCustomNodeArrayOutput {
	return i.ToClusterCustomNodeArrayOutputWithContext(context.Background())
}

func (i ClusterCustomNodeArray) ToClusterCustomNodeArrayOutputWithContext(ctx context.Context) ClusterCustomNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCustomNodeArrayOutput)
}

type ClusterCustomNodeOutput struct{ *pulumi.OutputState }

func (ClusterCustomNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCustomNode)(nil)).Elem()
}

func (o ClusterCustomNodeOutput) ToClusterCustomNodeOutput() ClusterCustomNodeOutput {
	return o
}

func (o ClusterCustomNodeOutput) ToClusterCustomNodeOutputWithContext(ctx context.Context) ClusterCustomNodeOutput {
	return o
}

func (o ClusterCustomNodeOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterCustomNode) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o ClusterCustomNodeOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCustomNode) *string { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o ClusterCustomNodeOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCustomNode) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o ClusterCustomNodeOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterCustomNode) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o ClusterCustomNodeOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCustomNode) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterCustomNodeOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCustomNode) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o ClusterCustomNodeOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCustomNode) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o ClusterCustomNodeOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCustomNode) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o ClusterCustomNodeOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterCustomNode) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o ClusterCustomNodeOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterCustomNode) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o ClusterCustomNodeOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCustomNode) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o ClusterCustomNodeOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCustomNode) *string { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterCustomNodeOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterCustomNode) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o ClusterCustomNodeOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCustomNode) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type ClusterCustomNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterCustomNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCustomNode)(nil)).Elem()
}

func (o ClusterCustomNodeArrayOutput) ToClusterCustomNodeArrayOutput() ClusterCustomNodeArrayOutput {
	return o
}

func (o ClusterCustomNodeArrayOutput) ToClusterCustomNodeArrayOutputWithContext(ctx context.Context) ClusterCustomNodeArrayOutput {
	return o
}

func (o ClusterCustomNodeArrayOutput) Index(i pulumi.IntInput) ClusterCustomNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCustomNode {
		return vs[0].([]ClusterCustomNode)[vs[1].(int)]
	}).(ClusterCustomNodeOutput)
}

type ClusterExternalDatasource struct {
	ComponentName    string  `pulumi:"componentName"`
	DataConnectionId *string `pulumi:"dataConnectionId"`
	RoleType         string  `pulumi:"roleType"`
	SourceType       string  `pulumi:"sourceType"`
}

// ClusterExternalDatasourceInput is an input type that accepts ClusterExternalDatasourceArgs and ClusterExternalDatasourceOutput values.
// You can construct a concrete instance of `ClusterExternalDatasourceInput` via:
//
//	ClusterExternalDatasourceArgs{...}
type ClusterExternalDatasourceInput interface {
	pulumi.Input

	ToClusterExternalDatasourceOutput() ClusterExternalDatasourceOutput
	ToClusterExternalDatasourceOutputWithContext(context.Context) ClusterExternalDatasourceOutput
}

type ClusterExternalDatasourceArgs struct {
	ComponentName    pulumi.StringInput    `pulumi:"componentName"`
	DataConnectionId pulumi.StringPtrInput `pulumi:"dataConnectionId"`
	RoleType         pulumi.StringInput    `pulumi:"roleType"`
	SourceType       pulumi.StringInput    `pulumi:"sourceType"`
}

func (ClusterExternalDatasourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExternalDatasource)(nil)).Elem()
}

func (i ClusterExternalDatasourceArgs) ToClusterExternalDatasourceOutput() ClusterExternalDatasourceOutput {
	return i.ToClusterExternalDatasourceOutputWithContext(context.Background())
}

func (i ClusterExternalDatasourceArgs) ToClusterExternalDatasourceOutputWithContext(ctx context.Context) ClusterExternalDatasourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExternalDatasourceOutput)
}

// ClusterExternalDatasourceArrayInput is an input type that accepts ClusterExternalDatasourceArray and ClusterExternalDatasourceArrayOutput values.
// You can construct a concrete instance of `ClusterExternalDatasourceArrayInput` via:
//
//	ClusterExternalDatasourceArray{ ClusterExternalDatasourceArgs{...} }
type ClusterExternalDatasourceArrayInput interface {
	pulumi.Input

	ToClusterExternalDatasourceArrayOutput() ClusterExternalDatasourceArrayOutput
	ToClusterExternalDatasourceArrayOutputWithContext(context.Context) ClusterExternalDatasourceArrayOutput
}

type ClusterExternalDatasourceArray []ClusterExternalDatasourceInput

func (ClusterExternalDatasourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterExternalDatasource)(nil)).Elem()
}

func (i ClusterExternalDatasourceArray) ToClusterExternalDatasourceArrayOutput() ClusterExternalDatasourceArrayOutput {
	return i.ToClusterExternalDatasourceArrayOutputWithContext(context.Background())
}

func (i ClusterExternalDatasourceArray) ToClusterExternalDatasourceArrayOutputWithContext(ctx context.Context) ClusterExternalDatasourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExternalDatasourceArrayOutput)
}

type ClusterExternalDatasourceOutput struct{ *pulumi.OutputState }

func (ClusterExternalDatasourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterExternalDatasource)(nil)).Elem()
}

func (o ClusterExternalDatasourceOutput) ToClusterExternalDatasourceOutput() ClusterExternalDatasourceOutput {
	return o
}

func (o ClusterExternalDatasourceOutput) ToClusterExternalDatasourceOutputWithContext(ctx context.Context) ClusterExternalDatasourceOutput {
	return o
}

func (o ClusterExternalDatasourceOutput) ComponentName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterExternalDatasource) string { return v.ComponentName }).(pulumi.StringOutput)
}

func (o ClusterExternalDatasourceOutput) DataConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterExternalDatasource) *string { return v.DataConnectionId }).(pulumi.StringPtrOutput)
}

func (o ClusterExternalDatasourceOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterExternalDatasource) string { return v.RoleType }).(pulumi.StringOutput)
}

func (o ClusterExternalDatasourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterExternalDatasource) string { return v.SourceType }).(pulumi.StringOutput)
}

type ClusterExternalDatasourceArrayOutput struct{ *pulumi.OutputState }

func (ClusterExternalDatasourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterExternalDatasource)(nil)).Elem()
}

func (o ClusterExternalDatasourceArrayOutput) ToClusterExternalDatasourceArrayOutput() ClusterExternalDatasourceArrayOutput {
	return o
}

func (o ClusterExternalDatasourceArrayOutput) ToClusterExternalDatasourceArrayOutputWithContext(ctx context.Context) ClusterExternalDatasourceArrayOutput {
	return o
}

func (o ClusterExternalDatasourceArrayOutput) Index(i pulumi.IntInput) ClusterExternalDatasourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterExternalDatasource {
		return vs[0].([]ClusterExternalDatasource)[vs[1].(int)]
	}).(ClusterExternalDatasourceOutput)
}

type ClusterMasterNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	AutoRenew       *string  `pulumi:"autoRenew"`
	ChargingMode    *string  `pulumi:"chargingMode"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	Period          *int     `pulumi:"period"`
	PeriodUnit      *string  `pulumi:"periodUnit"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// ClusterMasterNodesInput is an input type that accepts ClusterMasterNodesArgs and ClusterMasterNodesOutput values.
// You can construct a concrete instance of `ClusterMasterNodesInput` via:
//
//	ClusterMasterNodesArgs{...}
type ClusterMasterNodesInput interface {
	pulumi.Input

	ToClusterMasterNodesOutput() ClusterMasterNodesOutput
	ToClusterMasterNodesOutputWithContext(context.Context) ClusterMasterNodesOutput
}

type ClusterMasterNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	AutoRenew       pulumi.StringPtrInput   `pulumi:"autoRenew"`
	ChargingMode    pulumi.StringPtrInput   `pulumi:"chargingMode"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	Period          pulumi.IntPtrInput      `pulumi:"period"`
	PeriodUnit      pulumi.StringPtrInput   `pulumi:"periodUnit"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (ClusterMasterNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterNodes)(nil)).Elem()
}

func (i ClusterMasterNodesArgs) ToClusterMasterNodesOutput() ClusterMasterNodesOutput {
	return i.ToClusterMasterNodesOutputWithContext(context.Background())
}

func (i ClusterMasterNodesArgs) ToClusterMasterNodesOutputWithContext(ctx context.Context) ClusterMasterNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterNodesOutput)
}

func (i ClusterMasterNodesArgs) ToClusterMasterNodesPtrOutput() ClusterMasterNodesPtrOutput {
	return i.ToClusterMasterNodesPtrOutputWithContext(context.Background())
}

func (i ClusterMasterNodesArgs) ToClusterMasterNodesPtrOutputWithContext(ctx context.Context) ClusterMasterNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterNodesOutput).ToClusterMasterNodesPtrOutputWithContext(ctx)
}

// ClusterMasterNodesPtrInput is an input type that accepts ClusterMasterNodesArgs, ClusterMasterNodesPtr and ClusterMasterNodesPtrOutput values.
// You can construct a concrete instance of `ClusterMasterNodesPtrInput` via:
//
//	        ClusterMasterNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterMasterNodesPtrInput interface {
	pulumi.Input

	ToClusterMasterNodesPtrOutput() ClusterMasterNodesPtrOutput
	ToClusterMasterNodesPtrOutputWithContext(context.Context) ClusterMasterNodesPtrOutput
}

type clusterMasterNodesPtrType ClusterMasterNodesArgs

func ClusterMasterNodesPtr(v *ClusterMasterNodesArgs) ClusterMasterNodesPtrInput {
	return (*clusterMasterNodesPtrType)(v)
}

func (*clusterMasterNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterNodes)(nil)).Elem()
}

func (i *clusterMasterNodesPtrType) ToClusterMasterNodesPtrOutput() ClusterMasterNodesPtrOutput {
	return i.ToClusterMasterNodesPtrOutputWithContext(context.Background())
}

func (i *clusterMasterNodesPtrType) ToClusterMasterNodesPtrOutputWithContext(ctx context.Context) ClusterMasterNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterNodesPtrOutput)
}

type ClusterMasterNodesOutput struct{ *pulumi.OutputState }

func (ClusterMasterNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterNodes)(nil)).Elem()
}

func (o ClusterMasterNodesOutput) ToClusterMasterNodesOutput() ClusterMasterNodesOutput {
	return o
}

func (o ClusterMasterNodesOutput) ToClusterMasterNodesOutputWithContext(ctx context.Context) ClusterMasterNodesOutput {
	return o
}

func (o ClusterMasterNodesOutput) ToClusterMasterNodesPtrOutput() ClusterMasterNodesPtrOutput {
	return o.ToClusterMasterNodesPtrOutputWithContext(context.Background())
}

func (o ClusterMasterNodesOutput) ToClusterMasterNodesPtrOutputWithContext(ctx context.Context) ClusterMasterNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterMasterNodes) *ClusterMasterNodes {
		return &v
	}).(ClusterMasterNodesPtrOutput)
}

func (o ClusterMasterNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterMasterNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o ClusterMasterNodesOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterNodes) *string { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterNodes) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterMasterNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o ClusterMasterNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o ClusterMasterNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterMasterNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o ClusterMasterNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterMasterNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o ClusterMasterNodesOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterMasterNodes) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterNodes) *string { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterMasterNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o ClusterMasterNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMasterNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type ClusterMasterNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterMasterNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMasterNodes)(nil)).Elem()
}

func (o ClusterMasterNodesPtrOutput) ToClusterMasterNodesPtrOutput() ClusterMasterNodesPtrOutput {
	return o
}

func (o ClusterMasterNodesPtrOutput) ToClusterMasterNodesPtrOutputWithContext(ctx context.Context) ClusterMasterNodesPtrOutput {
	return o
}

func (o ClusterMasterNodesPtrOutput) Elem() ClusterMasterNodesOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) ClusterMasterNodes {
		if v != nil {
			return *v
		}
		var ret ClusterMasterNodes
		return ret
	}).(ClusterMasterNodesOutput)
}

func (o ClusterMasterNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o ClusterMasterNodesPtrOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o ClusterMasterNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return v.PeriodUnit
	}).(pulumi.StringPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterMasterNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMasterNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type ClusterSmnNotify struct {
	// The subscription rule name.
	SubscriptionName string `pulumi:"subscriptionName"`
	// The Uniform Resource Name (URN) of the topic.
	TopicUrn string `pulumi:"topicUrn"`
}

// ClusterSmnNotifyInput is an input type that accepts ClusterSmnNotifyArgs and ClusterSmnNotifyOutput values.
// You can construct a concrete instance of `ClusterSmnNotifyInput` via:
//
//	ClusterSmnNotifyArgs{...}
type ClusterSmnNotifyInput interface {
	pulumi.Input

	ToClusterSmnNotifyOutput() ClusterSmnNotifyOutput
	ToClusterSmnNotifyOutputWithContext(context.Context) ClusterSmnNotifyOutput
}

type ClusterSmnNotifyArgs struct {
	// The subscription rule name.
	SubscriptionName pulumi.StringInput `pulumi:"subscriptionName"`
	// The Uniform Resource Name (URN) of the topic.
	TopicUrn pulumi.StringInput `pulumi:"topicUrn"`
}

func (ClusterSmnNotifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSmnNotify)(nil)).Elem()
}

func (i ClusterSmnNotifyArgs) ToClusterSmnNotifyOutput() ClusterSmnNotifyOutput {
	return i.ToClusterSmnNotifyOutputWithContext(context.Background())
}

func (i ClusterSmnNotifyArgs) ToClusterSmnNotifyOutputWithContext(ctx context.Context) ClusterSmnNotifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSmnNotifyOutput)
}

func (i ClusterSmnNotifyArgs) ToClusterSmnNotifyPtrOutput() ClusterSmnNotifyPtrOutput {
	return i.ToClusterSmnNotifyPtrOutputWithContext(context.Background())
}

func (i ClusterSmnNotifyArgs) ToClusterSmnNotifyPtrOutputWithContext(ctx context.Context) ClusterSmnNotifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSmnNotifyOutput).ToClusterSmnNotifyPtrOutputWithContext(ctx)
}

// ClusterSmnNotifyPtrInput is an input type that accepts ClusterSmnNotifyArgs, ClusterSmnNotifyPtr and ClusterSmnNotifyPtrOutput values.
// You can construct a concrete instance of `ClusterSmnNotifyPtrInput` via:
//
//	        ClusterSmnNotifyArgs{...}
//
//	or:
//
//	        nil
type ClusterSmnNotifyPtrInput interface {
	pulumi.Input

	ToClusterSmnNotifyPtrOutput() ClusterSmnNotifyPtrOutput
	ToClusterSmnNotifyPtrOutputWithContext(context.Context) ClusterSmnNotifyPtrOutput
}

type clusterSmnNotifyPtrType ClusterSmnNotifyArgs

func ClusterSmnNotifyPtr(v *ClusterSmnNotifyArgs) ClusterSmnNotifyPtrInput {
	return (*clusterSmnNotifyPtrType)(v)
}

func (*clusterSmnNotifyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSmnNotify)(nil)).Elem()
}

func (i *clusterSmnNotifyPtrType) ToClusterSmnNotifyPtrOutput() ClusterSmnNotifyPtrOutput {
	return i.ToClusterSmnNotifyPtrOutputWithContext(context.Background())
}

func (i *clusterSmnNotifyPtrType) ToClusterSmnNotifyPtrOutputWithContext(ctx context.Context) ClusterSmnNotifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSmnNotifyPtrOutput)
}

type ClusterSmnNotifyOutput struct{ *pulumi.OutputState }

func (ClusterSmnNotifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSmnNotify)(nil)).Elem()
}

func (o ClusterSmnNotifyOutput) ToClusterSmnNotifyOutput() ClusterSmnNotifyOutput {
	return o
}

func (o ClusterSmnNotifyOutput) ToClusterSmnNotifyOutputWithContext(ctx context.Context) ClusterSmnNotifyOutput {
	return o
}

func (o ClusterSmnNotifyOutput) ToClusterSmnNotifyPtrOutput() ClusterSmnNotifyPtrOutput {
	return o.ToClusterSmnNotifyPtrOutputWithContext(context.Background())
}

func (o ClusterSmnNotifyOutput) ToClusterSmnNotifyPtrOutputWithContext(ctx context.Context) ClusterSmnNotifyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSmnNotify) *ClusterSmnNotify {
		return &v
	}).(ClusterSmnNotifyPtrOutput)
}

// The subscription rule name.
func (o ClusterSmnNotifyOutput) SubscriptionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSmnNotify) string { return v.SubscriptionName }).(pulumi.StringOutput)
}

// The Uniform Resource Name (URN) of the topic.
func (o ClusterSmnNotifyOutput) TopicUrn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSmnNotify) string { return v.TopicUrn }).(pulumi.StringOutput)
}

type ClusterSmnNotifyPtrOutput struct{ *pulumi.OutputState }

func (ClusterSmnNotifyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSmnNotify)(nil)).Elem()
}

func (o ClusterSmnNotifyPtrOutput) ToClusterSmnNotifyPtrOutput() ClusterSmnNotifyPtrOutput {
	return o
}

func (o ClusterSmnNotifyPtrOutput) ToClusterSmnNotifyPtrOutputWithContext(ctx context.Context) ClusterSmnNotifyPtrOutput {
	return o
}

func (o ClusterSmnNotifyPtrOutput) Elem() ClusterSmnNotifyOutput {
	return o.ApplyT(func(v *ClusterSmnNotify) ClusterSmnNotify {
		if v != nil {
			return *v
		}
		var ret ClusterSmnNotify
		return ret
	}).(ClusterSmnNotifyOutput)
}

// The subscription rule name.
func (o ClusterSmnNotifyPtrOutput) SubscriptionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSmnNotify) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionName
	}).(pulumi.StringPtrOutput)
}

// The Uniform Resource Name (URN) of the topic.
func (o ClusterSmnNotifyPtrOutput) TopicUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSmnNotify) *string {
		if v == nil {
			return nil
		}
		return &v.TopicUrn
	}).(pulumi.StringPtrOutput)
}

type ClusterStreamingCoreNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	AutoRenew       *string  `pulumi:"autoRenew"`
	ChargingMode    *string  `pulumi:"chargingMode"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	Period          *int     `pulumi:"period"`
	PeriodUnit      *string  `pulumi:"periodUnit"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// ClusterStreamingCoreNodesInput is an input type that accepts ClusterStreamingCoreNodesArgs and ClusterStreamingCoreNodesOutput values.
// You can construct a concrete instance of `ClusterStreamingCoreNodesInput` via:
//
//	ClusterStreamingCoreNodesArgs{...}
type ClusterStreamingCoreNodesInput interface {
	pulumi.Input

	ToClusterStreamingCoreNodesOutput() ClusterStreamingCoreNodesOutput
	ToClusterStreamingCoreNodesOutputWithContext(context.Context) ClusterStreamingCoreNodesOutput
}

type ClusterStreamingCoreNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	AutoRenew       pulumi.StringPtrInput   `pulumi:"autoRenew"`
	ChargingMode    pulumi.StringPtrInput   `pulumi:"chargingMode"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	Period          pulumi.IntPtrInput      `pulumi:"period"`
	PeriodUnit      pulumi.StringPtrInput   `pulumi:"periodUnit"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (ClusterStreamingCoreNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStreamingCoreNodes)(nil)).Elem()
}

func (i ClusterStreamingCoreNodesArgs) ToClusterStreamingCoreNodesOutput() ClusterStreamingCoreNodesOutput {
	return i.ToClusterStreamingCoreNodesOutputWithContext(context.Background())
}

func (i ClusterStreamingCoreNodesArgs) ToClusterStreamingCoreNodesOutputWithContext(ctx context.Context) ClusterStreamingCoreNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStreamingCoreNodesOutput)
}

func (i ClusterStreamingCoreNodesArgs) ToClusterStreamingCoreNodesPtrOutput() ClusterStreamingCoreNodesPtrOutput {
	return i.ToClusterStreamingCoreNodesPtrOutputWithContext(context.Background())
}

func (i ClusterStreamingCoreNodesArgs) ToClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStreamingCoreNodesOutput).ToClusterStreamingCoreNodesPtrOutputWithContext(ctx)
}

// ClusterStreamingCoreNodesPtrInput is an input type that accepts ClusterStreamingCoreNodesArgs, ClusterStreamingCoreNodesPtr and ClusterStreamingCoreNodesPtrOutput values.
// You can construct a concrete instance of `ClusterStreamingCoreNodesPtrInput` via:
//
//	        ClusterStreamingCoreNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterStreamingCoreNodesPtrInput interface {
	pulumi.Input

	ToClusterStreamingCoreNodesPtrOutput() ClusterStreamingCoreNodesPtrOutput
	ToClusterStreamingCoreNodesPtrOutputWithContext(context.Context) ClusterStreamingCoreNodesPtrOutput
}

type clusterStreamingCoreNodesPtrType ClusterStreamingCoreNodesArgs

func ClusterStreamingCoreNodesPtr(v *ClusterStreamingCoreNodesArgs) ClusterStreamingCoreNodesPtrInput {
	return (*clusterStreamingCoreNodesPtrType)(v)
}

func (*clusterStreamingCoreNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStreamingCoreNodes)(nil)).Elem()
}

func (i *clusterStreamingCoreNodesPtrType) ToClusterStreamingCoreNodesPtrOutput() ClusterStreamingCoreNodesPtrOutput {
	return i.ToClusterStreamingCoreNodesPtrOutputWithContext(context.Background())
}

func (i *clusterStreamingCoreNodesPtrType) ToClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingCoreNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStreamingCoreNodesPtrOutput)
}

type ClusterStreamingCoreNodesOutput struct{ *pulumi.OutputState }

func (ClusterStreamingCoreNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStreamingCoreNodes)(nil)).Elem()
}

func (o ClusterStreamingCoreNodesOutput) ToClusterStreamingCoreNodesOutput() ClusterStreamingCoreNodesOutput {
	return o
}

func (o ClusterStreamingCoreNodesOutput) ToClusterStreamingCoreNodesOutputWithContext(ctx context.Context) ClusterStreamingCoreNodesOutput {
	return o
}

func (o ClusterStreamingCoreNodesOutput) ToClusterStreamingCoreNodesPtrOutput() ClusterStreamingCoreNodesPtrOutput {
	return o.ToClusterStreamingCoreNodesPtrOutputWithContext(context.Background())
}

func (o ClusterStreamingCoreNodesOutput) ToClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingCoreNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStreamingCoreNodes) *ClusterStreamingCoreNodes {
		return &v
	}).(ClusterStreamingCoreNodesPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingCoreNodesOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) *string { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o ClusterStreamingCoreNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o ClusterStreamingCoreNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingCoreNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o ClusterStreamingCoreNodesOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) *string { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o ClusterStreamingCoreNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStreamingCoreNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type ClusterStreamingCoreNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterStreamingCoreNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStreamingCoreNodes)(nil)).Elem()
}

func (o ClusterStreamingCoreNodesPtrOutput) ToClusterStreamingCoreNodesPtrOutput() ClusterStreamingCoreNodesPtrOutput {
	return o
}

func (o ClusterStreamingCoreNodesPtrOutput) ToClusterStreamingCoreNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingCoreNodesPtrOutput {
	return o
}

func (o ClusterStreamingCoreNodesPtrOutput) Elem() ClusterStreamingCoreNodesOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) ClusterStreamingCoreNodes {
		if v != nil {
			return *v
		}
		var ret ClusterStreamingCoreNodes
		return ret
	}).(ClusterStreamingCoreNodesOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.AutoRenew
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return v.PeriodUnit
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingCoreNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingCoreNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

type ClusterStreamingTaskNodes struct {
	AssignedRoles   []string `pulumi:"assignedRoles"`
	DataVolumeCount int      `pulumi:"dataVolumeCount"`
	DataVolumeSize  *int     `pulumi:"dataVolumeSize"`
	DataVolumeType  *string  `pulumi:"dataVolumeType"`
	Flavor          string   `pulumi:"flavor"`
	HostIps         []string `pulumi:"hostIps"`
	NodeNumber      int      `pulumi:"nodeNumber"`
	RootVolumeSize  int      `pulumi:"rootVolumeSize"`
	RootVolumeType  string   `pulumi:"rootVolumeType"`
}

// ClusterStreamingTaskNodesInput is an input type that accepts ClusterStreamingTaskNodesArgs and ClusterStreamingTaskNodesOutput values.
// You can construct a concrete instance of `ClusterStreamingTaskNodesInput` via:
//
//	ClusterStreamingTaskNodesArgs{...}
type ClusterStreamingTaskNodesInput interface {
	pulumi.Input

	ToClusterStreamingTaskNodesOutput() ClusterStreamingTaskNodesOutput
	ToClusterStreamingTaskNodesOutputWithContext(context.Context) ClusterStreamingTaskNodesOutput
}

type ClusterStreamingTaskNodesArgs struct {
	AssignedRoles   pulumi.StringArrayInput `pulumi:"assignedRoles"`
	DataVolumeCount pulumi.IntInput         `pulumi:"dataVolumeCount"`
	DataVolumeSize  pulumi.IntPtrInput      `pulumi:"dataVolumeSize"`
	DataVolumeType  pulumi.StringPtrInput   `pulumi:"dataVolumeType"`
	Flavor          pulumi.StringInput      `pulumi:"flavor"`
	HostIps         pulumi.StringArrayInput `pulumi:"hostIps"`
	NodeNumber      pulumi.IntInput         `pulumi:"nodeNumber"`
	RootVolumeSize  pulumi.IntInput         `pulumi:"rootVolumeSize"`
	RootVolumeType  pulumi.StringInput      `pulumi:"rootVolumeType"`
}

func (ClusterStreamingTaskNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStreamingTaskNodes)(nil)).Elem()
}

func (i ClusterStreamingTaskNodesArgs) ToClusterStreamingTaskNodesOutput() ClusterStreamingTaskNodesOutput {
	return i.ToClusterStreamingTaskNodesOutputWithContext(context.Background())
}

func (i ClusterStreamingTaskNodesArgs) ToClusterStreamingTaskNodesOutputWithContext(ctx context.Context) ClusterStreamingTaskNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStreamingTaskNodesOutput)
}

func (i ClusterStreamingTaskNodesArgs) ToClusterStreamingTaskNodesPtrOutput() ClusterStreamingTaskNodesPtrOutput {
	return i.ToClusterStreamingTaskNodesPtrOutputWithContext(context.Background())
}

func (i ClusterStreamingTaskNodesArgs) ToClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStreamingTaskNodesOutput).ToClusterStreamingTaskNodesPtrOutputWithContext(ctx)
}

// ClusterStreamingTaskNodesPtrInput is an input type that accepts ClusterStreamingTaskNodesArgs, ClusterStreamingTaskNodesPtr and ClusterStreamingTaskNodesPtrOutput values.
// You can construct a concrete instance of `ClusterStreamingTaskNodesPtrInput` via:
//
//	        ClusterStreamingTaskNodesArgs{...}
//
//	or:
//
//	        nil
type ClusterStreamingTaskNodesPtrInput interface {
	pulumi.Input

	ToClusterStreamingTaskNodesPtrOutput() ClusterStreamingTaskNodesPtrOutput
	ToClusterStreamingTaskNodesPtrOutputWithContext(context.Context) ClusterStreamingTaskNodesPtrOutput
}

type clusterStreamingTaskNodesPtrType ClusterStreamingTaskNodesArgs

func ClusterStreamingTaskNodesPtr(v *ClusterStreamingTaskNodesArgs) ClusterStreamingTaskNodesPtrInput {
	return (*clusterStreamingTaskNodesPtrType)(v)
}

func (*clusterStreamingTaskNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStreamingTaskNodes)(nil)).Elem()
}

func (i *clusterStreamingTaskNodesPtrType) ToClusterStreamingTaskNodesPtrOutput() ClusterStreamingTaskNodesPtrOutput {
	return i.ToClusterStreamingTaskNodesPtrOutputWithContext(context.Background())
}

func (i *clusterStreamingTaskNodesPtrType) ToClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingTaskNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStreamingTaskNodesPtrOutput)
}

type ClusterStreamingTaskNodesOutput struct{ *pulumi.OutputState }

func (ClusterStreamingTaskNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStreamingTaskNodes)(nil)).Elem()
}

func (o ClusterStreamingTaskNodesOutput) ToClusterStreamingTaskNodesOutput() ClusterStreamingTaskNodesOutput {
	return o
}

func (o ClusterStreamingTaskNodesOutput) ToClusterStreamingTaskNodesOutputWithContext(ctx context.Context) ClusterStreamingTaskNodesOutput {
	return o
}

func (o ClusterStreamingTaskNodesOutput) ToClusterStreamingTaskNodesPtrOutput() ClusterStreamingTaskNodesPtrOutput {
	return o.ToClusterStreamingTaskNodesPtrOutputWithContext(context.Background())
}

func (o ClusterStreamingTaskNodesOutput) ToClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingTaskNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStreamingTaskNodes) *ClusterStreamingTaskNodes {
		return &v
	}).(ClusterStreamingTaskNodesPtrOutput)
}

func (o ClusterStreamingTaskNodesOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) []string { return v.AssignedRoles }).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingTaskNodesOutput) DataVolumeCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) int { return v.DataVolumeCount }).(pulumi.IntOutput)
}

func (o ClusterStreamingTaskNodesOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) *int { return v.DataVolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingTaskNodesOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) *string { return v.DataVolumeType }).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingTaskNodesOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) string { return v.Flavor }).(pulumi.StringOutput)
}

func (o ClusterStreamingTaskNodesOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) []string { return v.HostIps }).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingTaskNodesOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) int { return v.NodeNumber }).(pulumi.IntOutput)
}

func (o ClusterStreamingTaskNodesOutput) RootVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) int { return v.RootVolumeSize }).(pulumi.IntOutput)
}

func (o ClusterStreamingTaskNodesOutput) RootVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterStreamingTaskNodes) string { return v.RootVolumeType }).(pulumi.StringOutput)
}

type ClusterStreamingTaskNodesPtrOutput struct{ *pulumi.OutputState }

func (ClusterStreamingTaskNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStreamingTaskNodes)(nil)).Elem()
}

func (o ClusterStreamingTaskNodesPtrOutput) ToClusterStreamingTaskNodesPtrOutput() ClusterStreamingTaskNodesPtrOutput {
	return o
}

func (o ClusterStreamingTaskNodesPtrOutput) ToClusterStreamingTaskNodesPtrOutputWithContext(ctx context.Context) ClusterStreamingTaskNodesPtrOutput {
	return o
}

func (o ClusterStreamingTaskNodesPtrOutput) Elem() ClusterStreamingTaskNodesOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) ClusterStreamingTaskNodes {
		if v != nil {
			return *v
		}
		var ret ClusterStreamingTaskNodes
		return ret
	}).(ClusterStreamingTaskNodesOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) AssignedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.AssignedRoles
	}).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) DataVolumeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.DataVolumeCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) DataVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return v.DataVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) DataVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *string {
		if v == nil {
			return nil
		}
		return v.DataVolumeType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) HostIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) []string {
		if v == nil {
			return nil
		}
		return v.HostIps
	}).(pulumi.StringArrayOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) NodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.NodeNumber
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) RootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *int {
		if v == nil {
			return nil
		}
		return &v.RootVolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterStreamingTaskNodesPtrOutput) RootVolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStreamingTaskNodes) *string {
		if v == nil {
			return nil
		}
		return &v.RootVolumeType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisCoreNodesInput)(nil)).Elem(), ClusterAnalysisCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisCoreNodesPtrInput)(nil)).Elem(), ClusterAnalysisCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisTaskNodesInput)(nil)).Elem(), ClusterAnalysisTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAnalysisTaskNodesPtrInput)(nil)).Elem(), ClusterAnalysisTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBootstrapScriptInput)(nil)).Elem(), ClusterBootstrapScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBootstrapScriptArrayInput)(nil)).Elem(), ClusterBootstrapScriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterComponentConfigInput)(nil)).Elem(), ClusterComponentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterComponentConfigArrayInput)(nil)).Elem(), ClusterComponentConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterComponentConfigConfigInput)(nil)).Elem(), ClusterComponentConfigConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterComponentConfigConfigArrayInput)(nil)).Elem(), ClusterComponentConfigConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCustomNodeInput)(nil)).Elem(), ClusterCustomNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCustomNodeArrayInput)(nil)).Elem(), ClusterCustomNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExternalDatasourceInput)(nil)).Elem(), ClusterExternalDatasourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExternalDatasourceArrayInput)(nil)).Elem(), ClusterExternalDatasourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterNodesInput)(nil)).Elem(), ClusterMasterNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterNodesPtrInput)(nil)).Elem(), ClusterMasterNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSmnNotifyInput)(nil)).Elem(), ClusterSmnNotifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSmnNotifyPtrInput)(nil)).Elem(), ClusterSmnNotifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStreamingCoreNodesInput)(nil)).Elem(), ClusterStreamingCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStreamingCoreNodesPtrInput)(nil)).Elem(), ClusterStreamingCoreNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStreamingTaskNodesInput)(nil)).Elem(), ClusterStreamingTaskNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterStreamingTaskNodesPtrInput)(nil)).Elem(), ClusterStreamingTaskNodesArgs{})
	pulumi.RegisterOutputType(ClusterAnalysisCoreNodesOutput{})
	pulumi.RegisterOutputType(ClusterAnalysisCoreNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterAnalysisTaskNodesOutput{})
	pulumi.RegisterOutputType(ClusterAnalysisTaskNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterBootstrapScriptOutput{})
	pulumi.RegisterOutputType(ClusterBootstrapScriptArrayOutput{})
	pulumi.RegisterOutputType(ClusterComponentConfigOutput{})
	pulumi.RegisterOutputType(ClusterComponentConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterComponentConfigConfigOutput{})
	pulumi.RegisterOutputType(ClusterComponentConfigConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterCustomNodeOutput{})
	pulumi.RegisterOutputType(ClusterCustomNodeArrayOutput{})
	pulumi.RegisterOutputType(ClusterExternalDatasourceOutput{})
	pulumi.RegisterOutputType(ClusterExternalDatasourceArrayOutput{})
	pulumi.RegisterOutputType(ClusterMasterNodesOutput{})
	pulumi.RegisterOutputType(ClusterMasterNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterSmnNotifyOutput{})
	pulumi.RegisterOutputType(ClusterSmnNotifyPtrOutput{})
	pulumi.RegisterOutputType(ClusterStreamingCoreNodesOutput{})
	pulumi.RegisterOutputType(ClusterStreamingCoreNodesPtrOutput{})
	pulumi.RegisterOutputType(ClusterStreamingTaskNodesOutput{})
	pulumi.RegisterOutputType(ClusterStreamingTaskNodesPtrOutput{})
}
