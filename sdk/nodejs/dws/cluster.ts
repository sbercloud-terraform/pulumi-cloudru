// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a cluster in the Data Warehouse Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const availabilityZone = config.requireObject<any>("availabilityZone");
 * const dwsClusterName = config.requireObject<any>("dwsClusterName");
 * const userName = config.requireObject<any>("userName");
 * const userPwd = config.requireObject<any>("userPwd");
 * const vpcId = config.requireObject<any>("vpcId");
 * const networkId = config.requireObject<any>("networkId");
 * const secgroup = new sbercloud.vpc.Secgroup("secgroup", {
 *     name: "sg_dws",
 *     description: "terraform security group",
 * });
 * const cluster = new sbercloud.dws.Cluster("cluster", {
 *     name: dwsClusterName,
 *     nodeType: "dws.m3.xlarge",
 *     numberOfNode: 3,
 *     availabilityZone: availabilityZone,
 *     userName: userName,
 *     userPwd: userPwd,
 *     vpcId: vpcId,
 *     networkId: networkId,
 *     securityGroupId: secgroup.id,
 * });
 * ```
 *
 * ## Import
 *
 * Cluster can be imported using the following format:
 *
 * ```sh
 * $ pulumi import sbercloud:Dws/cluster:Cluster test 47ad727e-9dcc-4833-bde0-bb298607c719
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason. The missing attributes include: `user_pwd`, `number_of_cn`.
 *
 * It is generally recommended running `pulumi preview` after importing a cluster.
 *
 * You can then decide if changes should be applied to the cluster, or the resource definition
 *
 * should be updated to align with the cluster. Also you can ignore changes as below.
 *
 * resource "sbercloud_dws_cluster" "test" {
 *
 *     ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       user_pwd, number_of_cn,
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Dws/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * AZ in a cluster.
     * Changing this creates a new cluster resource.
     */
    declare public readonly availabilityZone: pulumi.Output<string>;
    /**
     * Cluster creation time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * The description of the cluster.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Dedicated storage pool ID.
     */
    declare public readonly dssPoolId: pulumi.Output<string>;
    /**
     * The ID of the ELB load balancer.
     */
    declare public readonly elbId: pulumi.Output<string | undefined>;
    /**
     * The ELB information bound to the cluster.
     */
    declare public /*out*/ readonly elbs: pulumi.Output<outputs.Dws.ClusterElb[]>;
    /**
     * View the private network connection information about the cluster. Structure is documented below.
     */
    declare public /*out*/ readonly endpoints: pulumi.Output<outputs.Dws.ClusterEndpoint[]>;
    /**
     * The enterprise project id of the dws cluster,
     * Value 0 indicates the default enterprise project.
     * Changing this creates a new cluster resource.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * Whether to automatically execute snapshot when shrinking the number of nodes.
     */
    declare public readonly forceBackup: pulumi.Output<boolean | undefined>;
    /**
     * The number of latest manual snapshots that need to be retained when deleting the cluster.
     */
    declare public readonly keepLastManualSnapshot: pulumi.Output<number | undefined>;
    /**
     * The KMS key ID.
     */
    declare public readonly kmsKeyId: pulumi.Output<string>;
    /**
     * Whether to enable logical cluster.
     */
    declare public readonly logicalClusterEnable: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable LTS.
     */
    declare public readonly ltsEnable: pulumi.Output<boolean | undefined>;
    /**
     * Cluster maintenance window.
     */
    declare public /*out*/ readonly maintainWindows: pulumi.Output<outputs.Dws.ClusterMaintainWindow[]>;
    /**
     * Cluster name, which must be unique and contains 4 to 64 characters, which
     * consist of letters, digits, hyphens(-), or underscores(_) only and must start with a letter.
     * Changing this creates a new cluster resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Network ID, which is used for configuring cluster network.
     * Changing this creates a new cluster resource.
     */
    declare public readonly networkId: pulumi.Output<string>;
    /**
     * Node type.
     * Changing this creates a new cluster resource.
     */
    declare public readonly nodeType: pulumi.Output<string>;
    /**
     * The number of CN. If you use a large-scale cluster, deploy multiple CNs.
     * Changing this creates a new cluster resource.
     */
    declare public readonly numberOfCn: pulumi.Output<number | undefined>;
    /**
     * Number of nodes in a cluster. The value ranges from 3 to 32. When expanding,
     * add at least 3 nodes.
     */
    declare public readonly numberOfNode: pulumi.Output<number>;
    /**
     * Service port of a cluster (8000 to 10000). The default value is 8000.
     * Changing this creates a new cluster resource.
     */
    declare public readonly port: pulumi.Output<number | undefined>;
    /**
     * List of private network IP address.
     */
    declare public /*out*/ readonly privateIps: pulumi.Output<string[]>;
    /**
     * Public network connection information about the cluster. If the value is not specified, the
     * public network connection information is not used by default Structure is documented below.
     */
    declare public /*out*/ readonly publicEndpoints: pulumi.Output<outputs.Dws.ClusterPublicEndpoint[]>;
    /**
     * A nested object resource Structure is documented below.
     * Changing this creates a new cluster resource.
     */
    declare public readonly publicIp: pulumi.Output<outputs.Dws.ClusterPublicIp>;
    /**
     * The recent event number.
     */
    declare public /*out*/ readonly recentEvent: pulumi.Output<number>;
    /**
     * The region in which to create the cluster resource. If omitted, the
     * provider-level region will be used. Changing this creates a new cluster resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * ID of a security group. The ID is used for configuring cluster
     * network.
     * Changing this creates a new cluster resource.
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * Cluster status, which can be one of the following:  CREATING AVAILABLE UNAVAILABLE CREATION FAILED.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Sub-status of clusters in the AVAILABLE state. The value can be one of the following:  NORMAL READONLY
     * REDISTRIBUTING REDISTRIBUTION-FAILURE UNBALANCED UNBALANCED | READONLY DEGRADED DEGRADED | READONLY DEGRADED |
     * UNBALANCED UNBALANCED | REDISTRIBUTING UNBALANCED | REDISTRIBUTION-FAILURE READONLY | REDISTRIBUTION-FAILURE
     * UNBALANCED | READONLY | REDISTRIBUTION-FAILURE DEGRADED | REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED |
     * REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED | READONLY | REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED | READONLY
     */
    declare public /*out*/ readonly subStatus: pulumi.Output<string>;
    /**
     * The key/value pairs to associate with the cluster.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Cluster management task. The value can be one of the following:
     * RESTORING SNAPSHOTTING GROWING REBOOTING SETTING_CONFIGURATION CONFIGURING_EXT_DATASOURCE DELETING_EXT_DATASOURCE
     * REBOOT_FAILURE RESIZE_FAILURE
     */
    declare public /*out*/ readonly taskStatus: pulumi.Output<string>;
    /**
     * Last modification time of a cluster. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
     */
    declare public /*out*/ readonly updated: pulumi.Output<string>;
    /**
     * Administrator username for logging in to a data warehouse cluster The
     * administrator username must:  Consist of lowercase letters, digits, or underscores. Start with a lowercase letter or
     * an underscore. Contain 1 to 63 characters. Cannot be a keyword of the DWS database.
     * Changing this creates a new cluster resource.
     */
    declare public readonly userName: pulumi.Output<string>;
    /**
     * Administrator password for logging in to a data warehouse cluster A password
     * must conform to the following rules:  Contains 8 to 32 characters. Cannot be the same as the username or the username
     * written in reverse order. Contains three types of the following:
     * Lowercase letters Uppercase letters Digits Special characters
     * ~!@#%^&*()-_=+|[{}];:,<.>/?
     */
    declare public readonly userPwd: pulumi.Output<string>;
    /**
     * Data warehouse version.
     */
    declare public readonly version: pulumi.Output<string>;
    declare public readonly volume: pulumi.Output<outputs.Dws.ClusterVolume>;
    /**
     * VPC ID, which is used for configuring cluster network.
     * Changing this creates a new cluster resource.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["availabilityZone"] = state?.availabilityZone;
            resourceInputs["created"] = state?.created;
            resourceInputs["description"] = state?.description;
            resourceInputs["dssPoolId"] = state?.dssPoolId;
            resourceInputs["elbId"] = state?.elbId;
            resourceInputs["elbs"] = state?.elbs;
            resourceInputs["endpoints"] = state?.endpoints;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["forceBackup"] = state?.forceBackup;
            resourceInputs["keepLastManualSnapshot"] = state?.keepLastManualSnapshot;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["logicalClusterEnable"] = state?.logicalClusterEnable;
            resourceInputs["ltsEnable"] = state?.ltsEnable;
            resourceInputs["maintainWindows"] = state?.maintainWindows;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["nodeType"] = state?.nodeType;
            resourceInputs["numberOfCn"] = state?.numberOfCn;
            resourceInputs["numberOfNode"] = state?.numberOfNode;
            resourceInputs["port"] = state?.port;
            resourceInputs["privateIps"] = state?.privateIps;
            resourceInputs["publicEndpoints"] = state?.publicEndpoints;
            resourceInputs["publicIp"] = state?.publicIp;
            resourceInputs["recentEvent"] = state?.recentEvent;
            resourceInputs["region"] = state?.region;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["subStatus"] = state?.subStatus;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["taskStatus"] = state?.taskStatus;
            resourceInputs["updated"] = state?.updated;
            resourceInputs["userName"] = state?.userName;
            resourceInputs["userPwd"] = state?.userPwd;
            resourceInputs["version"] = state?.version;
            resourceInputs["volume"] = state?.volume;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if (args?.availabilityZone === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if (args?.networkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if (args?.nodeType === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeType'");
            }
            if (args?.numberOfNode === undefined && !opts.urn) {
                throw new Error("Missing required property 'numberOfNode'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.userName === undefined && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            if (args?.userPwd === undefined && !opts.urn) {
                throw new Error("Missing required property 'userPwd'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["availabilityZone"] = args?.availabilityZone;
            resourceInputs["description"] = args?.description;
            resourceInputs["dssPoolId"] = args?.dssPoolId;
            resourceInputs["elbId"] = args?.elbId;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["forceBackup"] = args?.forceBackup;
            resourceInputs["keepLastManualSnapshot"] = args?.keepLastManualSnapshot;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId;
            resourceInputs["logicalClusterEnable"] = args?.logicalClusterEnable;
            resourceInputs["ltsEnable"] = args?.ltsEnable;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["nodeType"] = args?.nodeType;
            resourceInputs["numberOfCn"] = args?.numberOfCn;
            resourceInputs["numberOfNode"] = args?.numberOfNode;
            resourceInputs["port"] = args?.port;
            resourceInputs["publicIp"] = args?.publicIp;
            resourceInputs["region"] = args?.region;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["userName"] = args?.userName;
            resourceInputs["userPwd"] = args?.userPwd ? pulumi.secret(args.userPwd) : undefined;
            resourceInputs["version"] = args?.version;
            resourceInputs["volume"] = args?.volume;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["elbs"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["maintainWindows"] = undefined /*out*/;
            resourceInputs["privateIps"] = undefined /*out*/;
            resourceInputs["publicEndpoints"] = undefined /*out*/;
            resourceInputs["recentEvent"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subStatus"] = undefined /*out*/;
            resourceInputs["taskStatus"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["userPwd"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * AZ in a cluster.
     * Changing this creates a new cluster resource.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Cluster creation time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
     */
    created?: pulumi.Input<string>;
    /**
     * The description of the cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * Dedicated storage pool ID.
     */
    dssPoolId?: pulumi.Input<string>;
    /**
     * The ID of the ELB load balancer.
     */
    elbId?: pulumi.Input<string>;
    /**
     * The ELB information bound to the cluster.
     */
    elbs?: pulumi.Input<pulumi.Input<inputs.Dws.ClusterElb>[]>;
    /**
     * View the private network connection information about the cluster. Structure is documented below.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.Dws.ClusterEndpoint>[]>;
    /**
     * The enterprise project id of the dws cluster,
     * Value 0 indicates the default enterprise project.
     * Changing this creates a new cluster resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Whether to automatically execute snapshot when shrinking the number of nodes.
     */
    forceBackup?: pulumi.Input<boolean>;
    /**
     * The number of latest manual snapshots that need to be retained when deleting the cluster.
     */
    keepLastManualSnapshot?: pulumi.Input<number>;
    /**
     * The KMS key ID.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Whether to enable logical cluster.
     */
    logicalClusterEnable?: pulumi.Input<boolean>;
    /**
     * Whether to enable LTS.
     */
    ltsEnable?: pulumi.Input<boolean>;
    /**
     * Cluster maintenance window.
     */
    maintainWindows?: pulumi.Input<pulumi.Input<inputs.Dws.ClusterMaintainWindow>[]>;
    /**
     * Cluster name, which must be unique and contains 4 to 64 characters, which
     * consist of letters, digits, hyphens(-), or underscores(_) only and must start with a letter.
     * Changing this creates a new cluster resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Network ID, which is used for configuring cluster network.
     * Changing this creates a new cluster resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Node type.
     * Changing this creates a new cluster resource.
     */
    nodeType?: pulumi.Input<string>;
    /**
     * The number of CN. If you use a large-scale cluster, deploy multiple CNs.
     * Changing this creates a new cluster resource.
     */
    numberOfCn?: pulumi.Input<number>;
    /**
     * Number of nodes in a cluster. The value ranges from 3 to 32. When expanding,
     * add at least 3 nodes.
     */
    numberOfNode?: pulumi.Input<number>;
    /**
     * Service port of a cluster (8000 to 10000). The default value is 8000.
     * Changing this creates a new cluster resource.
     */
    port?: pulumi.Input<number>;
    /**
     * List of private network IP address.
     */
    privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Public network connection information about the cluster. If the value is not specified, the
     * public network connection information is not used by default Structure is documented below.
     */
    publicEndpoints?: pulumi.Input<pulumi.Input<inputs.Dws.ClusterPublicEndpoint>[]>;
    /**
     * A nested object resource Structure is documented below.
     * Changing this creates a new cluster resource.
     */
    publicIp?: pulumi.Input<inputs.Dws.ClusterPublicIp>;
    /**
     * The recent event number.
     */
    recentEvent?: pulumi.Input<number>;
    /**
     * The region in which to create the cluster resource. If omitted, the
     * provider-level region will be used. Changing this creates a new cluster resource.
     */
    region?: pulumi.Input<string>;
    /**
     * ID of a security group. The ID is used for configuring cluster
     * network.
     * Changing this creates a new cluster resource.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Cluster status, which can be one of the following:  CREATING AVAILABLE UNAVAILABLE CREATION FAILED.
     */
    status?: pulumi.Input<string>;
    /**
     * Sub-status of clusters in the AVAILABLE state. The value can be one of the following:  NORMAL READONLY
     * REDISTRIBUTING REDISTRIBUTION-FAILURE UNBALANCED UNBALANCED | READONLY DEGRADED DEGRADED | READONLY DEGRADED |
     * UNBALANCED UNBALANCED | REDISTRIBUTING UNBALANCED | REDISTRIBUTION-FAILURE READONLY | REDISTRIBUTION-FAILURE
     * UNBALANCED | READONLY | REDISTRIBUTION-FAILURE DEGRADED | REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED |
     * REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED | READONLY | REDISTRIBUTION-FAILURE DEGRADED | UNBALANCED | READONLY
     */
    subStatus?: pulumi.Input<string>;
    /**
     * The key/value pairs to associate with the cluster.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Cluster management task. The value can be one of the following:
     * RESTORING SNAPSHOTTING GROWING REBOOTING SETTING_CONFIGURATION CONFIGURING_EXT_DATASOURCE DELETING_EXT_DATASOURCE
     * REBOOT_FAILURE RESIZE_FAILURE
     */
    taskStatus?: pulumi.Input<string>;
    /**
     * Last modification time of a cluster. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
     */
    updated?: pulumi.Input<string>;
    /**
     * Administrator username for logging in to a data warehouse cluster The
     * administrator username must:  Consist of lowercase letters, digits, or underscores. Start with a lowercase letter or
     * an underscore. Contain 1 to 63 characters. Cannot be a keyword of the DWS database.
     * Changing this creates a new cluster resource.
     */
    userName?: pulumi.Input<string>;
    /**
     * Administrator password for logging in to a data warehouse cluster A password
     * must conform to the following rules:  Contains 8 to 32 characters. Cannot be the same as the username or the username
     * written in reverse order. Contains three types of the following:
     * Lowercase letters Uppercase letters Digits Special characters
     * ~!@#%^&*()-_=+|[{}];:,<.>/?
     */
    userPwd?: pulumi.Input<string>;
    /**
     * Data warehouse version.
     */
    version?: pulumi.Input<string>;
    volume?: pulumi.Input<inputs.Dws.ClusterVolume>;
    /**
     * VPC ID, which is used for configuring cluster network.
     * Changing this creates a new cluster resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * AZ in a cluster.
     * Changing this creates a new cluster resource.
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * The description of the cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * Dedicated storage pool ID.
     */
    dssPoolId?: pulumi.Input<string>;
    /**
     * The ID of the ELB load balancer.
     */
    elbId?: pulumi.Input<string>;
    /**
     * The enterprise project id of the dws cluster,
     * Value 0 indicates the default enterprise project.
     * Changing this creates a new cluster resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Whether to automatically execute snapshot when shrinking the number of nodes.
     */
    forceBackup?: pulumi.Input<boolean>;
    /**
     * The number of latest manual snapshots that need to be retained when deleting the cluster.
     */
    keepLastManualSnapshot?: pulumi.Input<number>;
    /**
     * The KMS key ID.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Whether to enable logical cluster.
     */
    logicalClusterEnable?: pulumi.Input<boolean>;
    /**
     * Whether to enable LTS.
     */
    ltsEnable?: pulumi.Input<boolean>;
    /**
     * Cluster name, which must be unique and contains 4 to 64 characters, which
     * consist of letters, digits, hyphens(-), or underscores(_) only and must start with a letter.
     * Changing this creates a new cluster resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Network ID, which is used for configuring cluster network.
     * Changing this creates a new cluster resource.
     */
    networkId: pulumi.Input<string>;
    /**
     * Node type.
     * Changing this creates a new cluster resource.
     */
    nodeType: pulumi.Input<string>;
    /**
     * The number of CN. If you use a large-scale cluster, deploy multiple CNs.
     * Changing this creates a new cluster resource.
     */
    numberOfCn?: pulumi.Input<number>;
    /**
     * Number of nodes in a cluster. The value ranges from 3 to 32. When expanding,
     * add at least 3 nodes.
     */
    numberOfNode: pulumi.Input<number>;
    /**
     * Service port of a cluster (8000 to 10000). The default value is 8000.
     * Changing this creates a new cluster resource.
     */
    port?: pulumi.Input<number>;
    /**
     * A nested object resource Structure is documented below.
     * Changing this creates a new cluster resource.
     */
    publicIp?: pulumi.Input<inputs.Dws.ClusterPublicIp>;
    /**
     * The region in which to create the cluster resource. If omitted, the
     * provider-level region will be used. Changing this creates a new cluster resource.
     */
    region?: pulumi.Input<string>;
    /**
     * ID of a security group. The ID is used for configuring cluster
     * network.
     * Changing this creates a new cluster resource.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The key/value pairs to associate with the cluster.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Administrator username for logging in to a data warehouse cluster The
     * administrator username must:  Consist of lowercase letters, digits, or underscores. Start with a lowercase letter or
     * an underscore. Contain 1 to 63 characters. Cannot be a keyword of the DWS database.
     * Changing this creates a new cluster resource.
     */
    userName: pulumi.Input<string>;
    /**
     * Administrator password for logging in to a data warehouse cluster A password
     * must conform to the following rules:  Contains 8 to 32 characters. Cannot be the same as the username or the username
     * written in reverse order. Contains three types of the following:
     * Lowercase letters Uppercase letters Digits Special characters
     * ~!@#%^&*()-_=+|[{}];:,<.>/?
     */
    userPwd: pulumi.Input<string>;
    /**
     * Data warehouse version.
     */
    version?: pulumi.Input<string>;
    volume?: pulumi.Input<inputs.Dws.ClusterVolume>;
    /**
     * VPC ID, which is used for configuring cluster network.
     * Changing this creates a new cluster resource.
     */
    vpcId: pulumi.Input<string>;
}
