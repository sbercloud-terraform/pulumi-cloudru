// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getProtectionRules(args: GetProtectionRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetProtectionRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Cfw/getProtectionRules:getProtectionRules", {
        "actionType": args.actionType,
        "destination": args.destination,
        "direction": args.direction,
        "fwInstanceId": args.fwInstanceId,
        "name": args.name,
        "objectId": args.objectId,
        "region": args.region,
        "ruleId": args.ruleId,
        "source": args.source,
        "status": args.status,
        "tags": args.tags,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionRules.
 */
export interface GetProtectionRulesArgs {
    actionType?: string;
    destination?: string;
    direction?: string;
    fwInstanceId?: string;
    name?: string;
    objectId: string;
    region?: string;
    ruleId?: string;
    source?: string;
    status?: string;
    tags?: {[key: string]: string};
    type?: string;
}

/**
 * A collection of values returned by getProtectionRules.
 */
export interface GetProtectionRulesResult {
    readonly actionType?: string;
    readonly destination?: string;
    readonly direction?: string;
    readonly fwInstanceId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly objectId: string;
    readonly records: outputs.Cfw.GetProtectionRulesRecord[];
    readonly region: string;
    readonly ruleId?: string;
    readonly source?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: string};
    readonly type?: string;
}
export function getProtectionRulesOutput(args: GetProtectionRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProtectionRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Cfw/getProtectionRules:getProtectionRules", {
        "actionType": args.actionType,
        "destination": args.destination,
        "direction": args.direction,
        "fwInstanceId": args.fwInstanceId,
        "name": args.name,
        "objectId": args.objectId,
        "region": args.region,
        "ruleId": args.ruleId,
        "source": args.source,
        "status": args.status,
        "tags": args.tags,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionRules.
 */
export interface GetProtectionRulesOutputArgs {
    actionType?: pulumi.Input<string>;
    destination?: pulumi.Input<string>;
    direction?: pulumi.Input<string>;
    fwInstanceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    ruleId?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
}
