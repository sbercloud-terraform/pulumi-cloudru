// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Pool extends pulumi.CustomResource {
    /**
     * Get an existing Pool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PoolState, opts?: pulumi.CustomResourceOptions): Pool {
        return new Pool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:Elb/pool:Pool';

    /**
     * Returns true if the given object is an instance of Pool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pool.__pulumiType;
    }

    /**
     * @deprecated this field is deprecated
     */
    declare public readonly adminStateUp: pulumi.Output<boolean | undefined>;
    declare public readonly description: pulumi.Output<string | undefined>;
    declare public readonly lbMethod: pulumi.Output<string>;
    declare public readonly listenerId: pulumi.Output<string>;
    declare public readonly loadbalancerId: pulumi.Output<string>;
    declare public /*out*/ readonly monitorId: pulumi.Output<string>;
    declare public readonly name: pulumi.Output<string>;
    declare public readonly persistences: pulumi.Output<outputs.Elb.PoolPersistence[] | undefined>;
    declare public readonly protectionReason: pulumi.Output<string | undefined>;
    declare public readonly protectionStatus: pulumi.Output<string>;
    declare public readonly protocol: pulumi.Output<string>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * @deprecated tenant_id is deprecated
     */
    declare public readonly tenantId: pulumi.Output<string>;

    /**
     * Create a Pool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PoolArgs | PoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PoolState | undefined;
            resourceInputs["adminStateUp"] = state?.adminStateUp;
            resourceInputs["description"] = state?.description;
            resourceInputs["lbMethod"] = state?.lbMethod;
            resourceInputs["listenerId"] = state?.listenerId;
            resourceInputs["loadbalancerId"] = state?.loadbalancerId;
            resourceInputs["monitorId"] = state?.monitorId;
            resourceInputs["name"] = state?.name;
            resourceInputs["persistences"] = state?.persistences;
            resourceInputs["protectionReason"] = state?.protectionReason;
            resourceInputs["protectionStatus"] = state?.protectionStatus;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["region"] = state?.region;
            resourceInputs["tenantId"] = state?.tenantId;
        } else {
            const args = argsOrState as PoolArgs | undefined;
            if (args?.lbMethod === undefined && !opts.urn) {
                throw new Error("Missing required property 'lbMethod'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["adminStateUp"] = args?.adminStateUp;
            resourceInputs["description"] = args?.description;
            resourceInputs["lbMethod"] = args?.lbMethod;
            resourceInputs["listenerId"] = args?.listenerId;
            resourceInputs["loadbalancerId"] = args?.loadbalancerId;
            resourceInputs["name"] = args?.name;
            resourceInputs["persistences"] = args?.persistences;
            resourceInputs["protectionReason"] = args?.protectionReason;
            resourceInputs["protectionStatus"] = args?.protectionStatus;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["region"] = args?.region;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["monitorId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Pool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Pool resources.
 */
export interface PoolState {
    /**
     * @deprecated this field is deprecated
     */
    adminStateUp?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    lbMethod?: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadbalancerId?: pulumi.Input<string>;
    monitorId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistences?: pulumi.Input<pulumi.Input<inputs.Elb.PoolPersistence>[]>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * @deprecated tenant_id is deprecated
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Pool resource.
 */
export interface PoolArgs {
    /**
     * @deprecated this field is deprecated
     */
    adminStateUp?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    lbMethod: pulumi.Input<string>;
    listenerId?: pulumi.Input<string>;
    loadbalancerId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistences?: pulumi.Input<pulumi.Input<inputs.Elb.PoolPersistence>[]>;
    protectionReason?: pulumi.Input<string>;
    protectionStatus?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * @deprecated tenant_id is deprecated
     */
    tenantId?: pulumi.Input<string>;
}
