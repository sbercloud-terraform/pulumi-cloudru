// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getFlowLogs(args: GetFlowLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Er/getFlowLogs:getFlowLogs", {
        "enabled": args.enabled,
        "flowLogId": args.flowLogId,
        "instanceId": args.instanceId,
        "logGroupId": args.logGroupId,
        "logStreamId": args.logStreamId,
        "name": args.name,
        "region": args.region,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowLogs.
 */
export interface GetFlowLogsArgs {
    enabled?: string;
    flowLogId?: string;
    instanceId: string;
    logGroupId?: string;
    logStreamId?: string;
    name?: string;
    region?: string;
    resourceId?: string;
    resourceType?: string;
    status?: string;
}

/**
 * A collection of values returned by getFlowLogs.
 */
export interface GetFlowLogsResult {
    readonly enabled?: string;
    readonly flowLogId?: string;
    readonly flowLogs: outputs.Er.GetFlowLogsFlowLog[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly logGroupId?: string;
    readonly logStreamId?: string;
    readonly name?: string;
    readonly region?: string;
    readonly resourceId?: string;
    readonly resourceType?: string;
    readonly status?: string;
}
export function getFlowLogsOutput(args: GetFlowLogsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Er/getFlowLogs:getFlowLogs", {
        "enabled": args.enabled,
        "flowLogId": args.flowLogId,
        "instanceId": args.instanceId,
        "logGroupId": args.logGroupId,
        "logStreamId": args.logStreamId,
        "name": args.name,
        "region": args.region,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlowLogs.
 */
export interface GetFlowLogsOutputArgs {
    enabled?: pulumi.Input<string>;
    flowLogId?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    logGroupId?: pulumi.Input<string>;
    logStreamId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
