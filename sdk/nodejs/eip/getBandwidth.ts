// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getBandwidth(args: GetBandwidthArgs, opts?: pulumi.InvokeOptions): Promise<GetBandwidthResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Eip/getBandwidth:getBandwidth", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "size": args.size,
    }, opts);
}

/**
 * A collection of arguments for invoking getBandwidth.
 */
export interface GetBandwidthArgs {
    enterpriseProjectId?: string;
    name: string;
    region?: string;
    size?: number;
}

/**
 * A collection of values returned by getBandwidth.
 */
export interface GetBandwidthResult {
    readonly bandwidthType: string;
    readonly chargeMode: string;
    readonly enterpriseProjectId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly publicips: outputs.Eip.GetBandwidthPublicip[];
    readonly region: string;
    readonly shareType: string;
    readonly size: number;
    readonly status: string;
}
export function getBandwidthOutput(args: GetBandwidthOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBandwidthResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Eip/getBandwidth:getBandwidth", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "size": args.size,
    }, opts);
}

/**
 * A collection of arguments for invoking getBandwidth.
 */
export interface GetBandwidthOutputArgs {
    enterpriseProjectId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
}
