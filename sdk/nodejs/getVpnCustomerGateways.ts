// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get a list of VPN customer gateways.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const routeMode = config.requireObject<any>("routeMode");
 * const name = config.requireObject<any>("name");
 * const asn = config.requireObject<any>("asn");
 * const ip = config.requireObject<any>("ip");
 * const services = sbercloud.getVpnCustomerGateways({
 *     routeMode: routeMode,
 *     name: name,
 *     asn: asn,
 *     ip: ip,
 * });
 * ```
 */
export function getVpnCustomerGateways(args?: GetVpnCustomerGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnCustomerGatewaysResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getVpnCustomerGateways:getVpnCustomerGateways", {
        "asn": args.asn,
        "customerGatewayId": args.customerGatewayId,
        "ip": args.ip,
        "name": args.name,
        "region": args.region,
        "routeMode": args.routeMode,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnCustomerGateways.
 */
export interface GetVpnCustomerGatewaysArgs {
    /**
     * Specifies the BGP ASN number of the customer gateway, only works when the routeMode is
     * **bgp**. The value ranges from **1** to **4294967295**.
     */
    asn?: number;
    /**
     * Specifies the customer gateway ID used as the query filter.
     */
    customerGatewayId?: string;
    /**
     * Specifies the IP address of the customer gateway.
     */
    ip?: string;
    /**
     * Specifies the customer gateway name.
     */
    name?: string;
    /**
     * Specifies the region in which to obtain the VPN customer gateways.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the route mode of the customer gateway. The value can be **static** and **bgp**.
     */
    routeMode?: string;
}

/**
 * A collection of values returned by getVpnCustomerGateways.
 */
export interface GetVpnCustomerGatewaysResult {
    /**
     * Indicates the asn of the customer gateway.
     */
    readonly asn?: number;
    readonly customerGatewayId?: string;
    /**
     * All resource customer gateways that match the filter parameters.
     * The customerGateways structure is documented below.
     */
    readonly customerGateways: outputs.GetVpnCustomerGatewaysCustomerGateway[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates the IP of the customer gateway.
     */
    readonly ip?: string;
    /**
     * Indicates the name of the customer gateway.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * Indicates the route mode of the customer gateway.
     */
    readonly routeMode?: string;
}
/**
 * Use this data source to get a list of VPN customer gateways.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const routeMode = config.requireObject<any>("routeMode");
 * const name = config.requireObject<any>("name");
 * const asn = config.requireObject<any>("asn");
 * const ip = config.requireObject<any>("ip");
 * const services = sbercloud.getVpnCustomerGateways({
 *     routeMode: routeMode,
 *     name: name,
 *     asn: asn,
 *     ip: ip,
 * });
 * ```
 */
export function getVpnCustomerGatewaysOutput(args?: GetVpnCustomerGatewaysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpnCustomerGatewaysResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getVpnCustomerGateways:getVpnCustomerGateways", {
        "asn": args.asn,
        "customerGatewayId": args.customerGatewayId,
        "ip": args.ip,
        "name": args.name,
        "region": args.region,
        "routeMode": args.routeMode,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnCustomerGateways.
 */
export interface GetVpnCustomerGatewaysOutputArgs {
    /**
     * Specifies the BGP ASN number of the customer gateway, only works when the routeMode is
     * **bgp**. The value ranges from **1** to **4294967295**.
     */
    asn?: pulumi.Input<number>;
    /**
     * Specifies the customer gateway ID used as the query filter.
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * Specifies the IP address of the customer gateway.
     */
    ip?: pulumi.Input<string>;
    /**
     * Specifies the customer gateway name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to obtain the VPN customer gateways.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the route mode of the customer gateway. The value can be **static** and **bgp**.
     */
    routeMode?: pulumi.Input<string>;
}
