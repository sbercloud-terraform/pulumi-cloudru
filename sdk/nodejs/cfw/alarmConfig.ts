// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AlarmConfig extends pulumi.CustomResource {
    /**
     * Get an existing AlarmConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlarmConfigState, opts?: pulumi.CustomResourceOptions): AlarmConfig {
        return new AlarmConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:Cfw/alarmConfig:AlarmConfig';

    /**
     * Returns true if the given object is an instance of AlarmConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlarmConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlarmConfig.__pulumiType;
    }

    /**
     * Specifies the alarm period.
     */
    declare public readonly alarmTimePeriod: pulumi.Output<number>;
    /**
     * Specifies the alarm type.
     */
    declare public readonly alarmType: pulumi.Output<number>;
    declare public readonly enableForceNew: pulumi.Output<string | undefined>;
    /**
     * Specifies the alarm triggering frequency.
     */
    declare public readonly frequencyCount: pulumi.Output<number>;
    /**
     * Specifies the alarm frequency time range.
     */
    declare public readonly frequencyTime: pulumi.Output<number>;
    /**
     * Specifies the firewall ID.
     */
    declare public readonly fwInstanceId: pulumi.Output<string>;
    /**
     * The alarm language.
     */
    declare public /*out*/ readonly language: pulumi.Output<string>;
    /**
     * The region in which to create the resource. If omitted, the provider-level region will be used.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the alarm severity.
     */
    declare public readonly severity: pulumi.Output<string>;
    /**
     * Specifies the alarm URN.
     */
    declare public readonly topicUrn: pulumi.Output<string>;
    /**
     * The username.
     */
    declare public /*out*/ readonly username: pulumi.Output<string>;

    /**
     * Create a AlarmConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlarmConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlarmConfigArgs | AlarmConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlarmConfigState | undefined;
            resourceInputs["alarmTimePeriod"] = state?.alarmTimePeriod;
            resourceInputs["alarmType"] = state?.alarmType;
            resourceInputs["enableForceNew"] = state?.enableForceNew;
            resourceInputs["frequencyCount"] = state?.frequencyCount;
            resourceInputs["frequencyTime"] = state?.frequencyTime;
            resourceInputs["fwInstanceId"] = state?.fwInstanceId;
            resourceInputs["language"] = state?.language;
            resourceInputs["region"] = state?.region;
            resourceInputs["severity"] = state?.severity;
            resourceInputs["topicUrn"] = state?.topicUrn;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as AlarmConfigArgs | undefined;
            if (args?.alarmTimePeriod === undefined && !opts.urn) {
                throw new Error("Missing required property 'alarmTimePeriod'");
            }
            if (args?.alarmType === undefined && !opts.urn) {
                throw new Error("Missing required property 'alarmType'");
            }
            if (args?.frequencyCount === undefined && !opts.urn) {
                throw new Error("Missing required property 'frequencyCount'");
            }
            if (args?.frequencyTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'frequencyTime'");
            }
            if (args?.fwInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'fwInstanceId'");
            }
            if (args?.severity === undefined && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if (args?.topicUrn === undefined && !opts.urn) {
                throw new Error("Missing required property 'topicUrn'");
            }
            resourceInputs["alarmTimePeriod"] = args?.alarmTimePeriod;
            resourceInputs["alarmType"] = args?.alarmType;
            resourceInputs["enableForceNew"] = args?.enableForceNew;
            resourceInputs["frequencyCount"] = args?.frequencyCount;
            resourceInputs["frequencyTime"] = args?.frequencyTime;
            resourceInputs["fwInstanceId"] = args?.fwInstanceId;
            resourceInputs["region"] = args?.region;
            resourceInputs["severity"] = args?.severity;
            resourceInputs["topicUrn"] = args?.topicUrn;
            resourceInputs["language"] = undefined /*out*/;
            resourceInputs["username"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlarmConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlarmConfig resources.
 */
export interface AlarmConfigState {
    /**
     * Specifies the alarm period.
     */
    alarmTimePeriod?: pulumi.Input<number>;
    /**
     * Specifies the alarm type.
     */
    alarmType?: pulumi.Input<number>;
    enableForceNew?: pulumi.Input<string>;
    /**
     * Specifies the alarm triggering frequency.
     */
    frequencyCount?: pulumi.Input<number>;
    /**
     * Specifies the alarm frequency time range.
     */
    frequencyTime?: pulumi.Input<number>;
    /**
     * Specifies the firewall ID.
     */
    fwInstanceId?: pulumi.Input<string>;
    /**
     * The alarm language.
     */
    language?: pulumi.Input<string>;
    /**
     * The region in which to create the resource. If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the alarm severity.
     */
    severity?: pulumi.Input<string>;
    /**
     * Specifies the alarm URN.
     */
    topicUrn?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlarmConfig resource.
 */
export interface AlarmConfigArgs {
    /**
     * Specifies the alarm period.
     */
    alarmTimePeriod: pulumi.Input<number>;
    /**
     * Specifies the alarm type.
     */
    alarmType: pulumi.Input<number>;
    enableForceNew?: pulumi.Input<string>;
    /**
     * Specifies the alarm triggering frequency.
     */
    frequencyCount: pulumi.Input<number>;
    /**
     * Specifies the alarm frequency time range.
     */
    frequencyTime: pulumi.Input<number>;
    /**
     * Specifies the firewall ID.
     */
    fwInstanceId: pulumi.Input<string>;
    /**
     * The region in which to create the resource. If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the alarm severity.
     */
    severity: pulumi.Input<string>;
    /**
     * Specifies the alarm URN.
     */
    topicUrn: pulumi.Input<string>;
}
