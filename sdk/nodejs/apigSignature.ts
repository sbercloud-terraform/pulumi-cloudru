// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApigSignature extends pulumi.CustomResource {
    /**
     * Get an existing ApigSignature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigSignatureState, opts?: pulumi.CustomResourceOptions): ApigSignature {
        return new ApigSignature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/apigSignature:ApigSignature';

    /**
     * Returns true if the given object is an instance of ApigSignature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigSignature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigSignature.__pulumiType;
    }

    /**
     * The signature algorithm.
     */
    public readonly algorithm!: pulumi.Output<string>;
    /**
     * The creation time of the signature.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the dedicated instance to which the signature belongs.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The signature key.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The signature name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The region where the signature is located.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The signature secret.
     */
    public readonly secret!: pulumi.Output<string>;
    /**
     * The signature type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The latest update time of the signature.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a ApigSignature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigSignatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigSignatureArgs | ApigSignatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigSignatureState | undefined;
            resourceInputs["algorithm"] = state ? state.algorithm : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ApigSignatureArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["algorithm"] = args ? args.algorithm : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["secret"] = args?.secret ? pulumi.secret(args.secret) : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApigSignature.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApigSignature resources.
 */
export interface ApigSignatureState {
    /**
     * The signature algorithm.
     */
    algorithm?: pulumi.Input<string>;
    /**
     * The creation time of the signature.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the dedicated instance to which the signature belongs.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The signature key.
     */
    key?: pulumi.Input<string>;
    /**
     * The signature name.
     */
    name?: pulumi.Input<string>;
    /**
     * The region where the signature is located.
     */
    region?: pulumi.Input<string>;
    /**
     * The signature secret.
     */
    secret?: pulumi.Input<string>;
    /**
     * The signature type.
     */
    type?: pulumi.Input<string>;
    /**
     * The latest update time of the signature.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigSignature resource.
 */
export interface ApigSignatureArgs {
    /**
     * The signature algorithm.
     */
    algorithm?: pulumi.Input<string>;
    /**
     * The ID of the dedicated instance to which the signature belongs.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The signature key.
     */
    key?: pulumi.Input<string>;
    /**
     * The signature name.
     */
    name?: pulumi.Input<string>;
    /**
     * The region where the signature is located.
     */
    region?: pulumi.Input<string>;
    /**
     * The signature secret.
     */
    secret?: pulumi.Input<string>;
    /**
     * The signature type.
     */
    type: pulumi.Input<string>;
}
