// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getRoutes(args?: GetRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Vpc/getRoutes:getRoutes", {
        "destination": args.destination,
        "region": args.region,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutes.
 */
export interface GetRoutesArgs {
    destination?: string;
    region?: string;
    type?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getRoutes.
 */
export interface GetRoutesResult {
    readonly destination?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly routes: outputs.Vpc.GetRoutesRoute[];
    readonly type?: string;
    readonly vpcId?: string;
}
export function getRoutesOutput(args?: GetRoutesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoutesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Vpc/getRoutes:getRoutes", {
        "destination": args.destination,
        "region": args.region,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutes.
 */
export interface GetRoutesOutputArgs {
    destination?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
