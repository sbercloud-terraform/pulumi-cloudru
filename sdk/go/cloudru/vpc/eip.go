// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Manages an EIP resource within SberCloud.
//
// ## Example Usage
//
// ### EIP with Dedicated Bandwidth
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.NewEip(ctx, "eip_1", &vpc.EipArgs{
//				Publicip: &vpc.EipPublicipArgs{
//					Type: pulumi.String("5_bgp"),
//				},
//				Bandwidth: &vpc.EipBandwidthArgs{
//					ShareType:  pulumi.String("PER"),
//					Name:       pulumi.String("test"),
//					Size:       pulumi.Int(10),
//					ChargeMode: pulumi.String("traffic"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### EIP with Shared Bandwidth
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			bandwidth1, err := vpc.NewBandwidth(ctx, "bandwidth_1", &vpc.BandwidthArgs{
//				Name: pulumi.String("bandwidth_1"),
//				Size: pulumi.Int(5),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewEip(ctx, "eip_1", &vpc.EipArgs{
//				Publicip: &vpc.EipPublicipArgs{
//					Type: pulumi.String("5_bgp"),
//				},
//				Bandwidth: &vpc.EipBandwidthArgs{
//					ShareType: pulumi.String("WHOLE"),
//					Id:        bandwidth1.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EIPs can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import sbercloud:Vpc/eip:Eip eip_1 2c7f39f3-702b-48d1-940c-b50384177ee1
// ```
type Eip struct {
	pulumi.CustomResourceState

	// The IP address of the eip.
	Address       pulumi.StringOutput `pulumi:"address"`
	AssociateId   pulumi.StringOutput `pulumi:"associateId"`
	AssociateType pulumi.StringOutput `pulumi:"associateType"`
	// Deprecated: Deprecated
	AutoPay pulumi.StringPtrOutput `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// The bandwidth object.
	Bandwidth    EipBandwidthOutput  `pulumi:"bandwidth"`
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	CreatedAt    pulumi.StringOutput `pulumi:"createdAt"`
	// The enterprise project id of the elastic IP. Changing this
	// creates a new eip.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	InstanceId          pulumi.StringOutput `pulumi:"instanceId"`
	InstanceType        pulumi.StringOutput `pulumi:"instanceType"`
	// The IPv6 address of the EIP.
	Ipv6Address pulumi.StringOutput `pulumi:"ipv6Address"`
	// The name of the EIP.
	Name       pulumi.StringOutput    `pulumi:"name"`
	Period     pulumi.IntPtrOutput    `pulumi:"period"`
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// The port ID which the EIP associated with.
	PortId pulumi.StringOutput `pulumi:"portId"`
	// The private IP address bound to the EIP.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// The elastic IP address object.
	Publicip EipPublicipOutput `pulumi:"publicip"`
	// The region in which to create the eip resource. If omitted, the provider-level
	// region will be used. Changing this creates a new eip resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of eip.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the elastic IP.
	Tags      pulumi.StringMapOutput `pulumi:"tags"`
	UpdatedAt pulumi.StringOutput    `pulumi:"updatedAt"`
}

// NewEip registers a new resource with the given unique name, arguments, and options.
func NewEip(ctx *pulumi.Context,
	name string, args *EipArgs, opts ...pulumi.ResourceOption) (*Eip, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bandwidth == nil {
		return nil, errors.New("invalid value for required argument 'Bandwidth'")
	}
	if args.Publicip == nil {
		return nil, errors.New("invalid value for required argument 'Publicip'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Eip
	err := ctx.RegisterResource("sbercloud:Vpc/eip:Eip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEip gets an existing Eip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipState, opts ...pulumi.ResourceOption) (*Eip, error) {
	var resource Eip
	err := ctx.ReadResource("sbercloud:Vpc/eip:Eip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Eip resources.
type eipState struct {
	// The IP address of the eip.
	Address       *string `pulumi:"address"`
	AssociateId   *string `pulumi:"associateId"`
	AssociateType *string `pulumi:"associateType"`
	// Deprecated: Deprecated
	AutoPay *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew *string `pulumi:"autoRenew"`
	// The bandwidth object.
	Bandwidth    *EipBandwidth `pulumi:"bandwidth"`
	ChargingMode *string       `pulumi:"chargingMode"`
	CreatedAt    *string       `pulumi:"createdAt"`
	// The enterprise project id of the elastic IP. Changing this
	// creates a new eip.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	InstanceId          *string `pulumi:"instanceId"`
	InstanceType        *string `pulumi:"instanceType"`
	// The IPv6 address of the EIP.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// The name of the EIP.
	Name       *string `pulumi:"name"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// The port ID which the EIP associated with.
	PortId *string `pulumi:"portId"`
	// The private IP address bound to the EIP.
	PrivateIp *string `pulumi:"privateIp"`
	// The elastic IP address object.
	Publicip *EipPublicip `pulumi:"publicip"`
	// The region in which to create the eip resource. If omitted, the provider-level
	// region will be used. Changing this creates a new eip resource.
	Region *string `pulumi:"region"`
	// The status of eip.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the elastic IP.
	Tags      map[string]string `pulumi:"tags"`
	UpdatedAt *string           `pulumi:"updatedAt"`
}

type EipState struct {
	// The IP address of the eip.
	Address       pulumi.StringPtrInput
	AssociateId   pulumi.StringPtrInput
	AssociateType pulumi.StringPtrInput
	// Deprecated: Deprecated
	AutoPay pulumi.StringPtrInput
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew pulumi.StringPtrInput
	// The bandwidth object.
	Bandwidth    EipBandwidthPtrInput
	ChargingMode pulumi.StringPtrInput
	CreatedAt    pulumi.StringPtrInput
	// The enterprise project id of the elastic IP. Changing this
	// creates a new eip.
	EnterpriseProjectId pulumi.StringPtrInput
	InstanceId          pulumi.StringPtrInput
	InstanceType        pulumi.StringPtrInput
	// The IPv6 address of the EIP.
	Ipv6Address pulumi.StringPtrInput
	// The name of the EIP.
	Name       pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// The port ID which the EIP associated with.
	PortId pulumi.StringPtrInput
	// The private IP address bound to the EIP.
	PrivateIp pulumi.StringPtrInput
	// The elastic IP address object.
	Publicip EipPublicipPtrInput
	// The region in which to create the eip resource. If omitted, the provider-level
	// region will be used. Changing this creates a new eip resource.
	Region pulumi.StringPtrInput
	// The status of eip.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the elastic IP.
	Tags      pulumi.StringMapInput
	UpdatedAt pulumi.StringPtrInput
}

func (EipState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipState)(nil)).Elem()
}

type eipArgs struct {
	// Deprecated: Deprecated
	AutoPay *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew *string `pulumi:"autoRenew"`
	// The bandwidth object.
	Bandwidth    EipBandwidth `pulumi:"bandwidth"`
	ChargingMode *string      `pulumi:"chargingMode"`
	// The enterprise project id of the elastic IP. Changing this
	// creates a new eip.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The name of the EIP.
	Name       *string `pulumi:"name"`
	Period     *int    `pulumi:"period"`
	PeriodUnit *string `pulumi:"periodUnit"`
	// The elastic IP address object.
	Publicip EipPublicip `pulumi:"publicip"`
	// The region in which to create the eip resource. If omitted, the provider-level
	// region will be used. Changing this creates a new eip resource.
	Region *string `pulumi:"region"`
	// Specifies the key/value pairs to associate with the elastic IP.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Eip resource.
type EipArgs struct {
	// Deprecated: Deprecated
	AutoPay pulumi.StringPtrInput
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew pulumi.StringPtrInput
	// The bandwidth object.
	Bandwidth    EipBandwidthInput
	ChargingMode pulumi.StringPtrInput
	// The enterprise project id of the elastic IP. Changing this
	// creates a new eip.
	EnterpriseProjectId pulumi.StringPtrInput
	// The name of the EIP.
	Name       pulumi.StringPtrInput
	Period     pulumi.IntPtrInput
	PeriodUnit pulumi.StringPtrInput
	// The elastic IP address object.
	Publicip EipPublicipInput
	// The region in which to create the eip resource. If omitted, the provider-level
	// region will be used. Changing this creates a new eip resource.
	Region pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the elastic IP.
	Tags pulumi.StringMapInput
}

func (EipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipArgs)(nil)).Elem()
}

type EipInput interface {
	pulumi.Input

	ToEipOutput() EipOutput
	ToEipOutputWithContext(ctx context.Context) EipOutput
}

func (*Eip) ElementType() reflect.Type {
	return reflect.TypeOf((**Eip)(nil)).Elem()
}

func (i *Eip) ToEipOutput() EipOutput {
	return i.ToEipOutputWithContext(context.Background())
}

func (i *Eip) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipOutput)
}

// EipArrayInput is an input type that accepts EipArray and EipArrayOutput values.
// You can construct a concrete instance of `EipArrayInput` via:
//
//	EipArray{ EipArgs{...} }
type EipArrayInput interface {
	pulumi.Input

	ToEipArrayOutput() EipArrayOutput
	ToEipArrayOutputWithContext(context.Context) EipArrayOutput
}

type EipArray []EipInput

func (EipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Eip)(nil)).Elem()
}

func (i EipArray) ToEipArrayOutput() EipArrayOutput {
	return i.ToEipArrayOutputWithContext(context.Background())
}

func (i EipArray) ToEipArrayOutputWithContext(ctx context.Context) EipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipArrayOutput)
}

// EipMapInput is an input type that accepts EipMap and EipMapOutput values.
// You can construct a concrete instance of `EipMapInput` via:
//
//	EipMap{ "key": EipArgs{...} }
type EipMapInput interface {
	pulumi.Input

	ToEipMapOutput() EipMapOutput
	ToEipMapOutputWithContext(context.Context) EipMapOutput
}

type EipMap map[string]EipInput

func (EipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Eip)(nil)).Elem()
}

func (i EipMap) ToEipMapOutput() EipMapOutput {
	return i.ToEipMapOutputWithContext(context.Background())
}

func (i EipMap) ToEipMapOutputWithContext(ctx context.Context) EipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipMapOutput)
}

type EipOutput struct{ *pulumi.OutputState }

func (EipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Eip)(nil)).Elem()
}

func (o EipOutput) ToEipOutput() EipOutput {
	return o
}

func (o EipOutput) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return o
}

// The IP address of the eip.
func (o EipOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

func (o EipOutput) AssociateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.AssociateId }).(pulumi.StringOutput)
}

func (o EipOutput) AssociateType() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.AssociateType }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o EipOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

// Specifies whether auto renew is enabled. Valid values are "true" and "
// false". Changing this creates a new resource.
func (o EipOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// The bandwidth object.
func (o EipOutput) Bandwidth() EipBandwidthOutput {
	return o.ApplyT(func(v *Eip) EipBandwidthOutput { return v.Bandwidth }).(EipBandwidthOutput)
}

func (o EipOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o EipOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The enterprise project id of the elastic IP. Changing this
// creates a new eip.
func (o EipOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o EipOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o EipOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The IPv6 address of the EIP.
func (o EipOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The name of the EIP.
func (o EipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EipOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

func (o EipOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// The port ID which the EIP associated with.
func (o EipOutput) PortId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.PortId }).(pulumi.StringOutput)
}

// The private IP address bound to the EIP.
func (o EipOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

// The elastic IP address object.
func (o EipOutput) Publicip() EipPublicipOutput {
	return o.ApplyT(func(v *Eip) EipPublicipOutput { return v.Publicip }).(EipPublicipOutput)
}

// The region in which to create the eip resource. If omitted, the provider-level
// region will be used. Changing this creates a new eip resource.
func (o EipOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The status of eip.
func (o EipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the elastic IP.
func (o EipOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o EipOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type EipArrayOutput struct{ *pulumi.OutputState }

func (EipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Eip)(nil)).Elem()
}

func (o EipArrayOutput) ToEipArrayOutput() EipArrayOutput {
	return o
}

func (o EipArrayOutput) ToEipArrayOutputWithContext(ctx context.Context) EipArrayOutput {
	return o
}

func (o EipArrayOutput) Index(i pulumi.IntInput) EipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Eip {
		return vs[0].([]*Eip)[vs[1].(int)]
	}).(EipOutput)
}

type EipMapOutput struct{ *pulumi.OutputState }

func (EipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Eip)(nil)).Elem()
}

func (o EipMapOutput) ToEipMapOutput() EipMapOutput {
	return o
}

func (o EipMapOutput) ToEipMapOutputWithContext(ctx context.Context) EipMapOutput {
	return o
}

func (o EipMapOutput) MapIndex(k pulumi.StringInput) EipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Eip {
		return vs[0].(map[string]*Eip)[vs[1].(string)]
	}).(EipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EipInput)(nil)).Elem(), &Eip{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipArrayInput)(nil)).Elem(), EipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipMapInput)(nil)).Elem(), EipMap{})
	pulumi.RegisterOutputType(EipOutput{})
	pulumi.RegisterOutputType(EipArrayOutput{})
	pulumi.RegisterOutputType(EipMapOutput{})
}
