// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "cloudru:Er/association:Association":
		r = &Association{}
	case "cloudru:Er/attachmentAccepter:AttachmentAccepter":
		r = &AttachmentAccepter{}
	case "cloudru:Er/flowLog:FlowLog":
		r = &FlowLog{}
	case "cloudru:Er/instance:Instance":
		r = &Instance{}
	case "cloudru:Er/propagation:Propagation":
		r = &Propagation{}
	case "cloudru:Er/routeTable:RouteTable":
		r = &RouteTable{}
	case "cloudru:Er/staticRoute:StaticRoute":
		r = &StaticRoute{}
	case "cloudru:Er/vpcAttachment:VpcAttachment":
		r = &VpcAttachment{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/association",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/attachmentAccepter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/flowLog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/propagation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/routeTable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/staticRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"cloudru",
		"Er/vpcAttachment",
		&module{version},
	)
}
