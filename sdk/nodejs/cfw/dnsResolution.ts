// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DnsResolution extends pulumi.CustomResource {
    /**
     * Get an existing DnsResolution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsResolutionState, opts?: pulumi.CustomResourceOptions): DnsResolution {
        return new DnsResolution(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/dnsResolution:DnsResolution';

    /**
     * Returns true if the given object is an instance of DnsResolution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsResolution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsResolution.__pulumiType;
    }

    /**
     * The custom DNS servers.
     */
    declare public readonly customDnsServers: pulumi.Output<string[] | undefined>;
    /**
     * The default DNS servers.
     */
    declare public readonly defaultDnsServers: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the firewall.
     */
    declare public readonly fwInstanceId: pulumi.Output<string>;
    /**
     * The health check domain name.
     */
    declare public readonly healthCheckDomainName: pulumi.Output<string>;
    declare public readonly region: pulumi.Output<string>;

    /**
     * Create a DnsResolution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsResolutionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsResolutionArgs | DnsResolutionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsResolutionState | undefined;
            resourceInputs["customDnsServers"] = state?.customDnsServers;
            resourceInputs["defaultDnsServers"] = state?.defaultDnsServers;
            resourceInputs["fwInstanceId"] = state?.fwInstanceId;
            resourceInputs["healthCheckDomainName"] = state?.healthCheckDomainName;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as DnsResolutionArgs | undefined;
            if (args?.fwInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'fwInstanceId'");
            }
            resourceInputs["customDnsServers"] = args?.customDnsServers;
            resourceInputs["defaultDnsServers"] = args?.defaultDnsServers;
            resourceInputs["fwInstanceId"] = args?.fwInstanceId;
            resourceInputs["healthCheckDomainName"] = args?.healthCheckDomainName;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsResolution.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DnsResolution resources.
 */
export interface DnsResolutionState {
    /**
     * The custom DNS servers.
     */
    customDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default DNS servers.
     */
    defaultDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the firewall.
     */
    fwInstanceId?: pulumi.Input<string>;
    /**
     * The health check domain name.
     */
    healthCheckDomainName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DnsResolution resource.
 */
export interface DnsResolutionArgs {
    /**
     * The custom DNS servers.
     */
    customDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default DNS servers.
     */
    defaultDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the firewall.
     */
    fwInstanceId: pulumi.Input<string>;
    /**
     * The health check domain name.
     */
    healthCheckDomainName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
