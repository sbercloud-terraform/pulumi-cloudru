// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:DedicatedApig/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * schema: Required; The name list of availability zones for the dedicated instance.
     */
    declare public readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * schema: Deprecated; The name list of availability zones for the dedicated instance.
     */
    declare public readonly availableZones: pulumi.Output<string[] | undefined>;
    /**
     * The egress bandwidth size of the dedicated instance.
     */
    declare public readonly bandwidthSize: pulumi.Output<number | undefined>;
    /**
     * schema: Deprecated; Time when the dedicated instance is created.
     *
     * @deprecated Use 'created_at' instead
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Time when the dedicated instance is created, in RFC-3339 format.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * Specified the list of the instance custom ingress ports.
     */
    declare public readonly customIngressPorts: pulumi.Output<outputs.DedicatedApig.InstanceCustomIngressPort[] | undefined>;
    /**
     * The description of the dedicated instance.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The edition of the dedicated instance.
     */
    declare public readonly edition: pulumi.Output<string>;
    /**
     * The egress (NAT) public IP address.
     */
    declare public /*out*/ readonly egressAddress: pulumi.Output<string>;
    /**
     * The EIP ID associated with the dedicated instance.
     */
    declare public readonly eipId: pulumi.Output<string>;
    /**
     * The enterprise project ID to which the dedicated instance belongs.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * The ingress EIP address.
     */
    declare public /*out*/ readonly ingressAddress: pulumi.Output<string>;
    declare public readonly ingressBandwidthChargingMode: pulumi.Output<string | undefined>;
    declare public readonly ingressBandwidthSize: pulumi.Output<number | undefined>;
    /**
     * Whether public access with an IPv6 address is supported.
     */
    declare public readonly ipv6Enable: pulumi.Output<boolean>;
    /**
     * The type of loadbalancer provider used by the instance.
     */
    declare public readonly loadbalancerProvider: pulumi.Output<string>;
    /**
     * The start time of the maintenance time window.
     */
    declare public readonly maintainBegin: pulumi.Output<string>;
    /**
     * End time of the maintenance time window, 4-hour difference between the start time and end time.
     */
    declare public /*out*/ readonly maintainEnd: pulumi.Output<string>;
    /**
     * The name of the dedicated instance.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The region in which to create the dedicated instance resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The ID of the security group to which the dedicated instance belongs to.
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * Status of the dedicated instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The ID of the VPC subnet used to create the dedicated instance.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * The supported features of the dedicated instance.
     */
    declare public /*out*/ readonly supportedFeatures: pulumi.Output<string[]>;
    declare public readonly tags: pulumi.Output<{[key: string]: string}>;
    /**
     * The ID of the VPC used to create the dedicated instance.
     */
    declare public readonly vpcId: pulumi.Output<string>;
    /**
     * The ingress private IP address of the VPC.
     */
    declare public /*out*/ readonly vpcIngressAddress: pulumi.Output<string>;
    /**
     * The address (full name) of the VPC endpoint service.
     */
    declare public /*out*/ readonly vpcepServiceAddress: pulumi.Output<string>;
    /**
     * Name of the VPC endpoint service.
     */
    declare public readonly vpcepServiceName: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["availabilityZones"] = state?.availabilityZones;
            resourceInputs["availableZones"] = state?.availableZones;
            resourceInputs["bandwidthSize"] = state?.bandwidthSize;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["customIngressPorts"] = state?.customIngressPorts;
            resourceInputs["description"] = state?.description;
            resourceInputs["edition"] = state?.edition;
            resourceInputs["egressAddress"] = state?.egressAddress;
            resourceInputs["eipId"] = state?.eipId;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["ingressAddress"] = state?.ingressAddress;
            resourceInputs["ingressBandwidthChargingMode"] = state?.ingressBandwidthChargingMode;
            resourceInputs["ingressBandwidthSize"] = state?.ingressBandwidthSize;
            resourceInputs["ipv6Enable"] = state?.ipv6Enable;
            resourceInputs["loadbalancerProvider"] = state?.loadbalancerProvider;
            resourceInputs["maintainBegin"] = state?.maintainBegin;
            resourceInputs["maintainEnd"] = state?.maintainEnd;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["supportedFeatures"] = state?.supportedFeatures;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vpcIngressAddress"] = state?.vpcIngressAddress;
            resourceInputs["vpcepServiceAddress"] = state?.vpcepServiceAddress;
            resourceInputs["vpcepServiceName"] = state?.vpcepServiceName;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.edition === undefined && !opts.urn) {
                throw new Error("Missing required property 'edition'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["availabilityZones"] = args?.availabilityZones;
            resourceInputs["availableZones"] = args?.availableZones;
            resourceInputs["bandwidthSize"] = args?.bandwidthSize;
            resourceInputs["customIngressPorts"] = args?.customIngressPorts;
            resourceInputs["description"] = args?.description;
            resourceInputs["edition"] = args?.edition;
            resourceInputs["eipId"] = args?.eipId;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["ingressBandwidthChargingMode"] = args?.ingressBandwidthChargingMode;
            resourceInputs["ingressBandwidthSize"] = args?.ingressBandwidthSize;
            resourceInputs["ipv6Enable"] = args?.ipv6Enable;
            resourceInputs["loadbalancerProvider"] = args?.loadbalancerProvider;
            resourceInputs["maintainBegin"] = args?.maintainBegin;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["vpcepServiceName"] = args?.vpcepServiceName;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["egressAddress"] = undefined /*out*/;
            resourceInputs["ingressAddress"] = undefined /*out*/;
            resourceInputs["maintainEnd"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["supportedFeatures"] = undefined /*out*/;
            resourceInputs["vpcIngressAddress"] = undefined /*out*/;
            resourceInputs["vpcepServiceAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * schema: Required; The name list of availability zones for the dedicated instance.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * schema: Deprecated; The name list of availability zones for the dedicated instance.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The egress bandwidth size of the dedicated instance.
     */
    bandwidthSize?: pulumi.Input<number>;
    /**
     * schema: Deprecated; Time when the dedicated instance is created.
     *
     * @deprecated Use 'created_at' instead
     */
    createTime?: pulumi.Input<string>;
    /**
     * Time when the dedicated instance is created, in RFC-3339 format.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specified the list of the instance custom ingress ports.
     */
    customIngressPorts?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.InstanceCustomIngressPort>[]>;
    /**
     * The description of the dedicated instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The edition of the dedicated instance.
     */
    edition?: pulumi.Input<string>;
    /**
     * The egress (NAT) public IP address.
     */
    egressAddress?: pulumi.Input<string>;
    /**
     * The EIP ID associated with the dedicated instance.
     */
    eipId?: pulumi.Input<string>;
    /**
     * The enterprise project ID to which the dedicated instance belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The ingress EIP address.
     */
    ingressAddress?: pulumi.Input<string>;
    ingressBandwidthChargingMode?: pulumi.Input<string>;
    ingressBandwidthSize?: pulumi.Input<number>;
    /**
     * Whether public access with an IPv6 address is supported.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * The type of loadbalancer provider used by the instance.
     */
    loadbalancerProvider?: pulumi.Input<string>;
    /**
     * The start time of the maintenance time window.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * End time of the maintenance time window, 4-hour difference between the start time and end time.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * The name of the dedicated instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to create the dedicated instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the security group to which the dedicated instance belongs to.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Status of the dedicated instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the VPC subnet used to create the dedicated instance.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The supported features of the dedicated instance.
     */
    supportedFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC used to create the dedicated instance.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ingress private IP address of the VPC.
     */
    vpcIngressAddress?: pulumi.Input<string>;
    /**
     * The address (full name) of the VPC endpoint service.
     */
    vpcepServiceAddress?: pulumi.Input<string>;
    /**
     * Name of the VPC endpoint service.
     */
    vpcepServiceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * schema: Required; The name list of availability zones for the dedicated instance.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * schema: Deprecated; The name list of availability zones for the dedicated instance.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The egress bandwidth size of the dedicated instance.
     */
    bandwidthSize?: pulumi.Input<number>;
    /**
     * Specified the list of the instance custom ingress ports.
     */
    customIngressPorts?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.InstanceCustomIngressPort>[]>;
    /**
     * The description of the dedicated instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The edition of the dedicated instance.
     */
    edition: pulumi.Input<string>;
    /**
     * The EIP ID associated with the dedicated instance.
     */
    eipId?: pulumi.Input<string>;
    /**
     * The enterprise project ID to which the dedicated instance belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    ingressBandwidthChargingMode?: pulumi.Input<string>;
    ingressBandwidthSize?: pulumi.Input<number>;
    /**
     * Whether public access with an IPv6 address is supported.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * The type of loadbalancer provider used by the instance.
     */
    loadbalancerProvider?: pulumi.Input<string>;
    /**
     * The start time of the maintenance time window.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * The name of the dedicated instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to create the dedicated instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the security group to which the dedicated instance belongs to.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The ID of the VPC subnet used to create the dedicated instance.
     */
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the VPC used to create the dedicated instance.
     */
    vpcId: pulumi.Input<string>;
    /**
     * Name of the VPC endpoint service.
     */
    vpcepServiceName?: pulumi.Input<string>;
}
