// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AddressGroupMember extends pulumi.CustomResource {
    /**
     * Get an existing AddressGroupMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddressGroupMemberState, opts?: pulumi.CustomResourceOptions): AddressGroupMember {
        return new AddressGroupMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/addressGroupMember:AddressGroupMember';

    /**
     * Returns true if the given object is an instance of AddressGroupMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AddressGroupMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AddressGroupMember.__pulumiType;
    }

    /**
     * Specifies the IP address.
     */
    declare public readonly address: pulumi.Output<string>;
    /**
     * Specifies the address type.
     */
    declare public readonly addressType: pulumi.Output<number>;
    /**
     * Specifies address description.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Specifies the ID of the IP address group.
     */
    declare public readonly groupId: pulumi.Output<string>;
    /**
     * schema: Deprecated; Specifies the address name.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly region: pulumi.Output<string>;

    /**
     * Create a AddressGroupMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AddressGroupMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AddressGroupMemberArgs | AddressGroupMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AddressGroupMemberState | undefined;
            resourceInputs["address"] = state?.address;
            resourceInputs["addressType"] = state?.addressType;
            resourceInputs["description"] = state?.description;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as AddressGroupMemberArgs | undefined;
            if (args?.address === undefined && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            resourceInputs["address"] = args?.address;
            resourceInputs["addressType"] = args?.addressType;
            resourceInputs["description"] = args?.description;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AddressGroupMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AddressGroupMember resources.
 */
export interface AddressGroupMemberState {
    /**
     * Specifies the IP address.
     */
    address?: pulumi.Input<string>;
    /**
     * Specifies the address type.
     */
    addressType?: pulumi.Input<number>;
    /**
     * Specifies address description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the IP address group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * schema: Deprecated; Specifies the address name.
     */
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AddressGroupMember resource.
 */
export interface AddressGroupMemberArgs {
    /**
     * Specifies the IP address.
     */
    address: pulumi.Input<string>;
    /**
     * Specifies the address type.
     */
    addressType?: pulumi.Input<number>;
    /**
     * Specifies address description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the IP address group.
     */
    groupId: pulumi.Input<string>;
    /**
     * schema: Deprecated; Specifies the address name.
     */
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
