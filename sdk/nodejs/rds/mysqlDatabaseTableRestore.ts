// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an RDS instance MySQL database table restore resource within SberCloud.
 *
 * ## Example Usage
 *
 * ### MySQL databases restore
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = new sbercloud.rds.MysqlDatabaseTableRestore("test", {
 *     restoreTime: 1673852043000,
 *     instanceId: instanceId,
 *     databases: [{
 *         oldName: "test111",
 *         newName: "test111_update",
 *     }],
 * });
 * ```
 *
 * ### MySQL tables restore
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const test = new sbercloud.rds.MysqlDatabaseTableRestore("test", {
 *     restoreTime: 1673852043000,
 *     instanceId: instanceId,
 *     restoreTables: [{
 *         database: "test111",
 *         tables: [{
 *             oldName: "table111",
 *             newName: "table111_update",
 *         }],
 *     }],
 * });
 * ```
 */
export class MysqlDatabaseTableRestore extends pulumi.CustomResource {
    /**
     * Get an existing MysqlDatabaseTableRestore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlDatabaseTableRestoreState, opts?: pulumi.CustomResourceOptions): MysqlDatabaseTableRestore {
        return new MysqlDatabaseTableRestore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Rds/mysqlDatabaseTableRestore:MysqlDatabaseTableRestore';

    /**
     * Returns true if the given object is an instance of MysqlDatabaseTableRestore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlDatabaseTableRestore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlDatabaseTableRestore.__pulumiType;
    }

    /**
     * Specifies the databases that will be restored.
     * The databases structure is documented below.
     *
     * Changing this creates a new resource.
     */
    declare public readonly databases: pulumi.Output<outputs.Rds.MysqlDatabaseTableRestoreDatabase[] | undefined>;
    /**
     * Specifies the ID of RDS MySQL instance.
     *
     * Changing this creates a new resource.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * Specifies whether to use fast restoration.
     *
     * Changing this creates a new resource.
     */
    declare public readonly isFastRestore: pulumi.Output<boolean | undefined>;
    /**
     * The region in which to create the rds instance resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the tables that will be restored.
     * The restoreTables structure is documented below.
     *
     * Changing this creates a new resource.
     *
     * > Exactly one of `databases` and `restoreTables` must be set.
     *
     * <a name="databasesStruct"></a>
     * The `databases` block supports:
     */
    declare public readonly restoreTables: pulumi.Output<outputs.Rds.MysqlDatabaseTableRestoreRestoreTable[] | undefined>;
    /**
     * Specifies the restoration time point. A timestamp in milliseconds is used.
     *
     * Changing this creates a new resource.
     */
    declare public readonly restoreTime: pulumi.Output<number>;

    /**
     * Create a MysqlDatabaseTableRestore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MysqlDatabaseTableRestoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlDatabaseTableRestoreArgs | MysqlDatabaseTableRestoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlDatabaseTableRestoreState | undefined;
            resourceInputs["databases"] = state?.databases;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["isFastRestore"] = state?.isFastRestore;
            resourceInputs["region"] = state?.region;
            resourceInputs["restoreTables"] = state?.restoreTables;
            resourceInputs["restoreTime"] = state?.restoreTime;
        } else {
            const args = argsOrState as MysqlDatabaseTableRestoreArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.restoreTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'restoreTime'");
            }
            resourceInputs["databases"] = args?.databases;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["isFastRestore"] = args?.isFastRestore;
            resourceInputs["region"] = args?.region;
            resourceInputs["restoreTables"] = args?.restoreTables;
            resourceInputs["restoreTime"] = args?.restoreTime;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MysqlDatabaseTableRestore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MysqlDatabaseTableRestore resources.
 */
export interface MysqlDatabaseTableRestoreState {
    /**
     * Specifies the databases that will be restored.
     * The databases structure is documented below.
     *
     * Changing this creates a new resource.
     */
    databases?: pulumi.Input<pulumi.Input<inputs.Rds.MysqlDatabaseTableRestoreDatabase>[]>;
    /**
     * Specifies the ID of RDS MySQL instance.
     *
     * Changing this creates a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies whether to use fast restoration.
     *
     * Changing this creates a new resource.
     */
    isFastRestore?: pulumi.Input<boolean>;
    /**
     * The region in which to create the rds instance resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the tables that will be restored.
     * The restoreTables structure is documented below.
     *
     * Changing this creates a new resource.
     *
     * > Exactly one of `databases` and `restoreTables` must be set.
     *
     * <a name="databasesStruct"></a>
     * The `databases` block supports:
     */
    restoreTables?: pulumi.Input<pulumi.Input<inputs.Rds.MysqlDatabaseTableRestoreRestoreTable>[]>;
    /**
     * Specifies the restoration time point. A timestamp in milliseconds is used.
     *
     * Changing this creates a new resource.
     */
    restoreTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MysqlDatabaseTableRestore resource.
 */
export interface MysqlDatabaseTableRestoreArgs {
    /**
     * Specifies the databases that will be restored.
     * The databases structure is documented below.
     *
     * Changing this creates a new resource.
     */
    databases?: pulumi.Input<pulumi.Input<inputs.Rds.MysqlDatabaseTableRestoreDatabase>[]>;
    /**
     * Specifies the ID of RDS MySQL instance.
     *
     * Changing this creates a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies whether to use fast restoration.
     *
     * Changing this creates a new resource.
     */
    isFastRestore?: pulumi.Input<boolean>;
    /**
     * The region in which to create the rds instance resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the tables that will be restored.
     * The restoreTables structure is documented below.
     *
     * Changing this creates a new resource.
     *
     * > Exactly one of `databases` and `restoreTables` must be set.
     *
     * <a name="databasesStruct"></a>
     * The `databases` block supports:
     */
    restoreTables?: pulumi.Input<pulumi.Input<inputs.Rds.MysqlDatabaseTableRestoreRestoreTable>[]>;
    /**
     * Specifies the restoration time point. A timestamp in milliseconds is used.
     *
     * Changing this creates a new resource.
     */
    restoreTime: pulumi.Input<number>;
}
