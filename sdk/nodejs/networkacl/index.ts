// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AclArgs, AclState } from "./acl";
export type Acl = import("./acl").Acl;
export const Acl: typeof import("./acl").Acl = null as any;
utilities.lazyLoad(exports, ["Acl"], () => require("./acl"));

export { AclRuleArgs, AclRuleState } from "./aclRule";
export type AclRule = import("./aclRule").AclRule;
export const AclRule: typeof import("./aclRule").AclRule = null as any;
utilities.lazyLoad(exports, ["AclRule"], () => require("./aclRule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sbercloud:NetworkAcl/acl:Acl":
                return new Acl(name, <any>undefined, { urn })
            case "sbercloud:NetworkAcl/aclRule:AclRule":
                return new AclRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sbercloud", "NetworkAcl/acl", _module)
pulumi.runtime.registerResourceModule("sbercloud", "NetworkAcl/aclRule", _module)
