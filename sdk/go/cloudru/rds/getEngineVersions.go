// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Use this data source to obtain all version information of the specified engine type of SberCloud RDS.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds.GetEngineVersions(ctx, &rds.GetEngineVersionsArgs{
//				Type: pulumi.StringRef("SQLServer"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEngineVersions(ctx *pulumi.Context, args *GetEngineVersionsArgs, opts ...pulumi.InvokeOption) (*GetEngineVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEngineVersionsResult
	err := ctx.Invoke("sbercloud:Rds/getEngineVersions:getEngineVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEngineVersions.
type GetEngineVersionsArgs struct {
	// The region in which to obtain the RDS engine versions.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the RDS engine type.
	// The valid values are **MySQL**, **PostgreSQL** and **SQLServer**, default to **MySQL**.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getEngineVersions.
type GetEngineVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Region *string `pulumi:"region"`
	Type   *string `pulumi:"type"`
	// List of RDS versions. Structure is documented below.
	Versions []GetEngineVersionsVersion `pulumi:"versions"`
}

func GetEngineVersionsOutput(ctx *pulumi.Context, args GetEngineVersionsOutputArgs, opts ...pulumi.InvokeOption) GetEngineVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEngineVersionsResultOutput, error) {
			args := v.(GetEngineVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Rds/getEngineVersions:getEngineVersions", args, GetEngineVersionsResultOutput{}, options).(GetEngineVersionsResultOutput), nil
		}).(GetEngineVersionsResultOutput)
}

// A collection of arguments for invoking getEngineVersions.
type GetEngineVersionsOutputArgs struct {
	// The region in which to obtain the RDS engine versions.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the RDS engine type.
	// The valid values are **MySQL**, **PostgreSQL** and **SQLServer**, default to **MySQL**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEngineVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getEngineVersions.
type GetEngineVersionsResultOutput struct{ *pulumi.OutputState }

func (GetEngineVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionsResult)(nil)).Elem()
}

func (o GetEngineVersionsResultOutput) ToGetEngineVersionsResultOutput() GetEngineVersionsResultOutput {
	return o
}

func (o GetEngineVersionsResultOutput) ToGetEngineVersionsResultOutputWithContext(ctx context.Context) GetEngineVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetEngineVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEngineVersionsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEngineVersionsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetEngineVersionsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEngineVersionsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// List of RDS versions. Structure is documented below.
func (o GetEngineVersionsResultOutput) Versions() GetEngineVersionsVersionArrayOutput {
	return o.ApplyT(func(v GetEngineVersionsResult) []GetEngineVersionsVersion { return v.Versions }).(GetEngineVersionsVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEngineVersionsResultOutput{})
}
