// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetFlowLogs(ctx *pulumi.Context, args *GetFlowLogsArgs, opts ...pulumi.InvokeOption) (*GetFlowLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlowLogsResult
	err := ctx.Invoke("cloudru:Cfw/getFlowLogs:getFlowLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsArgs struct {
	App                 *string `pulumi:"app"`
	Direction           *string `pulumi:"direction"`
	DstCityName         *string `pulumi:"dstCityName"`
	DstIp               *string `pulumi:"dstIp"`
	DstPort             *int    `pulumi:"dstPort"`
	DstProvinceName     *string `pulumi:"dstProvinceName"`
	DstRegionName       *string `pulumi:"dstRegionName"`
	EndTime             string  `pulumi:"endTime"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FwInstanceId        string  `pulumi:"fwInstanceId"`
	Region              *string `pulumi:"region"`
	SrcCityName         *string `pulumi:"srcCityName"`
	SrcIp               *string `pulumi:"srcIp"`
	SrcPort             *int    `pulumi:"srcPort"`
	SrcProvinceName     *string `pulumi:"srcProvinceName"`
	SrcRegionName       *string `pulumi:"srcRegionName"`
	StartTime           string  `pulumi:"startTime"`
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResult struct {
	App                 *string `pulumi:"app"`
	Direction           *string `pulumi:"direction"`
	DstCityName         *string `pulumi:"dstCityName"`
	DstIp               *string `pulumi:"dstIp"`
	DstPort             *int    `pulumi:"dstPort"`
	DstProvinceName     *string `pulumi:"dstProvinceName"`
	DstRegionName       *string `pulumi:"dstRegionName"`
	EndTime             string  `pulumi:"endTime"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	FwInstanceId        string  `pulumi:"fwInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id              string              `pulumi:"id"`
	Records         []GetFlowLogsRecord `pulumi:"records"`
	Region          string              `pulumi:"region"`
	SrcCityName     *string             `pulumi:"srcCityName"`
	SrcIp           *string             `pulumi:"srcIp"`
	SrcPort         *int                `pulumi:"srcPort"`
	SrcProvinceName *string             `pulumi:"srcProvinceName"`
	SrcRegionName   *string             `pulumi:"srcRegionName"`
	StartTime       string              `pulumi:"startTime"`
}

func GetFlowLogsOutput(ctx *pulumi.Context, args GetFlowLogsOutputArgs, opts ...pulumi.InvokeOption) GetFlowLogsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlowLogsResultOutput, error) {
			args := v.(GetFlowLogsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Cfw/getFlowLogs:getFlowLogs", args, GetFlowLogsResultOutput{}, options).(GetFlowLogsResultOutput), nil
		}).(GetFlowLogsResultOutput)
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsOutputArgs struct {
	App                 pulumi.StringPtrInput `pulumi:"app"`
	Direction           pulumi.StringPtrInput `pulumi:"direction"`
	DstCityName         pulumi.StringPtrInput `pulumi:"dstCityName"`
	DstIp               pulumi.StringPtrInput `pulumi:"dstIp"`
	DstPort             pulumi.IntPtrInput    `pulumi:"dstPort"`
	DstProvinceName     pulumi.StringPtrInput `pulumi:"dstProvinceName"`
	DstRegionName       pulumi.StringPtrInput `pulumi:"dstRegionName"`
	EndTime             pulumi.StringInput    `pulumi:"endTime"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	FwInstanceId        pulumi.StringInput    `pulumi:"fwInstanceId"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	SrcCityName         pulumi.StringPtrInput `pulumi:"srcCityName"`
	SrcIp               pulumi.StringPtrInput `pulumi:"srcIp"`
	SrcPort             pulumi.IntPtrInput    `pulumi:"srcPort"`
	SrcProvinceName     pulumi.StringPtrInput `pulumi:"srcProvinceName"`
	SrcRegionName       pulumi.StringPtrInput `pulumi:"srcRegionName"`
	StartTime           pulumi.StringInput    `pulumi:"startTime"`
}

func (GetFlowLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsArgs)(nil)).Elem()
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResultOutput struct{ *pulumi.OutputState }

func (GetFlowLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsResult)(nil)).Elem()
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutput() GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutputWithContext(ctx context.Context) GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) App() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.App }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) DstCityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.DstCityName }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) DstIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.DstIp }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) DstPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *int { return v.DstPort }).(pulumi.IntPtrOutput)
}

func (o GetFlowLogsResultOutput) DstProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.DstProvinceName }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) DstRegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.DstRegionName }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetFlowLogsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) FwInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.FwInstanceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlowLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlowLogsResultOutput) Records() GetFlowLogsRecordArrayOutput {
	return o.ApplyT(func(v GetFlowLogsResult) []GetFlowLogsRecord { return v.Records }).(GetFlowLogsRecordArrayOutput)
}

func (o GetFlowLogsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetFlowLogsResultOutput) SrcCityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.SrcCityName }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) SrcIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.SrcIp }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) SrcPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *int { return v.SrcPort }).(pulumi.IntPtrOutput)
}

func (o GetFlowLogsResultOutput) SrcProvinceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.SrcProvinceName }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) SrcRegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.SrcRegionName }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlowLogsResultOutput{})
}
