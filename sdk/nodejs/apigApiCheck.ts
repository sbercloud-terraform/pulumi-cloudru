// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApigApiCheck extends pulumi.CustomResource {
    /**
     * Get an existing ApigApiCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigApiCheckState, opts?: pulumi.CustomResourceOptions): ApigApiCheck {
        return new ApigApiCheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/apigApiCheck:ApigApiCheck';

    /**
     * Returns true if the given object is an instance of ApigApiCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigApiCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigApiCheck.__pulumiType;
    }

    /**
     * The ID of the API to be excluded from the check.
     */
    declare public readonly apiId: pulumi.Output<string | undefined>;
    declare public readonly enableForceNew: pulumi.Output<string | undefined>;
    /**
     * The ID of the group to which the API belongs.
     */
    declare public readonly groupId: pulumi.Output<string | undefined>;
    /**
     * The ID of the dedicated instance to which the API belongs.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * The matching mode of the API.
     */
    declare public readonly matchMode: pulumi.Output<string | undefined>;
    /**
     * The name of the API.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * The request method of the API.
     */
    declare public readonly reqMethod: pulumi.Output<string | undefined>;
    /**
     * The request path of the API.
     */
    declare public readonly reqUri: pulumi.Output<string | undefined>;
    /**
     * The type of the API to be checked.
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a ApigApiCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigApiCheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigApiCheckArgs | ApigApiCheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigApiCheckState | undefined;
            resourceInputs["apiId"] = state?.apiId;
            resourceInputs["enableForceNew"] = state?.enableForceNew;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["matchMode"] = state?.matchMode;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["reqMethod"] = state?.reqMethod;
            resourceInputs["reqUri"] = state?.reqUri;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as ApigApiCheckArgs | undefined;
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["apiId"] = args?.apiId;
            resourceInputs["enableForceNew"] = args?.enableForceNew;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["matchMode"] = args?.matchMode;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["reqMethod"] = args?.reqMethod;
            resourceInputs["reqUri"] = args?.reqUri;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigApiCheck.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApigApiCheck resources.
 */
export interface ApigApiCheckState {
    /**
     * The ID of the API to be excluded from the check.
     */
    apiId?: pulumi.Input<string>;
    enableForceNew?: pulumi.Input<string>;
    /**
     * The ID of the group to which the API belongs.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The ID of the dedicated instance to which the API belongs.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The matching mode of the API.
     */
    matchMode?: pulumi.Input<string>;
    /**
     * The name of the API.
     */
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * The request method of the API.
     */
    reqMethod?: pulumi.Input<string>;
    /**
     * The request path of the API.
     */
    reqUri?: pulumi.Input<string>;
    /**
     * The type of the API to be checked.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigApiCheck resource.
 */
export interface ApigApiCheckArgs {
    /**
     * The ID of the API to be excluded from the check.
     */
    apiId?: pulumi.Input<string>;
    enableForceNew?: pulumi.Input<string>;
    /**
     * The ID of the group to which the API belongs.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The ID of the dedicated instance to which the API belongs.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The matching mode of the API.
     */
    matchMode?: pulumi.Input<string>;
    /**
     * The name of the API.
     */
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * The request method of the API.
     */
    reqMethod?: pulumi.Input<string>;
    /**
     * The request path of the API.
     */
    reqUri?: pulumi.Input<string>;
    /**
     * The type of the API to be checked.
     */
    type: pulumi.Input<string>;
}
