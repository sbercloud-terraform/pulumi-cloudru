// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get the list of DMS rocketMQ topics.
 */
export function getDmsRocketmqTopics(args: GetDmsRocketmqTopicsArgs, opts?: pulumi.InvokeOptions): Promise<GetDmsRocketmqTopicsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDmsRocketmqTopics:getDmsRocketmqTopics", {
        "instanceId": args.instanceId,
        "name": args.name,
        "permission": args.permission,
        "region": args.region,
        "totalReadQueueNum": args.totalReadQueueNum,
        "totalWriteQueueNum": args.totalWriteQueueNum,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqTopics.
 */
export interface GetDmsRocketmqTopicsArgs {
    /**
     * Specifies the ID of the rocketMQ instance.
     */
    instanceId: string;
    /**
     * Specifies the topic name.
     */
    name?: string;
    /**
     * Specifies the permission. Value options: **sub**, **pub** or **all**.
     */
    permission?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the number of total read queue.
     */
    totalReadQueueNum?: number;
    /**
     * Specifies the number of total write queue.
     */
    totalWriteQueueNum?: number;
}

/**
 * A collection of values returned by getDmsRocketmqTopics.
 */
export interface GetDmsRocketmqTopicsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Indicates the topic name.
     */
    readonly name?: string;
    /**
     * Indicates the permission. Value options: **sub**, **pub** or **all**.
     */
    readonly permission?: string;
    readonly region: string;
    /**
     * The list of topics.
     * The topics structure is documented below.
     */
    readonly topics: outputs.GetDmsRocketmqTopicsTopic[];
    /**
     * Indicates the number of total read queue.
     */
    readonly totalReadQueueNum?: number;
    /**
     * Indicates the number of total write queue.
     */
    readonly totalWriteQueueNum?: number;
}
/**
 * Use this data source to get the list of DMS rocketMQ topics.
 */
export function getDmsRocketmqTopicsOutput(args: GetDmsRocketmqTopicsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDmsRocketmqTopicsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDmsRocketmqTopics:getDmsRocketmqTopics", {
        "instanceId": args.instanceId,
        "name": args.name,
        "permission": args.permission,
        "region": args.region,
        "totalReadQueueNum": args.totalReadQueueNum,
        "totalWriteQueueNum": args.totalWriteQueueNum,
    }, opts);
}

/**
 * A collection of arguments for invoking getDmsRocketmqTopics.
 */
export interface GetDmsRocketmqTopicsOutputArgs {
    /**
     * Specifies the ID of the rocketMQ instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the topic name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the permission. Value options: **sub**, **pub** or **all**.
     */
    permission?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the number of total read queue.
     */
    totalReadQueueNum?: pulumi.Input<number>;
    /**
     * Specifies the number of total write queue.
     */
    totalWriteQueueNum?: pulumi.Input<number>;
}
