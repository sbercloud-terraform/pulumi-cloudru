// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to get the certificate in SberCloud Dedicated Load Balance (Dedicated ELB).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const certificateName = config.requireObject<any>("certificateName");
 * const test = sbercloud.getElbCertificate({
 *     name: certificateName,
 * });
 * ```
 */
export function getElbCertificate(args: GetElbCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetElbCertificateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getElbCertificate:getElbCertificate", {
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getElbCertificate.
 */
export interface GetElbCertificateArgs {
    /**
     * The name of certificate. The value is case sensitive and does not supports fuzzy matching.
     *
     * > **NOTE:** The certificate name is not unique. Only returns the last created one when matched multiple certificates.
     */
    name: string;
    /**
     * The region in which to obtain the Dedicated ELB certificate. If omitted, the
     * provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getElbCertificate.
 */
export interface GetElbCertificateResult {
    /**
     * Human-readable description for the Certificate.
     */
    readonly description: string;
    /**
     * The domain of the Certificate. This parameter is valid only when `type` is "server".
     */
    readonly domain: string;
    /**
     * Indicates the time when the certificate expires.
     */
    readonly expiration: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly region: string;
    /**
     * Specifies the certificate type. The value can be one of the following:
     */
    readonly type: string;
}
/**
 * Use this data source to get the certificate in SberCloud Dedicated Load Balance (Dedicated ELB).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const certificateName = config.requireObject<any>("certificateName");
 * const test = sbercloud.getElbCertificate({
 *     name: certificateName,
 * });
 * ```
 */
export function getElbCertificateOutput(args: GetElbCertificateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetElbCertificateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getElbCertificate:getElbCertificate", {
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getElbCertificate.
 */
export interface GetElbCertificateOutputArgs {
    /**
     * The name of certificate. The value is case sensitive and does not supports fuzzy matching.
     *
     * > **NOTE:** The certificate name is not unique. Only returns the last created one when matched multiple certificates.
     */
    name: pulumi.Input<string>;
    /**
     * The region in which to obtain the Dedicated ELB certificate. If omitted, the
     * provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
