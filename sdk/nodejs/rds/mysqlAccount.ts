// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages RDS Mysql account resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const accountPassword = config.requireObject<any>("accountPassword");
 * const test = new sbercloud.rds.MysqlAccount("test", {
 *     instanceId: instanceId,
 *     name: "test",
 *     password: accountPassword,
 * });
 * ```
 *
 * ## Import
 *
 * RDS account can be imported using the `instance_id` and `name` separated by a slash, e.g.:
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Rds/mysqlAccount:MysqlAccount account_1 <instance_id>/<name>
 * ```
 *
 * Note that the imported state may not be identical to your resource definition, due to some attributes missing from the
 *
 * API response, security or some other reason. The missing attributes include: `password`. It is generally recommended
 *
 * running `pulumi preview` after importing the RDS Mysql account. You can then decide if changes should be applied to
 *
 * the RDS Mysql account, or the resource definition should be updated to align with the RDS Mysql account. Also you
 *
 * can ignore changes as below.
 *
 * hcl
 *
 * resource "sbercloud_rds_mysql_account" "account_1" {
 *
 *     ...
 *
 *   lifecycle {
 *
 *     ignore_changes = [
 *     
 *       password
 *     
 *     ]
 *
 *   }
 *
 * }
 */
export class MysqlAccount extends pulumi.CustomResource {
    /**
     * Get an existing MysqlAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlAccountState, opts?: pulumi.CustomResourceOptions): MysqlAccount {
        return new MysqlAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Rds/mysqlAccount:MysqlAccount';

    /**
     * Returns true if the given object is an instance of MysqlAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlAccount.__pulumiType;
    }

    /**
     * Specifies remarks of the database account. The parameter must be 1 to 512
     * characters long and is supported only for MySQL 8.0.25 and later versions.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the IP addresses that are allowed to access your DB instance.
     * + If the IP address is set to %, all IP addresses are allowed to access your instance.
     * + If the IP address is set to 10.10.10.%, all IP addresses in the subnet 10.10.10.X are allowed to access
     * your instance.
     * + Multiple IP addresses can be added.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly hosts!: pulumi.Output<string[]>;
    /**
     * Specifies the rds instance id. Changing this will create a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the username of the db account. Only lowercase letters, digits,
     * hyphens (-), and underscores (_) are allowed. Changing this will create a new resource.
     * + If the database version is MySQL 5.6, the username consists of 1 to 16 characters.
     * + If the database version is MySQL 5.7 or 8.0, the username consists of 1 to 32 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the password of the db account. The parameter must be 8 to 32 characters
     * long and contain only letters(case-sensitive), digits, and special characters(~!@#$%^*-_=+?,()&). The value must be
     * different from `name` or `name` spelled backwards.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The region in which to create the rds account resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a MysqlAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MysqlAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlAccountArgs | MysqlAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlAccountState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as MysqlAccountArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MysqlAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MysqlAccount resources.
 */
export interface MysqlAccountState {
    /**
     * Specifies remarks of the database account. The parameter must be 1 to 512
     * characters long and is supported only for MySQL 8.0.25 and later versions.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the IP addresses that are allowed to access your DB instance.
     * + If the IP address is set to %, all IP addresses are allowed to access your instance.
     * + If the IP address is set to 10.10.10.%, all IP addresses in the subnet 10.10.10.X are allowed to access
     * your instance.
     * + Multiple IP addresses can be added.
     *
     * Changing this parameter will create a new resource.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the rds instance id. Changing this will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the username of the db account. Only lowercase letters, digits,
     * hyphens (-), and underscores (_) are allowed. Changing this will create a new resource.
     * + If the database version is MySQL 5.6, the username consists of 1 to 16 characters.
     * + If the database version is MySQL 5.7 or 8.0, the username consists of 1 to 32 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password of the db account. The parameter must be 8 to 32 characters
     * long and contain only letters(case-sensitive), digits, and special characters(~!@#$%^*-_=+?,()&). The value must be
     * different from `name` or `name` spelled backwards.
     */
    password?: pulumi.Input<string>;
    /**
     * The region in which to create the rds account resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MysqlAccount resource.
 */
export interface MysqlAccountArgs {
    /**
     * Specifies remarks of the database account. The parameter must be 1 to 512
     * characters long and is supported only for MySQL 8.0.25 and later versions.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the IP addresses that are allowed to access your DB instance.
     * + If the IP address is set to %, all IP addresses are allowed to access your instance.
     * + If the IP address is set to 10.10.10.%, all IP addresses in the subnet 10.10.10.X are allowed to access
     * your instance.
     * + Multiple IP addresses can be added.
     *
     * Changing this parameter will create a new resource.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the rds instance id. Changing this will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the username of the db account. Only lowercase letters, digits,
     * hyphens (-), and underscores (_) are allowed. Changing this will create a new resource.
     * + If the database version is MySQL 5.6, the username consists of 1 to 16 characters.
     * + If the database version is MySQL 5.7 or 8.0, the username consists of 1 to 32 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password of the db account. The parameter must be 8 to 32 characters
     * long and contain only letters(case-sensitive), digits, and special characters(~!@#$%^*-_=+?,()&). The value must be
     * different from `name` or `name` spelled backwards.
     */
    password: pulumi.Input<string>;
    /**
     * The region in which to create the rds account resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}
