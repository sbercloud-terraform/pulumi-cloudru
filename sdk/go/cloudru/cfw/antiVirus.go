// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type AntiVirus struct {
	pulumi.CustomResourceState

	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// Specifies the protected object ID.
	ObjectId pulumi.StringOutput `pulumi:"objectId"`
	// The region in which to create the resource. If omitted, the provider-level region will be used.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the scan protocol configurations.
	ScanProtocolConfigs AntiVirusScanProtocolConfigArrayOutput `pulumi:"scanProtocolConfigs"`
}

// NewAntiVirus registers a new resource with the given unique name, arguments, and options.
func NewAntiVirus(ctx *pulumi.Context,
	name string, args *AntiVirusArgs, opts ...pulumi.ResourceOption) (*AntiVirus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ObjectId == nil {
		return nil, errors.New("invalid value for required argument 'ObjectId'")
	}
	if args.ScanProtocolConfigs == nil {
		return nil, errors.New("invalid value for required argument 'ScanProtocolConfigs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AntiVirus
	err := ctx.RegisterResource("sbercloud:Cfw/antiVirus:AntiVirus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAntiVirus gets an existing AntiVirus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAntiVirus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AntiVirusState, opts ...pulumi.ResourceOption) (*AntiVirus, error) {
	var resource AntiVirus
	err := ctx.ReadResource("sbercloud:Cfw/antiVirus:AntiVirus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AntiVirus resources.
type antiVirusState struct {
	EnableForceNew *string `pulumi:"enableForceNew"`
	// Specifies the protected object ID.
	ObjectId *string `pulumi:"objectId"`
	// The region in which to create the resource. If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the scan protocol configurations.
	ScanProtocolConfigs []AntiVirusScanProtocolConfig `pulumi:"scanProtocolConfigs"`
}

type AntiVirusState struct {
	EnableForceNew pulumi.StringPtrInput
	// Specifies the protected object ID.
	ObjectId pulumi.StringPtrInput
	// The region in which to create the resource. If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput
	// Specifies the scan protocol configurations.
	ScanProtocolConfigs AntiVirusScanProtocolConfigArrayInput
}

func (AntiVirusState) ElementType() reflect.Type {
	return reflect.TypeOf((*antiVirusState)(nil)).Elem()
}

type antiVirusArgs struct {
	EnableForceNew *string `pulumi:"enableForceNew"`
	// Specifies the protected object ID.
	ObjectId string `pulumi:"objectId"`
	// The region in which to create the resource. If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the scan protocol configurations.
	ScanProtocolConfigs []AntiVirusScanProtocolConfig `pulumi:"scanProtocolConfigs"`
}

// The set of arguments for constructing a AntiVirus resource.
type AntiVirusArgs struct {
	EnableForceNew pulumi.StringPtrInput
	// Specifies the protected object ID.
	ObjectId pulumi.StringInput
	// The region in which to create the resource. If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput
	// Specifies the scan protocol configurations.
	ScanProtocolConfigs AntiVirusScanProtocolConfigArrayInput
}

func (AntiVirusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*antiVirusArgs)(nil)).Elem()
}

type AntiVirusInput interface {
	pulumi.Input

	ToAntiVirusOutput() AntiVirusOutput
	ToAntiVirusOutputWithContext(ctx context.Context) AntiVirusOutput
}

func (*AntiVirus) ElementType() reflect.Type {
	return reflect.TypeOf((**AntiVirus)(nil)).Elem()
}

func (i *AntiVirus) ToAntiVirusOutput() AntiVirusOutput {
	return i.ToAntiVirusOutputWithContext(context.Background())
}

func (i *AntiVirus) ToAntiVirusOutputWithContext(ctx context.Context) AntiVirusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiVirusOutput)
}

// AntiVirusArrayInput is an input type that accepts AntiVirusArray and AntiVirusArrayOutput values.
// You can construct a concrete instance of `AntiVirusArrayInput` via:
//
//	AntiVirusArray{ AntiVirusArgs{...} }
type AntiVirusArrayInput interface {
	pulumi.Input

	ToAntiVirusArrayOutput() AntiVirusArrayOutput
	ToAntiVirusArrayOutputWithContext(context.Context) AntiVirusArrayOutput
}

type AntiVirusArray []AntiVirusInput

func (AntiVirusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntiVirus)(nil)).Elem()
}

func (i AntiVirusArray) ToAntiVirusArrayOutput() AntiVirusArrayOutput {
	return i.ToAntiVirusArrayOutputWithContext(context.Background())
}

func (i AntiVirusArray) ToAntiVirusArrayOutputWithContext(ctx context.Context) AntiVirusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiVirusArrayOutput)
}

// AntiVirusMapInput is an input type that accepts AntiVirusMap and AntiVirusMapOutput values.
// You can construct a concrete instance of `AntiVirusMapInput` via:
//
//	AntiVirusMap{ "key": AntiVirusArgs{...} }
type AntiVirusMapInput interface {
	pulumi.Input

	ToAntiVirusMapOutput() AntiVirusMapOutput
	ToAntiVirusMapOutputWithContext(context.Context) AntiVirusMapOutput
}

type AntiVirusMap map[string]AntiVirusInput

func (AntiVirusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntiVirus)(nil)).Elem()
}

func (i AntiVirusMap) ToAntiVirusMapOutput() AntiVirusMapOutput {
	return i.ToAntiVirusMapOutputWithContext(context.Background())
}

func (i AntiVirusMap) ToAntiVirusMapOutputWithContext(ctx context.Context) AntiVirusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiVirusMapOutput)
}

type AntiVirusOutput struct{ *pulumi.OutputState }

func (AntiVirusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AntiVirus)(nil)).Elem()
}

func (o AntiVirusOutput) ToAntiVirusOutput() AntiVirusOutput {
	return o
}

func (o AntiVirusOutput) ToAntiVirusOutputWithContext(ctx context.Context) AntiVirusOutput {
	return o
}

func (o AntiVirusOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AntiVirus) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// Specifies the protected object ID.
func (o AntiVirusOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *AntiVirus) pulumi.StringOutput { return v.ObjectId }).(pulumi.StringOutput)
}

// The region in which to create the resource. If omitted, the provider-level region will be used.
func (o AntiVirusOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AntiVirus) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the scan protocol configurations.
func (o AntiVirusOutput) ScanProtocolConfigs() AntiVirusScanProtocolConfigArrayOutput {
	return o.ApplyT(func(v *AntiVirus) AntiVirusScanProtocolConfigArrayOutput { return v.ScanProtocolConfigs }).(AntiVirusScanProtocolConfigArrayOutput)
}

type AntiVirusArrayOutput struct{ *pulumi.OutputState }

func (AntiVirusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AntiVirus)(nil)).Elem()
}

func (o AntiVirusArrayOutput) ToAntiVirusArrayOutput() AntiVirusArrayOutput {
	return o
}

func (o AntiVirusArrayOutput) ToAntiVirusArrayOutputWithContext(ctx context.Context) AntiVirusArrayOutput {
	return o
}

func (o AntiVirusArrayOutput) Index(i pulumi.IntInput) AntiVirusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AntiVirus {
		return vs[0].([]*AntiVirus)[vs[1].(int)]
	}).(AntiVirusOutput)
}

type AntiVirusMapOutput struct{ *pulumi.OutputState }

func (AntiVirusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AntiVirus)(nil)).Elem()
}

func (o AntiVirusMapOutput) ToAntiVirusMapOutput() AntiVirusMapOutput {
	return o
}

func (o AntiVirusMapOutput) ToAntiVirusMapOutputWithContext(ctx context.Context) AntiVirusMapOutput {
	return o
}

func (o AntiVirusMapOutput) MapIndex(k pulumi.StringInput) AntiVirusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AntiVirus {
		return vs[0].(map[string]*AntiVirus)[vs[1].(string)]
	}).(AntiVirusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntiVirusInput)(nil)).Elem(), &AntiVirus{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiVirusArrayInput)(nil)).Elem(), AntiVirusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiVirusMapInput)(nil)).Elem(), AntiVirusMap{})
	pulumi.RegisterOutputType(AntiVirusOutput{})
	pulumi.RegisterOutputType(AntiVirusArrayOutput{})
	pulumi.RegisterOutputType(AntiVirusMapOutput{})
}
