// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getImages(args?: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Ims/getImages:getImages", {
        "__supportAgentList": args.__supportAgentList,
        "architecture": args.architecture,
        "enterpriseProjectId": args.enterpriseProjectId,
        "flavorId": args.flavorId,
        "imageId": args.imageId,
        "imageType": args.imageType,
        "isWholeImage": args.isWholeImage,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "os": args.os,
        "osVersion": args.osVersion,
        "owner": args.owner,
        "region": args.region,
        "sortDirection": args.sortDirection,
        "sortKey": args.sortKey,
        "tag": args.tag,
        "visibility": args.visibility,
    }, opts);
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesArgs {
    __supportAgentList?: string;
    architecture?: string;
    enterpriseProjectId?: string;
    flavorId?: string;
    imageId?: string;
    imageType?: string;
    isWholeImage?: boolean;
    name?: string;
    nameRegex?: string;
    os?: string;
    osVersion?: string;
    owner?: string;
    region?: string;
    sortDirection?: string;
    sortKey?: string;
    tag?: string;
    visibility?: string;
}

/**
 * A collection of values returned by getImages.
 */
export interface GetImagesResult {
    readonly __supportAgentList?: string;
    readonly architecture?: string;
    readonly enterpriseProjectId?: string;
    readonly flavorId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageId?: string;
    readonly imageType?: string;
    readonly images: outputs.Ims.GetImagesImage[];
    readonly isWholeImage?: boolean;
    readonly name?: string;
    readonly nameRegex?: string;
    readonly os?: string;
    readonly osVersion?: string;
    readonly owner?: string;
    readonly region: string;
    readonly sortDirection?: string;
    readonly sortKey?: string;
    readonly tag?: string;
    readonly visibility?: string;
}
export function getImagesOutput(args?: GetImagesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetImagesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Ims/getImages:getImages", {
        "__supportAgentList": args.__supportAgentList,
        "architecture": args.architecture,
        "enterpriseProjectId": args.enterpriseProjectId,
        "flavorId": args.flavorId,
        "imageId": args.imageId,
        "imageType": args.imageType,
        "isWholeImage": args.isWholeImage,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "os": args.os,
        "osVersion": args.osVersion,
        "owner": args.owner,
        "region": args.region,
        "sortDirection": args.sortDirection,
        "sortKey": args.sortKey,
        "tag": args.tag,
        "visibility": args.visibility,
    }, opts);
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesOutputArgs {
    __supportAgentList?: pulumi.Input<string>;
    architecture?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    flavorId?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    imageType?: pulumi.Input<string>;
    isWholeImage?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    osVersion?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    sortDirection?: pulumi.Input<string>;
    sortKey?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    visibility?: pulumi.Input<string>;
}
