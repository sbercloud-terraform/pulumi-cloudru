// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ApigApiVersionUnpublish struct {
	pulumi.CustomResourceState

	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// The ID of the dedicated instance to which the API version belongs.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The region where the dedicated instance to which the API version belongs is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The ID of the API version to be offline.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
}

// NewApigApiVersionUnpublish registers a new resource with the given unique name, arguments, and options.
func NewApigApiVersionUnpublish(ctx *pulumi.Context,
	name string, args *ApigApiVersionUnpublishArgs, opts ...pulumi.ResourceOption) (*ApigApiVersionUnpublish, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.VersionId == nil {
		return nil, errors.New("invalid value for required argument 'VersionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigApiVersionUnpublish
	err := ctx.RegisterResource("sbercloud:index/apigApiVersionUnpublish:ApigApiVersionUnpublish", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigApiVersionUnpublish gets an existing ApigApiVersionUnpublish resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigApiVersionUnpublish(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigApiVersionUnpublishState, opts ...pulumi.ResourceOption) (*ApigApiVersionUnpublish, error) {
	var resource ApigApiVersionUnpublish
	err := ctx.ReadResource("sbercloud:index/apigApiVersionUnpublish:ApigApiVersionUnpublish", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigApiVersionUnpublish resources.
type apigApiVersionUnpublishState struct {
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The ID of the dedicated instance to which the API version belongs.
	InstanceId *string `pulumi:"instanceId"`
	// The region where the dedicated instance to which the API version belongs is located.
	Region *string `pulumi:"region"`
	// The ID of the API version to be offline.
	VersionId *string `pulumi:"versionId"`
}

type ApigApiVersionUnpublishState struct {
	EnableForceNew pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API version belongs.
	InstanceId pulumi.StringPtrInput
	// The region where the dedicated instance to which the API version belongs is located.
	Region pulumi.StringPtrInput
	// The ID of the API version to be offline.
	VersionId pulumi.StringPtrInput
}

func (ApigApiVersionUnpublishState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiVersionUnpublishState)(nil)).Elem()
}

type apigApiVersionUnpublishArgs struct {
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The ID of the dedicated instance to which the API version belongs.
	InstanceId string `pulumi:"instanceId"`
	// The region where the dedicated instance to which the API version belongs is located.
	Region *string `pulumi:"region"`
	// The ID of the API version to be offline.
	VersionId string `pulumi:"versionId"`
}

// The set of arguments for constructing a ApigApiVersionUnpublish resource.
type ApigApiVersionUnpublishArgs struct {
	EnableForceNew pulumi.StringPtrInput
	// The ID of the dedicated instance to which the API version belongs.
	InstanceId pulumi.StringInput
	// The region where the dedicated instance to which the API version belongs is located.
	Region pulumi.StringPtrInput
	// The ID of the API version to be offline.
	VersionId pulumi.StringInput
}

func (ApigApiVersionUnpublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigApiVersionUnpublishArgs)(nil)).Elem()
}

type ApigApiVersionUnpublishInput interface {
	pulumi.Input

	ToApigApiVersionUnpublishOutput() ApigApiVersionUnpublishOutput
	ToApigApiVersionUnpublishOutputWithContext(ctx context.Context) ApigApiVersionUnpublishOutput
}

func (*ApigApiVersionUnpublish) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiVersionUnpublish)(nil)).Elem()
}

func (i *ApigApiVersionUnpublish) ToApigApiVersionUnpublishOutput() ApigApiVersionUnpublishOutput {
	return i.ToApigApiVersionUnpublishOutputWithContext(context.Background())
}

func (i *ApigApiVersionUnpublish) ToApigApiVersionUnpublishOutputWithContext(ctx context.Context) ApigApiVersionUnpublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiVersionUnpublishOutput)
}

// ApigApiVersionUnpublishArrayInput is an input type that accepts ApigApiVersionUnpublishArray and ApigApiVersionUnpublishArrayOutput values.
// You can construct a concrete instance of `ApigApiVersionUnpublishArrayInput` via:
//
//	ApigApiVersionUnpublishArray{ ApigApiVersionUnpublishArgs{...} }
type ApigApiVersionUnpublishArrayInput interface {
	pulumi.Input

	ToApigApiVersionUnpublishArrayOutput() ApigApiVersionUnpublishArrayOutput
	ToApigApiVersionUnpublishArrayOutputWithContext(context.Context) ApigApiVersionUnpublishArrayOutput
}

type ApigApiVersionUnpublishArray []ApigApiVersionUnpublishInput

func (ApigApiVersionUnpublishArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiVersionUnpublish)(nil)).Elem()
}

func (i ApigApiVersionUnpublishArray) ToApigApiVersionUnpublishArrayOutput() ApigApiVersionUnpublishArrayOutput {
	return i.ToApigApiVersionUnpublishArrayOutputWithContext(context.Background())
}

func (i ApigApiVersionUnpublishArray) ToApigApiVersionUnpublishArrayOutputWithContext(ctx context.Context) ApigApiVersionUnpublishArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiVersionUnpublishArrayOutput)
}

// ApigApiVersionUnpublishMapInput is an input type that accepts ApigApiVersionUnpublishMap and ApigApiVersionUnpublishMapOutput values.
// You can construct a concrete instance of `ApigApiVersionUnpublishMapInput` via:
//
//	ApigApiVersionUnpublishMap{ "key": ApigApiVersionUnpublishArgs{...} }
type ApigApiVersionUnpublishMapInput interface {
	pulumi.Input

	ToApigApiVersionUnpublishMapOutput() ApigApiVersionUnpublishMapOutput
	ToApigApiVersionUnpublishMapOutputWithContext(context.Context) ApigApiVersionUnpublishMapOutput
}

type ApigApiVersionUnpublishMap map[string]ApigApiVersionUnpublishInput

func (ApigApiVersionUnpublishMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiVersionUnpublish)(nil)).Elem()
}

func (i ApigApiVersionUnpublishMap) ToApigApiVersionUnpublishMapOutput() ApigApiVersionUnpublishMapOutput {
	return i.ToApigApiVersionUnpublishMapOutputWithContext(context.Background())
}

func (i ApigApiVersionUnpublishMap) ToApigApiVersionUnpublishMapOutputWithContext(ctx context.Context) ApigApiVersionUnpublishMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigApiVersionUnpublishMapOutput)
}

type ApigApiVersionUnpublishOutput struct{ *pulumi.OutputState }

func (ApigApiVersionUnpublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigApiVersionUnpublish)(nil)).Elem()
}

func (o ApigApiVersionUnpublishOutput) ToApigApiVersionUnpublishOutput() ApigApiVersionUnpublishOutput {
	return o
}

func (o ApigApiVersionUnpublishOutput) ToApigApiVersionUnpublishOutputWithContext(ctx context.Context) ApigApiVersionUnpublishOutput {
	return o
}

func (o ApigApiVersionUnpublishOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigApiVersionUnpublish) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// The ID of the dedicated instance to which the API version belongs.
func (o ApigApiVersionUnpublishOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiVersionUnpublish) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The region where the dedicated instance to which the API version belongs is located.
func (o ApigApiVersionUnpublishOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiVersionUnpublish) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The ID of the API version to be offline.
func (o ApigApiVersionUnpublishOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigApiVersionUnpublish) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

type ApigApiVersionUnpublishArrayOutput struct{ *pulumi.OutputState }

func (ApigApiVersionUnpublishArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigApiVersionUnpublish)(nil)).Elem()
}

func (o ApigApiVersionUnpublishArrayOutput) ToApigApiVersionUnpublishArrayOutput() ApigApiVersionUnpublishArrayOutput {
	return o
}

func (o ApigApiVersionUnpublishArrayOutput) ToApigApiVersionUnpublishArrayOutputWithContext(ctx context.Context) ApigApiVersionUnpublishArrayOutput {
	return o
}

func (o ApigApiVersionUnpublishArrayOutput) Index(i pulumi.IntInput) ApigApiVersionUnpublishOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigApiVersionUnpublish {
		return vs[0].([]*ApigApiVersionUnpublish)[vs[1].(int)]
	}).(ApigApiVersionUnpublishOutput)
}

type ApigApiVersionUnpublishMapOutput struct{ *pulumi.OutputState }

func (ApigApiVersionUnpublishMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigApiVersionUnpublish)(nil)).Elem()
}

func (o ApigApiVersionUnpublishMapOutput) ToApigApiVersionUnpublishMapOutput() ApigApiVersionUnpublishMapOutput {
	return o
}

func (o ApigApiVersionUnpublishMapOutput) ToApigApiVersionUnpublishMapOutputWithContext(ctx context.Context) ApigApiVersionUnpublishMapOutput {
	return o
}

func (o ApigApiVersionUnpublishMapOutput) MapIndex(k pulumi.StringInput) ApigApiVersionUnpublishOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigApiVersionUnpublish {
		return vs[0].(map[string]*ApigApiVersionUnpublish)[vs[1].(string)]
	}).(ApigApiVersionUnpublishOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiVersionUnpublishInput)(nil)).Elem(), &ApigApiVersionUnpublish{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiVersionUnpublishArrayInput)(nil)).Elem(), ApigApiVersionUnpublishArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigApiVersionUnpublishMapInput)(nil)).Elem(), ApigApiVersionUnpublishMap{})
	pulumi.RegisterOutputType(ApigApiVersionUnpublishOutput{})
	pulumi.RegisterOutputType(ApigApiVersionUnpublishArrayOutput{})
	pulumi.RegisterOutputType(ApigApiVersionUnpublishMapOutput{})
}
