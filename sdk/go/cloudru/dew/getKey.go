// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dew

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func LookupKey(ctx *pulumi.Context, args *LookupKeyArgs, opts ...pulumi.InvokeOption) (*LookupKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeyResult
	err := ctx.Invoke("sbercloud:Dew/getKey:getKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKey.
type LookupKeyArgs struct {
	DefaultKeyFlag      *string `pulumi:"defaultKeyFlag"`
	DomainId            *string `pulumi:"domainId"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	KeyAlias            *string `pulumi:"keyAlias"`
	KeyDescription      *string `pulumi:"keyDescription"`
	KeyId               *string `pulumi:"keyId"`
	KeyState            *string `pulumi:"keyState"`
	Region              *string `pulumi:"region"`
}

// A collection of values returned by getKey.
type LookupKeyResult struct {
	CreationDate        string `pulumi:"creationDate"`
	DefaultKeyFlag      string `pulumi:"defaultKeyFlag"`
	DomainId            string `pulumi:"domainId"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	ExpirationTime      string `pulumi:"expirationTime"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string            `pulumi:"id"`
	KeyAlias              string            `pulumi:"keyAlias"`
	KeyDescription        string            `pulumi:"keyDescription"`
	KeyId                 string            `pulumi:"keyId"`
	KeyState              string            `pulumi:"keyState"`
	Region                string            `pulumi:"region"`
	RotationEnabled       bool              `pulumi:"rotationEnabled"`
	RotationInterval      int               `pulumi:"rotationInterval"`
	RotationNumber        int               `pulumi:"rotationNumber"`
	ScheduledDeletionDate string            `pulumi:"scheduledDeletionDate"`
	Tags                  map[string]string `pulumi:"tags"`
}

func LookupKeyOutput(ctx *pulumi.Context, args LookupKeyOutputArgs, opts ...pulumi.InvokeOption) LookupKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKeyResultOutput, error) {
			args := v.(LookupKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Dew/getKey:getKey", args, LookupKeyResultOutput{}, options).(LookupKeyResultOutput), nil
		}).(LookupKeyResultOutput)
}

// A collection of arguments for invoking getKey.
type LookupKeyOutputArgs struct {
	DefaultKeyFlag      pulumi.StringPtrInput `pulumi:"defaultKeyFlag"`
	DomainId            pulumi.StringPtrInput `pulumi:"domainId"`
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	KeyAlias            pulumi.StringPtrInput `pulumi:"keyAlias"`
	KeyDescription      pulumi.StringPtrInput `pulumi:"keyDescription"`
	KeyId               pulumi.StringPtrInput `pulumi:"keyId"`
	KeyState            pulumi.StringPtrInput `pulumi:"keyState"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyArgs)(nil)).Elem()
}

// A collection of values returned by getKey.
type LookupKeyResultOutput struct{ *pulumi.OutputState }

func (LookupKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyResult)(nil)).Elem()
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutput() LookupKeyResultOutput {
	return o
}

func (o LookupKeyResultOutput) ToLookupKeyResultOutputWithContext(ctx context.Context) LookupKeyResultOutput {
	return o
}

func (o LookupKeyResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) DefaultKeyFlag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.DefaultKeyFlag }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.DomainId }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.ExpirationTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) KeyAlias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.KeyAlias }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) KeyDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.KeyDescription }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.KeyState }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) RotationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKeyResult) bool { return v.RotationEnabled }).(pulumi.BoolOutput)
}

func (o LookupKeyResultOutput) RotationInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKeyResult) int { return v.RotationInterval }).(pulumi.IntOutput)
}

func (o LookupKeyResultOutput) RotationNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKeyResult) int { return v.RotationNumber }).(pulumi.IntOutput)
}

func (o LookupKeyResultOutput) ScheduledDeletionDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeyResult) string { return v.ScheduledDeletionDate }).(pulumi.StringOutput)
}

func (o LookupKeyResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKeyResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyResultOutput{})
}
