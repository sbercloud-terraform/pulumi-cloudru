// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetDnsZones(ctx *pulumi.Context, args *GetDnsZonesArgs, opts ...pulumi.InvokeOption) (*GetDnsZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDnsZonesResult
	err := ctx.Invoke("cloudru:index/getDnsZones:getDnsZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsZones.
type GetDnsZonesArgs struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	Name                *string `pulumi:"name"`
	Region              *string `pulumi:"region"`
	RouterId            *string `pulumi:"routerId"`
	SearchMode          *string `pulumi:"searchMode"`
	SortDir             *string `pulumi:"sortDir"`
	SortKey             *string `pulumi:"sortKey"`
	Status              *string `pulumi:"status"`
	Tags                *string `pulumi:"tags"`
	ZoneId              *string `pulumi:"zoneId"`
	ZoneType            string  `pulumi:"zoneType"`
}

// A collection of values returned by getDnsZones.
type GetDnsZonesResult struct {
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string            `pulumi:"id"`
	Name       *string           `pulumi:"name"`
	Region     string            `pulumi:"region"`
	RouterId   *string           `pulumi:"routerId"`
	SearchMode *string           `pulumi:"searchMode"`
	SortDir    *string           `pulumi:"sortDir"`
	SortKey    *string           `pulumi:"sortKey"`
	Status     *string           `pulumi:"status"`
	Tags       *string           `pulumi:"tags"`
	ZoneId     *string           `pulumi:"zoneId"`
	ZoneType   string            `pulumi:"zoneType"`
	Zones      []GetDnsZonesZone `pulumi:"zones"`
}

func GetDnsZonesOutput(ctx *pulumi.Context, args GetDnsZonesOutputArgs, opts ...pulumi.InvokeOption) GetDnsZonesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDnsZonesResultOutput, error) {
			args := v.(GetDnsZonesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:index/getDnsZones:getDnsZones", args, GetDnsZonesResultOutput{}, options).(GetDnsZonesResultOutput), nil
		}).(GetDnsZonesResultOutput)
}

// A collection of arguments for invoking getDnsZones.
type GetDnsZonesOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	RouterId            pulumi.StringPtrInput `pulumi:"routerId"`
	SearchMode          pulumi.StringPtrInput `pulumi:"searchMode"`
	SortDir             pulumi.StringPtrInput `pulumi:"sortDir"`
	SortKey             pulumi.StringPtrInput `pulumi:"sortKey"`
	Status              pulumi.StringPtrInput `pulumi:"status"`
	Tags                pulumi.StringPtrInput `pulumi:"tags"`
	ZoneId              pulumi.StringPtrInput `pulumi:"zoneId"`
	ZoneType            pulumi.StringInput    `pulumi:"zoneType"`
}

func (GetDnsZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsZonesArgs)(nil)).Elem()
}

// A collection of values returned by getDnsZones.
type GetDnsZonesResultOutput struct{ *pulumi.OutputState }

func (GetDnsZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsZonesResult)(nil)).Elem()
}

func (o GetDnsZonesResultOutput) ToGetDnsZonesResultOutput() GetDnsZonesResultOutput {
	return o
}

func (o GetDnsZonesResultOutput) ToGetDnsZonesResultOutputWithContext(ctx context.Context) GetDnsZonesResultOutput {
	return o
}

func (o GetDnsZonesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDnsZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDnsZonesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsZonesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDnsZonesResultOutput) RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.RouterId }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) SearchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.SearchMode }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) SortDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.SortDir }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) SortKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.SortKey }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnsZonesResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func (o GetDnsZonesResultOutput) ZoneType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsZonesResult) string { return v.ZoneType }).(pulumi.StringOutput)
}

func (o GetDnsZonesResultOutput) Zones() GetDnsZonesZoneArrayOutput {
	return o.ApplyT(func(v GetDnsZonesResult) []GetDnsZonesZone { return v.Zones }).(GetDnsZonesZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDnsZonesResultOutput{})
}
