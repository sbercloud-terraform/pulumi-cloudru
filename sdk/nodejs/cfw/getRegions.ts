// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getRegions(args: GetRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Cfw/getRegions:getRegions", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegions.
 */
export interface GetRegionsArgs {
    enterpriseProjectId?: string;
    fwInstanceId: string;
    region?: string;
}

/**
 * A collection of values returned by getRegions.
 */
export interface GetRegionsResult {
    readonly data: string;
    readonly enterpriseProjectId?: string;
    readonly fwInstanceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
}
export function getRegionsOutput(args: GetRegionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Cfw/getRegions:getRegions", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegions.
 */
export interface GetRegionsOutputArgs {
    enterpriseProjectId?: pulumi.Input<string>;
    fwInstanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
