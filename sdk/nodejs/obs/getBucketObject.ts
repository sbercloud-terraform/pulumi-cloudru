// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getBucketObject(args: GetBucketObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketObjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Obs/getBucketObject:getBucketObject", {
        "bucket": args.bucket,
        "key": args.key,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getBucketObject.
 */
export interface GetBucketObjectArgs {
    bucket: string;
    key: string;
    region?: string;
}

/**
 * A collection of values returned by getBucketObject.
 */
export interface GetBucketObjectResult {
    readonly body: string;
    readonly bucket: string;
    readonly contentType: string;
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key: string;
    readonly region: string;
    readonly size: number;
    readonly storageClass: string;
    readonly versionId: string;
}
export function getBucketObjectOutput(args: GetBucketObjectOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBucketObjectResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Obs/getBucketObject:getBucketObject", {
        "bucket": args.bucket,
        "key": args.key,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getBucketObject.
 */
export interface GetBucketObjectOutputArgs {
    bucket: pulumi.Input<string>;
    key: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
