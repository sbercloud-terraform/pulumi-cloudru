// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Use this data source to get the DNS resolution result of a domain name.
//
// ## Example Usage
//
// ### DNS resolution result of a domain name
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cfw.GetDomainNameParseIpList(ctx, &cfw.GetDomainNameParseIpListArgs{
//				DomainName: pulumi.StringRef("www.cloud.ru"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### DNS resolution result of a domain name in a domain name group
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/cfw"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			fwInstanceId := cfg.RequireObject("fwInstanceId")
//			domainNameGroupId := cfg.RequireObject("domainNameGroupId")
//			domainAddressId := cfg.RequireObject("domainAddressId")
//			_, err := cfw.GetDomainNameParseIpList(ctx, &cfw.GetDomainNameParseIpListArgs{
//				FwInstanceId:    pulumi.StringRef(fwInstanceId),
//				GroupId:         pulumi.StringRef(domainNameGroupId),
//				DomainAddressId: pulumi.StringRef(domainAddressId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDomainNameParseIpList(ctx *pulumi.Context, args *GetDomainNameParseIpListArgs, opts ...pulumi.InvokeOption) (*GetDomainNameParseIpListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainNameParseIpListResult
	err := ctx.Invoke("sbercloud:Cfw/getDomainNameParseIpList:getDomainNameParseIpList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainNameParseIpList.
type GetDomainNameParseIpListArgs struct {
	// Specifies the address type.
	// The valid value can be **0** (IPv4) or **1** (IPv6).
	AddressType *string `pulumi:"addressType"`
	// Specifies the domain name ID in a domain name group.
	DomainAddressId *string `pulumi:"domainAddressId"`
	// Specifies the domain name.
	DomainName *string `pulumi:"domainName"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the firewall ID.
	FwInstanceId *string `pulumi:"fwInstanceId"`
	// Specifies the domain name group ID.
	GroupId *string `pulumi:"groupId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getDomainNameParseIpList.
type GetDomainNameParseIpListResult struct {
	AddressType *string `pulumi:"addressType"`
	// The IP address list for domain name resolution.
	Datas               []string `pulumi:"datas"`
	DomainAddressId     *string  `pulumi:"domainAddressId"`
	DomainName          *string  `pulumi:"domainName"`
	EnterpriseProjectId *string  `pulumi:"enterpriseProjectId"`
	FwInstanceId        *string  `pulumi:"fwInstanceId"`
	GroupId             *string  `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
}

func GetDomainNameParseIpListOutput(ctx *pulumi.Context, args GetDomainNameParseIpListOutputArgs, opts ...pulumi.InvokeOption) GetDomainNameParseIpListResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDomainNameParseIpListResultOutput, error) {
			args := v.(GetDomainNameParseIpListArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Cfw/getDomainNameParseIpList:getDomainNameParseIpList", args, GetDomainNameParseIpListResultOutput{}, options).(GetDomainNameParseIpListResultOutput), nil
		}).(GetDomainNameParseIpListResultOutput)
}

// A collection of arguments for invoking getDomainNameParseIpList.
type GetDomainNameParseIpListOutputArgs struct {
	// Specifies the address type.
	// The valid value can be **0** (IPv4) or **1** (IPv6).
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Specifies the domain name ID in a domain name group.
	DomainAddressId pulumi.StringPtrInput `pulumi:"domainAddressId"`
	// Specifies the domain name.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the firewall ID.
	FwInstanceId pulumi.StringPtrInput `pulumi:"fwInstanceId"`
	// Specifies the domain name group ID.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetDomainNameParseIpListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameParseIpListArgs)(nil)).Elem()
}

// A collection of values returned by getDomainNameParseIpList.
type GetDomainNameParseIpListResultOutput struct{ *pulumi.OutputState }

func (GetDomainNameParseIpListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNameParseIpListResult)(nil)).Elem()
}

func (o GetDomainNameParseIpListResultOutput) ToGetDomainNameParseIpListResultOutput() GetDomainNameParseIpListResultOutput {
	return o
}

func (o GetDomainNameParseIpListResultOutput) ToGetDomainNameParseIpListResultOutputWithContext(ctx context.Context) GetDomainNameParseIpListResultOutput {
	return o
}

func (o GetDomainNameParseIpListResultOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// The IP address list for domain name resolution.
func (o GetDomainNameParseIpListResultOutput) Datas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) []string { return v.Datas }).(pulumi.StringArrayOutput)
}

func (o GetDomainNameParseIpListResultOutput) DomainAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) *string { return v.DomainAddressId }).(pulumi.StringPtrOutput)
}

func (o GetDomainNameParseIpListResultOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o GetDomainNameParseIpListResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

func (o GetDomainNameParseIpListResultOutput) FwInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) *string { return v.FwInstanceId }).(pulumi.StringPtrOutput)
}

func (o GetDomainNameParseIpListResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainNameParseIpListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainNameParseIpListResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainNameParseIpListResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainNameParseIpListResultOutput{})
}
