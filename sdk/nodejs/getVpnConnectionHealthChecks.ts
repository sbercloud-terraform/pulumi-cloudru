// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpnConnectionHealthChecks(args?: GetVpnConnectionHealthChecksArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnConnectionHealthChecksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:index/getVpnConnectionHealthChecks:getVpnConnectionHealthChecks", {
        "connectionId": args.connectionId,
        "destinationIp": args.destinationIp,
        "region": args.region,
        "sourceIp": args.sourceIp,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnConnectionHealthChecks.
 */
export interface GetVpnConnectionHealthChecksArgs {
    connectionId?: string;
    destinationIp?: string;
    region?: string;
    sourceIp?: string;
    status?: string;
}

/**
 * A collection of values returned by getVpnConnectionHealthChecks.
 */
export interface GetVpnConnectionHealthChecksResult {
    readonly connectionHealthChecks: outputs.GetVpnConnectionHealthChecksConnectionHealthCheck[];
    readonly connectionId?: string;
    readonly destinationIp?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly sourceIp?: string;
    readonly status?: string;
}
export function getVpnConnectionHealthChecksOutput(args?: GetVpnConnectionHealthChecksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpnConnectionHealthChecksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:index/getVpnConnectionHealthChecks:getVpnConnectionHealthChecks", {
        "connectionId": args.connectionId,
        "destinationIp": args.destinationIp,
        "region": args.region,
        "sourceIp": args.sourceIp,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnConnectionHealthChecks.
 */
export interface GetVpnConnectionHealthChecksOutputArgs {
    connectionId?: pulumi.Input<string>;
    destinationIp?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
