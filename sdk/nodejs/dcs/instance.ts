// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:Dcs/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    declare public readonly accessUser: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    declare public readonly autoPay: pulumi.Output<string | undefined>;
    declare public readonly autoRenew: pulumi.Output<string | undefined>;
    /**
     * schema: Required
     */
    declare public readonly availabilityZones: pulumi.Output<string[]>;
    /**
     * @deprecated Deprecated, please use `availabilityZones` instead
     */
    declare public readonly availableZones: pulumi.Output<string[] | undefined>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    declare public readonly backupAts: pulumi.Output<number[] | undefined>;
    declare public readonly backupPolicy: pulumi.Output<outputs.Dcs.InstanceBackupPolicy | undefined>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    declare public readonly backupType: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly bandwidthInfos: pulumi.Output<outputs.Dcs.InstanceBandwidthInfo[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    declare public readonly beginAt: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly cacheMode: pulumi.Output<string>;
    declare public readonly capacity: pulumi.Output<number>;
    declare public readonly chargingMode: pulumi.Output<string>;
    declare public /*out*/ readonly cpuType: pulumi.Output<string>;
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    declare public readonly deletedNodes: pulumi.Output<string | undefined>;
    declare public readonly description: pulumi.Output<string>;
    declare public /*out*/ readonly domainName: pulumi.Output<string>;
    declare public readonly engine: pulumi.Output<string>;
    declare public readonly engineVersion: pulumi.Output<string | undefined>;
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, this is a non-public attribute.
     */
    declare public readonly enterpriseProjectName: pulumi.Output<string>;
    /**
     * schema: Required
     */
    declare public readonly flavor: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, please us `engineVersion` instead.
     */
    declare public /*out*/ readonly internalVersion: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, please us `privateIp` instead.
     */
    declare public /*out*/ readonly ip: pulumi.Output<string>;
    declare public /*out*/ readonly launchedAt: pulumi.Output<string>;
    declare public readonly maintainBegin: pulumi.Output<string>;
    declare public readonly maintainEnd: pulumi.Output<string>;
    declare public /*out*/ readonly maxMemory: pulumi.Output<number>;
    declare public readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly orderId: pulumi.Output<string>;
    declare public readonly parameters: pulumi.Output<outputs.Dcs.InstanceParameter[]>;
    declare public readonly password: pulumi.Output<string | undefined>;
    declare public readonly period: pulumi.Output<number | undefined>;
    /**
     * @deprecated Please use `backupPolicy` instead
     */
    declare public readonly periodType: pulumi.Output<string | undefined>;
    declare public readonly periodUnit: pulumi.Output<string | undefined>;
    declare public readonly port: pulumi.Output<number>;
    declare public readonly privateIp: pulumi.Output<string>;
    /**
     * @deprecated Deprecated, please use `flavor` instead
     */
    declare public readonly productId: pulumi.Output<string>;
    declare public /*out*/ readonly productType: pulumi.Output<string>;
    declare public /*out*/ readonly readonlyDomainName: pulumi.Output<string>;
    declare public readonly region: pulumi.Output<string>;
    declare public readonly renameCommands: pulumi.Output<{[key: string]: string} | undefined>;
    declare public /*out*/ readonly replicaCount: pulumi.Output<number>;
    declare public readonly reservedIps: pulumi.Output<string[] | undefined>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    declare public readonly saveDays: pulumi.Output<number | undefined>;
    declare public readonly securityGroupId: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly securityGroupName: pulumi.Output<string>;
    declare public /*out*/ readonly shardingCount: pulumi.Output<number>;
    declare public readonly sslEnable: pulumi.Output<boolean>;
    declare public /*out*/ readonly status: pulumi.Output<string>;
    declare public /*out*/ readonly subnetCidr: pulumi.Output<string>;
    declare public readonly subnetId: pulumi.Output<string>;
    declare public /*out*/ readonly subnetName: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string}>;
    declare public readonly templateId: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly transparentClientIpEnable: pulumi.Output<boolean>;
    declare public /*out*/ readonly usedMemory: pulumi.Output<number>;
    /**
     * @deprecated Deprecated
     */
    declare public /*out*/ readonly userId: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    declare public /*out*/ readonly userName: pulumi.Output<string>;
    declare public readonly vpcId: pulumi.Output<string>;
    declare public /*out*/ readonly vpcName: pulumi.Output<string>;
    declare public readonly whitelistEnable: pulumi.Output<boolean | undefined>;
    declare public readonly whitelists: pulumi.Output<outputs.Dcs.InstanceWhitelist[] | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["accessUser"] = state?.accessUser;
            resourceInputs["autoPay"] = state?.autoPay;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["availabilityZones"] = state?.availabilityZones;
            resourceInputs["availableZones"] = state?.availableZones;
            resourceInputs["backupAts"] = state?.backupAts;
            resourceInputs["backupPolicy"] = state?.backupPolicy;
            resourceInputs["backupType"] = state?.backupType;
            resourceInputs["bandwidthInfos"] = state?.bandwidthInfos;
            resourceInputs["beginAt"] = state?.beginAt;
            resourceInputs["cacheMode"] = state?.cacheMode;
            resourceInputs["capacity"] = state?.capacity;
            resourceInputs["chargingMode"] = state?.chargingMode;
            resourceInputs["cpuType"] = state?.cpuType;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["deletedNodes"] = state?.deletedNodes;
            resourceInputs["description"] = state?.description;
            resourceInputs["domainName"] = state?.domainName;
            resourceInputs["engine"] = state?.engine;
            resourceInputs["engineVersion"] = state?.engineVersion;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["enterpriseProjectName"] = state?.enterpriseProjectName;
            resourceInputs["flavor"] = state?.flavor;
            resourceInputs["internalVersion"] = state?.internalVersion;
            resourceInputs["ip"] = state?.ip;
            resourceInputs["launchedAt"] = state?.launchedAt;
            resourceInputs["maintainBegin"] = state?.maintainBegin;
            resourceInputs["maintainEnd"] = state?.maintainEnd;
            resourceInputs["maxMemory"] = state?.maxMemory;
            resourceInputs["name"] = state?.name;
            resourceInputs["orderId"] = state?.orderId;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["password"] = state?.password;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodType"] = state?.periodType;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["port"] = state?.port;
            resourceInputs["privateIp"] = state?.privateIp;
            resourceInputs["productId"] = state?.productId;
            resourceInputs["productType"] = state?.productType;
            resourceInputs["readonlyDomainName"] = state?.readonlyDomainName;
            resourceInputs["region"] = state?.region;
            resourceInputs["renameCommands"] = state?.renameCommands;
            resourceInputs["replicaCount"] = state?.replicaCount;
            resourceInputs["reservedIps"] = state?.reservedIps;
            resourceInputs["saveDays"] = state?.saveDays;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["securityGroupName"] = state?.securityGroupName;
            resourceInputs["shardingCount"] = state?.shardingCount;
            resourceInputs["sslEnable"] = state?.sslEnable;
            resourceInputs["status"] = state?.status;
            resourceInputs["subnetCidr"] = state?.subnetCidr;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["subnetName"] = state?.subnetName;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["templateId"] = state?.templateId;
            resourceInputs["transparentClientIpEnable"] = state?.transparentClientIpEnable;
            resourceInputs["usedMemory"] = state?.usedMemory;
            resourceInputs["userId"] = state?.userId;
            resourceInputs["userName"] = state?.userName;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["vpcName"] = state?.vpcName;
            resourceInputs["whitelistEnable"] = state?.whitelistEnable;
            resourceInputs["whitelists"] = state?.whitelists;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.capacity === undefined && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if (args?.engine === undefined && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accessUser"] = args?.accessUser;
            resourceInputs["autoPay"] = args?.autoPay;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["availabilityZones"] = args?.availabilityZones;
            resourceInputs["availableZones"] = args?.availableZones;
            resourceInputs["backupAts"] = args?.backupAts;
            resourceInputs["backupPolicy"] = args?.backupPolicy;
            resourceInputs["backupType"] = args?.backupType;
            resourceInputs["beginAt"] = args?.beginAt;
            resourceInputs["capacity"] = args?.capacity;
            resourceInputs["chargingMode"] = args?.chargingMode;
            resourceInputs["deletedNodes"] = args?.deletedNodes;
            resourceInputs["description"] = args?.description;
            resourceInputs["engine"] = args?.engine;
            resourceInputs["engineVersion"] = args?.engineVersion;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["enterpriseProjectName"] = args?.enterpriseProjectName;
            resourceInputs["flavor"] = args?.flavor;
            resourceInputs["maintainBegin"] = args?.maintainBegin;
            resourceInputs["maintainEnd"] = args?.maintainEnd;
            resourceInputs["name"] = args?.name;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodType"] = args?.periodType;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["port"] = args?.port;
            resourceInputs["privateIp"] = args?.privateIp;
            resourceInputs["productId"] = args?.productId;
            resourceInputs["region"] = args?.region;
            resourceInputs["renameCommands"] = args?.renameCommands;
            resourceInputs["reservedIps"] = args?.reservedIps;
            resourceInputs["saveDays"] = args?.saveDays;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["sslEnable"] = args?.sslEnable;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["templateId"] = args?.templateId;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["whitelistEnable"] = args?.whitelistEnable;
            resourceInputs["whitelists"] = args?.whitelists;
            resourceInputs["bandwidthInfos"] = undefined /*out*/;
            resourceInputs["cacheMode"] = undefined /*out*/;
            resourceInputs["cpuType"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["internalVersion"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["launchedAt"] = undefined /*out*/;
            resourceInputs["maxMemory"] = undefined /*out*/;
            resourceInputs["orderId"] = undefined /*out*/;
            resourceInputs["productType"] = undefined /*out*/;
            resourceInputs["readonlyDomainName"] = undefined /*out*/;
            resourceInputs["replicaCount"] = undefined /*out*/;
            resourceInputs["securityGroupName"] = undefined /*out*/;
            resourceInputs["shardingCount"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetCidr"] = undefined /*out*/;
            resourceInputs["subnetName"] = undefined /*out*/;
            resourceInputs["transparentClientIpEnable"] = undefined /*out*/;
            resourceInputs["usedMemory"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
            resourceInputs["vpcName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    accessUser?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `availabilityZones` instead
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupAts?: pulumi.Input<pulumi.Input<number>[]>;
    backupPolicy?: pulumi.Input<inputs.Dcs.InstanceBackupPolicy>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupType?: pulumi.Input<string>;
    bandwidthInfos?: pulumi.Input<pulumi.Input<inputs.Dcs.InstanceBandwidthInfo>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    beginAt?: pulumi.Input<string>;
    cacheMode?: pulumi.Input<string>;
    capacity?: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    cpuType?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    deletedNodes?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, this is a non-public attribute.
     */
    enterpriseProjectName?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    flavor?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please us `engineVersion` instead.
     */
    internalVersion?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please us `privateIp` instead.
     */
    ip?: pulumi.Input<string>;
    launchedAt?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    maxMemory?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    orderId?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.Dcs.InstanceParameter>[]>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    /**
     * @deprecated Please use `backupPolicy` instead
     */
    periodType?: pulumi.Input<string>;
    periodUnit?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    privateIp?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please use `flavor` instead
     */
    productId?: pulumi.Input<string>;
    productType?: pulumi.Input<string>;
    readonlyDomainName?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    renameCommands?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    replicaCount?: pulumi.Input<number>;
    reservedIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    saveDays?: pulumi.Input<number>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
    shardingCount?: pulumi.Input<number>;
    sslEnable?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    subnetCidr?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateId?: pulumi.Input<string>;
    transparentClientIpEnable?: pulumi.Input<boolean>;
    usedMemory?: pulumi.Input<number>;
    /**
     * @deprecated Deprecated
     */
    userId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    userName?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vpcName?: pulumi.Input<string>;
    whitelistEnable?: pulumi.Input<boolean>;
    whitelists?: pulumi.Input<pulumi.Input<inputs.Dcs.InstanceWhitelist>[]>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    accessUser?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    autoPay?: pulumi.Input<string>;
    autoRenew?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `availabilityZones` instead
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupAts?: pulumi.Input<pulumi.Input<number>[]>;
    backupPolicy?: pulumi.Input<inputs.Dcs.InstanceBackupPolicy>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    backupType?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    beginAt?: pulumi.Input<string>;
    capacity: pulumi.Input<number>;
    chargingMode?: pulumi.Input<string>;
    deletedNodes?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, this is a non-public attribute.
     */
    enterpriseProjectName?: pulumi.Input<string>;
    /**
     * schema: Required
     */
    flavor?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.Dcs.InstanceParameter>[]>;
    password?: pulumi.Input<string>;
    period?: pulumi.Input<number>;
    /**
     * @deprecated Please use `backupPolicy` instead
     */
    periodType?: pulumi.Input<string>;
    periodUnit?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    privateIp?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated, please use `flavor` instead
     */
    productId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    renameCommands?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    reservedIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated, please use `backupPolicy` instead
     */
    saveDays?: pulumi.Input<number>;
    securityGroupId?: pulumi.Input<string>;
    sslEnable?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    templateId?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
    whitelistEnable?: pulumi.Input<boolean>;
    whitelists?: pulumi.Input<pulumi.Input<inputs.Dcs.InstanceWhitelist>[]>;
}
