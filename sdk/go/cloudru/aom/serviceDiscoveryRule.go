// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aom

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type ServiceDiscoveryRule struct {
	pulumi.CustomResourceState

	CreatedAt            pulumi.StringOutput                          `pulumi:"createdAt"`
	Description          pulumi.StringPtrOutput                       `pulumi:"description"`
	DetectLogEnabled     pulumi.BoolPtrOutput                         `pulumi:"detectLogEnabled"`
	DiscoveryRuleEnabled pulumi.BoolPtrOutput                         `pulumi:"discoveryRuleEnabled"`
	DiscoveryRules       ServiceDiscoveryRuleDiscoveryRuleArrayOutput `pulumi:"discoveryRules"`
	IsDefaultRule        pulumi.BoolPtrOutput                         `pulumi:"isDefaultRule"`
	LogFileSuffixes      pulumi.StringArrayOutput                     `pulumi:"logFileSuffixes"`
	LogPathRules         ServiceDiscoveryRuleLogPathRuleArrayOutput   `pulumi:"logPathRules"`
	Name                 pulumi.StringOutput                          `pulumi:"name"`
	NameRules            ServiceDiscoveryRuleNameRulesOutput          `pulumi:"nameRules"`
	Priority             pulumi.IntPtrOutput                          `pulumi:"priority"`
	Region               pulumi.StringOutput                          `pulumi:"region"`
	RuleId               pulumi.StringOutput                          `pulumi:"ruleId"`
	ServiceType          pulumi.StringOutput                          `pulumi:"serviceType"`
}

// NewServiceDiscoveryRule registers a new resource with the given unique name, arguments, and options.
func NewServiceDiscoveryRule(ctx *pulumi.Context,
	name string, args *ServiceDiscoveryRuleArgs, opts ...pulumi.ResourceOption) (*ServiceDiscoveryRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiscoveryRules == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveryRules'")
	}
	if args.LogFileSuffixes == nil {
		return nil, errors.New("invalid value for required argument 'LogFileSuffixes'")
	}
	if args.NameRules == nil {
		return nil, errors.New("invalid value for required argument 'NameRules'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceDiscoveryRule
	err := ctx.RegisterResource("sbercloud:Aom/serviceDiscoveryRule:ServiceDiscoveryRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDiscoveryRule gets an existing ServiceDiscoveryRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDiscoveryRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDiscoveryRuleState, opts ...pulumi.ResourceOption) (*ServiceDiscoveryRule, error) {
	var resource ServiceDiscoveryRule
	err := ctx.ReadResource("sbercloud:Aom/serviceDiscoveryRule:ServiceDiscoveryRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDiscoveryRule resources.
type serviceDiscoveryRuleState struct {
	CreatedAt            *string                             `pulumi:"createdAt"`
	Description          *string                             `pulumi:"description"`
	DetectLogEnabled     *bool                               `pulumi:"detectLogEnabled"`
	DiscoveryRuleEnabled *bool                               `pulumi:"discoveryRuleEnabled"`
	DiscoveryRules       []ServiceDiscoveryRuleDiscoveryRule `pulumi:"discoveryRules"`
	IsDefaultRule        *bool                               `pulumi:"isDefaultRule"`
	LogFileSuffixes      []string                            `pulumi:"logFileSuffixes"`
	LogPathRules         []ServiceDiscoveryRuleLogPathRule   `pulumi:"logPathRules"`
	Name                 *string                             `pulumi:"name"`
	NameRules            *ServiceDiscoveryRuleNameRules      `pulumi:"nameRules"`
	Priority             *int                                `pulumi:"priority"`
	Region               *string                             `pulumi:"region"`
	RuleId               *string                             `pulumi:"ruleId"`
	ServiceType          *string                             `pulumi:"serviceType"`
}

type ServiceDiscoveryRuleState struct {
	CreatedAt            pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DetectLogEnabled     pulumi.BoolPtrInput
	DiscoveryRuleEnabled pulumi.BoolPtrInput
	DiscoveryRules       ServiceDiscoveryRuleDiscoveryRuleArrayInput
	IsDefaultRule        pulumi.BoolPtrInput
	LogFileSuffixes      pulumi.StringArrayInput
	LogPathRules         ServiceDiscoveryRuleLogPathRuleArrayInput
	Name                 pulumi.StringPtrInput
	NameRules            ServiceDiscoveryRuleNameRulesPtrInput
	Priority             pulumi.IntPtrInput
	Region               pulumi.StringPtrInput
	RuleId               pulumi.StringPtrInput
	ServiceType          pulumi.StringPtrInput
}

func (ServiceDiscoveryRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDiscoveryRuleState)(nil)).Elem()
}

type serviceDiscoveryRuleArgs struct {
	Description          *string                             `pulumi:"description"`
	DetectLogEnabled     *bool                               `pulumi:"detectLogEnabled"`
	DiscoveryRuleEnabled *bool                               `pulumi:"discoveryRuleEnabled"`
	DiscoveryRules       []ServiceDiscoveryRuleDiscoveryRule `pulumi:"discoveryRules"`
	IsDefaultRule        *bool                               `pulumi:"isDefaultRule"`
	LogFileSuffixes      []string                            `pulumi:"logFileSuffixes"`
	LogPathRules         []ServiceDiscoveryRuleLogPathRule   `pulumi:"logPathRules"`
	Name                 *string                             `pulumi:"name"`
	NameRules            ServiceDiscoveryRuleNameRules       `pulumi:"nameRules"`
	Priority             *int                                `pulumi:"priority"`
	Region               *string                             `pulumi:"region"`
	ServiceType          string                              `pulumi:"serviceType"`
}

// The set of arguments for constructing a ServiceDiscoveryRule resource.
type ServiceDiscoveryRuleArgs struct {
	Description          pulumi.StringPtrInput
	DetectLogEnabled     pulumi.BoolPtrInput
	DiscoveryRuleEnabled pulumi.BoolPtrInput
	DiscoveryRules       ServiceDiscoveryRuleDiscoveryRuleArrayInput
	IsDefaultRule        pulumi.BoolPtrInput
	LogFileSuffixes      pulumi.StringArrayInput
	LogPathRules         ServiceDiscoveryRuleLogPathRuleArrayInput
	Name                 pulumi.StringPtrInput
	NameRules            ServiceDiscoveryRuleNameRulesInput
	Priority             pulumi.IntPtrInput
	Region               pulumi.StringPtrInput
	ServiceType          pulumi.StringInput
}

func (ServiceDiscoveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDiscoveryRuleArgs)(nil)).Elem()
}

type ServiceDiscoveryRuleInput interface {
	pulumi.Input

	ToServiceDiscoveryRuleOutput() ServiceDiscoveryRuleOutput
	ToServiceDiscoveryRuleOutputWithContext(ctx context.Context) ServiceDiscoveryRuleOutput
}

func (*ServiceDiscoveryRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDiscoveryRule)(nil)).Elem()
}

func (i *ServiceDiscoveryRule) ToServiceDiscoveryRuleOutput() ServiceDiscoveryRuleOutput {
	return i.ToServiceDiscoveryRuleOutputWithContext(context.Background())
}

func (i *ServiceDiscoveryRule) ToServiceDiscoveryRuleOutputWithContext(ctx context.Context) ServiceDiscoveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryRuleOutput)
}

// ServiceDiscoveryRuleArrayInput is an input type that accepts ServiceDiscoveryRuleArray and ServiceDiscoveryRuleArrayOutput values.
// You can construct a concrete instance of `ServiceDiscoveryRuleArrayInput` via:
//
//	ServiceDiscoveryRuleArray{ ServiceDiscoveryRuleArgs{...} }
type ServiceDiscoveryRuleArrayInput interface {
	pulumi.Input

	ToServiceDiscoveryRuleArrayOutput() ServiceDiscoveryRuleArrayOutput
	ToServiceDiscoveryRuleArrayOutputWithContext(context.Context) ServiceDiscoveryRuleArrayOutput
}

type ServiceDiscoveryRuleArray []ServiceDiscoveryRuleInput

func (ServiceDiscoveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceDiscoveryRule)(nil)).Elem()
}

func (i ServiceDiscoveryRuleArray) ToServiceDiscoveryRuleArrayOutput() ServiceDiscoveryRuleArrayOutput {
	return i.ToServiceDiscoveryRuleArrayOutputWithContext(context.Background())
}

func (i ServiceDiscoveryRuleArray) ToServiceDiscoveryRuleArrayOutputWithContext(ctx context.Context) ServiceDiscoveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryRuleArrayOutput)
}

// ServiceDiscoveryRuleMapInput is an input type that accepts ServiceDiscoveryRuleMap and ServiceDiscoveryRuleMapOutput values.
// You can construct a concrete instance of `ServiceDiscoveryRuleMapInput` via:
//
//	ServiceDiscoveryRuleMap{ "key": ServiceDiscoveryRuleArgs{...} }
type ServiceDiscoveryRuleMapInput interface {
	pulumi.Input

	ToServiceDiscoveryRuleMapOutput() ServiceDiscoveryRuleMapOutput
	ToServiceDiscoveryRuleMapOutputWithContext(context.Context) ServiceDiscoveryRuleMapOutput
}

type ServiceDiscoveryRuleMap map[string]ServiceDiscoveryRuleInput

func (ServiceDiscoveryRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceDiscoveryRule)(nil)).Elem()
}

func (i ServiceDiscoveryRuleMap) ToServiceDiscoveryRuleMapOutput() ServiceDiscoveryRuleMapOutput {
	return i.ToServiceDiscoveryRuleMapOutputWithContext(context.Background())
}

func (i ServiceDiscoveryRuleMap) ToServiceDiscoveryRuleMapOutputWithContext(ctx context.Context) ServiceDiscoveryRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDiscoveryRuleMapOutput)
}

type ServiceDiscoveryRuleOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDiscoveryRule)(nil)).Elem()
}

func (o ServiceDiscoveryRuleOutput) ToServiceDiscoveryRuleOutput() ServiceDiscoveryRuleOutput {
	return o
}

func (o ServiceDiscoveryRuleOutput) ToServiceDiscoveryRuleOutputWithContext(ctx context.Context) ServiceDiscoveryRuleOutput {
	return o
}

func (o ServiceDiscoveryRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ServiceDiscoveryRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ServiceDiscoveryRuleOutput) DetectLogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.BoolPtrOutput { return v.DetectLogEnabled }).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoveryRuleOutput) DiscoveryRuleEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.BoolPtrOutput { return v.DiscoveryRuleEnabled }).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoveryRuleOutput) DiscoveryRules() ServiceDiscoveryRuleDiscoveryRuleArrayOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) ServiceDiscoveryRuleDiscoveryRuleArrayOutput { return v.DiscoveryRules }).(ServiceDiscoveryRuleDiscoveryRuleArrayOutput)
}

func (o ServiceDiscoveryRuleOutput) IsDefaultRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.BoolPtrOutput { return v.IsDefaultRule }).(pulumi.BoolPtrOutput)
}

func (o ServiceDiscoveryRuleOutput) LogFileSuffixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringArrayOutput { return v.LogFileSuffixes }).(pulumi.StringArrayOutput)
}

func (o ServiceDiscoveryRuleOutput) LogPathRules() ServiceDiscoveryRuleLogPathRuleArrayOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) ServiceDiscoveryRuleLogPathRuleArrayOutput { return v.LogPathRules }).(ServiceDiscoveryRuleLogPathRuleArrayOutput)
}

func (o ServiceDiscoveryRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceDiscoveryRuleOutput) NameRules() ServiceDiscoveryRuleNameRulesOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) ServiceDiscoveryRuleNameRulesOutput { return v.NameRules }).(ServiceDiscoveryRuleNameRulesOutput)
}

func (o ServiceDiscoveryRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o ServiceDiscoveryRuleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ServiceDiscoveryRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

func (o ServiceDiscoveryRuleOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDiscoveryRule) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

type ServiceDiscoveryRuleArrayOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceDiscoveryRule)(nil)).Elem()
}

func (o ServiceDiscoveryRuleArrayOutput) ToServiceDiscoveryRuleArrayOutput() ServiceDiscoveryRuleArrayOutput {
	return o
}

func (o ServiceDiscoveryRuleArrayOutput) ToServiceDiscoveryRuleArrayOutputWithContext(ctx context.Context) ServiceDiscoveryRuleArrayOutput {
	return o
}

func (o ServiceDiscoveryRuleArrayOutput) Index(i pulumi.IntInput) ServiceDiscoveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceDiscoveryRule {
		return vs[0].([]*ServiceDiscoveryRule)[vs[1].(int)]
	}).(ServiceDiscoveryRuleOutput)
}

type ServiceDiscoveryRuleMapOutput struct{ *pulumi.OutputState }

func (ServiceDiscoveryRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceDiscoveryRule)(nil)).Elem()
}

func (o ServiceDiscoveryRuleMapOutput) ToServiceDiscoveryRuleMapOutput() ServiceDiscoveryRuleMapOutput {
	return o
}

func (o ServiceDiscoveryRuleMapOutput) ToServiceDiscoveryRuleMapOutputWithContext(ctx context.Context) ServiceDiscoveryRuleMapOutput {
	return o
}

func (o ServiceDiscoveryRuleMapOutput) MapIndex(k pulumi.StringInput) ServiceDiscoveryRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceDiscoveryRule {
		return vs[0].(map[string]*ServiceDiscoveryRule)[vs[1].(string)]
	}).(ServiceDiscoveryRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDiscoveryRuleInput)(nil)).Elem(), &ServiceDiscoveryRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDiscoveryRuleArrayInput)(nil)).Elem(), ServiceDiscoveryRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDiscoveryRuleMapInput)(nil)).Elem(), ServiceDiscoveryRuleMap{})
	pulumi.RegisterOutputType(ServiceDiscoveryRuleOutput{})
	pulumi.RegisterOutputType(ServiceDiscoveryRuleArrayOutput{})
	pulumi.RegisterOutputType(ServiceDiscoveryRuleMapOutput{})
}
