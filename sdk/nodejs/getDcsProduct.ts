// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDcsProduct(args?: GetDcsProductArgs, opts?: pulumi.InvokeOptions): Promise<GetDcsProductResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:index/getDcsProduct:getDcsProduct", {
        "region": args.region,
        "specCode": args.specCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getDcsProduct.
 */
export interface GetDcsProductArgs {
    region?: string;
    specCode?: string;
}

/**
 * A collection of values returned by getDcsProduct.
 */
export interface GetDcsProductResult {
    readonly cacheMode: string;
    readonly capacity: string;
    readonly engine: string;
    readonly engineVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly specCode: string;
}
export function getDcsProductOutput(args?: GetDcsProductOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDcsProductResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:index/getDcsProduct:getDcsProduct", {
        "region": args.region,
        "specCode": args.specCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getDcsProduct.
 */
export interface GetDcsProductOutputArgs {
    region?: pulumi.Input<string>;
    specCode?: pulumi.Input<string>;
}
