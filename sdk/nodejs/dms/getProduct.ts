// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getProduct(args: GetProductArgs, opts?: pulumi.InvokeOptions): Promise<GetProductResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Dms/getProduct:getProduct", {
        "availabilityZones": args.availabilityZones,
        "bandwidth": args.bandwidth,
        "engine": args.engine,
        "instanceType": args.instanceType,
        "ioType": args.ioType,
        "nodeNum": args.nodeNum,
        "partitionNum": args.partitionNum,
        "region": args.region,
        "storage": args.storage,
        "storageSpecCode": args.storageSpecCode,
        "version": args.version,
        "vmSpecification": args.vmSpecification,
    }, opts);
}

/**
 * A collection of arguments for invoking getProduct.
 */
export interface GetProductArgs {
    availabilityZones?: string[];
    bandwidth?: string;
    engine: string;
    instanceType: string;
    /**
     * @deprecated io_type has deprecated, please use storage_spec_code
     */
    ioType?: string;
    nodeNum?: string;
    partitionNum?: string;
    region?: string;
    storage?: string;
    storageSpecCode?: string;
    version?: string;
    vmSpecification?: string;
}

/**
 * A collection of values returned by getProduct.
 */
export interface GetProductResult {
    readonly availabilityZones: string[];
    readonly bandwidth: string;
    readonly engine: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceType: string;
    /**
     * @deprecated io_type has deprecated, please use storage_spec_code
     */
    readonly ioType: string;
    readonly nodeNum: string;
    readonly partitionNum: string;
    readonly region: string;
    readonly storage: string;
    readonly storageSpecCode: string;
    readonly storageSpecCodes: string[];
    readonly version: string;
    readonly vmSpecification: string;
}
export function getProductOutput(args: GetProductOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProductResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Dms/getProduct:getProduct", {
        "availabilityZones": args.availabilityZones,
        "bandwidth": args.bandwidth,
        "engine": args.engine,
        "instanceType": args.instanceType,
        "ioType": args.ioType,
        "nodeNum": args.nodeNum,
        "partitionNum": args.partitionNum,
        "region": args.region,
        "storage": args.storage,
        "storageSpecCode": args.storageSpecCode,
        "version": args.version,
        "vmSpecification": args.vmSpecification,
    }, opts);
}

/**
 * A collection of arguments for invoking getProduct.
 */
export interface GetProductOutputArgs {
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    bandwidth?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    instanceType: pulumi.Input<string>;
    /**
     * @deprecated io_type has deprecated, please use storage_spec_code
     */
    ioType?: pulumi.Input<string>;
    nodeNum?: pulumi.Input<string>;
    partitionNum?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    storage?: pulumi.Input<string>;
    storageSpecCode?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    vmSpecification?: pulumi.Input<string>;
}
