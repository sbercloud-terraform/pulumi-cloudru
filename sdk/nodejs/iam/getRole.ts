// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const authAdmin = sbercloud.Iam.getRole({
 *     name: "secu_admin",
 * });
 * ```
 */
export function getRole(args?: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Iam/getRole:getRole", {
        "displayName": args.displayName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    /**
     * Specifies the display name of the role displayed on the console.
     * It is recommended to use this parameter instead of `name` and required if `name` is not specified.
     */
    displayName?: string;
    /**
     * Specifies the name of the role for internal use.
     * It's required if `displayName` is not specified.
     */
    name?: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    /**
     * The service catalog of the policy.
     */
    readonly catalog: string;
    /**
     * The description of the policy.
     */
    readonly description: string;
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The content of the policy.
     */
    readonly policy: string;
    /**
     * The display mode of the policy.
     */
    readonly type: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const authAdmin = sbercloud.Iam.getRole({
 *     name: "secu_admin",
 * });
 * ```
 */
export function getRoleOutput(args?: GetRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Iam/getRole:getRole", {
        "displayName": args.displayName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    /**
     * Specifies the display name of the role displayed on the console.
     * It is recommended to use this parameter instead of `name` and required if `name` is not specified.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Specifies the name of the role for internal use.
     * It's required if `displayName` is not specified.
     */
    name?: pulumi.Input<string>;
}
