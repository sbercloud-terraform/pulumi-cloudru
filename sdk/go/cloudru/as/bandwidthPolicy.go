// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

type BandwidthPolicy struct {
	pulumi.CustomResourceState

	// Specifies identification of operation the AS bandwidth policy.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// Specifies the alarm rule ID.
	AlarmId pulumi.StringOutput `pulumi:"alarmId"`
	// Specifies the scaling bandwidth ID.
	BandwidthId pulumi.StringOutput `pulumi:"bandwidthId"`
	// Specifies the cooldown period (in seconds).
	CoolDownTime pulumi.IntOutput `pulumi:"coolDownTime"`
	// The creation time of the bandwidth policy.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Specifies the description of the AS policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies the alarm interval of the bandwidth policy.
	IntervalAlarmActions BandwidthPolicyIntervalAlarmActionArrayOutput `pulumi:"intervalAlarmActions"`
	// The bandwidth policy additional information.
	MetaDatas           BandwidthPolicyMetaDataArrayOutput       `pulumi:"metaDatas"`
	Region              pulumi.StringOutput                      `pulumi:"region"`
	ScalingPolicyAction BandwidthPolicyScalingPolicyActionOutput `pulumi:"scalingPolicyAction"`
	// Specifies the AS policy name.
	ScalingPolicyName pulumi.StringOutput `pulumi:"scalingPolicyName"`
	// Specifies the AS policy type.
	ScalingPolicyType pulumi.StringOutput `pulumi:"scalingPolicyType"`
	// the scaling resource type.
	ScalingResourceType pulumi.StringOutput                  `pulumi:"scalingResourceType"`
	ScheduledPolicy     BandwidthPolicyScheduledPolicyOutput `pulumi:"scheduledPolicy"`
	// the AS policy status.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewBandwidthPolicy registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPolicy(ctx *pulumi.Context,
	name string, args *BandwidthPolicyArgs, opts ...pulumi.ResourceOption) (*BandwidthPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BandwidthId == nil {
		return nil, errors.New("invalid value for required argument 'BandwidthId'")
	}
	if args.ScalingPolicyName == nil {
		return nil, errors.New("invalid value for required argument 'ScalingPolicyName'")
	}
	if args.ScalingPolicyType == nil {
		return nil, errors.New("invalid value for required argument 'ScalingPolicyType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BandwidthPolicy
	err := ctx.RegisterResource("cloudru:As/bandwidthPolicy:BandwidthPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPolicy gets an existing BandwidthPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPolicyState, opts ...pulumi.ResourceOption) (*BandwidthPolicy, error) {
	var resource BandwidthPolicy
	err := ctx.ReadResource("cloudru:As/bandwidthPolicy:BandwidthPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPolicy resources.
type bandwidthPolicyState struct {
	// Specifies identification of operation the AS bandwidth policy.
	Action *string `pulumi:"action"`
	// Specifies the alarm rule ID.
	AlarmId *string `pulumi:"alarmId"`
	// Specifies the scaling bandwidth ID.
	BandwidthId *string `pulumi:"bandwidthId"`
	// Specifies the cooldown period (in seconds).
	CoolDownTime *int `pulumi:"coolDownTime"`
	// The creation time of the bandwidth policy.
	CreateTime *string `pulumi:"createTime"`
	// Specifies the description of the AS policy.
	Description *string `pulumi:"description"`
	// Specifies the alarm interval of the bandwidth policy.
	IntervalAlarmActions []BandwidthPolicyIntervalAlarmAction `pulumi:"intervalAlarmActions"`
	// The bandwidth policy additional information.
	MetaDatas           []BandwidthPolicyMetaData           `pulumi:"metaDatas"`
	Region              *string                             `pulumi:"region"`
	ScalingPolicyAction *BandwidthPolicyScalingPolicyAction `pulumi:"scalingPolicyAction"`
	// Specifies the AS policy name.
	ScalingPolicyName *string `pulumi:"scalingPolicyName"`
	// Specifies the AS policy type.
	ScalingPolicyType *string `pulumi:"scalingPolicyType"`
	// the scaling resource type.
	ScalingResourceType *string                         `pulumi:"scalingResourceType"`
	ScheduledPolicy     *BandwidthPolicyScheduledPolicy `pulumi:"scheduledPolicy"`
	// the AS policy status.
	Status *string `pulumi:"status"`
}

type BandwidthPolicyState struct {
	// Specifies identification of operation the AS bandwidth policy.
	Action pulumi.StringPtrInput
	// Specifies the alarm rule ID.
	AlarmId pulumi.StringPtrInput
	// Specifies the scaling bandwidth ID.
	BandwidthId pulumi.StringPtrInput
	// Specifies the cooldown period (in seconds).
	CoolDownTime pulumi.IntPtrInput
	// The creation time of the bandwidth policy.
	CreateTime pulumi.StringPtrInput
	// Specifies the description of the AS policy.
	Description pulumi.StringPtrInput
	// Specifies the alarm interval of the bandwidth policy.
	IntervalAlarmActions BandwidthPolicyIntervalAlarmActionArrayInput
	// The bandwidth policy additional information.
	MetaDatas           BandwidthPolicyMetaDataArrayInput
	Region              pulumi.StringPtrInput
	ScalingPolicyAction BandwidthPolicyScalingPolicyActionPtrInput
	// Specifies the AS policy name.
	ScalingPolicyName pulumi.StringPtrInput
	// Specifies the AS policy type.
	ScalingPolicyType pulumi.StringPtrInput
	// the scaling resource type.
	ScalingResourceType pulumi.StringPtrInput
	ScheduledPolicy     BandwidthPolicyScheduledPolicyPtrInput
	// the AS policy status.
	Status pulumi.StringPtrInput
}

func (BandwidthPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPolicyState)(nil)).Elem()
}

type bandwidthPolicyArgs struct {
	// Specifies identification of operation the AS bandwidth policy.
	Action *string `pulumi:"action"`
	// Specifies the alarm rule ID.
	AlarmId *string `pulumi:"alarmId"`
	// Specifies the scaling bandwidth ID.
	BandwidthId string `pulumi:"bandwidthId"`
	// Specifies the cooldown period (in seconds).
	CoolDownTime *int `pulumi:"coolDownTime"`
	// Specifies the description of the AS policy.
	Description *string `pulumi:"description"`
	// Specifies the alarm interval of the bandwidth policy.
	IntervalAlarmActions []BandwidthPolicyIntervalAlarmAction `pulumi:"intervalAlarmActions"`
	Region               *string                              `pulumi:"region"`
	ScalingPolicyAction  *BandwidthPolicyScalingPolicyAction  `pulumi:"scalingPolicyAction"`
	// Specifies the AS policy name.
	ScalingPolicyName string `pulumi:"scalingPolicyName"`
	// Specifies the AS policy type.
	ScalingPolicyType string                          `pulumi:"scalingPolicyType"`
	ScheduledPolicy   *BandwidthPolicyScheduledPolicy `pulumi:"scheduledPolicy"`
}

// The set of arguments for constructing a BandwidthPolicy resource.
type BandwidthPolicyArgs struct {
	// Specifies identification of operation the AS bandwidth policy.
	Action pulumi.StringPtrInput
	// Specifies the alarm rule ID.
	AlarmId pulumi.StringPtrInput
	// Specifies the scaling bandwidth ID.
	BandwidthId pulumi.StringInput
	// Specifies the cooldown period (in seconds).
	CoolDownTime pulumi.IntPtrInput
	// Specifies the description of the AS policy.
	Description pulumi.StringPtrInput
	// Specifies the alarm interval of the bandwidth policy.
	IntervalAlarmActions BandwidthPolicyIntervalAlarmActionArrayInput
	Region               pulumi.StringPtrInput
	ScalingPolicyAction  BandwidthPolicyScalingPolicyActionPtrInput
	// Specifies the AS policy name.
	ScalingPolicyName pulumi.StringInput
	// Specifies the AS policy type.
	ScalingPolicyType pulumi.StringInput
	ScheduledPolicy   BandwidthPolicyScheduledPolicyPtrInput
}

func (BandwidthPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPolicyArgs)(nil)).Elem()
}

type BandwidthPolicyInput interface {
	pulumi.Input

	ToBandwidthPolicyOutput() BandwidthPolicyOutput
	ToBandwidthPolicyOutputWithContext(ctx context.Context) BandwidthPolicyOutput
}

func (*BandwidthPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPolicy)(nil)).Elem()
}

func (i *BandwidthPolicy) ToBandwidthPolicyOutput() BandwidthPolicyOutput {
	return i.ToBandwidthPolicyOutputWithContext(context.Background())
}

func (i *BandwidthPolicy) ToBandwidthPolicyOutputWithContext(ctx context.Context) BandwidthPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyOutput)
}

// BandwidthPolicyArrayInput is an input type that accepts BandwidthPolicyArray and BandwidthPolicyArrayOutput values.
// You can construct a concrete instance of `BandwidthPolicyArrayInput` via:
//
//	BandwidthPolicyArray{ BandwidthPolicyArgs{...} }
type BandwidthPolicyArrayInput interface {
	pulumi.Input

	ToBandwidthPolicyArrayOutput() BandwidthPolicyArrayOutput
	ToBandwidthPolicyArrayOutputWithContext(context.Context) BandwidthPolicyArrayOutput
}

type BandwidthPolicyArray []BandwidthPolicyInput

func (BandwidthPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPolicy)(nil)).Elem()
}

func (i BandwidthPolicyArray) ToBandwidthPolicyArrayOutput() BandwidthPolicyArrayOutput {
	return i.ToBandwidthPolicyArrayOutputWithContext(context.Background())
}

func (i BandwidthPolicyArray) ToBandwidthPolicyArrayOutputWithContext(ctx context.Context) BandwidthPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyArrayOutput)
}

// BandwidthPolicyMapInput is an input type that accepts BandwidthPolicyMap and BandwidthPolicyMapOutput values.
// You can construct a concrete instance of `BandwidthPolicyMapInput` via:
//
//	BandwidthPolicyMap{ "key": BandwidthPolicyArgs{...} }
type BandwidthPolicyMapInput interface {
	pulumi.Input

	ToBandwidthPolicyMapOutput() BandwidthPolicyMapOutput
	ToBandwidthPolicyMapOutputWithContext(context.Context) BandwidthPolicyMapOutput
}

type BandwidthPolicyMap map[string]BandwidthPolicyInput

func (BandwidthPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPolicy)(nil)).Elem()
}

func (i BandwidthPolicyMap) ToBandwidthPolicyMapOutput() BandwidthPolicyMapOutput {
	return i.ToBandwidthPolicyMapOutputWithContext(context.Background())
}

func (i BandwidthPolicyMap) ToBandwidthPolicyMapOutputWithContext(ctx context.Context) BandwidthPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyMapOutput)
}

type BandwidthPolicyOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPolicy)(nil)).Elem()
}

func (o BandwidthPolicyOutput) ToBandwidthPolicyOutput() BandwidthPolicyOutput {
	return o
}

func (o BandwidthPolicyOutput) ToBandwidthPolicyOutputWithContext(ctx context.Context) BandwidthPolicyOutput {
	return o
}

// Specifies identification of operation the AS bandwidth policy.
func (o BandwidthPolicyOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// Specifies the alarm rule ID.
func (o BandwidthPolicyOutput) AlarmId() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.AlarmId }).(pulumi.StringOutput)
}

// Specifies the scaling bandwidth ID.
func (o BandwidthPolicyOutput) BandwidthId() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.BandwidthId }).(pulumi.StringOutput)
}

// Specifies the cooldown period (in seconds).
func (o BandwidthPolicyOutput) CoolDownTime() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.IntOutput { return v.CoolDownTime }).(pulumi.IntOutput)
}

// The creation time of the bandwidth policy.
func (o BandwidthPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Specifies the description of the AS policy.
func (o BandwidthPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies the alarm interval of the bandwidth policy.
func (o BandwidthPolicyOutput) IntervalAlarmActions() BandwidthPolicyIntervalAlarmActionArrayOutput {
	return o.ApplyT(func(v *BandwidthPolicy) BandwidthPolicyIntervalAlarmActionArrayOutput { return v.IntervalAlarmActions }).(BandwidthPolicyIntervalAlarmActionArrayOutput)
}

// The bandwidth policy additional information.
func (o BandwidthPolicyOutput) MetaDatas() BandwidthPolicyMetaDataArrayOutput {
	return o.ApplyT(func(v *BandwidthPolicy) BandwidthPolicyMetaDataArrayOutput { return v.MetaDatas }).(BandwidthPolicyMetaDataArrayOutput)
}

func (o BandwidthPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o BandwidthPolicyOutput) ScalingPolicyAction() BandwidthPolicyScalingPolicyActionOutput {
	return o.ApplyT(func(v *BandwidthPolicy) BandwidthPolicyScalingPolicyActionOutput { return v.ScalingPolicyAction }).(BandwidthPolicyScalingPolicyActionOutput)
}

// Specifies the AS policy name.
func (o BandwidthPolicyOutput) ScalingPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.ScalingPolicyName }).(pulumi.StringOutput)
}

// Specifies the AS policy type.
func (o BandwidthPolicyOutput) ScalingPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.ScalingPolicyType }).(pulumi.StringOutput)
}

// the scaling resource type.
func (o BandwidthPolicyOutput) ScalingResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.ScalingResourceType }).(pulumi.StringOutput)
}

func (o BandwidthPolicyOutput) ScheduledPolicy() BandwidthPolicyScheduledPolicyOutput {
	return o.ApplyT(func(v *BandwidthPolicy) BandwidthPolicyScheduledPolicyOutput { return v.ScheduledPolicy }).(BandwidthPolicyScheduledPolicyOutput)
}

// the AS policy status.
func (o BandwidthPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPolicy) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type BandwidthPolicyArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPolicy)(nil)).Elem()
}

func (o BandwidthPolicyArrayOutput) ToBandwidthPolicyArrayOutput() BandwidthPolicyArrayOutput {
	return o
}

func (o BandwidthPolicyArrayOutput) ToBandwidthPolicyArrayOutputWithContext(ctx context.Context) BandwidthPolicyArrayOutput {
	return o
}

func (o BandwidthPolicyArrayOutput) Index(i pulumi.IntInput) BandwidthPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BandwidthPolicy {
		return vs[0].([]*BandwidthPolicy)[vs[1].(int)]
	}).(BandwidthPolicyOutput)
}

type BandwidthPolicyMapOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPolicy)(nil)).Elem()
}

func (o BandwidthPolicyMapOutput) ToBandwidthPolicyMapOutput() BandwidthPolicyMapOutput {
	return o
}

func (o BandwidthPolicyMapOutput) ToBandwidthPolicyMapOutputWithContext(ctx context.Context) BandwidthPolicyMapOutput {
	return o
}

func (o BandwidthPolicyMapOutput) MapIndex(k pulumi.StringInput) BandwidthPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BandwidthPolicy {
		return vs[0].(map[string]*BandwidthPolicy)[vs[1].(string)]
	}).(BandwidthPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyInput)(nil)).Elem(), &BandwidthPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyArrayInput)(nil)).Elem(), BandwidthPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyMapInput)(nil)).Elem(), BandwidthPolicyMap{})
	pulumi.RegisterOutputType(BandwidthPolicyOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyMapOutput{})
}
