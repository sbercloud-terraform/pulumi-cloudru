// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Use this data source to query the tag list of all resources of the same type within SberCloud.
//
// Before using enterprise router, define custom endpoint as shown below:
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/er"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := er.GetTags(ctx, &er.GetTagsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTags(ctx *pulumi.Context, args *GetTagsArgs, opts ...pulumi.InvokeOption) (*GetTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTagsResult
	err := ctx.Invoke("sbercloud:Er/getTags:getTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTags.
type GetTagsArgs struct {
	// Specifies the region in which to query the resource tags.\
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the resource type to which the tags belong that to be queried.\
	// The valid values are as follows:
	// + **instance**: enterprise router instance.
	// + **route-table**: route table.
	// + **vpc-attachment**: VPC connection.
	// + **vgw-attachment**: virtual gateway connection.
	// + **peering-attachment**: peering connection.
	// + **vpn-attachment**: VPN gateway connection.
	// + **ecn-attachment**: enterprise network connection.
	// + **cfw-attachment**: cloud firewall connection.
	ResourceType string `pulumi:"resourceType"`
}

// A collection of values returned by getTags.
type GetTagsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Region       string `pulumi:"region"`
	ResourceType string `pulumi:"resourceType"`
	// The list of all tags for resources of the same type.\
	// The tags structure is documented below.
	Tags []GetTagsTag `pulumi:"tags"`
}

func GetTagsOutput(ctx *pulumi.Context, args GetTagsOutputArgs, opts ...pulumi.InvokeOption) GetTagsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTagsResultOutput, error) {
			args := v.(GetTagsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Er/getTags:getTags", args, GetTagsResultOutput{}, options).(GetTagsResultOutput), nil
		}).(GetTagsResultOutput)
}

// A collection of arguments for invoking getTags.
type GetTagsOutputArgs struct {
	// Specifies the region in which to query the resource tags.\
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the resource type to which the tags belong that to be queried.\
	// The valid values are as follows:
	// + **instance**: enterprise router instance.
	// + **route-table**: route table.
	// + **vpc-attachment**: VPC connection.
	// + **vgw-attachment**: virtual gateway connection.
	// + **peering-attachment**: peering connection.
	// + **vpn-attachment**: VPN gateway connection.
	// + **ecn-attachment**: enterprise network connection.
	// + **cfw-attachment**: cloud firewall connection.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetTagsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsArgs)(nil)).Elem()
}

// A collection of values returned by getTags.
type GetTagsResultOutput struct{ *pulumi.OutputState }

func (GetTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsResult)(nil)).Elem()
}

func (o GetTagsResultOutput) ToGetTagsResultOutput() GetTagsResultOutput {
	return o
}

func (o GetTagsResultOutput) ToGetTagsResultOutputWithContext(ctx context.Context) GetTagsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTagsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTagsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetTagsResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The list of all tags for resources of the same type.\
// The tags structure is documented below.
func (o GetTagsResultOutput) Tags() GetTagsTagArrayOutput {
	return o.ApplyT(func(v GetTagsResult) []GetTagsTag { return v.Tags }).(GetTagsTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTagsResultOutput{})
}
