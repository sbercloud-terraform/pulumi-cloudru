// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a CFW black white list resource within SberCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const listType = config.requireObject<any>("listType");
 * const direction = config.requireObject<any>("direction");
 * const addressType = config.requireObject<any>("addressType");
 * const address = config.requireObject<any>("address");
 * const protocol = config.requireObject<any>("protocol");
 * const port = config.requireObject<any>("port");
 * const test = sbercloud.Cfw.getFirewalls({});
 * const testBlackWhiteList = new sbercloud.cfw.BlackWhiteList("test", {
 *     objectId: test.then(test => test.records?.[0]?.protectObjects?.[0]?.objectId),
 *     listType: listType,
 *     direction: direction,
 *     addressType: addressType,
 *     address: address,
 *     protocol: protocol,
 *     port: port,
 * });
 * ```
 *
 * ## Import
 *
 * The black whitelist can be imported using `object_id`, `list_type`, `address`, separated by slashes, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Cfw/blackWhiteList:BlackWhiteList test <object_id>/<list_type>/<address>
 * ```
 */
export class BlackWhiteList extends pulumi.CustomResource {
    /**
     * Get an existing BlackWhiteList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlackWhiteListState, opts?: pulumi.CustomResourceOptions): BlackWhiteList {
        return new BlackWhiteList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/blackWhiteList:BlackWhiteList';

    /**
     * Returns true if the given object is an instance of BlackWhiteList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlackWhiteList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlackWhiteList.__pulumiType;
    }

    /**
     * Specifies the address.
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * Specifies the IP address type.
     * The options are `0` (ipv4), `1` (ipv6) and `2` (domain).
     */
    public readonly addressType!: pulumi.Output<number>;
    /**
     * Specifies the description of the list.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the address direction.
     * The options are `0` (source address) and `1` (destination address).
     */
    public readonly direction!: pulumi.Output<number>;
    /**
     * Specifies the list type.
     * The options are `4` (blacklist) and `5` (whitelist).
     *
     * Changing this parameter will create a new resource.
     */
    public readonly listType!: pulumi.Output<number>;
    /**
     * Specifies the protected object ID.
     *
     * Changing this parameter will create a new resource.
     */
    public readonly objectId!: pulumi.Output<string>;
    /**
     * Specifies the destination port.
     * Required and only available if protocol is **TCP** or **UDP**.
     */
    public readonly port!: pulumi.Output<string>;
    /**
     * Specifies the protocol type. The value can be:
     * + **6**: indicates TCP;
     * + **17**: indicates UDP;
     * + **1**: indicates ICMP;
     * + **58**: indicates ICMPv6;
     * + **-1**: indicates any protocol;
     */
    public readonly protocol!: pulumi.Output<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a BlackWhiteList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlackWhiteListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlackWhiteListArgs | BlackWhiteListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlackWhiteListState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["addressType"] = state ? state.addressType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["listType"] = state ? state.listType : undefined;
            resourceInputs["objectId"] = state ? state.objectId : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as BlackWhiteListArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.addressType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressType'");
            }
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if ((!args || args.listType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listType'");
            }
            if ((!args || args.objectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["addressType"] = args ? args.addressType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["listType"] = args ? args.listType : undefined;
            resourceInputs["objectId"] = args ? args.objectId : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BlackWhiteList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BlackWhiteList resources.
 */
export interface BlackWhiteListState {
    /**
     * Specifies the address.
     */
    address?: pulumi.Input<string>;
    /**
     * Specifies the IP address type.
     * The options are `0` (ipv4), `1` (ipv6) and `2` (domain).
     */
    addressType?: pulumi.Input<number>;
    /**
     * Specifies the description of the list.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the address direction.
     * The options are `0` (source address) and `1` (destination address).
     */
    direction?: pulumi.Input<number>;
    /**
     * Specifies the list type.
     * The options are `4` (blacklist) and `5` (whitelist).
     *
     * Changing this parameter will create a new resource.
     */
    listType?: pulumi.Input<number>;
    /**
     * Specifies the protected object ID.
     *
     * Changing this parameter will create a new resource.
     */
    objectId?: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     * Required and only available if protocol is **TCP** or **UDP**.
     */
    port?: pulumi.Input<string>;
    /**
     * Specifies the protocol type. The value can be:
     * + **6**: indicates TCP;
     * + **17**: indicates UDP;
     * + **1**: indicates ICMP;
     * + **58**: indicates ICMPv6;
     * + **-1**: indicates any protocol;
     */
    protocol?: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BlackWhiteList resource.
 */
export interface BlackWhiteListArgs {
    /**
     * Specifies the address.
     */
    address: pulumi.Input<string>;
    /**
     * Specifies the IP address type.
     * The options are `0` (ipv4), `1` (ipv6) and `2` (domain).
     */
    addressType: pulumi.Input<number>;
    /**
     * Specifies the description of the list.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the address direction.
     * The options are `0` (source address) and `1` (destination address).
     */
    direction: pulumi.Input<number>;
    /**
     * Specifies the list type.
     * The options are `4` (blacklist) and `5` (whitelist).
     *
     * Changing this parameter will create a new resource.
     */
    listType: pulumi.Input<number>;
    /**
     * Specifies the protected object ID.
     *
     * Changing this parameter will create a new resource.
     */
    objectId: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     * Required and only available if protocol is **TCP** or **UDP**.
     */
    port?: pulumi.Input<string>;
    /**
     * Specifies the protocol type. The value can be:
     * + **6**: indicates TCP;
     * + **17**: indicates UDP;
     * + **1**: indicates ICMP;
     * + **58**: indicates ICMPv6;
     * + **-1**: indicates any protocol;
     */
    protocol: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}
