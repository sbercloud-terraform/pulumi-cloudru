// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a CSS configuration resource within SberCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			clusterId := cfg.RequireObject("clusterId")
//			_, err := sbercloud.NewCssConfiguration(ctx, "test", &sbercloud.CssConfigurationArgs{
//				ClusterId:                pulumi.Any(clusterId),
//				ThreadPoolForceMergeSize: pulumi.String("3"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The CSS configuration can be imported using the `id` which equals the `cluster_id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:index/cssConfiguration:CssConfiguration test <id>
// ```
type CssConfiguration struct {
	pulumi.CustomResourceState

	// The CSS cluster ID.
	//
	// Changing this parameter will create a new resource.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Whether to return the Access-Control-Allow-Credentials of
	// the header during cross-domain access.
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsAllowCredetials pulumi.StringOutput `pulumi:"httpCorsAllowCredetials"`
	// Headers allowed for cross-domain access.\
	// Including **X-Requested-With**, **Content-Type**, and **Content-Length**.
	// Use commas (,) and spaces to separate headers.
	HttpCorsAllowHeaders pulumi.StringOutput `pulumi:"httpCorsAllowHeaders"`
	// Methods allowed for cross-domain access.\
	// Including **OPTIONS**, **HEAD**, **GET**, **POST**, **PUT**, and **DELETE**.
	// Use commas (,) and spaces to separate methods.
	HttpCorsAllowMethods pulumi.StringOutput `pulumi:"httpCorsAllowMethods"`
	// Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.
	HttpCorsAllowOrigin pulumi.StringOutput `pulumi:"httpCorsAllowOrigin"`
	// Whether to allow cross-domain access.\
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsEnabled pulumi.StringOutput `pulumi:"httpCorsEnabled"`
	// Cache duration of the browser. The cache is automatically cleared
	// after the time range you specify.
	// Unit: s, Default value: **1,728,000**.
	HttpCorsMaxAge pulumi.StringOutput `pulumi:"httpCorsMaxAge"`
	// Cache size in the query phase. Value range: **1%** to **100%**.\
	// Unit: %, Default value: **10%**.
	IndicesQueriesCacheSize pulumi.StringOutput `pulumi:"indicesQueriesCacheSize"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Configured for migrating data from the current cluster to
	// the target cluster through the reindex API.
	// The example value is **122.122.122.122:9200**.
	ReindexRemoteWhitelist pulumi.StringOutput `pulumi:"reindexRemoteWhitelist"`
	// Queue size in the force merge thread pool.\
	// Default value: **1**.
	ThreadPoolForceMergeSize pulumi.StringOutput `pulumi:"threadPoolForceMergeSize"`
}

// NewCssConfiguration registers a new resource with the given unique name, arguments, and options.
func NewCssConfiguration(ctx *pulumi.Context,
	name string, args *CssConfigurationArgs, opts ...pulumi.ResourceOption) (*CssConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CssConfiguration
	err := ctx.RegisterResource("sbercloud:index/cssConfiguration:CssConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCssConfiguration gets an existing CssConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCssConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CssConfigurationState, opts ...pulumi.ResourceOption) (*CssConfiguration, error) {
	var resource CssConfiguration
	err := ctx.ReadResource("sbercloud:index/cssConfiguration:CssConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CssConfiguration resources.
type cssConfigurationState struct {
	// The CSS cluster ID.
	//
	// Changing this parameter will create a new resource.
	ClusterId *string `pulumi:"clusterId"`
	// Whether to return the Access-Control-Allow-Credentials of
	// the header during cross-domain access.
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsAllowCredetials *string `pulumi:"httpCorsAllowCredetials"`
	// Headers allowed for cross-domain access.\
	// Including **X-Requested-With**, **Content-Type**, and **Content-Length**.
	// Use commas (,) and spaces to separate headers.
	HttpCorsAllowHeaders *string `pulumi:"httpCorsAllowHeaders"`
	// Methods allowed for cross-domain access.\
	// Including **OPTIONS**, **HEAD**, **GET**, **POST**, **PUT**, and **DELETE**.
	// Use commas (,) and spaces to separate methods.
	HttpCorsAllowMethods *string `pulumi:"httpCorsAllowMethods"`
	// Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.
	HttpCorsAllowOrigin *string `pulumi:"httpCorsAllowOrigin"`
	// Whether to allow cross-domain access.\
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsEnabled *string `pulumi:"httpCorsEnabled"`
	// Cache duration of the browser. The cache is automatically cleared
	// after the time range you specify.
	// Unit: s, Default value: **1,728,000**.
	HttpCorsMaxAge *string `pulumi:"httpCorsMaxAge"`
	// Cache size in the query phase. Value range: **1%** to **100%**.\
	// Unit: %, Default value: **10%**.
	IndicesQueriesCacheSize *string `pulumi:"indicesQueriesCacheSize"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Configured for migrating data from the current cluster to
	// the target cluster through the reindex API.
	// The example value is **122.122.122.122:9200**.
	ReindexRemoteWhitelist *string `pulumi:"reindexRemoteWhitelist"`
	// Queue size in the force merge thread pool.\
	// Default value: **1**.
	ThreadPoolForceMergeSize *string `pulumi:"threadPoolForceMergeSize"`
}

type CssConfigurationState struct {
	// The CSS cluster ID.
	//
	// Changing this parameter will create a new resource.
	ClusterId pulumi.StringPtrInput
	// Whether to return the Access-Control-Allow-Credentials of
	// the header during cross-domain access.
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsAllowCredetials pulumi.StringPtrInput
	// Headers allowed for cross-domain access.\
	// Including **X-Requested-With**, **Content-Type**, and **Content-Length**.
	// Use commas (,) and spaces to separate headers.
	HttpCorsAllowHeaders pulumi.StringPtrInput
	// Methods allowed for cross-domain access.\
	// Including **OPTIONS**, **HEAD**, **GET**, **POST**, **PUT**, and **DELETE**.
	// Use commas (,) and spaces to separate methods.
	HttpCorsAllowMethods pulumi.StringPtrInput
	// Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.
	HttpCorsAllowOrigin pulumi.StringPtrInput
	// Whether to allow cross-domain access.\
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsEnabled pulumi.StringPtrInput
	// Cache duration of the browser. The cache is automatically cleared
	// after the time range you specify.
	// Unit: s, Default value: **1,728,000**.
	HttpCorsMaxAge pulumi.StringPtrInput
	// Cache size in the query phase. Value range: **1%** to **100%**.\
	// Unit: %, Default value: **10%**.
	IndicesQueriesCacheSize pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Configured for migrating data from the current cluster to
	// the target cluster through the reindex API.
	// The example value is **122.122.122.122:9200**.
	ReindexRemoteWhitelist pulumi.StringPtrInput
	// Queue size in the force merge thread pool.\
	// Default value: **1**.
	ThreadPoolForceMergeSize pulumi.StringPtrInput
}

func (CssConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*cssConfigurationState)(nil)).Elem()
}

type cssConfigurationArgs struct {
	// The CSS cluster ID.
	//
	// Changing this parameter will create a new resource.
	ClusterId string `pulumi:"clusterId"`
	// Whether to return the Access-Control-Allow-Credentials of
	// the header during cross-domain access.
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsAllowCredetials *string `pulumi:"httpCorsAllowCredetials"`
	// Headers allowed for cross-domain access.\
	// Including **X-Requested-With**, **Content-Type**, and **Content-Length**.
	// Use commas (,) and spaces to separate headers.
	HttpCorsAllowHeaders *string `pulumi:"httpCorsAllowHeaders"`
	// Methods allowed for cross-domain access.\
	// Including **OPTIONS**, **HEAD**, **GET**, **POST**, **PUT**, and **DELETE**.
	// Use commas (,) and spaces to separate methods.
	HttpCorsAllowMethods *string `pulumi:"httpCorsAllowMethods"`
	// Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.
	HttpCorsAllowOrigin *string `pulumi:"httpCorsAllowOrigin"`
	// Whether to allow cross-domain access.\
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsEnabled *string `pulumi:"httpCorsEnabled"`
	// Cache duration of the browser. The cache is automatically cleared
	// after the time range you specify.
	// Unit: s, Default value: **1,728,000**.
	HttpCorsMaxAge *string `pulumi:"httpCorsMaxAge"`
	// Cache size in the query phase. Value range: **1%** to **100%**.\
	// Unit: %, Default value: **10%**.
	IndicesQueriesCacheSize *string `pulumi:"indicesQueriesCacheSize"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Configured for migrating data from the current cluster to
	// the target cluster through the reindex API.
	// The example value is **122.122.122.122:9200**.
	ReindexRemoteWhitelist *string `pulumi:"reindexRemoteWhitelist"`
	// Queue size in the force merge thread pool.\
	// Default value: **1**.
	ThreadPoolForceMergeSize *string `pulumi:"threadPoolForceMergeSize"`
}

// The set of arguments for constructing a CssConfiguration resource.
type CssConfigurationArgs struct {
	// The CSS cluster ID.
	//
	// Changing this parameter will create a new resource.
	ClusterId pulumi.StringInput
	// Whether to return the Access-Control-Allow-Credentials of
	// the header during cross-domain access.
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsAllowCredetials pulumi.StringPtrInput
	// Headers allowed for cross-domain access.\
	// Including **X-Requested-With**, **Content-Type**, and **Content-Length**.
	// Use commas (,) and spaces to separate headers.
	HttpCorsAllowHeaders pulumi.StringPtrInput
	// Methods allowed for cross-domain access.\
	// Including **OPTIONS**, **HEAD**, **GET**, **POST**, **PUT**, and **DELETE**.
	// Use commas (,) and spaces to separate methods.
	HttpCorsAllowMethods pulumi.StringPtrInput
	// Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.
	HttpCorsAllowOrigin pulumi.StringPtrInput
	// Whether to allow cross-domain access.\
	// The value can be **true** or **false**. Default value: **false**.
	HttpCorsEnabled pulumi.StringPtrInput
	// Cache duration of the browser. The cache is automatically cleared
	// after the time range you specify.
	// Unit: s, Default value: **1,728,000**.
	HttpCorsMaxAge pulumi.StringPtrInput
	// Cache size in the query phase. Value range: **1%** to **100%**.\
	// Unit: %, Default value: **10%**.
	IndicesQueriesCacheSize pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Configured for migrating data from the current cluster to
	// the target cluster through the reindex API.
	// The example value is **122.122.122.122:9200**.
	ReindexRemoteWhitelist pulumi.StringPtrInput
	// Queue size in the force merge thread pool.\
	// Default value: **1**.
	ThreadPoolForceMergeSize pulumi.StringPtrInput
}

func (CssConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cssConfigurationArgs)(nil)).Elem()
}

type CssConfigurationInput interface {
	pulumi.Input

	ToCssConfigurationOutput() CssConfigurationOutput
	ToCssConfigurationOutputWithContext(ctx context.Context) CssConfigurationOutput
}

func (*CssConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**CssConfiguration)(nil)).Elem()
}

func (i *CssConfiguration) ToCssConfigurationOutput() CssConfigurationOutput {
	return i.ToCssConfigurationOutputWithContext(context.Background())
}

func (i *CssConfiguration) ToCssConfigurationOutputWithContext(ctx context.Context) CssConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssConfigurationOutput)
}

// CssConfigurationArrayInput is an input type that accepts CssConfigurationArray and CssConfigurationArrayOutput values.
// You can construct a concrete instance of `CssConfigurationArrayInput` via:
//
//	CssConfigurationArray{ CssConfigurationArgs{...} }
type CssConfigurationArrayInput interface {
	pulumi.Input

	ToCssConfigurationArrayOutput() CssConfigurationArrayOutput
	ToCssConfigurationArrayOutputWithContext(context.Context) CssConfigurationArrayOutput
}

type CssConfigurationArray []CssConfigurationInput

func (CssConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CssConfiguration)(nil)).Elem()
}

func (i CssConfigurationArray) ToCssConfigurationArrayOutput() CssConfigurationArrayOutput {
	return i.ToCssConfigurationArrayOutputWithContext(context.Background())
}

func (i CssConfigurationArray) ToCssConfigurationArrayOutputWithContext(ctx context.Context) CssConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssConfigurationArrayOutput)
}

// CssConfigurationMapInput is an input type that accepts CssConfigurationMap and CssConfigurationMapOutput values.
// You can construct a concrete instance of `CssConfigurationMapInput` via:
//
//	CssConfigurationMap{ "key": CssConfigurationArgs{...} }
type CssConfigurationMapInput interface {
	pulumi.Input

	ToCssConfigurationMapOutput() CssConfigurationMapOutput
	ToCssConfigurationMapOutputWithContext(context.Context) CssConfigurationMapOutput
}

type CssConfigurationMap map[string]CssConfigurationInput

func (CssConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CssConfiguration)(nil)).Elem()
}

func (i CssConfigurationMap) ToCssConfigurationMapOutput() CssConfigurationMapOutput {
	return i.ToCssConfigurationMapOutputWithContext(context.Background())
}

func (i CssConfigurationMap) ToCssConfigurationMapOutputWithContext(ctx context.Context) CssConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CssConfigurationMapOutput)
}

type CssConfigurationOutput struct{ *pulumi.OutputState }

func (CssConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CssConfiguration)(nil)).Elem()
}

func (o CssConfigurationOutput) ToCssConfigurationOutput() CssConfigurationOutput {
	return o
}

func (o CssConfigurationOutput) ToCssConfigurationOutputWithContext(ctx context.Context) CssConfigurationOutput {
	return o
}

// The CSS cluster ID.
//
// Changing this parameter will create a new resource.
func (o CssConfigurationOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Whether to return the Access-Control-Allow-Credentials of
// the header during cross-domain access.
// The value can be **true** or **false**. Default value: **false**.
func (o CssConfigurationOutput) HttpCorsAllowCredetials() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.HttpCorsAllowCredetials }).(pulumi.StringOutput)
}

// Headers allowed for cross-domain access.\
// Including **X-Requested-With**, **Content-Type**, and **Content-Length**.
// Use commas (,) and spaces to separate headers.
func (o CssConfigurationOutput) HttpCorsAllowHeaders() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.HttpCorsAllowHeaders }).(pulumi.StringOutput)
}

// Methods allowed for cross-domain access.\
// Including **OPTIONS**, **HEAD**, **GET**, **POST**, **PUT**, and **DELETE**.
// Use commas (,) and spaces to separate methods.
func (o CssConfigurationOutput) HttpCorsAllowMethods() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.HttpCorsAllowMethods }).(pulumi.StringOutput)
}

// Origin IP address allowed for cross-domain access, for example, **122.122.122.122:9200**.
func (o CssConfigurationOutput) HttpCorsAllowOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.HttpCorsAllowOrigin }).(pulumi.StringOutput)
}

// Whether to allow cross-domain access.\
// The value can be **true** or **false**. Default value: **false**.
func (o CssConfigurationOutput) HttpCorsEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.HttpCorsEnabled }).(pulumi.StringOutput)
}

// Cache duration of the browser. The cache is automatically cleared
// after the time range you specify.
// Unit: s, Default value: **1,728,000**.
func (o CssConfigurationOutput) HttpCorsMaxAge() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.HttpCorsMaxAge }).(pulumi.StringOutput)
}

// Cache size in the query phase. Value range: **1%** to **100%**.\
// Unit: %, Default value: **10%**.
func (o CssConfigurationOutput) IndicesQueriesCacheSize() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.IndicesQueriesCacheSize }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o CssConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Configured for migrating data from the current cluster to
// the target cluster through the reindex API.
// The example value is **122.122.122.122:9200**.
func (o CssConfigurationOutput) ReindexRemoteWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.ReindexRemoteWhitelist }).(pulumi.StringOutput)
}

// Queue size in the force merge thread pool.\
// Default value: **1**.
func (o CssConfigurationOutput) ThreadPoolForceMergeSize() pulumi.StringOutput {
	return o.ApplyT(func(v *CssConfiguration) pulumi.StringOutput { return v.ThreadPoolForceMergeSize }).(pulumi.StringOutput)
}

type CssConfigurationArrayOutput struct{ *pulumi.OutputState }

func (CssConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CssConfiguration)(nil)).Elem()
}

func (o CssConfigurationArrayOutput) ToCssConfigurationArrayOutput() CssConfigurationArrayOutput {
	return o
}

func (o CssConfigurationArrayOutput) ToCssConfigurationArrayOutputWithContext(ctx context.Context) CssConfigurationArrayOutput {
	return o
}

func (o CssConfigurationArrayOutput) Index(i pulumi.IntInput) CssConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CssConfiguration {
		return vs[0].([]*CssConfiguration)[vs[1].(int)]
	}).(CssConfigurationOutput)
}

type CssConfigurationMapOutput struct{ *pulumi.OutputState }

func (CssConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CssConfiguration)(nil)).Elem()
}

func (o CssConfigurationMapOutput) ToCssConfigurationMapOutput() CssConfigurationMapOutput {
	return o
}

func (o CssConfigurationMapOutput) ToCssConfigurationMapOutputWithContext(ctx context.Context) CssConfigurationMapOutput {
	return o
}

func (o CssConfigurationMapOutput) MapIndex(k pulumi.StringInput) CssConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CssConfiguration {
		return vs[0].(map[string]*CssConfiguration)[vs[1].(string)]
	}).(CssConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CssConfigurationInput)(nil)).Elem(), &CssConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssConfigurationArrayInput)(nil)).Elem(), CssConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CssConfigurationMapInput)(nil)).Elem(), CssConfigurationMap{})
	pulumi.RegisterOutputType(CssConfigurationOutput{})
	pulumi.RegisterOutputType(CssConfigurationArrayOutput{})
	pulumi.RegisterOutputType(CssConfigurationMapOutput{})
}
