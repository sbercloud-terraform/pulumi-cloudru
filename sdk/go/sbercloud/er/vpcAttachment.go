// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages a VPC attachment resource under the ER instance within SberCloud.
//
// Before using enterprise router, define custom endpoint as shown below:
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/er"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			attachmentName := cfg.RequireObject("attachmentName")
//			_, err := er.NewVpcAttachment(ctx, "test", &er.VpcAttachmentArgs{
//				InstanceId:          pulumi.Any(instanceId),
//				VpcId:               pulumi.Any(vpcId),
//				SubnetId:            pulumi.Any(subnetId),
//				Name:                pulumi.Any(attachmentName),
//				Description:         pulumi.String("VPC attachment created by terraform"),
//				AutoCreateVpcRoutes: pulumi.Bool(true),
//				Tags: pulumi.StringMap{
//					"foo":   pulumi.String("bar"),
//					"owner": pulumi.String("terraform"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VPC attachments can be imported using their `id` and the related `instance_id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:Er/vpcAttachment:VpcAttachment test <instance_id>/<id>
// ```
type VpcAttachment struct {
	pulumi.CustomResourceState

	// Specifies whether to automatically configure routes for the VPC
	// which pointing to the ER instance.
	// The destination CIDRs of the routes are fixed as follows:
	// + **10.0.0.0/8**
	// + **172.16.0.0/12**
	// + **192.168.0.0/16**
	//
	// The default value is false. Changing this parameter will create a new resource.
	AutoCreateVpcRoutes pulumi.BoolOutput `pulumi:"autoCreateVpcRoutes"`
	// The creation time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the description of the VPC attachment.\
	// The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the ID of the ER instance to which the VPC attachment
	// belongs.
	// Changing this parameter will create a new resource.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the name of the VPC attachment.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region where the ER instance and the VPC attachment are
	// located.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The current status of the VPC attachment.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the ID of the VPC subnet to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the VPC attachment.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The latest update time.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Specifies the ID of the VPC to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcAttachment registers a new resource with the given unique name, arguments, and options.
func NewVpcAttachment(ctx *pulumi.Context,
	name string, args *VpcAttachmentArgs, opts ...pulumi.ResourceOption) (*VpcAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcAttachment
	err := ctx.RegisterResource("sbercloud:Er/vpcAttachment:VpcAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAttachment gets an existing VpcAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAttachmentState, opts ...pulumi.ResourceOption) (*VpcAttachment, error) {
	var resource VpcAttachment
	err := ctx.ReadResource("sbercloud:Er/vpcAttachment:VpcAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAttachment resources.
type vpcAttachmentState struct {
	// Specifies whether to automatically configure routes for the VPC
	// which pointing to the ER instance.
	// The destination CIDRs of the routes are fixed as follows:
	// + **10.0.0.0/8**
	// + **172.16.0.0/12**
	// + **192.168.0.0/16**
	//
	// The default value is false. Changing this parameter will create a new resource.
	AutoCreateVpcRoutes *bool `pulumi:"autoCreateVpcRoutes"`
	// The creation time.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the description of the VPC attachment.\
	// The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
	Description *string `pulumi:"description"`
	// Specifies the ID of the ER instance to which the VPC attachment
	// belongs.
	// Changing this parameter will create a new resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the name of the VPC attachment.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name *string `pulumi:"name"`
	// Specifies the region where the ER instance and the VPC attachment are
	// located.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The current status of the VPC attachment.
	Status *string `pulumi:"status"`
	// Specifies the ID of the VPC subnet to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	SubnetId *string `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the VPC attachment.
	Tags map[string]string `pulumi:"tags"`
	// The latest update time.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Specifies the ID of the VPC to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type VpcAttachmentState struct {
	// Specifies whether to automatically configure routes for the VPC
	// which pointing to the ER instance.
	// The destination CIDRs of the routes are fixed as follows:
	// + **10.0.0.0/8**
	// + **172.16.0.0/12**
	// + **192.168.0.0/16**
	//
	// The default value is false. Changing this parameter will create a new resource.
	AutoCreateVpcRoutes pulumi.BoolPtrInput
	// The creation time.
	CreatedAt pulumi.StringPtrInput
	// Specifies the description of the VPC attachment.\
	// The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
	Description pulumi.StringPtrInput
	// Specifies the ID of the ER instance to which the VPC attachment
	// belongs.
	// Changing this parameter will create a new resource.
	InstanceId pulumi.StringPtrInput
	// Specifies the name of the VPC attachment.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name pulumi.StringPtrInput
	// Specifies the region where the ER instance and the VPC attachment are
	// located.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The current status of the VPC attachment.
	Status pulumi.StringPtrInput
	// Specifies the ID of the VPC subnet to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the VPC attachment.
	Tags pulumi.StringMapInput
	// The latest update time.
	UpdatedAt pulumi.StringPtrInput
	// Specifies the ID of the VPC to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (VpcAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAttachmentState)(nil)).Elem()
}

type vpcAttachmentArgs struct {
	// Specifies whether to automatically configure routes for the VPC
	// which pointing to the ER instance.
	// The destination CIDRs of the routes are fixed as follows:
	// + **10.0.0.0/8**
	// + **172.16.0.0/12**
	// + **192.168.0.0/16**
	//
	// The default value is false. Changing this parameter will create a new resource.
	AutoCreateVpcRoutes *bool `pulumi:"autoCreateVpcRoutes"`
	// Specifies the description of the VPC attachment.\
	// The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
	Description *string `pulumi:"description"`
	// Specifies the ID of the ER instance to which the VPC attachment
	// belongs.
	// Changing this parameter will create a new resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the name of the VPC attachment.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name *string `pulumi:"name"`
	// Specifies the region where the ER instance and the VPC attachment are
	// located.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the ID of the VPC subnet to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	SubnetId string `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the VPC attachment.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the ID of the VPC to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcAttachment resource.
type VpcAttachmentArgs struct {
	// Specifies whether to automatically configure routes for the VPC
	// which pointing to the ER instance.
	// The destination CIDRs of the routes are fixed as follows:
	// + **10.0.0.0/8**
	// + **172.16.0.0/12**
	// + **192.168.0.0/16**
	//
	// The default value is false. Changing this parameter will create a new resource.
	AutoCreateVpcRoutes pulumi.BoolPtrInput
	// Specifies the description of the VPC attachment.\
	// The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
	Description pulumi.StringPtrInput
	// Specifies the ID of the ER instance to which the VPC attachment
	// belongs.
	// Changing this parameter will create a new resource.
	InstanceId pulumi.StringInput
	// Specifies the name of the VPC attachment.\
	// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
	// hyphens (-) and dots (.) allowed.
	Name pulumi.StringPtrInput
	// Specifies the region where the ER instance and the VPC attachment are
	// located.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the ID of the VPC subnet to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringInput
	// Specifies the key/value pairs to associate with the VPC attachment.
	Tags pulumi.StringMapInput
	// Specifies the ID of the VPC to which the VPC attachment belongs.\
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (VpcAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAttachmentArgs)(nil)).Elem()
}

type VpcAttachmentInput interface {
	pulumi.Input

	ToVpcAttachmentOutput() VpcAttachmentOutput
	ToVpcAttachmentOutputWithContext(ctx context.Context) VpcAttachmentOutput
}

func (*VpcAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachment)(nil)).Elem()
}

func (i *VpcAttachment) ToVpcAttachmentOutput() VpcAttachmentOutput {
	return i.ToVpcAttachmentOutputWithContext(context.Background())
}

func (i *VpcAttachment) ToVpcAttachmentOutputWithContext(ctx context.Context) VpcAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentOutput)
}

// VpcAttachmentArrayInput is an input type that accepts VpcAttachmentArray and VpcAttachmentArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentArrayInput` via:
//
//	VpcAttachmentArray{ VpcAttachmentArgs{...} }
type VpcAttachmentArrayInput interface {
	pulumi.Input

	ToVpcAttachmentArrayOutput() VpcAttachmentArrayOutput
	ToVpcAttachmentArrayOutputWithContext(context.Context) VpcAttachmentArrayOutput
}

type VpcAttachmentArray []VpcAttachmentInput

func (VpcAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAttachment)(nil)).Elem()
}

func (i VpcAttachmentArray) ToVpcAttachmentArrayOutput() VpcAttachmentArrayOutput {
	return i.ToVpcAttachmentArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentArray) ToVpcAttachmentArrayOutputWithContext(ctx context.Context) VpcAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentArrayOutput)
}

// VpcAttachmentMapInput is an input type that accepts VpcAttachmentMap and VpcAttachmentMapOutput values.
// You can construct a concrete instance of `VpcAttachmentMapInput` via:
//
//	VpcAttachmentMap{ "key": VpcAttachmentArgs{...} }
type VpcAttachmentMapInput interface {
	pulumi.Input

	ToVpcAttachmentMapOutput() VpcAttachmentMapOutput
	ToVpcAttachmentMapOutputWithContext(context.Context) VpcAttachmentMapOutput
}

type VpcAttachmentMap map[string]VpcAttachmentInput

func (VpcAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAttachment)(nil)).Elem()
}

func (i VpcAttachmentMap) ToVpcAttachmentMapOutput() VpcAttachmentMapOutput {
	return i.ToVpcAttachmentMapOutputWithContext(context.Background())
}

func (i VpcAttachmentMap) ToVpcAttachmentMapOutputWithContext(ctx context.Context) VpcAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentMapOutput)
}

type VpcAttachmentOutput struct{ *pulumi.OutputState }

func (VpcAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachment)(nil)).Elem()
}

func (o VpcAttachmentOutput) ToVpcAttachmentOutput() VpcAttachmentOutput {
	return o
}

func (o VpcAttachmentOutput) ToVpcAttachmentOutputWithContext(ctx context.Context) VpcAttachmentOutput {
	return o
}

// Specifies whether to automatically configure routes for the VPC
// which pointing to the ER instance.
// The destination CIDRs of the routes are fixed as follows:
// + **10.0.0.0/8**
// + **172.16.0.0/12**
// + **192.168.0.0/16**
//
// The default value is false. Changing this parameter will create a new resource.
func (o VpcAttachmentOutput) AutoCreateVpcRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.BoolOutput { return v.AutoCreateVpcRoutes }).(pulumi.BoolOutput)
}

// The creation time.
func (o VpcAttachmentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the description of the VPC attachment.\
// The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
func (o VpcAttachmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the ER instance to which the VPC attachment
// belongs.
// Changing this parameter will create a new resource.
func (o VpcAttachmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the name of the VPC attachment.\
// The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
// hyphens (-) and dots (.) allowed.
func (o VpcAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region where the ER instance and the VPC attachment are
// located.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o VpcAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The current status of the VPC attachment.
func (o VpcAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the ID of the VPC subnet to which the VPC attachment belongs.\
// Changing this parameter will create a new resource.
func (o VpcAttachmentOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the VPC attachment.
func (o VpcAttachmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The latest update time.
func (o VpcAttachmentOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Specifies the ID of the VPC to which the VPC attachment belongs.\
// Changing this parameter will create a new resource.
func (o VpcAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAttachment) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type VpcAttachmentArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAttachment)(nil)).Elem()
}

func (o VpcAttachmentArrayOutput) ToVpcAttachmentArrayOutput() VpcAttachmentArrayOutput {
	return o
}

func (o VpcAttachmentArrayOutput) ToVpcAttachmentArrayOutputWithContext(ctx context.Context) VpcAttachmentArrayOutput {
	return o
}

func (o VpcAttachmentArrayOutput) Index(i pulumi.IntInput) VpcAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcAttachment {
		return vs[0].([]*VpcAttachment)[vs[1].(int)]
	}).(VpcAttachmentOutput)
}

type VpcAttachmentMapOutput struct{ *pulumi.OutputState }

func (VpcAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAttachment)(nil)).Elem()
}

func (o VpcAttachmentMapOutput) ToVpcAttachmentMapOutput() VpcAttachmentMapOutput {
	return o
}

func (o VpcAttachmentMapOutput) ToVpcAttachmentMapOutputWithContext(ctx context.Context) VpcAttachmentMapOutput {
	return o
}

func (o VpcAttachmentMapOutput) MapIndex(k pulumi.StringInput) VpcAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcAttachment {
		return vs[0].(map[string]*VpcAttachment)[vs[1].(string)]
	}).(VpcAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentInput)(nil)).Elem(), &VpcAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentArrayInput)(nil)).Elem(), VpcAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentMapInput)(nil)).Elem(), VpcAttachmentMap{})
	pulumi.RegisterOutputType(VpcAttachmentOutput{})
	pulumi.RegisterOutputType(VpcAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentMapOutput{})
}
