// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dew

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetDataKey(ctx *pulumi.Context, args *GetDataKeyArgs, opts ...pulumi.InvokeOption) (*GetDataKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDataKeyResult
	err := ctx.Invoke("sbercloud:Dew/getDataKey:getDataKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataKey.
type GetDataKeyArgs struct {
	DatakeyLength     string  `pulumi:"datakeyLength"`
	EncryptionContext *string `pulumi:"encryptionContext"`
	KeyId             string  `pulumi:"keyId"`
	Region            *string `pulumi:"region"`
}

// A collection of values returned by getDataKey.
type GetDataKeyResult struct {
	CipherText        string  `pulumi:"cipherText"`
	DatakeyLength     string  `pulumi:"datakeyLength"`
	EncryptionContext *string `pulumi:"encryptionContext"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	KeyId     string `pulumi:"keyId"`
	PlainText string `pulumi:"plainText"`
	Region    string `pulumi:"region"`
}

func GetDataKeyOutput(ctx *pulumi.Context, args GetDataKeyOutputArgs, opts ...pulumi.InvokeOption) GetDataKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDataKeyResultOutput, error) {
			args := v.(GetDataKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Dew/getDataKey:getDataKey", args, GetDataKeyResultOutput{}, options).(GetDataKeyResultOutput), nil
		}).(GetDataKeyResultOutput)
}

// A collection of arguments for invoking getDataKey.
type GetDataKeyOutputArgs struct {
	DatakeyLength     pulumi.StringInput    `pulumi:"datakeyLength"`
	EncryptionContext pulumi.StringPtrInput `pulumi:"encryptionContext"`
	KeyId             pulumi.StringInput    `pulumi:"keyId"`
	Region            pulumi.StringPtrInput `pulumi:"region"`
}

func (GetDataKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataKeyArgs)(nil)).Elem()
}

// A collection of values returned by getDataKey.
type GetDataKeyResultOutput struct{ *pulumi.OutputState }

func (GetDataKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataKeyResult)(nil)).Elem()
}

func (o GetDataKeyResultOutput) ToGetDataKeyResultOutput() GetDataKeyResultOutput {
	return o
}

func (o GetDataKeyResultOutput) ToGetDataKeyResultOutputWithContext(ctx context.Context) GetDataKeyResultOutput {
	return o
}

func (o GetDataKeyResultOutput) CipherText() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeyResult) string { return v.CipherText }).(pulumi.StringOutput)
}

func (o GetDataKeyResultOutput) DatakeyLength() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeyResult) string { return v.DatakeyLength }).(pulumi.StringOutput)
}

func (o GetDataKeyResultOutput) EncryptionContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDataKeyResult) *string { return v.EncryptionContext }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDataKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDataKeyResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeyResult) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o GetDataKeyResultOutput) PlainText() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeyResult) string { return v.PlainText }).(pulumi.StringOutput)
}

func (o GetDataKeyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataKeyResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataKeyResultOutput{})
}
