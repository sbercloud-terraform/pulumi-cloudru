// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func GetPgSqlLimits(ctx *pulumi.Context, args *GetPgSqlLimitsArgs, opts ...pulumi.InvokeOption) (*GetPgSqlLimitsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPgSqlLimitsResult
	err := ctx.Invoke("cloudru:Rds/getPgSqlLimits:getPgSqlLimits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPgSqlLimits.
type GetPgSqlLimitsArgs struct {
	DbName         string  `pulumi:"dbName"`
	InstanceId     string  `pulumi:"instanceId"`
	IsEffective    *string `pulumi:"isEffective"`
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	MaxWaiting     *string `pulumi:"maxWaiting"`
	QueryId        *string `pulumi:"queryId"`
	QueryString    *string `pulumi:"queryString"`
	Region         *string `pulumi:"region"`
	SearchPath     *string `pulumi:"searchPath"`
	SqlLimitId     *string `pulumi:"sqlLimitId"`
}

// A collection of values returned by getPgSqlLimits.
type GetPgSqlLimitsResult struct {
	DbName string `pulumi:"dbName"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                   `pulumi:"id"`
	InstanceId     string                   `pulumi:"instanceId"`
	IsEffective    *string                  `pulumi:"isEffective"`
	MaxConcurrency *string                  `pulumi:"maxConcurrency"`
	MaxWaiting     *string                  `pulumi:"maxWaiting"`
	QueryId        *string                  `pulumi:"queryId"`
	QueryString    *string                  `pulumi:"queryString"`
	Region         string                   `pulumi:"region"`
	SearchPath     *string                  `pulumi:"searchPath"`
	SqlLimitId     *string                  `pulumi:"sqlLimitId"`
	SqlLimits      []GetPgSqlLimitsSqlLimit `pulumi:"sqlLimits"`
}

func GetPgSqlLimitsOutput(ctx *pulumi.Context, args GetPgSqlLimitsOutputArgs, opts ...pulumi.InvokeOption) GetPgSqlLimitsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPgSqlLimitsResultOutput, error) {
			args := v.(GetPgSqlLimitsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("cloudru:Rds/getPgSqlLimits:getPgSqlLimits", args, GetPgSqlLimitsResultOutput{}, options).(GetPgSqlLimitsResultOutput), nil
		}).(GetPgSqlLimitsResultOutput)
}

// A collection of arguments for invoking getPgSqlLimits.
type GetPgSqlLimitsOutputArgs struct {
	DbName         pulumi.StringInput    `pulumi:"dbName"`
	InstanceId     pulumi.StringInput    `pulumi:"instanceId"`
	IsEffective    pulumi.StringPtrInput `pulumi:"isEffective"`
	MaxConcurrency pulumi.StringPtrInput `pulumi:"maxConcurrency"`
	MaxWaiting     pulumi.StringPtrInput `pulumi:"maxWaiting"`
	QueryId        pulumi.StringPtrInput `pulumi:"queryId"`
	QueryString    pulumi.StringPtrInput `pulumi:"queryString"`
	Region         pulumi.StringPtrInput `pulumi:"region"`
	SearchPath     pulumi.StringPtrInput `pulumi:"searchPath"`
	SqlLimitId     pulumi.StringPtrInput `pulumi:"sqlLimitId"`
}

func (GetPgSqlLimitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgSqlLimitsArgs)(nil)).Elem()
}

// A collection of values returned by getPgSqlLimits.
type GetPgSqlLimitsResultOutput struct{ *pulumi.OutputState }

func (GetPgSqlLimitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgSqlLimitsResult)(nil)).Elem()
}

func (o GetPgSqlLimitsResultOutput) ToGetPgSqlLimitsResultOutput() GetPgSqlLimitsResultOutput {
	return o
}

func (o GetPgSqlLimitsResultOutput) ToGetPgSqlLimitsResultOutputWithContext(ctx context.Context) GetPgSqlLimitsResultOutput {
	return o
}

func (o GetPgSqlLimitsResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) string { return v.DbName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPgSqlLimitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPgSqlLimitsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetPgSqlLimitsResultOutput) IsEffective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.IsEffective }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) MaxConcurrency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.MaxConcurrency }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) MaxWaiting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.MaxWaiting }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) QueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.QueryString }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetPgSqlLimitsResultOutput) SearchPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.SearchPath }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) SqlLimitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) *string { return v.SqlLimitId }).(pulumi.StringPtrOutput)
}

func (o GetPgSqlLimitsResultOutput) SqlLimits() GetPgSqlLimitsSqlLimitArrayOutput {
	return o.ApplyT(func(v GetPgSqlLimitsResult) []GetPgSqlLimitsSqlLimit { return v.SqlLimits }).(GetPgSqlLimitsSqlLimitArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPgSqlLimitsResultOutput{})
}
