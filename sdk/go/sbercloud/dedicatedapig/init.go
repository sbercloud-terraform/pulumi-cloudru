// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedapig

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "sbercloud:DedicatedApig/api:Api":
		r = &Api{}
	case "sbercloud:DedicatedApig/apiPublishment:ApiPublishment":
		r = &ApiPublishment{}
	case "sbercloud:DedicatedApig/application:Application":
		r = &Application{}
	case "sbercloud:DedicatedApig/customAuthorizer:CustomAuthorizer":
		r = &CustomAuthorizer{}
	case "sbercloud:DedicatedApig/environment:Environment":
		r = &Environment{}
	case "sbercloud:DedicatedApig/group:Group":
		r = &Group{}
	case "sbercloud:DedicatedApig/instance:Instance":
		r = &Instance{}
	case "sbercloud:DedicatedApig/response:Response":
		r = &Response{}
	case "sbercloud:DedicatedApig/throttlingPolicy:ThrottlingPolicy":
		r = &ThrottlingPolicy{}
	case "sbercloud:DedicatedApig/throttlingPolicyAssociate:ThrottlingPolicyAssociate":
		r = &ThrottlingPolicyAssociate{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/api",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/apiPublishment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/application",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/customAuthorizer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/environment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/group",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/response",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/throttlingPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"sbercloud",
		"DedicatedApig/throttlingPolicyAssociate",
		&module{version},
	)
}
