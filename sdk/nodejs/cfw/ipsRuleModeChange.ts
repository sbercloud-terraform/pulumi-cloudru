// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a CFW IPS rule mode change resource within SberCloud.
 *
 * > This resource is only a one-time action resource for operating the API.
 * Deleting this resource will not clear the corresponding request record,
 * but will only remove the resource information from the tfstate file.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const config = new pulumi.Config();
 * const objectId = config.requireObject<any>("objectId");
 * const ipsIds = config.requireObject<any>("ipsIds");
 * const status = config.requireObject<any>("status");
 * const test = new sbercloud.cfw.IpsRuleModeChange("test", {
 *     objectId: objectId,
 *     ipsIds: ipsIds,
 *     status: status,
 * });
 * ```
 */
export class IpsRuleModeChange extends pulumi.CustomResource {
    /**
     * Get an existing IpsRuleModeChange resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsRuleModeChangeState, opts?: pulumi.CustomResourceOptions): IpsRuleModeChange {
        return new IpsRuleModeChange(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Cfw/ipsRuleModeChange:IpsRuleModeChange';

    /**
     * Returns true if the given object is an instance of IpsRuleModeChange.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpsRuleModeChange {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpsRuleModeChange.__pulumiType;
    }

    /**
     * Specifies the enterprise project ID.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string | undefined>;
    /**
     * Specifies the IPS rule ID list.
     */
    declare public readonly ipsIds: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the protected object ID.
     */
    declare public readonly objectId: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this will create new resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the IPS rule status.
     * The valid value can be **OBSERVE**, **ENABLE**, **CLOSE**, **DEFAULT** or **ALL_DEFAULT**.
     */
    declare public readonly status: pulumi.Output<string>;

    /**
     * Create a IpsRuleModeChange resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpsRuleModeChangeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsRuleModeChangeArgs | IpsRuleModeChangeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsRuleModeChangeState | undefined;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["ipsIds"] = state?.ipsIds;
            resourceInputs["objectId"] = state?.objectId;
            resourceInputs["region"] = state?.region;
            resourceInputs["status"] = state?.status;
        } else {
            const args = argsOrState as IpsRuleModeChangeArgs | undefined;
            if (args?.objectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if (args?.status === undefined && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["ipsIds"] = args?.ipsIds;
            resourceInputs["objectId"] = args?.objectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["status"] = args?.status;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpsRuleModeChange.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpsRuleModeChange resources.
 */
export interface IpsRuleModeChangeState {
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the IPS rule ID list.
     */
    ipsIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the protected object ID.
     */
    objectId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this will create new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the IPS rule status.
     * The valid value can be **OBSERVE**, **ENABLE**, **CLOSE**, **DEFAULT** or **ALL_DEFAULT**.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpsRuleModeChange resource.
 */
export interface IpsRuleModeChangeArgs {
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the IPS rule ID list.
     */
    ipsIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the protected object ID.
     */
    objectId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this will create new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the IPS rule status.
     * The valid value can be **OBSERVE**, **ENABLE**, **CLOSE**, **DEFAULT** or **ALL_DEFAULT**.
     */
    status: pulumi.Input<string>;
}
