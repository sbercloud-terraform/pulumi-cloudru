// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package obs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Use this data source to get all OBS buckets.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/obs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := obs.GetBuckets(ctx, &obs.GetBucketsArgs{
//				Bucket: pulumi.StringRef("your-bucket-name"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBuckets(ctx *pulumi.Context, args *GetBucketsArgs, opts ...pulumi.InvokeOption) (*GetBucketsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBucketsResult
	err := ctx.Invoke("sbercloud:Obs/getBuckets:getBuckets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBuckets.
type GetBucketsArgs struct {
	// The name of the OBS bucket.
	Bucket *string `pulumi:"bucket"`
	// The enterprise project id of the OBS bucket.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The region in which to obtain the OBS bucket.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getBuckets.
type GetBucketsResult struct {
	// The name of the OBS bucket.
	Bucket *string `pulumi:"bucket"`
	// A list of OBS buckets.
	Buckets []GetBucketsBucket `pulumi:"buckets"`
	// The enterprise project id of the OBS bucket.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The region where the OBS bucket belongs.
	Region *string `pulumi:"region"`
}

func GetBucketsOutput(ctx *pulumi.Context, args GetBucketsOutputArgs, opts ...pulumi.InvokeOption) GetBucketsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBucketsResultOutput, error) {
			args := v.(GetBucketsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Obs/getBuckets:getBuckets", args, GetBucketsResultOutput{}, options).(GetBucketsResultOutput), nil
		}).(GetBucketsResultOutput)
}

// A collection of arguments for invoking getBuckets.
type GetBucketsOutputArgs struct {
	// The name of the OBS bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The enterprise project id of the OBS bucket.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// The region in which to obtain the OBS bucket.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetBucketsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsArgs)(nil)).Elem()
}

// A collection of values returned by getBuckets.
type GetBucketsResultOutput struct{ *pulumi.OutputState }

func (GetBucketsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsResult)(nil)).Elem()
}

func (o GetBucketsResultOutput) ToGetBucketsResultOutput() GetBucketsResultOutput {
	return o
}

func (o GetBucketsResultOutput) ToGetBucketsResultOutputWithContext(ctx context.Context) GetBucketsResultOutput {
	return o
}

// The name of the OBS bucket.
func (o GetBucketsResultOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// A list of OBS buckets.
func (o GetBucketsResultOutput) Buckets() GetBucketsBucketArrayOutput {
	return o.ApplyT(func(v GetBucketsResult) []GetBucketsBucket { return v.Buckets }).(GetBucketsBucketArrayOutput)
}

// The enterprise project id of the OBS bucket.
func (o GetBucketsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBucketsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The region where the OBS bucket belongs.
func (o GetBucketsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBucketsResultOutput{})
}
