// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getFirewalls(args?: GetFirewallsArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Cfw/getFirewalls:getFirewalls", {
        "fwInstanceId": args.fwInstanceId,
        "region": args.region,
        "serviceType": args.serviceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewalls.
 */
export interface GetFirewallsArgs {
    fwInstanceId?: string;
    region?: string;
    serviceType?: number;
}

/**
 * A collection of values returned by getFirewalls.
 */
export interface GetFirewallsResult {
    readonly fwInstanceId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly records: outputs.Cfw.GetFirewallsRecord[];
    readonly region: string;
    readonly serviceType?: number;
}
export function getFirewallsOutput(args?: GetFirewallsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFirewallsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Cfw/getFirewalls:getFirewalls", {
        "fwInstanceId": args.fwInstanceId,
        "region": args.region,
        "serviceType": args.serviceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getFirewalls.
 */
export interface GetFirewallsOutputArgs {
    fwInstanceId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceType?: pulumi.Input<number>;
}
