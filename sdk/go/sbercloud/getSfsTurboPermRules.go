// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sbercloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

func GetSfsTurboPermRules(ctx *pulumi.Context, args *GetSfsTurboPermRulesArgs, opts ...pulumi.InvokeOption) (*GetSfsTurboPermRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSfsTurboPermRulesResult
	err := ctx.Invoke("sbercloud:index/getSfsTurboPermRules:getSfsTurboPermRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSfsTurboPermRules.
type GetSfsTurboPermRulesArgs struct {
	Region  *string `pulumi:"region"`
	ShareId string  `pulumi:"shareId"`
}

// A collection of values returned by getSfsTurboPermRules.
type GetSfsTurboPermRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string                     `pulumi:"id"`
	Region  string                     `pulumi:"region"`
	Rules   []GetSfsTurboPermRulesRule `pulumi:"rules"`
	ShareId string                     `pulumi:"shareId"`
}

func GetSfsTurboPermRulesOutput(ctx *pulumi.Context, args GetSfsTurboPermRulesOutputArgs, opts ...pulumi.InvokeOption) GetSfsTurboPermRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSfsTurboPermRulesResultOutput, error) {
			args := v.(GetSfsTurboPermRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:index/getSfsTurboPermRules:getSfsTurboPermRules", args, GetSfsTurboPermRulesResultOutput{}, options).(GetSfsTurboPermRulesResultOutput), nil
		}).(GetSfsTurboPermRulesResultOutput)
}

// A collection of arguments for invoking getSfsTurboPermRules.
type GetSfsTurboPermRulesOutputArgs struct {
	Region  pulumi.StringPtrInput `pulumi:"region"`
	ShareId pulumi.StringInput    `pulumi:"shareId"`
}

func (GetSfsTurboPermRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboPermRulesArgs)(nil)).Elem()
}

// A collection of values returned by getSfsTurboPermRules.
type GetSfsTurboPermRulesResultOutput struct{ *pulumi.OutputState }

func (GetSfsTurboPermRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSfsTurboPermRulesResult)(nil)).Elem()
}

func (o GetSfsTurboPermRulesResultOutput) ToGetSfsTurboPermRulesResultOutput() GetSfsTurboPermRulesResultOutput {
	return o
}

func (o GetSfsTurboPermRulesResultOutput) ToGetSfsTurboPermRulesResultOutputWithContext(ctx context.Context) GetSfsTurboPermRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSfsTurboPermRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSfsTurboPermRulesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetSfsTurboPermRulesResultOutput) Rules() GetSfsTurboPermRulesRuleArrayOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesResult) []GetSfsTurboPermRulesRule { return v.Rules }).(GetSfsTurboPermRulesRuleArrayOutput)
}

func (o GetSfsTurboPermRulesResultOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSfsTurboPermRulesResult) string { return v.ShareId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSfsTurboPermRulesResultOutput{})
}
