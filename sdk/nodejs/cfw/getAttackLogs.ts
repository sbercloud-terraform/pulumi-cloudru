// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getAttackLogs(args: GetAttackLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetAttackLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sbercloud:Cfw/getAttackLogs:getAttackLogs", {
        "app": args.app,
        "attackRule": args.attackRule,
        "attackRuleId": args.attackRuleId,
        "attackType": args.attackType,
        "dstCityName": args.dstCityName,
        "dstIp": args.dstIp,
        "dstPort": args.dstPort,
        "dstProvinceName": args.dstProvinceName,
        "dstRegionName": args.dstRegionName,
        "endTime": args.endTime,
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "level": args.level,
        "logType": args.logType,
        "region": args.region,
        "srcCityName": args.srcCityName,
        "srcIp": args.srcIp,
        "srcPort": args.srcPort,
        "srcProvinceName": args.srcProvinceName,
        "srcRegionName": args.srcRegionName,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttackLogs.
 */
export interface GetAttackLogsArgs {
    app?: string;
    attackRule?: string;
    attackRuleId?: string;
    attackType?: string;
    dstCityName?: string;
    dstIp?: string;
    dstPort?: number;
    dstProvinceName?: string;
    dstRegionName?: string;
    endTime: string;
    enterpriseProjectId?: string;
    fwInstanceId: string;
    level?: string;
    logType?: string;
    region?: string;
    srcCityName?: string;
    srcIp?: string;
    srcPort?: number;
    srcProvinceName?: string;
    srcRegionName?: string;
    startTime: string;
}

/**
 * A collection of values returned by getAttackLogs.
 */
export interface GetAttackLogsResult {
    readonly app?: string;
    readonly attackRule?: string;
    readonly attackRuleId?: string;
    readonly attackType?: string;
    readonly dstCityName?: string;
    readonly dstIp?: string;
    readonly dstPort?: number;
    readonly dstProvinceName?: string;
    readonly dstRegionName?: string;
    readonly endTime: string;
    readonly enterpriseProjectId?: string;
    readonly fwInstanceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly level?: string;
    readonly logType?: string;
    readonly records: outputs.Cfw.GetAttackLogsRecord[];
    readonly region: string;
    readonly srcCityName?: string;
    readonly srcIp?: string;
    readonly srcPort?: number;
    readonly srcProvinceName?: string;
    readonly srcRegionName?: string;
    readonly startTime: string;
}
export function getAttackLogsOutput(args: GetAttackLogsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAttackLogsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sbercloud:Cfw/getAttackLogs:getAttackLogs", {
        "app": args.app,
        "attackRule": args.attackRule,
        "attackRuleId": args.attackRuleId,
        "attackType": args.attackType,
        "dstCityName": args.dstCityName,
        "dstIp": args.dstIp,
        "dstPort": args.dstPort,
        "dstProvinceName": args.dstProvinceName,
        "dstRegionName": args.dstRegionName,
        "endTime": args.endTime,
        "enterpriseProjectId": args.enterpriseProjectId,
        "fwInstanceId": args.fwInstanceId,
        "level": args.level,
        "logType": args.logType,
        "region": args.region,
        "srcCityName": args.srcCityName,
        "srcIp": args.srcIp,
        "srcPort": args.srcPort,
        "srcProvinceName": args.srcProvinceName,
        "srcRegionName": args.srcRegionName,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttackLogs.
 */
export interface GetAttackLogsOutputArgs {
    app?: pulumi.Input<string>;
    attackRule?: pulumi.Input<string>;
    attackRuleId?: pulumi.Input<string>;
    attackType?: pulumi.Input<string>;
    dstCityName?: pulumi.Input<string>;
    dstIp?: pulumi.Input<string>;
    dstPort?: pulumi.Input<number>;
    dstProvinceName?: pulumi.Input<string>;
    dstRegionName?: pulumi.Input<string>;
    endTime: pulumi.Input<string>;
    enterpriseProjectId?: pulumi.Input<string>;
    fwInstanceId: pulumi.Input<string>;
    level?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    srcCityName?: pulumi.Input<string>;
    srcIp?: pulumi.Input<string>;
    srcPort?: pulumi.Input<number>;
    srcProvinceName?: pulumi.Input<string>;
    srcRegionName?: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
