// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApigEnvironmentVariable extends pulumi.CustomResource {
    /**
     * Get an existing ApigEnvironmentVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigEnvironmentVariableState, opts?: pulumi.CustomResourceOptions): ApigEnvironmentVariable {
        return new ApigEnvironmentVariable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:index/apigEnvironmentVariable:ApigEnvironmentVariable';

    /**
     * Returns true if the given object is an instance of ApigEnvironmentVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigEnvironmentVariable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigEnvironmentVariable.__pulumiType;
    }

    /**
     * Specifies the ID of the environment to which the environment variable belongs.
     */
    declare public readonly envId: pulumi.Output<string>;
    /**
     * Specifies the ID of the group to which the environment variable belongs.
     */
    declare public readonly groupId: pulumi.Output<string>;
    /**
     * Specifies the ID of the dedicated instance to which the environment variable belongs.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    /**
     * Specifies the name of the environment variable.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the value of the environment variable.
     */
    declare public readonly value: pulumi.Output<string>;

    /**
     * Create a ApigEnvironmentVariable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigEnvironmentVariableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigEnvironmentVariableArgs | ApigEnvironmentVariableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigEnvironmentVariableState | undefined;
            resourceInputs["envId"] = state?.envId;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["name"] = state?.name;
            resourceInputs["region"] = state?.region;
            resourceInputs["value"] = state?.value;
        } else {
            const args = argsOrState as ApigEnvironmentVariableArgs | undefined;
            if (args?.envId === undefined && !opts.urn) {
                throw new Error("Missing required property 'envId'");
            }
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.value === undefined && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["envId"] = args?.envId;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["name"] = args?.name;
            resourceInputs["region"] = args?.region;
            resourceInputs["value"] = args?.value;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigEnvironmentVariable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApigEnvironmentVariable resources.
 */
export interface ApigEnvironmentVariableState {
    /**
     * Specifies the ID of the environment to which the environment variable belongs.
     */
    envId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the group to which the environment variable belongs.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the dedicated instance to which the environment variable belongs.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the name of the environment variable.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the value of the environment variable.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigEnvironmentVariable resource.
 */
export interface ApigEnvironmentVariableArgs {
    /**
     * Specifies the ID of the environment to which the environment variable belongs.
     */
    envId: pulumi.Input<string>;
    /**
     * Specifies the ID of the group to which the environment variable belongs.
     */
    groupId: pulumi.Input<string>;
    /**
     * Specifies the ID of the dedicated instance to which the environment variable belongs.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the name of the environment variable.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the value of the environment variable.
     */
    value: pulumi.Input<string>;
}
