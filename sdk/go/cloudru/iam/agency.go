// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

// Manages an agency resource within SberCloud.
//
// ## Example Usage
//
// ### Delegate another SberCloud account to perform operations on your resources
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewAgency(ctx, "agency", &iam.AgencyArgs{
//				Name:                pulumi.String("test_agency"),
//				Description:         pulumi.String("test agency"),
//				DelegatedDomainName: pulumi.String("***"),
//				ProjectRoles: iam.AgencyProjectRoleArray{
//					&iam.AgencyProjectRoleArgs{
//						Project: pulumi.String("ru-moscow-1"),
//						Roles: pulumi.StringArray{
//							pulumi.String("Tenant Administrator"),
//						},
//					},
//				},
//				DomainRoles: pulumi.StringArray{
//					pulumi.String("VPC Administrator"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Delegate a cloud service to access your resources in other cloud services
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewAgency(ctx, "agency", &iam.AgencyArgs{
//				Name:                 pulumi.String("test_agency"),
//				Description:          pulumi.String("test agency"),
//				DelegatedServiceName: pulumi.String("op_svc_evs"),
//				ProjectRoles: iam.AgencyProjectRoleArray{
//					&iam.AgencyProjectRoleArgs{
//						Project: pulumi.String("ru-moscow-1"),
//						Roles: pulumi.StringArray{
//							pulumi.String("SFS Administrator"),
//						},
//					},
//				},
//				DomainRoles: pulumi.StringArray{
//					pulumi.String("KMS Administrator"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Agencies can be imported using the `id`, e.g.
//
// ```sh
// $ pulumi import sbercloud:Iam/agency:Agency agency 0b97661f9900f23f4fc2c00971ea4dc0
// ```
type Agency struct {
	pulumi.CustomResourceState

	// Specifies an array of one or more role names which stand for the permissions
	// to be granted to agency on all resources, including those in enterprise projects, region-specific projects,
	// and global services under your account.
	AllResourcesRoles pulumi.StringArrayOutput `pulumi:"allResourcesRoles"`
	// The time when the agency was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Specifies the name of delegated user domain. This parameter
	// and `delegatedServiceName` are alternative.
	DelegatedDomainName pulumi.StringPtrOutput `pulumi:"delegatedDomainName"`
	// Specifies the name of delegated cloud service. The value must start
	// with *op_svc_*, for example, *op_svc_obs*. This parameter and `delegatedDomainName` are alternative.
	DelegatedServiceName pulumi.StringPtrOutput `pulumi:"delegatedServiceName"`
	// Specifies the supplementary information about the agency. The value is a string of
	// 0 to 255 characters, excluding these characters: '__@#$%^&*<>\\__'.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies an array of one or more role names which stand for the permissionis to be
	// granted to agency on domain.
	DomainRoles pulumi.StringArrayOutput `pulumi:"domainRoles"`
	// Specifies the validity period of an agency. The valid value are *ONEDAY* and *FOREVER*
	// , defaults to *FOREVER*.
	Duration pulumi.StringPtrOutput `pulumi:"duration"`
	// The expiration time of agency.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Specifies the name of agency. The name is a string of 1 to 64 characters.
	// Changing this will create a new agency.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies an array of one or more roles and projects which are used to grant
	// permissions to agency on project. The structure is documented below.
	ProjectRoles AgencyProjectRoleArrayOutput `pulumi:"projectRoles"`
}

// NewAgency registers a new resource with the given unique name, arguments, and options.
func NewAgency(ctx *pulumi.Context,
	name string, args *AgencyArgs, opts ...pulumi.ResourceOption) (*Agency, error) {
	if args == nil {
		args = &AgencyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Agency
	err := ctx.RegisterResource("sbercloud:Iam/agency:Agency", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgency gets an existing Agency resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgency(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgencyState, opts ...pulumi.ResourceOption) (*Agency, error) {
	var resource Agency
	err := ctx.ReadResource("sbercloud:Iam/agency:Agency", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agency resources.
type agencyState struct {
	// Specifies an array of one or more role names which stand for the permissions
	// to be granted to agency on all resources, including those in enterprise projects, region-specific projects,
	// and global services under your account.
	AllResourcesRoles []string `pulumi:"allResourcesRoles"`
	// The time when the agency was created.
	CreateTime *string `pulumi:"createTime"`
	// Specifies the name of delegated user domain. This parameter
	// and `delegatedServiceName` are alternative.
	DelegatedDomainName *string `pulumi:"delegatedDomainName"`
	// Specifies the name of delegated cloud service. The value must start
	// with *op_svc_*, for example, *op_svc_obs*. This parameter and `delegatedDomainName` are alternative.
	DelegatedServiceName *string `pulumi:"delegatedServiceName"`
	// Specifies the supplementary information about the agency. The value is a string of
	// 0 to 255 characters, excluding these characters: '__@#$%^&*<>\\__'.
	Description *string `pulumi:"description"`
	// Specifies an array of one or more role names which stand for the permissionis to be
	// granted to agency on domain.
	DomainRoles []string `pulumi:"domainRoles"`
	// Specifies the validity period of an agency. The valid value are *ONEDAY* and *FOREVER*
	// , defaults to *FOREVER*.
	Duration *string `pulumi:"duration"`
	// The expiration time of agency.
	ExpireTime *string `pulumi:"expireTime"`
	// Specifies the name of agency. The name is a string of 1 to 64 characters.
	// Changing this will create a new agency.
	Name *string `pulumi:"name"`
	// Specifies an array of one or more roles and projects which are used to grant
	// permissions to agency on project. The structure is documented below.
	ProjectRoles []AgencyProjectRole `pulumi:"projectRoles"`
}

type AgencyState struct {
	// Specifies an array of one or more role names which stand for the permissions
	// to be granted to agency on all resources, including those in enterprise projects, region-specific projects,
	// and global services under your account.
	AllResourcesRoles pulumi.StringArrayInput
	// The time when the agency was created.
	CreateTime pulumi.StringPtrInput
	// Specifies the name of delegated user domain. This parameter
	// and `delegatedServiceName` are alternative.
	DelegatedDomainName pulumi.StringPtrInput
	// Specifies the name of delegated cloud service. The value must start
	// with *op_svc_*, for example, *op_svc_obs*. This parameter and `delegatedDomainName` are alternative.
	DelegatedServiceName pulumi.StringPtrInput
	// Specifies the supplementary information about the agency. The value is a string of
	// 0 to 255 characters, excluding these characters: '__@#$%^&*<>\\__'.
	Description pulumi.StringPtrInput
	// Specifies an array of one or more role names which stand for the permissionis to be
	// granted to agency on domain.
	DomainRoles pulumi.StringArrayInput
	// Specifies the validity period of an agency. The valid value are *ONEDAY* and *FOREVER*
	// , defaults to *FOREVER*.
	Duration pulumi.StringPtrInput
	// The expiration time of agency.
	ExpireTime pulumi.StringPtrInput
	// Specifies the name of agency. The name is a string of 1 to 64 characters.
	// Changing this will create a new agency.
	Name pulumi.StringPtrInput
	// Specifies an array of one or more roles and projects which are used to grant
	// permissions to agency on project. The structure is documented below.
	ProjectRoles AgencyProjectRoleArrayInput
}

func (AgencyState) ElementType() reflect.Type {
	return reflect.TypeOf((*agencyState)(nil)).Elem()
}

type agencyArgs struct {
	// Specifies an array of one or more role names which stand for the permissions
	// to be granted to agency on all resources, including those in enterprise projects, region-specific projects,
	// and global services under your account.
	AllResourcesRoles []string `pulumi:"allResourcesRoles"`
	// Specifies the name of delegated user domain. This parameter
	// and `delegatedServiceName` are alternative.
	DelegatedDomainName *string `pulumi:"delegatedDomainName"`
	// Specifies the name of delegated cloud service. The value must start
	// with *op_svc_*, for example, *op_svc_obs*. This parameter and `delegatedDomainName` are alternative.
	DelegatedServiceName *string `pulumi:"delegatedServiceName"`
	// Specifies the supplementary information about the agency. The value is a string of
	// 0 to 255 characters, excluding these characters: '__@#$%^&*<>\\__'.
	Description *string `pulumi:"description"`
	// Specifies an array of one or more role names which stand for the permissionis to be
	// granted to agency on domain.
	DomainRoles []string `pulumi:"domainRoles"`
	// Specifies the validity period of an agency. The valid value are *ONEDAY* and *FOREVER*
	// , defaults to *FOREVER*.
	Duration *string `pulumi:"duration"`
	// Specifies the name of agency. The name is a string of 1 to 64 characters.
	// Changing this will create a new agency.
	Name *string `pulumi:"name"`
	// Specifies an array of one or more roles and projects which are used to grant
	// permissions to agency on project. The structure is documented below.
	ProjectRoles []AgencyProjectRole `pulumi:"projectRoles"`
}

// The set of arguments for constructing a Agency resource.
type AgencyArgs struct {
	// Specifies an array of one or more role names which stand for the permissions
	// to be granted to agency on all resources, including those in enterprise projects, region-specific projects,
	// and global services under your account.
	AllResourcesRoles pulumi.StringArrayInput
	// Specifies the name of delegated user domain. This parameter
	// and `delegatedServiceName` are alternative.
	DelegatedDomainName pulumi.StringPtrInput
	// Specifies the name of delegated cloud service. The value must start
	// with *op_svc_*, for example, *op_svc_obs*. This parameter and `delegatedDomainName` are alternative.
	DelegatedServiceName pulumi.StringPtrInput
	// Specifies the supplementary information about the agency. The value is a string of
	// 0 to 255 characters, excluding these characters: '__@#$%^&*<>\\__'.
	Description pulumi.StringPtrInput
	// Specifies an array of one or more role names which stand for the permissionis to be
	// granted to agency on domain.
	DomainRoles pulumi.StringArrayInput
	// Specifies the validity period of an agency. The valid value are *ONEDAY* and *FOREVER*
	// , defaults to *FOREVER*.
	Duration pulumi.StringPtrInput
	// Specifies the name of agency. The name is a string of 1 to 64 characters.
	// Changing this will create a new agency.
	Name pulumi.StringPtrInput
	// Specifies an array of one or more roles and projects which are used to grant
	// permissions to agency on project. The structure is documented below.
	ProjectRoles AgencyProjectRoleArrayInput
}

func (AgencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agencyArgs)(nil)).Elem()
}

type AgencyInput interface {
	pulumi.Input

	ToAgencyOutput() AgencyOutput
	ToAgencyOutputWithContext(ctx context.Context) AgencyOutput
}

func (*Agency) ElementType() reflect.Type {
	return reflect.TypeOf((**Agency)(nil)).Elem()
}

func (i *Agency) ToAgencyOutput() AgencyOutput {
	return i.ToAgencyOutputWithContext(context.Background())
}

func (i *Agency) ToAgencyOutputWithContext(ctx context.Context) AgencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgencyOutput)
}

// AgencyArrayInput is an input type that accepts AgencyArray and AgencyArrayOutput values.
// You can construct a concrete instance of `AgencyArrayInput` via:
//
//	AgencyArray{ AgencyArgs{...} }
type AgencyArrayInput interface {
	pulumi.Input

	ToAgencyArrayOutput() AgencyArrayOutput
	ToAgencyArrayOutputWithContext(context.Context) AgencyArrayOutput
}

type AgencyArray []AgencyInput

func (AgencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Agency)(nil)).Elem()
}

func (i AgencyArray) ToAgencyArrayOutput() AgencyArrayOutput {
	return i.ToAgencyArrayOutputWithContext(context.Background())
}

func (i AgencyArray) ToAgencyArrayOutputWithContext(ctx context.Context) AgencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgencyArrayOutput)
}

// AgencyMapInput is an input type that accepts AgencyMap and AgencyMapOutput values.
// You can construct a concrete instance of `AgencyMapInput` via:
//
//	AgencyMap{ "key": AgencyArgs{...} }
type AgencyMapInput interface {
	pulumi.Input

	ToAgencyMapOutput() AgencyMapOutput
	ToAgencyMapOutputWithContext(context.Context) AgencyMapOutput
}

type AgencyMap map[string]AgencyInput

func (AgencyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Agency)(nil)).Elem()
}

func (i AgencyMap) ToAgencyMapOutput() AgencyMapOutput {
	return i.ToAgencyMapOutputWithContext(context.Background())
}

func (i AgencyMap) ToAgencyMapOutputWithContext(ctx context.Context) AgencyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgencyMapOutput)
}

type AgencyOutput struct{ *pulumi.OutputState }

func (AgencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Agency)(nil)).Elem()
}

func (o AgencyOutput) ToAgencyOutput() AgencyOutput {
	return o
}

func (o AgencyOutput) ToAgencyOutputWithContext(ctx context.Context) AgencyOutput {
	return o
}

// Specifies an array of one or more role names which stand for the permissions
// to be granted to agency on all resources, including those in enterprise projects, region-specific projects,
// and global services under your account.
func (o AgencyOutput) AllResourcesRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringArrayOutput { return v.AllResourcesRoles }).(pulumi.StringArrayOutput)
}

// The time when the agency was created.
func (o AgencyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Specifies the name of delegated user domain. This parameter
// and `delegatedServiceName` are alternative.
func (o AgencyOutput) DelegatedDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringPtrOutput { return v.DelegatedDomainName }).(pulumi.StringPtrOutput)
}

// Specifies the name of delegated cloud service. The value must start
// with *op_svc_*, for example, *op_svc_obs*. This parameter and `delegatedDomainName` are alternative.
func (o AgencyOutput) DelegatedServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringPtrOutput { return v.DelegatedServiceName }).(pulumi.StringPtrOutput)
}

// Specifies the supplementary information about the agency. The value is a string of
// 0 to 255 characters, excluding these characters: '__@#$%^&*<>\\__'.
func (o AgencyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies an array of one or more role names which stand for the permissionis to be
// granted to agency on domain.
func (o AgencyOutput) DomainRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringArrayOutput { return v.DomainRoles }).(pulumi.StringArrayOutput)
}

// Specifies the validity period of an agency. The valid value are *ONEDAY* and *FOREVER*
// , defaults to *FOREVER*.
func (o AgencyOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringPtrOutput { return v.Duration }).(pulumi.StringPtrOutput)
}

// The expiration time of agency.
func (o AgencyOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Specifies the name of agency. The name is a string of 1 to 64 characters.
// Changing this will create a new agency.
func (o AgencyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Agency) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies an array of one or more roles and projects which are used to grant
// permissions to agency on project. The structure is documented below.
func (o AgencyOutput) ProjectRoles() AgencyProjectRoleArrayOutput {
	return o.ApplyT(func(v *Agency) AgencyProjectRoleArrayOutput { return v.ProjectRoles }).(AgencyProjectRoleArrayOutput)
}

type AgencyArrayOutput struct{ *pulumi.OutputState }

func (AgencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Agency)(nil)).Elem()
}

func (o AgencyArrayOutput) ToAgencyArrayOutput() AgencyArrayOutput {
	return o
}

func (o AgencyArrayOutput) ToAgencyArrayOutputWithContext(ctx context.Context) AgencyArrayOutput {
	return o
}

func (o AgencyArrayOutput) Index(i pulumi.IntInput) AgencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Agency {
		return vs[0].([]*Agency)[vs[1].(int)]
	}).(AgencyOutput)
}

type AgencyMapOutput struct{ *pulumi.OutputState }

func (AgencyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Agency)(nil)).Elem()
}

func (o AgencyMapOutput) ToAgencyMapOutput() AgencyMapOutput {
	return o
}

func (o AgencyMapOutput) ToAgencyMapOutputWithContext(ctx context.Context) AgencyMapOutput {
	return o
}

func (o AgencyMapOutput) MapIndex(k pulumi.StringInput) AgencyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Agency {
		return vs[0].(map[string]*Agency)[vs[1].(string)]
	}).(AgencyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgencyInput)(nil)).Elem(), &Agency{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgencyArrayInput)(nil)).Elem(), AgencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgencyMapInput)(nil)).Elem(), AgencyMap{})
	pulumi.RegisterOutputType(AgencyOutput{})
	pulumi.RegisterOutputType(AgencyArrayOutput{})
	pulumi.RegisterOutputType(AgencyMapOutput{})
}
