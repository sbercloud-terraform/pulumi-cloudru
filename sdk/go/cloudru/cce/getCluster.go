// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("sbercloud:Cce/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	ClusterType *string `pulumi:"clusterType"`
	Id          *string `pulumi:"id"`
	Name        *string `pulumi:"name"`
	Region      *string `pulumi:"region"`
	Status      *string `pulumi:"status"`
	VpcId       *string `pulumi:"vpcId"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	AuthenticationMode   string                         `pulumi:"authenticationMode"`
	BillingMode          int                            `pulumi:"billingMode"`
	CertificateClusters  []GetClusterCertificateCluster `pulumi:"certificateClusters"`
	CertificateUsers     []GetClusterCertificateUser    `pulumi:"certificateUsers"`
	ClusterType          string                         `pulumi:"clusterType"`
	ClusterVersion       string                         `pulumi:"clusterVersion"`
	ContainerNetworkCidr string                         `pulumi:"containerNetworkCidr"`
	ContainerNetworkType string                         `pulumi:"containerNetworkType"`
	Description          string                         `pulumi:"description"`
	Endpoints            []GetClusterEndpoint           `pulumi:"endpoints"`
	EniSubnetCidr        string                         `pulumi:"eniSubnetCidr"`
	EniSubnetId          string                         `pulumi:"eniSubnetId"`
	EnterpriseProjectId  string                         `pulumi:"enterpriseProjectId"`
	FlavorId             string                         `pulumi:"flavorId"`
	HighwaySubnetId      string                         `pulumi:"highwaySubnetId"`
	Id                   string                         `pulumi:"id"`
	KubeConfigRaw        string                         `pulumi:"kubeConfigRaw"`
	Masters              []GetClusterMaster             `pulumi:"masters"`
	Name                 string                         `pulumi:"name"`
	Region               string                         `pulumi:"region"`
	SecurityGroupId      string                         `pulumi:"securityGroupId"`
	ServiceNetworkCidr   string                         `pulumi:"serviceNetworkCidr"`
	Status               string                         `pulumi:"status"`
	SubnetId             string                         `pulumi:"subnetId"`
	VpcId                string                         `pulumi:"vpcId"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupClusterResultOutput, error) {
			args := v.(LookupClusterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Cce/getCluster:getCluster", args, LookupClusterResultOutput{}, options).(LookupClusterResultOutput), nil
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	ClusterType pulumi.StringPtrInput `pulumi:"clusterType"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Region      pulumi.StringPtrInput `pulumi:"region"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
	VpcId       pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) AuthenticationMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.AuthenticationMode }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) BillingMode() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.BillingMode }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) CertificateClusters() GetClusterCertificateClusterArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterCertificateCluster { return v.CertificateClusters }).(GetClusterCertificateClusterArrayOutput)
}

func (o LookupClusterResultOutput) CertificateUsers() GetClusterCertificateUserArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterCertificateUser { return v.CertificateUsers }).(GetClusterCertificateUserArrayOutput)
}

func (o LookupClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ContainerNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ContainerNetworkCidr }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ContainerNetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ContainerNetworkType }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Endpoints() GetClusterEndpointArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterEndpoint { return v.Endpoints }).(GetClusterEndpointArrayOutput)
}

func (o LookupClusterResultOutput) EniSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.EniSubnetCidr }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) EniSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.EniSubnetId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) HighwaySubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.HighwaySubnetId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) KubeConfigRaw() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.KubeConfigRaw }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Masters() GetClusterMasterArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []GetClusterMaster { return v.Masters }).(GetClusterMasterArrayOutput)
}

func (o LookupClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) ServiceNetworkCidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.ServiceNetworkCidr }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
