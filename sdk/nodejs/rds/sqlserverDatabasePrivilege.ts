// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class SqlserverDatabasePrivilege extends pulumi.CustomResource {
    /**
     * Get an existing SqlserverDatabasePrivilege resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlserverDatabasePrivilegeState, opts?: pulumi.CustomResourceOptions): SqlserverDatabasePrivilege {
        return new SqlserverDatabasePrivilege(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:Rds/sqlserverDatabasePrivilege:SqlserverDatabasePrivilege';

    /**
     * Returns true if the given object is an instance of SqlserverDatabasePrivilege.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlserverDatabasePrivilege {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlserverDatabasePrivilege.__pulumiType;
    }

    /**
     * Specifies the database name.
     */
    declare public readonly dbName: pulumi.Output<string>;
    /**
     * Specifies the ID of the RDS SQL Server instance.
     */
    declare public readonly instanceId: pulumi.Output<string>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the account that associated with the database
     */
    declare public readonly users: pulumi.Output<outputs.Rds.SqlserverDatabasePrivilegeUser[]>;

    /**
     * Create a SqlserverDatabasePrivilege resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlserverDatabasePrivilegeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SqlserverDatabasePrivilegeArgs | SqlserverDatabasePrivilegeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SqlserverDatabasePrivilegeState | undefined;
            resourceInputs["dbName"] = state?.dbName;
            resourceInputs["instanceId"] = state?.instanceId;
            resourceInputs["region"] = state?.region;
            resourceInputs["users"] = state?.users;
        } else {
            const args = argsOrState as SqlserverDatabasePrivilegeArgs | undefined;
            if (args?.dbName === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbName'");
            }
            if (args?.instanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if (args?.users === undefined && !opts.urn) {
                throw new Error("Missing required property 'users'");
            }
            resourceInputs["dbName"] = args?.dbName;
            resourceInputs["instanceId"] = args?.instanceId;
            resourceInputs["region"] = args?.region;
            resourceInputs["users"] = args?.users;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SqlserverDatabasePrivilege.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SqlserverDatabasePrivilege resources.
 */
export interface SqlserverDatabasePrivilegeState {
    /**
     * Specifies the database name.
     */
    dbName?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS SQL Server instance.
     */
    instanceId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Specifies the account that associated with the database
     */
    users?: pulumi.Input<pulumi.Input<inputs.Rds.SqlserverDatabasePrivilegeUser>[]>;
}

/**
 * The set of arguments for constructing a SqlserverDatabasePrivilege resource.
 */
export interface SqlserverDatabasePrivilegeArgs {
    /**
     * Specifies the database name.
     */
    dbName: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS SQL Server instance.
     */
    instanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Specifies the account that associated with the database
     */
    users: pulumi.Input<pulumi.Input<inputs.Rds.SqlserverDatabasePrivilegeUser>[]>;
}
