// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

var _ = internal.GetEnvOrDefault

type BandwidthPolicyIntervalAlarmAction struct {
	// Specifies the operation restrictions.
	Limits *int `pulumi:"limits"`
	// Specifies the lower limit of the value range.
	LowerBound *string `pulumi:"lowerBound"`
	// Specifies the operation to be performed.
	Operation *string `pulumi:"operation"`
	// Specifies the operation size.
	Size *int `pulumi:"size"`
	// Specifies the upper limit of the value range.
	UpperBound *string `pulumi:"upperBound"`
}

// BandwidthPolicyIntervalAlarmActionInput is an input type that accepts BandwidthPolicyIntervalAlarmActionArgs and BandwidthPolicyIntervalAlarmActionOutput values.
// You can construct a concrete instance of `BandwidthPolicyIntervalAlarmActionInput` via:
//
//	BandwidthPolicyIntervalAlarmActionArgs{...}
type BandwidthPolicyIntervalAlarmActionInput interface {
	pulumi.Input

	ToBandwidthPolicyIntervalAlarmActionOutput() BandwidthPolicyIntervalAlarmActionOutput
	ToBandwidthPolicyIntervalAlarmActionOutputWithContext(context.Context) BandwidthPolicyIntervalAlarmActionOutput
}

type BandwidthPolicyIntervalAlarmActionArgs struct {
	// Specifies the operation restrictions.
	Limits pulumi.IntPtrInput `pulumi:"limits"`
	// Specifies the lower limit of the value range.
	LowerBound pulumi.StringPtrInput `pulumi:"lowerBound"`
	// Specifies the operation to be performed.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// Specifies the operation size.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// Specifies the upper limit of the value range.
	UpperBound pulumi.StringPtrInput `pulumi:"upperBound"`
}

func (BandwidthPolicyIntervalAlarmActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyIntervalAlarmAction)(nil)).Elem()
}

func (i BandwidthPolicyIntervalAlarmActionArgs) ToBandwidthPolicyIntervalAlarmActionOutput() BandwidthPolicyIntervalAlarmActionOutput {
	return i.ToBandwidthPolicyIntervalAlarmActionOutputWithContext(context.Background())
}

func (i BandwidthPolicyIntervalAlarmActionArgs) ToBandwidthPolicyIntervalAlarmActionOutputWithContext(ctx context.Context) BandwidthPolicyIntervalAlarmActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyIntervalAlarmActionOutput)
}

// BandwidthPolicyIntervalAlarmActionArrayInput is an input type that accepts BandwidthPolicyIntervalAlarmActionArray and BandwidthPolicyIntervalAlarmActionArrayOutput values.
// You can construct a concrete instance of `BandwidthPolicyIntervalAlarmActionArrayInput` via:
//
//	BandwidthPolicyIntervalAlarmActionArray{ BandwidthPolicyIntervalAlarmActionArgs{...} }
type BandwidthPolicyIntervalAlarmActionArrayInput interface {
	pulumi.Input

	ToBandwidthPolicyIntervalAlarmActionArrayOutput() BandwidthPolicyIntervalAlarmActionArrayOutput
	ToBandwidthPolicyIntervalAlarmActionArrayOutputWithContext(context.Context) BandwidthPolicyIntervalAlarmActionArrayOutput
}

type BandwidthPolicyIntervalAlarmActionArray []BandwidthPolicyIntervalAlarmActionInput

func (BandwidthPolicyIntervalAlarmActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPolicyIntervalAlarmAction)(nil)).Elem()
}

func (i BandwidthPolicyIntervalAlarmActionArray) ToBandwidthPolicyIntervalAlarmActionArrayOutput() BandwidthPolicyIntervalAlarmActionArrayOutput {
	return i.ToBandwidthPolicyIntervalAlarmActionArrayOutputWithContext(context.Background())
}

func (i BandwidthPolicyIntervalAlarmActionArray) ToBandwidthPolicyIntervalAlarmActionArrayOutputWithContext(ctx context.Context) BandwidthPolicyIntervalAlarmActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyIntervalAlarmActionArrayOutput)
}

type BandwidthPolicyIntervalAlarmActionOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyIntervalAlarmActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyIntervalAlarmAction)(nil)).Elem()
}

func (o BandwidthPolicyIntervalAlarmActionOutput) ToBandwidthPolicyIntervalAlarmActionOutput() BandwidthPolicyIntervalAlarmActionOutput {
	return o
}

func (o BandwidthPolicyIntervalAlarmActionOutput) ToBandwidthPolicyIntervalAlarmActionOutputWithContext(ctx context.Context) BandwidthPolicyIntervalAlarmActionOutput {
	return o
}

// Specifies the operation restrictions.
func (o BandwidthPolicyIntervalAlarmActionOutput) Limits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyIntervalAlarmAction) *int { return v.Limits }).(pulumi.IntPtrOutput)
}

// Specifies the lower limit of the value range.
func (o BandwidthPolicyIntervalAlarmActionOutput) LowerBound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyIntervalAlarmAction) *string { return v.LowerBound }).(pulumi.StringPtrOutput)
}

// Specifies the operation to be performed.
func (o BandwidthPolicyIntervalAlarmActionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyIntervalAlarmAction) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// Specifies the operation size.
func (o BandwidthPolicyIntervalAlarmActionOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyIntervalAlarmAction) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// Specifies the upper limit of the value range.
func (o BandwidthPolicyIntervalAlarmActionOutput) UpperBound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyIntervalAlarmAction) *string { return v.UpperBound }).(pulumi.StringPtrOutput)
}

type BandwidthPolicyIntervalAlarmActionArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyIntervalAlarmActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPolicyIntervalAlarmAction)(nil)).Elem()
}

func (o BandwidthPolicyIntervalAlarmActionArrayOutput) ToBandwidthPolicyIntervalAlarmActionArrayOutput() BandwidthPolicyIntervalAlarmActionArrayOutput {
	return o
}

func (o BandwidthPolicyIntervalAlarmActionArrayOutput) ToBandwidthPolicyIntervalAlarmActionArrayOutputWithContext(ctx context.Context) BandwidthPolicyIntervalAlarmActionArrayOutput {
	return o
}

func (o BandwidthPolicyIntervalAlarmActionArrayOutput) Index(i pulumi.IntInput) BandwidthPolicyIntervalAlarmActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPolicyIntervalAlarmAction {
		return vs[0].([]BandwidthPolicyIntervalAlarmAction)[vs[1].(int)]
	}).(BandwidthPolicyIntervalAlarmActionOutput)
}

type BandwidthPolicyMetaData struct {
	// The bandwidth sharing type in the bandwidth policy.
	MetadataBandwidthShareType *string `pulumi:"metadataBandwidthShareType"`
	// The EIP IP address for the bandwidth in the bandwidth policy.
	MetadataEipAddress *string `pulumi:"metadataEipAddress"`
	// The EIP ID for the bandwidth in the bandwidth policy.
	MetadataEipId *string `pulumi:"metadataEipId"`
}

// BandwidthPolicyMetaDataInput is an input type that accepts BandwidthPolicyMetaDataArgs and BandwidthPolicyMetaDataOutput values.
// You can construct a concrete instance of `BandwidthPolicyMetaDataInput` via:
//
//	BandwidthPolicyMetaDataArgs{...}
type BandwidthPolicyMetaDataInput interface {
	pulumi.Input

	ToBandwidthPolicyMetaDataOutput() BandwidthPolicyMetaDataOutput
	ToBandwidthPolicyMetaDataOutputWithContext(context.Context) BandwidthPolicyMetaDataOutput
}

type BandwidthPolicyMetaDataArgs struct {
	// The bandwidth sharing type in the bandwidth policy.
	MetadataBandwidthShareType pulumi.StringPtrInput `pulumi:"metadataBandwidthShareType"`
	// The EIP IP address for the bandwidth in the bandwidth policy.
	MetadataEipAddress pulumi.StringPtrInput `pulumi:"metadataEipAddress"`
	// The EIP ID for the bandwidth in the bandwidth policy.
	MetadataEipId pulumi.StringPtrInput `pulumi:"metadataEipId"`
}

func (BandwidthPolicyMetaDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyMetaData)(nil)).Elem()
}

func (i BandwidthPolicyMetaDataArgs) ToBandwidthPolicyMetaDataOutput() BandwidthPolicyMetaDataOutput {
	return i.ToBandwidthPolicyMetaDataOutputWithContext(context.Background())
}

func (i BandwidthPolicyMetaDataArgs) ToBandwidthPolicyMetaDataOutputWithContext(ctx context.Context) BandwidthPolicyMetaDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyMetaDataOutput)
}

// BandwidthPolicyMetaDataArrayInput is an input type that accepts BandwidthPolicyMetaDataArray and BandwidthPolicyMetaDataArrayOutput values.
// You can construct a concrete instance of `BandwidthPolicyMetaDataArrayInput` via:
//
//	BandwidthPolicyMetaDataArray{ BandwidthPolicyMetaDataArgs{...} }
type BandwidthPolicyMetaDataArrayInput interface {
	pulumi.Input

	ToBandwidthPolicyMetaDataArrayOutput() BandwidthPolicyMetaDataArrayOutput
	ToBandwidthPolicyMetaDataArrayOutputWithContext(context.Context) BandwidthPolicyMetaDataArrayOutput
}

type BandwidthPolicyMetaDataArray []BandwidthPolicyMetaDataInput

func (BandwidthPolicyMetaDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPolicyMetaData)(nil)).Elem()
}

func (i BandwidthPolicyMetaDataArray) ToBandwidthPolicyMetaDataArrayOutput() BandwidthPolicyMetaDataArrayOutput {
	return i.ToBandwidthPolicyMetaDataArrayOutputWithContext(context.Background())
}

func (i BandwidthPolicyMetaDataArray) ToBandwidthPolicyMetaDataArrayOutputWithContext(ctx context.Context) BandwidthPolicyMetaDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyMetaDataArrayOutput)
}

type BandwidthPolicyMetaDataOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyMetaDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyMetaData)(nil)).Elem()
}

func (o BandwidthPolicyMetaDataOutput) ToBandwidthPolicyMetaDataOutput() BandwidthPolicyMetaDataOutput {
	return o
}

func (o BandwidthPolicyMetaDataOutput) ToBandwidthPolicyMetaDataOutputWithContext(ctx context.Context) BandwidthPolicyMetaDataOutput {
	return o
}

// The bandwidth sharing type in the bandwidth policy.
func (o BandwidthPolicyMetaDataOutput) MetadataBandwidthShareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyMetaData) *string { return v.MetadataBandwidthShareType }).(pulumi.StringPtrOutput)
}

// The EIP IP address for the bandwidth in the bandwidth policy.
func (o BandwidthPolicyMetaDataOutput) MetadataEipAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyMetaData) *string { return v.MetadataEipAddress }).(pulumi.StringPtrOutput)
}

// The EIP ID for the bandwidth in the bandwidth policy.
func (o BandwidthPolicyMetaDataOutput) MetadataEipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyMetaData) *string { return v.MetadataEipId }).(pulumi.StringPtrOutput)
}

type BandwidthPolicyMetaDataArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyMetaDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPolicyMetaData)(nil)).Elem()
}

func (o BandwidthPolicyMetaDataArrayOutput) ToBandwidthPolicyMetaDataArrayOutput() BandwidthPolicyMetaDataArrayOutput {
	return o
}

func (o BandwidthPolicyMetaDataArrayOutput) ToBandwidthPolicyMetaDataArrayOutputWithContext(ctx context.Context) BandwidthPolicyMetaDataArrayOutput {
	return o
}

func (o BandwidthPolicyMetaDataArrayOutput) Index(i pulumi.IntInput) BandwidthPolicyMetaDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPolicyMetaData {
		return vs[0].([]BandwidthPolicyMetaData)[vs[1].(int)]
	}).(BandwidthPolicyMetaDataOutput)
}

type BandwidthPolicyScalingPolicyAction struct {
	// Specifies the operation restrictions.
	Limits *int `pulumi:"limits"`
	// Specifies the operation to be performed. The default operation is ADD.
	Operation *string `pulumi:"operation"`
	// Specifies the bandwidth (Mbit/s).
	Size *int `pulumi:"size"`
}

// BandwidthPolicyScalingPolicyActionInput is an input type that accepts BandwidthPolicyScalingPolicyActionArgs and BandwidthPolicyScalingPolicyActionOutput values.
// You can construct a concrete instance of `BandwidthPolicyScalingPolicyActionInput` via:
//
//	BandwidthPolicyScalingPolicyActionArgs{...}
type BandwidthPolicyScalingPolicyActionInput interface {
	pulumi.Input

	ToBandwidthPolicyScalingPolicyActionOutput() BandwidthPolicyScalingPolicyActionOutput
	ToBandwidthPolicyScalingPolicyActionOutputWithContext(context.Context) BandwidthPolicyScalingPolicyActionOutput
}

type BandwidthPolicyScalingPolicyActionArgs struct {
	// Specifies the operation restrictions.
	Limits pulumi.IntPtrInput `pulumi:"limits"`
	// Specifies the operation to be performed. The default operation is ADD.
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// Specifies the bandwidth (Mbit/s).
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (BandwidthPolicyScalingPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (i BandwidthPolicyScalingPolicyActionArgs) ToBandwidthPolicyScalingPolicyActionOutput() BandwidthPolicyScalingPolicyActionOutput {
	return i.ToBandwidthPolicyScalingPolicyActionOutputWithContext(context.Background())
}

func (i BandwidthPolicyScalingPolicyActionArgs) ToBandwidthPolicyScalingPolicyActionOutputWithContext(ctx context.Context) BandwidthPolicyScalingPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyScalingPolicyActionOutput)
}

func (i BandwidthPolicyScalingPolicyActionArgs) ToBandwidthPolicyScalingPolicyActionPtrOutput() BandwidthPolicyScalingPolicyActionPtrOutput {
	return i.ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i BandwidthPolicyScalingPolicyActionArgs) ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) BandwidthPolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyScalingPolicyActionOutput).ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx)
}

// BandwidthPolicyScalingPolicyActionPtrInput is an input type that accepts BandwidthPolicyScalingPolicyActionArgs, BandwidthPolicyScalingPolicyActionPtr and BandwidthPolicyScalingPolicyActionPtrOutput values.
// You can construct a concrete instance of `BandwidthPolicyScalingPolicyActionPtrInput` via:
//
//	        BandwidthPolicyScalingPolicyActionArgs{...}
//
//	or:
//
//	        nil
type BandwidthPolicyScalingPolicyActionPtrInput interface {
	pulumi.Input

	ToBandwidthPolicyScalingPolicyActionPtrOutput() BandwidthPolicyScalingPolicyActionPtrOutput
	ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Context) BandwidthPolicyScalingPolicyActionPtrOutput
}

type bandwidthPolicyScalingPolicyActionPtrType BandwidthPolicyScalingPolicyActionArgs

func BandwidthPolicyScalingPolicyActionPtr(v *BandwidthPolicyScalingPolicyActionArgs) BandwidthPolicyScalingPolicyActionPtrInput {
	return (*bandwidthPolicyScalingPolicyActionPtrType)(v)
}

func (*bandwidthPolicyScalingPolicyActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (i *bandwidthPolicyScalingPolicyActionPtrType) ToBandwidthPolicyScalingPolicyActionPtrOutput() BandwidthPolicyScalingPolicyActionPtrOutput {
	return i.ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i *bandwidthPolicyScalingPolicyActionPtrType) ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) BandwidthPolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyScalingPolicyActionPtrOutput)
}

type BandwidthPolicyScalingPolicyActionOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyScalingPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (o BandwidthPolicyScalingPolicyActionOutput) ToBandwidthPolicyScalingPolicyActionOutput() BandwidthPolicyScalingPolicyActionOutput {
	return o
}

func (o BandwidthPolicyScalingPolicyActionOutput) ToBandwidthPolicyScalingPolicyActionOutputWithContext(ctx context.Context) BandwidthPolicyScalingPolicyActionOutput {
	return o
}

func (o BandwidthPolicyScalingPolicyActionOutput) ToBandwidthPolicyScalingPolicyActionPtrOutput() BandwidthPolicyScalingPolicyActionPtrOutput {
	return o.ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (o BandwidthPolicyScalingPolicyActionOutput) ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) BandwidthPolicyScalingPolicyActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BandwidthPolicyScalingPolicyAction) *BandwidthPolicyScalingPolicyAction {
		return &v
	}).(BandwidthPolicyScalingPolicyActionPtrOutput)
}

// Specifies the operation restrictions.
func (o BandwidthPolicyScalingPolicyActionOutput) Limits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScalingPolicyAction) *int { return v.Limits }).(pulumi.IntPtrOutput)
}

// Specifies the operation to be performed. The default operation is ADD.
func (o BandwidthPolicyScalingPolicyActionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScalingPolicyAction) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// Specifies the bandwidth (Mbit/s).
func (o BandwidthPolicyScalingPolicyActionOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScalingPolicyAction) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type BandwidthPolicyScalingPolicyActionPtrOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyScalingPolicyActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPolicyScalingPolicyAction)(nil)).Elem()
}

func (o BandwidthPolicyScalingPolicyActionPtrOutput) ToBandwidthPolicyScalingPolicyActionPtrOutput() BandwidthPolicyScalingPolicyActionPtrOutput {
	return o
}

func (o BandwidthPolicyScalingPolicyActionPtrOutput) ToBandwidthPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) BandwidthPolicyScalingPolicyActionPtrOutput {
	return o
}

func (o BandwidthPolicyScalingPolicyActionPtrOutput) Elem() BandwidthPolicyScalingPolicyActionOutput {
	return o.ApplyT(func(v *BandwidthPolicyScalingPolicyAction) BandwidthPolicyScalingPolicyAction {
		if v != nil {
			return *v
		}
		var ret BandwidthPolicyScalingPolicyAction
		return ret
	}).(BandwidthPolicyScalingPolicyActionOutput)
}

// Specifies the operation restrictions.
func (o BandwidthPolicyScalingPolicyActionPtrOutput) Limits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.IntPtrOutput)
}

// Specifies the operation to be performed. The default operation is ADD.
func (o BandwidthPolicyScalingPolicyActionPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScalingPolicyAction) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

// Specifies the bandwidth (Mbit/s).
func (o BandwidthPolicyScalingPolicyActionPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type BandwidthPolicyScheduledPolicy struct {
	// Specifies the end time of the scaling action triggered periodically.
	EndTime *string `pulumi:"endTime"`
	// Specifies the time when the scaling action is triggered. The time format complies with UTC.
	LaunchTime string `pulumi:"launchTime"`
	// Specifies the periodic triggering type.
	RecurrenceType *string `pulumi:"recurrenceType"`
	// Specifies the day when a periodic scaling action is triggered.
	RecurrenceValue *string `pulumi:"recurrenceValue"`
	// Specifies the start time of the scaling action triggered periodically.
	StartTime *string `pulumi:"startTime"`
}

// BandwidthPolicyScheduledPolicyInput is an input type that accepts BandwidthPolicyScheduledPolicyArgs and BandwidthPolicyScheduledPolicyOutput values.
// You can construct a concrete instance of `BandwidthPolicyScheduledPolicyInput` via:
//
//	BandwidthPolicyScheduledPolicyArgs{...}
type BandwidthPolicyScheduledPolicyInput interface {
	pulumi.Input

	ToBandwidthPolicyScheduledPolicyOutput() BandwidthPolicyScheduledPolicyOutput
	ToBandwidthPolicyScheduledPolicyOutputWithContext(context.Context) BandwidthPolicyScheduledPolicyOutput
}

type BandwidthPolicyScheduledPolicyArgs struct {
	// Specifies the end time of the scaling action triggered periodically.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Specifies the time when the scaling action is triggered. The time format complies with UTC.
	LaunchTime pulumi.StringInput `pulumi:"launchTime"`
	// Specifies the periodic triggering type.
	RecurrenceType pulumi.StringPtrInput `pulumi:"recurrenceType"`
	// Specifies the day when a periodic scaling action is triggered.
	RecurrenceValue pulumi.StringPtrInput `pulumi:"recurrenceValue"`
	// Specifies the start time of the scaling action triggered periodically.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BandwidthPolicyScheduledPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (i BandwidthPolicyScheduledPolicyArgs) ToBandwidthPolicyScheduledPolicyOutput() BandwidthPolicyScheduledPolicyOutput {
	return i.ToBandwidthPolicyScheduledPolicyOutputWithContext(context.Background())
}

func (i BandwidthPolicyScheduledPolicyArgs) ToBandwidthPolicyScheduledPolicyOutputWithContext(ctx context.Context) BandwidthPolicyScheduledPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyScheduledPolicyOutput)
}

func (i BandwidthPolicyScheduledPolicyArgs) ToBandwidthPolicyScheduledPolicyPtrOutput() BandwidthPolicyScheduledPolicyPtrOutput {
	return i.ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i BandwidthPolicyScheduledPolicyArgs) ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) BandwidthPolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyScheduledPolicyOutput).ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx)
}

// BandwidthPolicyScheduledPolicyPtrInput is an input type that accepts BandwidthPolicyScheduledPolicyArgs, BandwidthPolicyScheduledPolicyPtr and BandwidthPolicyScheduledPolicyPtrOutput values.
// You can construct a concrete instance of `BandwidthPolicyScheduledPolicyPtrInput` via:
//
//	        BandwidthPolicyScheduledPolicyArgs{...}
//
//	or:
//
//	        nil
type BandwidthPolicyScheduledPolicyPtrInput interface {
	pulumi.Input

	ToBandwidthPolicyScheduledPolicyPtrOutput() BandwidthPolicyScheduledPolicyPtrOutput
	ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Context) BandwidthPolicyScheduledPolicyPtrOutput
}

type bandwidthPolicyScheduledPolicyPtrType BandwidthPolicyScheduledPolicyArgs

func BandwidthPolicyScheduledPolicyPtr(v *BandwidthPolicyScheduledPolicyArgs) BandwidthPolicyScheduledPolicyPtrInput {
	return (*bandwidthPolicyScheduledPolicyPtrType)(v)
}

func (*bandwidthPolicyScheduledPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (i *bandwidthPolicyScheduledPolicyPtrType) ToBandwidthPolicyScheduledPolicyPtrOutput() BandwidthPolicyScheduledPolicyPtrOutput {
	return i.ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i *bandwidthPolicyScheduledPolicyPtrType) ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) BandwidthPolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPolicyScheduledPolicyPtrOutput)
}

type BandwidthPolicyScheduledPolicyOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyScheduledPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (o BandwidthPolicyScheduledPolicyOutput) ToBandwidthPolicyScheduledPolicyOutput() BandwidthPolicyScheduledPolicyOutput {
	return o
}

func (o BandwidthPolicyScheduledPolicyOutput) ToBandwidthPolicyScheduledPolicyOutputWithContext(ctx context.Context) BandwidthPolicyScheduledPolicyOutput {
	return o
}

func (o BandwidthPolicyScheduledPolicyOutput) ToBandwidthPolicyScheduledPolicyPtrOutput() BandwidthPolicyScheduledPolicyPtrOutput {
	return o.ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (o BandwidthPolicyScheduledPolicyOutput) ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) BandwidthPolicyScheduledPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BandwidthPolicyScheduledPolicy) *BandwidthPolicyScheduledPolicy {
		return &v
	}).(BandwidthPolicyScheduledPolicyPtrOutput)
}

// Specifies the end time of the scaling action triggered periodically.
func (o BandwidthPolicyScheduledPolicyOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScheduledPolicy) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Specifies the time when the scaling action is triggered. The time format complies with UTC.
func (o BandwidthPolicyScheduledPolicyOutput) LaunchTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPolicyScheduledPolicy) string { return v.LaunchTime }).(pulumi.StringOutput)
}

// Specifies the periodic triggering type.
func (o BandwidthPolicyScheduledPolicyOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScheduledPolicy) *string { return v.RecurrenceType }).(pulumi.StringPtrOutput)
}

// Specifies the day when a periodic scaling action is triggered.
func (o BandwidthPolicyScheduledPolicyOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScheduledPolicy) *string { return v.RecurrenceValue }).(pulumi.StringPtrOutput)
}

// Specifies the start time of the scaling action triggered periodically.
func (o BandwidthPolicyScheduledPolicyOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPolicyScheduledPolicy) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type BandwidthPolicyScheduledPolicyPtrOutput struct{ *pulumi.OutputState }

func (BandwidthPolicyScheduledPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPolicyScheduledPolicy)(nil)).Elem()
}

func (o BandwidthPolicyScheduledPolicyPtrOutput) ToBandwidthPolicyScheduledPolicyPtrOutput() BandwidthPolicyScheduledPolicyPtrOutput {
	return o
}

func (o BandwidthPolicyScheduledPolicyPtrOutput) ToBandwidthPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) BandwidthPolicyScheduledPolicyPtrOutput {
	return o
}

func (o BandwidthPolicyScheduledPolicyPtrOutput) Elem() BandwidthPolicyScheduledPolicyOutput {
	return o.ApplyT(func(v *BandwidthPolicyScheduledPolicy) BandwidthPolicyScheduledPolicy {
		if v != nil {
			return *v
		}
		var ret BandwidthPolicyScheduledPolicy
		return ret
	}).(BandwidthPolicyScheduledPolicyOutput)
}

// Specifies the end time of the scaling action triggered periodically.
func (o BandwidthPolicyScheduledPolicyPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Specifies the time when the scaling action is triggered. The time format complies with UTC.
func (o BandwidthPolicyScheduledPolicyPtrOutput) LaunchTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.LaunchTime
	}).(pulumi.StringPtrOutput)
}

// Specifies the periodic triggering type.
func (o BandwidthPolicyScheduledPolicyPtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

// Specifies the day when a periodic scaling action is triggered.
func (o BandwidthPolicyScheduledPolicyPtrOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceValue
	}).(pulumi.StringPtrOutput)
}

// Specifies the start time of the scaling action triggered periodically.
func (o BandwidthPolicyScheduledPolicyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ConfigurationInstanceConfig struct {
	AdminPass            *string                                  `pulumi:"adminPass"`
	ChargingMode         *string                                  `pulumi:"chargingMode"`
	DedicatedHostId      *string                                  `pulumi:"dedicatedHostId"`
	Disks                []ConfigurationInstanceConfigDisk        `pulumi:"disks"`
	EcsGroupId           *string                                  `pulumi:"ecsGroupId"`
	Flavor               *string                                  `pulumi:"flavor"`
	FlavorPriorityPolicy *string                                  `pulumi:"flavorPriorityPolicy"`
	Image                *string                                  `pulumi:"image"`
	InstanceId           *string                                  `pulumi:"instanceId"`
	KeyFingerprint       *string                                  `pulumi:"keyFingerprint"`
	KeyName              *string                                  `pulumi:"keyName"`
	Metadata             map[string]string                        `pulumi:"metadata"`
	Personalities        []ConfigurationInstanceConfigPersonality `pulumi:"personalities"`
	PublicIp             *ConfigurationInstanceConfigPublicIp     `pulumi:"publicIp"`
	// schema: Required
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Tenancy          *string  `pulumi:"tenancy"`
	UserData         *string  `pulumi:"userData"`
}

// ConfigurationInstanceConfigInput is an input type that accepts ConfigurationInstanceConfigArgs and ConfigurationInstanceConfigOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigInput` via:
//
//	ConfigurationInstanceConfigArgs{...}
type ConfigurationInstanceConfigInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigOutput() ConfigurationInstanceConfigOutput
	ToConfigurationInstanceConfigOutputWithContext(context.Context) ConfigurationInstanceConfigOutput
}

type ConfigurationInstanceConfigArgs struct {
	AdminPass            pulumi.StringPtrInput                            `pulumi:"adminPass"`
	ChargingMode         pulumi.StringPtrInput                            `pulumi:"chargingMode"`
	DedicatedHostId      pulumi.StringPtrInput                            `pulumi:"dedicatedHostId"`
	Disks                ConfigurationInstanceConfigDiskArrayInput        `pulumi:"disks"`
	EcsGroupId           pulumi.StringPtrInput                            `pulumi:"ecsGroupId"`
	Flavor               pulumi.StringPtrInput                            `pulumi:"flavor"`
	FlavorPriorityPolicy pulumi.StringPtrInput                            `pulumi:"flavorPriorityPolicy"`
	Image                pulumi.StringPtrInput                            `pulumi:"image"`
	InstanceId           pulumi.StringPtrInput                            `pulumi:"instanceId"`
	KeyFingerprint       pulumi.StringPtrInput                            `pulumi:"keyFingerprint"`
	KeyName              pulumi.StringPtrInput                            `pulumi:"keyName"`
	Metadata             pulumi.StringMapInput                            `pulumi:"metadata"`
	Personalities        ConfigurationInstanceConfigPersonalityArrayInput `pulumi:"personalities"`
	PublicIp             ConfigurationInstanceConfigPublicIpPtrInput      `pulumi:"publicIp"`
	// schema: Required
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Tenancy          pulumi.StringPtrInput   `pulumi:"tenancy"`
	UserData         pulumi.StringPtrInput   `pulumi:"userData"`
}

func (ConfigurationInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfig)(nil)).Elem()
}

func (i ConfigurationInstanceConfigArgs) ToConfigurationInstanceConfigOutput() ConfigurationInstanceConfigOutput {
	return i.ToConfigurationInstanceConfigOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigArgs) ToConfigurationInstanceConfigOutputWithContext(ctx context.Context) ConfigurationInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigOutput)
}

func (i ConfigurationInstanceConfigArgs) ToConfigurationInstanceConfigPtrOutput() ConfigurationInstanceConfigPtrOutput {
	return i.ToConfigurationInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigArgs) ToConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigOutput).ToConfigurationInstanceConfigPtrOutputWithContext(ctx)
}

// ConfigurationInstanceConfigPtrInput is an input type that accepts ConfigurationInstanceConfigArgs, ConfigurationInstanceConfigPtr and ConfigurationInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPtrInput` via:
//
//	        ConfigurationInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ConfigurationInstanceConfigPtrInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPtrOutput() ConfigurationInstanceConfigPtrOutput
	ToConfigurationInstanceConfigPtrOutputWithContext(context.Context) ConfigurationInstanceConfigPtrOutput
}

type configurationInstanceConfigPtrType ConfigurationInstanceConfigArgs

func ConfigurationInstanceConfigPtr(v *ConfigurationInstanceConfigArgs) ConfigurationInstanceConfigPtrInput {
	return (*configurationInstanceConfigPtrType)(v)
}

func (*configurationInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfig)(nil)).Elem()
}

func (i *configurationInstanceConfigPtrType) ToConfigurationInstanceConfigPtrOutput() ConfigurationInstanceConfigPtrOutput {
	return i.ToConfigurationInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *configurationInstanceConfigPtrType) ToConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPtrOutput)
}

type ConfigurationInstanceConfigOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfig)(nil)).Elem()
}

func (o ConfigurationInstanceConfigOutput) ToConfigurationInstanceConfigOutput() ConfigurationInstanceConfigOutput {
	return o
}

func (o ConfigurationInstanceConfigOutput) ToConfigurationInstanceConfigOutputWithContext(ctx context.Context) ConfigurationInstanceConfigOutput {
	return o
}

func (o ConfigurationInstanceConfigOutput) ToConfigurationInstanceConfigPtrOutput() ConfigurationInstanceConfigPtrOutput {
	return o.ToConfigurationInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ConfigurationInstanceConfigOutput) ToConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationInstanceConfig) *ConfigurationInstanceConfig {
		return &v
	}).(ConfigurationInstanceConfigPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) AdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.AdminPass }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.DedicatedHostId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) Disks() ConfigurationInstanceConfigDiskArrayOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) []ConfigurationInstanceConfigDisk { return v.Disks }).(ConfigurationInstanceConfigDiskArrayOutput)
}

func (o ConfigurationInstanceConfigOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.EcsGroupId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.Flavor }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) FlavorPriorityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.FlavorPriorityPolicy }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) KeyFingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.KeyFingerprint }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o ConfigurationInstanceConfigOutput) Personalities() ConfigurationInstanceConfigPersonalityArrayOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) []ConfigurationInstanceConfigPersonality { return v.Personalities }).(ConfigurationInstanceConfigPersonalityArrayOutput)
}

func (o ConfigurationInstanceConfigOutput) PublicIp() ConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *ConfigurationInstanceConfigPublicIp { return v.PublicIp }).(ConfigurationInstanceConfigPublicIpPtrOutput)
}

// schema: Required
func (o ConfigurationInstanceConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ConfigurationInstanceConfigOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfig) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ConfigurationInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfig)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPtrOutput) ToConfigurationInstanceConfigPtrOutput() ConfigurationInstanceConfigPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPtrOutput) ToConfigurationInstanceConfigPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPtrOutput) Elem() ConfigurationInstanceConfigOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) ConfigurationInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ConfigurationInstanceConfig
		return ret
	}).(ConfigurationInstanceConfigOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) AdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdminPass
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) DedicatedHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.DedicatedHostId
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) Disks() ConfigurationInstanceConfigDiskArrayOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) []ConfigurationInstanceConfigDisk {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(ConfigurationInstanceConfigDiskArrayOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) EcsGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.EcsGroupId
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) Flavor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Flavor
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) FlavorPriorityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.FlavorPriorityPolicy
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) KeyFingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyFingerprint
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyName
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) Personalities() ConfigurationInstanceConfigPersonalityArrayOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) []ConfigurationInstanceConfigPersonality {
		if v == nil {
			return nil
		}
		return v.Personalities
	}).(ConfigurationInstanceConfigPersonalityArrayOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) PublicIp() ConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *ConfigurationInstanceConfigPublicIp {
		if v == nil {
			return nil
		}
		return v.PublicIp
	}).(ConfigurationInstanceConfigPublicIpPtrOutput)
}

// schema: Required
func (o ConfigurationInstanceConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type ConfigurationInstanceConfigDisk struct {
	DataDiskImageId    *string `pulumi:"dataDiskImageId"`
	DedicatedStorageId *string `pulumi:"dedicatedStorageId"`
	DiskType           string  `pulumi:"diskType"`
	Iops               *int    `pulumi:"iops"`
	KmsId              *string `pulumi:"kmsId"`
	Size               int     `pulumi:"size"`
	SnapshotId         *string `pulumi:"snapshotId"`
	Throughput         *int    `pulumi:"throughput"`
	VolumeType         string  `pulumi:"volumeType"`
}

// ConfigurationInstanceConfigDiskInput is an input type that accepts ConfigurationInstanceConfigDiskArgs and ConfigurationInstanceConfigDiskOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigDiskInput` via:
//
//	ConfigurationInstanceConfigDiskArgs{...}
type ConfigurationInstanceConfigDiskInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigDiskOutput() ConfigurationInstanceConfigDiskOutput
	ToConfigurationInstanceConfigDiskOutputWithContext(context.Context) ConfigurationInstanceConfigDiskOutput
}

type ConfigurationInstanceConfigDiskArgs struct {
	DataDiskImageId    pulumi.StringPtrInput `pulumi:"dataDiskImageId"`
	DedicatedStorageId pulumi.StringPtrInput `pulumi:"dedicatedStorageId"`
	DiskType           pulumi.StringInput    `pulumi:"diskType"`
	Iops               pulumi.IntPtrInput    `pulumi:"iops"`
	KmsId              pulumi.StringPtrInput `pulumi:"kmsId"`
	Size               pulumi.IntInput       `pulumi:"size"`
	SnapshotId         pulumi.StringPtrInput `pulumi:"snapshotId"`
	Throughput         pulumi.IntPtrInput    `pulumi:"throughput"`
	VolumeType         pulumi.StringInput    `pulumi:"volumeType"`
}

func (ConfigurationInstanceConfigDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (i ConfigurationInstanceConfigDiskArgs) ToConfigurationInstanceConfigDiskOutput() ConfigurationInstanceConfigDiskOutput {
	return i.ToConfigurationInstanceConfigDiskOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigDiskArgs) ToConfigurationInstanceConfigDiskOutputWithContext(ctx context.Context) ConfigurationInstanceConfigDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigDiskOutput)
}

// ConfigurationInstanceConfigDiskArrayInput is an input type that accepts ConfigurationInstanceConfigDiskArray and ConfigurationInstanceConfigDiskArrayOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigDiskArrayInput` via:
//
//	ConfigurationInstanceConfigDiskArray{ ConfigurationInstanceConfigDiskArgs{...} }
type ConfigurationInstanceConfigDiskArrayInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigDiskArrayOutput() ConfigurationInstanceConfigDiskArrayOutput
	ToConfigurationInstanceConfigDiskArrayOutputWithContext(context.Context) ConfigurationInstanceConfigDiskArrayOutput
}

type ConfigurationInstanceConfigDiskArray []ConfigurationInstanceConfigDiskInput

func (ConfigurationInstanceConfigDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (i ConfigurationInstanceConfigDiskArray) ToConfigurationInstanceConfigDiskArrayOutput() ConfigurationInstanceConfigDiskArrayOutput {
	return i.ToConfigurationInstanceConfigDiskArrayOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigDiskArray) ToConfigurationInstanceConfigDiskArrayOutputWithContext(ctx context.Context) ConfigurationInstanceConfigDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigDiskArrayOutput)
}

type ConfigurationInstanceConfigDiskOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (o ConfigurationInstanceConfigDiskOutput) ToConfigurationInstanceConfigDiskOutput() ConfigurationInstanceConfigDiskOutput {
	return o
}

func (o ConfigurationInstanceConfigDiskOutput) ToConfigurationInstanceConfigDiskOutputWithContext(ctx context.Context) ConfigurationInstanceConfigDiskOutput {
	return o
}

func (o ConfigurationInstanceConfigDiskOutput) DataDiskImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) *string { return v.DataDiskImageId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) DedicatedStorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) *string { return v.DedicatedStorageId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) KmsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) *string { return v.KmsId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) int { return v.Size }).(pulumi.IntOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o ConfigurationInstanceConfigDiskOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigDisk) string { return v.VolumeType }).(pulumi.StringOutput)
}

type ConfigurationInstanceConfigDiskArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationInstanceConfigDisk)(nil)).Elem()
}

func (o ConfigurationInstanceConfigDiskArrayOutput) ToConfigurationInstanceConfigDiskArrayOutput() ConfigurationInstanceConfigDiskArrayOutput {
	return o
}

func (o ConfigurationInstanceConfigDiskArrayOutput) ToConfigurationInstanceConfigDiskArrayOutputWithContext(ctx context.Context) ConfigurationInstanceConfigDiskArrayOutput {
	return o
}

func (o ConfigurationInstanceConfigDiskArrayOutput) Index(i pulumi.IntInput) ConfigurationInstanceConfigDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationInstanceConfigDisk {
		return vs[0].([]ConfigurationInstanceConfigDisk)[vs[1].(int)]
	}).(ConfigurationInstanceConfigDiskOutput)
}

type ConfigurationInstanceConfigPersonality struct {
	Content string `pulumi:"content"`
	Path    string `pulumi:"path"`
}

// ConfigurationInstanceConfigPersonalityInput is an input type that accepts ConfigurationInstanceConfigPersonalityArgs and ConfigurationInstanceConfigPersonalityOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPersonalityInput` via:
//
//	ConfigurationInstanceConfigPersonalityArgs{...}
type ConfigurationInstanceConfigPersonalityInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPersonalityOutput() ConfigurationInstanceConfigPersonalityOutput
	ToConfigurationInstanceConfigPersonalityOutputWithContext(context.Context) ConfigurationInstanceConfigPersonalityOutput
}

type ConfigurationInstanceConfigPersonalityArgs struct {
	Content pulumi.StringInput `pulumi:"content"`
	Path    pulumi.StringInput `pulumi:"path"`
}

func (ConfigurationInstanceConfigPersonalityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (i ConfigurationInstanceConfigPersonalityArgs) ToConfigurationInstanceConfigPersonalityOutput() ConfigurationInstanceConfigPersonalityOutput {
	return i.ToConfigurationInstanceConfigPersonalityOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPersonalityArgs) ToConfigurationInstanceConfigPersonalityOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPersonalityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPersonalityOutput)
}

// ConfigurationInstanceConfigPersonalityArrayInput is an input type that accepts ConfigurationInstanceConfigPersonalityArray and ConfigurationInstanceConfigPersonalityArrayOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPersonalityArrayInput` via:
//
//	ConfigurationInstanceConfigPersonalityArray{ ConfigurationInstanceConfigPersonalityArgs{...} }
type ConfigurationInstanceConfigPersonalityArrayInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPersonalityArrayOutput() ConfigurationInstanceConfigPersonalityArrayOutput
	ToConfigurationInstanceConfigPersonalityArrayOutputWithContext(context.Context) ConfigurationInstanceConfigPersonalityArrayOutput
}

type ConfigurationInstanceConfigPersonalityArray []ConfigurationInstanceConfigPersonalityInput

func (ConfigurationInstanceConfigPersonalityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (i ConfigurationInstanceConfigPersonalityArray) ToConfigurationInstanceConfigPersonalityArrayOutput() ConfigurationInstanceConfigPersonalityArrayOutput {
	return i.ToConfigurationInstanceConfigPersonalityArrayOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPersonalityArray) ToConfigurationInstanceConfigPersonalityArrayOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPersonalityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPersonalityArrayOutput)
}

type ConfigurationInstanceConfigPersonalityOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPersonalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPersonalityOutput) ToConfigurationInstanceConfigPersonalityOutput() ConfigurationInstanceConfigPersonalityOutput {
	return o
}

func (o ConfigurationInstanceConfigPersonalityOutput) ToConfigurationInstanceConfigPersonalityOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPersonalityOutput {
	return o
}

func (o ConfigurationInstanceConfigPersonalityOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPersonality) string { return v.Content }).(pulumi.StringOutput)
}

func (o ConfigurationInstanceConfigPersonalityOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPersonality) string { return v.Path }).(pulumi.StringOutput)
}

type ConfigurationInstanceConfigPersonalityArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPersonalityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationInstanceConfigPersonality)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPersonalityArrayOutput) ToConfigurationInstanceConfigPersonalityArrayOutput() ConfigurationInstanceConfigPersonalityArrayOutput {
	return o
}

func (o ConfigurationInstanceConfigPersonalityArrayOutput) ToConfigurationInstanceConfigPersonalityArrayOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPersonalityArrayOutput {
	return o
}

func (o ConfigurationInstanceConfigPersonalityArrayOutput) Index(i pulumi.IntInput) ConfigurationInstanceConfigPersonalityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationInstanceConfigPersonality {
		return vs[0].([]ConfigurationInstanceConfigPersonality)[vs[1].(int)]
	}).(ConfigurationInstanceConfigPersonalityOutput)
}

type ConfigurationInstanceConfigPublicIp struct {
	Eip ConfigurationInstanceConfigPublicIpEip `pulumi:"eip"`
}

// ConfigurationInstanceConfigPublicIpInput is an input type that accepts ConfigurationInstanceConfigPublicIpArgs and ConfigurationInstanceConfigPublicIpOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPublicIpInput` via:
//
//	ConfigurationInstanceConfigPublicIpArgs{...}
type ConfigurationInstanceConfigPublicIpInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPublicIpOutput() ConfigurationInstanceConfigPublicIpOutput
	ToConfigurationInstanceConfigPublicIpOutputWithContext(context.Context) ConfigurationInstanceConfigPublicIpOutput
}

type ConfigurationInstanceConfigPublicIpArgs struct {
	Eip ConfigurationInstanceConfigPublicIpEipInput `pulumi:"eip"`
}

func (ConfigurationInstanceConfigPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (i ConfigurationInstanceConfigPublicIpArgs) ToConfigurationInstanceConfigPublicIpOutput() ConfigurationInstanceConfigPublicIpOutput {
	return i.ToConfigurationInstanceConfigPublicIpOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPublicIpArgs) ToConfigurationInstanceConfigPublicIpOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpOutput)
}

func (i ConfigurationInstanceConfigPublicIpArgs) ToConfigurationInstanceConfigPublicIpPtrOutput() ConfigurationInstanceConfigPublicIpPtrOutput {
	return i.ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPublicIpArgs) ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpOutput).ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx)
}

// ConfigurationInstanceConfigPublicIpPtrInput is an input type that accepts ConfigurationInstanceConfigPublicIpArgs, ConfigurationInstanceConfigPublicIpPtr and ConfigurationInstanceConfigPublicIpPtrOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPublicIpPtrInput` via:
//
//	        ConfigurationInstanceConfigPublicIpArgs{...}
//
//	or:
//
//	        nil
type ConfigurationInstanceConfigPublicIpPtrInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPublicIpPtrOutput() ConfigurationInstanceConfigPublicIpPtrOutput
	ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Context) ConfigurationInstanceConfigPublicIpPtrOutput
}

type configurationInstanceConfigPublicIpPtrType ConfigurationInstanceConfigPublicIpArgs

func ConfigurationInstanceConfigPublicIpPtr(v *ConfigurationInstanceConfigPublicIpArgs) ConfigurationInstanceConfigPublicIpPtrInput {
	return (*configurationInstanceConfigPublicIpPtrType)(v)
}

func (*configurationInstanceConfigPublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (i *configurationInstanceConfigPublicIpPtrType) ToConfigurationInstanceConfigPublicIpPtrOutput() ConfigurationInstanceConfigPublicIpPtrOutput {
	return i.ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Background())
}

func (i *configurationInstanceConfigPublicIpPtrType) ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpPtrOutput)
}

type ConfigurationInstanceConfigPublicIpOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPublicIpOutput) ToConfigurationInstanceConfigPublicIpOutput() ConfigurationInstanceConfigPublicIpOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpOutput) ToConfigurationInstanceConfigPublicIpOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpOutput) ToConfigurationInstanceConfigPublicIpPtrOutput() ConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(context.Background())
}

func (o ConfigurationInstanceConfigPublicIpOutput) ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationInstanceConfigPublicIp) *ConfigurationInstanceConfigPublicIp {
		return &v
	}).(ConfigurationInstanceConfigPublicIpPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpOutput) Eip() ConfigurationInstanceConfigPublicIpEipOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIp) ConfigurationInstanceConfigPublicIpEip { return v.Eip }).(ConfigurationInstanceConfigPublicIpEipOutput)
}

type ConfigurationInstanceConfigPublicIpPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfigPublicIp)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPublicIpPtrOutput) ToConfigurationInstanceConfigPublicIpPtrOutput() ConfigurationInstanceConfigPublicIpPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpPtrOutput) ToConfigurationInstanceConfigPublicIpPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpPtrOutput) Elem() ConfigurationInstanceConfigPublicIpOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIp) ConfigurationInstanceConfigPublicIp {
		if v != nil {
			return *v
		}
		var ret ConfigurationInstanceConfigPublicIp
		return ret
	}).(ConfigurationInstanceConfigPublicIpOutput)
}

func (o ConfigurationInstanceConfigPublicIpPtrOutput) Eip() ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIp) *ConfigurationInstanceConfigPublicIpEip {
		if v == nil {
			return nil
		}
		return &v.Eip
	}).(ConfigurationInstanceConfigPublicIpEipPtrOutput)
}

type ConfigurationInstanceConfigPublicIpEip struct {
	Bandwidth ConfigurationInstanceConfigPublicIpEipBandwidth `pulumi:"bandwidth"`
	IpType    string                                          `pulumi:"ipType"`
}

// ConfigurationInstanceConfigPublicIpEipInput is an input type that accepts ConfigurationInstanceConfigPublicIpEipArgs and ConfigurationInstanceConfigPublicIpEipOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPublicIpEipInput` via:
//
//	ConfigurationInstanceConfigPublicIpEipArgs{...}
type ConfigurationInstanceConfigPublicIpEipInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPublicIpEipOutput() ConfigurationInstanceConfigPublicIpEipOutput
	ToConfigurationInstanceConfigPublicIpEipOutputWithContext(context.Context) ConfigurationInstanceConfigPublicIpEipOutput
}

type ConfigurationInstanceConfigPublicIpEipArgs struct {
	Bandwidth ConfigurationInstanceConfigPublicIpEipBandwidthInput `pulumi:"bandwidth"`
	IpType    pulumi.StringInput                                   `pulumi:"ipType"`
}

func (ConfigurationInstanceConfigPublicIpEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (i ConfigurationInstanceConfigPublicIpEipArgs) ToConfigurationInstanceConfigPublicIpEipOutput() ConfigurationInstanceConfigPublicIpEipOutput {
	return i.ToConfigurationInstanceConfigPublicIpEipOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPublicIpEipArgs) ToConfigurationInstanceConfigPublicIpEipOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpEipOutput)
}

func (i ConfigurationInstanceConfigPublicIpEipArgs) ToConfigurationInstanceConfigPublicIpEipPtrOutput() ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return i.ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPublicIpEipArgs) ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpEipOutput).ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx)
}

// ConfigurationInstanceConfigPublicIpEipPtrInput is an input type that accepts ConfigurationInstanceConfigPublicIpEipArgs, ConfigurationInstanceConfigPublicIpEipPtr and ConfigurationInstanceConfigPublicIpEipPtrOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPublicIpEipPtrInput` via:
//
//	        ConfigurationInstanceConfigPublicIpEipArgs{...}
//
//	or:
//
//	        nil
type ConfigurationInstanceConfigPublicIpEipPtrInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPublicIpEipPtrOutput() ConfigurationInstanceConfigPublicIpEipPtrOutput
	ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Context) ConfigurationInstanceConfigPublicIpEipPtrOutput
}

type configurationInstanceConfigPublicIpEipPtrType ConfigurationInstanceConfigPublicIpEipArgs

func ConfigurationInstanceConfigPublicIpEipPtr(v *ConfigurationInstanceConfigPublicIpEipArgs) ConfigurationInstanceConfigPublicIpEipPtrInput {
	return (*configurationInstanceConfigPublicIpEipPtrType)(v)
}

func (*configurationInstanceConfigPublicIpEipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (i *configurationInstanceConfigPublicIpEipPtrType) ToConfigurationInstanceConfigPublicIpEipPtrOutput() ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return i.ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Background())
}

func (i *configurationInstanceConfigPublicIpEipPtrType) ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpEipPtrOutput)
}

type ConfigurationInstanceConfigPublicIpEipOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPublicIpEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPublicIpEipOutput) ToConfigurationInstanceConfigPublicIpEipOutput() ConfigurationInstanceConfigPublicIpEipOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipOutput) ToConfigurationInstanceConfigPublicIpEipOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipOutput) ToConfigurationInstanceConfigPublicIpEipPtrOutput() ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o.ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(context.Background())
}

func (o ConfigurationInstanceConfigPublicIpEipOutput) ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationInstanceConfigPublicIpEip) *ConfigurationInstanceConfigPublicIpEip {
		return &v
	}).(ConfigurationInstanceConfigPublicIpEipPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipOutput) Bandwidth() ConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIpEip) ConfigurationInstanceConfigPublicIpEipBandwidth {
		return v.Bandwidth
	}).(ConfigurationInstanceConfigPublicIpEipBandwidthOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipOutput) IpType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIpEip) string { return v.IpType }).(pulumi.StringOutput)
}

type ConfigurationInstanceConfigPublicIpEipPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPublicIpEipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfigPublicIpEip)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPublicIpEipPtrOutput) ToConfigurationInstanceConfigPublicIpEipPtrOutput() ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipPtrOutput) ToConfigurationInstanceConfigPublicIpEipPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipPtrOutput) Elem() ConfigurationInstanceConfigPublicIpEipOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEip) ConfigurationInstanceConfigPublicIpEip {
		if v != nil {
			return *v
		}
		var ret ConfigurationInstanceConfigPublicIpEip
		return ret
	}).(ConfigurationInstanceConfigPublicIpEipOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipPtrOutput) Bandwidth() ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEip) *ConfigurationInstanceConfigPublicIpEipBandwidth {
		if v == nil {
			return nil
		}
		return &v.Bandwidth
	}).(ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipPtrOutput) IpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEip) *string {
		if v == nil {
			return nil
		}
		return &v.IpType
	}).(pulumi.StringPtrOutput)
}

type ConfigurationInstanceConfigPublicIpEipBandwidth struct {
	ChargingMode *string `pulumi:"chargingMode"`
	Id           *string `pulumi:"id"`
	ShareType    string  `pulumi:"shareType"`
	Size         *int    `pulumi:"size"`
}

// ConfigurationInstanceConfigPublicIpEipBandwidthInput is an input type that accepts ConfigurationInstanceConfigPublicIpEipBandwidthArgs and ConfigurationInstanceConfigPublicIpEipBandwidthOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPublicIpEipBandwidthInput` via:
//
//	ConfigurationInstanceConfigPublicIpEipBandwidthArgs{...}
type ConfigurationInstanceConfigPublicIpEipBandwidthInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPublicIpEipBandwidthOutput() ConfigurationInstanceConfigPublicIpEipBandwidthOutput
	ToConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthOutput
}

type ConfigurationInstanceConfigPublicIpEipBandwidthArgs struct {
	ChargingMode pulumi.StringPtrInput `pulumi:"chargingMode"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	ShareType    pulumi.StringInput    `pulumi:"shareType"`
	Size         pulumi.IntPtrInput    `pulumi:"size"`
}

func (ConfigurationInstanceConfigPublicIpEipBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (i ConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToConfigurationInstanceConfigPublicIpEipBandwidthOutput() ConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return i.ToConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpEipBandwidthOutput)
}

func (i ConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return i.ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Background())
}

func (i ConfigurationInstanceConfigPublicIpEipBandwidthArgs) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpEipBandwidthOutput).ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx)
}

// ConfigurationInstanceConfigPublicIpEipBandwidthPtrInput is an input type that accepts ConfigurationInstanceConfigPublicIpEipBandwidthArgs, ConfigurationInstanceConfigPublicIpEipBandwidthPtr and ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput values.
// You can construct a concrete instance of `ConfigurationInstanceConfigPublicIpEipBandwidthPtrInput` via:
//
//	        ConfigurationInstanceConfigPublicIpEipBandwidthArgs{...}
//
//	or:
//
//	        nil
type ConfigurationInstanceConfigPublicIpEipBandwidthPtrInput interface {
	pulumi.Input

	ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput
	ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput
}

type configurationInstanceConfigPublicIpEipBandwidthPtrType ConfigurationInstanceConfigPublicIpEipBandwidthArgs

func ConfigurationInstanceConfigPublicIpEipBandwidthPtr(v *ConfigurationInstanceConfigPublicIpEipBandwidthArgs) ConfigurationInstanceConfigPublicIpEipBandwidthPtrInput {
	return (*configurationInstanceConfigPublicIpEipBandwidthPtrType)(v)
}

func (*configurationInstanceConfigPublicIpEipBandwidthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (i *configurationInstanceConfigPublicIpEipBandwidthPtrType) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return i.ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Background())
}

func (i *configurationInstanceConfigPublicIpEipBandwidthPtrType) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput)
}

type ConfigurationInstanceConfigPublicIpEipBandwidthOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToConfigurationInstanceConfigPublicIpEipBandwidthOutput() ConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToConfigurationInstanceConfigPublicIpEipBandwidthOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o.ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(context.Background())
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationInstanceConfigPublicIpEipBandwidth) *ConfigurationInstanceConfigPublicIpEipBandwidth {
		return &v
	}).(ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIpEipBandwidth) *string { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIpEipBandwidth) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIpEipBandwidth) string { return v.ShareType }).(pulumi.StringOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigurationInstanceConfigPublicIpEipBandwidth) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationInstanceConfigPublicIpEipBandwidth)(nil)).Elem()
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput() ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ToConfigurationInstanceConfigPublicIpEipBandwidthPtrOutputWithContext(ctx context.Context) ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput {
	return o
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) Elem() ConfigurationInstanceConfigPublicIpEipBandwidthOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEipBandwidth) ConfigurationInstanceConfigPublicIpEipBandwidth {
		if v != nil {
			return *v
		}
		var ret ConfigurationInstanceConfigPublicIpEipBandwidth
		return ret
	}).(ConfigurationInstanceConfigPublicIpEipBandwidthOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.ChargingMode
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) ShareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEipBandwidth) *string {
		if v == nil {
			return nil
		}
		return &v.ShareType
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigurationInstanceConfigPublicIpEipBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type GroupLbaasListener struct {
	ListenerId      *string `pulumi:"listenerId"`
	PoolId          string  `pulumi:"poolId"`
	ProtocolPort    int     `pulumi:"protocolPort"`
	ProtocolVersion *string `pulumi:"protocolVersion"`
	Weight          *int    `pulumi:"weight"`
}

// GroupLbaasListenerInput is an input type that accepts GroupLbaasListenerArgs and GroupLbaasListenerOutput values.
// You can construct a concrete instance of `GroupLbaasListenerInput` via:
//
//	GroupLbaasListenerArgs{...}
type GroupLbaasListenerInput interface {
	pulumi.Input

	ToGroupLbaasListenerOutput() GroupLbaasListenerOutput
	ToGroupLbaasListenerOutputWithContext(context.Context) GroupLbaasListenerOutput
}

type GroupLbaasListenerArgs struct {
	ListenerId      pulumi.StringPtrInput `pulumi:"listenerId"`
	PoolId          pulumi.StringInput    `pulumi:"poolId"`
	ProtocolPort    pulumi.IntInput       `pulumi:"protocolPort"`
	ProtocolVersion pulumi.StringPtrInput `pulumi:"protocolVersion"`
	Weight          pulumi.IntPtrInput    `pulumi:"weight"`
}

func (GroupLbaasListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupLbaasListener)(nil)).Elem()
}

func (i GroupLbaasListenerArgs) ToGroupLbaasListenerOutput() GroupLbaasListenerOutput {
	return i.ToGroupLbaasListenerOutputWithContext(context.Background())
}

func (i GroupLbaasListenerArgs) ToGroupLbaasListenerOutputWithContext(ctx context.Context) GroupLbaasListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupLbaasListenerOutput)
}

// GroupLbaasListenerArrayInput is an input type that accepts GroupLbaasListenerArray and GroupLbaasListenerArrayOutput values.
// You can construct a concrete instance of `GroupLbaasListenerArrayInput` via:
//
//	GroupLbaasListenerArray{ GroupLbaasListenerArgs{...} }
type GroupLbaasListenerArrayInput interface {
	pulumi.Input

	ToGroupLbaasListenerArrayOutput() GroupLbaasListenerArrayOutput
	ToGroupLbaasListenerArrayOutputWithContext(context.Context) GroupLbaasListenerArrayOutput
}

type GroupLbaasListenerArray []GroupLbaasListenerInput

func (GroupLbaasListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupLbaasListener)(nil)).Elem()
}

func (i GroupLbaasListenerArray) ToGroupLbaasListenerArrayOutput() GroupLbaasListenerArrayOutput {
	return i.ToGroupLbaasListenerArrayOutputWithContext(context.Background())
}

func (i GroupLbaasListenerArray) ToGroupLbaasListenerArrayOutputWithContext(ctx context.Context) GroupLbaasListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupLbaasListenerArrayOutput)
}

type GroupLbaasListenerOutput struct{ *pulumi.OutputState }

func (GroupLbaasListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupLbaasListener)(nil)).Elem()
}

func (o GroupLbaasListenerOutput) ToGroupLbaasListenerOutput() GroupLbaasListenerOutput {
	return o
}

func (o GroupLbaasListenerOutput) ToGroupLbaasListenerOutputWithContext(ctx context.Context) GroupLbaasListenerOutput {
	return o
}

func (o GroupLbaasListenerOutput) ListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLbaasListener) *string { return v.ListenerId }).(pulumi.StringPtrOutput)
}

func (o GroupLbaasListenerOutput) PoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupLbaasListener) string { return v.PoolId }).(pulumi.StringOutput)
}

func (o GroupLbaasListenerOutput) ProtocolPort() pulumi.IntOutput {
	return o.ApplyT(func(v GroupLbaasListener) int { return v.ProtocolPort }).(pulumi.IntOutput)
}

func (o GroupLbaasListenerOutput) ProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLbaasListener) *string { return v.ProtocolVersion }).(pulumi.StringPtrOutput)
}

func (o GroupLbaasListenerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupLbaasListener) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type GroupLbaasListenerArrayOutput struct{ *pulumi.OutputState }

func (GroupLbaasListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupLbaasListener)(nil)).Elem()
}

func (o GroupLbaasListenerArrayOutput) ToGroupLbaasListenerArrayOutput() GroupLbaasListenerArrayOutput {
	return o
}

func (o GroupLbaasListenerArrayOutput) ToGroupLbaasListenerArrayOutputWithContext(ctx context.Context) GroupLbaasListenerArrayOutput {
	return o
}

func (o GroupLbaasListenerArrayOutput) Index(i pulumi.IntInput) GroupLbaasListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupLbaasListener {
		return vs[0].([]GroupLbaasListener)[vs[1].(int)]
	}).(GroupLbaasListenerOutput)
}

type GroupNetwork struct {
	Id              string  `pulumi:"id"`
	Ipv6BandwidthId *string `pulumi:"ipv6BandwidthId"`
	Ipv6Enable      *bool   `pulumi:"ipv6Enable"`
	SourceDestCheck *bool   `pulumi:"sourceDestCheck"`
}

// GroupNetworkInput is an input type that accepts GroupNetworkArgs and GroupNetworkOutput values.
// You can construct a concrete instance of `GroupNetworkInput` via:
//
//	GroupNetworkArgs{...}
type GroupNetworkInput interface {
	pulumi.Input

	ToGroupNetworkOutput() GroupNetworkOutput
	ToGroupNetworkOutputWithContext(context.Context) GroupNetworkOutput
}

type GroupNetworkArgs struct {
	Id              pulumi.StringInput    `pulumi:"id"`
	Ipv6BandwidthId pulumi.StringPtrInput `pulumi:"ipv6BandwidthId"`
	Ipv6Enable      pulumi.BoolPtrInput   `pulumi:"ipv6Enable"`
	SourceDestCheck pulumi.BoolPtrInput   `pulumi:"sourceDestCheck"`
}

func (GroupNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupNetwork)(nil)).Elem()
}

func (i GroupNetworkArgs) ToGroupNetworkOutput() GroupNetworkOutput {
	return i.ToGroupNetworkOutputWithContext(context.Background())
}

func (i GroupNetworkArgs) ToGroupNetworkOutputWithContext(ctx context.Context) GroupNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupNetworkOutput)
}

// GroupNetworkArrayInput is an input type that accepts GroupNetworkArray and GroupNetworkArrayOutput values.
// You can construct a concrete instance of `GroupNetworkArrayInput` via:
//
//	GroupNetworkArray{ GroupNetworkArgs{...} }
type GroupNetworkArrayInput interface {
	pulumi.Input

	ToGroupNetworkArrayOutput() GroupNetworkArrayOutput
	ToGroupNetworkArrayOutputWithContext(context.Context) GroupNetworkArrayOutput
}

type GroupNetworkArray []GroupNetworkInput

func (GroupNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupNetwork)(nil)).Elem()
}

func (i GroupNetworkArray) ToGroupNetworkArrayOutput() GroupNetworkArrayOutput {
	return i.ToGroupNetworkArrayOutputWithContext(context.Background())
}

func (i GroupNetworkArray) ToGroupNetworkArrayOutputWithContext(ctx context.Context) GroupNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupNetworkArrayOutput)
}

type GroupNetworkOutput struct{ *pulumi.OutputState }

func (GroupNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupNetwork)(nil)).Elem()
}

func (o GroupNetworkOutput) ToGroupNetworkOutput() GroupNetworkOutput {
	return o
}

func (o GroupNetworkOutput) ToGroupNetworkOutputWithContext(ctx context.Context) GroupNetworkOutput {
	return o
}

func (o GroupNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GroupNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o GroupNetworkOutput) Ipv6BandwidthId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupNetwork) *string { return v.Ipv6BandwidthId }).(pulumi.StringPtrOutput)
}

func (o GroupNetworkOutput) Ipv6Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupNetwork) *bool { return v.Ipv6Enable }).(pulumi.BoolPtrOutput)
}

func (o GroupNetworkOutput) SourceDestCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GroupNetwork) *bool { return v.SourceDestCheck }).(pulumi.BoolPtrOutput)
}

type GroupNetworkArrayOutput struct{ *pulumi.OutputState }

func (GroupNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupNetwork)(nil)).Elem()
}

func (o GroupNetworkArrayOutput) ToGroupNetworkArrayOutput() GroupNetworkArrayOutput {
	return o
}

func (o GroupNetworkArrayOutput) ToGroupNetworkArrayOutputWithContext(ctx context.Context) GroupNetworkArrayOutput {
	return o
}

func (o GroupNetworkArrayOutput) Index(i pulumi.IntInput) GroupNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupNetwork {
		return vs[0].([]GroupNetwork)[vs[1].(int)]
	}).(GroupNetworkOutput)
}

type GroupSecurityGroup struct {
	Id string `pulumi:"id"`
}

// GroupSecurityGroupInput is an input type that accepts GroupSecurityGroupArgs and GroupSecurityGroupOutput values.
// You can construct a concrete instance of `GroupSecurityGroupInput` via:
//
//	GroupSecurityGroupArgs{...}
type GroupSecurityGroupInput interface {
	pulumi.Input

	ToGroupSecurityGroupOutput() GroupSecurityGroupOutput
	ToGroupSecurityGroupOutputWithContext(context.Context) GroupSecurityGroupOutput
}

type GroupSecurityGroupArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (GroupSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSecurityGroup)(nil)).Elem()
}

func (i GroupSecurityGroupArgs) ToGroupSecurityGroupOutput() GroupSecurityGroupOutput {
	return i.ToGroupSecurityGroupOutputWithContext(context.Background())
}

func (i GroupSecurityGroupArgs) ToGroupSecurityGroupOutputWithContext(ctx context.Context) GroupSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSecurityGroupOutput)
}

// GroupSecurityGroupArrayInput is an input type that accepts GroupSecurityGroupArray and GroupSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GroupSecurityGroupArrayInput` via:
//
//	GroupSecurityGroupArray{ GroupSecurityGroupArgs{...} }
type GroupSecurityGroupArrayInput interface {
	pulumi.Input

	ToGroupSecurityGroupArrayOutput() GroupSecurityGroupArrayOutput
	ToGroupSecurityGroupArrayOutputWithContext(context.Context) GroupSecurityGroupArrayOutput
}

type GroupSecurityGroupArray []GroupSecurityGroupInput

func (GroupSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSecurityGroup)(nil)).Elem()
}

func (i GroupSecurityGroupArray) ToGroupSecurityGroupArrayOutput() GroupSecurityGroupArrayOutput {
	return i.ToGroupSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GroupSecurityGroupArray) ToGroupSecurityGroupArrayOutputWithContext(ctx context.Context) GroupSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupSecurityGroupArrayOutput)
}

type GroupSecurityGroupOutput struct{ *pulumi.OutputState }

func (GroupSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupSecurityGroup)(nil)).Elem()
}

func (o GroupSecurityGroupOutput) ToGroupSecurityGroupOutput() GroupSecurityGroupOutput {
	return o
}

func (o GroupSecurityGroupOutput) ToGroupSecurityGroupOutputWithContext(ctx context.Context) GroupSecurityGroupOutput {
	return o
}

func (o GroupSecurityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GroupSecurityGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GroupSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GroupSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupSecurityGroup)(nil)).Elem()
}

func (o GroupSecurityGroupArrayOutput) ToGroupSecurityGroupArrayOutput() GroupSecurityGroupArrayOutput {
	return o
}

func (o GroupSecurityGroupArrayOutput) ToGroupSecurityGroupArrayOutputWithContext(ctx context.Context) GroupSecurityGroupArrayOutput {
	return o
}

func (o GroupSecurityGroupArrayOutput) Index(i pulumi.IntInput) GroupSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupSecurityGroup {
		return vs[0].([]GroupSecurityGroup)[vs[1].(int)]
	}).(GroupSecurityGroupOutput)
}

type PolicyScalingPolicyAction struct {
	InstanceNumber     *int    `pulumi:"instanceNumber"`
	InstancePercentage *int    `pulumi:"instancePercentage"`
	Operation          *string `pulumi:"operation"`
}

// PolicyScalingPolicyActionInput is an input type that accepts PolicyScalingPolicyActionArgs and PolicyScalingPolicyActionOutput values.
// You can construct a concrete instance of `PolicyScalingPolicyActionInput` via:
//
//	PolicyScalingPolicyActionArgs{...}
type PolicyScalingPolicyActionInput interface {
	pulumi.Input

	ToPolicyScalingPolicyActionOutput() PolicyScalingPolicyActionOutput
	ToPolicyScalingPolicyActionOutputWithContext(context.Context) PolicyScalingPolicyActionOutput
}

type PolicyScalingPolicyActionArgs struct {
	InstanceNumber     pulumi.IntPtrInput    `pulumi:"instanceNumber"`
	InstancePercentage pulumi.IntPtrInput    `pulumi:"instancePercentage"`
	Operation          pulumi.StringPtrInput `pulumi:"operation"`
}

func (PolicyScalingPolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyScalingPolicyAction)(nil)).Elem()
}

func (i PolicyScalingPolicyActionArgs) ToPolicyScalingPolicyActionOutput() PolicyScalingPolicyActionOutput {
	return i.ToPolicyScalingPolicyActionOutputWithContext(context.Background())
}

func (i PolicyScalingPolicyActionArgs) ToPolicyScalingPolicyActionOutputWithContext(ctx context.Context) PolicyScalingPolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyScalingPolicyActionOutput)
}

func (i PolicyScalingPolicyActionArgs) ToPolicyScalingPolicyActionPtrOutput() PolicyScalingPolicyActionPtrOutput {
	return i.ToPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i PolicyScalingPolicyActionArgs) ToPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) PolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyScalingPolicyActionOutput).ToPolicyScalingPolicyActionPtrOutputWithContext(ctx)
}

// PolicyScalingPolicyActionPtrInput is an input type that accepts PolicyScalingPolicyActionArgs, PolicyScalingPolicyActionPtr and PolicyScalingPolicyActionPtrOutput values.
// You can construct a concrete instance of `PolicyScalingPolicyActionPtrInput` via:
//
//	        PolicyScalingPolicyActionArgs{...}
//
//	or:
//
//	        nil
type PolicyScalingPolicyActionPtrInput interface {
	pulumi.Input

	ToPolicyScalingPolicyActionPtrOutput() PolicyScalingPolicyActionPtrOutput
	ToPolicyScalingPolicyActionPtrOutputWithContext(context.Context) PolicyScalingPolicyActionPtrOutput
}

type policyScalingPolicyActionPtrType PolicyScalingPolicyActionArgs

func PolicyScalingPolicyActionPtr(v *PolicyScalingPolicyActionArgs) PolicyScalingPolicyActionPtrInput {
	return (*policyScalingPolicyActionPtrType)(v)
}

func (*policyScalingPolicyActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyScalingPolicyAction)(nil)).Elem()
}

func (i *policyScalingPolicyActionPtrType) ToPolicyScalingPolicyActionPtrOutput() PolicyScalingPolicyActionPtrOutput {
	return i.ToPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (i *policyScalingPolicyActionPtrType) ToPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) PolicyScalingPolicyActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyScalingPolicyActionPtrOutput)
}

type PolicyScalingPolicyActionOutput struct{ *pulumi.OutputState }

func (PolicyScalingPolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyScalingPolicyAction)(nil)).Elem()
}

func (o PolicyScalingPolicyActionOutput) ToPolicyScalingPolicyActionOutput() PolicyScalingPolicyActionOutput {
	return o
}

func (o PolicyScalingPolicyActionOutput) ToPolicyScalingPolicyActionOutputWithContext(ctx context.Context) PolicyScalingPolicyActionOutput {
	return o
}

func (o PolicyScalingPolicyActionOutput) ToPolicyScalingPolicyActionPtrOutput() PolicyScalingPolicyActionPtrOutput {
	return o.ToPolicyScalingPolicyActionPtrOutputWithContext(context.Background())
}

func (o PolicyScalingPolicyActionOutput) ToPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) PolicyScalingPolicyActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyScalingPolicyAction) *PolicyScalingPolicyAction {
		return &v
	}).(PolicyScalingPolicyActionPtrOutput)
}

func (o PolicyScalingPolicyActionOutput) InstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyScalingPolicyAction) *int { return v.InstanceNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyScalingPolicyActionOutput) InstancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyScalingPolicyAction) *int { return v.InstancePercentage }).(pulumi.IntPtrOutput)
}

func (o PolicyScalingPolicyActionOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyScalingPolicyAction) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

type PolicyScalingPolicyActionPtrOutput struct{ *pulumi.OutputState }

func (PolicyScalingPolicyActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyScalingPolicyAction)(nil)).Elem()
}

func (o PolicyScalingPolicyActionPtrOutput) ToPolicyScalingPolicyActionPtrOutput() PolicyScalingPolicyActionPtrOutput {
	return o
}

func (o PolicyScalingPolicyActionPtrOutput) ToPolicyScalingPolicyActionPtrOutputWithContext(ctx context.Context) PolicyScalingPolicyActionPtrOutput {
	return o
}

func (o PolicyScalingPolicyActionPtrOutput) Elem() PolicyScalingPolicyActionOutput {
	return o.ApplyT(func(v *PolicyScalingPolicyAction) PolicyScalingPolicyAction {
		if v != nil {
			return *v
		}
		var ret PolicyScalingPolicyAction
		return ret
	}).(PolicyScalingPolicyActionOutput)
}

func (o PolicyScalingPolicyActionPtrOutput) InstanceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.InstanceNumber
	}).(pulumi.IntPtrOutput)
}

func (o PolicyScalingPolicyActionPtrOutput) InstancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyScalingPolicyAction) *int {
		if v == nil {
			return nil
		}
		return v.InstancePercentage
	}).(pulumi.IntPtrOutput)
}

func (o PolicyScalingPolicyActionPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyScalingPolicyAction) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

type PolicyScheduledPolicy struct {
	EndTime         *string `pulumi:"endTime"`
	LaunchTime      string  `pulumi:"launchTime"`
	RecurrenceType  *string `pulumi:"recurrenceType"`
	RecurrenceValue *string `pulumi:"recurrenceValue"`
	StartTime       *string `pulumi:"startTime"`
}

// PolicyScheduledPolicyInput is an input type that accepts PolicyScheduledPolicyArgs and PolicyScheduledPolicyOutput values.
// You can construct a concrete instance of `PolicyScheduledPolicyInput` via:
//
//	PolicyScheduledPolicyArgs{...}
type PolicyScheduledPolicyInput interface {
	pulumi.Input

	ToPolicyScheduledPolicyOutput() PolicyScheduledPolicyOutput
	ToPolicyScheduledPolicyOutputWithContext(context.Context) PolicyScheduledPolicyOutput
}

type PolicyScheduledPolicyArgs struct {
	EndTime         pulumi.StringPtrInput `pulumi:"endTime"`
	LaunchTime      pulumi.StringInput    `pulumi:"launchTime"`
	RecurrenceType  pulumi.StringPtrInput `pulumi:"recurrenceType"`
	RecurrenceValue pulumi.StringPtrInput `pulumi:"recurrenceValue"`
	StartTime       pulumi.StringPtrInput `pulumi:"startTime"`
}

func (PolicyScheduledPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyScheduledPolicy)(nil)).Elem()
}

func (i PolicyScheduledPolicyArgs) ToPolicyScheduledPolicyOutput() PolicyScheduledPolicyOutput {
	return i.ToPolicyScheduledPolicyOutputWithContext(context.Background())
}

func (i PolicyScheduledPolicyArgs) ToPolicyScheduledPolicyOutputWithContext(ctx context.Context) PolicyScheduledPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyScheduledPolicyOutput)
}

func (i PolicyScheduledPolicyArgs) ToPolicyScheduledPolicyPtrOutput() PolicyScheduledPolicyPtrOutput {
	return i.ToPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i PolicyScheduledPolicyArgs) ToPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) PolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyScheduledPolicyOutput).ToPolicyScheduledPolicyPtrOutputWithContext(ctx)
}

// PolicyScheduledPolicyPtrInput is an input type that accepts PolicyScheduledPolicyArgs, PolicyScheduledPolicyPtr and PolicyScheduledPolicyPtrOutput values.
// You can construct a concrete instance of `PolicyScheduledPolicyPtrInput` via:
//
//	        PolicyScheduledPolicyArgs{...}
//
//	or:
//
//	        nil
type PolicyScheduledPolicyPtrInput interface {
	pulumi.Input

	ToPolicyScheduledPolicyPtrOutput() PolicyScheduledPolicyPtrOutput
	ToPolicyScheduledPolicyPtrOutputWithContext(context.Context) PolicyScheduledPolicyPtrOutput
}

type policyScheduledPolicyPtrType PolicyScheduledPolicyArgs

func PolicyScheduledPolicyPtr(v *PolicyScheduledPolicyArgs) PolicyScheduledPolicyPtrInput {
	return (*policyScheduledPolicyPtrType)(v)
}

func (*policyScheduledPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyScheduledPolicy)(nil)).Elem()
}

func (i *policyScheduledPolicyPtrType) ToPolicyScheduledPolicyPtrOutput() PolicyScheduledPolicyPtrOutput {
	return i.ToPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (i *policyScheduledPolicyPtrType) ToPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) PolicyScheduledPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyScheduledPolicyPtrOutput)
}

type PolicyScheduledPolicyOutput struct{ *pulumi.OutputState }

func (PolicyScheduledPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyScheduledPolicy)(nil)).Elem()
}

func (o PolicyScheduledPolicyOutput) ToPolicyScheduledPolicyOutput() PolicyScheduledPolicyOutput {
	return o
}

func (o PolicyScheduledPolicyOutput) ToPolicyScheduledPolicyOutputWithContext(ctx context.Context) PolicyScheduledPolicyOutput {
	return o
}

func (o PolicyScheduledPolicyOutput) ToPolicyScheduledPolicyPtrOutput() PolicyScheduledPolicyPtrOutput {
	return o.ToPolicyScheduledPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyScheduledPolicyOutput) ToPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) PolicyScheduledPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyScheduledPolicy) *PolicyScheduledPolicy {
		return &v
	}).(PolicyScheduledPolicyPtrOutput)
}

func (o PolicyScheduledPolicyOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyScheduledPolicy) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyOutput) LaunchTime() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyScheduledPolicy) string { return v.LaunchTime }).(pulumi.StringOutput)
}

func (o PolicyScheduledPolicyOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyScheduledPolicy) *string { return v.RecurrenceType }).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyScheduledPolicy) *string { return v.RecurrenceValue }).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyScheduledPolicy) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type PolicyScheduledPolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyScheduledPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyScheduledPolicy)(nil)).Elem()
}

func (o PolicyScheduledPolicyPtrOutput) ToPolicyScheduledPolicyPtrOutput() PolicyScheduledPolicyPtrOutput {
	return o
}

func (o PolicyScheduledPolicyPtrOutput) ToPolicyScheduledPolicyPtrOutputWithContext(ctx context.Context) PolicyScheduledPolicyPtrOutput {
	return o
}

func (o PolicyScheduledPolicyPtrOutput) Elem() PolicyScheduledPolicyOutput {
	return o.ApplyT(func(v *PolicyScheduledPolicy) PolicyScheduledPolicy {
		if v != nil {
			return *v
		}
		var ret PolicyScheduledPolicy
		return ret
	}).(PolicyScheduledPolicyOutput)
}

func (o PolicyScheduledPolicyPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyPtrOutput) LaunchTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.LaunchTime
	}).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyPtrOutput) RecurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyPtrOutput) RecurrenceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RecurrenceValue
	}).(pulumi.StringPtrOutput)
}

func (o PolicyScheduledPolicyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyScheduledPolicy) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyIntervalAlarmActionInput)(nil)).Elem(), BandwidthPolicyIntervalAlarmActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyIntervalAlarmActionArrayInput)(nil)).Elem(), BandwidthPolicyIntervalAlarmActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyMetaDataInput)(nil)).Elem(), BandwidthPolicyMetaDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyMetaDataArrayInput)(nil)).Elem(), BandwidthPolicyMetaDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyScalingPolicyActionInput)(nil)).Elem(), BandwidthPolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyScalingPolicyActionPtrInput)(nil)).Elem(), BandwidthPolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyScheduledPolicyInput)(nil)).Elem(), BandwidthPolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPolicyScheduledPolicyPtrInput)(nil)).Elem(), BandwidthPolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigInput)(nil)).Elem(), ConfigurationInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPtrInput)(nil)).Elem(), ConfigurationInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigDiskInput)(nil)).Elem(), ConfigurationInstanceConfigDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigDiskArrayInput)(nil)).Elem(), ConfigurationInstanceConfigDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPersonalityInput)(nil)).Elem(), ConfigurationInstanceConfigPersonalityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPersonalityArrayInput)(nil)).Elem(), ConfigurationInstanceConfigPersonalityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPublicIpInput)(nil)).Elem(), ConfigurationInstanceConfigPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPublicIpPtrInput)(nil)).Elem(), ConfigurationInstanceConfigPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEipInput)(nil)).Elem(), ConfigurationInstanceConfigPublicIpEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEipPtrInput)(nil)).Elem(), ConfigurationInstanceConfigPublicIpEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEipBandwidthInput)(nil)).Elem(), ConfigurationInstanceConfigPublicIpEipBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationInstanceConfigPublicIpEipBandwidthPtrInput)(nil)).Elem(), ConfigurationInstanceConfigPublicIpEipBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupLbaasListenerInput)(nil)).Elem(), GroupLbaasListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupLbaasListenerArrayInput)(nil)).Elem(), GroupLbaasListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupNetworkInput)(nil)).Elem(), GroupNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupNetworkArrayInput)(nil)).Elem(), GroupNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSecurityGroupInput)(nil)).Elem(), GroupSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupSecurityGroupArrayInput)(nil)).Elem(), GroupSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyScalingPolicyActionInput)(nil)).Elem(), PolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyScalingPolicyActionPtrInput)(nil)).Elem(), PolicyScalingPolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyScheduledPolicyInput)(nil)).Elem(), PolicyScheduledPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyScheduledPolicyPtrInput)(nil)).Elem(), PolicyScheduledPolicyArgs{})
	pulumi.RegisterOutputType(BandwidthPolicyIntervalAlarmActionOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyIntervalAlarmActionArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyMetaDataOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyMetaDataArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyScalingPolicyActionOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyScalingPolicyActionPtrOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyScheduledPolicyOutput{})
	pulumi.RegisterOutputType(BandwidthPolicyScheduledPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigDiskOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigDiskArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPersonalityOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPersonalityArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPublicIpOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPublicIpPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPublicIpEipOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPublicIpEipPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPublicIpEipBandwidthOutput{})
	pulumi.RegisterOutputType(ConfigurationInstanceConfigPublicIpEipBandwidthPtrOutput{})
	pulumi.RegisterOutputType(GroupLbaasListenerOutput{})
	pulumi.RegisterOutputType(GroupLbaasListenerArrayOutput{})
	pulumi.RegisterOutputType(GroupNetworkOutput{})
	pulumi.RegisterOutputType(GroupNetworkArrayOutput{})
	pulumi.RegisterOutputType(GroupSecurityGroupOutput{})
	pulumi.RegisterOutputType(GroupSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicyScalingPolicyActionOutput{})
	pulumi.RegisterOutputType(PolicyScalingPolicyActionPtrOutput{})
	pulumi.RegisterOutputType(PolicyScheduledPolicyOutput{})
	pulumi.RegisterOutputType(PolicyScheduledPolicyPtrOutput{})
}
