// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package er

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Use this data source to get the list of flow logs.
//
// Before using enterprise router, define custom endpoint as shown below:
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/er"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			resourceId := cfg.RequireObject("resourceId")
//			_, err := er.GetFlowLogs(ctx, &er.GetFlowLogsArgs{
//				InstanceId: instanceId,
//				ResourceId: pulumi.StringRef(resourceId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFlowLogs(ctx *pulumi.Context, args *GetFlowLogsArgs, opts ...pulumi.InvokeOption) (*GetFlowLogsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFlowLogsResult
	err := ctx.Invoke("sbercloud:Er/getFlowLogs:getFlowLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsArgs struct {
	// Specifies the switch status of the flow log.
	// The value can be **true** and **false**.
	Enabled *string `pulumi:"enabled"`
	// Specifies the ID of the flow log.
	FlowLogId *string `pulumi:"flowLogId"`
	// Specifies the ID of the ER instance to which the flow logs belong.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the ID of the log group to which the flow logs belong.
	LogGroupId *string `pulumi:"logGroupId"`
	// Specifies the ID of the log stream to which the flow logs belong.
	LogStreamId *string `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name *string `pulumi:"name"`
	// Specifies the region where the flow logs are located.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the ID of the attachment to which the flow logs belong.
	ResourceId *string `pulumi:"resourceId"`
	// Specifies the type of the flow logs.
	// The valid values are as follows:
	// + **attachment**: The flow logs type are attachment.
	ResourceType *string `pulumi:"resourceType"`
	// Specifies the status of the flow logs.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResult struct {
	// The switch of the flow log.
	Enabled   *string `pulumi:"enabled"`
	FlowLogId *string `pulumi:"flowLogId"`
	// The list ot the flow logs.
	// The flowLogs structure is documented below.
	FlowLogs []GetFlowLogsFlowLog `pulumi:"flowLogs"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// The ID of the log group to which the flow log belongs.
	LogGroupId *string `pulumi:"logGroupId"`
	// The ID of the log stream to which the flow log belongs.
	LogStreamId *string `pulumi:"logStreamId"`
	// The name of the flow log.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// The ID of the attachment to which the flow log belongs.
	ResourceId *string `pulumi:"resourceId"`
	// The type of the flow log.
	ResourceType *string `pulumi:"resourceType"`
	// The status of the flow log.
	Status *string `pulumi:"status"`
}

func GetFlowLogsOutput(ctx *pulumi.Context, args GetFlowLogsOutputArgs, opts ...pulumi.InvokeOption) GetFlowLogsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFlowLogsResultOutput, error) {
			args := v.(GetFlowLogsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Er/getFlowLogs:getFlowLogs", args, GetFlowLogsResultOutput{}, options).(GetFlowLogsResultOutput), nil
		}).(GetFlowLogsResultOutput)
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsOutputArgs struct {
	// Specifies the switch status of the flow log.
	// The value can be **true** and **false**.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// Specifies the ID of the flow log.
	FlowLogId pulumi.StringPtrInput `pulumi:"flowLogId"`
	// Specifies the ID of the ER instance to which the flow logs belong.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the ID of the log group to which the flow logs belong.
	LogGroupId pulumi.StringPtrInput `pulumi:"logGroupId"`
	// Specifies the ID of the log stream to which the flow logs belong.
	LogStreamId pulumi.StringPtrInput `pulumi:"logStreamId"`
	// Specifies the name of the flow log.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region where the flow logs are located.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the ID of the attachment to which the flow logs belong.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Specifies the type of the flow logs.
	// The valid values are as follows:
	// + **attachment**: The flow logs type are attachment.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Specifies the status of the flow logs.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetFlowLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsArgs)(nil)).Elem()
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResultOutput struct{ *pulumi.OutputState }

func (GetFlowLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsResult)(nil)).Elem()
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutput() GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutputWithContext(ctx context.Context) GetFlowLogsResultOutput {
	return o
}

// The switch of the flow log.
func (o GetFlowLogsResultOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) FlowLogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.FlowLogId }).(pulumi.StringPtrOutput)
}

// The list ot the flow logs.
// The flowLogs structure is documented below.
func (o GetFlowLogsResultOutput) FlowLogs() GetFlowLogsFlowLogArrayOutput {
	return o.ApplyT(func(v GetFlowLogsResult) []GetFlowLogsFlowLog { return v.FlowLogs }).(GetFlowLogsFlowLogArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlowLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFlowLogsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The ID of the log group to which the flow log belongs.
func (o GetFlowLogsResultOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.LogGroupId }).(pulumi.StringPtrOutput)
}

// The ID of the log stream to which the flow log belongs.
func (o GetFlowLogsResultOutput) LogStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.LogStreamId }).(pulumi.StringPtrOutput)
}

// The name of the flow log.
func (o GetFlowLogsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The ID of the attachment to which the flow log belongs.
func (o GetFlowLogsResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of the flow log.
func (o GetFlowLogsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The status of the flow log.
func (o GetFlowLogsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlowLogsResultOutput{})
}
