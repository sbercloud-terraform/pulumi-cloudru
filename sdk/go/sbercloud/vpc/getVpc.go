// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// sbercloud_vpc provides details about a specific VPC.
//
// This resource can prove useful when a module accepts a vpc id as an input variable and needs to, for example, determine the CIDR block of that VPC.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcName := cfg.RequireObject("vpcName")
//			_, err := vpc.GetVpc(ctx, &vpc.GetVpcArgs{
//				Name: pulumi.StringRef(vpcName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpc(ctx *pulumi.Context, args *LookupVpcArgs, opts ...pulumi.InvokeOption) (*LookupVpcResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcResult
	err := ctx.Invoke("sbercloud:Vpc/getVpc:getVpc", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpc.
type LookupVpcArgs struct {
	// Specifies the cidr block of the desired VPC.
	Cidr *string `pulumi:"cidr"`
	// Specifies the enterprise project ID which the desired VPC belongs to.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the id of the VPC to retrieve.
	Id *string `pulumi:"id"`
	// Specifies an unique name for the VPC. The value is a string of no more than 64 characters
	// and can contain digits, letters, underscores (_), and hyphens (-).
	Name *string `pulumi:"name"`
	// Specifies the region in which to obtain the VPC. If omitted, the provider-level region
	// will be used.
	Region *string `pulumi:"region"`
	// Specifies the current status of the desired VPC. The value can be CREATING, OK or ERROR.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getVpc.
type LookupVpcResult struct {
	Cidr string `pulumi:"cidr"`
	// The supplementary information about the VPC. The value is a string of
	// no more than 255 characters and cannot contain angle brackets (< or >).
	Description         string `pulumi:"description"`
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	Id                  string `pulumi:"id"`
	Name                string `pulumi:"name"`
	Region              string `pulumi:"region"`
	// Deprecated: use huaweicloudVpcRouteTable data source to get all routes
	Routes         []GetVpcRoute `pulumi:"routes"`
	SecondaryCidrs []string      `pulumi:"secondaryCidrs"`
	Status         string        `pulumi:"status"`
	// The key/value pairs to associate with the VPC.
	Tags map[string]string `pulumi:"tags"`
}

func LookupVpcOutput(ctx *pulumi.Context, args LookupVpcOutputArgs, opts ...pulumi.InvokeOption) LookupVpcResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcResultOutput, error) {
			args := v.(LookupVpcArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Vpc/getVpc:getVpc", args, LookupVpcResultOutput{}, options).(LookupVpcResultOutput), nil
		}).(LookupVpcResultOutput)
}

// A collection of arguments for invoking getVpc.
type LookupVpcOutputArgs struct {
	// Specifies the cidr block of the desired VPC.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Specifies the enterprise project ID which the desired VPC belongs to.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the id of the VPC to retrieve.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies an unique name for the VPC. The value is a string of no more than 64 characters
	// and can contain digits, letters, underscores (_), and hyphens (-).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to obtain the VPC. If omitted, the provider-level region
	// will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the current status of the desired VPC. The value can be CREATING, OK or ERROR.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupVpcOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcArgs)(nil)).Elem()
}

// A collection of values returned by getVpc.
type LookupVpcResultOutput struct{ *pulumi.OutputState }

func (LookupVpcResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcResult)(nil)).Elem()
}

func (o LookupVpcResultOutput) ToLookupVpcResultOutput() LookupVpcResultOutput {
	return o
}

func (o LookupVpcResultOutput) ToLookupVpcResultOutputWithContext(ctx context.Context) LookupVpcResultOutput {
	return o
}

func (o LookupVpcResultOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.Cidr }).(pulumi.StringOutput)
}

// The supplementary information about the VPC. The value is a string of
// no more than 255 characters and cannot contain angle brackets (< or >).
func (o LookupVpcResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVpcResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupVpcResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpcResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVpcResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.Region }).(pulumi.StringOutput)
}

// Deprecated: use huaweicloudVpcRouteTable data source to get all routes
func (o LookupVpcResultOutput) Routes() GetVpcRouteArrayOutput {
	return o.ApplyT(func(v LookupVpcResult) []GetVpcRoute { return v.Routes }).(GetVpcRouteArrayOutput)
}

func (o LookupVpcResultOutput) SecondaryCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcResult) []string { return v.SecondaryCidrs }).(pulumi.StringArrayOutput)
}

func (o LookupVpcResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcResult) string { return v.Status }).(pulumi.StringOutput)
}

// The key/value pairs to associate with the VPC.
func (o LookupVpcResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcResultOutput{})
}
