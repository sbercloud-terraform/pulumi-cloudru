// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages an RDS instance EIP associate resource within SberCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			publicIp := cfg.RequireObject("publicIp")
//			publicIpId := cfg.RequireObject("publicIpId")
//			_, err := rds.NewInstanceEipAssociate(ctx, "test", &rds.InstanceEipAssociateArgs{
//				InstanceId: pulumi.Any(instanceId),
//				PublicIp:   pulumi.Any(publicIp),
//				PublicIpId: pulumi.Any(nodeId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The RDS instance eip associate can be imported using the `id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:Rds/instanceEipAssociate:InstanceEipAssociate test <id>
// ```
type InstanceEipAssociate struct {
	pulumi.CustomResourceState

	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// Specifies the ID of an RDS instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the EIP address to be bound.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// Specifies the EIP ID.
	PublicIpId pulumi.StringOutput `pulumi:"publicIpId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewInstanceEipAssociate registers a new resource with the given unique name, arguments, and options.
func NewInstanceEipAssociate(ctx *pulumi.Context,
	name string, args *InstanceEipAssociateArgs, opts ...pulumi.ResourceOption) (*InstanceEipAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PublicIp == nil {
		return nil, errors.New("invalid value for required argument 'PublicIp'")
	}
	if args.PublicIpId == nil {
		return nil, errors.New("invalid value for required argument 'PublicIpId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceEipAssociate
	err := ctx.RegisterResource("sbercloud:Rds/instanceEipAssociate:InstanceEipAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceEipAssociate gets an existing InstanceEipAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceEipAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceEipAssociateState, opts ...pulumi.ResourceOption) (*InstanceEipAssociate, error) {
	var resource InstanceEipAssociate
	err := ctx.ReadResource("sbercloud:Rds/instanceEipAssociate:InstanceEipAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceEipAssociate resources.
type instanceEipAssociateState struct {
	EnableForceNew *string `pulumi:"enableForceNew"`
	// Specifies the ID of an RDS instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the EIP address to be bound.
	PublicIp *string `pulumi:"publicIp"`
	// Specifies the EIP ID.
	PublicIpId *string `pulumi:"publicIpId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
}

type InstanceEipAssociateState struct {
	EnableForceNew pulumi.StringPtrInput
	// Specifies the ID of an RDS instance.
	InstanceId pulumi.StringPtrInput
	// Specifies the EIP address to be bound.
	PublicIp pulumi.StringPtrInput
	// Specifies the EIP ID.
	PublicIpId pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
}

func (InstanceEipAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceEipAssociateState)(nil)).Elem()
}

type instanceEipAssociateArgs struct {
	EnableForceNew *string `pulumi:"enableForceNew"`
	// Specifies the ID of an RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the EIP address to be bound.
	PublicIp string `pulumi:"publicIp"`
	// Specifies the EIP ID.
	PublicIpId string `pulumi:"publicIpId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a InstanceEipAssociate resource.
type InstanceEipAssociateArgs struct {
	EnableForceNew pulumi.StringPtrInput
	// Specifies the ID of an RDS instance.
	InstanceId pulumi.StringInput
	// Specifies the EIP address to be bound.
	PublicIp pulumi.StringInput
	// Specifies the EIP ID.
	PublicIpId pulumi.StringInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
}

func (InstanceEipAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceEipAssociateArgs)(nil)).Elem()
}

type InstanceEipAssociateInput interface {
	pulumi.Input

	ToInstanceEipAssociateOutput() InstanceEipAssociateOutput
	ToInstanceEipAssociateOutputWithContext(ctx context.Context) InstanceEipAssociateOutput
}

func (*InstanceEipAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceEipAssociate)(nil)).Elem()
}

func (i *InstanceEipAssociate) ToInstanceEipAssociateOutput() InstanceEipAssociateOutput {
	return i.ToInstanceEipAssociateOutputWithContext(context.Background())
}

func (i *InstanceEipAssociate) ToInstanceEipAssociateOutputWithContext(ctx context.Context) InstanceEipAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEipAssociateOutput)
}

// InstanceEipAssociateArrayInput is an input type that accepts InstanceEipAssociateArray and InstanceEipAssociateArrayOutput values.
// You can construct a concrete instance of `InstanceEipAssociateArrayInput` via:
//
//	InstanceEipAssociateArray{ InstanceEipAssociateArgs{...} }
type InstanceEipAssociateArrayInput interface {
	pulumi.Input

	ToInstanceEipAssociateArrayOutput() InstanceEipAssociateArrayOutput
	ToInstanceEipAssociateArrayOutputWithContext(context.Context) InstanceEipAssociateArrayOutput
}

type InstanceEipAssociateArray []InstanceEipAssociateInput

func (InstanceEipAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceEipAssociate)(nil)).Elem()
}

func (i InstanceEipAssociateArray) ToInstanceEipAssociateArrayOutput() InstanceEipAssociateArrayOutput {
	return i.ToInstanceEipAssociateArrayOutputWithContext(context.Background())
}

func (i InstanceEipAssociateArray) ToInstanceEipAssociateArrayOutputWithContext(ctx context.Context) InstanceEipAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEipAssociateArrayOutput)
}

// InstanceEipAssociateMapInput is an input type that accepts InstanceEipAssociateMap and InstanceEipAssociateMapOutput values.
// You can construct a concrete instance of `InstanceEipAssociateMapInput` via:
//
//	InstanceEipAssociateMap{ "key": InstanceEipAssociateArgs{...} }
type InstanceEipAssociateMapInput interface {
	pulumi.Input

	ToInstanceEipAssociateMapOutput() InstanceEipAssociateMapOutput
	ToInstanceEipAssociateMapOutputWithContext(context.Context) InstanceEipAssociateMapOutput
}

type InstanceEipAssociateMap map[string]InstanceEipAssociateInput

func (InstanceEipAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceEipAssociate)(nil)).Elem()
}

func (i InstanceEipAssociateMap) ToInstanceEipAssociateMapOutput() InstanceEipAssociateMapOutput {
	return i.ToInstanceEipAssociateMapOutputWithContext(context.Background())
}

func (i InstanceEipAssociateMap) ToInstanceEipAssociateMapOutputWithContext(ctx context.Context) InstanceEipAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEipAssociateMapOutput)
}

type InstanceEipAssociateOutput struct{ *pulumi.OutputState }

func (InstanceEipAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceEipAssociate)(nil)).Elem()
}

func (o InstanceEipAssociateOutput) ToInstanceEipAssociateOutput() InstanceEipAssociateOutput {
	return o
}

func (o InstanceEipAssociateOutput) ToInstanceEipAssociateOutputWithContext(ctx context.Context) InstanceEipAssociateOutput {
	return o
}

func (o InstanceEipAssociateOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceEipAssociate) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// Specifies the ID of an RDS instance.
func (o InstanceEipAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceEipAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the EIP address to be bound.
func (o InstanceEipAssociateOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceEipAssociate) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// Specifies the EIP ID.
func (o InstanceEipAssociateOutput) PublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceEipAssociate) pulumi.StringOutput { return v.PublicIpId }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this creates a new resource.
func (o InstanceEipAssociateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceEipAssociate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type InstanceEipAssociateArrayOutput struct{ *pulumi.OutputState }

func (InstanceEipAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceEipAssociate)(nil)).Elem()
}

func (o InstanceEipAssociateArrayOutput) ToInstanceEipAssociateArrayOutput() InstanceEipAssociateArrayOutput {
	return o
}

func (o InstanceEipAssociateArrayOutput) ToInstanceEipAssociateArrayOutputWithContext(ctx context.Context) InstanceEipAssociateArrayOutput {
	return o
}

func (o InstanceEipAssociateArrayOutput) Index(i pulumi.IntInput) InstanceEipAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceEipAssociate {
		return vs[0].([]*InstanceEipAssociate)[vs[1].(int)]
	}).(InstanceEipAssociateOutput)
}

type InstanceEipAssociateMapOutput struct{ *pulumi.OutputState }

func (InstanceEipAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceEipAssociate)(nil)).Elem()
}

func (o InstanceEipAssociateMapOutput) ToInstanceEipAssociateMapOutput() InstanceEipAssociateMapOutput {
	return o
}

func (o InstanceEipAssociateMapOutput) ToInstanceEipAssociateMapOutputWithContext(ctx context.Context) InstanceEipAssociateMapOutput {
	return o
}

func (o InstanceEipAssociateMapOutput) MapIndex(k pulumi.StringInput) InstanceEipAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceEipAssociate {
		return vs[0].(map[string]*InstanceEipAssociate)[vs[1].(string)]
	}).(InstanceEipAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEipAssociateInput)(nil)).Elem(), &InstanceEipAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEipAssociateArrayInput)(nil)).Elem(), InstanceEipAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEipAssociateMapInput)(nil)).Elem(), InstanceEipAssociateMap{})
	pulumi.RegisterOutputType(InstanceEipAssociateOutput{})
	pulumi.RegisterOutputType(InstanceEipAssociateArrayOutput{})
	pulumi.RegisterOutputType(InstanceEipAssociateMapOutput{})
}
