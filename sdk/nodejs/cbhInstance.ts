// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CbhInstance extends pulumi.CustomResource {
    /**
     * Get an existing CbhInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CbhInstanceState, opts?: pulumi.CustomResourceOptions): CbhInstance {
        return new CbhInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/cbhInstance:CbhInstance';

    /**
     * Returns true if the given object is an instance of CbhInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CbhInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CbhInstance.__pulumiType;
    }

    /**
     * Specifies the size of the additional data disk for the CBH instance.
     */
    declare public readonly attachDiskSize: pulumi.Output<number | undefined>;
    /**
     * Specifies whether auto renew is enabled.
     */
    declare public readonly autoRenew: pulumi.Output<string | undefined>;
    /**
     * Specifies the availability zone name.
     */
    declare public readonly availabilityZone: pulumi.Output<string>;
    /**
     * Specifies the charging mode of the CBH instance.
     */
    declare public readonly chargingMode: pulumi.Output<string>;
    /**
     * Indicates the data disk size of the instance.
     */
    declare public /*out*/ readonly dataDiskSize: pulumi.Output<number>;
    /**
     * Specifies the enterprise project ID to which the CBH instance belongs.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * Specifies the product ID of the CBH server.
     */
    declare public readonly flavorId: pulumi.Output<string>;
    /**
     * Specifies whether the IPv6 network is enabled.
     */
    declare public readonly ipv6Enable: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the name of the CBH instance.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the password for logging in to the management console.
     */
    declare public readonly password: pulumi.Output<string>;
    /**
     * Specifies the charging period of the CBH instance.
     */
    declare public readonly period: pulumi.Output<number>;
    /**
     * Specifies the charging period unit of the instance.
     */
    declare public readonly periodUnit: pulumi.Output<string>;
    /**
     * Specifies the power action after the CBH instance is created.
     */
    declare public readonly powerAction: pulumi.Output<string | undefined>;
    /**
     * Indicates the private IP of the instance.
     */
    declare public /*out*/ readonly privateIp: pulumi.Output<string>;
    /**
     * schema: Computed; The elastic IP address.
     */
    declare public readonly publicIp: pulumi.Output<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    declare public readonly publicIpId: pulumi.Output<string | undefined>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the IDs of the security group.
     */
    declare public readonly securityGroupId: pulumi.Output<string>;
    /**
     * Indicates the status of the instance.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * Specifies the IP address of the subnet.
     */
    declare public readonly subnetAddress: pulumi.Output<string>;
    /**
     * Specifies the ID of a subnet.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string}>;
    /**
     * Indicates the current version of the instance image.
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;
    /**
     * Specifies the ID of a VPC.
     */
    declare public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a CbhInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CbhInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CbhInstanceArgs | CbhInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CbhInstanceState | undefined;
            resourceInputs["attachDiskSize"] = state?.attachDiskSize;
            resourceInputs["autoRenew"] = state?.autoRenew;
            resourceInputs["availabilityZone"] = state?.availabilityZone;
            resourceInputs["chargingMode"] = state?.chargingMode;
            resourceInputs["dataDiskSize"] = state?.dataDiskSize;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["flavorId"] = state?.flavorId;
            resourceInputs["ipv6Enable"] = state?.ipv6Enable;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["period"] = state?.period;
            resourceInputs["periodUnit"] = state?.periodUnit;
            resourceInputs["powerAction"] = state?.powerAction;
            resourceInputs["privateIp"] = state?.privateIp;
            resourceInputs["publicIp"] = state?.publicIp;
            resourceInputs["publicIpId"] = state?.publicIpId;
            resourceInputs["region"] = state?.region;
            resourceInputs["securityGroupId"] = state?.securityGroupId;
            resourceInputs["status"] = state?.status;
            resourceInputs["subnetAddress"] = state?.subnetAddress;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["version"] = state?.version;
            resourceInputs["vpcId"] = state?.vpcId;
        } else {
            const args = argsOrState as CbhInstanceArgs | undefined;
            if (args?.availabilityZone === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if (args?.chargingMode === undefined && !opts.urn) {
                throw new Error("Missing required property 'chargingMode'");
            }
            if (args?.flavorId === undefined && !opts.urn) {
                throw new Error("Missing required property 'flavorId'");
            }
            if (args?.password === undefined && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if (args?.period === undefined && !opts.urn) {
                throw new Error("Missing required property 'period'");
            }
            if (args?.periodUnit === undefined && !opts.urn) {
                throw new Error("Missing required property 'periodUnit'");
            }
            if (args?.securityGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.vpcId === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["attachDiskSize"] = args?.attachDiskSize;
            resourceInputs["autoRenew"] = args?.autoRenew;
            resourceInputs["availabilityZone"] = args?.availabilityZone;
            resourceInputs["chargingMode"] = args?.chargingMode;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["flavorId"] = args?.flavorId;
            resourceInputs["ipv6Enable"] = args?.ipv6Enable;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["period"] = args?.period;
            resourceInputs["periodUnit"] = args?.periodUnit;
            resourceInputs["powerAction"] = args?.powerAction;
            resourceInputs["publicIp"] = args?.publicIp;
            resourceInputs["publicIpId"] = args?.publicIpId;
            resourceInputs["region"] = args?.region;
            resourceInputs["securityGroupId"] = args?.securityGroupId;
            resourceInputs["subnetAddress"] = args?.subnetAddress;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["dataDiskSize"] = undefined /*out*/;
            resourceInputs["privateIp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CbhInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CbhInstance resources.
 */
export interface CbhInstanceState {
    /**
     * Specifies the size of the additional data disk for the CBH instance.
     */
    attachDiskSize?: pulumi.Input<number>;
    /**
     * Specifies whether auto renew is enabled.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the availability zone name.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Specifies the charging mode of the CBH instance.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Indicates the data disk size of the instance.
     */
    dataDiskSize?: pulumi.Input<number>;
    /**
     * Specifies the enterprise project ID to which the CBH instance belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the product ID of the CBH server.
     */
    flavorId?: pulumi.Input<string>;
    /**
     * Specifies whether the IPv6 network is enabled.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the CBH instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password for logging in to the management console.
     */
    password?: pulumi.Input<string>;
    /**
     * Specifies the charging period of the CBH instance.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the instance.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the power action after the CBH instance is created.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * Indicates the private IP of the instance.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * schema: Computed; The elastic IP address.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    publicIpId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Indicates the status of the instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the IP address of the subnet.
     */
    subnetAddress?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     */
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the current version of the instance image.
     */
    version?: pulumi.Input<string>;
    /**
     * Specifies the ID of a VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CbhInstance resource.
 */
export interface CbhInstanceArgs {
    /**
     * Specifies the size of the additional data disk for the CBH instance.
     */
    attachDiskSize?: pulumi.Input<number>;
    /**
     * Specifies whether auto renew is enabled.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the availability zone name.
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * Specifies the charging mode of the CBH instance.
     */
    chargingMode: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the CBH instance belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the product ID of the CBH server.
     */
    flavorId: pulumi.Input<string>;
    /**
     * Specifies whether the IPv6 network is enabled.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the CBH instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password for logging in to the management console.
     */
    password: pulumi.Input<string>;
    /**
     * Specifies the charging period of the CBH instance.
     */
    period: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the instance.
     */
    periodUnit: pulumi.Input<string>;
    /**
     * Specifies the power action after the CBH instance is created.
     */
    powerAction?: pulumi.Input<string>;
    /**
     * schema: Computed; The elastic IP address.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP.
     */
    publicIpId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the security group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies the IP address of the subnet.
     */
    subnetAddress?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet.
     */
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of a VPC.
     */
    vpcId: pulumi.Input<string>;
}
