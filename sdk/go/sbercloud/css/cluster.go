// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Manages CSS cluster resource within SberCloud
//
// ## Example Usage
//
// ### create a cluster
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			availabilityZone := cfg.RequireObject("availabilityZone")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			_, err := css.NewCluster(ctx, "cluster", &css.ClusterArgs{
//				Name:          pulumi.String("terraform_test_cluster"),
//				EngineVersion: pulumi.String("7.10.2"),
//				EssNodeConfig: &css.ClusterEssNodeConfigArgs{
//					Flavor:         pulumi.String("ess.spec-4u8g"),
//					InstanceNumber: pulumi.Int(1),
//					Volume: &css.ClusterEssNodeConfigVolumeArgs{
//						VolumeType: pulumi.String("HIGH"),
//						Size:       pulumi.Int(40),
//					},
//				},
//				AvailabilityZone: pulumi.Any(availabilityZone),
//				VpcId:            pulumi.Any(vpcId),
//				SubnetId:         pulumi.Any(subnetId),
//				SecurityGroupId:  pulumi.Any(secgroupId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### create a cluster with ess-data node and master node
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			availabilityZone := cfg.RequireObject("availabilityZone")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			_, err := css.NewCluster(ctx, "cluster", &css.ClusterArgs{
//				Name:          pulumi.String("terraform_test_cluster"),
//				EngineVersion: pulumi.String("7.10.2"),
//				EssNodeConfig: &css.ClusterEssNodeConfigArgs{
//					Flavor:         pulumi.String("ess.spec-4u8g"),
//					InstanceNumber: pulumi.Int(1),
//					Volume: &css.ClusterEssNodeConfigVolumeArgs{
//						VolumeType: pulumi.String("HIGH"),
//						Size:       pulumi.Int(40),
//					},
//				},
//				MasterNodeConfig: &css.ClusterMasterNodeConfigArgs{
//					Flavor:         pulumi.String("ess.spec-4u8g"),
//					InstanceNumber: pulumi.Int(3),
//					Volume: &css.ClusterMasterNodeConfigVolumeArgs{
//						VolumeType: pulumi.String("HIGH"),
//						Size:       pulumi.Int(40),
//					},
//				},
//				AvailabilityZone: pulumi.Any(availabilityZone),
//				VpcId:            pulumi.Any(vpcId),
//				SubnetId:         pulumi.Any(subnetId),
//				SecurityGroupId:  pulumi.Any(secgroupId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### create a cluster with ess-data node and cold node use local disk
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/css"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			availabilityZone := cfg.RequireObject("availabilityZone")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			secgroupId := cfg.RequireObject("secgroupId")
//			_, err := css.NewCluster(ctx, "cluster", &css.ClusterArgs{
//				Name:          pulumi.String("terraform_test_cluster"),
//				EngineVersion: pulumi.String("7.10.2"),
//				EssNodeConfig: &css.ClusterEssNodeConfigArgs{
//					Flavor:         pulumi.String("ess.spec-ds.xlarge.8"),
//					InstanceNumber: pulumi.Int(1),
//				},
//				ColdNodeConfig: &css.ClusterColdNodeConfigArgs{
//					Flavor:         pulumi.String("ess.spec-ds.2xlarge.8"),
//					InstanceNumber: pulumi.Int(2),
//				},
//				AvailabilityZone: pulumi.Any(availabilityZone),
//				VpcId:            pulumi.Any(vpcId),
//				SubnetId:         pulumi.Any(subnetId),
//				SecurityGroupId:  pulumi.Any(secgroupId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The CSS cluster can be imported by `id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import sbercloud:Css/cluster:Cluster test <id>
// ```
type Cluster struct {
	pulumi.CustomResourceState

	// Specifies whether auto renew is enabled.
	// The valid values are **true** and **false**, defaults to **false**.
	//
	// <a name="Css_ess_node_config"></a>
	// The `essNodeConfig` and `coldNodeConfig` block supports:
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the availability zone name.
	// Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
	// than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
	// distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
	// between node quantity in any two AZs is **1** at most.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Whether the snapshot function is enabled.
	BackupAvailable pulumi.BoolOutput `pulumi:"backupAvailable"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy ClusterBackupStrategyPtrOutput `pulumi:"backupStrategy"`
	// The resource ID of bandwidth.
	BandwidthResourceId pulumi.StringOutput `pulumi:"bandwidthResourceId"`
	// Specifies the charging mode of the cluster.
	// Valid value is **postPaid**, defaults to **postPaid**.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies the config of client node.
	// The clientNodeConfig structure is documented below.
	ClientNodeConfig ClusterClientNodeConfigPtrOutput `pulumi:"clientNodeConfig"`
	// Specifies the config of cold data node.
	// The coldNodeConfig structure is documented below.
	ColdNodeConfig ClusterColdNodeConfigPtrOutput `pulumi:"coldNodeConfig"`
	// schema: Deprecated; use createdAt instead
	Created pulumi.StringOutput `pulumi:"created"`
	// Time when a cluster is created. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Whether disks are encrypted.
	DiskEncrypted  pulumi.BoolOutput      `pulumi:"diskEncrypted"`
	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// The IP address and port number.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Specifies the engine type. The valid value can be **elasticsearch** or **opensearch**.
	// Defaults to **elasticsearch**. Changing this parameter will create a new resource.
	EngineType pulumi.StringPtrOutput `pulumi:"engineType"`
	// Specifies the engine version.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Specifies the enterprise project id of the css cluster, The value **0**
	// indicates the default enterprise project.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies the config of data node.
	// The essNodeConfig structure is documented below.
	EssNodeConfig ClusterEssNodeConfigOutput `pulumi:"essNodeConfig"`
	// Deprecated: please use ess_node_config.instance_number instead
	ExpectNodeNum pulumi.IntOutput `pulumi:"expectNodeNum"`
	// Specifies whether to enable HTTPS. Defaults to **false**.
	// When `httpsEnabled` is set to **true**, the `securityMode` needs to be set to **true**.
	// Changing this parameter will create a new resource.
	HttpsEnabled pulumi.BoolOutput `pulumi:"httpsEnabled"`
	// Whether a cluster is billed on the yearly/monthly mode.
	IsPeriod pulumi.BoolOutput `pulumi:"isPeriod"`
	// Specifies Kibana public network access information.
	// This parameter is valid only when securityMode is set to **true**.
	// The kibanaPublicAccess structure is documented below.
	KibanaPublicAccess ClusterKibanaPublicAccessPtrOutput `pulumi:"kibanaPublicAccess"`
	// Specifies the config of master node.
	// The masterNodeConfig structure is documented below.
	MasterNodeConfig ClusterMasterNodeConfigPtrOutput `pulumi:"masterNodeConfig"`
	// Specifies the cluster name. It contains `4` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
	// Changing this parameter will create a new resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Deprecated: please use essNodeConfig instead
	NodeConfig ClusterNodeConfigOutput `pulumi:"nodeConfig"`
	// List of node objects.
	// The nodes structure is documented below.
	Nodes ClusterNodeArrayOutput `pulumi:"nodes"`
	// Specifies the password of the cluster administrator in security mode.
	// This parameter is mandatory only when `securityMode` is set to true.
	// The administrator password must meet the following requirements:
	// + The password can contain 8 to 32 characters.
	// + The password must contain at least 3 of the following character types: uppercase letters, lowercase letters, digits,
	//   and special characters (~!@#$%^&*()-_=+\\|[{}];:,<.>/?).
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to **month**, the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `9`.
	//
	// > **NOTE:** `chargingMode`, `periodUnit`, `period` can only be updated when changing
	// from **postPaid** to **prePaid** billing mode.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Specifies the public network access information.
	// The publicAccess structure is documented below.
	PublicAccess ClusterPublicAccessPtrOutput `pulumi:"publicAccess"`
	// Specifies the region in which to create the cluster resource. If omitted, the
	// provider-level region will be used. Changing this creates a new cluster resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the security group ID.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies whether to enable authentication.
	// The value can be **true** or **false**. Authentication is disabled by default.
	// + **true:** Authentication is enabled for the cluster.
	// + **false:** Authentication is disabled for the cluster.
	//
	// > **Note:** This parameter is supported in clusters 6.5.4 or later. Exercise caution when performing this operation.
	// The cluster will be restarted to apply the changes. Services will be interrupted for a while.
	// After the cluster is restarted, the authentication mode for invoking the cluster changes.
	// You need to adjust the authentication mode accordingly.
	SecurityMode pulumi.BoolPtrOutput `pulumi:"securityMode"`
	// Instance status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the Subnet ID.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The key/value pairs to associate with the cluster.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Time when a cluster is updated. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Specifies the VPC ID.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// Specifies the VPC endpoint service information.
	// The vpcepEndpoint structure is documented below.
	VpcepEndpoint ClusterVpcepEndpointPtrOutput `pulumi:"vpcepEndpoint"`
	// The VPC endpoint service ID.
	VpcepEndpointId pulumi.StringOutput `pulumi:"vpcepEndpointId"`
	// The private IP address of VPC endpoint service.
	VpcepIp pulumi.StringOutput `pulumi:"vpcepIp"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cluster
	err := ctx.RegisterResource("sbercloud:Css/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("sbercloud:Css/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// Specifies whether auto renew is enabled.
	// The valid values are **true** and **false**, defaults to **false**.
	//
	// <a name="Css_ess_node_config"></a>
	// The `essNodeConfig` and `coldNodeConfig` block supports:
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone name.
	// Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
	// than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
	// distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
	// between node quantity in any two AZs is **1** at most.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Whether the snapshot function is enabled.
	BackupAvailable *bool `pulumi:"backupAvailable"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *ClusterBackupStrategy `pulumi:"backupStrategy"`
	// The resource ID of bandwidth.
	BandwidthResourceId *string `pulumi:"bandwidthResourceId"`
	// Specifies the charging mode of the cluster.
	// Valid value is **postPaid**, defaults to **postPaid**.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the config of client node.
	// The clientNodeConfig structure is documented below.
	ClientNodeConfig *ClusterClientNodeConfig `pulumi:"clientNodeConfig"`
	// Specifies the config of cold data node.
	// The coldNodeConfig structure is documented below.
	ColdNodeConfig *ClusterColdNodeConfig `pulumi:"coldNodeConfig"`
	// schema: Deprecated; use createdAt instead
	Created *string `pulumi:"created"`
	// Time when a cluster is created. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether disks are encrypted.
	DiskEncrypted  *bool   `pulumi:"diskEncrypted"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// The IP address and port number.
	Endpoint *string `pulumi:"endpoint"`
	// Specifies the engine type. The valid value can be **elasticsearch** or **opensearch**.
	// Defaults to **elasticsearch**. Changing this parameter will create a new resource.
	EngineType *string `pulumi:"engineType"`
	// Specifies the engine version.
	EngineVersion *string `pulumi:"engineVersion"`
	// Specifies the enterprise project id of the css cluster, The value **0**
	// indicates the default enterprise project.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the config of data node.
	// The essNodeConfig structure is documented below.
	EssNodeConfig *ClusterEssNodeConfig `pulumi:"essNodeConfig"`
	// Deprecated: please use ess_node_config.instance_number instead
	ExpectNodeNum *int `pulumi:"expectNodeNum"`
	// Specifies whether to enable HTTPS. Defaults to **false**.
	// When `httpsEnabled` is set to **true**, the `securityMode` needs to be set to **true**.
	// Changing this parameter will create a new resource.
	HttpsEnabled *bool `pulumi:"httpsEnabled"`
	// Whether a cluster is billed on the yearly/monthly mode.
	IsPeriod *bool `pulumi:"isPeriod"`
	// Specifies Kibana public network access information.
	// This parameter is valid only when securityMode is set to **true**.
	// The kibanaPublicAccess structure is documented below.
	KibanaPublicAccess *ClusterKibanaPublicAccess `pulumi:"kibanaPublicAccess"`
	// Specifies the config of master node.
	// The masterNodeConfig structure is documented below.
	MasterNodeConfig *ClusterMasterNodeConfig `pulumi:"masterNodeConfig"`
	// Specifies the cluster name. It contains `4` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
	// Changing this parameter will create a new resource.
	Name *string `pulumi:"name"`
	// Deprecated: please use essNodeConfig instead
	NodeConfig *ClusterNodeConfig `pulumi:"nodeConfig"`
	// List of node objects.
	// The nodes structure is documented below.
	Nodes []ClusterNode `pulumi:"nodes"`
	// Specifies the password of the cluster administrator in security mode.
	// This parameter is mandatory only when `securityMode` is set to true.
	// The administrator password must meet the following requirements:
	// + The password can contain 8 to 32 characters.
	// + The password must contain at least 3 of the following character types: uppercase letters, lowercase letters, digits,
	//   and special characters (~!@#$%^&*()-_=+\\|[{}];:,<.>/?).
	Password *string `pulumi:"password"`
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to **month**, the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `9`.
	//
	// > **NOTE:** `chargingMode`, `periodUnit`, `period` can only be updated when changing
	// from **postPaid** to **prePaid** billing mode.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the public network access information.
	// The publicAccess structure is documented below.
	PublicAccess *ClusterPublicAccess `pulumi:"publicAccess"`
	// Specifies the region in which to create the cluster resource. If omitted, the
	// provider-level region will be used. Changing this creates a new cluster resource.
	Region *string `pulumi:"region"`
	// Specifies the security group ID.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies whether to enable authentication.
	// The value can be **true** or **false**. Authentication is disabled by default.
	// + **true:** Authentication is enabled for the cluster.
	// + **false:** Authentication is disabled for the cluster.
	//
	// > **Note:** This parameter is supported in clusters 6.5.4 or later. Exercise caution when performing this operation.
	// The cluster will be restarted to apply the changes. Services will be interrupted for a while.
	// After the cluster is restarted, the authentication mode for invoking the cluster changes.
	// You need to adjust the authentication mode accordingly.
	SecurityMode *bool `pulumi:"securityMode"`
	// Instance status.
	Status *string `pulumi:"status"`
	// Specifies the Subnet ID.
	// Changing this parameter will create a new resource.
	SubnetId *string `pulumi:"subnetId"`
	// The key/value pairs to associate with the cluster.
	Tags map[string]string `pulumi:"tags"`
	// Time when a cluster is updated. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Specifies the VPC ID.
	// Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
	// Specifies the VPC endpoint service information.
	// The vpcepEndpoint structure is documented below.
	VpcepEndpoint *ClusterVpcepEndpoint `pulumi:"vpcepEndpoint"`
	// The VPC endpoint service ID.
	VpcepEndpointId *string `pulumi:"vpcepEndpointId"`
	// The private IP address of VPC endpoint service.
	VpcepIp *string `pulumi:"vpcepIp"`
}

type ClusterState struct {
	// Specifies whether auto renew is enabled.
	// The valid values are **true** and **false**, defaults to **false**.
	//
	// <a name="Css_ess_node_config"></a>
	// The `essNodeConfig` and `coldNodeConfig` block supports:
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone name.
	// Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
	// than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
	// distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
	// between node quantity in any two AZs is **1** at most.
	AvailabilityZone pulumi.StringPtrInput
	// Whether the snapshot function is enabled.
	BackupAvailable pulumi.BoolPtrInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy ClusterBackupStrategyPtrInput
	// The resource ID of bandwidth.
	BandwidthResourceId pulumi.StringPtrInput
	// Specifies the charging mode of the cluster.
	// Valid value is **postPaid**, defaults to **postPaid**.
	ChargingMode pulumi.StringPtrInput
	// Specifies the config of client node.
	// The clientNodeConfig structure is documented below.
	ClientNodeConfig ClusterClientNodeConfigPtrInput
	// Specifies the config of cold data node.
	// The coldNodeConfig structure is documented below.
	ColdNodeConfig ClusterColdNodeConfigPtrInput
	// schema: Deprecated; use createdAt instead
	Created pulumi.StringPtrInput
	// Time when a cluster is created. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
	CreatedAt pulumi.StringPtrInput
	// Whether disks are encrypted.
	DiskEncrypted  pulumi.BoolPtrInput
	EnableForceNew pulumi.StringPtrInput
	// The IP address and port number.
	Endpoint pulumi.StringPtrInput
	// Specifies the engine type. The valid value can be **elasticsearch** or **opensearch**.
	// Defaults to **elasticsearch**. Changing this parameter will create a new resource.
	EngineType pulumi.StringPtrInput
	// Specifies the engine version.
	EngineVersion pulumi.StringPtrInput
	// Specifies the enterprise project id of the css cluster, The value **0**
	// indicates the default enterprise project.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the config of data node.
	// The essNodeConfig structure is documented below.
	EssNodeConfig ClusterEssNodeConfigPtrInput
	// Deprecated: please use ess_node_config.instance_number instead
	ExpectNodeNum pulumi.IntPtrInput
	// Specifies whether to enable HTTPS. Defaults to **false**.
	// When `httpsEnabled` is set to **true**, the `securityMode` needs to be set to **true**.
	// Changing this parameter will create a new resource.
	HttpsEnabled pulumi.BoolPtrInput
	// Whether a cluster is billed on the yearly/monthly mode.
	IsPeriod pulumi.BoolPtrInput
	// Specifies Kibana public network access information.
	// This parameter is valid only when securityMode is set to **true**.
	// The kibanaPublicAccess structure is documented below.
	KibanaPublicAccess ClusterKibanaPublicAccessPtrInput
	// Specifies the config of master node.
	// The masterNodeConfig structure is documented below.
	MasterNodeConfig ClusterMasterNodeConfigPtrInput
	// Specifies the cluster name. It contains `4` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
	// Changing this parameter will create a new resource.
	Name pulumi.StringPtrInput
	// Deprecated: please use essNodeConfig instead
	NodeConfig ClusterNodeConfigPtrInput
	// List of node objects.
	// The nodes structure is documented below.
	Nodes ClusterNodeArrayInput
	// Specifies the password of the cluster administrator in security mode.
	// This parameter is mandatory only when `securityMode` is set to true.
	// The administrator password must meet the following requirements:
	// + The password can contain 8 to 32 characters.
	// + The password must contain at least 3 of the following character types: uppercase letters, lowercase letters, digits,
	//   and special characters (~!@#$%^&*()-_=+\\|[{}];:,<.>/?).
	Password pulumi.StringPtrInput
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to **month**, the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `9`.
	//
	// > **NOTE:** `chargingMode`, `periodUnit`, `period` can only be updated when changing
	// from **postPaid** to **prePaid** billing mode.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the public network access information.
	// The publicAccess structure is documented below.
	PublicAccess ClusterPublicAccessPtrInput
	// Specifies the region in which to create the cluster resource. If omitted, the
	// provider-level region will be used. Changing this creates a new cluster resource.
	Region pulumi.StringPtrInput
	// Specifies the security group ID.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies whether to enable authentication.
	// The value can be **true** or **false**. Authentication is disabled by default.
	// + **true:** Authentication is enabled for the cluster.
	// + **false:** Authentication is disabled for the cluster.
	//
	// > **Note:** This parameter is supported in clusters 6.5.4 or later. Exercise caution when performing this operation.
	// The cluster will be restarted to apply the changes. Services will be interrupted for a while.
	// After the cluster is restarted, the authentication mode for invoking the cluster changes.
	// You need to adjust the authentication mode accordingly.
	SecurityMode pulumi.BoolPtrInput
	// Instance status.
	Status pulumi.StringPtrInput
	// Specifies the Subnet ID.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringPtrInput
	// The key/value pairs to associate with the cluster.
	Tags pulumi.StringMapInput
	// Time when a cluster is updated. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
	UpdatedAt pulumi.StringPtrInput
	// Specifies the VPC ID.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
	// Specifies the VPC endpoint service information.
	// The vpcepEndpoint structure is documented below.
	VpcepEndpoint ClusterVpcepEndpointPtrInput
	// The VPC endpoint service ID.
	VpcepEndpointId pulumi.StringPtrInput
	// The private IP address of VPC endpoint service.
	VpcepIp pulumi.StringPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// Specifies whether auto renew is enabled.
	// The valid values are **true** and **false**, defaults to **false**.
	//
	// <a name="Css_ess_node_config"></a>
	// The `essNodeConfig` and `coldNodeConfig` block supports:
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone name.
	// Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
	// than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
	// distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
	// between node quantity in any two AZs is **1** at most.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *ClusterBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of the cluster.
	// Valid value is **postPaid**, defaults to **postPaid**.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the config of client node.
	// The clientNodeConfig structure is documented below.
	ClientNodeConfig *ClusterClientNodeConfig `pulumi:"clientNodeConfig"`
	// Specifies the config of cold data node.
	// The coldNodeConfig structure is documented below.
	ColdNodeConfig *ClusterColdNodeConfig `pulumi:"coldNodeConfig"`
	EnableForceNew *string                `pulumi:"enableForceNew"`
	// Specifies the engine type. The valid value can be **elasticsearch** or **opensearch**.
	// Defaults to **elasticsearch**. Changing this parameter will create a new resource.
	EngineType *string `pulumi:"engineType"`
	// Specifies the engine version.
	EngineVersion string `pulumi:"engineVersion"`
	// Specifies the enterprise project id of the css cluster, The value **0**
	// indicates the default enterprise project.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the config of data node.
	// The essNodeConfig structure is documented below.
	EssNodeConfig *ClusterEssNodeConfig `pulumi:"essNodeConfig"`
	// Deprecated: please use ess_node_config.instance_number instead
	ExpectNodeNum *int `pulumi:"expectNodeNum"`
	// Specifies whether to enable HTTPS. Defaults to **false**.
	// When `httpsEnabled` is set to **true**, the `securityMode` needs to be set to **true**.
	// Changing this parameter will create a new resource.
	HttpsEnabled *bool `pulumi:"httpsEnabled"`
	// Specifies Kibana public network access information.
	// This parameter is valid only when securityMode is set to **true**.
	// The kibanaPublicAccess structure is documented below.
	KibanaPublicAccess *ClusterKibanaPublicAccess `pulumi:"kibanaPublicAccess"`
	// Specifies the config of master node.
	// The masterNodeConfig structure is documented below.
	MasterNodeConfig *ClusterMasterNodeConfig `pulumi:"masterNodeConfig"`
	// Specifies the cluster name. It contains `4` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
	// Changing this parameter will create a new resource.
	Name *string `pulumi:"name"`
	// Deprecated: please use essNodeConfig instead
	NodeConfig *ClusterNodeConfig `pulumi:"nodeConfig"`
	// Specifies the password of the cluster administrator in security mode.
	// This parameter is mandatory only when `securityMode` is set to true.
	// The administrator password must meet the following requirements:
	// + The password can contain 8 to 32 characters.
	// + The password must contain at least 3 of the following character types: uppercase letters, lowercase letters, digits,
	//   and special characters (~!@#$%^&*()-_=+\\|[{}];:,<.>/?).
	Password *string `pulumi:"password"`
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to **month**, the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `9`.
	//
	// > **NOTE:** `chargingMode`, `periodUnit`, `period` can only be updated when changing
	// from **postPaid** to **prePaid** billing mode.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the public network access information.
	// The publicAccess structure is documented below.
	PublicAccess *ClusterPublicAccess `pulumi:"publicAccess"`
	// Specifies the region in which to create the cluster resource. If omitted, the
	// provider-level region will be used. Changing this creates a new cluster resource.
	Region *string `pulumi:"region"`
	// Specifies the security group ID.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies whether to enable authentication.
	// The value can be **true** or **false**. Authentication is disabled by default.
	// + **true:** Authentication is enabled for the cluster.
	// + **false:** Authentication is disabled for the cluster.
	//
	// > **Note:** This parameter is supported in clusters 6.5.4 or later. Exercise caution when performing this operation.
	// The cluster will be restarted to apply the changes. Services will be interrupted for a while.
	// After the cluster is restarted, the authentication mode for invoking the cluster changes.
	// You need to adjust the authentication mode accordingly.
	SecurityMode *bool `pulumi:"securityMode"`
	// Specifies the Subnet ID.
	// Changing this parameter will create a new resource.
	SubnetId *string `pulumi:"subnetId"`
	// The key/value pairs to associate with the cluster.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the VPC ID.
	// Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
	// Specifies the VPC endpoint service information.
	// The vpcepEndpoint structure is documented below.
	VpcepEndpoint *ClusterVpcepEndpoint `pulumi:"vpcepEndpoint"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// Specifies whether auto renew is enabled.
	// The valid values are **true** and **false**, defaults to **false**.
	//
	// <a name="Css_ess_node_config"></a>
	// The `essNodeConfig` and `coldNodeConfig` block supports:
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone name.
	// Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
	// than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
	// distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
	// between node quantity in any two AZs is **1** at most.
	AvailabilityZone pulumi.StringPtrInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy ClusterBackupStrategyPtrInput
	// Specifies the charging mode of the cluster.
	// Valid value is **postPaid**, defaults to **postPaid**.
	ChargingMode pulumi.StringPtrInput
	// Specifies the config of client node.
	// The clientNodeConfig structure is documented below.
	ClientNodeConfig ClusterClientNodeConfigPtrInput
	// Specifies the config of cold data node.
	// The coldNodeConfig structure is documented below.
	ColdNodeConfig ClusterColdNodeConfigPtrInput
	EnableForceNew pulumi.StringPtrInput
	// Specifies the engine type. The valid value can be **elasticsearch** or **opensearch**.
	// Defaults to **elasticsearch**. Changing this parameter will create a new resource.
	EngineType pulumi.StringPtrInput
	// Specifies the engine version.
	EngineVersion pulumi.StringInput
	// Specifies the enterprise project id of the css cluster, The value **0**
	// indicates the default enterprise project.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the config of data node.
	// The essNodeConfig structure is documented below.
	EssNodeConfig ClusterEssNodeConfigPtrInput
	// Deprecated: please use ess_node_config.instance_number instead
	ExpectNodeNum pulumi.IntPtrInput
	// Specifies whether to enable HTTPS. Defaults to **false**.
	// When `httpsEnabled` is set to **true**, the `securityMode` needs to be set to **true**.
	// Changing this parameter will create a new resource.
	HttpsEnabled pulumi.BoolPtrInput
	// Specifies Kibana public network access information.
	// This parameter is valid only when securityMode is set to **true**.
	// The kibanaPublicAccess structure is documented below.
	KibanaPublicAccess ClusterKibanaPublicAccessPtrInput
	// Specifies the config of master node.
	// The masterNodeConfig structure is documented below.
	MasterNodeConfig ClusterMasterNodeConfigPtrInput
	// Specifies the cluster name. It contains `4` to `32` characters.
	// Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
	// Changing this parameter will create a new resource.
	Name pulumi.StringPtrInput
	// Deprecated: please use essNodeConfig instead
	NodeConfig ClusterNodeConfigPtrInput
	// Specifies the password of the cluster administrator in security mode.
	// This parameter is mandatory only when `securityMode` is set to true.
	// The administrator password must meet the following requirements:
	// + The password can contain 8 to 32 characters.
	// + The password must contain at least 3 of the following character types: uppercase letters, lowercase letters, digits,
	//   and special characters (~!@#$%^&*()-_=+\\|[{}];:,<.>/?).
	Password pulumi.StringPtrInput
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to **month**, the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `9`.
	//
	// > **NOTE:** `chargingMode`, `periodUnit`, `period` can only be updated when changing
	// from **postPaid** to **prePaid** billing mode.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the public network access information.
	// The publicAccess structure is documented below.
	PublicAccess ClusterPublicAccessPtrInput
	// Specifies the region in which to create the cluster resource. If omitted, the
	// provider-level region will be used. Changing this creates a new cluster resource.
	Region pulumi.StringPtrInput
	// Specifies the security group ID.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies whether to enable authentication.
	// The value can be **true** or **false**. Authentication is disabled by default.
	// + **true:** Authentication is enabled for the cluster.
	// + **false:** Authentication is disabled for the cluster.
	//
	// > **Note:** This parameter is supported in clusters 6.5.4 or later. Exercise caution when performing this operation.
	// The cluster will be restarted to apply the changes. Services will be interrupted for a while.
	// After the cluster is restarted, the authentication mode for invoking the cluster changes.
	// You need to adjust the authentication mode accordingly.
	SecurityMode pulumi.BoolPtrInput
	// Specifies the Subnet ID.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringPtrInput
	// The key/value pairs to associate with the cluster.
	Tags pulumi.StringMapInput
	// Specifies the VPC ID.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
	// Specifies the VPC endpoint service information.
	// The vpcepEndpoint structure is documented below.
	VpcepEndpoint ClusterVpcepEndpointPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// Specifies whether auto renew is enabled.
// The valid values are **true** and **false**, defaults to **false**.
//
// <a name="Css_ess_node_config"></a>
// The `essNodeConfig` and `coldNodeConfig` block supports:
func (o ClusterOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the availability zone name.
// Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
// than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
// distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
// between node quantity in any two AZs is **1** at most.
func (o ClusterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Whether the snapshot function is enabled.
func (o ClusterOutput) BackupAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.BackupAvailable }).(pulumi.BoolOutput)
}

// Specifies the advanced backup policy. Structure is documented below.
func (o ClusterOutput) BackupStrategy() ClusterBackupStrategyPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterBackupStrategyPtrOutput { return v.BackupStrategy }).(ClusterBackupStrategyPtrOutput)
}

// The resource ID of bandwidth.
func (o ClusterOutput) BandwidthResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.BandwidthResourceId }).(pulumi.StringOutput)
}

// Specifies the charging mode of the cluster.
// Valid value is **postPaid**, defaults to **postPaid**.
func (o ClusterOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies the config of client node.
// The clientNodeConfig structure is documented below.
func (o ClusterOutput) ClientNodeConfig() ClusterClientNodeConfigPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterClientNodeConfigPtrOutput { return v.ClientNodeConfig }).(ClusterClientNodeConfigPtrOutput)
}

// Specifies the config of cold data node.
// The coldNodeConfig structure is documented below.
func (o ClusterOutput) ColdNodeConfig() ClusterColdNodeConfigPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterColdNodeConfigPtrOutput { return v.ColdNodeConfig }).(ClusterColdNodeConfigPtrOutput)
}

// schema: Deprecated; use createdAt instead
func (o ClusterOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Time when a cluster is created. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
func (o ClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Whether disks are encrypted.
func (o ClusterOutput) DiskEncrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.DiskEncrypted }).(pulumi.BoolOutput)
}

func (o ClusterOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// The IP address and port number.
func (o ClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Specifies the engine type. The valid value can be **elasticsearch** or **opensearch**.
// Defaults to **elasticsearch**. Changing this parameter will create a new resource.
func (o ClusterOutput) EngineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.EngineType }).(pulumi.StringPtrOutput)
}

// Specifies the engine version.
func (o ClusterOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// Specifies the enterprise project id of the css cluster, The value **0**
// indicates the default enterprise project.
func (o ClusterOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies the config of data node.
// The essNodeConfig structure is documented below.
func (o ClusterOutput) EssNodeConfig() ClusterEssNodeConfigOutput {
	return o.ApplyT(func(v *Cluster) ClusterEssNodeConfigOutput { return v.EssNodeConfig }).(ClusterEssNodeConfigOutput)
}

// Deprecated: please use ess_node_config.instance_number instead
func (o ClusterOutput) ExpectNodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntOutput { return v.ExpectNodeNum }).(pulumi.IntOutput)
}

// Specifies whether to enable HTTPS. Defaults to **false**.
// When `httpsEnabled` is set to **true**, the `securityMode` needs to be set to **true**.
// Changing this parameter will create a new resource.
func (o ClusterOutput) HttpsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.HttpsEnabled }).(pulumi.BoolOutput)
}

// Whether a cluster is billed on the yearly/monthly mode.
func (o ClusterOutput) IsPeriod() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.IsPeriod }).(pulumi.BoolOutput)
}

// Specifies Kibana public network access information.
// This parameter is valid only when securityMode is set to **true**.
// The kibanaPublicAccess structure is documented below.
func (o ClusterOutput) KibanaPublicAccess() ClusterKibanaPublicAccessPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterKibanaPublicAccessPtrOutput { return v.KibanaPublicAccess }).(ClusterKibanaPublicAccessPtrOutput)
}

// Specifies the config of master node.
// The masterNodeConfig structure is documented below.
func (o ClusterOutput) MasterNodeConfig() ClusterMasterNodeConfigPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterMasterNodeConfigPtrOutput { return v.MasterNodeConfig }).(ClusterMasterNodeConfigPtrOutput)
}

// Specifies the cluster name. It contains `4` to `32` characters.
// Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
// Changing this parameter will create a new resource.
func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: please use essNodeConfig instead
func (o ClusterOutput) NodeConfig() ClusterNodeConfigOutput {
	return o.ApplyT(func(v *Cluster) ClusterNodeConfigOutput { return v.NodeConfig }).(ClusterNodeConfigOutput)
}

// List of node objects.
// The nodes structure is documented below.
func (o ClusterOutput) Nodes() ClusterNodeArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterNodeArrayOutput { return v.Nodes }).(ClusterNodeArrayOutput)
}

// Specifies the password of the cluster administrator in security mode.
// This parameter is mandatory only when `securityMode` is set to true.
// The administrator password must meet the following requirements:
//   - The password can contain 8 to 32 characters.
//   - The password must contain at least 3 of the following character types: uppercase letters, lowercase letters, digits,
//     and special characters (~!@#$%^&*()-_=+\\|[{}];:,<.>/?).
func (o ClusterOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Specifies the charging period of the instance.
// If `periodUnit` is set to **month**, the value ranges from `1` to `9`.
// If `periodUnit` is set to **year**, the value ranges from `1` to `9`.
//
// > **NOTE:** `chargingMode`, `periodUnit`, `period` can only be updated when changing
// from **postPaid** to **prePaid** billing mode.
func (o ClusterOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the instance.
// Valid values are **month** and **year**.
func (o ClusterOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Specifies the public network access information.
// The publicAccess structure is documented below.
func (o ClusterOutput) PublicAccess() ClusterPublicAccessPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterPublicAccessPtrOutput { return v.PublicAccess }).(ClusterPublicAccessPtrOutput)
}

// Specifies the region in which to create the cluster resource. If omitted, the
// provider-level region will be used. Changing this creates a new cluster resource.
func (o ClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the security group ID.
func (o ClusterOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies whether to enable authentication.
// The value can be **true** or **false**. Authentication is disabled by default.
// + **true:** Authentication is enabled for the cluster.
// + **false:** Authentication is disabled for the cluster.
//
// > **Note:** This parameter is supported in clusters 6.5.4 or later. Exercise caution when performing this operation.
// The cluster will be restarted to apply the changes. Services will be interrupted for a while.
// After the cluster is restarted, the authentication mode for invoking the cluster changes.
// You need to adjust the authentication mode accordingly.
func (o ClusterOutput) SecurityMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.SecurityMode }).(pulumi.BoolPtrOutput)
}

// Instance status.
func (o ClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the Subnet ID.
// Changing this parameter will create a new resource.
func (o ClusterOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The key/value pairs to associate with the cluster.
func (o ClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Time when a cluster is updated. The format is ISO8601: CCYY-MM-DDThh:mm:ss.
func (o ClusterOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Specifies the VPC ID.
// Changing this parameter will create a new resource.
func (o ClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// Specifies the VPC endpoint service information.
// The vpcepEndpoint structure is documented below.
func (o ClusterOutput) VpcepEndpoint() ClusterVpcepEndpointPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterVpcepEndpointPtrOutput { return v.VpcepEndpoint }).(ClusterVpcepEndpointPtrOutput)
}

// The VPC endpoint service ID.
func (o ClusterOutput) VpcepEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VpcepEndpointId }).(pulumi.StringOutput)
}

// The private IP address of VPC endpoint service.
func (o ClusterOutput) VpcepIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.VpcepIp }).(pulumi.StringOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
