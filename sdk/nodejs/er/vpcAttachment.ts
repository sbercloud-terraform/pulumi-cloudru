// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a VPC attachment resource under the ER instance within SberCloud.
 *
 * Before using enterprise router, define custom endpoint as shown below:
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * ```
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "pulumi-cloudru";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject<any>("instanceId");
 * const vpcId = config.requireObject<any>("vpcId");
 * const subnetId = config.requireObject<any>("subnetId");
 * const attachmentName = config.requireObject<any>("attachmentName");
 * const test = new sbercloud.er.VpcAttachment("test", {
 *     instanceId: instanceId,
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     name: attachmentName,
 *     description: "VPC attachment created by terraform",
 *     autoCreateVpcRoutes: true,
 *     tags: {
 *         foo: "bar",
 *         owner: "terraform",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VPC attachments can be imported using their `id` and the related `instance_id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import sbercloud:Er/vpcAttachment:VpcAttachment test <instance_id>/<id>
 * ```
 */
export class VpcAttachment extends pulumi.CustomResource {
    /**
     * Get an existing VpcAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcAttachmentState, opts?: pulumi.CustomResourceOptions): VpcAttachment {
        return new VpcAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:Er/vpcAttachment:VpcAttachment';

    /**
     * Returns true if the given object is an instance of VpcAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcAttachment.__pulumiType;
    }

    /**
     * Specifies whether to automatically configure routes for the VPC
     * which pointing to the ER instance.
     * The destination CIDRs of the routes are fixed as follows:
     * + **10.0.0.0/8**
     * + **172.16.0.0/12**
     * + **192.168.0.0/16**
     *
     * The default value is false. Changing this parameter will create a new resource.
     */
    public readonly autoCreateVpcRoutes!: pulumi.Output<boolean>;
    /**
     * The creation time.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the description of the VPC attachment.  
     * The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the ER instance to which the VPC attachment
     * belongs.
     * Changing this parameter will create a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the name of the VPC attachment.  
     * The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
     * hyphens (-) and dots (.) allowed.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region where the ER instance and the VPC attachment are
     * located.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The current status of the VPC attachment.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the ID of the VPC subnet to which the VPC attachment belongs.  
     * Changing this parameter will create a new resource.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the VPC attachment.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The latest update time.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Specifies the ID of the VPC to which the VPC attachment belongs.  
     * Changing this parameter will create a new resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcAttachmentArgs | VpcAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcAttachmentState | undefined;
            resourceInputs["autoCreateVpcRoutes"] = state ? state.autoCreateVpcRoutes : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VpcAttachmentArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoCreateVpcRoutes"] = args ? args.autoCreateVpcRoutes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcAttachment resources.
 */
export interface VpcAttachmentState {
    /**
     * Specifies whether to automatically configure routes for the VPC
     * which pointing to the ER instance.
     * The destination CIDRs of the routes are fixed as follows:
     * + **10.0.0.0/8**
     * + **172.16.0.0/12**
     * + **192.168.0.0/16**
     *
     * The default value is false. Changing this parameter will create a new resource.
     */
    autoCreateVpcRoutes?: pulumi.Input<boolean>;
    /**
     * The creation time.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the description of the VPC attachment.  
     * The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the ER instance to which the VPC attachment
     * belongs.
     * Changing this parameter will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the name of the VPC attachment.  
     * The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
     * hyphens (-) and dots (.) allowed.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the ER instance and the VPC attachment are
     * located.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The current status of the VPC attachment.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the ID of the VPC subnet to which the VPC attachment belongs.  
     * Changing this parameter will create a new resource.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the VPC attachment.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The latest update time.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Specifies the ID of the VPC to which the VPC attachment belongs.  
     * Changing this parameter will create a new resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcAttachment resource.
 */
export interface VpcAttachmentArgs {
    /**
     * Specifies whether to automatically configure routes for the VPC
     * which pointing to the ER instance.
     * The destination CIDRs of the routes are fixed as follows:
     * + **10.0.0.0/8**
     * + **172.16.0.0/12**
     * + **192.168.0.0/16**
     *
     * The default value is false. Changing this parameter will create a new resource.
     */
    autoCreateVpcRoutes?: pulumi.Input<boolean>;
    /**
     * Specifies the description of the VPC attachment.  
     * The description contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the ER instance to which the VPC attachment
     * belongs.
     * Changing this parameter will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the name of the VPC attachment.  
     * The name can contain `1` to `64` characters, only English letters, Chinese characters, digits, underscore (_),
     * hyphens (-) and dots (.) allowed.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the ER instance and the VPC attachment are
     * located.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the VPC subnet to which the VPC attachment belongs.  
     * Changing this parameter will create a new resource.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the VPC attachment.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of the VPC to which the VPC attachment belongs.  
     * Changing this parameter will create a new resource.
     */
    vpcId: pulumi.Input<string>;
}
