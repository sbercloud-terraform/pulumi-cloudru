// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getResourceTags(args: GetResourceTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceTagsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudru:Er/getResourceTags:getResourceTags", {
        "region": args.region,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceTags.
 */
export interface GetResourceTagsArgs {
    region?: string;
    resourceId: string;
    resourceType: string;
}

/**
 * A collection of values returned by getResourceTags.
 */
export interface GetResourceTagsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    readonly resourceId: string;
    readonly resourceType: string;
    readonly tags: {[key: string]: string};
}
export function getResourceTagsOutput(args: GetResourceTagsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourceTagsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudru:Er/getResourceTags:getResourceTags", {
        "region": args.region,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceTags.
 */
export interface GetResourceTagsOutputArgs {
    region?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
}
