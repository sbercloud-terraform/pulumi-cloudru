// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ServiceGroupMember extends pulumi.CustomResource {
    /**
     * Get an existing ServiceGroupMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceGroupMemberState, opts?: pulumi.CustomResourceOptions): ServiceGroupMember {
        return new ServiceGroupMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudru:Cfw/serviceGroupMember:ServiceGroupMember';

    /**
     * Returns true if the given object is an instance of ServiceGroupMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceGroupMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceGroupMember.__pulumiType;
    }

    /**
     * Specifies the service group member description.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Specifies the destination port.
     */
    declare public readonly destPort: pulumi.Output<string>;
    /**
     * Specifies the ID of the service group.
     */
    declare public readonly groupId: pulumi.Output<string>;
    /**
     * Specifies the service group member name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the protocol type.
     */
    declare public readonly protocol: pulumi.Output<number>;
    declare public readonly region: pulumi.Output<string>;
    /**
     * Specifies the source port.
     */
    declare public readonly sourcePort: pulumi.Output<string>;

    /**
     * Create a ServiceGroupMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceGroupMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceGroupMemberArgs | ServiceGroupMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceGroupMemberState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["destPort"] = state?.destPort;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["name"] = state?.name;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["region"] = state?.region;
            resourceInputs["sourcePort"] = state?.sourcePort;
        } else {
            const args = argsOrState as ServiceGroupMemberArgs | undefined;
            if (args?.destPort === undefined && !opts.urn) {
                throw new Error("Missing required property 'destPort'");
            }
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if (args?.sourcePort === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourcePort'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["destPort"] = args?.destPort;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["name"] = args?.name;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["region"] = args?.region;
            resourceInputs["sourcePort"] = args?.sourcePort;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceGroupMember.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceGroupMember resources.
 */
export interface ServiceGroupMemberState {
    /**
     * Specifies the service group member description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     */
    destPort?: pulumi.Input<string>;
    /**
     * Specifies the ID of the service group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Specifies the service group member name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protocol type.
     */
    protocol?: pulumi.Input<number>;
    region?: pulumi.Input<string>;
    /**
     * Specifies the source port.
     */
    sourcePort?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceGroupMember resource.
 */
export interface ServiceGroupMemberArgs {
    /**
     * Specifies the service group member description.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the destination port.
     */
    destPort: pulumi.Input<string>;
    /**
     * Specifies the ID of the service group.
     */
    groupId: pulumi.Input<string>;
    /**
     * Specifies the service group member name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the protocol type.
     */
    protocol: pulumi.Input<number>;
    region?: pulumi.Input<string>;
    /**
     * Specifies the source port.
     */
    sourcePort: pulumi.Input<string>;
}
