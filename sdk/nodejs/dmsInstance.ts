// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DmsInstance extends pulumi.CustomResource {
    /**
     * Get an existing DmsInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsInstanceState, opts?: pulumi.CustomResourceOptions): DmsInstance {
        return new DmsInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:index/dmsInstance:DmsInstance';

    /**
     * Returns true if the given object is an instance of DmsInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsInstance.__pulumiType;
    }

    public readonly accessUser!: pulumi.Output<string | undefined>;
    public readonly availableZones!: pulumi.Output<string[]>;
    public /*out*/ readonly connectAddress!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly engine!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    public readonly maintainBegin!: pulumi.Output<string>;
    public readonly maintainEnd!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly orderId!: pulumi.Output<string>;
    public readonly partitionNum!: pulumi.Output<number | undefined>;
    public readonly password!: pulumi.Output<string | undefined>;
    public /*out*/ readonly port!: pulumi.Output<string>;
    public readonly productId!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly resourceSpecCode!: pulumi.Output<string>;
    public readonly securityGroupId!: pulumi.Output<string>;
    public /*out*/ readonly securityGroupName!: pulumi.Output<string>;
    public readonly specification!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly storageSpace!: pulumi.Output<number>;
    public readonly storageSpecCode!: pulumi.Output<string>;
    public readonly subnetId!: pulumi.Output<string>;
    public /*out*/ readonly subnetName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    public /*out*/ readonly usedStorageSpace!: pulumi.Output<number>;
    public /*out*/ readonly userId!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string>;
    public /*out*/ readonly vpcName!: pulumi.Output<string>;

    /**
     * Create a DmsInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsInstanceArgs | DmsInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsInstanceState | undefined;
            resourceInputs["accessUser"] = state ? state.accessUser : undefined;
            resourceInputs["availableZones"] = state ? state.availableZones : undefined;
            resourceInputs["connectAddress"] = state ? state.connectAddress : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["maintainBegin"] = state ? state.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = state ? state.maintainEnd : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orderId"] = state ? state.orderId : undefined;
            resourceInputs["partitionNum"] = state ? state.partitionNum : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceSpecCode"] = state ? state.resourceSpecCode : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["securityGroupName"] = state ? state.securityGroupName : undefined;
            resourceInputs["specification"] = state ? state.specification : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageSpace"] = state ? state.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = state ? state.storageSpecCode : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["subnetName"] = state ? state.subnetName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usedStorageSpace"] = state ? state.usedStorageSpace : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcName"] = state ? state.vpcName : undefined;
        } else {
            const args = argsOrState as DmsInstanceArgs | undefined;
            if ((!args || args.availableZones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availableZones'");
            }
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.storageSpace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSpace'");
            }
            if ((!args || args.storageSpecCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSpecCode'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accessUser"] = args ? args.accessUser : undefined;
            resourceInputs["availableZones"] = args ? args.availableZones : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["maintainBegin"] = args ? args.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = args ? args.maintainEnd : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["partitionNum"] = args ? args.partitionNum : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["specification"] = args ? args.specification : undefined;
            resourceInputs["storageSpace"] = args ? args.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = args ? args.storageSpecCode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["connectAddress"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["orderId"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["resourceSpecCode"] = undefined /*out*/;
            resourceInputs["securityGroupName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetName"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["usedStorageSpace"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["vpcName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DmsInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DmsInstance resources.
 */
export interface DmsInstanceState {
    accessUser?: pulumi.Input<string>;
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    connectAddress?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orderId?: pulumi.Input<string>;
    partitionNum?: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    productId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceSpecCode?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    securityGroupName?: pulumi.Input<string>;
    specification?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storageSpace?: pulumi.Input<number>;
    storageSpecCode?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
    usedStorageSpace?: pulumi.Input<number>;
    userId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
    vpcName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmsInstance resource.
 */
export interface DmsInstanceArgs {
    accessUser?: pulumi.Input<string>;
    availableZones: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    engine: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    maintainBegin?: pulumi.Input<string>;
    maintainEnd?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partitionNum?: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    productId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupId: pulumi.Input<string>;
    specification?: pulumi.Input<string>;
    storageSpace: pulumi.Input<number>;
    storageSpecCode: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId: pulumi.Input<string>;
}
