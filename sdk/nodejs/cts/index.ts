// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataTrackerArgs, DataTrackerState } from "./dataTracker";
export type DataTracker = import("./dataTracker").DataTracker;
export const DataTracker: typeof import("./dataTracker").DataTracker = null as any;
utilities.lazyLoad(exports, ["DataTracker"], () => require("./dataTracker"));

export { NotificationArgs, NotificationState } from "./notification";
export type Notification = import("./notification").Notification;
export const Notification: typeof import("./notification").Notification = null as any;
utilities.lazyLoad(exports, ["Notification"], () => require("./notification"));

export { TrackerArgs, TrackerState } from "./tracker";
export type Tracker = import("./tracker").Tracker;
export const Tracker: typeof import("./tracker").Tracker = null as any;
utilities.lazyLoad(exports, ["Tracker"], () => require("./tracker"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudru:Cts/dataTracker:DataTracker":
                return new DataTracker(name, <any>undefined, { urn })
            case "cloudru:Cts/notification:Notification":
                return new Notification(name, <any>undefined, { urn })
            case "cloudru:Cts/tracker:Tracker":
                return new Tracker(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudru", "Cts/dataTracker", _module)
pulumi.runtime.registerResourceModule("cloudru", "Cts/notification", _module)
pulumi.runtime.registerResourceModule("cloudru", "Cts/tracker", _module)
