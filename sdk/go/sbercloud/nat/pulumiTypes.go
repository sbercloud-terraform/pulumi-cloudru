// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

var _ = internal.GetEnvOrDefault

type GatewaySessionConf struct {
	// The ICMP session expiration time.
	IcmpSessionExpireTime *int `pulumi:"icmpSessionExpireTime"`
	// The TCP session expiration time.
	TcpSessionExpireTime *int `pulumi:"tcpSessionExpireTime"`
	// The duration of TIME_WAIT state when TCP connection is closed.
	TcpTimeWaitTime *int `pulumi:"tcpTimeWaitTime"`
	// The UDP session expiration time.
	UdpSessionExpireTime *int `pulumi:"udpSessionExpireTime"`
}

// GatewaySessionConfInput is an input type that accepts GatewaySessionConfArgs and GatewaySessionConfOutput values.
// You can construct a concrete instance of `GatewaySessionConfInput` via:
//
//	GatewaySessionConfArgs{...}
type GatewaySessionConfInput interface {
	pulumi.Input

	ToGatewaySessionConfOutput() GatewaySessionConfOutput
	ToGatewaySessionConfOutputWithContext(context.Context) GatewaySessionConfOutput
}

type GatewaySessionConfArgs struct {
	// The ICMP session expiration time.
	IcmpSessionExpireTime pulumi.IntPtrInput `pulumi:"icmpSessionExpireTime"`
	// The TCP session expiration time.
	TcpSessionExpireTime pulumi.IntPtrInput `pulumi:"tcpSessionExpireTime"`
	// The duration of TIME_WAIT state when TCP connection is closed.
	TcpTimeWaitTime pulumi.IntPtrInput `pulumi:"tcpTimeWaitTime"`
	// The UDP session expiration time.
	UdpSessionExpireTime pulumi.IntPtrInput `pulumi:"udpSessionExpireTime"`
}

func (GatewaySessionConfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySessionConf)(nil)).Elem()
}

func (i GatewaySessionConfArgs) ToGatewaySessionConfOutput() GatewaySessionConfOutput {
	return i.ToGatewaySessionConfOutputWithContext(context.Background())
}

func (i GatewaySessionConfArgs) ToGatewaySessionConfOutputWithContext(ctx context.Context) GatewaySessionConfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySessionConfOutput)
}

func (i GatewaySessionConfArgs) ToGatewaySessionConfPtrOutput() GatewaySessionConfPtrOutput {
	return i.ToGatewaySessionConfPtrOutputWithContext(context.Background())
}

func (i GatewaySessionConfArgs) ToGatewaySessionConfPtrOutputWithContext(ctx context.Context) GatewaySessionConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySessionConfOutput).ToGatewaySessionConfPtrOutputWithContext(ctx)
}

// GatewaySessionConfPtrInput is an input type that accepts GatewaySessionConfArgs, GatewaySessionConfPtr and GatewaySessionConfPtrOutput values.
// You can construct a concrete instance of `GatewaySessionConfPtrInput` via:
//
//	        GatewaySessionConfArgs{...}
//
//	or:
//
//	        nil
type GatewaySessionConfPtrInput interface {
	pulumi.Input

	ToGatewaySessionConfPtrOutput() GatewaySessionConfPtrOutput
	ToGatewaySessionConfPtrOutputWithContext(context.Context) GatewaySessionConfPtrOutput
}

type gatewaySessionConfPtrType GatewaySessionConfArgs

func GatewaySessionConfPtr(v *GatewaySessionConfArgs) GatewaySessionConfPtrInput {
	return (*gatewaySessionConfPtrType)(v)
}

func (*gatewaySessionConfPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySessionConf)(nil)).Elem()
}

func (i *gatewaySessionConfPtrType) ToGatewaySessionConfPtrOutput() GatewaySessionConfPtrOutput {
	return i.ToGatewaySessionConfPtrOutputWithContext(context.Background())
}

func (i *gatewaySessionConfPtrType) ToGatewaySessionConfPtrOutputWithContext(ctx context.Context) GatewaySessionConfPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaySessionConfPtrOutput)
}

type GatewaySessionConfOutput struct{ *pulumi.OutputState }

func (GatewaySessionConfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaySessionConf)(nil)).Elem()
}

func (o GatewaySessionConfOutput) ToGatewaySessionConfOutput() GatewaySessionConfOutput {
	return o
}

func (o GatewaySessionConfOutput) ToGatewaySessionConfOutputWithContext(ctx context.Context) GatewaySessionConfOutput {
	return o
}

func (o GatewaySessionConfOutput) ToGatewaySessionConfPtrOutput() GatewaySessionConfPtrOutput {
	return o.ToGatewaySessionConfPtrOutputWithContext(context.Background())
}

func (o GatewaySessionConfOutput) ToGatewaySessionConfPtrOutputWithContext(ctx context.Context) GatewaySessionConfPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewaySessionConf) *GatewaySessionConf {
		return &v
	}).(GatewaySessionConfPtrOutput)
}

// The ICMP session expiration time.
func (o GatewaySessionConfOutput) IcmpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySessionConf) *int { return v.IcmpSessionExpireTime }).(pulumi.IntPtrOutput)
}

// The TCP session expiration time.
func (o GatewaySessionConfOutput) TcpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySessionConf) *int { return v.TcpSessionExpireTime }).(pulumi.IntPtrOutput)
}

// The duration of TIME_WAIT state when TCP connection is closed.
func (o GatewaySessionConfOutput) TcpTimeWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySessionConf) *int { return v.TcpTimeWaitTime }).(pulumi.IntPtrOutput)
}

// The UDP session expiration time.
func (o GatewaySessionConfOutput) UdpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewaySessionConf) *int { return v.UdpSessionExpireTime }).(pulumi.IntPtrOutput)
}

type GatewaySessionConfPtrOutput struct{ *pulumi.OutputState }

func (GatewaySessionConfPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewaySessionConf)(nil)).Elem()
}

func (o GatewaySessionConfPtrOutput) ToGatewaySessionConfPtrOutput() GatewaySessionConfPtrOutput {
	return o
}

func (o GatewaySessionConfPtrOutput) ToGatewaySessionConfPtrOutputWithContext(ctx context.Context) GatewaySessionConfPtrOutput {
	return o
}

func (o GatewaySessionConfPtrOutput) Elem() GatewaySessionConfOutput {
	return o.ApplyT(func(v *GatewaySessionConf) GatewaySessionConf {
		if v != nil {
			return *v
		}
		var ret GatewaySessionConf
		return ret
	}).(GatewaySessionConfOutput)
}

// The ICMP session expiration time.
func (o GatewaySessionConfPtrOutput) IcmpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.IcmpSessionExpireTime
	}).(pulumi.IntPtrOutput)
}

// The TCP session expiration time.
func (o GatewaySessionConfPtrOutput) TcpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.TcpSessionExpireTime
	}).(pulumi.IntPtrOutput)
}

// The duration of TIME_WAIT state when TCP connection is closed.
func (o GatewaySessionConfPtrOutput) TcpTimeWaitTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.TcpTimeWaitTime
	}).(pulumi.IntPtrOutput)
}

// The UDP session expiration time.
func (o GatewaySessionConfPtrOutput) UdpSessionExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewaySessionConf) *int {
		if v == nil {
			return nil
		}
		return v.UdpSessionExpireTime
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySessionConfInput)(nil)).Elem(), GatewaySessionConfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaySessionConfPtrInput)(nil)).Elem(), GatewaySessionConfArgs{})
	pulumi.RegisterOutputType(GatewaySessionConfOutput{})
	pulumi.RegisterOutputType(GatewaySessionConfPtrOutput{})
}
