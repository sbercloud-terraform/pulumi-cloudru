// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package obs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

var _ = internal.GetEnvOrDefault

type BucketCorsRule struct {
	// Specifies the allowed header of cross-origin requests.
	// Only CORS requests matching the allowed header are valid.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Specifies the acceptable operation type of buckets and objects.
	// The methods include `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Requests from this origin can access the bucket. Multiple matching rules are allowed.
	// One rule occupies one line, and allows one wildcard character (*) at most.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Specifies the exposed header in CORS responses, providing additional information for clients.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies the duration that your browser can cache CORS responses, expressed in seconds.
	// The default value is 100.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

// BucketCorsRuleInput is an input type that accepts BucketCorsRuleArgs and BucketCorsRuleOutput values.
// You can construct a concrete instance of `BucketCorsRuleInput` via:
//
//	BucketCorsRuleArgs{...}
type BucketCorsRuleInput interface {
	pulumi.Input

	ToBucketCorsRuleOutput() BucketCorsRuleOutput
	ToBucketCorsRuleOutputWithContext(context.Context) BucketCorsRuleOutput
}

type BucketCorsRuleArgs struct {
	// Specifies the allowed header of cross-origin requests.
	// Only CORS requests matching the allowed header are valid.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Specifies the acceptable operation type of buckets and objects.
	// The methods include `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Requests from this origin can access the bucket. Multiple matching rules are allowed.
	// One rule occupies one line, and allows one wildcard character (*) at most.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Specifies the exposed header in CORS responses, providing additional information for clients.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies the duration that your browser can cache CORS responses, expressed in seconds.
	// The default value is 100.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (BucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsRule)(nil)).Elem()
}

func (i BucketCorsRuleArgs) ToBucketCorsRuleOutput() BucketCorsRuleOutput {
	return i.ToBucketCorsRuleOutputWithContext(context.Background())
}

func (i BucketCorsRuleArgs) ToBucketCorsRuleOutputWithContext(ctx context.Context) BucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsRuleOutput)
}

// BucketCorsRuleArrayInput is an input type that accepts BucketCorsRuleArray and BucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `BucketCorsRuleArrayInput` via:
//
//	BucketCorsRuleArray{ BucketCorsRuleArgs{...} }
type BucketCorsRuleArrayInput interface {
	pulumi.Input

	ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput
	ToBucketCorsRuleArrayOutputWithContext(context.Context) BucketCorsRuleArrayOutput
}

type BucketCorsRuleArray []BucketCorsRuleInput

func (BucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsRule)(nil)).Elem()
}

func (i BucketCorsRuleArray) ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput {
	return i.ToBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i BucketCorsRuleArray) ToBucketCorsRuleArrayOutputWithContext(ctx context.Context) BucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsRuleArrayOutput)
}

type BucketCorsRuleOutput struct{ *pulumi.OutputState }

func (BucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsRule)(nil)).Elem()
}

func (o BucketCorsRuleOutput) ToBucketCorsRuleOutput() BucketCorsRuleOutput {
	return o
}

func (o BucketCorsRuleOutput) ToBucketCorsRuleOutputWithContext(ctx context.Context) BucketCorsRuleOutput {
	return o
}

// Specifies the allowed header of cross-origin requests.
// Only CORS requests matching the allowed header are valid.
func (o BucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Specifies the acceptable operation type of buckets and objects.
// The methods include `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
func (o BucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Requests from this origin can access the bucket. Multiple matching rules are allowed.
// One rule occupies one line, and allows one wildcard character (*) at most.
func (o BucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Specifies the exposed header in CORS responses, providing additional information for clients.
func (o BucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies the duration that your browser can cache CORS responses, expressed in seconds.
// The default value is 100.
func (o BucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type BucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsRule)(nil)).Elem()
}

func (o BucketCorsRuleArrayOutput) ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput {
	return o
}

func (o BucketCorsRuleArrayOutput) ToBucketCorsRuleArrayOutputWithContext(ctx context.Context) BucketCorsRuleArrayOutput {
	return o
}

func (o BucketCorsRuleArrayOutput) Index(i pulumi.IntInput) BucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCorsRule {
		return vs[0].([]BucketCorsRule)[vs[1].(int)]
	}).(BucketCorsRuleOutput)
}

type BucketLifecycleRule struct {
	AbortIncompleteMultipartUploads []BucketLifecycleRuleAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUploads"`
	// Specifies lifecycle rule status.
	Enabled bool `pulumi:"enabled"`
	// Specifies a period when objects that have been last updated are automatically deleted. (documented below).
	Expirations []BucketLifecycleRuleExpiration `pulumi:"expirations"`
	// Unique identifier for lifecycle rules. The Rule Name contains a maximum of 255 characters.
	Name string `pulumi:"name"`
	// Specifies a period when noncurrent object versions are automatically deleted. (documented below).
	NoncurrentVersionExpirations []BucketLifecycleRuleNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpirations"`
	// Specifies a period when noncurrent object versions are automatically transitioned to `WARM` or `COLD` storage class (documented below).
	//
	// At least one of `expiration`, `transition`, `noncurrentVersionExpiration`, `noncurrentVersionTransition` must be specified.
	NoncurrentVersionTransitions []BucketLifecycleRuleNoncurrentVersionTransition `pulumi:"noncurrentVersionTransitions"`
	// Object key prefix identifying one or more objects to which the rule applies.
	// If omitted, all objects in the bucket will be managed by the lifecycle rule.
	// The prefix cannot start or end with a slash (/), cannot have consecutive slashes (/), and cannot contain the following special characters: \:*?"<>|.
	Prefix *string `pulumi:"prefix"`
	// Specifies a period when objects that have been last updated are automatically transitioned to `WARM` or `COLD` storage class (documented below).
	Transitions []BucketLifecycleRuleTransition `pulumi:"transitions"`
}

// BucketLifecycleRuleInput is an input type that accepts BucketLifecycleRuleArgs and BucketLifecycleRuleOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleInput` via:
//
//	BucketLifecycleRuleArgs{...}
type BucketLifecycleRuleInput interface {
	pulumi.Input

	ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput
	ToBucketLifecycleRuleOutputWithContext(context.Context) BucketLifecycleRuleOutput
}

type BucketLifecycleRuleArgs struct {
	AbortIncompleteMultipartUploads BucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput `pulumi:"abortIncompleteMultipartUploads"`
	// Specifies lifecycle rule status.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies a period when objects that have been last updated are automatically deleted. (documented below).
	Expirations BucketLifecycleRuleExpirationArrayInput `pulumi:"expirations"`
	// Unique identifier for lifecycle rules. The Rule Name contains a maximum of 255 characters.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies a period when noncurrent object versions are automatically deleted. (documented below).
	NoncurrentVersionExpirations BucketLifecycleRuleNoncurrentVersionExpirationArrayInput `pulumi:"noncurrentVersionExpirations"`
	// Specifies a period when noncurrent object versions are automatically transitioned to `WARM` or `COLD` storage class (documented below).
	//
	// At least one of `expiration`, `transition`, `noncurrentVersionExpiration`, `noncurrentVersionTransition` must be specified.
	NoncurrentVersionTransitions BucketLifecycleRuleNoncurrentVersionTransitionArrayInput `pulumi:"noncurrentVersionTransitions"`
	// Object key prefix identifying one or more objects to which the rule applies.
	// If omitted, all objects in the bucket will be managed by the lifecycle rule.
	// The prefix cannot start or end with a slash (/), cannot have consecutive slashes (/), and cannot contain the following special characters: \:*?"<>|.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies a period when objects that have been last updated are automatically transitioned to `WARM` or `COLD` storage class (documented below).
	Transitions BucketLifecycleRuleTransitionArrayInput `pulumi:"transitions"`
}

func (BucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return i.ToBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleOutput)
}

// BucketLifecycleRuleArrayInput is an input type that accepts BucketLifecycleRuleArray and BucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleArrayInput` via:
//
//	BucketLifecycleRuleArray{ BucketLifecycleRuleArgs{...} }
type BucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput
	ToBucketLifecycleRuleArrayOutputWithContext(context.Context) BucketLifecycleRuleArrayOutput
}

type BucketLifecycleRuleArray []BucketLifecycleRuleInput

func (BucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return i.ToBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleArrayOutput)
}

type BucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return o
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return o
}

func (o BucketLifecycleRuleOutput) AbortIncompleteMultipartUploads() BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRule) []BucketLifecycleRuleAbortIncompleteMultipartUpload {
		return v.AbortIncompleteMultipartUploads
	}).(BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput)
}

// Specifies lifecycle rule status.
func (o BucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies a period when objects that have been last updated are automatically deleted. (documented below).
func (o BucketLifecycleRuleOutput) Expirations() BucketLifecycleRuleExpirationArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRule) []BucketLifecycleRuleExpiration { return v.Expirations }).(BucketLifecycleRuleExpirationArrayOutput)
}

// Unique identifier for lifecycle rules. The Rule Name contains a maximum of 255 characters.
func (o BucketLifecycleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRule) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies a period when noncurrent object versions are automatically deleted. (documented below).
func (o BucketLifecycleRuleOutput) NoncurrentVersionExpirations() BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRule) []BucketLifecycleRuleNoncurrentVersionExpiration {
		return v.NoncurrentVersionExpirations
	}).(BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput)
}

// Specifies a period when noncurrent object versions are automatically transitioned to `WARM` or `COLD` storage class (documented below).
//
// At least one of `expiration`, `transition`, `noncurrentVersionExpiration`, `noncurrentVersionTransition` must be specified.
func (o BucketLifecycleRuleOutput) NoncurrentVersionTransitions() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRule) []BucketLifecycleRuleNoncurrentVersionTransition {
		return v.NoncurrentVersionTransitions
	}).(BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

// Object key prefix identifying one or more objects to which the rule applies.
// If omitted, all objects in the bucket will be managed by the lifecycle rule.
// The prefix cannot start or end with a slash (/), cannot have consecutive slashes (/), and cannot contain the following special characters: \:*?"<>|.
func (o BucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies a period when objects that have been last updated are automatically transitioned to `WARM` or `COLD` storage class (documented below).
func (o BucketLifecycleRuleOutput) Transitions() BucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRule) []BucketLifecycleRuleTransition { return v.Transitions }).(BucketLifecycleRuleTransitionArrayOutput)
}

type BucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRule {
		return vs[0].([]BucketLifecycleRule)[vs[1].(int)]
	}).(BucketLifecycleRuleOutput)
}

type BucketLifecycleRuleAbortIncompleteMultipartUpload struct {
	Days int `pulumi:"days"`
}

// BucketLifecycleRuleAbortIncompleteMultipartUploadInput is an input type that accepts BucketLifecycleRuleAbortIncompleteMultipartUploadArgs and BucketLifecycleRuleAbortIncompleteMultipartUploadOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleAbortIncompleteMultipartUploadInput` via:
//
//	BucketLifecycleRuleAbortIncompleteMultipartUploadArgs{...}
type BucketLifecycleRuleAbortIncompleteMultipartUploadInput interface {
	pulumi.Input

	ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleRuleAbortIncompleteMultipartUploadOutput
	ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(context.Context) BucketLifecycleRuleAbortIncompleteMultipartUploadOutput
}

type BucketLifecycleRuleAbortIncompleteMultipartUploadArgs struct {
	Days pulumi.IntInput `pulumi:"days"`
}

func (BucketLifecycleRuleAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i BucketLifecycleRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return i.ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleAbortIncompleteMultipartUploadArgs) ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleAbortIncompleteMultipartUploadOutput)
}

// BucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput is an input type that accepts BucketLifecycleRuleAbortIncompleteMultipartUploadArray and BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput` via:
//
//	BucketLifecycleRuleAbortIncompleteMultipartUploadArray{ BucketLifecycleRuleAbortIncompleteMultipartUploadArgs{...} }
type BucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput() BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput
	ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(context.Context) BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput
}

type BucketLifecycleRuleAbortIncompleteMultipartUploadArray []BucketLifecycleRuleAbortIncompleteMultipartUploadInput

func (BucketLifecycleRuleAbortIncompleteMultipartUploadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i BucketLifecycleRuleAbortIncompleteMultipartUploadArray) ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput() BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return i.ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleAbortIncompleteMultipartUploadArray) ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput)
}

type BucketLifecycleRuleAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutput() BucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleRuleAbortIncompleteMultipartUploadOutput) ToBucketLifecycleRuleAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleRuleAbortIncompleteMultipartUploadOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleAbortIncompleteMultipartUpload) int { return v.Days }).(pulumi.IntOutput)
}

type BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput() BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return o
}

func (o BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) ToBucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput {
	return o
}

func (o BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleAbortIncompleteMultipartUploadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleAbortIncompleteMultipartUpload {
		return vs[0].([]BucketLifecycleRuleAbortIncompleteMultipartUpload)[vs[1].(int)]
	}).(BucketLifecycleRuleAbortIncompleteMultipartUploadOutput)
}

type BucketLifecycleRuleExpiration struct {
	// Specifies the number of days when objects that have been last updated are automatically deleted.
	// The expiration time must be greater than the transition times.
	Days int `pulumi:"days"`
}

// BucketLifecycleRuleExpirationInput is an input type that accepts BucketLifecycleRuleExpirationArgs and BucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleExpirationInput` via:
//
//	BucketLifecycleRuleExpirationArgs{...}
type BucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleRuleExpirationOutput() BucketLifecycleRuleExpirationOutput
	ToBucketLifecycleRuleExpirationOutputWithContext(context.Context) BucketLifecycleRuleExpirationOutput
}

type BucketLifecycleRuleExpirationArgs struct {
	// Specifies the number of days when objects that have been last updated are automatically deleted.
	// The expiration time must be greater than the transition times.
	Days pulumi.IntInput `pulumi:"days"`
}

func (BucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i BucketLifecycleRuleExpirationArgs) ToBucketLifecycleRuleExpirationOutput() BucketLifecycleRuleExpirationOutput {
	return i.ToBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleExpirationArgs) ToBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleExpirationOutput)
}

// BucketLifecycleRuleExpirationArrayInput is an input type that accepts BucketLifecycleRuleExpirationArray and BucketLifecycleRuleExpirationArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleExpirationArrayInput` via:
//
//	BucketLifecycleRuleExpirationArray{ BucketLifecycleRuleExpirationArgs{...} }
type BucketLifecycleRuleExpirationArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleExpirationArrayOutput() BucketLifecycleRuleExpirationArrayOutput
	ToBucketLifecycleRuleExpirationArrayOutputWithContext(context.Context) BucketLifecycleRuleExpirationArrayOutput
}

type BucketLifecycleRuleExpirationArray []BucketLifecycleRuleExpirationInput

func (BucketLifecycleRuleExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i BucketLifecycleRuleExpirationArray) ToBucketLifecycleRuleExpirationArrayOutput() BucketLifecycleRuleExpirationArrayOutput {
	return i.ToBucketLifecycleRuleExpirationArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleExpirationArray) ToBucketLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleExpirationArrayOutput)
}

type BucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleExpirationOutput) ToBucketLifecycleRuleExpirationOutput() BucketLifecycleRuleExpirationOutput {
	return o
}

func (o BucketLifecycleRuleExpirationOutput) ToBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationOutput {
	return o
}

// Specifies the number of days when objects that have been last updated are automatically deleted.
// The expiration time must be greater than the transition times.
func (o BucketLifecycleRuleExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type BucketLifecycleRuleExpirationArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleExpirationArrayOutput) ToBucketLifecycleRuleExpirationArrayOutput() BucketLifecycleRuleExpirationArrayOutput {
	return o
}

func (o BucketLifecycleRuleExpirationArrayOutput) ToBucketLifecycleRuleExpirationArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationArrayOutput {
	return o
}

func (o BucketLifecycleRuleExpirationArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleExpiration {
		return vs[0].([]BucketLifecycleRuleExpiration)[vs[1].(int)]
	}).(BucketLifecycleRuleExpirationOutput)
}

type BucketLifecycleRuleNoncurrentVersionExpiration struct {
	// Specifies the number of days when noncurrent object versions are automatically deleted.
	Days int `pulumi:"days"`
}

// BucketLifecycleRuleNoncurrentVersionExpirationInput is an input type that accepts BucketLifecycleRuleNoncurrentVersionExpirationArgs and BucketLifecycleRuleNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleNoncurrentVersionExpirationInput` via:
//
//	BucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
type BucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionExpirationOutput() BucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type BucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	// Specifies the number of days when noncurrent object versions are automatically deleted.
	Days pulumi.IntInput `pulumi:"days"`
}

func (BucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArgs) ToBucketLifecycleRuleNoncurrentVersionExpirationOutput() BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArgs) ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// BucketLifecycleRuleNoncurrentVersionExpirationArrayInput is an input type that accepts BucketLifecycleRuleNoncurrentVersionExpirationArray and BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleNoncurrentVersionExpirationArrayInput` via:
//
//	BucketLifecycleRuleNoncurrentVersionExpirationArray{ BucketLifecycleRuleNoncurrentVersionExpirationArgs{...} }
type BucketLifecycleRuleNoncurrentVersionExpirationArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput() BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput
	ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput
}

type BucketLifecycleRuleNoncurrentVersionExpirationArray []BucketLifecycleRuleNoncurrentVersionExpirationInput

func (BucketLifecycleRuleNoncurrentVersionExpirationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArray) ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput() BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArray) ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput)
}

type BucketLifecycleRuleNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationOutput() BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

// Specifies the number of days when noncurrent object versions are automatically deleted.
func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleNoncurrentVersionExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutput() BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleNoncurrentVersionExpiration {
		return vs[0].([]BucketLifecycleRuleNoncurrentVersionExpiration)[vs[1].(int)]
	}).(BucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransition struct {
	// Specifies the number of days when noncurrent object versions are automatically transitioned to the specified storage class.
	Days int `pulumi:"days"`
	// The class of storage used to store the object. Only `WARM` and `COLD` are supported.
	StorageClass string `pulumi:"storageClass"`
}

// BucketLifecycleRuleNoncurrentVersionTransitionInput is an input type that accepts BucketLifecycleRuleNoncurrentVersionTransitionArgs and BucketLifecycleRuleNoncurrentVersionTransitionOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleNoncurrentVersionTransitionInput` via:
//
//	BucketLifecycleRuleNoncurrentVersionTransitionArgs{...}
type BucketLifecycleRuleNoncurrentVersionTransitionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionTransitionOutput() BucketLifecycleRuleNoncurrentVersionTransitionOutput
	ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionTransitionOutput
}

type BucketLifecycleRuleNoncurrentVersionTransitionArgs struct {
	// Specifies the number of days when noncurrent object versions are automatically transitioned to the specified storage class.
	Days pulumi.IntInput `pulumi:"days"`
	// The class of storage used to store the object. Only `WARM` and `COLD` are supported.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketLifecycleRuleNoncurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArgs) ToBucketLifecycleRuleNoncurrentVersionTransitionOutput() BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArgs) ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

// BucketLifecycleRuleNoncurrentVersionTransitionArrayInput is an input type that accepts BucketLifecycleRuleNoncurrentVersionTransitionArray and BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleNoncurrentVersionTransitionArrayInput` via:
//
//	BucketLifecycleRuleNoncurrentVersionTransitionArray{ BucketLifecycleRuleNoncurrentVersionTransitionArgs{...} }
type BucketLifecycleRuleNoncurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
	ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
}

type BucketLifecycleRuleNoncurrentVersionTransitionArray []BucketLifecycleRuleNoncurrentVersionTransitionInput

func (BucketLifecycleRuleNoncurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArray) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArray) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleNoncurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionOutput() BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

// Specifies the number of days when noncurrent object versions are automatically transitioned to the specified storage class.
func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleNoncurrentVersionTransition) int { return v.Days }).(pulumi.IntOutput)
}

// The class of storage used to store the object. Only `WARM` and `COLD` are supported.
func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleNoncurrentVersionTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleNoncurrentVersionTransition {
		return vs[0].([]BucketLifecycleRuleNoncurrentVersionTransition)[vs[1].(int)]
	}).(BucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

type BucketLifecycleRuleTransition struct {
	// Specifies the number of days when objects that have been last updated are automatically transitioned to the specified storage class.
	Days int `pulumi:"days"`
	// The class of storage used to store the object. Only `WARM` and `COLD` are supported.
	StorageClass string `pulumi:"storageClass"`
}

// BucketLifecycleRuleTransitionInput is an input type that accepts BucketLifecycleRuleTransitionArgs and BucketLifecycleRuleTransitionOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleTransitionInput` via:
//
//	BucketLifecycleRuleTransitionArgs{...}
type BucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleTransitionOutput() BucketLifecycleRuleTransitionOutput
	ToBucketLifecycleRuleTransitionOutputWithContext(context.Context) BucketLifecycleRuleTransitionOutput
}

type BucketLifecycleRuleTransitionArgs struct {
	// Specifies the number of days when objects that have been last updated are automatically transitioned to the specified storage class.
	Days pulumi.IntInput `pulumi:"days"`
	// The class of storage used to store the object. Only `WARM` and `COLD` are supported.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleTransitionArgs) ToBucketLifecycleRuleTransitionOutput() BucketLifecycleRuleTransitionOutput {
	return i.ToBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleTransitionArgs) ToBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleTransitionOutput)
}

// BucketLifecycleRuleTransitionArrayInput is an input type that accepts BucketLifecycleRuleTransitionArray and BucketLifecycleRuleTransitionArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleTransitionArrayInput` via:
//
//	BucketLifecycleRuleTransitionArray{ BucketLifecycleRuleTransitionArgs{...} }
type BucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleTransitionArrayOutput() BucketLifecycleRuleTransitionArrayOutput
	ToBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) BucketLifecycleRuleTransitionArrayOutput
}

type BucketLifecycleRuleTransitionArray []BucketLifecycleRuleTransitionInput

func (BucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleTransitionArray) ToBucketLifecycleRuleTransitionArrayOutput() BucketLifecycleRuleTransitionArrayOutput {
	return i.ToBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleTransitionArray) ToBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleTransitionArrayOutput)
}

type BucketLifecycleRuleTransitionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleTransitionOutput) ToBucketLifecycleRuleTransitionOutput() BucketLifecycleRuleTransitionOutput {
	return o
}

func (o BucketLifecycleRuleTransitionOutput) ToBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionOutput {
	return o
}

// Specifies the number of days when objects that have been last updated are automatically transitioned to the specified storage class.
func (o BucketLifecycleRuleTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleTransition) int { return v.Days }).(pulumi.IntOutput)
}

// The class of storage used to store the object. Only `WARM` and `COLD` are supported.
func (o BucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketLifecycleRuleTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleTransitionArrayOutput) ToBucketLifecycleRuleTransitionArrayOutput() BucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleTransitionArrayOutput) ToBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleTransition {
		return vs[0].([]BucketLifecycleRuleTransition)[vs[1].(int)]
	}).(BucketLifecycleRuleTransitionOutput)
}

type BucketLogging struct {
	// schema: Required
	Agency *string `pulumi:"agency"`
	// The name of the bucket that will receive the log objects.
	// The acl policy of the target bucket should be `log-delivery-write`.
	TargetBucket string `pulumi:"targetBucket"`
	// To specify a key prefix for log objects.
	TargetPrefix *string `pulumi:"targetPrefix"`
}

// BucketLoggingInput is an input type that accepts BucketLoggingArgs and BucketLoggingOutput values.
// You can construct a concrete instance of `BucketLoggingInput` via:
//
//	BucketLoggingArgs{...}
type BucketLoggingInput interface {
	pulumi.Input

	ToBucketLoggingOutput() BucketLoggingOutput
	ToBucketLoggingOutputWithContext(context.Context) BucketLoggingOutput
}

type BucketLoggingArgs struct {
	// schema: Required
	Agency pulumi.StringPtrInput `pulumi:"agency"`
	// The name of the bucket that will receive the log objects.
	// The acl policy of the target bucket should be `log-delivery-write`.
	TargetBucket pulumi.StringInput `pulumi:"targetBucket"`
	// To specify a key prefix for log objects.
	TargetPrefix pulumi.StringPtrInput `pulumi:"targetPrefix"`
}

func (BucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArgs) ToBucketLoggingOutput() BucketLoggingOutput {
	return i.ToBucketLoggingOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput)
}

// BucketLoggingArrayInput is an input type that accepts BucketLoggingArray and BucketLoggingArrayOutput values.
// You can construct a concrete instance of `BucketLoggingArrayInput` via:
//
//	BucketLoggingArray{ BucketLoggingArgs{...} }
type BucketLoggingArrayInput interface {
	pulumi.Input

	ToBucketLoggingArrayOutput() BucketLoggingArrayOutput
	ToBucketLoggingArrayOutputWithContext(context.Context) BucketLoggingArrayOutput
}

type BucketLoggingArray []BucketLoggingInput

func (BucketLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArray) ToBucketLoggingArrayOutput() BucketLoggingArrayOutput {
	return i.ToBucketLoggingArrayOutputWithContext(context.Background())
}

func (i BucketLoggingArray) ToBucketLoggingArrayOutputWithContext(ctx context.Context) BucketLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingArrayOutput)
}

type BucketLoggingOutput struct{ *pulumi.OutputState }

func (BucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (o BucketLoggingOutput) ToBucketLoggingOutput() BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return o
}

// schema: Required
func (o BucketLoggingOutput) Agency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLogging) *string { return v.Agency }).(pulumi.StringPtrOutput)
}

// The name of the bucket that will receive the log objects.
// The acl policy of the target bucket should be `log-delivery-write`.
func (o BucketLoggingOutput) TargetBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLogging) string { return v.TargetBucket }).(pulumi.StringOutput)
}

// To specify a key prefix for log objects.
func (o BucketLoggingOutput) TargetPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLogging) *string { return v.TargetPrefix }).(pulumi.StringPtrOutput)
}

type BucketLoggingArrayOutput struct{ *pulumi.OutputState }

func (BucketLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLogging)(nil)).Elem()
}

func (o BucketLoggingArrayOutput) ToBucketLoggingArrayOutput() BucketLoggingArrayOutput {
	return o
}

func (o BucketLoggingArrayOutput) ToBucketLoggingArrayOutputWithContext(ctx context.Context) BucketLoggingArrayOutput {
	return o
}

func (o BucketLoggingArrayOutput) Index(i pulumi.IntInput) BucketLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLogging {
		return vs[0].([]BucketLogging)[vs[1].(int)]
	}).(BucketLoggingOutput)
}

type BucketStorageInfo struct {
	// The number of objects stored in the bucket.
	ObjectNumber *int `pulumi:"objectNumber"`
	// The stored size of the bucket.
	Size *int `pulumi:"size"`
}

// BucketStorageInfoInput is an input type that accepts BucketStorageInfoArgs and BucketStorageInfoOutput values.
// You can construct a concrete instance of `BucketStorageInfoInput` via:
//
//	BucketStorageInfoArgs{...}
type BucketStorageInfoInput interface {
	pulumi.Input

	ToBucketStorageInfoOutput() BucketStorageInfoOutput
	ToBucketStorageInfoOutputWithContext(context.Context) BucketStorageInfoOutput
}

type BucketStorageInfoArgs struct {
	// The number of objects stored in the bucket.
	ObjectNumber pulumi.IntPtrInput `pulumi:"objectNumber"`
	// The stored size of the bucket.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (BucketStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketStorageInfo)(nil)).Elem()
}

func (i BucketStorageInfoArgs) ToBucketStorageInfoOutput() BucketStorageInfoOutput {
	return i.ToBucketStorageInfoOutputWithContext(context.Background())
}

func (i BucketStorageInfoArgs) ToBucketStorageInfoOutputWithContext(ctx context.Context) BucketStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketStorageInfoOutput)
}

// BucketStorageInfoArrayInput is an input type that accepts BucketStorageInfoArray and BucketStorageInfoArrayOutput values.
// You can construct a concrete instance of `BucketStorageInfoArrayInput` via:
//
//	BucketStorageInfoArray{ BucketStorageInfoArgs{...} }
type BucketStorageInfoArrayInput interface {
	pulumi.Input

	ToBucketStorageInfoArrayOutput() BucketStorageInfoArrayOutput
	ToBucketStorageInfoArrayOutputWithContext(context.Context) BucketStorageInfoArrayOutput
}

type BucketStorageInfoArray []BucketStorageInfoInput

func (BucketStorageInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketStorageInfo)(nil)).Elem()
}

func (i BucketStorageInfoArray) ToBucketStorageInfoArrayOutput() BucketStorageInfoArrayOutput {
	return i.ToBucketStorageInfoArrayOutputWithContext(context.Background())
}

func (i BucketStorageInfoArray) ToBucketStorageInfoArrayOutputWithContext(ctx context.Context) BucketStorageInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketStorageInfoArrayOutput)
}

type BucketStorageInfoOutput struct{ *pulumi.OutputState }

func (BucketStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketStorageInfo)(nil)).Elem()
}

func (o BucketStorageInfoOutput) ToBucketStorageInfoOutput() BucketStorageInfoOutput {
	return o
}

func (o BucketStorageInfoOutput) ToBucketStorageInfoOutputWithContext(ctx context.Context) BucketStorageInfoOutput {
	return o
}

// The number of objects stored in the bucket.
func (o BucketStorageInfoOutput) ObjectNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketStorageInfo) *int { return v.ObjectNumber }).(pulumi.IntPtrOutput)
}

// The stored size of the bucket.
func (o BucketStorageInfoOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketStorageInfo) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type BucketStorageInfoArrayOutput struct{ *pulumi.OutputState }

func (BucketStorageInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketStorageInfo)(nil)).Elem()
}

func (o BucketStorageInfoArrayOutput) ToBucketStorageInfoArrayOutput() BucketStorageInfoArrayOutput {
	return o
}

func (o BucketStorageInfoArrayOutput) ToBucketStorageInfoArrayOutputWithContext(ctx context.Context) BucketStorageInfoArrayOutput {
	return o
}

func (o BucketStorageInfoArrayOutput) Index(i pulumi.IntInput) BucketStorageInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketStorageInfo {
		return vs[0].([]BucketStorageInfo)[vs[1].(int)]
	}).(BucketStorageInfoOutput)
}

type BucketWebsite struct {
	// Specifies the error page returned when an error occurs during static website access.
	// Only HTML, JPG, PNG, BMP, and WEBP files under the root directory are supported.
	ErrorDocument *string `pulumi:"errorDocument"`
	// Unless using `redirectAllRequestsTo`. Specifies the default homepage of the static website, only HTML web pages are supported.
	// OBS only allows files such as `index.html` in the root directory of a bucket to function as the default homepage.
	// That is to say, do not set the default homepage with a multi-level directory structure (for example, /page/index.html).
	IndexDocument *string `pulumi:"indexDocument"`
	// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
	RedirectAllRequestsTo *string `pulumi:"redirectAllRequestsTo"`
	// A JSON or XML format containing routing rules describing redirect behavior and when redirects are applied.
	// Each rule contains a `Condition` and a `Redirect` as shown in the following table:
	//
	// Parameter | Key
	// --- | ---
	// Condition | KeyPrefixEquals, HttpErrorCodeReturnedEquals
	// Redirect | Protocol, HostName, ReplaceKeyPrefixWith, ReplaceKeyWith, HttpRedirectCode
	RoutingRules *string `pulumi:"routingRules"`
}

// BucketWebsiteInput is an input type that accepts BucketWebsiteArgs and BucketWebsiteOutput values.
// You can construct a concrete instance of `BucketWebsiteInput` via:
//
//	BucketWebsiteArgs{...}
type BucketWebsiteInput interface {
	pulumi.Input

	ToBucketWebsiteOutput() BucketWebsiteOutput
	ToBucketWebsiteOutputWithContext(context.Context) BucketWebsiteOutput
}

type BucketWebsiteArgs struct {
	// Specifies the error page returned when an error occurs during static website access.
	// Only HTML, JPG, PNG, BMP, and WEBP files under the root directory are supported.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// Unless using `redirectAllRequestsTo`. Specifies the default homepage of the static website, only HTML web pages are supported.
	// OBS only allows files such as `index.html` in the root directory of a bucket to function as the default homepage.
	// That is to say, do not set the default homepage with a multi-level directory structure (for example, /page/index.html).
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
	// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
	RedirectAllRequestsTo pulumi.StringPtrInput `pulumi:"redirectAllRequestsTo"`
	// A JSON or XML format containing routing rules describing redirect behavior and when redirects are applied.
	// Each rule contains a `Condition` and a `Redirect` as shown in the following table:
	//
	// Parameter | Key
	// --- | ---
	// Condition | KeyPrefixEquals, HttpErrorCodeReturnedEquals
	// Redirect | Protocol, HostName, ReplaceKeyPrefixWith, ReplaceKeyWith, HttpRedirectCode
	RoutingRules pulumi.StringPtrInput `pulumi:"routingRules"`
}

func (BucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return i.ToBucketWebsiteOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput)
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput).ToBucketWebsitePtrOutputWithContext(ctx)
}

// BucketWebsitePtrInput is an input type that accepts BucketWebsiteArgs, BucketWebsitePtr and BucketWebsitePtrOutput values.
// You can construct a concrete instance of `BucketWebsitePtrInput` via:
//
//	        BucketWebsiteArgs{...}
//
//	or:
//
//	        nil
type BucketWebsitePtrInput interface {
	pulumi.Input

	ToBucketWebsitePtrOutput() BucketWebsitePtrOutput
	ToBucketWebsitePtrOutputWithContext(context.Context) BucketWebsitePtrOutput
}

type bucketWebsitePtrType BucketWebsiteArgs

func BucketWebsitePtr(v *BucketWebsiteArgs) BucketWebsitePtrInput {
	return (*bucketWebsitePtrType)(v)
}

func (*bucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsitePtrOutput)
}

type BucketWebsiteOutput struct{ *pulumi.OutputState }

func (BucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketWebsite) *BucketWebsite {
		return &v
	}).(BucketWebsitePtrOutput)
}

// Specifies the error page returned when an error occurs during static website access.
// Only HTML, JPG, PNG, BMP, and WEBP files under the root directory are supported.
func (o BucketWebsiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// Unless using `redirectAllRequestsTo`. Specifies the default homepage of the static website, only HTML web pages are supported.
// OBS only allows files such as `index.html` in the root directory of a bucket to function as the default homepage.
// That is to say, do not set the default homepage with a multi-level directory structure (for example, /page/index.html).
func (o BucketWebsiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketWebsiteOutput) RedirectAllRequestsTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.RedirectAllRequestsTo }).(pulumi.StringPtrOutput)
}

// A JSON or XML format containing routing rules describing redirect behavior and when redirects are applied.
// Each rule contains a `Condition` and a `Redirect` as shown in the following table:
//
// Parameter | Key
// --- | ---
// Condition | KeyPrefixEquals, HttpErrorCodeReturnedEquals
// Redirect | Protocol, HostName, ReplaceKeyPrefixWith, ReplaceKeyWith, HttpRedirectCode
func (o BucketWebsiteOutput) RoutingRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.RoutingRules }).(pulumi.StringPtrOutput)
}

type BucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (BucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) Elem() BucketWebsiteOutput {
	return o.ApplyT(func(v *BucketWebsite) BucketWebsite {
		if v != nil {
			return *v
		}
		var ret BucketWebsite
		return ret
	}).(BucketWebsiteOutput)
}

// Specifies the error page returned when an error occurs during static website access.
// Only HTML, JPG, PNG, BMP, and WEBP files under the root directory are supported.
func (o BucketWebsitePtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.ErrorDocument
	}).(pulumi.StringPtrOutput)
}

// Unless using `redirectAllRequestsTo`. Specifies the default homepage of the static website, only HTML web pages are supported.
// OBS only allows files such as `index.html` in the root directory of a bucket to function as the default homepage.
// That is to say, do not set the default homepage with a multi-level directory structure (for example, /page/index.html).
func (o BucketWebsitePtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.IndexDocument
	}).(pulumi.StringPtrOutput)
}

// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketWebsitePtrOutput) RedirectAllRequestsTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.RedirectAllRequestsTo
	}).(pulumi.StringPtrOutput)
}

// A JSON or XML format containing routing rules describing redirect behavior and when redirects are applied.
// Each rule contains a `Condition` and a `Redirect` as shown in the following table:
//
// Parameter | Key
// --- | ---
// Condition | KeyPrefixEquals, HttpErrorCodeReturnedEquals
// Redirect | Protocol, HostName, ReplaceKeyPrefixWith, ReplaceKeyWith, HttpRedirectCode
func (o BucketWebsitePtrOutput) RoutingRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRules
	}).(pulumi.StringPtrOutput)
}

type GetBucketsBucket struct {
	// The name of the OBS bucket.
	Bucket string `pulumi:"bucket"`
	// The date when the OBS bucket was created.
	CreatedAt string `pulumi:"createdAt"`
	// The enterprise project id of the OBS bucket.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The region in which to obtain the OBS bucket.
	// If omitted, the provider-level region will be used.
	Region string `pulumi:"region"`
	// The storage class of the OBS bucket.
	StorageClass string `pulumi:"storageClass"`
}

// GetBucketsBucketInput is an input type that accepts GetBucketsBucketArgs and GetBucketsBucketOutput values.
// You can construct a concrete instance of `GetBucketsBucketInput` via:
//
//	GetBucketsBucketArgs{...}
type GetBucketsBucketInput interface {
	pulumi.Input

	ToGetBucketsBucketOutput() GetBucketsBucketOutput
	ToGetBucketsBucketOutputWithContext(context.Context) GetBucketsBucketOutput
}

type GetBucketsBucketArgs struct {
	// The name of the OBS bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The date when the OBS bucket was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The enterprise project id of the OBS bucket.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The region in which to obtain the OBS bucket.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringInput `pulumi:"region"`
	// The storage class of the OBS bucket.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (GetBucketsBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsBucket)(nil)).Elem()
}

func (i GetBucketsBucketArgs) ToGetBucketsBucketOutput() GetBucketsBucketOutput {
	return i.ToGetBucketsBucketOutputWithContext(context.Background())
}

func (i GetBucketsBucketArgs) ToGetBucketsBucketOutputWithContext(ctx context.Context) GetBucketsBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketsBucketOutput)
}

// GetBucketsBucketArrayInput is an input type that accepts GetBucketsBucketArray and GetBucketsBucketArrayOutput values.
// You can construct a concrete instance of `GetBucketsBucketArrayInput` via:
//
//	GetBucketsBucketArray{ GetBucketsBucketArgs{...} }
type GetBucketsBucketArrayInput interface {
	pulumi.Input

	ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput
	ToGetBucketsBucketArrayOutputWithContext(context.Context) GetBucketsBucketArrayOutput
}

type GetBucketsBucketArray []GetBucketsBucketInput

func (GetBucketsBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketsBucket)(nil)).Elem()
}

func (i GetBucketsBucketArray) ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput {
	return i.ToGetBucketsBucketArrayOutputWithContext(context.Background())
}

func (i GetBucketsBucketArray) ToGetBucketsBucketArrayOutputWithContext(ctx context.Context) GetBucketsBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketsBucketArrayOutput)
}

type GetBucketsBucketOutput struct{ *pulumi.OutputState }

func (GetBucketsBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsBucket)(nil)).Elem()
}

func (o GetBucketsBucketOutput) ToGetBucketsBucketOutput() GetBucketsBucketOutput {
	return o
}

func (o GetBucketsBucketOutput) ToGetBucketsBucketOutputWithContext(ctx context.Context) GetBucketsBucketOutput {
	return o
}

// The name of the OBS bucket.
func (o GetBucketsBucketOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Bucket }).(pulumi.StringOutput)
}

// The date when the OBS bucket was created.
func (o GetBucketsBucketOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The enterprise project id of the OBS bucket.
func (o GetBucketsBucketOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The region in which to obtain the OBS bucket.
// If omitted, the provider-level region will be used.
func (o GetBucketsBucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.Region }).(pulumi.StringOutput)
}

// The storage class of the OBS bucket.
func (o GetBucketsBucketOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsBucket) string { return v.StorageClass }).(pulumi.StringOutput)
}

type GetBucketsBucketArrayOutput struct{ *pulumi.OutputState }

func (GetBucketsBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketsBucket)(nil)).Elem()
}

func (o GetBucketsBucketArrayOutput) ToGetBucketsBucketArrayOutput() GetBucketsBucketArrayOutput {
	return o
}

func (o GetBucketsBucketArrayOutput) ToGetBucketsBucketArrayOutputWithContext(ctx context.Context) GetBucketsBucketArrayOutput {
	return o
}

func (o GetBucketsBucketArrayOutput) Index(i pulumi.IntInput) GetBucketsBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketsBucket {
		return vs[0].([]GetBucketsBucket)[vs[1].(int)]
	}).(GetBucketsBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsRuleInput)(nil)).Elem(), BucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketCorsRuleArrayInput)(nil)).Elem(), BucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleInput)(nil)).Elem(), BucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleArrayInput)(nil)).Elem(), BucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleAbortIncompleteMultipartUploadInput)(nil)).Elem(), BucketLifecycleRuleAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleAbortIncompleteMultipartUploadArrayInput)(nil)).Elem(), BucketLifecycleRuleAbortIncompleteMultipartUploadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleExpirationInput)(nil)).Elem(), BucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleExpirationArrayInput)(nil)).Elem(), BucketLifecycleRuleExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionExpirationInput)(nil)).Elem(), BucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionExpirationArrayInput)(nil)).Elem(), BucketLifecycleRuleNoncurrentVersionExpirationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionTransitionInput)(nil)).Elem(), BucketLifecycleRuleNoncurrentVersionTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionTransitionArrayInput)(nil)).Elem(), BucketLifecycleRuleNoncurrentVersionTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleTransitionInput)(nil)).Elem(), BucketLifecycleRuleTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleRuleTransitionArrayInput)(nil)).Elem(), BucketLifecycleRuleTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLoggingInput)(nil)).Elem(), BucketLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLoggingArrayInput)(nil)).Elem(), BucketLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketStorageInfoInput)(nil)).Elem(), BucketStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketStorageInfoArrayInput)(nil)).Elem(), BucketStorageInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteInput)(nil)).Elem(), BucketWebsiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsitePtrInput)(nil)).Elem(), BucketWebsiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketsBucketInput)(nil)).Elem(), GetBucketsBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketsBucketArrayInput)(nil)).Elem(), GetBucketsBucketArray{})
	pulumi.RegisterOutputType(BucketCorsRuleOutput{})
	pulumi.RegisterOutputType(BucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleAbortIncompleteMultipartUploadArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleExpirationArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionExpirationArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketLoggingOutput{})
	pulumi.RegisterOutputType(BucketLoggingArrayOutput{})
	pulumi.RegisterOutputType(BucketStorageInfoOutput{})
	pulumi.RegisterOutputType(BucketStorageInfoArrayOutput{})
	pulumi.RegisterOutputType(BucketWebsiteOutput{})
	pulumi.RegisterOutputType(BucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(GetBucketsBucketOutput{})
	pulumi.RegisterOutputType(GetBucketsBucketArrayOutput{})
}
