// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Function resource within SberCloud.
 *
 * ## Example Usage
 *
 * ### With base64 func code
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const f1 = new sbercloud.functiongraph.Function("f_1", {
 *     name: "func_1",
 *     app: "default",
 *     agency: "test",
 *     description: "fuction test",
 *     handler: "test.handler",
 *     memorySize: 128,
 *     timeout: 3,
 *     runtime: "Python2.7",
 *     codeType: "inline",
 *     funcCode: "aW1wb3J0IGpzb24KZGVmIGhhbmRsZXIgKGV2ZW50LCBjb250ZXh0KToKICAgIG91dHB1dCA9ICdIZWxsbyBtZXNzYWdlOiAnICsganNvbi5kdW1wcyhldmVudCkKICAgIHJldHVybiBvdXRwdXQ=",
 * });
 * ```
 *
 * ### With text code
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sbercloud from "@pulumi/sbercloud";
 *
 * const f1 = new sbercloud.functiongraph.Function("f_1", {
 *     name: "func_1",
 *     app: "default",
 *     agency: "test",
 *     description: "fuction test",
 *     handler: "test.handler",
 *     memorySize: 128,
 *     timeout: 3,
 *     runtime: "Python2.7",
 *     codeType: "inline",
 *     funcCode: `# -*- coding:utf-8 -*-
 * import json
 * def handler (event, context):
 *     return {
 *         "statusCode": 200,
 *         "isBase64Encoded": False,
 *         "body": json.dumps(event),
 *         "headers": {
 *             "Content-Type": "application/json"
 *         }
 *     }
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * Functions can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import sbercloud:FunctionGraph/function:Function my-func 7117d38e-4c8f-4624-a505-bd96b97d024c
 * ```
 */
export class Function extends pulumi.CustomResource {
    /**
     * Get an existing Function resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionState, opts?: pulumi.CustomResourceOptions): Function {
        return new Function(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sbercloud:FunctionGraph/function:Function';

    /**
     * Returns true if the given object is an instance of Function.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Function {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Function.__pulumiType;
    }

    /**
     * Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
     */
    declare public readonly agency: pulumi.Output<string | undefined>;
    /**
     * Specifies the group to which the function belongs.
     */
    declare public readonly app: pulumi.Output<string | undefined>;
    /**
     * Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
     */
    declare public readonly appAgency: pulumi.Output<string>;
    /**
     * The KMS key ID for encrypting the function code.
     */
    declare public readonly codeEncryptKmsKeyId: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of a function file, This field is mandatory only when coeType is
     * set to jar or zip.
     */
    declare public readonly codeFilename: pulumi.Output<string>;
    /**
     * Specifies the function code type, which can be inline: inline code, zip: ZIP file,
     * jar: JAR file or java functions, obs: function code stored in an OBS bucket.
     */
    declare public readonly codeType: pulumi.Output<string>;
    /**
     * Specifies the code url. This parameter is mandatory when codeType is set to obs.
     */
    declare public readonly codeUrl: pulumi.Output<string | undefined>;
    /**
     * The number of concurrent requests of the function.
     */
    declare public readonly concurrencyNum: pulumi.Output<number>;
    /**
     * The custom image configuration of the function.
     */
    declare public readonly customImage: pulumi.Output<outputs.FunctionGraph.FunctionCustomImage>;
    /**
     * Specifies the dependencies of the function.
     */
    declare public readonly dependLists: pulumi.Output<string[]>;
    /**
     * Specifies the description of the function.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The private DNS configuration of the function network.
     */
    declare public readonly dnsList: pulumi.Output<string>;
    /**
     * Whether the authentication in the request header is enabled.
     */
    declare public readonly enableAuthInHeader: pulumi.Output<boolean | undefined>;
    /**
     * Whether the class isolation is enabled for the JAVA runtime functions.
     */
    declare public readonly enableClassIsolation: pulumi.Output<boolean | undefined>;
    /**
     * Whether the dynamic memory configuration is enabled.
     */
    declare public readonly enableDynamicMemory: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable the LTS log.
     */
    declare public readonly enableLtsLog: pulumi.Output<boolean | undefined>;
    /**
     * The key/value information defined to be encrypted for the function.
     */
    declare public readonly encryptedUserData: pulumi.Output<string | undefined>;
    /**
     * Specifies the enterprise project id of the function.
     * Changing this creates a new function.
     */
    declare public readonly enterpriseProjectId: pulumi.Output<string>;
    /**
     * The size of the function ephemeral storage.
     */
    declare public readonly ephemeralStorage: pulumi.Output<number>;
    /**
     * Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
     * and the code can be encoded using Base64 or just with the text code.
     */
    declare public readonly funcCode: pulumi.Output<string | undefined>;
    /**
     * Specifies the file system list. The `funcMounts` object structure is documented below.
     */
    declare public readonly funcMounts: pulumi.Output<outputs.FunctionGraph.FunctionFuncMount[]>;
    /**
     * The description of the function.
     */
    declare public readonly functiongraphVersion: pulumi.Output<string>;
    /**
     * The GPU memory size allocated to the function, in MByte (MB).
     */
    declare public readonly gpuMemory: pulumi.Output<number | undefined>;
    /**
     * The GPU type of the function.
     */
    declare public readonly gpuType: pulumi.Output<string | undefined>;
    /**
     * Specifies the entry point of the function.
     */
    declare public readonly handler: pulumi.Output<string>;
    /**
     * The heartbeat handler of the function.
     */
    declare public readonly heartbeatHandler: pulumi.Output<string | undefined>;
    /**
     * Specifies the initializer of the function.
     */
    declare public readonly initializerHandler: pulumi.Output<string>;
    /**
     * Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
     */
    declare public readonly initializerTimeout: pulumi.Output<number>;
    /**
     * Whether the function is a stateful function.
     */
    declare public readonly isStatefulFunction: pulumi.Output<boolean | undefined>;
    /**
     * The LTS group ID for collecting logs.
     */
    declare public readonly logGroupId: pulumi.Output<string>;
    /**
     * The LTS group name for collecting logs.
     */
    declare public readonly logGroupName: pulumi.Output<string>;
    /**
     * The LTS stream ID for collecting logs.
     */
    declare public readonly logStreamId: pulumi.Output<string>;
    /**
     * The LTS stream name for collecting logs.
     */
    declare public readonly logStreamName: pulumi.Output<string>;
    /**
     * The custom tags configuration that used to filter the LTS logs.
     */
    declare public readonly ltsCustomTag: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The script configuration value of this change is also the original value used for comparison with
     *  the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'.
     */
    declare public /*out*/ readonly ltsCustomTagOrigin: pulumi.Output<{[key: string]: string}>;
    /**
     * The maximum number of instances of the function.
     */
    declare public readonly maxInstanceNum: pulumi.Output<string>;
    /**
     * Specifies the memory size(MB) allocated to the function.
     */
    declare public readonly memorySize: pulumi.Output<number>;
    /**
     * Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
     */
    declare public readonly mountUserGroupId: pulumi.Output<number>;
    /**
     * Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
     */
    declare public readonly mountUserId: pulumi.Output<number>;
    /**
     * Specifies the name of the function.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The network configuration of the function.
     */
    declare public readonly networkController: pulumi.Output<outputs.FunctionGraph.FunctionNetworkController | undefined>;
    /**
     * Specifies the ID of subnet.
     */
    declare public readonly networkId: pulumi.Output<string | undefined>;
    /**
     * @deprecated use app instead
     */
    declare public readonly package: pulumi.Output<string | undefined>;
    /**
     * The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
     * CIDR blocks used by the service.
     */
    declare public readonly peeringCidr: pulumi.Output<string | undefined>;
    /**
     * The pre-stop handler of a function.
     */
    declare public readonly preStopHandler: pulumi.Output<string | undefined>;
    /**
     * The maximum duration that the function can be initialized.
     */
    declare public readonly preStopTimeout: pulumi.Output<number | undefined>;
    /**
     * Specifies the region in which to create the Function resource.
     * If omitted, the provider-level region will be used. Changing this creates a new Function resource.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The reserved instance policies of the function.
     */
    declare public readonly reservedInstances: pulumi.Output<outputs.FunctionGraph.FunctionReservedInstance[] | undefined>;
    /**
     * The restore hook handler of the function.
     */
    declare public readonly restoreHookHandler: pulumi.Output<string | undefined>;
    /**
     * The timeout of the function restore hook.
     */
    declare public readonly restoreHookTimeout: pulumi.Output<number | undefined>;
    /**
     * Specifies the environment for executing the function.
     */
    declare public readonly runtime: pulumi.Output<string>;
    /**
     * The key/value pairs to associate with the function.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the timeout interval of the function, ranges from 3s to 900s.
     */
    declare public readonly timeout: pulumi.Output<number>;
    /**
     * Uniform Resource Name
     */
    declare public /*out*/ readonly urn: pulumi.Output<string>;
    /**
     * The key/value information defined for the function.
     */
    declare public readonly userData: pulumi.Output<string | undefined>;
    /**
     * The KMS key ID for encrypting the user data.
     */
    declare public readonly userDataEncryptKmsKeyId: pulumi.Output<string | undefined>;
    /**
     * The version of the function
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;
    /**
     * The versions management of the function.
     */
    declare public readonly versions: pulumi.Output<outputs.FunctionGraph.FunctionVersion[] | undefined>;
    /**
     * Specifies the ID of VPC.
     */
    declare public readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * @deprecated use agency instead
     */
    declare public readonly xrole: pulumi.Output<string | undefined>;

    /**
     * Create a Function resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FunctionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FunctionArgs | FunctionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FunctionState | undefined;
            resourceInputs["agency"] = state?.agency;
            resourceInputs["app"] = state?.app;
            resourceInputs["appAgency"] = state?.appAgency;
            resourceInputs["codeEncryptKmsKeyId"] = state?.codeEncryptKmsKeyId;
            resourceInputs["codeFilename"] = state?.codeFilename;
            resourceInputs["codeType"] = state?.codeType;
            resourceInputs["codeUrl"] = state?.codeUrl;
            resourceInputs["concurrencyNum"] = state?.concurrencyNum;
            resourceInputs["customImage"] = state?.customImage;
            resourceInputs["dependLists"] = state?.dependLists;
            resourceInputs["description"] = state?.description;
            resourceInputs["dnsList"] = state?.dnsList;
            resourceInputs["enableAuthInHeader"] = state?.enableAuthInHeader;
            resourceInputs["enableClassIsolation"] = state?.enableClassIsolation;
            resourceInputs["enableDynamicMemory"] = state?.enableDynamicMemory;
            resourceInputs["enableLtsLog"] = state?.enableLtsLog;
            resourceInputs["encryptedUserData"] = state?.encryptedUserData;
            resourceInputs["enterpriseProjectId"] = state?.enterpriseProjectId;
            resourceInputs["ephemeralStorage"] = state?.ephemeralStorage;
            resourceInputs["funcCode"] = state?.funcCode;
            resourceInputs["funcMounts"] = state?.funcMounts;
            resourceInputs["functiongraphVersion"] = state?.functiongraphVersion;
            resourceInputs["gpuMemory"] = state?.gpuMemory;
            resourceInputs["gpuType"] = state?.gpuType;
            resourceInputs["handler"] = state?.handler;
            resourceInputs["heartbeatHandler"] = state?.heartbeatHandler;
            resourceInputs["initializerHandler"] = state?.initializerHandler;
            resourceInputs["initializerTimeout"] = state?.initializerTimeout;
            resourceInputs["isStatefulFunction"] = state?.isStatefulFunction;
            resourceInputs["logGroupId"] = state?.logGroupId;
            resourceInputs["logGroupName"] = state?.logGroupName;
            resourceInputs["logStreamId"] = state?.logStreamId;
            resourceInputs["logStreamName"] = state?.logStreamName;
            resourceInputs["ltsCustomTag"] = state?.ltsCustomTag;
            resourceInputs["ltsCustomTagOrigin"] = state?.ltsCustomTagOrigin;
            resourceInputs["maxInstanceNum"] = state?.maxInstanceNum;
            resourceInputs["memorySize"] = state?.memorySize;
            resourceInputs["mountUserGroupId"] = state?.mountUserGroupId;
            resourceInputs["mountUserId"] = state?.mountUserId;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkController"] = state?.networkController;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["package"] = state?.package;
            resourceInputs["peeringCidr"] = state?.peeringCidr;
            resourceInputs["preStopHandler"] = state?.preStopHandler;
            resourceInputs["preStopTimeout"] = state?.preStopTimeout;
            resourceInputs["region"] = state?.region;
            resourceInputs["reservedInstances"] = state?.reservedInstances;
            resourceInputs["restoreHookHandler"] = state?.restoreHookHandler;
            resourceInputs["restoreHookTimeout"] = state?.restoreHookTimeout;
            resourceInputs["runtime"] = state?.runtime;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["timeout"] = state?.timeout;
            resourceInputs["urn"] = state?.urn;
            resourceInputs["userData"] = state?.userData;
            resourceInputs["userDataEncryptKmsKeyId"] = state?.userDataEncryptKmsKeyId;
            resourceInputs["version"] = state?.version;
            resourceInputs["versions"] = state?.versions;
            resourceInputs["vpcId"] = state?.vpcId;
            resourceInputs["xrole"] = state?.xrole;
        } else {
            const args = argsOrState as FunctionArgs | undefined;
            if (args?.memorySize === undefined && !opts.urn) {
                throw new Error("Missing required property 'memorySize'");
            }
            if (args?.runtime === undefined && !opts.urn) {
                throw new Error("Missing required property 'runtime'");
            }
            if (args?.timeout === undefined && !opts.urn) {
                throw new Error("Missing required property 'timeout'");
            }
            resourceInputs["agency"] = args?.agency;
            resourceInputs["app"] = args?.app;
            resourceInputs["appAgency"] = args?.appAgency;
            resourceInputs["codeEncryptKmsKeyId"] = args?.codeEncryptKmsKeyId;
            resourceInputs["codeFilename"] = args?.codeFilename;
            resourceInputs["codeType"] = args?.codeType;
            resourceInputs["codeUrl"] = args?.codeUrl;
            resourceInputs["concurrencyNum"] = args?.concurrencyNum;
            resourceInputs["customImage"] = args?.customImage;
            resourceInputs["dependLists"] = args?.dependLists;
            resourceInputs["description"] = args?.description;
            resourceInputs["dnsList"] = args?.dnsList;
            resourceInputs["enableAuthInHeader"] = args?.enableAuthInHeader;
            resourceInputs["enableClassIsolation"] = args?.enableClassIsolation;
            resourceInputs["enableDynamicMemory"] = args?.enableDynamicMemory;
            resourceInputs["enableLtsLog"] = args?.enableLtsLog;
            resourceInputs["encryptedUserData"] = args?.encryptedUserData ? pulumi.secret(args.encryptedUserData) : undefined;
            resourceInputs["enterpriseProjectId"] = args?.enterpriseProjectId;
            resourceInputs["ephemeralStorage"] = args?.ephemeralStorage;
            resourceInputs["funcCode"] = args?.funcCode;
            resourceInputs["funcMounts"] = args?.funcMounts;
            resourceInputs["functiongraphVersion"] = args?.functiongraphVersion;
            resourceInputs["gpuMemory"] = args?.gpuMemory;
            resourceInputs["gpuType"] = args?.gpuType;
            resourceInputs["handler"] = args?.handler;
            resourceInputs["heartbeatHandler"] = args?.heartbeatHandler;
            resourceInputs["initializerHandler"] = args?.initializerHandler;
            resourceInputs["initializerTimeout"] = args?.initializerTimeout;
            resourceInputs["isStatefulFunction"] = args?.isStatefulFunction;
            resourceInputs["logGroupId"] = args?.logGroupId;
            resourceInputs["logGroupName"] = args?.logGroupName;
            resourceInputs["logStreamId"] = args?.logStreamId;
            resourceInputs["logStreamName"] = args?.logStreamName;
            resourceInputs["ltsCustomTag"] = args?.ltsCustomTag;
            resourceInputs["maxInstanceNum"] = args?.maxInstanceNum;
            resourceInputs["memorySize"] = args?.memorySize;
            resourceInputs["mountUserGroupId"] = args?.mountUserGroupId;
            resourceInputs["mountUserId"] = args?.mountUserId;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkController"] = args?.networkController;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["package"] = args?.package;
            resourceInputs["peeringCidr"] = args?.peeringCidr;
            resourceInputs["preStopHandler"] = args?.preStopHandler;
            resourceInputs["preStopTimeout"] = args?.preStopTimeout;
            resourceInputs["region"] = args?.region;
            resourceInputs["reservedInstances"] = args?.reservedInstances;
            resourceInputs["restoreHookHandler"] = args?.restoreHookHandler;
            resourceInputs["restoreHookTimeout"] = args?.restoreHookTimeout;
            resourceInputs["runtime"] = args?.runtime;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["timeout"] = args?.timeout;
            resourceInputs["userData"] = args?.userData;
            resourceInputs["userDataEncryptKmsKeyId"] = args?.userDataEncryptKmsKeyId;
            resourceInputs["versions"] = args?.versions;
            resourceInputs["vpcId"] = args?.vpcId;
            resourceInputs["xrole"] = args?.xrole;
            resourceInputs["ltsCustomTagOrigin"] = undefined /*out*/;
            resourceInputs["urn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["encryptedUserData"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Function.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Function resources.
 */
export interface FunctionState {
    /**
     * Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
     */
    agency?: pulumi.Input<string>;
    /**
     * Specifies the group to which the function belongs.
     */
    app?: pulumi.Input<string>;
    /**
     * Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
     */
    appAgency?: pulumi.Input<string>;
    /**
     * The KMS key ID for encrypting the function code.
     */
    codeEncryptKmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the name of a function file, This field is mandatory only when coeType is
     * set to jar or zip.
     */
    codeFilename?: pulumi.Input<string>;
    /**
     * Specifies the function code type, which can be inline: inline code, zip: ZIP file,
     * jar: JAR file or java functions, obs: function code stored in an OBS bucket.
     */
    codeType?: pulumi.Input<string>;
    /**
     * Specifies the code url. This parameter is mandatory when codeType is set to obs.
     */
    codeUrl?: pulumi.Input<string>;
    /**
     * The number of concurrent requests of the function.
     */
    concurrencyNum?: pulumi.Input<number>;
    /**
     * The custom image configuration of the function.
     */
    customImage?: pulumi.Input<inputs.FunctionGraph.FunctionCustomImage>;
    /**
     * Specifies the dependencies of the function.
     */
    dependLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the description of the function.
     */
    description?: pulumi.Input<string>;
    /**
     * The private DNS configuration of the function network.
     */
    dnsList?: pulumi.Input<string>;
    /**
     * Whether the authentication in the request header is enabled.
     */
    enableAuthInHeader?: pulumi.Input<boolean>;
    /**
     * Whether the class isolation is enabled for the JAVA runtime functions.
     */
    enableClassIsolation?: pulumi.Input<boolean>;
    /**
     * Whether the dynamic memory configuration is enabled.
     */
    enableDynamicMemory?: pulumi.Input<boolean>;
    /**
     * Whether to enable the LTS log.
     */
    enableLtsLog?: pulumi.Input<boolean>;
    /**
     * The key/value information defined to be encrypted for the function.
     */
    encryptedUserData?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the function.
     * Changing this creates a new function.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The size of the function ephemeral storage.
     */
    ephemeralStorage?: pulumi.Input<number>;
    /**
     * Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
     * and the code can be encoded using Base64 or just with the text code.
     */
    funcCode?: pulumi.Input<string>;
    /**
     * Specifies the file system list. The `funcMounts` object structure is documented below.
     */
    funcMounts?: pulumi.Input<pulumi.Input<inputs.FunctionGraph.FunctionFuncMount>[]>;
    /**
     * The description of the function.
     */
    functiongraphVersion?: pulumi.Input<string>;
    /**
     * The GPU memory size allocated to the function, in MByte (MB).
     */
    gpuMemory?: pulumi.Input<number>;
    /**
     * The GPU type of the function.
     */
    gpuType?: pulumi.Input<string>;
    /**
     * Specifies the entry point of the function.
     */
    handler?: pulumi.Input<string>;
    /**
     * The heartbeat handler of the function.
     */
    heartbeatHandler?: pulumi.Input<string>;
    /**
     * Specifies the initializer of the function.
     */
    initializerHandler?: pulumi.Input<string>;
    /**
     * Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
     */
    initializerTimeout?: pulumi.Input<number>;
    /**
     * Whether the function is a stateful function.
     */
    isStatefulFunction?: pulumi.Input<boolean>;
    /**
     * The LTS group ID for collecting logs.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * The LTS group name for collecting logs.
     */
    logGroupName?: pulumi.Input<string>;
    /**
     * The LTS stream ID for collecting logs.
     */
    logStreamId?: pulumi.Input<string>;
    /**
     * The LTS stream name for collecting logs.
     */
    logStreamName?: pulumi.Input<string>;
    /**
     * The custom tags configuration that used to filter the LTS logs.
     */
    ltsCustomTag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The script configuration value of this change is also the original value used for comparison with
     *  the new value next time the change is made. The corresponding parameter name is 'lts_custom_tag'.
     */
    ltsCustomTagOrigin?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The maximum number of instances of the function.
     */
    maxInstanceNum?: pulumi.Input<string>;
    /**
     * Specifies the memory size(MB) allocated to the function.
     */
    memorySize?: pulumi.Input<number>;
    /**
     * Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
     */
    mountUserGroupId?: pulumi.Input<number>;
    /**
     * Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
     */
    mountUserId?: pulumi.Input<number>;
    /**
     * Specifies the name of the function.
     */
    name?: pulumi.Input<string>;
    /**
     * The network configuration of the function.
     */
    networkController?: pulumi.Input<inputs.FunctionGraph.FunctionNetworkController>;
    /**
     * Specifies the ID of subnet.
     */
    networkId?: pulumi.Input<string>;
    /**
     * @deprecated use app instead
     */
    package?: pulumi.Input<string>;
    /**
     * The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
     * CIDR blocks used by the service.
     */
    peeringCidr?: pulumi.Input<string>;
    /**
     * The pre-stop handler of a function.
     */
    preStopHandler?: pulumi.Input<string>;
    /**
     * The maximum duration that the function can be initialized.
     */
    preStopTimeout?: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the Function resource.
     * If omitted, the provider-level region will be used. Changing this creates a new Function resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The reserved instance policies of the function.
     */
    reservedInstances?: pulumi.Input<pulumi.Input<inputs.FunctionGraph.FunctionReservedInstance>[]>;
    /**
     * The restore hook handler of the function.
     */
    restoreHookHandler?: pulumi.Input<string>;
    /**
     * The timeout of the function restore hook.
     */
    restoreHookTimeout?: pulumi.Input<number>;
    /**
     * Specifies the environment for executing the function.
     */
    runtime?: pulumi.Input<string>;
    /**
     * The key/value pairs to associate with the function.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the timeout interval of the function, ranges from 3s to 900s.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Uniform Resource Name
     */
    urn?: pulumi.Input<string>;
    /**
     * The key/value information defined for the function.
     */
    userData?: pulumi.Input<string>;
    /**
     * The KMS key ID for encrypting the user data.
     */
    userDataEncryptKmsKeyId?: pulumi.Input<string>;
    /**
     * The version of the function
     */
    version?: pulumi.Input<string>;
    /**
     * The versions management of the function.
     */
    versions?: pulumi.Input<pulumi.Input<inputs.FunctionGraph.FunctionVersion>[]>;
    /**
     * Specifies the ID of VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * @deprecated use agency instead
     */
    xrole?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Function resource.
 */
export interface FunctionArgs {
    /**
     * Specifies the agency. This parameter is mandatory if the function needs to access other cloud services.
     */
    agency?: pulumi.Input<string>;
    /**
     * Specifies the group to which the function belongs.
     */
    app?: pulumi.Input<string>;
    /**
     * Specifies An execution agency enables you to obtain a token or an AK/SK for accessing other cloud services.
     */
    appAgency?: pulumi.Input<string>;
    /**
     * The KMS key ID for encrypting the function code.
     */
    codeEncryptKmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the name of a function file, This field is mandatory only when coeType is
     * set to jar or zip.
     */
    codeFilename?: pulumi.Input<string>;
    /**
     * Specifies the function code type, which can be inline: inline code, zip: ZIP file,
     * jar: JAR file or java functions, obs: function code stored in an OBS bucket.
     */
    codeType?: pulumi.Input<string>;
    /**
     * Specifies the code url. This parameter is mandatory when codeType is set to obs.
     */
    codeUrl?: pulumi.Input<string>;
    /**
     * The number of concurrent requests of the function.
     */
    concurrencyNum?: pulumi.Input<number>;
    /**
     * The custom image configuration of the function.
     */
    customImage?: pulumi.Input<inputs.FunctionGraph.FunctionCustomImage>;
    /**
     * Specifies the dependencies of the function.
     */
    dependLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the description of the function.
     */
    description?: pulumi.Input<string>;
    /**
     * The private DNS configuration of the function network.
     */
    dnsList?: pulumi.Input<string>;
    /**
     * Whether the authentication in the request header is enabled.
     */
    enableAuthInHeader?: pulumi.Input<boolean>;
    /**
     * Whether the class isolation is enabled for the JAVA runtime functions.
     */
    enableClassIsolation?: pulumi.Input<boolean>;
    /**
     * Whether the dynamic memory configuration is enabled.
     */
    enableDynamicMemory?: pulumi.Input<boolean>;
    /**
     * Whether to enable the LTS log.
     */
    enableLtsLog?: pulumi.Input<boolean>;
    /**
     * The key/value information defined to be encrypted for the function.
     */
    encryptedUserData?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id of the function.
     * Changing this creates a new function.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The size of the function ephemeral storage.
     */
    ephemeralStorage?: pulumi.Input<number>;
    /**
     * Specifies the function code. When codeType is set to inline, zip, or jar, this parameter is mandatory,
     * and the code can be encoded using Base64 or just with the text code.
     */
    funcCode?: pulumi.Input<string>;
    /**
     * Specifies the file system list. The `funcMounts` object structure is documented below.
     */
    funcMounts?: pulumi.Input<pulumi.Input<inputs.FunctionGraph.FunctionFuncMount>[]>;
    /**
     * The description of the function.
     */
    functiongraphVersion?: pulumi.Input<string>;
    /**
     * The GPU memory size allocated to the function, in MByte (MB).
     */
    gpuMemory?: pulumi.Input<number>;
    /**
     * The GPU type of the function.
     */
    gpuType?: pulumi.Input<string>;
    /**
     * Specifies the entry point of the function.
     */
    handler?: pulumi.Input<string>;
    /**
     * The heartbeat handler of the function.
     */
    heartbeatHandler?: pulumi.Input<string>;
    /**
     * Specifies the initializer of the function.
     */
    initializerHandler?: pulumi.Input<string>;
    /**
     * Specifies the maximum duration the function can be initialized. Value range: 1s to 300s.
     */
    initializerTimeout?: pulumi.Input<number>;
    /**
     * Whether the function is a stateful function.
     */
    isStatefulFunction?: pulumi.Input<boolean>;
    /**
     * The LTS group ID for collecting logs.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * The LTS group name for collecting logs.
     */
    logGroupName?: pulumi.Input<string>;
    /**
     * The LTS stream ID for collecting logs.
     */
    logStreamId?: pulumi.Input<string>;
    /**
     * The LTS stream name for collecting logs.
     */
    logStreamName?: pulumi.Input<string>;
    /**
     * The custom tags configuration that used to filter the LTS logs.
     */
    ltsCustomTag?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The maximum number of instances of the function.
     */
    maxInstanceNum?: pulumi.Input<string>;
    /**
     * Specifies the memory size(MB) allocated to the function.
     */
    memorySize: pulumi.Input<number>;
    /**
     * Specifies the user group ID, a non-0 integer from –1 to 65534. Default to -1.
     */
    mountUserGroupId?: pulumi.Input<number>;
    /**
     * Specifies the user ID, a non-0 integer from –1 to 65534. Default to -1.
     */
    mountUserId?: pulumi.Input<number>;
    /**
     * Specifies the name of the function.
     */
    name?: pulumi.Input<string>;
    /**
     * The network configuration of the function.
     */
    networkController?: pulumi.Input<inputs.FunctionGraph.FunctionNetworkController>;
    /**
     * Specifies the ID of subnet.
     */
    networkId?: pulumi.Input<string>;
    /**
     * @deprecated use app instead
     */
    package?: pulumi.Input<string>;
    /**
     * The VPC CIDR blocks used in the function code to detect whether it conflicts with the VPC
     * CIDR blocks used by the service.
     */
    peeringCidr?: pulumi.Input<string>;
    /**
     * The pre-stop handler of a function.
     */
    preStopHandler?: pulumi.Input<string>;
    /**
     * The maximum duration that the function can be initialized.
     */
    preStopTimeout?: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the Function resource.
     * If omitted, the provider-level region will be used. Changing this creates a new Function resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The reserved instance policies of the function.
     */
    reservedInstances?: pulumi.Input<pulumi.Input<inputs.FunctionGraph.FunctionReservedInstance>[]>;
    /**
     * The restore hook handler of the function.
     */
    restoreHookHandler?: pulumi.Input<string>;
    /**
     * The timeout of the function restore hook.
     */
    restoreHookTimeout?: pulumi.Input<number>;
    /**
     * Specifies the environment for executing the function.
     */
    runtime: pulumi.Input<string>;
    /**
     * The key/value pairs to associate with the function.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the timeout interval of the function, ranges from 3s to 900s.
     */
    timeout: pulumi.Input<number>;
    /**
     * The key/value information defined for the function.
     */
    userData?: pulumi.Input<string>;
    /**
     * The KMS key ID for encrypting the user data.
     */
    userDataEncryptKmsKeyId?: pulumi.Input<string>;
    /**
     * The versions management of the function.
     */
    versions?: pulumi.Input<pulumi.Input<inputs.FunctionGraph.FunctionVersion>[]>;
    /**
     * Specifies the ID of VPC.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * @deprecated use agency instead
     */
    xrole?: pulumi.Input<string>;
}
