// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/cloudru/internal"
)

func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("sbercloud:Ecs/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	EnterpriseProjectId *string           `pulumi:"enterpriseProjectId"`
	FixedIpV4           *string           `pulumi:"fixedIpV4"`
	FlavorId            *string           `pulumi:"flavorId"`
	InstanceId          *string           `pulumi:"instanceId"`
	Name                *string           `pulumi:"name"`
	Region              *string           `pulumi:"region"`
	Tags                map[string]string `pulumi:"tags"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	AvailabilityZone    string  `pulumi:"availabilityZone"`
	ChargingMode        string  `pulumi:"chargingMode"`
	EnterpriseProjectId string  `pulumi:"enterpriseProjectId"`
	ExpiredTime         string  `pulumi:"expiredTime"`
	FixedIpV4           *string `pulumi:"fixedIpV4"`
	FlavorId            string  `pulumi:"flavorId"`
	FlavorName          string  `pulumi:"flavorName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                      `pulumi:"id"`
	ImageId          string                      `pulumi:"imageId"`
	ImageName        string                      `pulumi:"imageName"`
	InstanceId       *string                     `pulumi:"instanceId"`
	KeyPair          string                      `pulumi:"keyPair"`
	Name             string                      `pulumi:"name"`
	Networks         []GetInstanceNetwork        `pulumi:"networks"`
	PublicIp         string                      `pulumi:"publicIp"`
	Region           string                      `pulumi:"region"`
	SchedulerHints   []GetInstanceSchedulerHint  `pulumi:"schedulerHints"`
	SecurityGroupIds []string                    `pulumi:"securityGroupIds"`
	SecurityGroups   []string                    `pulumi:"securityGroups"`
	Status           string                      `pulumi:"status"`
	SystemDiskId     string                      `pulumi:"systemDiskId"`
	Tags             map[string]string           `pulumi:"tags"`
	UserData         string                      `pulumi:"userData"`
	VolumeAttacheds  []GetInstanceVolumeAttached `pulumi:"volumeAttacheds"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceResultOutput, error) {
			args := v.(LookupInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Ecs/getInstance:getInstance", args, LookupInstanceResultOutput{}, options).(LookupInstanceResultOutput), nil
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	FixedIpV4           pulumi.StringPtrInput `pulumi:"fixedIpV4"`
	FlavorId            pulumi.StringPtrInput `pulumi:"flavorId"`
	InstanceId          pulumi.StringPtrInput `pulumi:"instanceId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	Region              pulumi.StringPtrInput `pulumi:"region"`
	Tags                pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ChargingMode }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) FixedIpV4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.FixedIpV4 }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.FlavorId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) FlavorName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.FlavorName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o LookupInstanceResultOutput) KeyPair() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.KeyPair }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Networks() GetInstanceNetworkArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceNetwork { return v.Networks }).(GetInstanceNetworkArrayOutput)
}

func (o LookupInstanceResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) SchedulerHints() GetInstanceSchedulerHintArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceSchedulerHint { return v.SchedulerHints }).(GetInstanceSchedulerHintArrayOutput)
}

func (o LookupInstanceResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupInstanceResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LookupInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) SystemDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.SystemDiskId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UserData }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) VolumeAttacheds() GetInstanceVolumeAttachedArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceVolumeAttached { return v.VolumeAttacheds }).(GetInstanceVolumeAttachedArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
