// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cbr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/internal"
)

// Use this data source to get available CBR vaults within Sbercloud.
//
// ## Example Usage
//
// ### Get vaults for all server type
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sbercloud-terraform/pulumi-cloudru/sdk/go/sbercloud/cbr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cbr.GetVaults(ctx, &cbr.GetVaultsArgs{
//				Type: pulumi.StringRef("server"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVaults(ctx *pulumi.Context, args *GetVaultsArgs, opts ...pulumi.InvokeOption) (*GetVaultsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVaultsResult
	err := ctx.Invoke("sbercloud:Cbr/getVaults:getVaults", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVaults.
type GetVaultsArgs struct {
	// Specifies whether to enable automatic expansion of the backup protection
	// type vault. Default to **false**.
	AutoExpandEnabled *bool `pulumi:"autoExpandEnabled"`
	// Specifies the backup specifications.
	// The value is crashConsistent by default (crash consistent backup).
	//
	// Only server type vaults support application consistent.
	ConsistentLevel *string `pulumi:"consistentLevel"`
	// Specifies a unique ID in UUID format of enterprise project.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies a unique name of the CBR vault. This parameter can contain a maximum of 64
	// characters, which may consist of letters, digits, underscores(_) and hyphens (-).
	Name *string `pulumi:"name"`
	// Specifies a policy to associate with the CBR vault.
	PolicyId *string `pulumi:"policyId"`
	// Specifies the protection type of the CBR vault.
	// The valid value is **backup**.
	ProtectionType *string `pulumi:"protectionType"`
	// Specifies the region in which to query the CBR vaults.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the vault sapacity, in GB. The valid value range is `1` to `10,485,760`.
	Size *int `pulumi:"size"`
	// Specifies the CBR vault status, including **available**, **lock**, **frozen** and **error**.
	Status *string `pulumi:"status"`
	// Specifies the object type of the CBR vault. The vaild values are as follows:
	// + **server** (Cloud Servers)
	// + **disk** (EVS Disks)
	// + **turbo** (SFS Turbo file systems)
	Type *string `pulumi:"type"`
}

// A collection of values returned by getVaults.
type GetVaultsResult struct {
	// Whether to enable automatic expansion of the backup protection type vault.
	AutoExpandEnabled *bool `pulumi:"autoExpandEnabled"`
	// The backup specifications.
	ConsistentLevel *string `pulumi:"consistentLevel"`
	// The enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The CBR vault name.
	Name *string `pulumi:"name"`
	// The policy associated with the CBR vault.
	PolicyId *string `pulumi:"policyId"`
	// The protection type of the CBR vault.
	ProtectionType *string `pulumi:"protectionType"`
	Region         *string `pulumi:"region"`
	// The vault capacity, in GB.
	Size *int `pulumi:"size"`
	// The vault status.
	Status *string `pulumi:"status"`
	// The object type of the CBR vault.
	Type *string `pulumi:"type"`
	// List of CBR vault details. The object structure of each CBR vault is documented below.
	Vaults []GetVaultsVault `pulumi:"vaults"`
}

func GetVaultsOutput(ctx *pulumi.Context, args GetVaultsOutputArgs, opts ...pulumi.InvokeOption) GetVaultsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetVaultsResultOutput, error) {
			args := v.(GetVaultsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("sbercloud:Cbr/getVaults:getVaults", args, GetVaultsResultOutput{}, options).(GetVaultsResultOutput), nil
		}).(GetVaultsResultOutput)
}

// A collection of arguments for invoking getVaults.
type GetVaultsOutputArgs struct {
	// Specifies whether to enable automatic expansion of the backup protection
	// type vault. Default to **false**.
	AutoExpandEnabled pulumi.BoolPtrInput `pulumi:"autoExpandEnabled"`
	// Specifies the backup specifications.
	// The value is crashConsistent by default (crash consistent backup).
	//
	// Only server type vaults support application consistent.
	ConsistentLevel pulumi.StringPtrInput `pulumi:"consistentLevel"`
	// Specifies a unique ID in UUID format of enterprise project.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies a unique name of the CBR vault. This parameter can contain a maximum of 64
	// characters, which may consist of letters, digits, underscores(_) and hyphens (-).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies a policy to associate with the CBR vault.
	PolicyId pulumi.StringPtrInput `pulumi:"policyId"`
	// Specifies the protection type of the CBR vault.
	// The valid value is **backup**.
	ProtectionType pulumi.StringPtrInput `pulumi:"protectionType"`
	// Specifies the region in which to query the CBR vaults.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the vault sapacity, in GB. The valid value range is `1` to `10,485,760`.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// Specifies the CBR vault status, including **available**, **lock**, **frozen** and **error**.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Specifies the object type of the CBR vault. The vaild values are as follows:
	// + **server** (Cloud Servers)
	// + **disk** (EVS Disks)
	// + **turbo** (SFS Turbo file systems)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetVaultsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsArgs)(nil)).Elem()
}

// A collection of values returned by getVaults.
type GetVaultsResultOutput struct{ *pulumi.OutputState }

func (GetVaultsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVaultsResult)(nil)).Elem()
}

func (o GetVaultsResultOutput) ToGetVaultsResultOutput() GetVaultsResultOutput {
	return o
}

func (o GetVaultsResultOutput) ToGetVaultsResultOutputWithContext(ctx context.Context) GetVaultsResultOutput {
	return o
}

// Whether to enable automatic expansion of the backup protection type vault.
func (o GetVaultsResultOutput) AutoExpandEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *bool { return v.AutoExpandEnabled }).(pulumi.BoolPtrOutput)
}

// The backup specifications.
func (o GetVaultsResultOutput) ConsistentLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.ConsistentLevel }).(pulumi.StringPtrOutput)
}

// The enterprise project ID.
func (o GetVaultsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVaultsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVaultsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The CBR vault name.
func (o GetVaultsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The policy associated with the CBR vault.
func (o GetVaultsResultOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The protection type of the CBR vault.
func (o GetVaultsResultOutput) ProtectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.ProtectionType }).(pulumi.StringPtrOutput)
}

func (o GetVaultsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The vault capacity, in GB.
func (o GetVaultsResultOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The vault status.
func (o GetVaultsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The object type of the CBR vault.
func (o GetVaultsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVaultsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// List of CBR vault details. The object structure of each CBR vault is documented below.
func (o GetVaultsResultOutput) Vaults() GetVaultsVaultArrayOutput {
	return o.ApplyT(func(v GetVaultsResult) []GetVaultsVault { return v.Vaults }).(GetVaultsVaultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVaultsResultOutput{})
}
